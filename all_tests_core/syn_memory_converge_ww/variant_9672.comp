#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), sqrt(cos(0.0)), 0.0, 0.0))))), 1.0, 1.0, 0.0, 1.0, 0.0))))) > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec4(bvec3(bvec2(false, true), true), true))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))))))), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, false || (true))), bvec2(bvec3(bvec2(false, true), true))), true)))), true, true, true)))) || false)))), bool(bvec3(! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false), false, true)))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true)))), true, true, true)))) || false)))), ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true)))), true, true, true)))) || false))))) || false), bool(bvec3(! (_GLF_DEAD(false)), false, true)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true), false)))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true)))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true))), true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true))), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true))), true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true))), true)))), false))))), true, true)))), true, true, true)))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))), bool(bvec3(! (_GLF_DEAD(false)), false, true))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true), false)))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true))), true)))), true, true, true)))) || false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true), false)))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true))), true))))))), true, true, true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true))), true))))))), true, true, true))))), (! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true))), true))))))), true, true, true)))))) || false))) || false)))))), bool(bvec3(! (_GLF_DEAD(false)), false, true))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true), false)))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true))), true)))), true, true, true)))) || false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true), false)))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true))), true))))))), true, true, true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true))), true))))))), true, true, true))))), (! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true))), true))))))), true, true, true)))))) || false))) || false)))))), bool(bvec3(! (_GLF_DEAD(false)), false, true))))), (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true), false)))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true))), true)))), true, true, true)))) || false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true), false)))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, true)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(false, true)))), false, true)))))), true))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, true)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(false, true)))), false, true)))))), true))), true), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, true)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(false, true)))), false, true)))))), true))), true), true))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, true)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(false, true)))), false, true)))))), true))), true), true))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true))), true))))))), true, true, true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true)), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true)), true, true)), true, true)))))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true))), true))))))), true, true, true))))), (! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true))), true))))))), true, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true))), true))))))), true, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))) || false))) || false)))))), bool(bvec3(! (_GLF_DEAD(false)), false, true)))))) && true)))))), ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(false || (bool(bool(true))), false || (false || (bool(bool(true)))))))) && true)))), true)))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), true), bvec2(bvec3(bvec2(false, true), true))), true))))))), true, true, true)))) || false)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))), true))))), true))))) && true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(-5.5, 1698.3634, -8.9, 1.6).w), _GLF_FUZZED(-3996.1281)), bvec2(false, false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))) - vec2(0.0, 0.0)))).x > injectionSwitch.y)), true)))))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))))
      {
      }
     else
      {
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1389.2415) : injectionSwitch.x)) > injectionSwitch.y))))))) && true))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = (-25708 & int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          barrier();
         continue;
        }
       for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) | (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, int(ivec2(1, 0))), 1, _GLF_IDENTITY(0, min(0, 0))))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY((int(7)), (false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), 1 * (_GLF_FUZZED(_injected_loop_counter)))) + 0) : _GLF_IDENTITY((int(7)), (true ? (int(7)) : _GLF_FUZZED(_injected_loop_counter))))) / 1))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (false ? _GLF_FUZZED(_injected_loop_counter) : int(7)))))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_DEAD(false))
          break;
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false)))) || false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0))))))))
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             barrier();
            }
          }
         break;
        }
       if(_GLF_DEAD(false))
        break;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = ((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(9896) : 7))), _GLF_IDENTITY(int(7), 0 ^ _GLF_IDENTITY((int(7)), ((int(7))) / 1)))) << _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | _GLF_IDENTITY((_injected_loop_counter), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(atomicExchange(_injected_loop_counter, -14494)) : _GLF_IDENTITY((_injected_loop_counter), 0 + ((_injected_loop_counter))))))) | (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))) != _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, ~ _GLF_IDENTITY((~ (2)), ((~ (2))) ^ (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, int(ivec2(_GLF_IDENTITY(7, (7) << (1 ^ 1)), 0)))), int(7)))))), _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY((int(2)), 0 | ((int(2)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((int(2)), 0 | ((int(2))))), min(~ (_GLF_IDENTITY((int(2)), 0 | ((int(2))))), ~ (_GLF_IDENTITY((int(2)), 0 | ((int(2))))))))) + 0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), int(2)), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, ~ (~ (2)))), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), 0 | ((int(2)))) + 0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << _GLF_IDENTITY(0, (0 ^ _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), ~ (~ (~ (0))))))) + (0))), int(2))) | 0)), _GLF_IDENTITY((((_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + 0)), (false ? _GLF_FUZZED(93002) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + 0)), ~ (~ (_GLF_IDENTITY(1, 0 | (1)) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + 0))))), ~ (~ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + 0))))), min(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + 0)), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + 0)))))), _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1))) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, min(2, 2)), 2))), _GLF_IDENTITY(int(2), (int(2)) + _GLF_IDENTITY(0, (0) | 0)))), 0 | ((_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 | (1))))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ((int(2))) | (_GLF_IDENTITY((int(2)), ~ (~ ((int(2))))))) + _GLF_IDENTITY(0, (0) | 0)))))) / 1)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, 1 * (_GLF_IDENTITY(2, (2) / 1)))), _GLF_IDENTITY(int(2), max(_GLF_IDENTITY(int(2), min(int(2), int(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 0, 1)))))))), int(2)))))), 0 + ((((_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + 0)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + 0)), (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + 0))) - 0))), (false ? _GLF_IDENTITY(_GLF_FUZZED(93002), (_GLF_FUZZED(93002)) + 0) : _GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + 0)), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + 0))) | (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + 0)), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + 0))) | (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + 0)))))), min(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + 0)), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + 0)))))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + _GLF_IDENTITY(0, max(0, 0))))) / 1)) >> _GLF_IDENTITY(int(2), int(2)))))) / (1 & 1)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + 0))) >> _GLF_IDENTITY(int(2), int(2))), (((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), min(_GLF_IDENTITY(int(2), (int(2)) >> (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), (int(1)) * (1 ^ 0)), int(1), int(1))), int(1)))), int(2))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(2), min(_GLF_IDENTITY(int(2), (int(2)) >> (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), (int(1)) * (1 ^ 0)), int(1), int(1))), int(1)))), int(2))), 0, 0, 0), (ivec4(_GLF_IDENTITY(int(2), min(_GLF_IDENTITY(int(2), (int(2)) >> (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), (int(1)) * (1 ^ 0)), int(1), int(1))), int(1)))), int(2))), 0, 0, 0)) - ivec4(0, 0, 0, 0))))) + 0))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) >> 0)) * 1), clamp(_GLF_IDENTITY(2, clamp(2, 2, 2)), _GLF_IDENTITY(2, (2) - _GLF_IDENTITY(0, (0) ^ 0)), _GLF_IDENTITY(2, ~ (~ (2))))))))) / (_GLF_IDENTITY(1, (1) >> int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0))))))) & _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) - 0), 1)))), (true ? _GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), int(int((int(2))))) + 0)), min(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) + 0), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(2, min(2, 2))), (int(2)) + 0) : _GLF_FUZZED(-70745)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + 0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), _GLF_IDENTITY(int(2), (int(2)) + _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))) >> (0 << _GLF_IDENTITY(int(0), int(0)))))) : _GLF_FUZZED(_injected_loop_counter)))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))), _GLF_IDENTITY(((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), (int(2)) | 0), int(2))), (int(2)) + 0))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) << 0), 1, 1)))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), (int(2)) + 0)), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(2, 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0), (ivec4(2, 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0)) >> ivec4(0, 0, 0, 0))), clamp(int(_GLF_IDENTITY(ivec4(2, 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0), (ivec4(2, 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0)) >> ivec4(0, 0, 0, 0))), int(_GLF_IDENTITY(ivec4(2, 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0), (ivec4(2, 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0)) >> ivec4(0, 0, 0, 0))), int(_GLF_IDENTITY(ivec4(2, 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0), (ivec4(2, 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0)) >> ivec4(0, 0, 0, 0))))))))), (int(2)) + 0))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), 1 * (_GLF_IDENTITY(int(2), (int(2)) | (int(2))))), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), _GLF_IDENTITY((_GLF_IDENTITY(int(2), 0 + (int(2)))), max(_GLF_IDENTITY((int(2)), ((int(2))) >> 0), _GLF_IDENTITY((int(_GLF_IDENTITY(2, (2) ^ 0))), ((int(2))) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))))) + 0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 1), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), _GLF_IDENTITY((int(2)) + 0, int(_GLF_IDENTITY(ivec2((int(2)) + 0, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(length(vec3(36.83, -9.0, -41.60))) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), ivec2(ivec4(ivec2((int(2)) + 0, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))))), 1, 1)))))))), ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), (int(2)) + 0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 1))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) * 1)))))), max(((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), (int(2)) | 0), int(2))), (int(2)) + 0))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) << 0), 1, 1)))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), (int(2)) + 0)), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(2, 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0), (ivec4(2, 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0)) >> ivec4(0, 0, 0, 0))), clamp(int(_GLF_IDENTITY(ivec4(2, 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0), (ivec4(2, 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0)) >> ivec4(0, 0, 0, 0))), int(_GLF_IDENTITY(ivec4(2, 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0), (ivec4(2, 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0)) >> ivec4(0, 0, 0, 0))), int(_GLF_IDENTITY(ivec4(2, 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0), (ivec4(2, 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0)) >> ivec4(0, 0, 0, 0))))))))), (int(2)) + 0))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), 1 * (_GLF_IDENTITY(int(2), (int(2)) | (int(2))))), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), _GLF_IDENTITY((_GLF_IDENTITY(int(2), 0 + (int(2)))), max(_GLF_IDENTITY((int(2)), ((int(2))) >> 0), _GLF_IDENTITY((int(_GLF_IDENTITY(2, (2) ^ 0))), ((int(2))) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))))) + 0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 1), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), _GLF_IDENTITY((int(2)) + 0, int(_GLF_IDENTITY(ivec2((int(2)) + 0, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(length(vec3(36.83, -9.0, -41.60))) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), ivec2(ivec4(ivec2((int(2)) + 0, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))))), 1, 1)))))))), ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), (int(2)) + 0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 1))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) * 1)))))), ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), (int(2)) | 0), int(2))), (int(2)) + 0))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) << 0), 1, 1)))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), (int(2)) + 0)), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(2, 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0), (ivec4(2, 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0)) >> ivec4(0, 0, 0, 0))), clamp(int(_GLF_IDENTITY(ivec4(2, 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0), (ivec4(2, 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0)) >> ivec4(0, 0, 0, 0))), int(_GLF_IDENTITY(ivec4(2, 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0), (ivec4(2, 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0)) >> ivec4(0, 0, 0, 0))), int(_GLF_IDENTITY(ivec4(2, 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0), (ivec4(2, 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0)) >> ivec4(0, 0, 0, 0))))))))), (int(2)) + 0))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), 1 * (_GLF_IDENTITY(int(2), (int(2)) | (int(2))))), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), _GLF_IDENTITY((_GLF_IDENTITY(int(2), 0 + (int(2)))), max(_GLF_IDENTITY((int(2)), ((int(2))) >> 0), _GLF_IDENTITY((int(_GLF_IDENTITY(2, (2) ^ 0))), ((int(2))) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))))) + 0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 1), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), _GLF_IDENTITY((int(2)) + 0, int(_GLF_IDENTITY(ivec2((int(2)) + 0, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(length(vec3(36.83, -9.0, -41.60))) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), ivec2(ivec4(ivec2((int(2)) + 0, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))))), 1, 1)))))))), ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), (int(2)) + 0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 1))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) * 1)))))))) / (1 & 1)) : _GLF_FUZZED(-70547))), min(_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) + 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) + 0), min(_GLF_IDENTITY(int(2), (int(2)) + 0), _GLF_IDENTITY(int(2), (int(2)) + 0)))) + int(_GLF_ZERO(0.0, injectionSwitch.x))))) >> _GLF_IDENTITY(int(2), int(2))), (((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), (_GLF_IDENTITY(int(2), min(_GLF_IDENTITY(int(2), (int(2)) >> (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), (int(1)) * (1 ^ 0)), int(1), int(1))), int(1)))), int(2)))) + 0))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, clamp(2, 2, 2)), _GLF_IDENTITY(2, (2) - 0), _GLF_IDENTITY(2, ~ (~ (2))))))))) / (_GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) & 1)), (true ? _GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), int(int((int(2))))) + 0)), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 | (int(2))), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) + 0), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(2, min(2, 2))), (int(2)) + 0) : _GLF_FUZZED(-70745)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + 0)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))) || (injectionSwitch.x < injectionSwitch.y)))) ? 1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), _GLF_IDENTITY(int(2), (int(2)) + 0)) : _GLF_FUZZED(_injected_loop_counter)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2)))), (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))) | (1 ^ 1))), ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(_GLF_IDENTITY(int(2), (int(2)) | 0), int(2))), (int(2)) + 0))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) << 0), 1, 1)))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), (int(2)) + 0)), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), (int(2)) + 0))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), _GLF_IDENTITY((_GLF_IDENTITY(int(2), 0 + (int(2)))), max(_GLF_IDENTITY((int(2)), (_GLF_IDENTITY((int(2)), 0 ^ ((int(2))))) >> 0), _GLF_IDENTITY((int(2)), ((int(2))) << 0))) + 0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 1), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), _GLF_IDENTITY((int(2)) + 0, int(_GLF_IDENTITY(ivec2((int(2)) + 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ivec2(ivec4(ivec2((int(2)) + 0, int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(8.8))))), 1, 1)))))))), ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), (int(2)) + 0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 1))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) * 1)))))) / (1 & 1)) : _GLF_FUZZED(-70547))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + 0))) >> _GLF_IDENTITY(int(2), int(2))), (((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), min(_GLF_IDENTITY(int(2), (int(2)) >> (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), (int(_GLF_IDENTITY(1, (1) ^ 0))) * (1 ^ 0)), int(1), int(1))), int(1)))), int(2)))) + 0))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, clamp(2, 2, 2)), _GLF_IDENTITY(2, (2) - 0), _GLF_IDENTITY(2, ~ (~ (2))))))))) / (_GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) & 1)), (true ? _GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), int(_GLF_IDENTITY(int((int(2))), min(int((int(2))), _GLF_IDENTITY(int((int(2))), min(int((int(2))), _GLF_IDENTITY(int((int(2))), (int((int(2)))) | 0))))))) + 0)), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << (1 ^ 1)), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) + 0), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), (true ? _GLF_IDENTITY(2, min(2, 2)) : _GLF_FUZZED(7820)))), (int(2)) + 0) : _GLF_FUZZED(-70745)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + 0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), _GLF_IDENTITY(int(2), (int(2)) + 0)) : _GLF_FUZZED(_injected_loop_counter)))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))), ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), max(_GLF_IDENTITY((int(2)), ((int(2))) - 0), (int(2)))) | 0), int(2))), (int(2)) + 0))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) << 0), 1, 1)))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), (int(2)) + 0)), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), (int(2)) + 0))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(_GLF_IDENTITY(2, 0 ^ (2))), int(2))), _GLF_IDENTITY((_GLF_IDENTITY(int(2), 0 + (int(2)))), max(_GLF_IDENTITY((_GLF_IDENTITY(int(2), int(ivec3(_GLF_IDENTITY(int(2), (int(2)) - 0), 1, 1)))), ((int(2))) >> 0), _GLF_IDENTITY((int(2)), ((int(2))) << 0))) + 0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 1), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, min(2, 2))), max(int(_GLF_IDENTITY(2, min(2, 2))), int(_GLF_IDENTITY(2, min(2, 2))))), max(int(2), int(2))), _GLF_IDENTITY((int(2)) + 0, int(_GLF_IDENTITY(ivec2((int(2)) + 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ivec2(ivec4(ivec2((int(2)) + 0, int(_GLF_ONE(1.0, injectionSwitch.y))), 1, 1)))))))), ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), (int(2)) + 0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 1))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) * 1)))))) / (1 & 1)) : _GLF_FUZZED(-70547))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + 0))) >> _GLF_IDENTITY(int(2), int(2))), (((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), _GLF_IDENTITY(min(_GLF_IDENTITY(int(2), (int(2)) >> (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), (int(1)) * (1 ^ 0)), int(1), int(1))), int(1)))), int(2)), 0 ^ (min(_GLF_IDENTITY(int(2), (int(2)) >> (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), (int(1)) * (1 ^ 0)), int(1), int(1))), int(1)))), int(2)))))) + 0))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, clamp(2, 2, 2)), _GLF_IDENTITY(2, _GLF_IDENTITY((2) - 0, max(_GLF_IDENTITY((2) - 0, ~ (_GLF_IDENTITY(~ ((2) - 0), (~ ((2) - 0)) | (~ ((2) - 0))))), _GLF_IDENTITY((2) - 0, clamp((2) - 0, _GLF_IDENTITY((2) - 0, ((2) - 0) | 0), (2) - 0))))), _GLF_IDENTITY(2, ~ (~ (2))))))))) / (_GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) & 1)), (true ? _GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), int(int((int(2))))) + 0)), min(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) + 0), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(2, min(2, 2))), (int(2)) + 0) : _GLF_FUZZED(-70745)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + 0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), _GLF_IDENTITY(int(2), (int(2)) + 0)) : _GLF_FUZZED(_injected_loop_counter)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), _GLF_IDENTITY(int(2), 0 ^ _GLF_IDENTITY((int(2)), 0 + (_GLF_IDENTITY((int(2)), ((int(2))) << 0)))))), ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(_GLF_IDENTITY(int(2), (int(2)) | 0), int(2))), (int(2)) + 0))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) << 0), 1, 1)))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), (int(2)) + 0)), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) >> 0), max(int(2), int(2))), (int(2)) + 0))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), _GLF_IDENTITY((_GLF_IDENTITY(int(2), 0 + (int(2)))), max(_GLF_IDENTITY((int(2)), ((int(2))) >> 0), _GLF_IDENTITY((int(2)), ((int(2))) << 0))) + 0)), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), _GLF_IDENTITY((_GLF_IDENTITY(int(2), 0 + (int(2)))), max(_GLF_IDENTITY((int(2)), ((int(2))) >> 0), _GLF_IDENTITY((int(2)), ((int(2))) << _GLF_IDENTITY(0, clamp(0, 0, 0))))) + 0))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 1), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), _GLF_IDENTITY(_GLF_IDENTITY((int(2)), max((int(2)), _GLF_IDENTITY((int(2)), max(_GLF_IDENTITY((int(2)), 0 ^ ((int(2)))), _GLF_IDENTITY((int(2)), 0 ^ ((int(2)))))))) + 0, int(_GLF_IDENTITY(ivec2((int(2)) + 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ivec2(_GLF_IDENTITY(ivec4(ivec2(_GLF_IDENTITY((int(2)), (_GLF_IDENTITY((int(2)), 0 | (_GLF_IDENTITY((int(2)), max((int(2)), (int(2))))))) >> 0) + _GLF_IDENTITY(0, (false ? _GLF_FUZZED(atomicAdd(_injected_loop_counter, _injected_loop_counter)) : 0)), int(_GLF_ONE(1.0, injectionSwitch.y))), 1, 1), ivec4(0, 0, 0, 0) + (ivec4(ivec2(_GLF_IDENTITY((int(2)), (_GLF_IDENTITY((int(2)), 0 | (_GLF_IDENTITY((int(2)), max((int(2)), (int(2))))))) >> 0) + _GLF_IDENTITY(0, (false ? _GLF_FUZZED(atomicAdd(_injected_loop_counter, _injected_loop_counter)) : 0)), int(_GLF_ONE(1.0, injectionSwitch.y))), 1, 1)))))))))), ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), (int(2)) + 0)))) | int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), exp(length(vec2(0.0, 0.0))) * (_GLF_ZERO(0.0, injectionSwitch.x))))), 0, 1))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) * 1)))))) / (1 & 1)) : _GLF_FUZZED(-70547))), _GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + 0))) >> _GLF_IDENTITY(int(2), int(2))), (((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), min(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), (int(2)) >> (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), (int(1)) * (1 ^ 0)), int(1), int(1))), int(1)))), _GLF_IDENTITY(int(2), ~ (~ (int(2))))))) + 0))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, _GLF_IDENTITY(clamp(2, 2, 2), (clamp(2, 2, 2)) | (clamp(2, 2, 2)))), _GLF_IDENTITY(2, (2) - 0), _GLF_IDENTITY(2, ~ (~ (2))))))))) / (_GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) & 1)), (true ? _GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), int(int((int(2))))) + 0)), min(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) + 0), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(2, min(2, 2))), (int(2)) + 0) : _GLF_FUZZED(-70745)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + 0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), _GLF_IDENTITY(int(2), (int(2)) + 0)) : _GLF_FUZZED(_injected_loop_counter)))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))), ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(_GLF_IDENTITY(int(2), (int(2)) | 0), int(2))), (int(2)) + _GLF_IDENTITY(0, clamp(0, 0, 0))))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) << 0), 1, 1)))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), (int(2)) + 0)), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), (int(2)) + 0))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), _GLF_IDENTITY((_GLF_IDENTITY(int(2), 0 + (int(2)))), max(_GLF_IDENTITY(_GLF_IDENTITY((int(2)), clamp((int(2)), (int(2)), (int(2)))), ((int(2))) >> 0), _GLF_IDENTITY((_GLF_IDENTITY(int(2), 0 ^ (_GLF_IDENTITY(int(2), 1 * (int(2)))))), ((int(2))) << 0))) + 0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 1), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), _GLF_IDENTITY((int(2)) + 0, int(_GLF_IDENTITY(ivec2((int(2)) + 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ivec2(ivec4(ivec2((int(2)) + 0, int(_GLF_ONE(1.0, injectionSwitch.y))), 1, 1)))))))), ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(int(2), (int(2)) - 0))), (int(2)) + 0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 1))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) * 1)))))) / (1 & 1)) : _GLF_FUZZED(-70547))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + 0))) >> _GLF_IDENTITY(int(2), int(2))), (((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), min(_GLF_IDENTITY(int(2), (int(2)) >> (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), (int(1)) * (1 ^ 0)), int(1), int(1))), int(1)))), int(2)))) + 0)), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), min(_GLF_IDENTITY(int(2), (int(2)) >> (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), (int(1)) * (1 ^ 0)), int(1), int(1))), int(1)))), int(2)))) + 0))) << (0 << _GLF_IDENTITY(int(5), int(5))))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, clamp(2, 2, 2)), _GLF_IDENTITY(2, (2) - 0), _GLF_IDENTITY(2, ~ (~ (2))))))))) / (_GLF_IDENTITY(1, _GLF_IDENTITY((1), int(ivec3((1), 0, 1))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) & 1)), (true ? _GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), int(int((int(2))))) + 0)), min(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) + 0), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(2, min(2, 2))), (int(2)) + 0) : _GLF_FUZZED(-70745)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + 0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), _GLF_IDENTITY(int(2), (int(2)) + 0)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) | (int(2)), min((int(2)) | (int(2)), (int(2)) | (int(2))))), _GLF_IDENTITY(int(2), (int(2)) + 0))))) : _GLF_FUZZED(_injected_loop_counter)))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))), ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(_GLF_IDENTITY(int(2), (int(2)) | 0), int(2))), (int(2)) + 0))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) << 0), 1, 1)))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), (int(2)) + 0)), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(int(2), min(int(2), int(2))))), (int(2)) + 0))) << int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9.5)), bool(false))))))), ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), _GLF_IDENTITY((_GLF_IDENTITY(int(2), 0 + (int(2)))), max(_GLF_IDENTITY((int(2)), ((int(2))) >> 0), _GLF_IDENTITY((int(2)), ((int(2))) << 0))) + 0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 1), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), _GLF_IDENTITY((int(2)) + 0, int(_GLF_IDENTITY(ivec2((int(2)) + 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ivec2(ivec4(ivec2((int(2)) + 0, int(_GLF_ONE(1.0, injectionSwitch.y))), 1, 1)))))))), ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), (int(2)) + 0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 1))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) * 1)))))) / (1 & 1)) : _GLF_FUZZED(-70547))), (_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(ivec4(_GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(int(2), (int(2)) - 0))), 0, 1, 1))), (int(2)) + 0))) >> _GLF_IDENTITY(int(2), int(2))), _GLF_IDENTITY((((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) | (2)), 2, _GLF_IDENTITY(2, (2) - 0)))), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), min(_GLF_IDENTITY(int(2), (int(2)) >> (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), (int(1)) * (1 ^ 0)), int(1), int(1))), int(1)))), int(2)))) + 0))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, _GLF_IDENTITY(clamp(2, 2, 2), (clamp(2, 2, 2)) | (_GLF_IDENTITY(clamp(2, 2, 2), (clamp(2, 2, 2)) << 0)))), _GLF_IDENTITY(2, (2) - 0), _GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, (2) ^ 0), _GLF_IDENTITY(2, (2) / 1)))))))))))), max((((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) | (2)), 2, _GLF_IDENTITY(2, (2) - 0)))), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), min(_GLF_IDENTITY(int(2), (int(2)) >> (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), (int(1)) * (1 ^ 0)), int(1), int(1))), int(1)))), int(2)))) + 0))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, _GLF_IDENTITY(clamp(2, 2, 2), (clamp(2, 2, 2)) | (_GLF_IDENTITY(clamp(2, 2, 2), (clamp(2, 2, 2)) << 0)))), _GLF_IDENTITY(2, (2) - 0), _GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, (2) ^ 0), _GLF_IDENTITY(2, (2) / 1)))))))))))), (((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) | (2)), 2, _GLF_IDENTITY(2, (2) - 0)))), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), min(_GLF_IDENTITY(int(2), (int(2)) >> (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), (int(1)) * (1 ^ 0)), int(1), int(1))), int(1)))), int(2)))) + 0))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, _GLF_IDENTITY(clamp(2, 2, 2), (clamp(2, 2, 2)) | (_GLF_IDENTITY(clamp(2, 2, 2), (clamp(2, 2, 2)) << 0)))), _GLF_IDENTITY(2, (2) - 0), _GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, (2) ^ 0), _GLF_IDENTITY(2, (2) / 1)))))))))))))) / (_GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) & 1)), (true ? _GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), int(int((int(2))))) + 0)), min(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) + 0), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(2, min(2, 2))), (int(2)) + 0) : _GLF_FUZZED(-70745)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + 0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | 0), (int(2)) | (int(2))), _GLF_IDENTITY(int(2), (int(2)) + 0)) : _GLF_FUZZED(_injected_loop_counter)))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))), ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(_GLF_IDENTITY(int(2), (int(2)) | 0), int(2))), (int(2)) + 0))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) << 0), 1, 1)))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), (int(2)) + 0)), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, min(_GLF_IDENTITY(2, max(2, 2)), _GLF_IDENTITY(2, clamp(2, 2, 2))))))), max(int(2), int(2))), (int(2)) + 0))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), _GLF_IDENTITY((_GLF_IDENTITY(int(2), 0 + (int(2)))), max(_GLF_IDENTITY((int(2)), ((int(2))) >> 0), _GLF_IDENTITY((int(2)), ((int(2))) << 0))) + 0))), ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), _GLF_IDENTITY((_GLF_IDENTITY(int(2), 0 + (int(2)))), max(_GLF_IDENTITY((int(2)), ((int(2))) >> 0), _GLF_IDENTITY((int(2)), ((int(2))) << 0))) + 0)))) - 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(0, min(0, 0)), 1), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), _GLF_IDENTITY((int(2)) + 0, int(_GLF_IDENTITY(ivec2((int(2)) + 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ivec2(ivec4(ivec2((int(2)) + 0, int(_GLF_ONE(1.0, injectionSwitch.y))), 1, 1)))))))), ((_GLF_IDENTITY(1, (1) | (1)) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), (int(2)) + 0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 1)))), 0 | (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) << 0), 1, 1)))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), (int(2)) + 0)), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, min(_GLF_IDENTITY(2, max(2, 2)), _GLF_IDENTITY(2, clamp(2, 2, 2))))))), max(int(2), int(2))), (int(2)) + 0))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), _GLF_IDENTITY((_GLF_IDENTITY(int(2), 0 + (int(2)))), max(_GLF_IDENTITY((int(2)), ((int(2))) >> 0), _GLF_IDENTITY((int(2)), ((int(2))) << 0))) + 0))), ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), _GLF_IDENTITY((_GLF_IDENTITY(int(2), 0 + (int(2)))), max(_GLF_IDENTITY((int(2)), ((int(2))) >> 0), _GLF_IDENTITY((int(2)), ((int(2))) << 0))) + 0)))) - 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(0, min(0, 0)), 1), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), _GLF_IDENTITY((int(2)) + 0, int(_GLF_IDENTITY(ivec2((int(2)) + 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ivec2(ivec4(ivec2((int(2)) + 0, int(_GLF_ONE(1.0, injectionSwitch.y))), 1, 1)))))))), ((_GLF_IDENTITY(1, (1) | (1)) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), (int(2)) + 0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 1))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) * 1)))))) / (1 & 1)) : _GLF_FUZZED(-70547)))) | (_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) | 0)))) >> _GLF_IDENTITY(int(2), int(2))), (((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) >> (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), (int(1)) * (1 ^ 0)), int(1), int(1))), int(1)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) >> (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), (int(1)) * (1 ^ 0)), int(1), int(1))), int(1)))), ~ (~ (_GLF_IDENTITY(int(2), (int(2)) >> (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), (int(1)) * (1 ^ 0)), int(1), int(1))), int(1)))))))) | (_GLF_IDENTITY(int(2), (int(2)) >> (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), (int(1)) * (1 ^ 0)), int(1), int(1))), int(1)))))), int(2)))) + 0))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, clamp(2, 2, 2)), _GLF_IDENTITY(2, (2) - 0), _GLF_IDENTITY(2, ~ (~ (2))))))))) / (_GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) & 1)), (true ? _GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), int(int((int(2))))) + 0)), min(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (2))) | (_GLF_IDENTITY(2, clamp(2, 2, 2))))), (int(2)) + 0), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(2, min(2, 2))), (int(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) >> 0))))) + 0) : _GLF_FUZZED(-70745)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + 0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), _GLF_IDENTITY(int(2), (int(2)) + 0)) : _GLF_FUZZED(_injected_loop_counter)))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))), ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-69668) : 2))) ^ 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(_GLF_IDENTITY(int(2), (int(2)) | 0), int(2))), (int(2)) + 0))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), clamp(1, 1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) << 0), 1, 1)))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), (int(2)) + 0)), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), _GLF_IDENTITY((int(2)) + 0, min(_GLF_IDENTITY((int(2)) + 0, ~ (~ ((int(2)) + 0))), (int(2)) + 0))))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), _GLF_IDENTITY((_GLF_IDENTITY(int(2), 0 + (int(2)))), max(_GLF_IDENTITY((int(2)), ((int(2))) >> 0), _GLF_IDENTITY((int(2)), ((int(2))) << 0))) + 0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 1), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), _GLF_IDENTITY((int(2)) + 0, int(_GLF_IDENTITY(ivec2((int(2)) + 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ivec2(ivec4(ivec2((int(2)) + 0, int(_GLF_ONE(1.0, injectionSwitch.y))), 1, 1)))))))), ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), (int(2)) + 0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(_GLF_IDENTITY(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), _GLF_IDENTITY((int(2)) + 0, int(_GLF_IDENTITY(ivec2((int(2)) + 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ivec2(ivec4(ivec2((int(2)) + 0, int(_GLF_ONE(1.0, injectionSwitch.y))), 1, 1)))))))), ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), (int(2)) + 0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), _GLF_IDENTITY((int(2)) + 0, int(_GLF_IDENTITY(ivec2((int(2)) + 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ivec2(ivec4(ivec2((int(2)) + 0, int(_GLF_ONE(1.0, injectionSwitch.y))), 1, 1)))))))), ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), (int(2)) + 0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))))) >> 0))), 0, 1))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) * 1)))))) / (1 & 1)) : _GLF_FUZZED(-70547))))))))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + 0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, ~ (~ (2)))), int(2))), ((_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + 0)), int(ivec2(1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), 0 | (_GLF_IDENTITY(int(2), (int(2)) ^ 0)))) / 1))), _GLF_IDENTITY(int(2), _GLF_IDENTITY((_GLF_IDENTITY(int(2), (int(2)) << 0)), ((_GLF_IDENTITY(int(2), (int(2)) << 0))) - 0) + 0)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(int(2), (int(2)) / 1))), _GLF_IDENTITY(int(2), (int(2)) + 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(int(2), (int(2)) / 1))), _GLF_IDENTITY(int(2), (int(2)) + 0))), (max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(int(2), (int(2)) / 1))), _GLF_IDENTITY(int(2), (int(2)) + 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(int(2), (int(2)) / 1))), _GLF_IDENTITY(int(2), (int(2)) + 0)))) * int(_GLF_ONE(1.0, injectionSwitch.y)))), 1)))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(ivec4(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 0, 0, 0))), (int(2)) + 0)))) + 0, (((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + 0)))) + 0) | (((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, int(ivec2(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-38149) : 2)), 0))), _GLF_IDENTITY(2, ~ (~ (2)))))), _GLF_IDENTITY(int(2), (int(2)) + 0)))) + 0))) >> _GLF_IDENTITY(int(2), int(2)))) / (1 & 1))))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) >> 0))
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY(0 | 0, (0 | 0) + (0 >> _GLF_IDENTITY(int(4), int(4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! ((false))))), bool(bool(! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) || _GLF_IDENTITY(false, false || (false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (! ((! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (! (false))) && true)))), ! (! (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))))))))))))), bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(! (! (false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), true && (! ((! (false))))))), (! (! (false))) && true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))))), ! (! (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))))))))))))))), ! (! ((! (_GLF_IDENTITY(! (! (false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))) && true, ! (! ((! (! (false))) && true))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! _GLF_IDENTITY((false), ((false)) && true))) && true))))), ! (! ((_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! _GLF_IDENTITY((false), ((false)) && true))) && true)))))))))))))))))))), true, true))), bool(bvec3(! (! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), bool(bool(_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), bool(bool(_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))))))), ! (! ((_GLF_IDENTITY(! (! (false)), bool(bool(_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))) && true))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), bool(bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), true && ((false)))), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))))))), ! (! ((_GLF_IDENTITY(! (! (false)), bool(bool(_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)))))), true, false))))), true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(false, ! (! (false))))))) || false))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.5) : injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), log(1.0), 1.0)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     continue;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        break;
       continue;
      }
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       continue;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.1))), injectionSwitch.y))) - 0.0)))))
      barrier();
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      break;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint num_workgroup = gl_NumWorkGroups.x;
 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec3((_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), true)))), true && (bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), true))))))), (injectionSwitch.x < injectionSwitch.y)))) && true))), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)))) || false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         continue;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               barrier();
              }
            }
           return;
          }
        }
       else
        {
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))) || false))) && true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(int(1), int(1))) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, clamp(0, 0, 0))); _injected_loop_counter --)
        {
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(5357.9450, (5357.9450) / 1.0))), bool(false))) > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true)))) && true)))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (0 & 48423); _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(1, 0 | (1)) & int(_GLF_ONE(1.0, injectionSwitch.y)))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = ((((((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), min(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))), int(7))) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2))))), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-95283) : 2))), int(2)), 0 + (_GLF_IDENTITY(int(2), int(2))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)))), (true ? uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | ((gl_WorkGroupSize)))))) : _GLF_FUZZED(uvec3(150901u, 41847u, 31814u))))).x, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), gl_WorkGroupSize)).x, _GLF_IDENTITY((gl_WorkGroupSize.x) << 0u, _GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (0u)), 0u, 1u)), uint(_GLF_IDENTITY(uvec4(uint(uvec3((gl_WorkGroupSize.x) << 0u, 0u, 1u)), 1u, 0u, 0u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uint(uvec3((gl_WorkGroupSize.x) << 0u, 0u, 1u)), 1u, 0u, 0u)), min(uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uint(uvec3((gl_WorkGroupSize.x) << 0u, 0u, 1u)), 1u, 0u, 0u)), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uint(uvec3((gl_WorkGroupSize.x) << 0u, 0u, 1u)), 1u, 0u, 0u)), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uint(uvec3((gl_WorkGroupSize.x) << 0u, 0u, 1u)), 1u, 0u, 0u)), min(uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uint(uvec3((gl_WorkGroupSize.x) << 0u, 0u, 1u)), 1u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uint(uvec3((gl_WorkGroupSize.x) << 0u, 0u, 1u)), 1u, 0u, 0u))))) | (uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uint(uvec3((gl_WorkGroupSize.x) << 0u, 0u, 1u)), 1u, 0u, 0u))))))))))))), ((~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u)))) / 1u), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), gl_WorkGroupSize)).x, _GLF_IDENTITY((gl_WorkGroupSize.x) << 0u, _GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (0u)), 0u, 1u)), uint(_GLF_IDENTITY(uvec4(uint(uvec3((gl_WorkGroupSize.x) << 0u, 0u, 1u)), 1u, 0u, 0u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uint(uvec3((gl_WorkGroupSize.x) << 0u, 0u, 1u)), 1u, 0u, 0u)), min(uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uint(uvec3((gl_WorkGroupSize.x) << 0u, 0u, 1u)), 1u, 0u, 0u)), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uint(uvec3((gl_WorkGroupSize.x) << 0u, 0u, 1u)), 1u, 0u, 0u)), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uint(uvec3((gl_WorkGroupSize.x) << 0u, 0u, 1u)), 1u, 0u, 0u)), min(uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uint(uvec3((gl_WorkGroupSize.x) << 0u, 0u, 1u)), 1u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uint(uvec3((gl_WorkGroupSize.x) << 0u, 0u, 1u)), 1u, 0u, 0u))))) | (uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uint(uvec3((gl_WorkGroupSize.x) << 0u, 0u, 1u)), 1u, 0u, 0u))))))))))))), ((~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u)))) / 1u), _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), gl_WorkGroupSize)).x, _GLF_IDENTITY((gl_WorkGroupSize.x) << 0u, _GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (0u)), 0u, 1u)), uint(_GLF_IDENTITY(uvec4(uint(uvec3((gl_WorkGroupSize.x) << 0u, 0u, 1u)), 1u, 0u, 0u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uint(uvec3((gl_WorkGroupSize.x) << 0u, 0u, 1u)), 1u, 0u, 0u)), min(uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uint(uvec3((gl_WorkGroupSize.x) << 0u, 0u, 1u)), 1u, 0u, 0u)), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uint(uvec3((gl_WorkGroupSize.x) << 0u, 0u, 1u)), 1u, 0u, 0u)), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uint(uvec3((gl_WorkGroupSize.x) << 0u, 0u, 1u)), 1u, 0u, 0u)), min(uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uint(uvec3((gl_WorkGroupSize.x) << 0u, 0u, 1u)), 1u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uint(uvec3((gl_WorkGroupSize.x) << 0u, 0u, 1u)), 1u, 0u, 0u))))) | (uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uint(uvec3((gl_WorkGroupSize.x) << 0u, 0u, 1u)), 1u, 0u, 0u))))))))))))), ((~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u)))) / 1u))) : _GLF_FUZZED(write_val))), 0u ^ (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), gl_WorkGroupSize)).x, _GLF_IDENTITY((gl_WorkGroupSize.x) << 0u, _GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x) << 0u, 0u, 1u)), uint(_GLF_IDENTITY(uvec4(uint(uvec3((gl_WorkGroupSize.x) << 0u, 0u, 1u)), 1u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uint(uvec3((gl_WorkGroupSize.x) << 0u, 0u, 1u)), 1u, 0u, 0u))))))))), ((~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u)))) / 1u) : _GLF_FUZZED(write_val))), (true ? _GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), gl_WorkGroupSize)).x, _GLF_IDENTITY((gl_WorkGroupSize.x) << 0u, _GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x) << 0u, 0u, 1u)), uint(_GLF_IDENTITY(uvec4(uint(uvec3((gl_WorkGroupSize.x) << 0u, 0u, 1u)), 1u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uint(uvec3((gl_WorkGroupSize.x) << 0u, 0u, 1u)), 1u, 0u, 0u))))))))), ((~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u)))) / 1u) : _GLF_FUZZED(write_val))), max(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), gl_WorkGroupSize)).x, _GLF_IDENTITY((gl_WorkGroupSize.x) << 0u, _GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x) << 0u, 0u, 1u)), uint(_GLF_IDENTITY(uvec4(uint(uvec3((gl_WorkGroupSize.x) << 0u, 0u, 1u)), 1u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uint(uvec3((gl_WorkGroupSize.x) << 0u, 0u, 1u)), 1u, 0u, 0u))))))))), ((~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u)))) / 1u) : _GLF_FUZZED(write_val))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), gl_WorkGroupSize)).x, _GLF_IDENTITY((gl_WorkGroupSize.x) << 0u, _GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x) << 0u, 0u, 1u)), uint(_GLF_IDENTITY(uvec4(uint(uvec3((gl_WorkGroupSize.x) << 0u, 0u, 1u)), 1u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uint(uvec3((gl_WorkGroupSize.x) << 0u, 0u, 1u)), 1u, 0u, 0u))))))))), ((~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u)))) / 1u) : _GLF_FUZZED(write_val))))) : _GLF_FUZZED(((mat2x4(322.084, -8.1, -17.24, 4.8, -0.3, 1.7, -83.75, -6.0) == mat2x4(16.86, 82.12, -3429.4338, 99.94, 7429.7711, 15.06, -90.75, -69.06)) ? num_workgroup : num_workgroup)))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2323.3004, -8.6)))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2323.3004, -8.6)))).x > injectionSwitch.y)) || false))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) || false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) || false)))); _injected_loop_counter ++)
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false))))))))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
  }
 else
  {
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x)))));
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(43.70)), vec2(_GLF_FUZZED(vec4(43.90, -6519.9429, 7038.8666, -5.7).p), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), bvec2(false, true))).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.7), _GLF_FUZZED(vec4(35.69, -3.8, 2597.2550, 2.5).r)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) * vec2(1.0, 1.0)))), _GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat4x2((injectionSwitch), _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-909.917))), 0.0), (_GLF_IDENTITY(mat4x2((injectionSwitch), _GLF_ZERO(0.0, injectionSwitch.x), round(length(_GLF_IDENTITY(normalize(vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, 1.0, 0.0, 1.0, abs(0.0))), (float(mat2x3(1.0, 1.0, 1.0, 0.0, 1.0, abs(0.0)))) - 0.0)), 1.0)), vec3(_GLF_IDENTITY(mat3x2(normalize(vec3(1.0, 1.0, 1.0)), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), exp(0.0)), (false ? _GLF_FUZZED(mat3x2(-9111.1643, -689.507, _GLF_IDENTITY(3.4, clamp(_GLF_IDENTITY(3.4, min(3.4, 3.4)), 3.4, 3.4)), -1.4, -867.122, -0.5)) : mat3x2(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), clamp(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), clamp(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(vec3(7.5, 4.9, -1.9)) : normalize(vec3(1.0, 1.0, 1.0)))), normalize(vec3(1.0, 1.0, 1.0)))), normalize(vec3(1.0, 1.0, 1.0)))), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), exp(0.0)))))))), 1.0, 1.0, 1.0, 0.0), mat4x2(mat4x2(mat4x2((injectionSwitch), _GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).y)) ? injectionSwitch.x : _GLF_FUZZED(-2846.2408)))), round(length(normalize(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.4)), bool(false))), 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0))))) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(cosh(-8741.0385)) : 0.0)), 0.0)))) - sin(vec2(0.0, 0.0))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8950.2456)), bool(false))), injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat4x2((injectionSwitch), _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec4(124.752, 31.15, -6160.2683, -1.5).y)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0, 0.0), (_GLF_IDENTITY(mat4x2((injectionSwitch), _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0), mat4x2(mat4x2(mat4x2((injectionSwitch), _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0))))) - mat4x2(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), min(max(0.0, 0.0), max(0.0, 0.0)))), 0.0)), 0.0)), 0.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))).y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), determinant(mat2(0.0, 0.0, 0.0, 0.0)) + (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat4x2((injectionSwitch), _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(mat4x2((injectionSwitch), _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0), mat4x2(mat4x2(mat4x2((injectionSwitch), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(7038.1432))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(-82230)), _GLF_FUZZED((-91.91))), bvec2(false, false))).x), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9292.9744)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)), _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0))))) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0))), (true ? mat3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0))) : _GLF_IDENTITY(_GLF_FUZZED(mat3(1379.0073, -3.8, 185.936, -170.913, -502.627, -9.9, 2.9, 6.2, 8.9)), (true ? _GLF_FUZZED(mat3(_GLF_IDENTITY(1379.0073, clamp(1379.0073, 1379.0073, 1379.0073)), -3.8, 185.936, -170.913, -502.627, -9.9, 2.9, 6.2, 8.9)) : _GLF_FUZZED(mat3(-64.58, 4215.7032, 861.117, -154.605, 5022.3310, 124.685, -9.9, 715.789, 73.56)))))))))))) - sin(vec2(0.0, 0.0))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-45.94)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(reflect(unpackUnorm2x16(subgroup_id), injectionSwitch)) : (injectionSwitch))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(round(length(normalize(vec3(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(-8.4))), 1.0, 1.0)))), (round(length(normalize(vec3(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(-8.4))), 1.0, 1.0))))) - 0.0), 1.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(mat4x2((injectionSwitch), _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0), mat4x2(mat4x2(mat4x2((injectionSwitch), _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), mix(vec3((vec3(1.0, 1.0, 1.0))[0], (vec3(1.0, 1.0, 1.0))[1], _GLF_FUZZED(_GLF_IDENTITY(-3274.9406, clamp(_GLF_IDENTITY(-3274.9406, 1.0 * (-3274.9406)), -3274.9406, -3274.9406)))), vec3(_GLF_FUZZED(-0.8), _GLF_FUZZED(-90.40), (vec3(1.0, 1.0, 1.0))[2]), bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), 1.0, 1.0, 1.0, 0.0))))) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), injectionSwitch.y)))))), bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(reflect(unpackUnorm2x16(subgroup_id), injectionSwitch)) : (injectionSwitch))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(round(length(normalize(vec3(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(-8.4))), 1.0, 1.0)))), (round(length(normalize(vec3(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(-8.4))), 1.0, 1.0))))) - 0.0), 1.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(mat4x2((injectionSwitch), _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0), mat4x2(mat4x2(mat4x2((injectionSwitch), _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), mix(vec3((vec3(1.0, 1.0, 1.0))[0], (vec3(1.0, 1.0, 1.0))[1], _GLF_FUZZED(_GLF_IDENTITY(-3274.9406, clamp(_GLF_IDENTITY(-3274.9406, 1.0 * (-3274.9406)), -3274.9406, -3274.9406)))), vec3(_GLF_FUZZED(-0.8), _GLF_FUZZED(-90.40), (vec3(1.0, 1.0, 1.0))[2]), bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), 1.0, 1.0, 1.0, 0.0))))) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), injectionSwitch.y))))))), true && (bool(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(reflect(unpackUnorm2x16(subgroup_id), injectionSwitch)) : (injectionSwitch))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(round(length(normalize(vec3(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(-8.4))), 1.0, 1.0)))), (round(length(normalize(vec3(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(-8.4))), 1.0, 1.0))))) - 0.0), 1.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(mat4x2((injectionSwitch), _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0), mat4x2(mat4x2(mat4x2((injectionSwitch), _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), mix(vec3((vec3(1.0, 1.0, 1.0))[0], (vec3(1.0, 1.0, 1.0))[1], _GLF_FUZZED(_GLF_IDENTITY(-3274.9406, clamp(_GLF_IDENTITY(-3274.9406, 1.0 * (-3274.9406)), -3274.9406, -3274.9406)))), vec3(_GLF_FUZZED(-0.8), _GLF_FUZZED(-90.40), (vec3(1.0, 1.0, 1.0))[2]), bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), 1.0, 1.0, 1.0, 0.0))))) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), injectionSwitch.y))))))))))))))))))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))))))))))))))))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
        barrier();
       return;
      }
    }
   barrier();
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(1, clamp(1, 1, 1)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0), _injected_loop_counter)) > (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, max(0, 0))), (int(_GLF_IDENTITY(0, max(0, 0)))) + (0 << _GLF_IDENTITY(int(0), int(0)))), 0 + (int(0)))), (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))), 0 + (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))))))), 1, (1 & 1), 0)), 1 * (int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(int(0)))) / 1)))), _GLF_IDENTITY(int(0), 0 + (int(0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))), _GLF_IDENTITY(0, 0 + (0)) + (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))))))), 1, (1 & 1), 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, max(0, 0))), _GLF_IDENTITY(0 + (int(0)), (false ? _GLF_FUZZED(atomicCompSwap(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) : 0 + (int(0)))))), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, max(0, 0))), 0 + (int(0)))), (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))), 0 + (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))))))), 1, (1 & 1), 0)), 1 * (int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(int(0)))) / 1)))), _GLF_IDENTITY(int(0), 0 + (int(0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))), 0 + (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))))))), 1, (1 & 1), 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, max(0, 0))), 0 + (int(0)))), (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))), 0 + (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))))))), 1, (1 & 1), 0)), 1 * (int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(int(0)))) / 1)))), _GLF_IDENTITY(int(0), 0 + (int(0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))), 0 + (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))))))), 1, (1 & 1), 0)))), (_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, max(0, 0))), 0 + (int(0)))), (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))), 0 + (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))))))), 1, (1 & 1), 0)), 1 * (int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(int(0)))) / 1)))), _GLF_IDENTITY(int(0), 0 + (int(0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))), 0 + (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))))))), 1, (1 & 1), 0))))) >> 0)) << (0 << _GLF_IDENTITY(int(6), int(6)))))) << 0), min(_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (_GLF_IDENTITY(int(0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : int(0)))))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(~ (~ (0)), 0 ^ (~ (~ (0)))))), _GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) | 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, clamp(0, 0, 0)))) + (int(0)), min(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, clamp(0, 0, 0)))) + (int(0)), 0 ^ (_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, clamp(0, 0, 0)))) + (int(0)))), _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, clamp(0, 0, 0)))) + (int(0)))))), (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), max(_GLF_IDENTITY(int(0), ~ (~ (int(0)))), int(0))), _GLF_IDENTITY(int(0), 0 + (int(0)))), 0 + (_GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY((true ? 0 : _GLF_FUZZED((true ? _injected_loop_counter : _injected_loop_counter))), ((true ? 0 : _GLF_FUZZED((true ? _injected_loop_counter : _injected_loop_counter)))) >> 0))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), 0 + (int(0))), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), 0 + (int(0))), (_GLF_IDENTITY(int(0), 0 + (int(0)))) | (_GLF_IDENTITY(int(0), 0 + (int(0)))))) >> 0)))))), 1, (_GLF_IDENTITY(1, 0 + (1)) & 1), 0)), 1 * (int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))), (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + _GLF_IDENTITY((int(0)), (true ? _GLF_IDENTITY((int(0)), (true ? (int(0)) : _GLF_FUZZED(1455))) : _GLF_FUZZED(-82568))))), 0 + _GLF_IDENTITY((_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0))))), max((_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0))))), (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))))))))), 1, (1 & _GLF_IDENTITY(1, clamp(1, 1, 1))), _GLF_IDENTITY(0, (0) | (0))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))), (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))), 0 + (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(_GLF_IDENTITY(0, _GLF_IDENTITY(0, (0) - 0) | (0)))))))))), 1, (1 & 1), 0)), 1 * (int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))), (_GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), min(_GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(_injected_loop_counter))))), _GLF_IDENTITY(int(0), min(int(0), int(0))))), 0 + (int(0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))), 0 + (_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (0))), _GLF_IDENTITY(int(0), 0 + (int(0)))))))), 1, (1 & 1), 0)))), max(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))), (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))), 0 + (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(_GLF_IDENTITY(0, _GLF_IDENTITY(0, (0) - 0) | (0)))))))))), 1, (1 & 1), 0)), 1 * (int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))), (_GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), min(_GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(_injected_loop_counter))))), _GLF_IDENTITY(int(0), min(int(0), int(0))))), 0 + (int(0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))), 0 + (_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (0))), _GLF_IDENTITY(int(0), 0 + (int(0)))))))), 1, (1 & 1), 0)))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))), (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))), 0 + (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(_GLF_IDENTITY(0, _GLF_IDENTITY(0, (0) - 0) | (0)))))))))), 1, (1 & 1), 0)), 1 * (int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))), (_GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), min(_GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(_injected_loop_counter))))), _GLF_IDENTITY(int(0), min(int(0), int(0))))), 0 + (int(0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))), 0 + (_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (0))), _GLF_IDENTITY(int(0), 0 + (int(0)))))))), 1, (1 & 1), 0))))))))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
      {
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) - 0, ((int(4)) - 0) | ((int(4)) - 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | _GLF_IDENTITY((_injected_loop_counter), max(_GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) | ((_injected_loop_counter))), (_injected_loop_counter)))) != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch))), vec2(mat2(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch))), min(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch))))), 1.0, 0.0)))).y)), _GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (true)) && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((-7.3 + (vec2(455.929, -7.6) * 27.70))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED((-7.3 + (vec2(455.929, -7.6) * 27.70))), max(_GLF_IDENTITY(_GLF_FUZZED((-7.3 + (vec2(455.929, -7.6) * 27.70))), (false ? _GLF_FUZZED(vec2(6.7, -8034.7685)) : _GLF_FUZZED((-7.3 + (vec2(455.929, -7.6) * 27.70))))), _GLF_FUZZED((-7.3 + (vec2(455.929, -7.6) * 27.70))))))).x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))) && true)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) || false))) || false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float((127721u >> 31925u)))), vec2(_GLF_FUZZED(-106.752), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec2(_GLF_IDENTITY(true, false || (true)), true))))))))) || false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((9.1 / -2870.5659))), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(false, true, false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(false, true, false, true)))))) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false), true)))) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, false || (false)), true)))) || false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))), false, true, true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(139.781)), vec2(_GLF_FUZZED(-4.1), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, injectionSwitch)).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) || false))) || false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float((127721u >> 31925u)))), vec2(_GLF_FUZZED(-106.752), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec2(_GLF_IDENTITY(true, false || (true)), true))))))))) || false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1.1))), injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), mat2x4(mat2x4(mat2x4(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1.1))), injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))), mix(float(_GLF_FUZZED((_GLF_IDENTITY(9.1 / -2870.5659, clamp(9.1 / -2870.5659, 9.1 / -2870.5659, 9.1 / -2870.5659))))), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(false, _GLF_IDENTITY(true, (true) && true), false, true)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(false, true, false, true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(false, true, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(false, true, false, true)))) && true), false, true)))))) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false), true)))) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, false || (false)), true)))) || false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))), false, true, true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(139.781)), vec2(_GLF_FUZZED(-4.1), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, injectionSwitch)).y))))) && true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-45.80)), bvec2(true, false))).y))))
        return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
      {
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), min(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              continue;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               barrier();
              }
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true))))))
                continue;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                }
               else
                {
                 barrier();
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   do
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                 continue;
                 if(_GLF_DEAD(false))
                  continue;
                }
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false)))))
            return;
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))))));
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          continue;
        }
       barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))
        barrier();
      }
     else
      {
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7.9), _GLF_FUZZED(32.28)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
        }
      }
     else
      {
       return;
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   else
    {
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) | (subgroup_local_id)), min(subgroup_local_id, subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), (! (false)) || false)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, false || (false)))), false || (! ((_GLF_IDENTITY(false, false || (false)))))))))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, (false) && true)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)), false, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(69.94)), vec2(_GLF_FUZZED(6.6), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 0.0, 0.0, abs(sin(0.0)), 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, 0.0), vec3(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, 0.0), vec3(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)), mix(float(dot(vec3(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, 0.0), vec3(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0))), float(_GLF_FUZZED(582.528)), bool(false))))), (mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(69.94)), vec2(_GLF_FUZZED(6.6), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 0.0, 0.0, abs(sin(0.0)), 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, 0.0), vec3(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, 0.0), vec3(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)), mix(float(dot(vec3(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, 0.0), vec3(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0))), float(_GLF_FUZZED(582.528)), bool(false)))))) * mat2(1.0)))).y)))))))) || false))))), false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true) && true, (_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), ((false)) && true) && true) || false)))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true)))))))))), false || ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true)), bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true)), _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), false))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true) && true, (_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), ((false)) && true) && true) || false)))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true))))))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, (false) && true)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)), false, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(69.94)), vec2(_GLF_FUZZED(6.6), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 0.0, 0.0, abs(sin(0.0)), 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, 0.0), vec3(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, 0.0), vec3(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)), mix(float(dot(vec3(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, 0.0), vec3(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0))), float(_GLF_FUZZED(582.528)), bool(false))))), (mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(69.94)), vec2(_GLF_FUZZED(6.6), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 0.0, 0.0, abs(sin(0.0)), 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, 0.0), vec3(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, 0.0), vec3(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)), mix(float(dot(vec3(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, 0.0), vec3(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0))), float(_GLF_FUZZED(582.528)), bool(false)))))) * mat2(1.0)))).y)))))))) || false))))), false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true) && true, (_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), ((false)) && true) && true) || false)))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true)))))))))), false || ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true)), bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true)), _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), false))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true) && true, (_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), ((false)) && true) && true) || false)))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, (false) && true)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)), false, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(69.94)), vec2(_GLF_FUZZED(6.6), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 0.0, 0.0, abs(sin(0.0)), 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, 0.0), vec3(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, 0.0), vec3(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)), mix(float(dot(vec3(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, 0.0), vec3(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0))), float(_GLF_FUZZED(582.528)), bool(false))))), (mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(69.94)), vec2(_GLF_FUZZED(6.6), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 0.0, 0.0, abs(sin(0.0)), 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, 0.0), vec3(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, 0.0), vec3(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)), mix(float(dot(vec3(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, 0.0), vec3(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0))), float(_GLF_FUZZED(582.528)), bool(false)))))) * mat2(1.0)))).y)))))))) || false))))), false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true) && true, (_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), ((false)) && true) && true) || false)))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true)))))))))), false || ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true)), bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true)), _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), false))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true) && true, (_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), ((false)) && true) && true) || false)))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true)))))))))))))) || false), true, false)))))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   do
    {
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x), float(_GLF_FUZZED(-609.347)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, sqrt(1.0))), (float(mat3x2(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, sqrt(1.0)))) / 1.0))), float(_GLF_FUZZED(1.1)), bool(false))), 0.0, 0.0)))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1.4)), bool(false))), 0.0)).y))))
      {
      }
     else
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint read_val = atomicLoad(_GLF_IDENTITY(write_val, (write_val) - 0u), _GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) ^ 0), 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) ^ 0), 4)), clamp(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) ^ 0), 4)), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) ^ 0), 4)), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) ^ 0), 4))))) >> 0), min(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) ^ 0), 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) ^ 0), 4)), clamp(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) ^ 0), 4)), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, 0 | (4)), _GLF_IDENTITY(4, (4) ^ 0), 4)), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) ^ 0), 4))))) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) ^ 0), 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) ^ 0), 4)), clamp(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) ^ 0), 4)), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) ^ 0), 4)), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) ^ 0), 4))))) >> 0))), 4)), _GLF_IDENTITY(64, 0 ^ (64)), _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(0 | (0), 0 ^ (_GLF_IDENTITY(0 | (0), (_GLF_IDENTITY(0 | (0), clamp(0 | (0), 0 | (0), 0 | (0)))) >> 0))))) - _GLF_IDENTITY(0, (0) * 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(0 | (0), 0 ^ (_GLF_IDENTITY(0 | (0), (_GLF_IDENTITY(0 | (0), clamp(0 | (0), 0 | (0), 0 | (0)))) >> 0))))) - _GLF_IDENTITY(0, (0) * 1)), (false ? _GLF_FUZZED(-54786) : _GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(0 | (0), 0 ^ (_GLF_IDENTITY(0 | (0), (_GLF_IDENTITY(0 | (0), clamp(0 | (0), 0 | (0), 0 | (0)))) >> 0))))) - _GLF_IDENTITY(0, (0) * 1)))), _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(0 | (0), 0 ^ (_GLF_IDENTITY(0 | (0), (_GLF_IDENTITY(0 | (0), clamp(0 | (0), 0 | (0), 0 | (0)))) >> 0))))) - _GLF_IDENTITY(0, (0) * 1)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(0 | (0), 0 ^ (_GLF_IDENTITY(0 | (0), (_GLF_IDENTITY(0 | (0), clamp(0 | (0), 0 | (0), 0 | (0)))) >> 0))))) - _GLF_IDENTITY(0, (0) * 1)))), clamp(int(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(0 | (0), 0 ^ (_GLF_IDENTITY(0 | (0), (_GLF_IDENTITY(0 | (0), clamp(0 | (0), 0 | (0), 0 | (0)))) >> 0))))) - _GLF_IDENTITY(0, (0) * 1)))), int(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(0 | (0), 0 ^ (_GLF_IDENTITY(0 | (0), (_GLF_IDENTITY(0 | (0), clamp(0 | (0), 0 | (0), 0 | (0)))) >> 0))))) - _GLF_IDENTITY(0, (0) * 1)))), int(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(0 | (0), 0 ^ (_GLF_IDENTITY(0 | (0), (_GLF_IDENTITY(0 | (0), clamp(0 | (0), 0 | (0), 0 | (0)))) >> 0))))) - _GLF_IDENTITY(0, (0) * 1))))))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(0 | (0), 0 ^ (_GLF_IDENTITY(0 | (0), (_GLF_IDENTITY(0 | (0), clamp(0 | (0), 0 | (0), 0 | (0)))) >> 0))))) - _GLF_IDENTITY(0, (0) * 1)))));
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) << 0), 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      continue;
     buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), 0u | (uint(subgroupAllEqual(read_val)))), (uint(subgroupAllEqual(read_val))) / 1u)));
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), (! (bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))) || false))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), injectionSwitch))) / vec2(1.0, 1.0)).y, (injectionSwitch.y) * abs(1.0))))))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))));
   return;
  }
}
