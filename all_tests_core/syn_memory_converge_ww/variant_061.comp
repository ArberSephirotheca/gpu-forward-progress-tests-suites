#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_19 {
 uvec3 _f0;
 ivec4 _f1;
 float _f2;
 bvec4 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_18 {
 mat3x4 _f0;
} ;

struct _GLF_struct_17 {
 mat3 _f0;
 bvec3 _f1;
 bool _f2;
 mat4 _f3;
} ;

struct _GLF_struct_20 {
 _GLF_struct_17 _f0;
 ivec2 _f1;
 _GLF_struct_18 _f2;
 ivec2 _f3;
 _GLF_struct_19 _f4;
 uvec2 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_21 {
 uint workgroup_size;
 mat3 _f0;
 _GLF_struct_20 _f1;
 mat3 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_14 {
 uvec3 _f0;
 int _f1;
 int _f2;
 uint workgroup_base;
 vec3 _f3;
 vec4 _f4;
 bvec3 _f5;
 int _f6;
} ;

struct _GLF_struct_15 {
 vec3 _f0;
 _GLF_struct_14 _f1;
} ;

struct _GLF_struct_16 {
 _GLF_struct_15 _f0;
 mat2 _f1;
 uvec2 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_11 {
 mat2x3 _f0;
 uvec3 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_10 {
 mat2 _f0;
 mat2x3 _f1;
 uvec4 _f2;
 ivec2 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_9 {
 bvec3 _f0;
 ivec3 _f1;
 mat4 _f2;
 uvec4 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_8 {
 bool _f0;
 ivec2 _f1;
 bool _f2;
 bvec2 _f3;
 mat2x4 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_7 {
 vec3 _f0;
 vec3 _f1;
 uint _f2;
} ;

struct _GLF_struct_12 {
 _GLF_struct_7 _f0;
 _GLF_struct_8 _f1;
 ivec4 _f2;
 _GLF_struct_9 _f3;
 _GLF_struct_10 _f4;
 mat2 _f5;
 _GLF_struct_11 _f6;
} ;

struct _GLF_struct_5 {
 uint num_workgroup;
 mat4 _f0;
 mat2x4 _f1;
 ivec3 _f2;
 mat2x3 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_6 {
 _GLF_struct_5 _f0;
} ;

struct _GLF_struct_3 {
 bool _f0;
} ;

struct _GLF_struct_2 {
 mat4x3 _f0;
 float _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_1 {
 mat4x3 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
 vec4 _f1;
 bool _f2;
 mat4 _f3;
} ;

struct _GLF_struct_4 {
 vec3 _f0;
 _GLF_struct_0 _f1;
 int _f2;
 _GLF_struct_1 _f3;
 _GLF_struct_2 _f4;
 bool _f5;
 _GLF_struct_3 _f6;
} ;

struct _GLF_struct_13 {
 _GLF_struct_4 _f0;
 uvec4 _f1;
 bvec2 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_12 _f4;
 mat4x3 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1.1), _GLF_FUZZED(-860.390)), bvec2(false, false))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2465.8281) : injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_DEAD(false))))), (bool(bool(_GLF_DEAD(false)))) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, (true) || false))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(0, 0, 0))], _GLF_FUZZED(612.737)), vec2(_GLF_FUZZED(5608.7741), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, (true) && true)))).x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0)) * determinant(mat2(1.0, 0.0, 1.0, 1.0))))).y), min((injectionSwitch.y), (injectionSwitch.y)))), injectionSwitch.y))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), true, true))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (false) && true)))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(_GLF_struct_4(vec3(1.0), _GLF_struct_0(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec2(bvec2(bvec2(true))))), false))), true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec2(bvec2(bvec2(true))))), false))), true)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec2(bvec2(bvec2(true))))), false))), true)), true, true))), true))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(true))), false, true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(true))), false, true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(bvec2(true))), false, true)), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(bvec2(true))), false, true)), false, true)), false)))), false)))), false)))), vec4(1.0), true, mat4(1.0)), 1, _GLF_struct_1(mat4x3(1.0), uvec2(1u)), _GLF_struct_2(mat4x3(1.0), 1.0, ivec2(1)), true, _GLF_struct_3(true)), uvec4(1u), bvec2(true), _GLF_struct_6(_GLF_struct_5(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)).x, mat4(1.0), mat2x4(1.0), ivec3(1), mat2x3(1.0), _GLF_IDENTITY(uvec2(1u), (uvec2(1u)) >> uvec2(0u, 0u)))), _GLF_struct_12(_GLF_struct_7(vec3(1.0), vec3(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1u), _GLF_struct_8(true, ivec2(_GLF_IDENTITY(1, (1) - 0)), true, bvec2(true), mat2x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), _GLF_IDENTITY((_GLF_IDENTITY((1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0 + (_GLF_IDENTITY(((_GLF_IDENTITY(1.0, max(1.0, 1.0)))), clamp(((_GLF_IDENTITY(1.0, max(1.0, 1.0)))), ((_GLF_IDENTITY(1.0, max(1.0, 1.0)))), ((_GLF_IDENTITY(1.0, max(1.0, 1.0)))))))) - 0.0, clamp(_GLF_IDENTITY(((_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, cos(0.0)), (mat2(1.0, 0.0, 0.0, cos(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) - 0.0), mix(float(0.0), float(_GLF_FUZZED(-9.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) + mat2(0.0, 0.0, 0.0, 0.0)))), 1.0)))) - 0.0, (_GLF_IDENTITY(((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(122.428) : ((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0))) - 0.0), ((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0, ((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0, clamp(_GLF_IDENTITY(((_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, cos(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 1.0, cos(0.0), 1.0), transpose(transpose(mat3x2(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 1.0, cos(0.0), 1.0)))))))), _GLF_IDENTITY((mat2(1.0, 0.0, 0.0, cos(0.0))) + mat2(0.0, 0.0, 0.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(-6.7, -5.7, 0.3, 5.5)) : (mat2(1.0, 0.0, 0.0, cos(0.0))) + mat2(0.0, 0.0, 0.0, 0.0)))))), 1.0)))) - _GLF_IDENTITY(0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 1.0)) * (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)))), (((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0) - 0.0), ((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0, ((_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(1.0, max(1.0, 1.0))) + 0.0))) - 0.0)), (_GLF_IDENTITY(((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, cos(0.0)), (mat2(1.0, 0.0, 0.0, cos(0.0))) + mat2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 0.0 + (0.0))) - sin(0.0)), 0.0, 0.0)))), 1.0)))) - 0.0, (((_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(-38.06))))) - 0.0) - 0.0), max(_GLF_IDENTITY(((_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, cos(0.0)), (mat2(1.0, 0.0, 0.0, cos(0.0))) + mat2(0.0, 0.0, 0.0, 0.0)))), 1.0)))) - 0.0, _GLF_IDENTITY((((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0) - 0.0, (true ? _GLF_IDENTITY((((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0)))) - 0.0, mix(float((((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0) - 0.0), float(_GLF_FUZZED(-0.4)), bool(false))) : _GLF_FUZZED(5484.1244)))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, cos(0.0)), (mat2(1.0, 0.0, 0.0, cos(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))) + sqrt(0.0))))) + mat2(0.0, 0.0, 0.0, 0.0)))), 1.0)))) - 0.0, (((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0) - 0.0), mix(float(_GLF_FUZZED(7.7)), float(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, cos(0.0)), (mat2(1.0, 0.0, 0.0, cos(0.0))) + mat2(0.0, 0.0, 0.0, 0.0)))), 1.0)))) - 0.0, (((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0) - 0.0), (_GLF_IDENTITY(((_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, cos(0.0)), (mat2(1.0, 0.0, 0.0, cos(0.0))) + mat2(0.0, 0.0, 0.0, 0.0)))), 1.0)))) - 0.0, (((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0) - 0.0)) - 0.0)), bool(true))))), ((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0, ((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0))) - 0.0), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0, clamp(_GLF_IDENTITY(((_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, cos(0.0)), (mat2(1.0, 0.0, 0.0, cos(0.0))) + mat2(0.0, 0.0, 0.0, 0.0)))), max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(cos(0.0), (_GLF_IDENTITY(cos(0.0), (true ? cos(0.0) : _GLF_FUZZED(96.61)))) / 1.0)), _GLF_IDENTITY((mat2(1.0, 0.0, 0.0, cos(0.0))) + mat2(0.0, 0.0, 0.0, 0.0), ((mat2(1.0, 0.0, 0.0, cos(0.0))) + mat2(0.0, 0.0, 0.0, 0.0)) * mat2(1.0))), _GLF_IDENTITY(mat2(mat3x4(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(cos(0.0), (_GLF_IDENTITY(cos(0.0), (true ? cos(0.0) : _GLF_FUZZED(96.61)))) / 1.0)), _GLF_IDENTITY((mat2(1.0, 0.0, 0.0, cos(0.0))) + mat2(0.0, 0.0, 0.0, 0.0), ((mat2(1.0, 0.0, 0.0, cos(0.0))) + mat2(0.0, 0.0, 0.0, 0.0)) * mat2(1.0))))), (mat2(mat3x4(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(cos(0.0), (_GLF_IDENTITY(cos(0.0), (true ? cos(0.0) : _GLF_FUZZED(96.61)))) / 1.0)), _GLF_IDENTITY((mat2(1.0, 0.0, 0.0, cos(0.0))) + mat2(0.0, 0.0, 0.0, 0.0), ((mat2(1.0, 0.0, 0.0, cos(0.0))) + mat2(0.0, 0.0, 0.0, 0.0)) * mat2(1.0)))))) + mat2(0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, cos(0.0)), (mat2(1.0, 0.0, 0.0, cos(0.0))) + mat2(0.0, 0.0, 0.0, 0.0)))), min(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, cos(0.0)), (mat2(1.0, 0.0, 0.0, cos(0.0))) + mat2(0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0))), 0.0, 0.0, cos(0.0)), (mat2(1.0, 0.0, 0.0, cos(0.0))) + mat2(0.0, 0.0, 0.0, 0.0)))))))), 1.0)))) - 0.0, (((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0) - 0.0), _GLF_IDENTITY(((_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))) - 0.0, (_GLF_IDENTITY(((_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))) - 0.0, (((_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(53.87) : 1.0)), (1.0) / 1.0))))) - 0.0) - 0.0)) / 1.0), ((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.8)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))) : _GLF_FUZZED(991.816))), max(1.0, 1.0)))) - 0.0)), _GLF_IDENTITY(((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0, clamp(_GLF_IDENTITY(((_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, cos(0.0)), _GLF_IDENTITY((mat2(1.0, 0.0, 0.0, cos(0.0))), transpose(transpose(_GLF_IDENTITY((mat2(1.0, 0.0, 0.0, cos(0.0))), transpose(_GLF_IDENTITY(transpose((mat2(1.0, 0.0, 0.0, cos(0.0)))), mat2(mat2x4(transpose((mat2(1.0, 0.0, 0.0, cos(0.0)))))))))))) + mat2(0.0, 0.0, 0.0, 0.0)))), 1.0)))) - 0.0, (_GLF_IDENTITY(((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0, (true ? (_GLF_IDENTITY((_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((vec4(-752.264, 6.5, -5.6, 225.003).a / -190.421))), float(1.0), bool(true))), max(1.0, 1.0))), 1.0, tan(0.0), 1.0, 1.0, 0.0, 1.0, 1.0), (_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(1.0, max(1.0, 1.0))), 1.0, tan(0.0), 1.0, 1.0, 0.0, 1.0, 1.0), mat4x2(mat4x2(mat4x2((_GLF_IDENTITY(1.0, max(1.0, 1.0))), 1.0, tan(0.0), 1.0, 1.0, 0.0, 1.0, 1.0))))) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) - 0.0 : _GLF_FUZZED(-0.0)))) - 0.0), ((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0, ((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0)), _GLF_IDENTITY(((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0, clamp(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, cos(0.0)), (mat2(1.0, 0.0, 0.0, cos(0.0))) + mat2(0.0, 0.0, 0.0, 0.0)))), 1.0)), 1.0 * (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, cos(0.0)), _GLF_IDENTITY((mat2(1.0, 0.0, 0.0, cos(0.0))) + mat2(0.0, 0.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY((mat2(1.0, 0.0, 0.0, cos(0.0))) + mat2(0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(966.209, -76.81, -95.78, -8.1)) : (mat2(1.0, 0.0, 0.0, cos(0.0))) + mat2(0.0, 0.0, 0.0, 0.0)))), (true ? transpose(_GLF_IDENTITY((mat2(1.0, 0.0, 0.0, cos(0.0))) + mat2(0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(966.209, -76.81, -95.78, -8.1)) : (mat2(1.0, 0.0, 0.0, cos(0.0))) + mat2(0.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED(mat2(-24.50, -40.49, -4.9, -92.80))))))))), 1.0)))))) - 0.0, (((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0) - 0.0), ((_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))) - 0.0, ((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.1)), bool(false))) : _GLF_FUZZED(9.2))), max(1.0, 1.0)))) - 0.0)))), _GLF_IDENTITY(((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0, clamp(_GLF_IDENTITY(((_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, cos(0.0)), (mat2(1.0, 0.0, 0.0, cos(0.0))) + mat2(0.0, 0.0, 0.0, 0.0)))), 1.0)))) - 0.0, (((_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7625.9676)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(1.0, 1.0)))) - 0.0) - 0.0), ((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0, ((_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) + 0.0))))) - 0.0)))))), (false ? _GLF_FUZZED(distance(vec2(-213.900, 0.2), max(injectionSwitch, -87.01))) : (_GLF_IDENTITY((1.0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1.0, max(1.0, 1.0))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(mat2((_GLF_IDENTITY(1.0, max(1.0, 1.0))), 1.0, 1.0, 1.0))), _GLF_IDENTITY((_GLF_IDENTITY(1.0, max(1.0, 1.0))), mix(float(_GLF_FUZZED(vec4(-6807.3967, -3.2, 24.94, -41.65).t)), float((_GLF_IDENTITY(1.0, max(1.0, 1.0)))), bool(true))), (_GLF_IDENTITY(1.0, max(1.0, 1.0)))))) - 0.0, clamp(_GLF_IDENTITY(((_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, cos(0.0)), (mat2(1.0, 0.0, 0.0, cos(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-9.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) + mat2(0.0, 0.0, 0.0, 0.0)))), 1.0)))) - 0.0, (((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0) - 0.0), ((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0, ((_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0)))) - 0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0, clamp(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, cos(0.0)), (mat2(1.0, 0.0, 0.0, cos(0.0))) + mat2(0.0, 0.0, 0.0, 0.0)))), 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, cos(0.0)), (mat2(1.0, 0.0, 0.0, cos(0.0))) + mat2(0.0, 0.0, 0.0, 0.0)))), 1.0)), (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, cos(0.0)), (mat2(1.0, 0.0, 0.0, cos(0.0))) + mat2(0.0, 0.0, 0.0, 0.0)))), 1.0))) / 1.0)) / 1.0, float(mat3x2((_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, cos(0.0)), (mat2(1.0, 0.0, 0.0, cos(0.0))) + mat2(0.0, 0.0, 0.0, 0.0)))), 1.0)), (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, cos(0.0)), (mat2(1.0, 0.0, 0.0, cos(0.0))) + mat2(0.0, 0.0, 0.0, 0.0)))), 1.0))) / 1.0)) / 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0)))))) - 0.0, (((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0) - 0.0), ((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0, ((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0)), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), max(1.0, 1.0)))) - 0.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, cos(0.0)), _GLF_IDENTITY((mat2(1.0, 0.0, 0.0, cos(0.0))) + mat2(0.0, 0.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose((mat2(1.0, 0.0, 0.0, cos(0.0))) + mat2(0.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(mat2(-6284.6875, 135.368, -2.2, 1801.1699)) : transpose((mat2(1.0, 0.0, 0.0, cos(0.0))) + mat2(0.0, 0.0, 0.0, 0.0))))))))), _GLF_IDENTITY(1.0, min(1.0, 1.0)))))) - 0.0, (((_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0)))))))) - 0.0) - 0.0), max(_GLF_IDENTITY(((_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, cos(0.0)), (mat2(1.0, 0.0, 0.0, cos(0.0))) + mat2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 0.0)))), 1.0)))) - 0.0, (((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, cos(0.0)), (mat2(1.0, 0.0, 0.0, cos(0.0))) + mat2(0.0, 0.0, 0.0, 0.0)))), 1.0)))) - 0.0, _GLF_IDENTITY((((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0) - 0.0, clamp((((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0) - 0.0, (((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0) - 0.0, _GLF_IDENTITY((_GLF_IDENTITY(((_GLF_IDENTITY(1.0, max(1.0, 1.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ((_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) + 0.0)))) : _GLF_FUZZED(trunc(9405.3450)))) - 0.0) - 0.0, float(_GLF_IDENTITY(mat2((((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0) - 0.0, 0.0, 0.0, 1.0), mat2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0)))) * 1.0), 0.0, 0.0) + (mat2((((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0) - 0.0, 0.0, 0.0, 1.0)))))))), mix(float(_GLF_FUZZED(7.7)), float(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, cos(0.0)), (mat2(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, cos(0.0))) + mat2(0.0, 0.0, 0.0, 0.0)))), 1.0)))) - 0.0, (((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0) - 0.0), (_GLF_IDENTITY(((_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, cos(0.0)), (mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0, 0.0, cos(0.0))) + mat2(0.0, 0.0, 0.0, 0.0)))), 1.0)))) - 0.0, (((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0) - 0.0)) - 0.0)), bool(true))))), ((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0, ((_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0), vec2(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0), vec2(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0))), max(dot(vec2(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0), vec2(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0))), dot(vec2(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0), vec2(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0)))))), 0.0)), (true ? float(mat3x2(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), 1.0), vec2(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0)), vec2(1.0, 1.0), vec2(1.0, 1.0))), vec2(1.0, 1.0), vec2(1.0, 1.0))), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0)) + (dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))), 1.0), vec2(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0))), max(dot(vec2(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0), vec2(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0))), dot(vec2(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0), vec2(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0)))))), 0.0)) : _GLF_FUZZED(-27.48)))))))) - 0.0))) - 0.0), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0, clamp(_GLF_IDENTITY(((_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, cos(0.0)), (mat2(1.0, 0.0, 0.0, cos(0.0))) + mat2(0.0, 0.0, 0.0, 0.0)))), 1.0)))) - 0.0, (((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0) - 0.0), ((_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), clamp(_GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), clamp(max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))), max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2636.3093))))), min(max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), mix(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_FUZZED(599.450)), bool(false)))))))))), clamp(_GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), clamp(_GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), clamp(max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))), max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2636.3093))))), min(max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), mix(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_FUZZED(599.450)), bool(false)))))))))), _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), clamp(_GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), clamp(max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))), max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2636.3093))))), min(max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), mix(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_FUZZED(599.450)), bool(false)))))))))), _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), clamp(_GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), clamp(max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))), max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2636.3093))))), min(max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), mix(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_FUZZED(599.450)), bool(false))))))))))))))))) - _GLF_IDENTITY(0.0, float(vec3(0.0, abs(0.0), 0.0))), ((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0)), _GLF_IDENTITY(((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0, clamp(_GLF_IDENTITY(((_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / 1.0), 0.0, cos(0.0)), _GLF_IDENTITY((mat2(1.0, 0.0, 0.0, cos(0.0))) + mat2(0.0, 0.0, 0.0, 0.0), (true ? _GLF_IDENTITY((mat2(1.0, 0.0, 0.0, cos(0.0))) + mat2(0.0, 0.0, 0.0, 0.0), ((mat2(1.0, 0.0, 0.0, cos(0.0))) + mat2(0.0, 0.0, 0.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(mat2(32.70, -2.7, -1.1, 390.923))))))), 1.0)))) - 0.0, (((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0) - 0.0), ((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0, ((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0)), _GLF_IDENTITY(((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0, clamp(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, cos(0.0)), (true ? _GLF_IDENTITY(mat2(1.0, 0.0, 0.0, cos(0.0)), (_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, cos(0.0)), (_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, cos(0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((mat2(-8322.6641, -8.8, -1215.7229, 918.160) + 27.44)) : mat2(1.0, 0.0, 0.0, cos(0.0))))) + mat2(0.0, 0.0, 0.0, 0.0))) / mat2(1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(mat2(9.1, -5643.4771, -0.2, -3993.0619)))), (mat2(1.0, 0.0, 0.0, cos(0.0))) + mat2(0.0, 0.0, 0.0, 0.0)))), 1.0))), ((_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, cos(0.0)), (mat2(1.0, 0.0, 0.0, cos(0.0))) + mat2(0.0, 0.0, 0.0, 0.0)))), 1.0)))) - 0.0)) - 0.0, (((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(656.920)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) - 0.0), ((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0, ((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0)))), _GLF_IDENTITY(((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0, clamp(_GLF_IDENTITY(((_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, cos(0.0)), (_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, cos(0.0)), (mat2(1.0, 0.0, 0.0, cos(0.0))) / mat2(1.0, 1.0, 1.0, 1.0))) + mat2(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0, 0.0)))), 1.0)))) - 0.0, (((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0) - 0.0), ((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0, ((_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0)))))))) / abs(1.0)) / 1.0)), bvec2(true)), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), max(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(1, 0 ^ (1))))))), _GLF_struct_9(bvec3(true), ivec3(1), mat4(1.0), uvec4(1u), mat2x4(1.0)), _GLF_struct_10(mat2(1.0), mat2x3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-6.1)))) - 0.0), 0.0, 0.0))), 1.0))), uvec4(1u), ivec2(1), vec2(1.0)), mat2(1.0), _GLF_struct_11(mat2x3(1.0), uvec3(1u), ivec4(1))), mat4x3(1.0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_21 _GLF_struct_replacement_21 = _GLF_struct_21(gl_WorkGroupSize.x, mat3(_GLF_IDENTITY(1.0, (1.0) + 0.0)), _GLF_struct_20(_GLF_struct_17(mat3(1.0), bvec3(_GLF_IDENTITY(true, true && (true))), true, mat4(1.0)), ivec2(1), _GLF_struct_18(mat3x4(1.0)), ivec2(1), _GLF_struct_19(uvec3(1u), ivec4(1), 1.0, bvec4(true), vec4(1.0)), uvec2(1u), vec2(1.0)), mat3(1.0), mat3(1.0));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)), false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false)) && true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7493.4203)), bool(false)))), float(_GLF_FUZZED(8236.6414)), bool(false))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_struct_15(vec3(1.0), _GLF_struct_14(uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, 1u)), clamp(uint(uvec2(1u, 1u)), _GLF_IDENTITY(uint(uvec2(1u, 1u)), max(uint(uvec2(1u, 1u)), uint(uvec2(1u, 1u)))), uint(uvec2(1u, 1u)))))), 1, 1, _GLF_struct_replacement_21.workgroup_size * workgroup_id, _GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((vec3(1.0)), clamp((vec3(1.0)), _GLF_IDENTITY((vec3(1.0)), vec3(0.0, 0.0, 0.0) + ((vec3(1.0)))), (vec3(1.0)))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)), min((vec3(1.0)) * mat3(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y)), _GLF_IDENTITY((vec3(1.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)), mix(vec3(((vec3(1.0)) * mat3(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))[0], _GLF_FUZZED(-6564.8779), _GLF_IDENTITY(((vec3(1.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))[2], mix(float(_GLF_FUZZED(-3467.6492)), float(((vec3(1.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))[2]), bool(true)))), vec3(_GLF_FUZZED(5.4), ((vec3(1.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))[1], _GLF_FUZZED(-46.56)), bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), true, false))))), _GLF_IDENTITY(max((vec3(1.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((vec3(1.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)), min(_GLF_IDENTITY((vec3(1.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)), max((vec3(1.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)), (vec3(1.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), (vec3(1.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y))))), mix(vec3(_GLF_IDENTITY((max((vec3(1.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)), (vec3(1.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y))))[0], min((max((vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), min(_GLF_IDENTITY((1.0), min((1.0), (1.0))), (1.0))) - 0.0))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)), (vec3(1.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y))))[0], (max((vec3(1.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)), (vec3(1.0)) * mat3(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-54.36))), injectionSwitch.y))))[0])), (max((vec3(1.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((vec3(1.0)), vec3(vec3(_GLF_IDENTITY((vec3(1.0)), clamp((vec3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, log(1.0)), mat3(1.0) * _GLF_IDENTITY((mat3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, log(1.0))), transpose(_GLF_IDENTITY(transpose((mat3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, log(1.0)))), (transpose((mat3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, log(1.0))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))), (vec3(1.0)), (vec3(1.0))))))) * mat3(_GLF_ONE(1.0, injectionSwitch.y))))[1], _GLF_FUZZED(2.4)), vec3(_GLF_IDENTITY(_GLF_FUZZED((true ? -45.58 : -9904.9280)), mix(float(_GLF_FUZZED((true ? -45.58 : -9904.9280))), float(_GLF_FUZZED(57.14)), bool(false))), _GLF_FUZZED(-147.752), (max((vec3(1.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)), (vec3(1.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y))))[2]), bvec3(false, false, true))))), vec4(1.0), bvec3(true), 1)), mat2(1.0), uvec2(1u), ivec2(1));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), false || (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), bool(bvec2(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), true))))))))), true && (! (! _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false))))), true, true, false)))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), false || (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), bool(bvec2(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), true))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), false || (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), bool(bvec2(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), true))))))))), bool(bvec4(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), false || (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), bool(bvec2(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), true))))))))), true, false, false)))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), false || (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), bool(bvec2(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), true))))))))), bool(bvec4(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), false || (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), bool(bvec2(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), true))))))))), true, false, false))))))))), true && (! (! _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false))))), true, true, false)))))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), false || (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), bool(bvec2(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), true))))))))), true && (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false))))), true, true, false))), false || (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false))))), true, true, false)))))))))), false), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), false || _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), bool(bvec2(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), true))))))), _GLF_IDENTITY(false, ! (! (false))) || ((! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), bool(bvec2(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), true))))))))))), true && (! (! _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false))))), true, true, false)))))))), false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8.0)), vec2(_GLF_FUZZED(304.912), (injectionSwitch)[1]), bvec2(false, true))) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8.0)), vec2(_GLF_FUZZED(304.912), (injectionSwitch)[1]), bvec2(false, true))) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), false || (bool(bool(_GLF_IDENTITY(false, (false) || false))))))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 0.0)), (true ? _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 0.0)), clamp(vec2(mat4x2(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 0.0)), _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 0.0)), (vec2(mat4x2(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 0.0))) / vec2(1.0, 1.0)), vec2(mat4x2(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 0.0)))) : _GLF_FUZZED(injectionSwitch)))), injectionSwitch)).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 0.0))), injectionSwitch)).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, true && (true))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), (float(mat4x2(0.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))) - 0.0)), 0.0), vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(max(-5.8, -713.032)) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(90.24))), 0.0)), 0.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(floor(-7.2))))))), injectionSwitch)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.6)), bool(false))))), 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((- -297.517))), float(0.0), bool(true))), 0.0))), 1.0, 0.0, 0.0))), injectionSwitch)).y)))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(943.864))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint virtual_gid = _GLF_struct_replacement_16._f0._f1.workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(write_val, uint(virtual_gid), 4, 64, _GLF_IDENTITY(0, 0 ^ (0)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.4)), bool(false))) > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, length(0.0), 0.0, determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 0.0 + (0.0))) / 1.0))), abs(0.0))), 1.0, 1.0), transpose(transpose(mat3(injectionSwitch.y, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(length(0.0), (length(0.0)) - 0.0), 0.0, determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(abs(0.0), (abs(0.0)) + 0.0))), 1.0, 1.0)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) - 0.0) + 0.0), injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec2(-4.1, 0.9).s)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec2(-4.1, 0.9).s)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), false, true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), ! (! (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(5.4, -6.5, -1540.6144, 4.8)) : mat2(1.0))) * (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && true), true)), bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))).x > injectionSwitch.y))) && true), true)), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.3), _GLF_FUZZED(-31.14)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) : _GLF_FUZZED(vec2(6.3, -7211.8933)))).y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) && true), true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.3), _GLF_FUZZED(-31.14)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) : _GLF_FUZZED(vec2(6.3, -7211.8933)))).y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) && true), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.3), _GLF_FUZZED(-31.14)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) : _GLF_FUZZED(vec2(6.3, -7211.8933)))).y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) && true), true)))), false, false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.3), _GLF_FUZZED(-31.14)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) : _GLF_FUZZED(vec2(6.3, -7211.8933)))).y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) && true), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.3), _GLF_FUZZED(-31.14)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) : _GLF_FUZZED(vec2(6.3, -7211.8933)))).y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) && true), true)))), false, false)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.3), _GLF_FUZZED(-31.14)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) : _GLF_FUZZED(vec2(6.3, -7211.8933)))).y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) && true), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.3), _GLF_FUZZED(-31.14)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) : _GLF_FUZZED(vec2(6.3, -7211.8933)))).y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) && true), true)))), false, false))))))))))))), false, false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))), ! (! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 0.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 0.0))))), injectionSwitch.x)) > injectionSwitch.y)), ! _GLF_IDENTITY((! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2((! (! ((injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2((! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))), true), true, false))))))))))), false)), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), ! _GLF_IDENTITY((! (! ((injectionSwitch.x > injectionSwitch.y)))), ((! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))), false, true, false)))), false))) && true, bool(bvec4(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), ! _GLF_IDENTITY((! (! ((injectionSwitch.x > injectionSwitch.y)))), ((! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))), false, true, false)))), false))) && true, ! (! ((bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), ! _GLF_IDENTITY((! (! ((injectionSwitch.x > injectionSwitch.y)))), ((! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))), false, true, false)))), false))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, true), false))))))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)), false || (bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
