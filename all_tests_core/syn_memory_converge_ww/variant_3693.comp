#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false, false))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (! (true))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true, ((bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true) && true))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x), mix(float(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)), float(_GLF_FUZZED(-610.540)), bool(false)))) > injectionSwitch.y)))) || false))), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), (vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))) / vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), vec2(mat4x3(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))).x > injectionSwitch.y))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), (vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))) / vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), vec2(mat4x3(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))).x > injectionSwitch.y))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * sqrt(1.0))), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(-0.4) : _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), (vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))) / vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5.7) : 0.0)), injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), vec2(mat4x3(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), (vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))) * mat2(1.0))) / vec2(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))).x > injectionSwitch.y))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) < injectionSwitch.y)), false)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))) && true), (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0, 1.0, 0.0))))), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(_GLF_ZERO(0.0, injectionSwitch.x)))), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), (vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))) / vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.5)), float(1.0), bool(true))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, round(length(normalize(1.0))), 0.0, 0.0, 1.0, 0.0))), 0.0), transpose(transpose(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) * round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, length(0.0), cos(0.0), 0.0))).x), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), vec2(mat4x3(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, _GLF_IDENTITY(1.0, float(float(1.0))), 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(cos(0.0), (true ? cos(0.0) : _GLF_FUZZED(-1.8))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))).x > injectionSwitch.y))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0), (mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0)) - mat3(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(215.185)), float(0.0), bool(_GLF_IDENTITY(true, ! (! (true)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(exp(0.0) * (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0), (mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), float(vec4(exp(0.0) * (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0), (mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), 1.0, 0.0, 1.0)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))))), false, true, false)), true && (bool(bvec4((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))))), false, true, false)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))))), false, true, false)), true && (bool(bvec4((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))))), false, true, false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))))), false, true, false)), true && (bool(bvec4((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))))), false, true, false)))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))))), false, true, false)), true && (bool(bvec4((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))))), false, true, false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))))), false, true, false)), true && (bool(bvec4((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))))), false, true, false)))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true, false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))), bool(bvec4(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))), false, false, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(((! (_GLF_DEAD(false)))) && true, (((! (_GLF_DEAD(false)))) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(((! (_GLF_DEAD(false)))) && true, (((! (_GLF_DEAD(false)))) && true) || false), true, true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))), mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))[0], _GLF_FUZZED(-96.20)), vec2(_GLF_FUZZED(5.0), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))[1]), bvec2(false, true))).x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false)))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)), false), false))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))), bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))), true, true)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))), true, true)), false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((-51.70 / 6237.8448)), _GLF_FUZZED(9.9)), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, max(0, 0)) : _GLF_FUZZED(-19671)))], (injectionSwitch)[1]), vec2(_GLF_FUZZED((-51.70 / 6237.8448)), _GLF_FUZZED(9.9)), bvec2(_GLF_IDENTITY(false, false || (false)), false))).x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(5562.6627) : (injectionSwitch)[0])), _GLF_FUZZED(9480.2064)), vec2(_GLF_FUZZED(14.45), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(5562.6627) : (injectionSwitch)[0])), _GLF_FUZZED(9480.2064)), vec2(_GLF_FUZZED(14.45), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(5562.6627) : (injectionSwitch)[0])), _GLF_FUZZED(9480.2064)), vec2(_GLF_FUZZED(14.45), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false), ((injectionSwitch.x > injectionSwitch.y)) && true))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(0.7)), bool(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), false || (! ((false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), false || (! ((false)))), bool(bool(_GLF_IDENTITY(! ((false)), false || (! ((false))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(0.7), min(_GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(0.7), clamp(_GLF_FUZZED(0.7), _GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_FUZZED(0.7), (_GLF_FUZZED(0.7)) - 0.0))), (_GLF_FUZZED(0.7)) - 0.0)))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(0.7), min(_GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(0.7), clamp(_GLF_FUZZED(0.7), _GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_FUZZED(0.7), (_GLF_FUZZED(0.7)) - 0.0))), (_GLF_FUZZED(0.7)) - 0.0)))), float(mat2(float(_GLF_IDENTITY(_GLF_FUZZED(0.7), min(_GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(0.7), clamp(_GLF_FUZZED(0.7), _GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_FUZZED(0.7), (_GLF_FUZZED(0.7)) - 0.0))), (_GLF_FUZZED(0.7)) - 0.0)))), 0.0, 1.0, 1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(0.7), min(_GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(0.7), clamp(_GLF_FUZZED(0.7), _GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_FUZZED(0.7), (_GLF_FUZZED(0.7)) - 0.0))), (_GLF_FUZZED(0.7)) - 0.0)))), (false ? _GLF_FUZZED(-757.791) : float(_GLF_IDENTITY(_GLF_FUZZED(0.7), min(_GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(0.7), clamp(_GLF_FUZZED(0.7), _GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_FUZZED(0.7), (_GLF_FUZZED(0.7)) - 0.0))), (_GLF_FUZZED(0.7)) - 0.0)))))))), bool(_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(false, ! (! (false))))))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(0.7)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))), bool(bvec4(! (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))), true, false, true)))))))), bool(bool((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))), bool(bvec4(! (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))), true, false, true)))))))))))))))), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(43.53)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(0.7, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2(0.7, 1.0, 0.0, 1.0)), max(float(mat2(0.7, 1.0, 0.0, 1.0)), float(mat2(0.7, 1.0, 0.0, 1.0)))), max(float(mat2(_GLF_IDENTITY(0.7, _GLF_IDENTITY(min(0.7, _GLF_IDENTITY(0.7, float(_GLF_IDENTITY(mat3(0.7, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), (mat3(0.7, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), (min(0.7, _GLF_IDENTITY(0.7, float(_GLF_IDENTITY(mat3(0.7, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0), (mat3(0.7, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0)) / _GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(1.0, 0.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, sin(0.0))), min(float(mat2x4(1.0, 0.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, sin(0.0))), float(mat2x4(1.0, 0.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, sin(0.0)))))) : _GLF_FUZZED(-4.0))), 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))) * 1.0)), 1.0, 0.0, 1.0)), float(mat2(0.7, 1.0, 0.0, 1.0))))))), bool(_GLF_IDENTITY(false, ! (! (false))))))))), true, true, true))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, true && (false)), ((false) || false) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((vec4(-3758.2046, -8.2, -9006.1355, -74.02).b + 130.469))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), min(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)))) / sqrt(vec2(1.0, 1.0))).y))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) - determinant(mat2(0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_IDENTITY(bool(false), (bool(false)) && true), true, false, false)))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_IDENTITY(bool(false), (bool(false)) && true), true, false, false))))))), ! (! (bool(_GLF_IDENTITY(bool(false), bool(bvec4(_GLF_IDENTITY(bool(false), (bool(false)) && true), true, false, false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(sin(7.3))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(false, (false) && true) || (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)))), gl_NumWorkGroups)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(false || (false), true, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)), (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), _GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true)), (bool(bvec4(! (false), true, true, true))) && true)))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, _GLF_IDENTITY(false, bool(bvec3(false, true, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true)), false, false, false)), true, false))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), true && ((false)))) && true)), false, false, false)), true, false)))) && true)), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true)), false, false, false)), true, false))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true)))), true))))), false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), true && ((false)))) && true)), false, false, false)), true, false)))) && true))))))))), (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, ! (! (false))), false, _GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true), (true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true)) || false)), false, false, false)), true, false))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true), false, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), true && ((false)))) && true)), false, false, false)), true, false)))) && true)))))))) && true), false || (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, _GLF_IDENTITY(false, bool(bvec3(false, true, false))))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true)), false, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true)), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true)), false, false, false)))))))), true, false))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, _GLF_IDENTITY(false, bool(bvec3(false, true, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true)), false, false, false)), true, false))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), true && ((false)))) && true)), false, false, false)), true, false)))) && true)), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true)), false, false, false)), true, false))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true)))), true))))), false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), true && ((false)))) && true)), false, false, false)), true, false)))) && true))))))))), (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, ! (! (false))), false, _GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true), (true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true)) || false)), false, false, false)), true, false))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true), false, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), true && ((false)))) && true)), false, false, false)), true, false)))) && true)))))))) && true), false || (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, _GLF_IDENTITY(false, bool(bvec3(false, true, false))))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true)), false, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true)), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true)), false, false, false)))))))), true, false))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, _GLF_IDENTITY(false, bool(bvec3(false, true, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true)), false, false, false)), true, false))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), true && ((false)))) && true)), false, false, false)), true, false)))) && true)), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true)), false, false, false)), true, false))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true)))), true))))), false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), true && ((false)))) && true)), false, false, false)), true, false)))) && true))))))))), (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, ! (! (false))), false, _GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true), (true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true)) || false)), false, false, false)), true, false))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true), false, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), true && ((false)))) && true)), false, false, false)), true, false)))) && true)))))))) && true), false || (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, _GLF_IDENTITY(false, bool(bvec3(false, true, false))))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true)), false, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true)), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true)), false, false, false)))))))), true, false))))))))))), false))), true))), ! (! (bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))[0], injectionSwitch[1])).x > injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), clamp(_GLF_IDENTITY(1.0 * (injectionSwitch.y), (1.0 * (injectionSwitch.y)) / 1.0), _GLF_IDENTITY(1.0 * (injectionSwitch.y), (true ? 1.0 * (injectionSwitch.y) : _GLF_FUZZED(0.0))), 1.0 * (injectionSwitch.y)))), injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))), true, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(true, ! (! (true))), true), false)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true), false)))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true), false)))))))))))))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)))) && true))), false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), false))), false, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), _GLF_IDENTITY(false, (false) && true)))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), false))), false, false)))))), true && (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), false))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), false))))), false, false)), ! (! _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), _GLF_IDENTITY(false, ! (! (false)))))), false, false))), ((bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), _GLF_IDENTITY(false, ! (! (false)))))), false, false)))) || false)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || false)))))), true && (false || (_GLF_IDENTITY(false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4448.9965) : injectionSwitch.x)) > injectionSwitch.y))), true && (false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) || _GLF_IDENTITY(false, false || (false))))))))))))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (gl_WorkGroupID), ~ (gl_WorkGroupID), ~ (gl_WorkGroupID))))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true && (! (false)), ! (_GLF_IDENTITY(! (true && (! (false))), _GLF_IDENTITY((! (true && (! (false)))) && true, bool(bvec4((! (true && (! (false)))) && true, false, false, true)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, 1.0, cos(0.0), 1.0)), clamp(float(vec4(injectionSwitch.x, 1.0, cos(0.0), 1.0)), float(vec4(injectionSwitch.x, 1.0, cos(0.0), 1.0)), float(vec4(injectionSwitch.x, 1.0, cos(0.0), 1.0))))) > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))).y, true, false, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, 1.0, cos(0.0), 1.0)), clamp(float(vec4(injectionSwitch.x, 1.0, cos(0.0), 1.0)), float(vec4(injectionSwitch.x, 1.0, cos(0.0), 1.0)), float(vec4(injectionSwitch.x, 1.0, cos(0.0), 1.0))))) > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))).y, true, false, false))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0))), cos(0.0), 1.0)), clamp(_GLF_IDENTITY(float(vec4(injectionSwitch.x, 1.0, cos(0.0), 1.0)), (_GLF_IDENTITY(float(vec4(injectionSwitch.x, 1.0, cos(0.0), 1.0)), (float(vec4(injectionSwitch.x, 1.0, cos(0.0), 1.0))) / 1.0)) / 1.0), float(vec4(injectionSwitch.x, 1.0, cos(0.0), 1.0)), float(vec4(injectionSwitch.x, 1.0, cos(0.0), _GLF_IDENTITY(1.0, 0.0 + (1.0))))))) > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))).y, true, false, false))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, abs(1.0))), min(vec2(vec3(injectionSwitch, abs(1.0))), vec2(vec3(injectionSwitch, abs(1.0)))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))) || false), true))), false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u)), (false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(max(workgroup_size, workgroup_size), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) : max(workgroup_size, workgroup_size))))))) << 0u) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec4(bool(_GLF_DEAD(false)), false, false, true))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-79.60) : injectionSwitch.y))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-79.60) : injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)) || false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(! (false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false, _GLF_IDENTITY(true, (true) && true), true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), (_GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), vec2(mat4(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))))) - vec2(0.0, 0.0))).x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))), false, false), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))), false, false), true))))))), bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))), false, false), true)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && true)))
  return;
 atomicStore(write_val, uint(virtual_gid), 4, _GLF_IDENTITY(64, (64) + 0), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(94.19)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(94.19)), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(94.19))), clamp(mat2(1.0) * (vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(94.19))), mat2(1.0) * (vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(94.19))), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(94.19))), vec2(0.0, 0.0) + (mat2(1.0) * (vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(94.19))))))))), clamp(vec2(vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(94.19))), vec2(_GLF_IDENTITY(vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(94.19)), max(vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(94.19)), vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(94.19))))), vec2(vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(94.19)))))), (vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(94.19)), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(94.19))), clamp(mat2(1.0) * (vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(94.19))), mat2(1.0) * (vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(94.19))), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(94.19))), vec2(0.0, 0.0) + (mat2(1.0) * (vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(94.19))))))))), clamp(vec2(vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(94.19))), vec2(_GLF_IDENTITY(vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(94.19)), max(vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(94.19)), vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(94.19))))), vec2(vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(94.19))))))) / vec2(1.0, 1.0))), vec2((_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))) * mat2(1.0)))[0], (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))[1]), bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) < injectionSwitch.y)))))).x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat4(_GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat4(mat2(1.0)), (false ? _GLF_FUZZED(mat4(-568.339, 273.638, 98.20, -6407.5750, -3301.9392, -947.931, 787.602, 81.26, 7556.3102, -7.1, 74.00, -140.666, 0.6, 8.6, 85.77, 3287.4114)) : mat4(mat2(1.0))))))))) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(_GLF_IDENTITY(94.19, max(_GLF_IDENTITY(94.19, min(94.19, 94.19)), _GLF_IDENTITY(94.19, max(94.19, _GLF_IDENTITY(94.19, max(94.19, 94.19)))))))), vec2(_GLF_IDENTITY(vec2(vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(94.19))), clamp(vec2(vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(94.19))), vec2(vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(94.19))), vec2(vec2(_GLF_FUZZED(_GLF_IDENTITY(0.4, max(0.4, 0.4))), _GLF_FUZZED(94.19))))))), vec2((_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(5.7), _GLF_FUZZED(-24.70)), bvec2(false, false))), mat2(_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, 0.0)))) * (injectionSwitch))))[0], (_GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), _GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), max(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), max(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))))) / vec2(1.0, 1.0))))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_IDENTITY(((injectionSwitch))[1], (false ? _GLF_FUZZED(8778.8714) : ((injectionSwitch))[1]))), vec2(_GLF_FUZZED(-4.3), _GLF_FUZZED(6926.5723)), bvec2(false, false)))[0], _GLF_FUZZED(-81.19)), vec2(_GLF_FUZZED(-57.76), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)), _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), mat2(1.0) * (vec2(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (injectionSwitch) * mat2(1.0)), injectionSwitch)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))))).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) && true)))), (_GLF_IDENTITY(false, (false) && true)) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false))))), ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), max(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch)).y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))), (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))))) && true))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, false)))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! (bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))), false, true, false))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! (bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))))))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), true, true, false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), true, true, false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), true, true, false))))))), true, false, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), true, true, false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), true, true, false))))))), true, false, true))) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec3((_GLF_IDENTITY(false, (false) || false)), false, false))) || false)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat4(1.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8.0) : 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, sin(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2337.6995)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))), 1.0, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0))), max(0.0, 0.0))), 0.0), (mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat4(1.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 0.0), (true ? _GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 0.0), mat2(mat3x4(mat2(1.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED(mat2(-8257.0641, -9.0, 8.6, -59.18))))), float(vec4(float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 0.0), (true ? _GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 0.0), mat2(mat3x4(mat2(1.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED(mat2(-8257.0641, -9.0, 8.6, -59.18))))), 0.0, 0.0, 0.0)))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), mix(vec3(_GLF_IDENTITY((vec3(0.0, 0.0, 1.0))[0], clamp(_GLF_IDENTITY((vec3(0.0, 0.0, 1.0))[0], min((vec3(0.0, 0.0, 1.0))[0], (vec3(0.0, 0.0, 1.0))[0])), (vec3(0.0, 0.0, 1.0))[0], (vec3(0.0, 0.0, 1.0))[0])), _GLF_FUZZED(float(87420u)), _GLF_FUZZED(float(-9214))), vec3(_GLF_FUZZED(-9651.1146), (vec3(0.0, 0.0, 1.0))[1], (vec3(0.0, 0.0, 1.0))[2]), bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), vec3(0.0, 0.0, 1.0))), mix(float(_GLF_FUZZED(-4150.1556)), float(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), bool(true))), 1.0, 0.0, sin(0.0), 0.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat4(1.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, sin(0.0), 0.0), (mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat4(1.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2813.5696) : 1.0)))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(161.472) : 0.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), mix(vec3((vec3(0.0, 0.0, 1.0))[0], _GLF_IDENTITY((vec3(0.0, 0.0, 1.0))[1], 0.0 + ((vec3(0.0, 0.0, 1.0))[1])), _GLF_FUZZED(-34.80)), vec3(_GLF_FUZZED(-57.11), _GLF_FUZZED(-60.42), (vec3(0.0, 0.0, 1.0))[2]), bvec3(false, false, true))), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, sin(0.0), 0.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9862.6262) : 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 1.0, 0.0, log(1.0), 0.0, 1.0)), float(mat4(float(mat3x2(0.0, 1.0, 0.0, log(1.0), 0.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), 0.0)), 0.0, 0.0, 0.0)))).y), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat4(1.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), min(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, sin(0.0), 0.0), (mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat4(1.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, sin(_GLF_IDENTITY(0.0, (0.0) / cos(0.0))), 0.0)) + mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(tanh(-6.2))))) / 1.0)), float(_GLF_FUZZED(4025.7780)), bool(false))), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(9955.6269), max(_GLF_FUZZED(9955.6269), _GLF_FUZZED(9955.6269))))))), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))).y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false, false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, false))))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, false))))), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, false))))), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, false))))), true, true))))))), false))), true))))))), true && (bool(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec4(bvec3(! (false), true, true), true))))))))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, false || (false))), true, true), _GLF_IDENTITY(true, false || (true))))))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec4(bvec3(! (false), true, true), true)))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec4(bvec3(! (false), true, true), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), (! (false)) || false)))), true, true), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), (! (false)) || false)))), true, true), true)))), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! _GLF_IDENTITY((bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), _GLF_IDENTITY(true, ! (! (true))), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec4(bvec3(! (false), true, true), true))))))), true && (bool(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec4(bvec3(! (false), true, true), true))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! ((bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), _GLF_IDENTITY(true, ! (! (true))), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec4(bvec3(! (false), true, true), true))))))), true && (bool(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec4(bvec3(! (false), true, true), true))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + 0.0), injectionSwitch[0])), injectionSwitch[1])).y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), true, true, false))))))))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.6)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false))))))))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false))))))))), true, false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false)))))))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false)), _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), false))), false)))))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false)))))))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true), false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false)), _GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false)), _GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))), _GLF_IDENTITY(false, true && (false)))))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), false))), false))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6.7) : injectionSwitch.y))))))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))), true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(bool(false))) || _GLF_IDENTITY((true), ! (! ((true)))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, log(1.0)), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, log(1.0)), vec4(1.0, 0.0, 1.0, 1.0))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), (false ? _GLF_FUZZED(intBitsToFloat(clamp(20996, 1010, -6066))) : _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(-22.75)), bool(false))), log(1.0)), vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2.5) : _GLF_IDENTITY(1.0, (1.0) - 0.0)))) - 0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, log(1.0)), vec4(1.0, 0.0, 1.0, 1.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, _GLF_IDENTITY(1.0, (1.0) + length(0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))))))), false))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(988.673) : injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bool(! (! (false))), ! (! (bool(! (! (false)))))))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 1.0, sqrt(1.0), 0.0, 1.0, _GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), _GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), sqrt(1.0))), sqrt(1.0))), tan(0.0))))))) + vec2(0.0, 0.0)).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), float(_GLF_FUZZED(-96.85)), bool(false))), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))))), vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false)))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y))))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(49.96) : injectionSwitch.y)))))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0)), 1.0, sin(0.0), 1.0, 0.0)), vec2(vec2(vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0)), 1.0, sin(0.0), 1.0, 0.0)))))), injectionSwitch)).x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0)), 1.0, sin(0.0), 1.0, 0.0)), vec2(vec2(vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0)), 1.0, sin(0.0), 1.0, 0.0)))))), injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0)), 1.0, sin(0.0), 1.0, 0.0)), vec2(vec2(vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0)), 1.0, sin(0.0), 1.0, 0.0)))))), injectionSwitch)).x > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2046.8776), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.1)), bvec2(true, false))).x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x)), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 1.0, 0.0))), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), ((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)) / vec2(1.0, 1.0)))) * vec2(1.0, 1.0)).y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(254.303, -1574.8831))))))) * vec2(1.0, 1.0)).y, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)))[0], _GLF_FUZZED(-27.14)), vec2(_GLF_FUZZED(-3.1), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)))[1]), bvec2(false, true))).y))))) + 0.0)), 0.0 + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)).y) + 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-57.84, 2905.6219)))).x < injectionSwitch.y))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))) * vec2(1.0, 1.0)).y, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)).y))))) + 0.0)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-897.277)), float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)).y, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)).y))))) + 0.0))), bool(true)), min(mix(float(_GLF_FUZZED(-897.277)), float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)).y, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)).y))))) + 0.0))), bool(true)), mix(float(_GLF_FUZZED(-897.277)), float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)).y, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)).y))))) + 0.0))), bool(true))))))) / _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4.3) : 1.0)))))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, mix(vec2(_GLF_FUZZED(-4.7), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)[1], clamp((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)[1], (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)[1], (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)[1]))), vec2((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)[0], _GLF_FUZZED(431.092)), bvec2(true, false)))))), max((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))) * vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0)).y) / _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat2(1.0, 0.0, 0.0, exp(0.0))))))), 1.0)), 1.0))))) || false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1.2) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, float(mat4x2(injectionSwitch.y, abs(0.0), 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)))))))))
        barrier();
       return;
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_val = atomicLoad(_GLF_IDENTITY(write_val, (false ? _GLF_FUZZED(mix(virtual_gid, subgroup_local_id, true)) : write_val)), 4, 64, 0);
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, (false) && true), false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))
      return;
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), (bool(bvec3(_GLF_DEAD(false), false, true))) && true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}
