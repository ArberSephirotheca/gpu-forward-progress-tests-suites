#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 mat2 _f0;
 uvec2 _f1;
 uvec3 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_3 {
 uvec2 _f0;
 mat4 _f1;
 vec2 _f2;
 ivec4 _f3;
 bvec4 _f4;
 uint _f5;
 vec4 _f6;
} ;

struct _GLF_struct_5 {
 _GLF_struct_3 _f0;
 uvec2 _f1;
 _GLF_struct_4 _f2;
} ;

struct _GLF_struct_1 {
 uvec4 _f0;
 mat2x4 _f1;
 uvec4 _f2;
 uint workgroup_id;
 uvec4 _f3;
 mat3 _f4;
 mat2x4 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_0 {
 uvec4 _f0;
} ;

struct _GLF_struct_6 {
 _GLF_struct_0 _f0;
 _GLF_struct_2 _f1;
 mat2 _f2;
 uvec2 _f3;
 _GLF_struct_5 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id.x = num_workgroup;
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_0(uvec4(1u)), _GLF_struct_2(_GLF_struct_1(uvec4(1u), mat2x4(1.0), uvec4(1u), gl_WorkGroupID.x, uvec4(1u), mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), mat2x4(1.0), mat4x2(1.0)), uvec3(1u)), mat2(1.0), uvec2(1u), _GLF_struct_5(_GLF_struct_3(uvec2(1u), mat4(1.0), vec2(1.0), ivec4(1), bvec4(true), 1u, _GLF_IDENTITY(vec4(1.0), vec4(mat4(vec4(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 1.0)))), uvec2(1u), _GLF_struct_4(mat2(1.0), uvec2(1u), uvec3(1u), vec3(1.0))));
 do
  {
   GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id.z = _GLF_struct_replacement_6._f1._f0.workgroup_id;
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, uint(uvec4(workgroup_size, 0u, 1u, 1u))) * GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id.z;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id.y = virtual_gid;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   atomicStore(write_val, uint(GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id.y), 4, 64, 0);
  }
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     do
      {
       buf[GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id.y] = uint(subgroupAllEqual(read_val));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
}
