#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_10 {
 uvec4 _f0;
 mat4 _f1;
 bvec2 _f2;
 mat2x3 _f3;
 uint _f4;
 uvec3 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_11 {
 mat4 _f0;
 _GLF_struct_10 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_8 {
 bvec2 _f0;
} ;

struct _GLF_struct_7 {
 ivec2 _f0;
 vec3 _f1;
 mat2 _f2;
 mat4 _f3;
 float _f4;
 float _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_6 {
 bvec3 _f0;
 mat4 _f1;
 mat3x4 _f2;
 mat3x2 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_5 {
 bvec3 _f0;
} ;

struct _GLF_struct_9 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_7 _f2;
 bool _f3;
 uint _f4;
 _GLF_struct_8 _f5;
} ;

struct _GLF_struct_3 {
 mat3x2 _f0;
 float _f1;
 int _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_4 {
 vec3 _f0;
 uvec3 _f1;
 _GLF_struct_3 _f2;
} ;

struct _GLF_struct_1 {
 mat2x3 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_0 {
 bool _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
} ;

struct _GLF_struct_12 {
 _GLF_struct_2 _f0;
 vec2 _f1;
 _GLF_struct_4 _f2;
 uint workgroup_base;
 _GLF_struct_9 _f3;
 _GLF_struct_11 _f4;
 float _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_size;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_size.y = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_size.z = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_size.x = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_2(_GLF_struct_0(true, bvec2(true)), _GLF_struct_1(mat2x3(1.0), ivec4(1))), vec2(1.0), _GLF_struct_4(vec3(1.0), uvec3(1u), _GLF_struct_3(mat3x2(1.0), 1.0, 1, mat3x4(1.0))), workgroup_size * workgroup_id, _GLF_struct_9(_GLF_struct_5(bvec3(true)), _GLF_struct_6(bvec3(true), mat4(1.0), mat3x4(1.0), mat3x2(1.0), mat2x3(1.0)), _GLF_struct_7(ivec2(1), vec3(1.0), mat2(1.0), mat4(1.0), 1.0, 1.0, uvec2(1u)), true, 1u, _GLF_struct_8(bvec2(true))), _GLF_struct_11(mat4(1.0), _GLF_struct_10(uvec4(1u), mat4(1.0), bvec2(true), mat2x3(1.0), 1u, uvec3(1u), mat3x4(1.0)), vec2(1.0)), 1.0);
 uint virtual_gid = _GLF_struct_replacement_12.workgroup_base + GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_size.y * GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_size.z + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(false))
  return;
}
