#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec4(bvec3((false), false, true), false)))))), (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y)), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), mix(float(_GLF_FUZZED(518.414)), float(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), bool(true)))), 1.0, 0.0, 0.0, log(1.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 1.0, 1.0)), (float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y)), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), mix(float(_GLF_FUZZED(518.414)), float(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), bool(true)))), 1.0, 0.0, 0.0, log(1.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 1.0, 1.0))) - 0.0))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec2(_GLF_IDENTITY(true && (false), true && (true && (false))), false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))), false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), ! (! (! ((_GLF_DEAD(false))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), ! (! (! (! ((_GLF_DEAD(false))))))))))), bool(bvec2(! (_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), ! (! (! (! ((_GLF_DEAD(false))))))))))), true)))))))), (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ! (! (! ((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))))))))))) || false)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), ! (! (! ((_GLF_DEAD(false)))))))))))))))), ((_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec3(bool(false), false, false), bvec3(bvec3(bvec3(bool(false), false, false)))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))), ! _GLF_IDENTITY((! (! ((_GLF_DEAD(false))))), false || ((! (! ((_GLF_DEAD(false))))))))), true && _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))), ! (! (! ((_GLF_DEAD(false))))))), (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (! (! ((_GLF_DEAD(false))))), (! (! (! ((_GLF_DEAD(false)))))) || false)))), ((_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (! (! ((_GLF_DEAD(false))))), (! (! (! ((_GLF_DEAD(false)))))) || false))))) && true)))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))), ! (! (! ((_GLF_DEAD(false))))))), (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (! (! ((_GLF_DEAD(false))))), (! (! (! ((_GLF_DEAD(false)))))) || false)))), ((_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (! (! ((_GLF_DEAD(false))))), (! (! (! ((_GLF_DEAD(false)))))) || false))))) && true)))) || false)))))), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), ! (! (! ((_GLF_DEAD(false))))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || false)) || false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), _GLF_FUZZED(3812.6672)), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, true))), vec2(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))], injectionSwitch[1])).x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), sin(vec2(0.0, 0.0)) + ((injectionSwitch)))) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), sin(vec2(0.0, 0.0)) + ((injectionSwitch)))) - vec2(0.0, 0.0)), (true ? mat2(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), sin(vec2(0.0, 0.0)) + ((injectionSwitch)))) - vec2(0.0, 0.0)) : _GLF_FUZZED((mat3(6.2, -7.6, 0.0, -512.141, 7.3, 5.9, 0.9, -6.5, -688.396) , vec2(-272.575, 28.04))))), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), sin(vec2(0.0, 0.0)) + ((injectionSwitch)))) - vec2(0.0, 0.0), mix(vec2(((_GLF_IDENTITY((injectionSwitch), sin(vec2(0.0, 0.0)) + ((injectionSwitch)))) - vec2(0.0, 0.0))[0], _GLF_FUZZED(-2.7)), vec2(_GLF_FUZZED(6619.3399), ((_GLF_IDENTITY((injectionSwitch), sin(vec2(0.0, 0.0)) + ((injectionSwitch)))) - vec2(0.0, 0.0))[1]), bvec2(false, true)))), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), sin(vec2(0.0, 0.0)) + ((injectionSwitch)))) - vec2(0.0, 0.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), sin(vec2(0.0, 0.0)) + ((injectionSwitch)))) - vec2(0.0, 0.0)), (_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), sin(vec2(0.0, 0.0)) + ((injectionSwitch)))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))))) * mat2(1.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), sin(vec2(0.0, 0.0)) + ((injectionSwitch)))) - _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-745.801), _GLF_FUZZED((-762.284))), vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-80.62), _GLF_FUZZED(float(5428u))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - 0.0)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) - 0.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))))).x, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-5957.2247) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))))).x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true)), true && (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (bool(bool(_GLF_DEAD(false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), (! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))) && true))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), float(_GLF_FUZZED(-2.5)), bool(false))))) && true)) && true))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, true, true))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true, ! (! ((_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true))), false, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true, ! (! ((_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true))), false, true)), true && (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true, ! (! ((_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true))), false, true))))) || false)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)))))), ! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(false, true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(false, true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(false, true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true)))))))) && true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (_GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))))) && true)) || false), true, _GLF_IDENTITY(true, (true) && true)), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! ((_GLF_IDENTITY(false, bool(bvec2(false, true))))))) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)) || false), true, _GLF_IDENTITY(true, (true) && true)), false)))))), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true))))))))))) || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), 1.0, 0.0, cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4.8)), bool(false))), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))) - uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true)))) && true))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (false) && true))), ! (! (bool(bool(_GLF_IDENTITY(false, (false) && true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), true && (! ((false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), false, false, false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), max(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), 0.0 + (clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))))) > injectionSwitch.y), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y))), ! (! ((! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y))))))))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))))) && true), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (true && ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(! (true && ((injectionSwitch.x > injectionSwitch.y))), (! (true && ((injectionSwitch.x > injectionSwitch.y)))) && true)))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), false || ((false)))), ! (! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0), tan(0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0), (true ? _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1]))))) + vec2(0.0, 0.0)).x, injectionSwitch.x))) / 1.0) : _GLF_FUZZED(-8367.9721))))) > injectionSwitch.y))))))) && true), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))) && true)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true)), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), false, false)))) || false))))) && _GLF_IDENTITY(true, true && (true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))), (injectionSwitch.x > injectionSwitch.y)))), ! (! _GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (! (false))), bool(_GLF_IDENTITY(bvec3(bool(! (! (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(! (! (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(bool(! (! (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), false))))), ! (! (bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))), ! (! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))), (bool(_GLF_IDENTITY(bool(! (! (false))), _GLF_IDENTITY(! (! (bool(! (! (false))))), _GLF_IDENTITY(bool(bvec2(! (! (bool(! (! (false))))), false)), false || (_GLF_IDENTITY(bool(bvec2(! (! (bool(! (! (false))))), false)), (bool(bvec2(! (! (bool(! (! (false))))), false))) || false))))))) || false))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y)))))))), bool(bool(((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (! (false))), bool(_GLF_IDENTITY(bvec3(bool(! (! (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(! (! (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(bool(! (! (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), false))))), ! (! (bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))), ! (! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))), (bool(_GLF_IDENTITY(bool(! (! (false))), _GLF_IDENTITY(! (! (bool(! (! (false))))), _GLF_IDENTITY(bool(bvec2(! (! (bool(! (! (false))))), false)), false || (_GLF_IDENTITY(bool(bvec2(! (! (bool(! (! (false))))), false)), (bool(bvec2(! (! (bool(! (! (false))))), false))) || false))))))) || false))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y)))))))))))))))) && true)) && true)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, abs(0.0), 0.0, 1.0), mat4(1.0) * (mat2x4(injectionSwitch, 0.0, 1.0, 0.0, abs(0.0), 0.0, 1.0))))).x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-424.065))) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.6) : injectionSwitch.y)))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.6) : injectionSwitch.y)))))))))))), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-424.065))) > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-424.065))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.6) : injectionSwitch.y)), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.6) : injectionSwitch.y)), 0.0, abs(0.0), 0.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.6) : injectionSwitch.y)), 0.0, abs(0.0), 0.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0), (mat3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.6) : injectionSwitch.y)), 0.0, abs(0.0), 0.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))))), true, false, false))) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))), true && ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, abs(0.0), 0.0, 1.0), mat4(1.0) * (mat2x4(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0))), 0.0, 1.0))))).x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-424.065), min(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, abs(0.0), 0.0, 1.0), mat4(1.0) * (mat2x4(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0))), 0.0, 1.0))))).x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-424.065), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, abs(0.0), 0.0, 1.0), mat4(1.0) * (mat2x4(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0))), 0.0, 1.0))))).x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-424.065), 1.0 * (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, abs(0.0), 0.0, 1.0), mat4(1.0) * (mat2x4(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0))), 0.0, 1.0))))).x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-424.065)))) - 0.0), true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, abs(0.0), 0.0, 1.0), mat4(1.0) * (mat2x4(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0))), 0.0, 1.0))))).x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-424.065))))) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(79.20)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.6) : injectionSwitch.y)))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.6) : injectionSwitch.y)))))))))))), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED((- -6.0))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) - 0.0) : _GLF_FUZZED(-424.065))) > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED((- -6.0))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) - 0.0) : _GLF_FUZZED(-424.065))) > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-424.065))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.6) : injectionSwitch.y)), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(3.6) : injectionSwitch.y)), 0.0, abs(0.0), _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(pow(543.961, -38.75)) : 0.0)), 1.0, 1.0, sqrt(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4734.9077)), float(0.0), bool(true)))), float(_GLF_FUZZED(vec4(-168.803, 95.98, 74.37, -6.3).g)), bool(false)))), 0.0, 1.0), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.6) : injectionSwitch.y)), 0.0, abs(0.0), 0.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0), (mat3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.6) : injectionSwitch.y)), 0.0, abs(0.0), 0.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))))), true, false, false))) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.6)), _GLF_IDENTITY(bool(false), true && (bool(false)))))), clamp(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.6)), _GLF_IDENTITY(bool(false), true && (bool(false)))))), vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.6)), _GLF_IDENTITY(bool(false), true && (bool(false)))))), vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.6)), _GLF_IDENTITY(bool(false), true && (bool(false)))))))) + (injectionSwitch)).x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(exp2(9.5)) : float(mat3x4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, 0.0)))), (float(mat3x4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, 0.0))) - 0.0))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(exp2(9.5)) : float(mat3x4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, 0.0)))), (float(mat3x4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, 0.0))) - 0.0)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(exp2(9.5)) : float(mat3x4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, 0.0)))), (float(mat3x4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, 0.0))) - 0.0)))))))), ((injectionSwitch.x > injectionSwitch.y)) || false), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1188.8922))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, true && (false)))) && _GLF_IDENTITY(true, ! (! (true)))))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))), (_GLF_IDENTITY(true, ! (! (true)))) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY((! (false)), false || ((! (_GLF_IDENTITY(false, ! (! (false)))))))), ! _GLF_IDENTITY((! (bool(! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))))), true && (_GLF_IDENTITY((! (bool(! (! (false))))), true && ((! (bool(! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (false)), (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), (bool(false)) || false)) || false))) || (! (false))))) && true)), ! (! (bool(! (! (false)))))))) || false))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), false))))))))), (_GLF_IDENTITY(true, ! (! (true)))) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY((! (false)), false || ((! (_GLF_IDENTITY(false, ! (! (false)))))))), ! _GLF_IDENTITY((! (bool(! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((! (bool(! (! (false))))), ((! (bool(! (! (false)))))) && true), true && ((! (bool(! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (false)), (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec3(_GLF_IDENTITY(bool(false), true && (bool(false))), false, true))), true))), (_GLF_IDENTITY(bool(false), (bool(false)) || false)) || false))) || (! (false))))) && true)), ! (! (bool(! (! (false)))))))) || false))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)))))))) && true)))) && true)) && true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.5)), float(injectionSwitch.y), bool(true))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))))))) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))))) && true)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))))) && true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.5)), float(injectionSwitch.y), bool(true))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))))))) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))))) && true)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))))) && true))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) / 1.0)), injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.5)), float(injectionSwitch.y), bool(true))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(9443.2659, 6.0)) : (injectionSwitch)))).y))))))))))) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), false, false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))))) && true)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), abs(0.0), 1.0, 0.0)), min(float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), abs(0.0), 1.0, 0.0)), float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), abs(0.0), 1.0, 0.0))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(351.092) : 0.0))) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) - sin(0.0)), injectionSwitch.y)))), true, false, true)))))))) && true)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), abs(0.0), 1.0, 0.0)), min(float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), abs(0.0), 1.0, 0.0)), float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), abs(0.0), 1.0, 0.0))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(351.092) : 0.0))) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) - sin(0.0)), injectionSwitch.y)))), true, false, true)))))))) && true))), (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), abs(0.0), 1.0, 0.0)), min(float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), abs(0.0), 1.0, 0.0)), float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), abs(0.0), 1.0, 0.0))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(351.092) : 0.0))) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) - sin(0.0)), injectionSwitch.y)))), true, false, true)))))))) && true)))) && true))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))) || false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))) || false)) || false), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))) || false)) || false), true)))) || false)), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, false)))), bool(_GLF_IDENTITY(bool((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, false))))), bool(bool(bool((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, false)))))))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1.4)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) - 0.0)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), abs(1.0), 0.0, 1.0, 1.0))).x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-21.77)), bool(false))), 1.0, 0.0, abs(0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), (float(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))) - determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), (false ? _GLF_FUZZED(-7.1) : 1.0)), _GLF_IDENTITY(0.0, (0.0) - log(1.0)), 0.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0), mat2x4(mat2x4(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.8) : 1.0)), 1.0) : _GLF_FUZZED(mat4x3(-3.0, -120.255, 54.91, -6.0, -494.968, 8.0, -85.95, 2504.6626, -1.4, 7.3, 7707.2444, -2.0))))), float(mat3x2(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-21.77)), bool(false))), 1.0, 0.0, abs(0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))))), (false ? _GLF_FUZZED(-7.1) : 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), mat2x4(mat2x4(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.8) : 1.0)), 1.0) : _GLF_FUZZED(mat4x3(-3.0, -120.255, 54.91, -6.0, -494.968, 8.0, -85.95, 2504.6626, -1.4, 7.3, 7707.2444, -2.0))))), 1.0, abs(1.0), 1.0, 0.0, 1.0))))), float(_GLF_FUZZED(-6.5)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))), injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))) || false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))) || false)) || false), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))) || false)) || false), true)))) || false)), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, false)))), bool(_GLF_IDENTITY(bool((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, false))))), bool(bool(bool((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, false)))))))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1.4)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) - 0.0)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), abs(1.0), 0.0, 1.0, 1.0))).x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-21.77)), bool(false))), 1.0, 0.0, abs(0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), (float(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))) - determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), (false ? _GLF_FUZZED(-7.1) : 1.0)), _GLF_IDENTITY(0.0, (0.0) - log(1.0)), 0.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0), mat2x4(mat2x4(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.8) : 1.0)), 1.0) : _GLF_FUZZED(mat4x3(-3.0, -120.255, 54.91, -6.0, -494.968, 8.0, -85.95, 2504.6626, -1.4, 7.3, 7707.2444, -2.0))))), float(mat3x2(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-21.77)), bool(false))), 1.0, 0.0, abs(0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))))), (false ? _GLF_FUZZED(-7.1) : 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), mat2x4(mat2x4(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.8) : 1.0)), 1.0) : _GLF_FUZZED(mat4x3(-3.0, -120.255, 54.91, -6.0, -494.968, 8.0, -85.95, 2504.6626, -1.4, 7.3, 7707.2444, -2.0))))), 1.0, abs(1.0), 1.0, 0.0, 1.0))))), float(_GLF_FUZZED(-6.5)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))), injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))) && true)), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))) || false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))) || false)) || false), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))) || false)) || false), true)))) || false)), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, false)))), bool(_GLF_IDENTITY(bool((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, false))))), bool(bool(bool((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, false)))))))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1.4)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) - 0.0)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), abs(1.0), 0.0, 1.0, 1.0))).x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-21.77)), bool(false))), 1.0, 0.0, abs(0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), (float(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))) - determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), (false ? _GLF_FUZZED(-7.1) : 1.0)), _GLF_IDENTITY(0.0, (0.0) - log(1.0)), 0.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0), mat2x4(mat2x4(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.8) : 1.0)), 1.0) : _GLF_FUZZED(mat4x3(-3.0, -120.255, 54.91, -6.0, -494.968, 8.0, -85.95, 2504.6626, -1.4, 7.3, 7707.2444, -2.0))))), float(mat3x2(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-21.77)), bool(false))), 1.0, 0.0, abs(0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))))), (false ? _GLF_FUZZED(-7.1) : 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), mat2x4(mat2x4(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.8) : 1.0)), 1.0) : _GLF_FUZZED(mat4x3(-3.0, -120.255, 54.91, -6.0, -494.968, 8.0, -85.95, 2504.6626, -1.4, 7.3, 7707.2444, -2.0))))), 1.0, abs(1.0), 1.0, 0.0, 1.0))))), float(_GLF_FUZZED(-6.5)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))), injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))) && true))) || false)) || false), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))) || false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))) || false)) || false), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))) || false)) || false), true)))) || false)), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, false)))), bool(_GLF_IDENTITY(bool((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, false))))), bool(bool(bool((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, false)))))))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1.4)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) - 0.0)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), abs(1.0), 0.0, 1.0, 1.0))).x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-21.77)), bool(false))), 1.0, 0.0, abs(0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), (float(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))) - determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), (false ? _GLF_FUZZED(-7.1) : 1.0)), _GLF_IDENTITY(0.0, (0.0) - log(1.0)), 0.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0), mat2x4(mat2x4(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.8) : 1.0)), 1.0) : _GLF_FUZZED(mat4x3(-3.0, -120.255, 54.91, -6.0, -494.968, 8.0, -85.95, 2504.6626, -1.4, 7.3, 7707.2444, -2.0))))), float(mat3x2(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-21.77)), bool(false))), 1.0, 0.0, abs(0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))))), (false ? _GLF_FUZZED(-7.1) : 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), mat2x4(mat2x4(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.8) : 1.0)), 1.0) : _GLF_FUZZED(mat4x3(-3.0, -120.255, 54.91, -6.0, -494.968, 8.0, -85.95, 2504.6626, -1.4, 7.3, 7707.2444, -2.0))))), 1.0, abs(1.0), 1.0, 0.0, 1.0))))), float(_GLF_FUZZED(-6.5)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))), injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))) || false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))) || false)) || false), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))) || false)) || false), true)))) || false)), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, false)))), bool(_GLF_IDENTITY(bool((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, false))))), bool(bool(bool((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, false)))))))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1.4)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) - 0.0)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), abs(1.0), 0.0, 1.0, 1.0))).x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-21.77)), bool(false))), 1.0, 0.0, abs(0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), (float(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))) - determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), (false ? _GLF_FUZZED(-7.1) : 1.0)), _GLF_IDENTITY(0.0, (0.0) - log(1.0)), 0.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0), mat2x4(mat2x4(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.8) : 1.0)), 1.0) : _GLF_FUZZED(mat4x3(-3.0, -120.255, 54.91, -6.0, -494.968, 8.0, -85.95, 2504.6626, -1.4, 7.3, 7707.2444, -2.0))))), float(mat3x2(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-21.77)), bool(false))), 1.0, 0.0, abs(0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))))), (false ? _GLF_FUZZED(-7.1) : 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), mat2x4(mat2x4(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.8) : 1.0)), 1.0) : _GLF_FUZZED(mat4x3(-3.0, -120.255, 54.91, -6.0, -494.968, 8.0, -85.95, 2504.6626, -1.4, 7.3, 7707.2444, -2.0))))), 1.0, abs(1.0), 1.0, 0.0, 1.0))))), float(_GLF_FUZZED(-6.5)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))), injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))) && true)), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))) || false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))) || false)) || false), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))) || false)) || false), true)))) || false)), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, false)))), bool(_GLF_IDENTITY(bool((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, false))))), bool(bool(bool((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, false)))))))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1.4)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) - 0.0)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), abs(1.0), 0.0, 1.0, 1.0))).x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-21.77)), bool(false))), 1.0, 0.0, abs(0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), (float(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))) - determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), (false ? _GLF_FUZZED(-7.1) : 1.0)), _GLF_IDENTITY(0.0, (0.0) - log(1.0)), 0.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0), mat2x4(mat2x4(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.8) : 1.0)), 1.0) : _GLF_FUZZED(mat4x3(-3.0, -120.255, 54.91, -6.0, -494.968, 8.0, -85.95, 2504.6626, -1.4, 7.3, 7707.2444, -2.0))))), float(mat3x2(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-21.77)), bool(false))), 1.0, 0.0, abs(0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))))), (false ? _GLF_FUZZED(-7.1) : 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), mat2x4(mat2x4(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.8) : 1.0)), 1.0) : _GLF_FUZZED(mat4x3(-3.0, -120.255, 54.91, -6.0, -494.968, 8.0, -85.95, 2504.6626, -1.4, 7.3, 7707.2444, -2.0))))), 1.0, abs(1.0), 1.0, 0.0, 1.0))))), float(_GLF_FUZZED(-6.5)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))), injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))) && true))) || false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) && true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), true && (_GLF_DEAD(false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))), _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))) && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))), true, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (bool(bvec4(false, true, true, true))))), true, true, false))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            return;
           return;
          }
         return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY((false), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))) || ((false)))) && true)) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true && (false), false || (_GLF_IDENTITY(true && (false), false || (true && (false))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true && (false), (true && (false)) || false), false || (true && (false))), false, true, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true && (false), false || (true && (false))), false, true, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(true && (false), false || (true && (false))), false, true, true))))), false, true)))), true, false, false)))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))), mix(float(_GLF_FUZZED((-4.6 / 6.5))), float(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x), (max(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x)) * 1.0)) : _GLF_FUZZED(-3031.5835)))), bool(true))) > injectionSwitch.y)), true))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), false || (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-540.925), max(_GLF_FUZZED(-540.925), _GLF_FUZZED(-540.925))))) > injectionSwitch.y)))))))), ! (! ((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-540.925))) > injectionSwitch.y)), bool(bool(((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-540.925))) > injectionSwitch.y))))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2((_GLF_DEAD(false)), false)))))) || false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) - 0.0)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (! (! (injectionSwitch.x > injectionSwitch.y))))))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) - 0.0)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (! (! (injectionSwitch.x > injectionSwitch.y))))))) && true)), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) - 0.0)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (! (! (injectionSwitch.x > injectionSwitch.y))))))) && true)), true, false)))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id * subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), (false ? _GLF_FUZZED(num_workgroup) : subgroup_id * subgroup_size)), subgroup_id * subgroup_size)) | (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_id * subgroup_size), 0u | (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_id * subgroup_size), ~ (~ ((false ? _GLF_FUZZED(num_workgroup) : subgroup_id * subgroup_size))))))), subgroup_id * subgroup_size), max(max(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id * subgroup_size)), subgroup_id * subgroup_size), max(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id * subgroup_size)), subgroup_id * subgroup_size)))))) + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id * subgroup_size) + 0u))), _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) + subgroup_local_id, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (subgroup_id * subgroup_size)), max(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id * subgroup_size)), subgroup_id * subgroup_size))) ^ 0u) + subgroup_local_id), clamp((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (subgroup_id * subgroup_size)), max(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id * subgroup_size)), subgroup_id * subgroup_size))) ^ 0u) + subgroup_local_id), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (subgroup_id * subgroup_size)), max(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id * subgroup_size)), subgroup_id * subgroup_size))) ^ 0u) + subgroup_local_id), (true ? _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (subgroup_id * subgroup_size)), max(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id * subgroup_size)), subgroup_id * subgroup_size))) ^ 0u) + subgroup_local_id), min((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (subgroup_id * subgroup_size)), max(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id * subgroup_size)), subgroup_id * subgroup_size))) ^ 0u) + subgroup_local_id), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (subgroup_id * subgroup_size)), max(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id * subgroup_size)), subgroup_id * subgroup_size))) ^ 0u) + subgroup_local_id))) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (subgroup_id * subgroup_size)), max(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id * subgroup_size)), subgroup_id * subgroup_size))) ^ 0u) + subgroup_local_id))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 atomicStore(write_val, _GLF_IDENTITY(uint(virtual_gid), uint(uvec4(_GLF_IDENTITY(uint(virtual_gid), 0u + (uint(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))))), 0u, 1u, 0u))), 4, _GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, int(int(64)))) << 0))), 0);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(52.38)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), bool(true))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(52.38)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), bool(true))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(52.38, min(52.38, 52.38)))), (true ? float(_GLF_FUZZED(_GLF_IDENTITY(52.38, min(52.38, 52.38)))) : _GLF_FUZZED(-6.6))), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), bool(_GLF_IDENTITY(true, true && (true))))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 1.0, exp(0.0), abs(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), mix(vec3(_GLF_FUZZED(0.9), _GLF_FUZZED(68.10), (vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 1.0, exp(0.0), abs(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))[2]), vec3((vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 1.0, exp(0.0), abs(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))[0], (vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 1.0, exp(0.0), abs(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))[1], _GLF_FUZZED(1.1)), bvec3(true, true, false))))), vec2(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 1.0, exp(0.0), abs(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), mix(vec3(_GLF_FUZZED(0.9), _GLF_FUZZED(68.10), (vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 1.0, exp(0.0), abs(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))[2]), vec3((vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 1.0, exp(0.0), abs(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))[0], (vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 1.0, exp(0.0), abs(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))[1], _GLF_FUZZED(1.1)), bvec3(true, true, false))))), (false ? _GLF_FUZZED(vec2(665.611, 7.3)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 1.0, exp(0.0), abs(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), mix(vec3(_GLF_FUZZED(0.9), _GLF_FUZZED(68.10), (vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 1.0, exp(0.0), abs(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))[2]), vec3((vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 1.0, exp(0.0), abs(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))[0], (vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 1.0, exp(0.0), abs(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))[1], _GLF_FUZZED(1.1)), bvec3(true, true, false))))), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 1.0, exp(0.0), abs(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), mix(vec3(_GLF_FUZZED(0.9), _GLF_FUZZED(68.10), (vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 1.0, exp(0.0), abs(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))[2]), vec3((vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 1.0, exp(0.0), abs(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))[0], (vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 1.0, exp(0.0), abs(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))[1], _GLF_FUZZED(1.1)), bvec3(true, true, false))))))[0], _GLF_FUZZED(82.19)), vec2(_GLF_FUZZED(5.0), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 1.0, exp(0.0), abs(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), mix(vec3(_GLF_FUZZED(0.9), _GLF_FUZZED(68.10), (vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 1.0, exp(0.0), abs(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))[2]), vec3((vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 1.0, exp(0.0), abs(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))[0], (vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 1.0, exp(0.0), abs(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))[1], _GLF_FUZZED(1.1)), bvec3(true, true, false))))))[1]), bvec2(false, true))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0))).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0)), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))) || false)))))
  return;
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
}
