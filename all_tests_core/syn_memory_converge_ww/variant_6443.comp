#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uvec2 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))) > (1 ^ 1)), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), (_GLF_IDENTITY(false, false || (false))) && true) || (_GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1))))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))), bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))))))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))))
        {
         barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 uvec4 GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizenum_workgroup;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   do
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))) && true); _injected_loop_counter --)
            {
             barrier();
            }
          }
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec3 GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_size;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizenum_workgroup.xyz = GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_size;
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))) && true))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 uvec2 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (bool(bool(_GLF_DEAD(false))))))))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false))
        barrier();
       barrier();
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         do
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 1)); _injected_loop_counter ++)
              {
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-0.0 + vec3(-7.2, 4.7, -1100.3397)).t)), vec2(_GLF_FUZZED(842.418), (injectionSwitch)[1]), bvec2(false, true))).y))))
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 barrier();
                }
               else
                {
                }
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))));
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
            {
             for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               barrier();
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 0)); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))), (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) * sqrt(vec2(1.0, 1.0)), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))), mix(vec2(_GLF_FUZZED(-511.421), ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))))[1]), vec2(((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))))[0], _GLF_FUZZED(-6.6)), bvec2(true, false))) / vec2(1.0, 1.0))) * sqrt(vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-40.49) : _GLF_IDENTITY(1.0, (1.0) - 0.0)))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).y, injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6820.6722)), float(1.0), bool(true))), 1.0))) * sqrt(vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(388.072))), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0))).y, injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)), 0.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0)), max(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)), 0.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)), 0.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0))))))))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(vec2(-5.9, 589.275)) : clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))), injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0))), vec2(0.0, 0.0) + ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch), _GLF_IDENTITY((clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))), injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0), ((clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-4.7)))) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))), injectionSwitch, injectionSwitch)) / _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(injectionSwitch)))))) + abs(vec2(0.0, 0.0)))))) / vec2(1.0, 1.0))))) * sqrt(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))).y, injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)) * mat2(1.0)))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)) * mat2(1.0)))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)) * mat2(1.0)))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)) * mat2(1.0)))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)) * mat2(1.0)))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y))))))), bool(bool(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)) * mat2(1.0)))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)) * mat2(1.0)))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)))))))))))))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)) * mat2(1.0)))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)) * mat2(1.0)))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)) * mat2(1.0)))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)) * mat2(1.0)))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)) * mat2(1.0)))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y))))))), bool(bool(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)) * mat2(1.0)))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)) * mat2(1.0)))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y))))))))))))))))) || false))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(vec2(-5.9, 589.275)) : clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))), injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0))), vec2(0.0, 0.0) + ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch), _GLF_IDENTITY((clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))), injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0), ((clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-4.7)))) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))), injectionSwitch, injectionSwitch)) / _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(injectionSwitch)))))) + abs(vec2(0.0, 0.0)))))) / vec2(1.0, 1.0))))) * sqrt(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))).y, injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)) * mat2(1.0)))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)) * mat2(1.0)))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)) * mat2(1.0)))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)) * mat2(1.0)))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)) * mat2(1.0)))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y))))))), bool(bool(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)) * mat2(1.0)))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)) * mat2(1.0)))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)))))))))))))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)) * mat2(1.0)))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)) * mat2(1.0)))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)) * mat2(1.0)))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)) * mat2(1.0)))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)) * mat2(1.0)))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y))))))), bool(bool(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)) * mat2(1.0)))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)) * mat2(1.0)))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y))))))))))))))))) || false))), false))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) * sqrt(vec2(1.0, 1.0))).y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(22.94)))), float(_GLF_FUZZED(-653.622)), bool(false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(48.05, -977.173, -0.9).g)), vec2(_GLF_FUZZED((-4.9 + 91.26)), (injectionSwitch)[1]), bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))))), 0.0), max((injectionSwitch) - vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))))), 0.0), _GLF_IDENTITY((injectionSwitch) - vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))))), 0.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))))), 0.0)))))), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y))))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(72.43) : 0.0)))), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) * _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), _GLF_IDENTITY(mat2(1.0) * (sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(155.960)), vec2(_GLF_FUZZED(5.7), (vec2(1.0, 1.0))[1]), bvec2(false, true))))), max(mat2(1.0) * (sqrt(vec2(1.0, 1.0))), mat2(1.0) * _GLF_IDENTITY((sqrt(vec2(1.0, 1.0))), max((sqrt(vec2(1.0, 1.0))), _GLF_IDENTITY((sqrt(vec2(1.0, 1.0))), mat2(1.0) * ((sqrt(vec2(1.0, 1.0))))))))))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8964.9283), _GLF_FUZZED(9945.1060)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), clamp(float(mat2x4(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat2x4(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat2x4(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))), (false ? _GLF_FUZZED(-12.96) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), clamp(float(mat2x4(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat2x4(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat2x4(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))), min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), clamp(float(mat2x4(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat2x4(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat2x4(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), clamp(float(mat2x4(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat2x4(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat2x4(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))))))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0)), 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, exp(0.0), exp(0.0))), (false ? _GLF_FUZZED(3993.0378) : float(mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0)), 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, exp(0.0), exp(0.0))))))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), clamp(mat2(1.0) * (clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), mat2(1.0) * (clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), mat2(1.0) * (clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))))))) / vec2(1.0, 1.0))) * sqrt(vec2(1.0, 1.0)), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) * sqrt(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).y, injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)))))), false || (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-611.347), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-6346.8147)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), vec2(vec3((injectionSwitch) - vec2(0.0, 0.0), 1.0)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))))), injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0))), vec2(0.0, 0.0) + ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch), _GLF_IDENTITY((clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-0.7 * -67.30))), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-4.4, 2.2)))) - vec2(0.0, 0.0)))))), injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY((clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-0.7 * -67.30))), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-4.4, 2.2)))) - vec2(0.0, 0.0)))))), injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY((clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-0.7 * -67.30))), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-4.4, 2.2)))) - vec2(0.0, 0.0)))))), injectionSwitch, injectionSwitch)), mat2(1.0) * ((clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-0.7 * -67.30))), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-4.4, 2.2)))) - vec2(0.0, 0.0)))))), injectionSwitch, injectionSwitch)))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-0.7 * -67.30))), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-4.4, 2.2)))) - vec2(0.0, 0.0)))))), injectionSwitch, injectionSwitch)), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-0.7 * -67.30))), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-4.4, 2.2)))) - vec2(0.0, 0.0)))))), injectionSwitch, injectionSwitch)))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-0.7 * -67.30))), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-4.4, 2.2)))) - vec2(0.0, 0.0)))))), injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0))))) * sqrt(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), clamp(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), max(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))), vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))).y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)) - vec2(0.0, 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) / vec2(1.0, 1.0), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), min(((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)))) * mat2(1.0)))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) * _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), mat2(1.0) * (sqrt(vec2(1.0, 1.0))))).y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(95.53), _GLF_FUZZED(-1414.6392)), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1]), bvec2(true, true))), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch)))) + sin(vec2(0.0, 0.0))) - vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))))), 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(abs(vec2(1.0, 1.0))))))) / vec2(1.0, 1.0))) * sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0))), vec2(1.0, 1.0), vec2(1.0, 1.0))))).y, injectionSwitch.y))))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(72.43) : 0.0)))), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) * _GLF_IDENTITY(sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(4.0, 832.805)) : vec2(1.0, 1.0)))))), _GLF_IDENTITY(mat2(1.0) * (sqrt(vec2(1.0, 1.0))), max(mat2(1.0) * (sqrt(vec2(1.0, 1.0))), mat2(1.0) * (sqrt(vec2(1.0, 1.0))))))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8964.9283), _GLF_FUZZED(9945.1060)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) * _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), mat2(1.0) * (sqrt(vec2(1.0, 1.0))))).y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(95.53), _GLF_FUZZED(-1414.6392)), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1]), bvec2(true, true))), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch)))) + sin(vec2(0.0, 0.0))) - vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))))), 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(abs(vec2(1.0, 1.0))))))) / vec2(1.0, 1.0))) * sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0))), vec2(1.0, 1.0), vec2(1.0, 1.0))))).y, injectionSwitch.y))))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(72.43) : 0.0)))), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) * _GLF_IDENTITY(sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(4.0, 832.805)) : vec2(1.0, 1.0)))))), _GLF_IDENTITY(mat2(1.0) * (sqrt(vec2(1.0, 1.0))), max(mat2(1.0) * (sqrt(vec2(1.0, 1.0))), mat2(1.0) * (sqrt(vec2(1.0, 1.0))))))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8964.9283), _GLF_FUZZED(9945.1060)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))))), false || (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) * _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), mat2(1.0) * (sqrt(vec2(1.0, 1.0))))).y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(95.53), _GLF_FUZZED(-1414.6392)), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1]), bvec2(true, true))), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch)))) + sin(vec2(0.0, 0.0))) - vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))))), 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(abs(vec2(1.0, 1.0))))))) / vec2(1.0, 1.0))) * sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0))), vec2(1.0, 1.0), vec2(1.0, 1.0))))).y, injectionSwitch.y))))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(72.43) : 0.0)))), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) * _GLF_IDENTITY(sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(4.0, 832.805)) : vec2(1.0, 1.0)))))), _GLF_IDENTITY(mat2(1.0) * (sqrt(vec2(1.0, 1.0))), max(mat2(1.0) * (sqrt(vec2(1.0, 1.0))), mat2(1.0) * (sqrt(vec2(1.0, 1.0))))))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8964.9283), _GLF_FUZZED(9945.1060)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))))))))) || false))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), clamp(mat2(1.0) * (clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), mat2(1.0) * (clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), mat2(1.0) * (clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))))))) / vec2(1.0, 1.0))) * sqrt(vec2(1.0, 1.0)), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) * sqrt(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).y, injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)))))), false || (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-611.347), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-6346.8147)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), vec2(vec3((injectionSwitch) - vec2(0.0, 0.0), 1.0)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))))), injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0))), vec2(0.0, 0.0) + ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch), _GLF_IDENTITY((clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-0.7 * -67.30))), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-4.4, 2.2)))) - vec2(0.0, 0.0)))))), injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY((clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-0.7 * -67.30))), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-4.4, 2.2)))) - vec2(0.0, 0.0)))))), injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY((clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-0.7 * -67.30))), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-4.4, 2.2)))) - vec2(0.0, 0.0)))))), injectionSwitch, injectionSwitch)), mat2(1.0) * ((clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-0.7 * -67.30))), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-4.4, 2.2)))) - vec2(0.0, 0.0)))))), injectionSwitch, injectionSwitch)))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-0.7 * -67.30))), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-4.4, 2.2)))) - vec2(0.0, 0.0)))))), injectionSwitch, injectionSwitch)), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-0.7 * -67.30))), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-4.4, 2.2)))) - vec2(0.0, 0.0)))))), injectionSwitch, injectionSwitch)))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-0.7 * -67.30))), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-4.4, 2.2)))) - vec2(0.0, 0.0)))))), injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0))))) * sqrt(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), clamp(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), max(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))), vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))).y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)) - vec2(0.0, 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) / vec2(1.0, 1.0), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), min(((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)))) * mat2(1.0)))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) * _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), mat2(1.0) * (sqrt(vec2(1.0, 1.0))))).y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(95.53), _GLF_FUZZED(-1414.6392)), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1]), bvec2(true, true))), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch)))) + sin(vec2(0.0, 0.0))) - vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))))), 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(abs(vec2(1.0, 1.0))))))) / vec2(1.0, 1.0))) * sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0))), vec2(1.0, 1.0), vec2(1.0, 1.0))))).y, injectionSwitch.y))))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(72.43) : 0.0)))), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) * _GLF_IDENTITY(sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(4.0, 832.805)) : vec2(1.0, 1.0)))))), _GLF_IDENTITY(mat2(1.0) * (sqrt(vec2(1.0, 1.0))), max(mat2(1.0) * (sqrt(vec2(1.0, 1.0))), mat2(1.0) * (sqrt(vec2(1.0, 1.0))))))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8964.9283), _GLF_FUZZED(9945.1060)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) * _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), mat2(1.0) * (sqrt(vec2(1.0, 1.0))))).y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(95.53), _GLF_FUZZED(-1414.6392)), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1]), bvec2(true, true))), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch)))) + sin(vec2(0.0, 0.0))) - vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))))), 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(abs(vec2(1.0, 1.0))))))) / vec2(1.0, 1.0))) * sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0))), vec2(1.0, 1.0), vec2(1.0, 1.0))))).y, injectionSwitch.y))))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(72.43) : 0.0)))), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) * _GLF_IDENTITY(sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(4.0, 832.805)) : vec2(1.0, 1.0)))))), _GLF_IDENTITY(mat2(1.0) * (sqrt(vec2(1.0, 1.0))), max(mat2(1.0) * (sqrt(vec2(1.0, 1.0))), mat2(1.0) * (sqrt(vec2(1.0, 1.0))))))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8964.9283), _GLF_FUZZED(9945.1060)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))))), false || (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) * _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), mat2(1.0) * (sqrt(vec2(1.0, 1.0))))).y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(95.53), _GLF_FUZZED(-1414.6392)), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1]), bvec2(true, true))), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch)))) + sin(vec2(0.0, 0.0))) - vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))))), 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(abs(vec2(1.0, 1.0))))))) / vec2(1.0, 1.0))) * sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0))), vec2(1.0, 1.0), vec2(1.0, 1.0))))).y, injectionSwitch.y))))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(72.43) : 0.0)))), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) * _GLF_IDENTITY(sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(4.0, 832.805)) : vec2(1.0, 1.0)))))), _GLF_IDENTITY(mat2(1.0) * (sqrt(vec2(1.0, 1.0))), max(mat2(1.0) * (sqrt(vec2(1.0, 1.0))), mat2(1.0) * (sqrt(vec2(1.0, 1.0))))))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8964.9283), _GLF_FUZZED(9945.1060)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))))))))) || false))), false, true, false))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), clamp(float(mat2x4(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / determinant(mat2(1.0, 1.0, 0.0, 1.0))), min(0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat2x4(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 0.0)), min(float(mat3x4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 0.0)), float(mat3x4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 0.0))))) : _GLF_FUZZED(94.05))), 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(3.6)), bool(false))), _GLF_FUZZED(-669.816)), vec2(_GLF_FUZZED(-0.7), (injectionSwitch)[1]), bvec2(false, true))).x, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0)))), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))))))) || false)))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-571.676)), vec2(_GLF_FUZZED(7.6), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(_GLF_IDENTITY(false, (false) && true), true))).x < injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), ! (! (_GLF_WRAPPED_IF_TRUE(true))))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), true)), (bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), true))) || false))), ! (! (_GLF_WRAPPED_IF_TRUE(true))))))) && true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(true))), false || ((! (_GLF_WRAPPED_IF_TRUE(true))))))) && true), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || false)), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), ! (! (_GLF_WRAPPED_IF_TRUE(true))))) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false))), false || ((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false)))))), ! (! (bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false))), false || ((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false))))))))))) && true))), false, false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), ! (! (_GLF_WRAPPED_IF_TRUE(true))))) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false))), false || ((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false)))))), ! (! (bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false))), false || ((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false))))))))))) && true))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), ! (! (_GLF_WRAPPED_IF_TRUE(true))))) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false))), false || ((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false)))))), ! (! (bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false))), false || ((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false))))))))))) && true))), false, false)))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), ! (! (_GLF_WRAPPED_IF_TRUE(true))))) && _GLF_IDENTITY(true, false || (true))), false, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), ((_GLF_IDENTITY(true, (true) || false))) && true) && true)), ! (! (_GLF_WRAPPED_IF_TRUE(true))))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))), _GLF_IDENTITY(false, false || (false)), false)), false))))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && _GLF_IDENTITY(true, (true) && true))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))))))) && true), false, _GLF_IDENTITY(false, false || (false))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), ! (! (_GLF_WRAPPED_IF_TRUE(true))))))) && true), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))), false)))))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), ! (! (_GLF_WRAPPED_IF_TRUE(true))))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))), true && (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), ! (! (_GLF_WRAPPED_IF_TRUE(true))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), true)), (bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), true))) || false))), bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), true)), (bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), true))) || false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (! (_GLF_WRAPPED_IF_TRUE(true))))))) && true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false))))) && true)), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(true))), ! (! ((! (_GLF_WRAPPED_IF_TRUE(true)))))), false || ((! (_GLF_WRAPPED_IF_TRUE(true))))))) && true), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || false)), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), (! (! (_GLF_WRAPPED_IF_TRUE(true)))) || false))) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false))), false || ((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false)))))), ! (! (bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false))), false || ((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false))))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(true, _GLF_IDENTITY((true), false || ((true))) || false)) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))), bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))), true)))) || _GLF_IDENTITY(false, (false) && true)))), false || ((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(bvec3((_GLF_IDENTITY(true, ! (! (true)))), false, true)))), (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false)))))), ! (! (bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), bool(bvec2((_GLF_WRAPPED_IF_TRUE(true)), false)))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false))), false || ((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false))))))))))))) && true))), false, false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)) && true, bool(bvec4((_GLF_IDENTITY(true, (true) || false)) && true, true, true, false))))), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), (! (! (_GLF_WRAPPED_IF_TRUE(true)))) || false))) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(true, (true) || false)) && true)), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(true, (true) || false)) && true)), (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(true, (true) || false)) && true))) && true)) && true), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, false)))), (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false))), false || ((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)) && true)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), bool(bvec2(! (! (_GLF_WRAPPED_IF_TRUE(true))), false))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false)))))), ! (! (bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true) || false, ! (! ((true) || false)))), bool(bool(! (_GLF_IDENTITY((true) || false, ! (! ((true) || false))))))))))) && true)), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), _GLF_IDENTITY(bool(bvec4((_GLF_WRAPPED_IF_TRUE(true)), false, true, true)), (bool(bvec4((_GLF_WRAPPED_IF_TRUE(true)), false, true, true))) && true))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false))), false || ((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)), ! (! ((_GLF_IDENTITY(! (true), (! (true)) && true)))))))), (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! ((true) || false))))) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false))))))))))) && true))), false, false))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || false)) && true)) && true)), ! (! (_GLF_WRAPPED_IF_TRUE(true))))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! _GLF_IDENTITY((! (! (! (_GLF_WRAPPED_IF_TRUE(true))))), bool(bool((! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))))))), ! (! ((_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! _GLF_IDENTITY((! (! (! (_GLF_WRAPPED_IF_TRUE(true))))), bool(bool((! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))))))))) || false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))))))), (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false))), false || ((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), (bool(bvec3(true, false, true))) || false))))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))))))) || false)))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), ! (! (true))))), (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, bool(bvec3(false, false, false))))) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false, ((_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false) || false)))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), ! (! (true))))), (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, bool(bvec3(false, false, false))))) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false, ((_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false) || false)))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), ! (! (true))))), (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, bool(bvec3(false, false, false))))) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false, ((_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false) || false)))))), true, true)), true && (bool(bvec3((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), ! (! (true))))), (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, bool(bvec3(false, false, false))))) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false, ((_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false) || false)))))), true, true))))), true, true, false))), false || ((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false))))))))))) && true))), false, false))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || false)) && true)) && true)), ! (! (_GLF_WRAPPED_IF_TRUE(true))))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! _GLF_IDENTITY((! (! (! (_GLF_WRAPPED_IF_TRUE(true))))), bool(bool((! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))))))), ! (! ((_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! _GLF_IDENTITY((! (! (! (_GLF_WRAPPED_IF_TRUE(true))))), bool(bool((! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))))))))) || false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))))))), (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false))), false || ((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), (bool(bvec3(true, false, true))) || false))))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))))))) || false)))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), ! (! (true))))), (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, bool(bvec3(false, false, false))))) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false, ((_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false) || false)))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), ! (! (true))))), (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, bool(bvec3(false, false, false))))) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false, ((_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false) || false)))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), ! (! (true))))), (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, bool(bvec3(false, false, false))))) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false, ((_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false) || false)))))), true, true)), true && (bool(bvec3((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), ! (! (true))))), (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, bool(bvec3(false, false, false))))) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false, ((_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false) || false)))))), true, true))))), true, true, false))), false || ((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))) || false))))))))))) && true))), false, false))))), true)))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), ! (! (_GLF_WRAPPED_IF_TRUE(true))))) && _GLF_IDENTITY(true, false || (true))), false, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), ((_GLF_IDENTITY(true, (true) || false))) && true) && true)), ! (! (_GLF_WRAPPED_IF_TRUE(true))))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))), _GLF_IDENTITY(false, false || (false)), false)), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), ! (! (_GLF_WRAPPED_IF_TRUE(true))))) && _GLF_IDENTITY(true, false || (true))), false, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), ((_GLF_IDENTITY(true, (true) || false))) && true) && true)), ! (! (_GLF_WRAPPED_IF_TRUE(true))))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))), _GLF_IDENTITY(false, false || (false)), false)), false))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), ! (! (_GLF_WRAPPED_IF_TRUE(true))))) && _GLF_IDENTITY(true, false || (true))), false, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), ((_GLF_IDENTITY(true, (true) || false))) && true) && true)), ! (! (_GLF_WRAPPED_IF_TRUE(true))))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))), _GLF_IDENTITY(false, false || (false)), false)), false))), true)), true)))))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && _GLF_IDENTITY(true, (true) && true))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))))))) && true), false, _GLF_IDENTITY(false, false || (false))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ((true)) || false)))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), ! (! (_GLF_WRAPPED_IF_TRUE(true))))))) && true), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec4((false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) && true))), false)))))) || false))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - tan(0.0)) < injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec2(_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, true, true))), true))))))), false)))))) || false)) || false))))
                barrier();
              }
             else
              {
              }
            }
           else
            {
            }
           do
            {
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 & 3517) << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
              {
               for(int _injected_loop_counter = ((_GLF_IDENTITY(1, (1) + 0) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 | (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, 1 * (_GLF_IDENTITY(2, 0 ^ (2)))))) | (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), (_GLF_IDENTITY(int(2), max(int(2), int(2)))) | 0)) - (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) | (int(2)), min((int(2)) | (int(2)), (int(2)) | (int(2))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 | (int(2))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(2), 0 | (int(2)))), (~ (_GLF_IDENTITY(int(2), 0 | (int(2))))) | (~ (_GLF_IDENTITY(int(2), 0 | (int(2)))))))) : _GLF_IDENTITY(_GLF_FUZZED(min(69390, -81985)), int(ivec3(_GLF_FUZZED(min(69390, -81985)), (0 | 0), 1))))), ~ (~ (_GLF_IDENTITY(int(2), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(30) : int(2))), 0 | (int(2))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(min(69390, -81985)), int(ivec3(_GLF_FUZZED(min(69390, -81985)), (0 | 0), 1))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(min(69390, -81985)), int(ivec3(_GLF_FUZZED(min(69390, -81985)), (0 | 0), 1))), min(_GLF_IDENTITY(_GLF_FUZZED(min(69390, -81985)), int(ivec3(_GLF_FUZZED(min(69390, -81985)), (0 | 0), 1))), _GLF_IDENTITY(_GLF_FUZZED(min(69390, -81985)), int(ivec3(_GLF_FUZZED(min(69390, -81985)), (0 | 0), 1)))))) | 0)))))), (int(2)) - _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, int(ivec4(0, 0, 0, 0))) : _GLF_FUZZED(-48299)))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))))), true && (_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0)))))))))), bool(bvec3(! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))))), true && (_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0)))))))))), false, true)))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, 0 ^ (_injected_loop_counter --)), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, 0 ^ (_injected_loop_counter --)), (_GLF_IDENTITY(_injected_loop_counter --, 0 ^ (_injected_loop_counter --))) | 0)) | (64472 & 0)))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     do
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 else
                  {
                  }
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    {
                     for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(0, 0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 + (int(2)))))); _injected_loop_counter ++)
                      {
                       do
                        {
                         for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)))); _injected_loop_counter --)
                          {
                           barrier();
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                    }
                  }
                 do
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9.0) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), true, true, true))))))))
                        {
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)); _injected_loop_counter ++)
                          {
                           barrier();
                          }
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          {
                           do
                            {
                             barrier();
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           do
                            {
                             if(_GLF_DEAD(false))
                              {
                               do
                                {
                                 barrier();
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
                          }
                         else
                          {
                          }
                         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
                          barrier();
                         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))))).x > injectionSwitch.y))))
                          barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                          {
                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, max(6, 6))), (int(6)) - 0)))); _injected_loop_counter ++)
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               barrier();
                              }
                             else
                              {
                              }
                            }
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                        }
                      }
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                        {
                         barrier();
                         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1)); _injected_loop_counter --)
                          {
                           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, false || (false))), bool(bvec2(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, false || (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (_GLF_IDENTITY(false, false || (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))), (bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))), (bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))) && true), (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))), (bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))) && true)) || false), true, false, true))))))
                            {
                             do
                              {
                               barrier();
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                          }
                        }
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), bool(bvec2(bool(_GLF_WRAPPED_IF_FALSE(false)), true))))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
              }
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-69.74, -8564.6732)))))).y))));
            }
          }
         else
          {
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 else
  {
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = (1 ^ _GLF_IDENTITY((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) | (_GLF_IDENTITY(5, _GLF_IDENTITY((5) - 0, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((5) - 0, (true ? (5) - 0 : _GLF_FUZZED((false ? -84716 : -58562)))), 1, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec3(_GLF_IDENTITY((5) - 0, (true ? (5) - 0 : _GLF_FUZZED((false ? -84716 : -58562)))), 1, int(_GLF_ONE(1.0, injectionSwitch.y)))) << ivec3(0, 0, 0)))))))), int(_GLF_IDENTITY(5, max(5, _GLF_IDENTITY(_GLF_IDENTITY(5, (5) - _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) | 0)), clamp(_GLF_IDENTITY(5, (5) - 0), _GLF_IDENTITY(5, (_GLF_IDENTITY(5, clamp(5, 5, 5))) - 0), _GLF_IDENTITY(5, (5) - 0)))))))), int(ivec3((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) | (_GLF_IDENTITY(5, _GLF_IDENTITY((5) - 0, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((5) - 0, (true ? (5) - 0 : _GLF_FUZZED((false ? -84716 : -58562)))), 1, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec3(_GLF_IDENTITY((5) - 0, (true ? (5) - 0 : _GLF_FUZZED((false ? -84716 : -58562)))), 1, int(_GLF_ONE(1.0, injectionSwitch.y)))) << ivec3(0, 0, 0)))))))), int(_GLF_IDENTITY(5, max(5, _GLF_IDENTITY(_GLF_IDENTITY(5, (5) - _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) | 0)), clamp(_GLF_IDENTITY(5, (5) - 0), _GLF_IDENTITY(5, (_GLF_IDENTITY(5, clamp(5, 5, 5))) - 0), _GLF_IDENTITY(5, (5) - 0)))))))), 1, 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) * _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6))))), _GLF_IDENTITY(0, 1 * (0)) ^ (((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6))))))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   _GLF_IDENTITY(GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizenum_workgroup.xyz.y = subgroup_id, (_GLF_IDENTITY(GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizenum_workgroup.xyz.y = subgroup_id, (GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizenum_workgroup.xyz.y = subgroup_id) | 0u)) - 0u);
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3634.5606)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))
    {
     do
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.x = GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizenum_workgroup.xyz.y, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.x = GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizenum_workgroup.xyz.y) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.x = GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizenum_workgroup.xyz.y, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.x = GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizenum_workgroup.xyz.y) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.x = GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizenum_workgroup.xyz.y, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.x = GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizenum_workgroup.xyz.y) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.x = GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizenum_workgroup.xyz.y, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.x = GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizenum_workgroup.xyz.y) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0u)))) / 1u);
  }
 else
  {
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, min(1, 1))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(distance(vec3(3970.3553, -7461.7041, 1.3), (mat2x3(1237.5548, -0.7, 9.0, -323.040, -284.702, 434.370) * vec2(0.6, 725.974)))))) > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)))))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
              }
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
   else
    {
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) < ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(max(int(1), int(1)), clamp(max(int(1), int(1)), max(int(1), int(1)), _GLF_IDENTITY(max(int(1), int(1)), (max(int(1), int(1))) >> 0)))))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
            barrier();
          }
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(35.96) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-725.065)), float(injectionSwitch.y), bool(true)))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(35.96) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-725.065)), float(injectionSwitch.y), bool(true)))))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(35.96) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-725.065)), float(injectionSwitch.y), bool(true))))))))))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(35.96) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-725.065)), float(injectionSwitch.y), bool(true)))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(35.96) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-725.065)), float(injectionSwitch.y), bool(true)))))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(35.96) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-725.065)), float(injectionSwitch.y), bool(true)))))))))))) && true))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(int(2), 0), min(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-46770)))) + 0)), int(ivec2(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-46770)))) + 0)), 0))), 0), (false ? _GLF_FUZZED(ivec2(-72057, -24182)) : ivec2(int(2), 0))), _GLF_IDENTITY(ivec2(int(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) - 0)))), 0), (ivec2(int(2), 0)) / ivec2(1, 1)))), (_GLF_IDENTITY(true ? ivec2(int(2), 0) : _GLF_FUZZED(ivec2(81431, -64885)), min(true ? ivec2(int(2), 0) : _GLF_FUZZED(_GLF_IDENTITY(ivec2(81431, -64885), (_GLF_IDENTITY(ivec2(81431, -64885), (true ? _GLF_IDENTITY(ivec2(81431, -64885), clamp(ivec2(81431, -64885), ivec2(81431, -64885), ivec2(81431, -64885))) : _GLF_FUZZED(ivec2(81431, -68863))))) | ivec2(0, 0))), true ? ivec2(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) >> 0)) | (_GLF_IDENTITY(int(2), max(int(2), int(2))))), 0) : _GLF_FUZZED(ivec2(81431, _GLF_IDENTITY(-64885, clamp(_GLF_IDENTITY(-64885, (-64885) * 1), -64885, _GLF_IDENTITY(-64885, (-64885) >> 0)))))))))), ~ (_GLF_IDENTITY(~ (int(ivec2(int(2), 0))), int(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (int(ivec2(int(2), 0)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(int(2), 0), (true ? ivec2(int(2), 0) : _GLF_FUZZED(ivec2(81431, -64885))))), ~ (~ (int(ivec2(int(2), 0)))))), 0 | (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(int(2), 0), (_GLF_IDENTITY(true ? ivec2(int(2), 0) : _GLF_FUZZED(ivec2(81431, -64885)), clamp(true ? ivec2(int(2), 0) : _GLF_FUZZED(ivec2(81431, -64885)), true ? ivec2(int(2), 0) : _GLF_FUZZED(ivec2(81431, -64885)), true ? ivec2(int(2), 0) : _GLF_FUZZED(ivec2(81431, -64885))))))), ~ (~ (int(ivec2(int(2), 0)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(int(2), 0), (true ? ivec2(int(2), 0) : _GLF_FUZZED(ivec2(81431, -64885))))), ~ (~ (int(ivec2(int(2), 0)))))), 0 | (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(int(2), 0), (true ? ivec2(int(2), 0) : _GLF_FUZZED(ivec2(81431, -64885))))), ~ (~ (int(ivec2(int(2), 0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(int(2), 0), (true ? ivec2(int(2), 0) : _GLF_FUZZED(ivec2(81431, -64885))))), ~ (~ (int(ivec2(int(2), 0)))))), 0 | (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(int(2), 0), (true ? ivec2(int(2), 0) : _GLF_FUZZED(ivec2(81431, -64885))))), ~ (~ (int(ivec2(int(2), 0))))))))))) | 0), int(_GLF_IDENTITY(2, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + length(sin(0.0))) < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_IDENTITY(_GLF_FUZZED(-60289), (_GLF_FUZZED(-60289)) / (1 & 1)) : 2)), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))) ? _GLF_FUZZED(39959) : _GLF_IDENTITY(2, (false ? _GLF_FUZZED(-60289) : 2)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(int(int(2)), (int(int(2))) >> 0), ~ (~ (int(int(2)))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-60289), int(int(_GLF_FUZZED(-60289)))) : 2)), (false ? _GLF_FUZZED(39959) : _GLF_IDENTITY(2, (false ? _GLF_FUZZED(-60289) : 2))))))) : _GLF_FUZZED(-58207)))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (int(1))), _GLF_IDENTITY(int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), ~ _GLF_IDENTITY((~ (int(1))), (true ? (~ (int(1))) : _GLF_FUZZED(37280))))))), max(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) >> 0), (true ? _GLF_IDENTITY(int(1), (int(1)) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-68336) : 0))) * 1)) : _GLF_FUZZED(-33680)))) / 1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(70458)))), _GLF_IDENTITY(0, int(ivec3(0, 0, (-14758 & 0)))) ^ (_GLF_IDENTITY(int(1), (int(1)) | (int(1))))))))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)), (injectionSwitch.x < injectionSwitch.y)) && (bool(false))), ! (! (bool(false))))))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) || false), false))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) || false), false))))), true, true))))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, (true) && true))), (bool(bvec2(false, _GLF_IDENTITY(true, (true) && true)))) && true)), (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
    barrier();
  }
 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y = subgroup_size;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2050.5599)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0)))), bool(true))) < injectionSwitch.y) || _GLF_IDENTITY(false, false || (false)))), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2050.5599)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0)))), bool(true))) < injectionSwitch.y) || _GLF_IDENTITY(false, false || (false))))) || false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           for(int _injected_loop_counter = (61498 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < (((1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) ^ 0)))) >> _GLF_IDENTITY(int(4), int(4))) & 1)); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
        }
      }
    }
   else
    {
    }
  }
 else
  {
   GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizenum_workgroup.xyz.z = GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
  }
 do
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                }
               else
                {
                }
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(-9.5))))).x > injectionSwitch.y))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) * (injectionSwitch.x)) > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x = subgroup_local_id;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u), min(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u), min(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u), _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u))))))), (gl_NumWorkGroups.x) + 0u);
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizenum_workgroup.w = num_workgroup;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.y = workgroup_size, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.y = workgroup_size) / 1u);
 uint workgroup_id = gl_WorkGroupID.x;
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && true))), bvec3(bvec4(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))), true)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))) - 0.0) * 1.0)))), ! (! ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), _GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0)))))))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))).y, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), _GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0)))))))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), _GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0)))))))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), _GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0)))))))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), _GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0)))))))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))).y)))), (injectionSwitch.y) * 1.0), ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), max(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))))), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0)))))))), vec4(0.0, 0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), mix(vec4(_GLF_FUZZED(-351.457), _GLF_FUZZED(-376.286), (vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))[2], _GLF_FUZZED(5.8)), vec4((vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))[0], (vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))[1], _GLF_FUZZED(-160.953), (vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))[3]), bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), vec4(0.0, 0.0, 1.0, 0.0)))))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), max(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))))), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0)))))))), vec4(0.0, 0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), mix(vec4(_GLF_FUZZED(-351.457), _GLF_FUZZED(-376.286), (vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))[2], _GLF_FUZZED(5.8)), vec4((vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))[0], (vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))[1], _GLF_FUZZED(-160.953), (vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))[3]), bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), vec4(0.0, 0.0, 1.0, 0.0)))))).y, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), max(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))))), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0)))))))), vec4(0.0, 0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), mix(vec4(_GLF_FUZZED(-351.457), _GLF_FUZZED(-376.286), (vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))[2], _GLF_FUZZED(5.8)), vec4((vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))[0], (vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))[1], _GLF_FUZZED(-160.953), (vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))[3]), bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), vec4(0.0, 0.0, 1.0, 0.0)))))).y) * sqrt(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), max(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))))), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0)))))))), vec4(0.0, 0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), mix(vec4(_GLF_FUZZED(-351.457), _GLF_FUZZED(-376.286), (vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))[2], _GLF_FUZZED(5.8)), vec4((vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))[0], (vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))[1], _GLF_FUZZED(-160.953), (vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))[3]), bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), vec4(0.0, 0.0, 1.0, 0.0)))))).y)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), _GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0)))))))), vec4(0.0, 0.0, 1.0, 0.0)), clamp(dot(_GLF_IDENTITY(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), _GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0)))))))), vec4(0.0, 0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), _GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0)))))))), vec4(0.0, 0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), _GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0)))))))), vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), vec2(mat4(vec2(mat3x4(injectionSwitch, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), _GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0)))))))), vec4(0.0, 0.0, 1.0, 0.0)), clamp(dot(_GLF_IDENTITY(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), _GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0)))))))), vec4(0.0, 0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), _GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0)))))))), vec4(0.0, 0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), _GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0)))))))), vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0)), dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0))), _GLF_IDENTITY(dot(vec4(abs(0.0), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(abs(0.0), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), sin(0.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), tan(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), abs(0.0), 1.0, cos(0.0), length(vec2(0.0, 0.0)), 1.0)))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), _GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(_GLF_IDENTITY(1.0, float(float(1.0)))))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), mat4(1.0) * (vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0)))))))))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), max(round(length(normalize(1.0))), round(length(normalize(1.0))))), 0.0), _GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * _GLF_IDENTITY((_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0)))))), vec4(mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0)))))), (true ? (_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0)))))) : _GLF_FUZZED(vec4(5384.3131, 21.76, 61.50, 81.90)))), 0.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0))))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, cos(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), _GLF_IDENTITY(vec4(mat2(vec4(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-758.657))), 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0)))))))), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(-738.850)), float(dot(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), bool(true))))))).y)))), (injectionSwitch.y) * 1.0))))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), round(length(normalize(1.0))), 0.0), _GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0) * (_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0)))))))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))).y, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), max(round(length(normalize(1.0))), round(length(normalize(1.0))))), 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))))))), max(_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))))))), _GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))))))), vec4(mat4(_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))))))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) - vec4(0.0, 0.0, 0.0, 0.0))))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / sqrt(1.0)), 0.0, 1.0, 0.0)))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), _GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(-1.5))), 1.0)), 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0)))))))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6925.4933))), 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(mat2(vec4(0.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(normalize(1.0))))), 0.0)), (mat2(vec4(0.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(normalize(1.0))))), 0.0))) * mat2(1.0))), vec4(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(1.0, 1.0, tan(0.0), 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0))), length(0.0), 1.0), (mat3x4(1.0, 1.0, tan(0.0), 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0))), length(0.0), 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(mat3x4(1.0, 1.0, tan(0.0), 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0))), length(0.0), 1.0), (mat3x4(1.0, 1.0, tan(0.0), 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0))), length(0.0), 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat3x4(1.0, 1.0, tan(0.0), 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0))), length(0.0), 1.0), (mat3x4(1.0, 1.0, tan(0.0), 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0))), length(0.0), 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat3x4(1.0, 1.0, tan(0.0), 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0))), length(0.0), 1.0), (mat3x4(1.0, 1.0, tan(0.0), 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0))), length(0.0), 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 1.0, 1.0) * _GLF_IDENTITY((_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(mat2(vec4(0.0, 0.0, round(length(_GLF_IDENTITY(normalize(1.0), 0.0 + (normalize(1.0))))), 0.0)))))), ((_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(mat2(vec4(0.0, 0.0, round(length(_GLF_IDENTITY(normalize(1.0), 0.0 + (normalize(1.0))))), 0.0))))))) * mat4(1.0)))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (vec4(0.0, 0.0, 1.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))), dot(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, log(1.0) + (0.0)), round(length(normalize(1.0))), 0.0), _GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(mat2(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0)))))))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))).y)))), (injectionSwitch.y) * 1.0))))))))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-111.699) : injectionSwitch.x)) > injectionSwitch.y)))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) || false)) || (false)) && true))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
           else
            {
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             barrier();
            }
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-42.64) : injectionSwitch.x)) > injectionSwitch.y))))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                {
                 for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ (~ (0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
              }
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   for(int _injected_loop_counter = (0 & 4528); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) || false), bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), true)))))), true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true && (false)), true, true, false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bool(! (! (false))), ! (! (bool(! (! (false))))))))), true && (false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)), true, true, false))), true))))))))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
                        {
                         for(int _injected_loop_counter = _GLF_IDENTITY(0, min(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, (4) * 1)))), (int(4)) + 0), int(4))) >> _GLF_IDENTITY(int(4), int(4)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(_GLF_IDENTITY(int(int(4)), (int(int(4))) | (_GLF_IDENTITY(int(int(4)), ~ (~ (int(int(4))))))))), (_GLF_IDENTITY(int(4), int(_GLF_IDENTITY(int(int(4)), (int(int(4))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(int(4)), (_GLF_IDENTITY(int(int(4)), (true ? int(int(4)) : _GLF_FUZZED(atomicMin(_injected_loop_counter, _injected_loop_counter))))) | (int(int(4)))), ~ (~ (int(int(4)))))))))) - 0), (int(_GLF_IDENTITY(4, (4) | 0))) + 0), int(4))), min((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (int(4)) | (int(4)))) | (_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))))), int(_GLF_IDENTITY(int(int(4)), (int(int(4))) | (_GLF_IDENTITY(int(int(4)), ~ (~ (int(int(4))))))))), (int(_GLF_IDENTITY(4, (4) * 1))) + 0), int(4))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(_GLF_IDENTITY(int(int(4)), (int(int(_GLF_IDENTITY(4, 0 | (4))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(int(4)), ~ (~ (int(int(4))))), (_GLF_IDENTITY(int(int(4)), ~ (~ (int(int(4)))))) << 0))))), (int(4)) + 0), int(4))))), int(int(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(_GLF_IDENTITY(int(int(4)), (int(int(4))) | (_GLF_IDENTITY(int(int(4)), ~ (~ (int(int(4))))))))), (int(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, max(4, 4)) : _GLF_FUZZED(_injected_loop_counter))))) + 0), int(4))), min((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(_GLF_IDENTITY(int(int(4)), (int(int(4))) | (_GLF_IDENTITY(int(int(4)), ~ (~ (int(int(4))))))))), (int(4)) + 0), int(4))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(4), (int(4)) ^ 0)), (int(int(4))) | (_GLF_IDENTITY(int(int(4)), ~ (~ (int(int(4))))))))), (int(4)) + 0), int(4))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(int(int(4)), (int(int(4))) | (_GLF_IDENTITY(int(int(4)), ~ (~ (int(int(4)))))))), (int(_GLF_IDENTITY(int(int(4)), (int(int(4))) | (_GLF_IDENTITY(int(int(4)), ~ (~ (int(int(4))))))))) ^ 0)), (int(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, int(ivec3(4, 0, 1))), 4)))))) + 0), int(4))), min((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(_GLF_IDENTITY(int(int(4)), (int(int(4))) | (_GLF_IDENTITY(int(int(4)), ~ (~ (int(int(4))))))))), (int(4)) + 0), int(4)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(_GLF_IDENTITY(int(int(4)), (int(int(4))) | (_GLF_IDENTITY(int(int(4)), ~ (~ (int(int(4))))))))), (int(4)) + 0), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(_GLF_IDENTITY(int(int(4)), (int(int(4))) | (_GLF_IDENTITY(int(int(4)), ~ (~ (int(int(4))))))))), (int(4)) + 0), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(_GLF_IDENTITY(int(int(4)), (int(int(4))) | (_GLF_IDENTITY(int(int(4)), ~ (~ (int(int(4))))))))), (int(4)) + 0), int(4)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(_GLF_IDENTITY(int(int(4)), (int(int(4))) | (_GLF_IDENTITY(int(int(4)), ~ (~ (int(int(4))))))))), (int(4)) + 0), int(4)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(_GLF_IDENTITY(int(int(4)), (int(int(4))) | (_GLF_IDENTITY(int(int(4)), ~ (~ (int(int(4))))))))), (int(4)) + 0), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(_GLF_IDENTITY(int(int(4)), (int(int(4))) | (_GLF_IDENTITY(int(int(4)), ~ (~ (int(int(4))))))))), (int(4)) + 0), int(4)))) : _GLF_FUZZED(50911)))))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(_GLF_IDENTITY(int(int(4)), (int(int(4))) | (_GLF_IDENTITY(int(int(4)), ~ (~ (int(int(4))))))))), (int(4)) + 0), int(4)))))) | (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(_GLF_IDENTITY(int(int(4)), _GLF_IDENTITY((int(int(4))), ((int(int(4)))) / 1) | (_GLF_IDENTITY(int(int(4)), ~ (~ (int(int(4))))))))), (int(4)) + 0), int(4))), min((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(_GLF_IDENTITY(int(int(4)), (int(int(4))) | (_GLF_IDENTITY(int(int(4)), ~ (~ (int(int(4))))))))), (int(4)) + 0), int(_GLF_IDENTITY(4, 0 | (4))))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(_GLF_IDENTITY(int(int(4)), (int(int(4))) | (_GLF_IDENTITY(int(int(4)), ~ (~ (int(int(4))))))))), (int(4)) + 0), int(4)))))))))) >> _GLF_IDENTITY(int(4), int(4)))))); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - 0)) - 0)) ^ 0))
                          {
                           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
                            barrier();
                           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               barrier();
                              }
                             else
                              {
                              }
                            }
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                              {
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 barrier();
                                }
                               else
                                {
                                }
                              }
                             else
                              {
                              }
                            }
                           barrier();
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))) && true)))
                            {
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
                                barrier();
                               barrier();
                              }
                            }
                           else
                            {
                            }
                           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             if(_GLF_DEAD(false))
                              barrier();
                             do
                              {
                               do
                                {
                                 barrier();
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y)))));
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                          }
                        }
                       else
                        {
                        }
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                      }
                    }
                  }
                }
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
            {
            }
           else
            {
             barrier();
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
                {
                 barrier();
                }
               else
                {
                }
              }
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true))))))))
              {
               barrier();
              }
             else
              {
              }
            }
          }
        }
       else
        {
        }
      }
    }
  }
 uint workgroup_base = GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.y * _GLF_IDENTITY(workgroup_id, (workgroup_id) / (1u | 1u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.x * _GLF_IDENTITY(GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizenum_workgroup.xyz, (_GLF_IDENTITY(GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizenum_workgroup.xyz, _GLF_IDENTITY(max(_GLF_IDENTITY(GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizenum_workgroup.xyz, (GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizenum_workgroup.xyz) >> uvec3(0u, 0u, 0u)), GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizenum_workgroup.xyz), min(max(GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizenum_workgroup.xyz, GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizenum_workgroup.xyz), _GLF_IDENTITY(max(GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizenum_workgroup.xyz, GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizenum_workgroup.xyz), clamp(max(GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizenum_workgroup.xyz, GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizenum_workgroup.xyz), max(GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizenum_workgroup.xyz, GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizenum_workgroup.xyz), max(GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizenum_workgroup.xyz, GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizenum_workgroup.xyz))))))) / uvec3(1u, 1u, 1u)).z + GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), false, _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false || (false)), true && (! (false || (false)))), bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true) || (false)), true && ((_GLF_IDENTITY(false, (false) && true) || (false)))), bool(bvec2(_GLF_IDENTITY(! (false || (false)), bool(bool(_GLF_IDENTITY(! (false || (false)), bool(bvec4(! (false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))), false))), false, false))))))))))), ((! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), false, _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false || (false)), true && (! (false || (false)))), bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true) || (false)), true && ((_GLF_IDENTITY(false, (false) && true) || (false)))), bool(bvec2(_GLF_IDENTITY(! (false || (false)), bool(bool(_GLF_IDENTITY(! (false || (false)), bool(bvec4(! (false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))), false))), false, false)))))))))))) || false))))
  {
   atomicStore(write_val, _GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(num_workgroup) : virtual_gid))) | 0u)), min(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) | 0u)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)), _GLF_IDENTITY((uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u))) - 0u, min((uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u))) - 0u, (uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u))) - 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), ((virtual_gid)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) | 0u)), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)), min(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), min(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), _GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)))))), uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)))))))), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) << (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), min(_GLF_IDENTITY(int(5), (int(5)) - 0), int(5))), _GLF_IDENTITY(_GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5))), (false ? _GLF_FUZZED((-30046 % 38188)) : _GLF_IDENTITY(_GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5))), 1 * (_GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5)))))))))), _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec2((true), false)), bool(bvec2(bool(bvec2((true), false)), false)))))), true && _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, true)), (bool(bvec2(true, true))) || false), ! (! (_GLF_IDENTITY(bool(bvec2(true, true)), (bool(bvec2(true, true))) || false)))))), bool(bvec3((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY((bool(bvec2(true, true))) || false, bool(_GLF_IDENTITY(bvec2((bool(bvec2(true, true))) || false, false), bvec2(bvec4(bvec2((bool(bvec2(true, true))) || false, false), false, true)))))))), true, false)))) ? _GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, 0 ^ (0)), 0))) : _GLF_FUZZED(79958))));
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) || false))))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(29637u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((- 9205.5537))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y)), false)), (bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)), _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8.7))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), ((_GLF_WRAPPED_IF_TRUE(true)) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))) && true)))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, bool(bvec3(true, true, true))))))
              barrier();
             barrier();
            }
          }
        }
       else
        {
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), true && (! (! (false))))), true && (_GLF_IDENTITY(false, ! (! (false)))))))
            barrier();
          }
         else
          {
          }
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       else
        {
        }
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (((1 & 1) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = (1 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, true && (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, exp(0.0)), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(injectionSwitch, exp(0.0)))))).y))))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(806.677) : _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(26.33)), bool(false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, true && (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, exp(0.0)), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(injectionSwitch, exp(0.0)))))).y))))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(806.677) : _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(26.33)), bool(false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))) && true)), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, true && (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, exp(0.0)), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(injectionSwitch, exp(0.0)))))).y))))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(806.677) : _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(26.33)), bool(false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))) && true)), false, true, false))))))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec2(true, false))) && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))))) && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
              barrier();
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)) > injectionSwitch.y) || false), bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))) || false)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))))))))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false) || _GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))), false || ((injectionSwitch.x > injectionSwitch.y)))) || false)), false || ((false) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(91.38), _GLF_FUZZED(7.9)), bvec2(false, false))).x > injectionSwitch.y)))), false || ((injectionSwitch.x > injectionSwitch.y)))))), ! _GLF_IDENTITY((! ((false) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))))), false || ((injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3((! ((false) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((! ((false) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-17.28)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) < injectionSwitch.y)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3((! ((false) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bvec2(bvec2(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, false || (true))))), bvec2(bvec4(bvec2(bvec2(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, false || (true))))), false, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3((! ((false) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bvec2(bvec2(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, false || (true))))), bvec2(bvec4(bvec2(bvec2(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, false || (true))))), false, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((! ((false) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), (false || ((injectionSwitch.x > injectionSwitch.y))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), (false || ((injectionSwitch.x > injectionSwitch.y))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), (false || ((injectionSwitch.x > injectionSwitch.y))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)), true)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3((! ((false) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3((! ((false) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), (false || ((injectionSwitch.x > injectionSwitch.y))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), (false || ((injectionSwitch.x > injectionSwitch.y))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), (false || ((injectionSwitch.x > injectionSwitch.y))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)), true)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3((! ((false) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), true))), true)))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), false || ((injectionSwitch.x > injectionSwitch.y)))), false || ((false) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))))))), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))))))), ! _GLF_IDENTITY((! ((false) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), (false || ((injectionSwitch.x > injectionSwitch.y))) && true))))), bool(_GLF_IDENTITY(bvec3((! ((false) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((! ((false) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), (false || ((injectionSwitch.x > injectionSwitch.y))) && true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3((! ((false) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3((! ((false) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), false || ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3((! ((false) || _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || ((injectionSwitch.x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), true)))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || ((injectionSwitch.x > injectionSwitch.y)))), false || ((false) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || ((injectionSwitch.x > injectionSwitch.y)))))), ! _GLF_IDENTITY((! ((false) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || ((injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3((! ((false) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), mat2(mat4x3(mat2(injectionSwitch, 1.0, 1.0)))))).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((! ((false) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3((! ((false) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7.6) : injectionSwitch.y)))))), false || ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3((! (_GLF_IDENTITY((false) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((false) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (! ((false) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))) || false)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3((! ((false) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), _GLF_IDENTITY(true, bool(bvec2(true, true))))))))))), true), bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || ((injectionSwitch.x > injectionSwitch.y)))), false || ((false) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).y))))))))), ! _GLF_IDENTITY((! ((false) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || ((injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3((! ((false) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), true, true)), true && (_GLF_IDENTITY(bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), true, true)), ! (! (bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), true, true))))))))), false || ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((! ((false) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))), false || ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(27.49)), bool(false))) < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY((! ((false) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY((! ((false) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || ((injectionSwitch.x > injectionSwitch.y)))))), true && ((! ((false) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || ((injectionSwitch.x > injectionSwitch.y))))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3((! ((false) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), false, true))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))), true)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))), true))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))), bvec3(bvec4(bvec3(bvec3((! ((false) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), _GLF_IDENTITY(true, (true) || false))))))))), true)))))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), true, true))) || false))))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), ! (! (bool(_GLF_IDENTITY(true, true && (true))))))))))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-61.98, -4114.3889)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])))).x))); _injected_loop_counter --)
                      {
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                        {
                         barrier();
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)) && (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)) && (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)) && (false))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))) && true) && (false))))))))))))
                  {
                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false, false, true))))))
                    barrier();
                  }
                 barrier();
                }
              }
             do
              {
               for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 barrier();
                }
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   do
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             barrier();
                            }
                           else
                            {
                            }
                          }
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                    }
                   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(false), false, true, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(false), false, true, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_WRAPPED_LOOP(false), false, true, true)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(bool(bvec4(_GLF_WRAPPED_LOOP(false), false, true, true)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), true && (! (_GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(false), false, true, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_WRAPPED_LOOP(false), false, true, true)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(bool(bvec4(_GLF_WRAPPED_LOOP(false), false, true, true)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))))));
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))), true, true, false)))))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) && _GLF_IDENTITY(true, true && (true)))))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         barrier();
                        }
                       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, true)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) && true), bool(bool(! (bool(bool(false)))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), bool(bool(! (bool(bool(false))))))))))) && true))
                        {
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                          {
                           barrier();
                          }
                        }
                      }
                    }
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       barrier();
                      }
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, true), false)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-71.22)), vec2(_GLF_FUZZED(311.606), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], float(mat4((injectionSwitch)[1], 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), (true ? _GLF_IDENTITY(max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], float(mat4((injectionSwitch)[1], 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), (true ? max((injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))[1], float(mat4((injectionSwitch)[1], 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))) : _GLF_FUZZED(72.76))) : _GLF_FUZZED(-199.833))))), bvec2(false, true))).y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, true), false)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-71.22)), vec2(_GLF_FUZZED(311.606), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], float(mat4((injectionSwitch)[1], 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), (true ? _GLF_IDENTITY(max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], float(mat4((injectionSwitch)[1], 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), (true ? max((injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))[1], float(mat4((injectionSwitch)[1], 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))) : _GLF_FUZZED(72.76))) : _GLF_FUZZED(-199.833))))), bvec2(false, true))).y)), false)), ! (! (bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, true), false)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-71.22)), vec2(_GLF_FUZZED(311.606), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], float(mat4((injectionSwitch)[1], 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), (true ? _GLF_IDENTITY(max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], float(mat4((injectionSwitch)[1], 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), (true ? max((injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))[1], float(mat4((injectionSwitch)[1], 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))) : _GLF_FUZZED(72.76))) : _GLF_FUZZED(-199.833))))), bvec2(false, true))).y)), false)))))))) || false))
                        {
                         do
                          {
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                      }
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      {
                       do
                        {
                         barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y) && true)))))))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                        {
                         barrier();
                        }
                      }
                    }
                   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))), (false) && true))) || false))
                    barrier();
                  }
                }
               do
                {
                 do
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) && true)))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
      }
    }
   else
    {
     do
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.0) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)), true && (_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))))); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++)))) ^ (0 | 0)))
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true), false), false))))))
              {
               barrier();
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false))))))))
                  barrier();
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) >> 0)); _injected_loop_counter --)
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), 0.0), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), 0.0), vec2(mat3x2(vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), 0.0), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), 0.0))))).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
              {
               barrier();
              }
             else
              {
              }
            }
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), false || (_GLF_IDENTITY(bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) ? injectionSwitch.x : _GLF_FUZZED(-7.4))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false, false)), true && (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (injectionSwitch) * mat2(1.0)))))).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (false ? _GLF_FUZZED(mix((injectionSwitch * injectionSwitch), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), bvec2(true, false))) : _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (true ? clamp(injectionSwitch, injectionSwitch, injectionSwitch) : _GLF_FUZZED((- vec2(-875.476, -7.2)))))))).y))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(8.7, min(_GLF_IDENTITY(8.7, (false ? _GLF_FUZZED(-793.621) : 8.7)), 8.7)))), float(0.0), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), injectionSwitch.x)), (int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(8.7, min(_GLF_IDENTITY(8.7, (false ? _GLF_FUZZED(-793.621) : 8.7)), 8.7)))), float(0.0), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), injectionSwitch.x))) / 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, length(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))) > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     else
      {
      }
    }
   else
    {
    }
  }
 uint read_val = atomicLoad(write_val, 4, 64, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-95267) : 0)), (0) + 0), _GLF_IDENTITY(0, min(0, 0)))))));
 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY((false ? _GLF_FUZZED(49337) : int(5)), max(_GLF_IDENTITY((false ? _GLF_FUZZED(49337) : int(5)), int(ivec3((false ? _GLF_FUZZED(49337) : int(5)), 0, 1))), (false ? _GLF_FUZZED(49337) : int(5)))))), (_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? _GLF_FUZZED(49337) : int(5))))) << (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), int(8)), (0 << _GLF_IDENTITY(int(8), int(8))) | 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 1.0))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 1.0))) > injectionSwitch.y)))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
        {
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) - 0)]), vec2(_GLF_FUZZED(1525.2329), _GLF_FUZZED(-4227.6098)), bvec2(false, false))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) - 0)]), vec2(_GLF_FUZZED(1525.2329), _GLF_FUZZED(-4227.6098)), bvec2(false, false))).x > injectionSwitch.y)) && true)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1525.2329), _GLF_FUZZED(-4227.6098)), bvec2(false, false)), (true ? mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1525.2329), _GLF_FUZZED(-4227.6098)), bvec2(false, false)) : _GLF_FUZZED(vec2(-5.8, 67.37))))).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1525.2329), _GLF_FUZZED(-4227.6098)), bvec2(false, false))).x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1525.2329), _GLF_FUZZED(-4227.6098)), bvec2(false, false))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1525.2329), _GLF_FUZZED(-4227.6098)), bvec2(false, false))).x > injectionSwitch.y))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1525.2329), _GLF_FUZZED(-4227.6098)), bvec2(false, false))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1525.2329), _GLF_FUZZED(-4227.6098)), bvec2(false, false))).x > injectionSwitch.y))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1525.2329), _GLF_FUZZED(-4227.6098)), bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1525.2329), _GLF_FUZZED(-4227.6098)), bvec2(false, false)))) / vec2(1.0, 1.0)).x > injectionSwitch.y)))) || false))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) * 1)]), vec2(_GLF_FUZZED(1525.2329), _GLF_FUZZED(-4227.6098)), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))).y)))) || false), false, false, true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))
        {
         barrier();
        }
       else
        {
        }
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))))
    {
     barrier();
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y)))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y)))))) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y)))))) || false), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y)))))) || false)) || false), false, true)))) || false)))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), ! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))) || false)))
  barrier();
 GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizenum_workgroup.xyz.x = read_val;
 do
  {
   buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizenum_workgroup.xyz, clamp(GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizenum_workgroup.xyz, GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizenum_workgroup.xyz, _GLF_IDENTITY(GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizenum_workgroup.xyz, uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u) + (GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizenum_workgroup.xyz)))).x));
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
}
