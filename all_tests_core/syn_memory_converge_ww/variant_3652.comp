#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))), ! (! ((! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))), ! (! ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))), ! (! ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))))))), false, false), bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))), ! (! ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))))))), false, false))))))))))), _GLF_IDENTITY(false, ! (! (false))), true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), false || ((false)))))) && _GLF_IDENTITY(true, false || (true))))) || false))), ((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), false || ((false)))))) && true))) || false)))) || false)), bool(bvec2(_GLF_DEAD(false), true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(false)) && _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), ((_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || ((false)))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), (_GLF_IDENTITY(false || (true), bool(bvec4(false || (true), true, false, false)))) || false))))) || false))), _GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), false || ((false)))))) && true))) || false, bool(bvec4((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), false || ((false)))))) && true))) || false, true, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && (((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), false || ((false)))))) && true))) || false, bool(bvec4((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), false || ((false)))))) && true))) || false, true, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) || false)), bool(bvec2(_GLF_DEAD(false), true)))) || false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, (false) && true)), true, _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(false, (false) || false))), false || (bool(bvec4((_GLF_IDENTITY(false, (false) && true)), true, true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true))))), true, true, _GLF_IDENTITY(false, (false) || false))), false || (bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && true)), true, true, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true)))))), (false) || false)))))) && _GLF_IDENTITY(true, (true) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), true && (bool(bvec4(false, false, true, false)))))) && true)), true, true, _GLF_IDENTITY(false, (false) || false))), false || (bool(bvec4((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec3(true, false, false))))), true, true, _GLF_IDENTITY(false, (false) || false)))))) && true), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) && true)), true, true, _GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(false, ! (! (false))) || (bool(bvec4((_GLF_IDENTITY(false, (false) && true)), true, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))))))))))))) && true))))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, (false) && true)), true, _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(false, (false) || false))), false || (bool(bvec4((_GLF_IDENTITY(false, (false) && true)), true, true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)))))), true && (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, (false) && true)), true, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (true))), _GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(false || (bool(bvec4((_GLF_IDENTITY(false, (false) && true)), true, true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)))), bool(bool(_GLF_IDENTITY(false || (bool(bvec4((_GLF_IDENTITY(false, (false) && true)), true, true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)))), bool(bvec2(false || (bool(bvec4((_GLF_IDENTITY(false, (false) && true)), true, true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)))), false)))))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true))))), true, true, _GLF_IDENTITY(false, (false) || false))), false || (bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && true)), true, true, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true)))))), (false) || false)))))) && _GLF_IDENTITY(true, (true) || false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) && true))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true))))), true, true, _GLF_IDENTITY(false, (false) || false))), false || (bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && true)), true, true, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true)))))), (false) || false)))))) && _GLF_IDENTITY(true, (true) || false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))), true && (bool(bvec4(false, false, true, false)))))) && true)), true, true, _GLF_IDENTITY(false, (false) || false))), false || (bool(bvec4((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_IDENTITY(false, bool(bool(false)))))))), true, true, _GLF_IDENTITY(false, (false) || false)))))) && true), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))) || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((false), ((false)) || false) && true)), true, true, _GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))), ! _GLF_IDENTITY((! (false)), ((! (false))) && true)) || (bool(bvec4((_GLF_IDENTITY(false, (false) && true)), true, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))), false)))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bool(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))))))))))))) && _GLF_IDENTITY(true, bool(bool(true)))))))))) || false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) && true)))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), true, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec3(! (false), true, false)), true)), (bool(bvec2(bool(bvec3(! (false), true, false)), true))) || false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), true, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec3(! (false), true, false)), true)), (bool(bvec2(bool(bvec3(! (false), true, false)), true))) || false))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), true, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec3(! (false), true, false)), true)), (bool(bvec2(bool(bvec3(! (false), true, false)), true))) || false))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec2(bvec2(bool(bvec4(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), true, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec3(! (false), true, false)), true)), (bool(bvec2(bool(bvec3(! (false), true, false)), true))) || false))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), (bool(_GLF_IDENTITY(false, false || (false)))) || false))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8156.5391, -21.92)))).x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), mat3(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((4.1))), bool(false))), 1.0, 1.0, 0.0)))) * mat3(1.0)))) < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, 0u), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u))) | (0u)), 0u)), (~ ((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u))) | (0u)), 0u))) << (uvec3(0u, 0u, 0u) & uvec3(43144u, 140230u, 196743u)))))).x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))), workgroup_size)) * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), _GLF_IDENTITY(1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), (uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), max(uvec2(workgroup_base, 0u), uvec2(workgroup_base, 0u))))) - 0u)), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), _GLF_IDENTITY((uint(uvec2(workgroup_base, 0u))), ~ (~ (_GLF_IDENTITY((uint(uvec2(workgroup_base, 0u))), ~ (~ (_GLF_IDENTITY((uint(uvec2(workgroup_base, 0u))), uint(uvec2((uint(uvec2(workgroup_base, 0u))), 1u))))))))) | (uint(uvec2(workgroup_base, 0u)))), (uint(uvec2(workgroup_base, 0u))) - 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, workgroup_base), ~ (~ (_GLF_IDENTITY(min(workgroup_base, workgroup_base), max(min(workgroup_base, workgroup_base), min(workgroup_base, workgroup_base))))))), 0u)), (uint(uvec2(workgroup_base, _GLF_IDENTITY(0u, (0u) ^ 0u)))) - 0u)), 1u * _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 0u)), (uint(uvec2(workgroup_base, 0u))) - 0u))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 0u)), (uint(uvec2(workgroup_base, 0u))) - 0u))), clamp((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 0u)), (uint(uvec2(workgroup_base, 0u))) - 0u))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 0u)), (uint(uvec2(workgroup_base, 0u))) - 0u))), ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 0u)), (uint(uvec2(workgroup_base, 0u))) - 0u)))) | ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 0u)), (uint(uvec2(workgroup_base, 0u))) - 0u))))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 0u)), (uint(uvec2(workgroup_base, 0u))) - 0u))))))))))) + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) / 1u))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u)))) - 0u, max(_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u)))) - 0u, clamp(_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + subgroup_base, 0u, 0u), (uvec3(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) << (0u & (true ? 23817u : 115240u))), 0u, 0u)) + uvec3(0u, 0u, 0u)))) - 0u, (_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u)))) - 0u, (false ? _GLF_FUZZED(num_workgroup) : (uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u | (0u)), 0u)), 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u)))) - 0u))) + 0u), _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) >> (0u & 192229u)), 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u)))) - 0u, 0u | ((uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u)))) - 0u)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), ~ (~ (uvec3(workgroup_base + subgroup_base, 0u, 0u)))), _GLF_IDENTITY((uvec3(workgroup_base + subgroup_base, 0u, 0u)), (_GLF_IDENTITY((uvec3(workgroup_base + subgroup_base, 0u, 0u)), ~ (~ (_GLF_IDENTITY((uvec3(workgroup_base + subgroup_base, 0u, 0u)), (true ? (uvec3(workgroup_base + subgroup_base, 0u, 0u)) : _GLF_FUZZED(uvec3(9872u, 4739u, 5394u)))))))) | ((uvec3(workgroup_base + subgroup_base, 0u, 0u)))) + uvec3(0u, 0u, 0u)))) - _GLF_IDENTITY(0u, 1u * (0u)))), (uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(workgroup_base + subgroup_base, max(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), workgroup_base + subgroup_base)), 0u, 0u)), (false ? _GLF_FUZZED(uvec3(167264u, 67741u, 157312u)) : (uvec3(_GLF_IDENTITY(workgroup_base + subgroup_base, max(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), workgroup_base + subgroup_base)), 0u, 0u)))) + _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))))) - 0u)))), (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)))), 1u * (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), ~ (~ ((workgroup_base + subgroup_base)))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)))))), 0u, 0u)) + uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), (_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)), _GLF_IDENTITY((uvec3(workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) << (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), ~ (~ ((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) << (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))))), 0u, 0u)), min((uvec3(workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x))), 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)))), _GLF_IDENTITY((uvec3(workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uint(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))))), clamp(subgroup_base, subgroup_base, subgroup_base))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 0u)), max((uvec3(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(uvec2(43131u, 180385u)[0]) : subgroup_base)), clamp(subgroup_base, subgroup_base, subgroup_base))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0u), 0u, 0u)), (uvec3(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))), uint(uvec3(uint(uvec2(workgroup_base, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))), 0u, 0u)))), workgroup_base, _GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(workgroup_base))))), ~ (~ (workgroup_base)))) ^ 0u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u, 0u)))))) + _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7448.6493) : injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(min(workgroup_id, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, max(1u, 1u))), uint(1u))) + (workgroup_base)))))) : 0u)), 0u), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(min(workgroup_id, workgroup_base)) : 0u)), 0u), (uvec3(0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(min(workgroup_id, workgroup_base)) : 0u)), 0u)) >> uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(min(workgroup_id, workgroup_base)) : 0u)), 0u), (uvec3(0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(min(workgroup_id, workgroup_base)) : 0u)), 0u)) >> uvec3(0u, 0u, 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(min(workgroup_id, workgroup_base)) : 0u)), _GLF_IDENTITY(0u, (0u) - 0u)), (uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, true, false))) ? _GLF_FUZZED(_GLF_IDENTITY(min(workgroup_id, workgroup_base), min(_GLF_IDENTITY(min(workgroup_id, workgroup_base), clamp(min(workgroup_id, workgroup_base), min(workgroup_id, workgroup_base), min(workgroup_id, workgroup_base))), min(workgroup_id, workgroup_base)))) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u)) >> uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(min(workgroup_id, workgroup_base)) : 0u)), _GLF_IDENTITY(0u, (0u) - 0u)), (uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, true, false))) ? _GLF_FUZZED(_GLF_IDENTITY(min(workgroup_id, workgroup_base), min(_GLF_IDENTITY(min(workgroup_id, workgroup_base), clamp(min(workgroup_id, workgroup_base), min(workgroup_id, workgroup_base), min(workgroup_id, workgroup_base))), min(workgroup_id, workgroup_base)))) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u)) >> uvec3(0u, 0u, 0u)))) + uvec3(0u, 0u, 0u))) | ((_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(min(workgroup_id, workgroup_base)) : 0u)), 0u), (uvec3(0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(min(workgroup_id, workgroup_base)) : _GLF_IDENTITY(0u, (0u) >> 0u))), 0u)) >> uvec3(0u, 0u, 0u)))))), (true ? (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(min(workgroup_id, workgroup_base)) : 0u)), 0u), (uvec3(0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(min(workgroup_id, workgroup_base)) : 0u)), 0u)) >> uvec3(0u, 0u, 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(min(workgroup_id, workgroup_base)) : 0u)), _GLF_IDENTITY(0u, (0u) - 0u)), (uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, true, false))) ? _GLF_FUZZED(_GLF_IDENTITY(min(workgroup_id, workgroup_base), min(_GLF_IDENTITY(min(workgroup_id, workgroup_base), clamp(min(workgroup_id, workgroup_base), min(workgroup_id, workgroup_base), min(workgroup_id, workgroup_base))), min(workgroup_id, workgroup_base)))) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u)) >> uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(min(workgroup_id, workgroup_base)) : 0u)), _GLF_IDENTITY(0u, (0u) - 0u)), (uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, true, false))) ? _GLF_FUZZED(_GLF_IDENTITY(min(workgroup_id, workgroup_base), min(_GLF_IDENTITY(min(workgroup_id, workgroup_base), clamp(min(workgroup_id, workgroup_base), min(workgroup_id, workgroup_base), min(workgroup_id, workgroup_base))), min(workgroup_id, workgroup_base)))) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u)) >> uvec3(0u, 0u, 0u)))) + uvec3(0u, 0u, 0u))) | ((_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(min(workgroup_id, workgroup_base)) : 0u)), 0u), (uvec3(0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(min(workgroup_id, workgroup_base)) : _GLF_IDENTITY(0u, (0u) >> 0u))), 0u)) >> uvec3(0u, 0u, 0u)))))) : _GLF_FUZZED(uvec3(71867u, 525u, 31008u)))) | ((_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(72.38, -8384.0679)))).x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) / vec2(1.0, 1.0)).y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(72.38, -8384.0679)))).x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) / vec2(1.0, 1.0)).y)) && true)) ? _GLF_FUZZED(min(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), workgroup_base)) : 0u)), min(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(min(_GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id)), workgroup_base)) : 0u)), _GLF_IDENTITY(0u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(min(workgroup_id, workgroup_base)) : 0u)))), 0u), (uvec3(0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(min(workgroup_id, workgroup_base)) : 0u)), 0u)) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) + (uvec3(0u, 0u, 0u)))))))))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x), 0.0 + (_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u))))))))), _GLF_IDENTITY(uint(uint((uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)) + subgroup_base, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) * 1u)))), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u)))))), (uint(uint((uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u))))))) | (uint(uint((uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), _GLF_IDENTITY((uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u) : _GLF_FUZZED(uvec3(143027u, 37351u, 158566u)))))))))))) - 0u))) >> (0u | 0u))), max(_GLF_IDENTITY(1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(bitfieldExtract(workgroup_base, -63367, -11094)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, max(_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(subgroup_id) : workgroup_base + subgroup_base)), workgroup_base + subgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, max(_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(subgroup_id) : workgroup_base + subgroup_base)), workgroup_base + subgroup_base)), min(_GLF_IDENTITY(workgroup_base + subgroup_base, max(_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(subgroup_id) : workgroup_base + subgroup_base)), workgroup_base + subgroup_base)), _GLF_IDENTITY(workgroup_base + subgroup_base, max(_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(subgroup_id) : workgroup_base + subgroup_base)), workgroup_base + subgroup_base))))) - (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) ^ 0u)))), 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u))), _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), uvec3(uvec3(uvec3(workgroup_base + subgroup_base, 0u, 0u)))), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u)))), 0u, 0u)))), clamp((uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(write_val))), 0u), min(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(write_val))), 0u), (true ? uvec3(workgroup_base + subgroup_base, _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(write_val))), 0u) : _GLF_FUZZED(uvec3(175818u, 194814u, 9192u)))), uvec3(workgroup_base + subgroup_base, _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(write_val))), 0u)))) + uvec3(0u, 0u, 0u)))), (uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u))), (true ? uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u))) : _GLF_FUZZED(subgroup_local_id)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(subgroup_base) : uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u)))))))))), uint(uvec2(_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u)))), clamp((uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u)))), (uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u)))), (uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u)))))), 0u)))) - (0u << _GLF_IDENTITY(uint(8u), uint(8u)))) - 0u))), min(1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(bitfieldExtract(workgroup_base, -63367, -11094)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, max(_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(subgroup_id) : workgroup_base + subgroup_base)), workgroup_base + subgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, max(_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(subgroup_id) : workgroup_base + subgroup_base)), workgroup_base + subgroup_base)), min(_GLF_IDENTITY(workgroup_base + subgroup_base, max(_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(subgroup_id) : workgroup_base + subgroup_base)), workgroup_base + subgroup_base)), _GLF_IDENTITY(workgroup_base + subgroup_base, max(_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(subgroup_id) : workgroup_base + subgroup_base)), workgroup_base + subgroup_base))))) - (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) ^ 0u)))), 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u))), _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), uvec3(uvec3(uvec3(workgroup_base + subgroup_base, 0u, 0u)))), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u)))), 0u, 0u)))), clamp((uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(write_val))), 0u), min(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(write_val))), 0u), (true ? uvec3(workgroup_base + subgroup_base, _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(write_val))), 0u) : _GLF_FUZZED(uvec3(175818u, 194814u, 9192u)))), uvec3(workgroup_base + subgroup_base, _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(write_val))), 0u)))) + uvec3(0u, 0u, 0u)))), (uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u))), (true ? uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u))) : _GLF_FUZZED(subgroup_local_id)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(subgroup_base) : uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u)))))))))), uint(uvec2(_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u)))), clamp((uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u)))), (uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u)))), (uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u)))))), 0u)))) - (0u << _GLF_IDENTITY(uint(8u), uint(8u)))) - 0u))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(bitfieldExtract(workgroup_base, -63367, -11094)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, max(_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(subgroup_id) : workgroup_base + subgroup_base)), workgroup_base + subgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, max(_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(subgroup_id) : workgroup_base + subgroup_base)), workgroup_base + subgroup_base)), min(_GLF_IDENTITY(workgroup_base + subgroup_base, max(_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(subgroup_id) : workgroup_base + subgroup_base)), workgroup_base + subgroup_base)), _GLF_IDENTITY(workgroup_base + subgroup_base, max(_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(subgroup_id) : workgroup_base + subgroup_base)), workgroup_base + subgroup_base))))) - (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) ^ 0u)))), 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u))), _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), uvec3(uvec3(uvec3(workgroup_base + subgroup_base, 0u, 0u)))), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u)))), 0u, 0u)))), clamp((uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(write_val))), 0u), min(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(write_val))), 0u), (true ? uvec3(workgroup_base + subgroup_base, _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(write_val))), 0u) : _GLF_FUZZED(uvec3(175818u, 194814u, 9192u)))), uvec3(workgroup_base + subgroup_base, _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(write_val))), 0u)))) + uvec3(0u, 0u, 0u)))), (uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u))), (true ? uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u))) : _GLF_FUZZED(subgroup_local_id)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(subgroup_base) : uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u)))))))))), uint(uvec2(_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u)))), clamp((uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u)))), (uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u)))), (uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u)))))), 0u)))) - (0u << _GLF_IDENTITY(uint(8u), uint(8u)))) - 0u))))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), clamp(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(workgroup_base + subgroup_base, 0u, 0u)), (~ (uvec3(workgroup_base + subgroup_base, 0u, 0u))) | (~ (uvec3(workgroup_base + subgroup_base, 0u, 0u)))))), uvec3(workgroup_base + subgroup_base, 0u, 0u))), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) | 0u)))), (uvec3(workgroup_base + subgroup_base, 0u, _GLF_IDENTITY(0u, (0u) | (0u)))) + uvec3(0u, 0u, 0u))), 1u * (uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) | 0u)))), (uvec3(workgroup_base + subgroup_base, 0u, _GLF_IDENTITY(0u, (0u) | (0u)))) + uvec3(0u, 0u, 0u)))))) - 0u, max(_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u)))) - 0u, min(_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u)))) - 0u, ((uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u)))) - 0u) / 1u), (uint(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)))), 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u)))) - 0u)), (uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), 0u, 0u)) + uvec3(0u, 0u, 0u)))) - 0u)))), 0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) ^ (_GLF_IDENTITY(uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u)), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u)))))), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u))))), (uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_base), clamp(_GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base)))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_base), clamp(_GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base))))) - 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_base), clamp(_GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base)))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_base), clamp(_GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base))))) - 0u)), clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_base), clamp(_GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base)))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_base), clamp(_GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base))))) - 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_base), clamp(_GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base)))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_base), clamp(_GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base))))) - 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_base), clamp(_GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base)))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_base), clamp(_GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base))))) - 0u))))) << 0u), 0u)) + uvec3(0u, 0u, 0u)))) - 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), clamp(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(workgroup_base + subgroup_base, 0u, 0u)), (~ (uvec3(workgroup_base + subgroup_base, 0u, 0u))) | (~ (uvec3(workgroup_base + subgroup_base, 0u, 0u)))))), uvec3(workgroup_base + subgroup_base, 0u, 0u))), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) | 0u)))), (uvec3(workgroup_base + subgroup_base, 0u, _GLF_IDENTITY(0u, (0u) | (0u)))) + uvec3(0u, 0u, 0u))), 1u * (uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) | 0u)))), (uvec3(workgroup_base + subgroup_base, 0u, _GLF_IDENTITY(0u, (0u) | (0u)))) + uvec3(0u, 0u, 0u)))))) - 0u, max(_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u)))) - 0u, min(_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u)))) - 0u, ((uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u)))) - 0u) / 1u), (uint(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)))), 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, 0u)))) - 0u)), (uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), 0u, 0u)) + uvec3(0u, 0u, 0u)))) - 0u)))), 0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) ^ (_GLF_IDENTITY(uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u)), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u)))))), (uvec3(workgroup_base + subgroup_base, 0u, 0u)) + uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u))))), (uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (uvec3(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_base), clamp(_GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base)))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_base), clamp(_GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base))))) - 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_base), clamp(_GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base)))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_base), clamp(_GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base))))) - 0u)), clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_base), clamp(_GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base)))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_base), clamp(_GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base))))) - 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_base), clamp(_GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base)))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_base), clamp(_GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base))))) - 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_base), clamp(_GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base)))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_base), clamp(_GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base))))) - 0u))))) << 0u), 0u)) + uvec3(0u, 0u, 0u)))) - 0u))))) ^ ((0u | 0u) >> _GLF_IDENTITY(uint(3u), uint(3u)))))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 atomicStore(write_val, uint(virtual_gid), 4, 64, _GLF_IDENTITY(0, (0) / 1));
 uint read_val = _GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false, true))), false, false, false)))) ? _GLF_IDENTITY(4, max(4, 4)) : _GLF_FUZZED(37765))), _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, ~ (~ (64)))))), _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(0, min(0, 0)))), (int(int(_GLF_IDENTITY(0, min(0, 0))))) >> 0))), (true ? atomicLoad(write_val, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(37765))), _GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (64)), ((~ (64))) + 0)), _GLF_IDENTITY(0, min(0, 0))) : _GLF_FUZZED(write_val)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 _GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (true ? _GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) << 0u) : _GLF_FUZZED(_GLF_IDENTITY(atomicXor(read_val, subgroup_id), (atomicXor(read_val, subgroup_id)) >> 0u))));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false))), false)))))))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, true && ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))) && true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))), bool(bool((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))))))), false, false, true))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))))), false, true, _GLF_IDENTITY(true, ! (! (true))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0])), injectionSwitch[1])).y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) && true)))), false, true, true))))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false), bvec3(bvec4(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false), false))), false))))) && true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))), false, true, true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && true)) || false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-441.410)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))), false, true, true))))) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))) && true)), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true) && _GLF_IDENTITY(true, true && (true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true, ! (! ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))) && true))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), _GLF_IDENTITY(bool(bvec3(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), true, true)), ! (! (bool(bvec3(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), true, true))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))), false, true, true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true) && true))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, _GLF_IDENTITY(bool(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), bool(bool(bool(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, _GLF_IDENTITY(bool(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), bool(bool(bool(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))), true), false)))))))))))) || false, bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, _GLF_IDENTITY(bool(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), bool(bool(bool(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, _GLF_IDENTITY(bool(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), bool(bool(bool(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))), true), false)))))))))))) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec4(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), false)))), true && (bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec4(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), false))))))) && true)))), false, true, true))))) || false))))))) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (false)))))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(false, true, true))), false, false, false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false), true, true))))) && true)))))
  return;
}
