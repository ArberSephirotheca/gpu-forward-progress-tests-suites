#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false, true))))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(gl_NumWorkGroups.x, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)), min(uint(uvec4(gl_NumWorkGroups.x, 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.6))))), 0u)), uint(_GLF_IDENTITY(uvec4(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6174.3396)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(2.6)))))))))), 0u), (_GLF_IDENTITY(uvec4(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6174.3396)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(2.6)))))))))), 0u), ~ (~ (uvec4(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6174.3396)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(2.6)))))))))), 0u))))) / uvec4(1u, 1u, 1u, 1u))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(uvec4(gl_NumWorkGroups.x, 0u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), ~ (_GLF_IDENTITY(~ (uint(_GLF_ONE(1.0, injectionSwitch.y))), (true ? ~ (uint(_GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(subgroup_id))))), 0u)), min(uint(uvec4(gl_NumWorkGroups.x, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)), uint(uvec4(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), (_GLF_IDENTITY(0u ^ (0u), min(0u ^ (0u), 0u ^ (0u)))) ^ 0u)), 0u)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6174.3396)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), (true ? max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6174.3396)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(3.4)), float(injectionSwitch.y), bool(true)))))) - 0.0)) : _GLF_FUZZED(-26.87)))), _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.4) : injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(2.6))), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(2.6))), 1.0, sqrt(1.0), 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, log(1.0)), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, (0.0) / 1.0), tan(tan(0.0)), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)))) + (mat4(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), (1.0) / 1.0) : _GLF_FUZZED(2.6))), 1.0, sqrt(1.0), 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (0.0) - abs(0.0)), 0.0, log(1.0))))))))))))), 0u)))) : _GLF_FUZZED(subgroup_size))));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x < injectionSwitch.y)), bool(bool((! (injectionSwitch.x < injectionSwitch.y))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true)))))))
    return;
  }
 else
  {
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, true && (_injected_loop_counter != 0))); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) ^ 0)); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
              return;
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x < injectionSwitch.y))))))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
                  return;
                 return;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
             else
              {
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
        }
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(_injected_loop_counter, 1, 1, 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(ivec4(_injected_loop_counter, 1, 1, 0)), 0, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 1), max(ivec4(int(ivec4(_injected_loop_counter, 1, 1, 0)), 0, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 1), ivec4(int(ivec4(_injected_loop_counter, 1, 1, 0)), 0, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 1)))), (int(_GLF_IDENTITY(ivec4(int(ivec4(_injected_loop_counter, 1, 1, 0)), 0, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 1), max(ivec4(int(ivec4(_injected_loop_counter, 1, 1, 0)), 0, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 1), ivec4(int(ivec4(_injected_loop_counter, 1, 1, 0)), 0, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 1))))) / 1)), clamp(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_injected_loop_counter, (0 << _GLF_IDENTITY(int(5), int(5))) ^ (_injected_loop_counter)), 1, 1, 0), (false ? _GLF_FUZZED(ivec4(57907, -92189, -55320, -92484)) : ivec4(_GLF_IDENTITY(_injected_loop_counter, (0 << _GLF_IDENTITY(int(5), int(5))) ^ (_injected_loop_counter)), 1, 1, 0)))), _GLF_IDENTITY(int(ivec4(_injected_loop_counter, 1, 1, 0)), clamp(int(ivec4(_injected_loop_counter, _GLF_IDENTITY(1, (1) | 0), 1, 0)), int(ivec4(_injected_loop_counter, 1, 1, 0)), int(ivec4(_injected_loop_counter, 1, 1, 0)))), int(ivec4(_injected_loop_counter, 1, 1, 0))))) < (_GLF_IDENTITY((_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 1), min(ivec2(_GLF_IDENTITY(1, (1) - 0), 1), ivec2(_GLF_IDENTITY(1, (1) - 0), 1))))) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY((_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 1), min(ivec2(_GLF_IDENTITY(1, (1) - 0), 1), ivec2(_GLF_IDENTITY(1, (1) - 0), 1))))) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), (true ? _GLF_IDENTITY((_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 1), min(ivec2(_GLF_IDENTITY(1, (1) - 0), 1), ivec2(_GLF_IDENTITY(1, (1) - 0), 1))))) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), 0 | ((_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 1), min(ivec2(_GLF_IDENTITY(1, (1) - 0), 1), ivec2(_GLF_IDENTITY(1, (1) - 0), 1))))) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))) : _GLF_FUZZED(-15897))), (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 1), min(ivec2(_GLF_IDENTITY(1, (1) - 0), 1), ivec2(_GLF_IDENTITY(1, (1) - 0), 1))))) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))))); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
        }
       return;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      break;
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  return;
 do
  {
   if(_GLF_DEAD(false))
    continue;
   do
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6462.2795)), bool(false))))) > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           for(int _injected_loop_counter = _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (4))), clamp(int(_GLF_IDENTITY(4, (4) | (4))), int(_GLF_IDENTITY(4, (4) | (4))), int(_GLF_IDENTITY(4, (4) | (4))))), int(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) >> 0)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec3(int(4), 0, 0)))), _GLF_IDENTITY(0, (0) / 1) | (_GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(_GLF_ONE(1.0, injectionSwitch.y)) * (int(4))), int(_GLF_IDENTITY(ivec3(int(4), _GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(int(7), int(7)))), 0), ~ (~ (ivec3(int(4), _GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(int(7), int(7)))), 0))))))))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4) | (4), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), ~ (_GLF_IDENTITY(~ ((1 << _GLF_IDENTITY(int(1), int(1)))), (~ ((1 << _GLF_IDENTITY(int(1), int(1))))) - 0))) >> _GLF_IDENTITY(int(1), int(1))) * ((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) ^ 0), 4))) | (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec3(4, 0, 1)))))))), ((4) | _GLF_IDENTITY((4), ((4)) << 0)) | ((4) | _GLF_IDENTITY((4), 0 | ((4))))))), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(31870) : 4))))), int(ivec3(int(4), 0, 0)))), _GLF_IDENTITY(0 | (_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec3(int(4), 0, 0))))), max(0 | (_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec3(int(4), 0, 0))))), 0 | (_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec3(int(4), 0, 0))))))))) - 0, (true ? ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), ((4) | (_GLF_IDENTITY(4, max(4, 4)))) | ((4) | (4))))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), ((4) | (_GLF_IDENTITY(4, max(4, 4)))) | ((4) | (4))))), (false ? _GLF_FUZZED(59512) : int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), ((4) | (_GLF_IDENTITY(4, max(4, 4)))) | ((4) | (4)))))))))), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(ivec3(int(4), 0, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | (0)), 0))))), (ivec3(int(4), 0, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | (0)), 0)))))) - ivec3(0, 0, 0))))), 0 | (_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec3(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), int(int(_GLF_IDENTITY(int(4), int(ivec3(int(4), 1, 1))))))) >> 0), 0, 0))))))) - 0 : _GLF_FUZZED(62950))))), (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(_GLF_IDENTITY(4, (4) | (4)))), (int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), ((4) | (4)) + 0))))) + 0))), int(4), _GLF_IDENTITY(int(4), (int(4)) >> 0))), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec3(int(4), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(55411) : _GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), 0 ^ (0)))), 0)))))) >> _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) ^ 0), 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x)) & 4666)); _injected_loop_counter --)
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(150.584)), max(float(_GLF_FUZZED(150.584)), float(_GLF_FUZZED(150.584)))), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)))))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                  continue;
                 continue;
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 return;
                }
               return;
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && true))))
            return;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), ! (! (false))), _GLF_IDENTITY(true, bool(bvec3(true, false, false))) && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! ((false)), true && (! ((false))))), (_GLF_IDENTITY((! ((false))), _GLF_IDENTITY(false || ((! ((false)))), false || (false || ((! ((false)))))))) || false), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! ((false)), true && (! ((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))), _GLF_IDENTITY((_GLF_IDENTITY((! ((false))), _GLF_IDENTITY(false || ((! ((false)))), false || (false || ((! ((false)))))))) || false, ((_GLF_IDENTITY((! ((false))), _GLF_IDENTITY(_GLF_IDENTITY(false || ((! ((false)))), (false || ((! ((false))))) && true), false || (false || ((! ((false)))))))) || false) || false)))))) || false))), (_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), (! _GLF_IDENTITY((! ((false))), _GLF_IDENTITY((_GLF_IDENTITY((! ((false))), false || ((! ((false)))))) || false, ! (! ((_GLF_IDENTITY((! ((false))), false || ((! ((false)))))) || false))))) || false)), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), (! _GLF_IDENTITY((! ((false))), _GLF_IDENTITY((_GLF_IDENTITY((! ((false))), false || ((! ((false)))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY((! ((false))), false || ((! ((false)))))), false || ((_GLF_IDENTITY((! ((false))), false || ((! ((false)))))))) || false))))) || false))) && true)), ((! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), false || ((false))))), (! _GLF_IDENTITY((! ((false))), (_GLF_IDENTITY((! ((false))), false || ((! ((false)))))) || false)) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), ((false)) || false))), (! _GLF_IDENTITY((! ((false))), _GLF_IDENTITY((_GLF_IDENTITY((! ((false))), false || ((! ((false)))))) || false, false || ((_GLF_IDENTITY((_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), (! ((false))) || false))))), false || ((! ((false)))))) || false)))) || false))) && true))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), ! (! (false))), _GLF_IDENTITY(true, bool(bvec3(true, false, false))) && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), (! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), true && (! ((false))))), (_GLF_IDENTITY((! ((false))), _GLF_IDENTITY(false || ((! ((false)))), false || (false || ((! ((false)))))))) || false)) || false))), (_GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), (! _GLF_IDENTITY((! ((false))), _GLF_IDENTITY((_GLF_IDENTITY((! ((false))), false || ((! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))))) || false, ! _GLF_IDENTITY((! ((_GLF_IDENTITY((! ((false))), false || ((! ((false)))))) || false)), ((! ((_GLF_IDENTITY((! ((false))), false || ((! ((false)))))) || false))) && true)))) || false))), ((! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((false))), (! _GLF_IDENTITY((! ((false))), (_GLF_IDENTITY((! ((false))), false || ((! ((false)))))) || false)) || false), bool(bvec3(_GLF_IDENTITY(! (! ((false))), (! _GLF_IDENTITY((! ((false))), (_GLF_IDENTITY((! ((false))), false || ((! ((false)))))) || false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), ((false)) || false))), (! _GLF_IDENTITY((! ((false))), (_GLF_IDENTITY((! ((false))), false || ((_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))))) || false)) || false))) && true))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), ! (! (false))), _GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))))))))) && (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), (! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), true && (! ((false))))), (_GLF_IDENTITY((! ((false))), _GLF_IDENTITY(false || ((! ((false)))), false || (false || ((! ((false)))))))) || false)) || false))), (_GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), (! _GLF_IDENTITY((! ((false))), _GLF_IDENTITY((_GLF_IDENTITY((! ((false))), false || ((! ((false)))))) || false, ! (! ((_GLF_IDENTITY((! ((false))), false || ((! ((false)))))) || false))))) || false))), ((! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), _GLF_IDENTITY((! _GLF_IDENTITY((! ((false))), (_GLF_IDENTITY((! ((false))), false || ((! ((false)))))) || false)), true && ((! _GLF_IDENTITY((! ((false))), (_GLF_IDENTITY((! ((false))), false || ((! ((false)))))) || false)))) || false)), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), ((false)) || false))), (! _GLF_IDENTITY((! ((false))), (_GLF_IDENTITY((! ((false))), false || ((! ((false)))))) || false)) || false))) && true))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((false))), (! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), true && (! ((false))))), (_GLF_IDENTITY((! ((false))), _GLF_IDENTITY(false || ((! ((false)))), false || (false || ((! ((false)))))))) || false)) || false), bool(bvec4(_GLF_IDENTITY(! (! ((false))), (! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), true && (! ((false))))), (_GLF_IDENTITY((! ((false))), _GLF_IDENTITY(false || ((! ((false)))), false || (false || ((! ((false)))))))) || false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((false))), bool(bvec4(! (! ((false))), false, false, true))), (! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), true && (! ((false))))), (_GLF_IDENTITY((! ((false))), _GLF_IDENTITY(false || ((! (_GLF_IDENTITY((false), ((false)) || false)))), false || (false || ((! ((false)))))))) || false)) || false)))))), (_GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), (! _GLF_IDENTITY((! ((false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((! ((false))), false || ((! ((false)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((! ((false))), false || ((! ((false)))))), ! (! ((_GLF_IDENTITY((! ((false))), false || ((! ((false)))))))))))) || false, true && (_GLF_IDENTITY((_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true)), false || ((! ((false)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((! ((false))), false || ((! ((false))))), (_GLF_IDENTITY(_GLF_IDENTITY((! ((false))), bool(bvec4(_GLF_IDENTITY((! ((false))), bool(bvec3((! ((false))), false, true))), false, true, true))), false || ((! ((false)))))) || false)), ! (! ((_GLF_IDENTITY((! ((false))), false || ((! (_GLF_IDENTITY((false), ! (! ((false))))))))))))))) || false)), ! (! ((_GLF_IDENTITY((! (_GLF_IDENTITY((false), ((false)) && true))), false || ((! ((false)))))) || false))))) || _GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), ((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(! _GLF_IDENTITY((! ((false))), _GLF_IDENTITY(bool(bool((! ((false))))), false || (bool(bool((! ((false)))))))), (! _GLF_IDENTITY(_GLF_IDENTITY((! ((false))), (_GLF_IDENTITY((! ((false))), false || ((! ((false)))))) || false), true && (_GLF_IDENTITY((! ((false))), (_GLF_IDENTITY((! ((false))), false || ((! (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), true && ((false))), false, true)))) || false)))))) || false)))) || false)), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), ((false)) || false))), (! _GLF_IDENTITY((! ((false))), (_GLF_IDENTITY((! ((false))), false || ((! ((false)))))) || false)) || false))) && true), bool(bool(! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), (! _GLF_IDENTITY((! ((false))), (_GLF_IDENTITY((_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), false || (! (_GLF_IDENTITY((false), bool(bvec2((false), false))))))) || false)), _GLF_IDENTITY(false || ((! ((false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || ((! ((false)))), ! (_GLF_IDENTITY(! (false || ((! ((false))))), ! (! (! (false || ((! ((false))))))))))), false || (! (_GLF_IDENTITY(false || ((! ((false)))), ! (_GLF_IDENTITY(! (false || ((! ((false))))), ! (! (! (false || ((! ((false))))))))))))))))) || _GLF_IDENTITY(false, bool(bool(false))))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY((false), ((false)) || false))), (! (! (_GLF_IDENTITY((false), ((false)) || false)))) || false), _GLF_IDENTITY((! _GLF_IDENTITY((! ((false))), (_GLF_IDENTITY((! ((false))), false || ((! ((false)))))) || false)), ((! _GLF_IDENTITY((! ((false))), (_GLF_IDENTITY((! ((false))), false || ((! ((false)))))) || false))) && true) || false))) && true)))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)))))) && true))));
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false)))) && true));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u), workgroup_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), bool(bvec4(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), _GLF_IDENTITY(true, ! (! (true))), false, true))))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1)); _injected_loop_counter ++)
        {
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))) && true), false)))) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false)))))), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false)))), true, false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false)))), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false)))), true, false))))), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false))))))))))
    {
     do
      {
       do
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (false ? _GLF_FUZZED(-54479) : ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(float(false))), float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), bool(true))) > injectionSwitch.y))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), ((! _GLF_IDENTITY((false), ! (! ((false)))))) && true))));
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u), max(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)), 0u)) | (subgroup_size)))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)), 0u)) | (subgroup_size))))))) | ((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(uvec3(num_workgroup, 1u, 0u)), uint(uvec2(uint(uvec3(num_workgroup, 1u, 0u)), 1u))))) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)), 0u)) | (subgroup_size))))))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u), max(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)), 0u)) | (subgroup_size)))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)), 0u)) | (subgroup_size))))))) | ((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(uvec3(num_workgroup, 1u, 0u)), uint(uvec2(uint(uvec3(num_workgroup, 1u, 0u)), 1u))))) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)), 0u)) | (subgroup_size))))))))), max(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u), max(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)), 0u)) | (subgroup_size)))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)), 0u)) | (subgroup_size))))))) | ((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(uvec3(num_workgroup, 1u, 0u)), uint(uvec2(uint(uvec3(num_workgroup, 1u, 0u)), 1u))))) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)), 0u)) | (subgroup_size))))))))), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u), max(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)), 0u)) | (subgroup_size)))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)), 0u)) | (subgroup_size))))))) | ((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(uvec3(num_workgroup, 1u, 0u)), uint(uvec2(uint(uvec3(num_workgroup, 1u, 0u)), 1u))))) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)), 0u)) | (subgroup_size)))))))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u), max(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)), 0u)) | (subgroup_size)))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)), 0u)) | (subgroup_size))))))) | ((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(uvec3(num_workgroup, 1u, 0u)), uint(uvec2(uint(uvec3(num_workgroup, 1u, 0u)), 1u))))) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)), 0u)) | (subgroup_size))))))))), max(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u), max(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)), 0u)) | (subgroup_size)))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)), 0u)) | (subgroup_size))))))) | ((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(uvec3(num_workgroup, 1u, 0u)), uint(uvec2(uint(uvec3(num_workgroup, 1u, 0u)), 1u))))) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)), 0u)) | (subgroup_size))))))))), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u), max(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)), 0u)) | (subgroup_size)))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)), 0u)) | (subgroup_size))))))) | ((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(uvec3(num_workgroup, 1u, 0u)), uint(uvec2(uint(uvec3(num_workgroup, 1u, 0u)), 1u))))) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)), 0u)) | (subgroup_size))))))))))))) ^ 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-833.726), _GLF_FUZZED(-2.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true)))))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) / 1u);
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, exp(sqrt(0.0)), 0.0)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(float(vec3(injectionSwitch.y, exp(_GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) * 1.0)), 0.0)), mix(float(float(vec3(injectionSwitch.y, exp(sqrt(0.0)), 0.0))), float(_GLF_FUZZED(1529.5658)), bool(false)))), float(_GLF_FUZZED(768.672)), bool(false)), 0.0 + (_GLF_IDENTITY(mix(float(_GLF_IDENTITY(float(vec3(injectionSwitch.y, exp(_GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) * 1.0)), 0.0)), mix(float(float(vec3(injectionSwitch.y, exp(sqrt(0.0)), 0.0))), float(_GLF_FUZZED(1529.5658)), bool(false)))), float(_GLF_FUZZED(768.672)), bool(false)), max(mix(float(_GLF_IDENTITY(float(vec3(injectionSwitch.y, exp(_GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) * 1.0)), 0.0)), mix(float(float(vec3(injectionSwitch.y, exp(sqrt(0.0)), 0.0))), float(_GLF_FUZZED(1529.5658)), bool(false)))), float(_GLF_FUZZED(768.672)), bool(false)), mix(float(_GLF_IDENTITY(float(vec3(injectionSwitch.y, exp(_GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) * 1.0)), 0.0)), mix(float(float(vec3(injectionSwitch.y, exp(sqrt(0.0)), 0.0))), float(_GLF_FUZZED(1529.5658)), bool(false)))), float(_GLF_FUZZED(768.672)), bool(false)))))))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, ~ (~ (0)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      continue;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))) && true))
      return;
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), min(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) ^ 0), 1 * (_GLF_IDENTITY(int(3), (int(3)) ^ 0))))), (_GLF_IDENTITY(int(3), min(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) ^ 0), 1 * (_GLF_IDENTITY(int(3), (int(3)) ^ 0)))))) * 1), int(3))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, max(3, 3))), _GLF_IDENTITY(int(3), max(_GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(int(3), 0 ^ (_GLF_IDENTITY(int(3), (int(3)) / _GLF_IDENTITY(1, 1 * (1))))), int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) >> 0), int(ivec4(int(3), 1, 0, 1))))), (_GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(int(3), 0 ^ (_GLF_IDENTITY(int(3), (int(3)) / _GLF_IDENTITY(1, 1 * (1))))), int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) >> 0), int(ivec4(int(3), 1, 0, 1)))))) + (0 >> _GLF_IDENTITY(int(0), int(0)))), int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, 0 ^ (3))) | 0))))))); _injected_loop_counter ++)
        {
         return;
         if(_GLF_DEAD(false))
          continue;
        }
      }
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, abs(determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))))))
        {
         return;
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), sqrt(1.0), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4.2) : 0.0)))), 1.0, 0.0)), max(float(mat3(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), sqrt(1.0), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(vec2(0.0, 0.0)), 1.0, 0.0)), float(mat3(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), sqrt(1.0), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(vec2(0.0, 0.0)), 1.0, 0.0)))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) + vec2(0.0, 0.0)).x < injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 do
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0], float(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0], 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(98.09)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))[1]) - 0.0))), mix(vec2(_GLF_FUZZED(-0.5), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0], float(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0], 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(98.09)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))[1]) - 0.0))))[1], clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0], float(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0], 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(98.09)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))[1]) - 0.0))))[1], ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0], float(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0], 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(98.09)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))[1]) - 0.0))))[1]) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0], float(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0], 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(98.09)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))[1]) - 0.0))))[1], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0], float(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0], 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(98.09)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))[1]) - 0.0))))[1]))), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0], float(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0], 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(98.09)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))[1]) - 0.0))))[0], _GLF_FUZZED(7.6)), bvec2(true, false))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), mix(vec2((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), (_GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), clamp(_GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), vec2(mat2x4(mat2(1.0) * (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))), mat2(1.0) * ((injectionSwitch)), mat2(1.0) * ((injectionSwitch))))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0))[0], _GLF_FUZZED(-4.1)), vec2(_GLF_FUZZED((529.040 + -5.6)), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) / vec2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), _GLF_ONE(1.0, injectionSwitch.y)))) - _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))))[1]), bvec2(false, true)))).y))))
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
          return;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), ! (! ((! (_GLF_IDENTITY(false, ! (! (false)))))))))))
              continue;
             for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), true, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))))), ! (_GLF_IDENTITY(! (true), (! (true)) || false))) ? injectionSwitch.x : _GLF_FUZZED(sqrt(-3.5)))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, bool(bvec3((true) || false, true, false))))))), true, true, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.7)), vec2(_GLF_FUZZED(-297.104), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), (! (true)) || false))) ? injectionSwitch.x : _GLF_FUZZED(sqrt(-3.5))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, bool(bvec3((true) || false, true, false))))))), true, true, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.7)), vec2(_GLF_FUZZED(-297.104), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), (! (true)) || false))) ? injectionSwitch.x : _GLF_FUZZED(sqrt(-3.5))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, bool(bvec3((true) || false, true, false))))))), true, true, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.7)), vec2(_GLF_FUZZED(-297.104), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), (! (true)) || false))) ? injectionSwitch.x : _GLF_FUZZED(sqrt(-3.5))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, bool(bvec3((true) || false, true, false))))))), true, true, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.7)), vec2(_GLF_FUZZED(-297.104), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), (! (true)) || false))) ? injectionSwitch.x : _GLF_FUZZED(sqrt(-3.5))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, bool(bvec3((true) || false, true, false))))))), true, true, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.7)), vec2(_GLF_FUZZED(-297.104), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), (! (true)) || false))) ? injectionSwitch.x : _GLF_FUZZED(sqrt(-3.5))), ((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, bool(bvec3((true) || false, true, false))))))), true, true, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.7)), vec2(_GLF_FUZZED(-297.104), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), (! (true)) || false))) ? injectionSwitch.x : _GLF_FUZZED(sqrt(-3.5)))) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, bool(bvec3((true) || false, true, false))))))), true, true, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.7)), vec2(_GLF_FUZZED(-297.104), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), (! (true)) || false))) ? injectionSwitch.x : _GLF_FUZZED(sqrt(-3.5))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, bool(bvec3((true) || false, true, false))))))), true, true, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.7)), vec2(_GLF_FUZZED(-297.104), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), (! (true)) || false))) ? injectionSwitch.x : _GLF_FUZZED(sqrt(-3.5)))))))))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 0.0, 1.0, abs(0.0), sqrt(0.0), 0.0, 0.0, 0.0)), min(float(mat4(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(sqrt(-3.5)))), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), 0.0, log(1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(abs(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.4)), float(0.0), bool(true))), 0.0, 0.0))), (abs(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.4)), float(0.0), _GLF_IDENTITY(bool(true), (bool(true)) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))), 0.0, 0.0)))) / 1.0), sqrt(0.0), 0.0, 0.0, 0.0)), float(mat4(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(sqrt(-3.5)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) * mat3(1.0))), mix(float(_GLF_FUZZED(2943.7635)), float(float(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) * mat3(1.0)))), bool(true)))), 1.0))), float(mat2(max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) * mat3(1.0))), mix(float(_GLF_FUZZED(2943.7635)), float(float(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) * mat3(1.0)))), bool(true)))), 1.0))), 1.0, 0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 0.0, 1.0, abs(0.0), sqrt(0.0), 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(_GLF_IDENTITY(float(_GLF_FUZZED(3.3)), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(3.3)), (float(_GLF_FUZZED(3.3))) * 1.0), _GLF_IDENTITY(float(_GLF_FUZZED(3.3)), (true ? float(_GLF_FUZZED(3.3)) : _GLF_FUZZED(7426.3969))), float(_GLF_FUZZED(3.3)))), _GLF_IDENTITY(float(_GLF_ZERO(0.0, injectionSwitch.x)), min(float(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(float(_GLF_ZERO(0.0, injectionSwitch.x)), mix(float(float(_GLF_ZERO(0.0, injectionSwitch.x))), float(_GLF_FUZZED(8.8)), bool(false))))), bool(true))), mix(float(_GLF_FUZZED(-20.78)), _GLF_IDENTITY(float(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-5.5 * -7.0))), float(0.0), bool(true))), injectionSwitch.x)), (float(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-5.5 * -7.0))), float(0.0), bool(true))), injectionSwitch.x))) + 0.0), bool(true))), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - tan(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).x))), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x)))), (clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-406.944)), bool(false))), 1.0))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(_GLF_IDENTITY(vec2(-71.64, 2.4), (vec2(_GLF_IDENTITY(-71.64, (-71.64) + abs(0.0)), _GLF_IDENTITY(2.4, (false ? _GLF_FUZZED(max(32.79, 2.2)) : 2.4)))) * vec2(1.0, 1.0)))))), log(1.0), _GLF_ZERO(0.0, injectionSwitch.x)), (true ? mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), clamp((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))) / vec2(1.0, 1.0)) * mat2(1.0), (true ? _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[1], (true ? _GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[1], max(((injectionSwitch) * mat2(1.0))[1], ((injectionSwitch) * mat2(1.0))[1])) : _GLF_FUZZED(636.000)))), vec2(_GLF_FUZZED(778.948), _GLF_FUZZED(4.4)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) : _GLF_FUZZED(vec2(-71.64, 2.4))))), log(1.0), _GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(mat2(-666.283, 5326.7831, -3.7, -783.771)))))).x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).x)))), float(_GLF_FUZZED(57.12)), bool(false))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-20.78)), _GLF_IDENTITY(float(_GLF_ZERO(0.0, injectionSwitch.x)), (float(_GLF_ZERO(0.0, injectionSwitch.x))) - 0.0), bool(true)), max(mix(float(_GLF_FUZZED(-20.78)), _GLF_IDENTITY(float(_GLF_ZERO(0.0, injectionSwitch.x)), (float(_GLF_ZERO(0.0, injectionSwitch.x))) - 0.0), bool(true)), mix(float(_GLF_FUZZED(-20.78)), _GLF_IDENTITY(float(_GLF_ZERO(0.0, injectionSwitch.x)), (float(_GLF_ZERO(0.0, injectionSwitch.x))) - 0.0), bool(true))))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x))))) + 0.0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                 if(_GLF_DEAD(false))
                  continue;
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), max(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))).x))) > injectionSwitch.y))))
                return;
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         else
          {
          }
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * cos(0.0)) > injectionSwitch.y))));
 atomicStore(write_val, uint(virtual_gid), _GLF_IDENTITY(4, (_GLF_IDENTITY(0, 0 + (0)) << _GLF_IDENTITY(int(2), int(2))) | (4)), 64, _GLF_IDENTITY(0, (_GLF_IDENTITY(false, bool(bvec3(false, false, false))) ? _GLF_FUZZED(-25743) : 0)));
 uint read_val = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(write_val, (_GLF_IDENTITY(write_val, 0u | (write_val))) / 1u), 4, 64, 0), (true ? atomicLoad(_GLF_IDENTITY(write_val, (_GLF_IDENTITY(_GLF_IDENTITY(write_val, 0u | _GLF_IDENTITY((write_val), clamp((write_val), (_GLF_IDENTITY(write_val, ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * (write_val))), _GLF_IDENTITY((write_val), uint(uvec2((write_val), 0u)))))), (_GLF_IDENTITY(write_val, 0u | (write_val))) | (_GLF_IDENTITY(write_val, 0u | _GLF_IDENTITY(_GLF_IDENTITY((write_val), ((write_val)) | (_GLF_IDENTITY((write_val), clamp((write_val), (write_val), (write_val))))), (true ? _GLF_IDENTITY((write_val), ((write_val)) | (_GLF_IDENTITY((write_val), clamp((write_val), (write_val), (write_val))))) : _GLF_FUZZED(subgroup_size))))))) / _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (1u), clamp(~ (1u), ~ (1u), ~ (1u))), _GLF_IDENTITY(uint(uvec4(~ (_GLF_IDENTITY(1u, (1u) - (1u ^ 1u))), 0u, 1u, 0u)), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(subgroup_id) : uint(uvec4(~ (_GLF_IDENTITY(1u, (1u) - (1u ^ 1u))), 0u, 1u, 0u))))), _GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))), ~ (1u))))), (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(~ (1u), uint(uvec4(~ (1u), 0u, 1u, 0u))), _GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))), ~ (1u)), ~ (_GLF_IDENTITY(~ (clamp(_GLF_IDENTITY(~ (1u), uint(uvec4(~ (1u), 0u, 1u, 0u))), _GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))), ~ (1u))), 0u ^ (~ (clamp(_GLF_IDENTITY(~ (1u), uint(uvec4(~ (1u), 0u, 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))), max(~ (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) + 0u)))), ~ (1u))), ~ (1u))))))))))) - 0u)), _GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))))), ~ (~ (~ (~ (_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))))))))) | (~ (~ (_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, clamp(4, 4, 4))))))))), _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), 4, 4))))))) >> 0), 4)), 64, 0) : _GLF_FUZZED(44112u)));
 do
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      continue;
     do
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false))))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, round(length(normalize(abs(vec2(1.0, 1.0))))), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), vec2(0.0, 1.0)), dot(vec2(0.0, sqrt(1.0)), vec2(0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0)), 0.0))) > injectionSwitch.y))))
                break;
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                {
                 do
                  {
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             continue;
             if(_GLF_DEAD(false))
              continue;
            }
           return;
          }
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
   buf[virtual_gid] = uint(subgroupAllEqual(read_val));
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) || false, (_GLF_IDENTITY((false), bool(bvec4((false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false) || _GLF_IDENTITY(false, true && (false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      return;
     continue;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
}
