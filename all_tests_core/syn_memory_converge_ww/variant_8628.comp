#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false)))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)), false)), ! (! (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)), false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
  barrier();
 for(int _injected_loop_counter = ((_GLF_IDENTITY(1, (1) << 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(0), clamp(int(0), _GLF_IDENTITY(int(0), (int(0)) - 0), int(0))), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (-42816 & 0)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) | 0)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        continue;
       return;
      }
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_IDENTITY(_GLF_FUZZED((uvec3(uvec4(_GLF_IDENTITY(24686u, (_GLF_IDENTITY(_GLF_IDENTITY(24686u, min(24686u, 24686u)), max(_GLF_IDENTITY(24686u, min(24686u, 24686u)), _GLF_IDENTITY(24686u, min(24686u, 24686u))))) ^ 0u), 136847u, 146478u, 148654u)) & subgroup_id)), (_GLF_IDENTITY(_GLF_FUZZED((uvec3(uvec4(_GLF_IDENTITY(24686u, (_GLF_IDENTITY(_GLF_IDENTITY(24686u, min(24686u, 24686u)), max(_GLF_IDENTITY(24686u, min(24686u, 24686u)), _GLF_IDENTITY(24686u, min(24686u, 24686u))))) ^ 0u), 136847u, 146478u, 148654u)) & subgroup_id)), (_GLF_FUZZED((uvec3(uvec4(_GLF_IDENTITY(24686u, (_GLF_IDENTITY(_GLF_IDENTITY(24686u, min(24686u, 24686u)), max(_GLF_IDENTITY(24686u, min(24686u, 24686u)), _GLF_IDENTITY(24686u, min(24686u, 24686u))))) ^ 0u), 136847u, 146478u, 148654u)) & subgroup_id))) >> uvec3(0u, 0u, 0u))) | (_GLF_FUZZED((uvec3(uvec4(_GLF_IDENTITY(24686u, (_GLF_IDENTITY(_GLF_IDENTITY(24686u, min(24686u, 24686u)), max(_GLF_IDENTITY(24686u, min(24686u, 24686u)), _GLF_IDENTITY(24686u, min(24686u, 24686u))))) ^ 0u), 136847u, 146478u, 148654u)) & subgroup_id)))) : gl_WorkGroupSize)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          break;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_id) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), ! (! (_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), (! (_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) * 1.0), injectionSwitch.y)))) && true))), ! (! (_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), ! (! (_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), (_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, float(vec2(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3.3)))))), injectionSwitch.y))) || false)))))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      continue;
     return;
    }
   if(_GLF_DEAD(false))
    break;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), _GLF_IDENTITY(false, ! (! (false))) || (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true)), bool(bool(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
      }
     do
      {
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) / 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         continue;
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))))));
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      break;
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = ((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(5), int(5)), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(5), int(5))) | 0)) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          continue;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          barrier();
         for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(write_val, uint(virtual_gid), 4, 64, _GLF_IDENTITY(0, (0) | (0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
    barrier();
  }
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(ivec4(_injected_loop_counter, (0 >> _GLF_IDENTITY(int(8), int(8))), 0, 0)), (int(ivec4(_injected_loop_counter, (0 >> _GLF_IDENTITY(int(8), int(8))), 0, 0))) | (_GLF_IDENTITY(int(ivec4(_injected_loop_counter, (0 >> _GLF_IDENTITY(int(8), int(8))), 0, 0)), (int(ivec4(_injected_loop_counter, (0 >> _GLF_IDENTITY(int(8), int(8))), 0, 0))) / 1)))) < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    break;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec3(bool(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((+ -9.1)), _GLF_FUZZED((- 463.179))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) && true))))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)), true)))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec3(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), (bool(false)) && true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)), true)))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec3(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) && true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)), true)))))), ! (! (bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec3(bool(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) && true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (false) || false)), true))))))))))))))))
      barrier();
     barrier();
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_injected_loop_counter, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), int(int((_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter))))))))), (int(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter))))))) | (int(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), _GLF_IDENTITY(max(~ _GLF_IDENTITY((_injected_loop_counter), (true ? (_injected_loop_counter) : _GLF_FUZZED(_injected_loop_counter))), ~ (_injected_loop_counter)), (max(~ (_injected_loop_counter), ~ (_injected_loop_counter))) | (_GLF_IDENTITY(max(~ _GLF_IDENTITY((_injected_loop_counter), (_GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) ^ 0)) / 1), ~ (_injected_loop_counter)), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(max(~ (_injected_loop_counter), ~ (_injected_loop_counter)), _GLF_IDENTITY(0, 0 ^ (0)) | (max(~ (_injected_loop_counter), ~ (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))) / 1))))), 0, 0, 1), (false ? _GLF_FUZZED(ivec4(59282, 67560, 27010, 39511)) : _GLF_IDENTITY(ivec4(_GLF_IDENTITY(max(~ (_injected_loop_counter), _GLF_IDENTITY(~ (_injected_loop_counter), min(_GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) >> (0 >> _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(~ (_injected_loop_counter), (_GLF_IDENTITY(~ (_injected_loop_counter), min(~ (_injected_loop_counter), ~ (_injected_loop_counter)))) ^ 0)))), 0 | (max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), 0, _GLF_IDENTITY(0, (1 | 1) * (0)), 1), ~ (_GLF_IDENTITY(~ (ivec4(_GLF_IDENTITY(max(~ (_injected_loop_counter), _GLF_IDENTITY(~ (_injected_loop_counter), min(_GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) >> (0 >> _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(~ (_injected_loop_counter), (_GLF_IDENTITY(~ (_injected_loop_counter), min(~ (_injected_loop_counter), ~ (_injected_loop_counter)))) ^ 0)))), 0 | (max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), 0, _GLF_IDENTITY(0, (1 | 1) * (0)), 1)), clamp(~ (ivec4(_GLF_IDENTITY(max(~ (_injected_loop_counter), _GLF_IDENTITY(~ (_injected_loop_counter), min(_GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) >> (0 >> _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(~ (_injected_loop_counter), (_GLF_IDENTITY(~ (_injected_loop_counter), min(~ (_injected_loop_counter), ~ (_injected_loop_counter)))) ^ 0)))), 0 | (max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), 0, _GLF_IDENTITY(0, (1 | 1) * (0)), 1)), ~ (ivec4(_GLF_IDENTITY(max(~ (_injected_loop_counter), _GLF_IDENTITY(~ (_injected_loop_counter), min(_GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) >> (0 >> _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(~ (_injected_loop_counter), (_GLF_IDENTITY(~ (_injected_loop_counter), min(~ (_injected_loop_counter), ~ (_injected_loop_counter)))) ^ 0)))), 0 | (max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), 0, _GLF_IDENTITY(0, (1 | 1) * (0)), 1)), _GLF_IDENTITY(~ (ivec4(_GLF_IDENTITY(max(~ (_injected_loop_counter), _GLF_IDENTITY(~ (_injected_loop_counter), min(_GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) >> (0 >> _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(~ (_injected_loop_counter), (_GLF_IDENTITY(~ (_injected_loop_counter), min(~ (_injected_loop_counter), ~ (_injected_loop_counter)))) ^ 0)))), 0 | (max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), 0, _GLF_IDENTITY(0, (1 | 1) * (0)), 1)), clamp(~ (ivec4(_GLF_IDENTITY(max(~ (_injected_loop_counter), _GLF_IDENTITY(~ (_injected_loop_counter), min(_GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) >> (0 >> _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(~ (_injected_loop_counter), (_GLF_IDENTITY(~ (_injected_loop_counter), min(~ (_injected_loop_counter), ~ (_injected_loop_counter)))) ^ 0)))), 0 | (max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), 0, _GLF_IDENTITY(0, (1 | 1) * (0)), 1)), ~ (ivec4(_GLF_IDENTITY(max(~ (_injected_loop_counter), _GLF_IDENTITY(~ (_injected_loop_counter), min(_GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) >> (0 >> _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(~ (_injected_loop_counter), (_GLF_IDENTITY(~ (_injected_loop_counter), min(~ (_injected_loop_counter), ~ (_injected_loop_counter)))) ^ 0)))), 0 | (max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), 0, _GLF_IDENTITY(0, (1 | 1) * (0)), 1)), ~ (ivec4(_GLF_IDENTITY(max(~ (_injected_loop_counter), _GLF_IDENTITY(~ (_injected_loop_counter), min(_GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) >> (0 >> _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(~ (_injected_loop_counter), (_GLF_IDENTITY(~ (_injected_loop_counter), min(~ (_injected_loop_counter), ~ (_injected_loop_counter)))) ^ 0)))), 0 | (max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), 0, _GLF_IDENTITY(0, (1 | 1) * (0)), 1)))))))))))))))))))), int(ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(_injected_loop_counter, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), int(int((_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter))))))))), (int(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter))))))) | (int(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), _GLF_IDENTITY(max(~ _GLF_IDENTITY((_injected_loop_counter), (true ? (_injected_loop_counter) : _GLF_FUZZED(_injected_loop_counter))), ~ (_injected_loop_counter)), (max(~ (_injected_loop_counter), ~ (_injected_loop_counter))) | (_GLF_IDENTITY(max(~ _GLF_IDENTITY((_injected_loop_counter), (_GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) ^ 0)) / 1), ~ (_injected_loop_counter)), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(max(~ (_injected_loop_counter), ~ (_injected_loop_counter)), _GLF_IDENTITY(0, 0 ^ (0)) | (max(~ (_injected_loop_counter), ~ (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))) / 1))))), 0, 0, 1), (false ? _GLF_FUZZED(ivec4(59282, 67560, 27010, 39511)) : _GLF_IDENTITY(ivec4(_GLF_IDENTITY(max(~ (_injected_loop_counter), _GLF_IDENTITY(~ (_injected_loop_counter), min(_GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) >> (0 >> _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(~ (_injected_loop_counter), (_GLF_IDENTITY(~ (_injected_loop_counter), min(~ (_injected_loop_counter), ~ (_injected_loop_counter)))) ^ 0)))), 0 | (max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), 0, _GLF_IDENTITY(0, (1 | 1) * (0)), 1), ~ (_GLF_IDENTITY(~ (ivec4(_GLF_IDENTITY(max(~ (_injected_loop_counter), _GLF_IDENTITY(~ (_injected_loop_counter), min(_GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) >> (0 >> _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(~ (_injected_loop_counter), (_GLF_IDENTITY(~ (_injected_loop_counter), min(~ (_injected_loop_counter), ~ (_injected_loop_counter)))) ^ 0)))), 0 | (max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), 0, _GLF_IDENTITY(0, (1 | 1) * (0)), 1)), clamp(~ (ivec4(_GLF_IDENTITY(max(~ (_injected_loop_counter), _GLF_IDENTITY(~ (_injected_loop_counter), min(_GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) >> (0 >> _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(~ (_injected_loop_counter), (_GLF_IDENTITY(~ (_injected_loop_counter), min(~ (_injected_loop_counter), ~ (_injected_loop_counter)))) ^ 0)))), 0 | (max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), 0, _GLF_IDENTITY(0, (1 | 1) * (0)), 1)), ~ (ivec4(_GLF_IDENTITY(max(~ (_injected_loop_counter), _GLF_IDENTITY(~ (_injected_loop_counter), min(_GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) >> (0 >> _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(~ (_injected_loop_counter), (_GLF_IDENTITY(~ (_injected_loop_counter), min(~ (_injected_loop_counter), ~ (_injected_loop_counter)))) ^ 0)))), 0 | (max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), 0, _GLF_IDENTITY(0, (1 | 1) * (0)), 1)), _GLF_IDENTITY(~ (ivec4(_GLF_IDENTITY(max(~ (_injected_loop_counter), _GLF_IDENTITY(~ (_injected_loop_counter), min(_GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) >> (0 >> _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(~ (_injected_loop_counter), (_GLF_IDENTITY(~ (_injected_loop_counter), min(~ (_injected_loop_counter), ~ (_injected_loop_counter)))) ^ 0)))), 0 | (max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), 0, _GLF_IDENTITY(0, (1 | 1) * (0)), 1)), clamp(~ (ivec4(_GLF_IDENTITY(max(~ (_injected_loop_counter), _GLF_IDENTITY(~ (_injected_loop_counter), min(_GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) >> (0 >> _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(~ (_injected_loop_counter), (_GLF_IDENTITY(~ (_injected_loop_counter), min(~ (_injected_loop_counter), ~ (_injected_loop_counter)))) ^ 0)))), 0 | (max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), 0, _GLF_IDENTITY(0, (1 | 1) * (0)), 1)), ~ (ivec4(_GLF_IDENTITY(max(~ (_injected_loop_counter), _GLF_IDENTITY(~ (_injected_loop_counter), min(_GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) >> (0 >> _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(~ (_injected_loop_counter), (_GLF_IDENTITY(~ (_injected_loop_counter), min(~ (_injected_loop_counter), ~ (_injected_loop_counter)))) ^ 0)))), 0 | (max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), 0, _GLF_IDENTITY(0, (1 | 1) * (0)), 1)), ~ (ivec4(_GLF_IDENTITY(max(~ (_injected_loop_counter), _GLF_IDENTITY(~ (_injected_loop_counter), min(_GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) >> (0 >> _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(~ (_injected_loop_counter), (_GLF_IDENTITY(~ (_injected_loop_counter), min(~ (_injected_loop_counter), ~ (_injected_loop_counter)))) ^ 0)))), 0 | (max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), 0, _GLF_IDENTITY(0, (1 | 1) * (0)), 1)))))))))))))))))))), 1)))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), ~ (~ (~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))))))) - 0))), _GLF_IDENTITY((int(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), (~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter))))) - 0)))) | (int(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), _GLF_IDENTITY(_GLF_IDENTITY(max(~ (_injected_loop_counter), ~ (_injected_loop_counter)), max(max(~ (_injected_loop_counter), ~ (_injected_loop_counter)), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), max(_GLF_IDENTITY(max(~ (_injected_loop_counter), ~ (_injected_loop_counter)), max(max(~ (_injected_loop_counter), ~ (_injected_loop_counter)), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), _GLF_IDENTITY(max(~ (_injected_loop_counter), ~ (_injected_loop_counter)), max(max(~ (_injected_loop_counter), ~ (_injected_loop_counter)), max(~ (_injected_loop_counter), ~ (_injected_loop_counter))))))))))), ((int(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)), ~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter))))))) | (int(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))))))) << 0))), 1 * (int(_GLF_IDENTITY(int(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), ~ (~ (~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))))))) - 0))), _GLF_IDENTITY((int(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), (~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter))))) - 0)))) | (int(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), _GLF_IDENTITY(_GLF_IDENTITY(max(~ (_injected_loop_counter), ~ (_injected_loop_counter)), max(max(~ (_injected_loop_counter), ~ (_injected_loop_counter)), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), max(_GLF_IDENTITY(max(~ (_injected_loop_counter), ~ (_injected_loop_counter)), max(max(~ (_injected_loop_counter), ~ (_injected_loop_counter)), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), _GLF_IDENTITY(max(~ (_injected_loop_counter), ~ (_injected_loop_counter)), max(max(~ (_injected_loop_counter), ~ (_injected_loop_counter)), max(~ (_injected_loop_counter), ~ (_injected_loop_counter))))))))))), ((int(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)), ~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter))))))) | (int(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))))))) << 0))))), 1, 1), ivec3(0, 0, 0) ^ (_GLF_IDENTITY(ivec3(int(_GLF_IDENTITY(int(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), ~ (~ (~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), _GLF_IDENTITY(~ (_injected_loop_counter), min(~ (_injected_loop_counter), ~ (_injected_loop_counter)))))))))) - 0))), _GLF_IDENTITY(_GLF_IDENTITY((int(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ _GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) | ((_injected_loop_counter))), ~ (_injected_loop_counter))))))), ~ (~ ((int(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ _GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) | ((_injected_loop_counter))), ~ (_injected_loop_counter)))))))))) | (int(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), _GLF_IDENTITY(max(~ (_injected_loop_counter), _GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) / 1)), max(max(~ (_injected_loop_counter), ~ (_injected_loop_counter)), max(~ (_injected_loop_counter), ~ (_injected_loop_counter))))))))), ((int(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter))))))) | (int(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))))))) << 0))), 1, 1), clamp(ivec3(int(_GLF_IDENTITY(int(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_injected_loop_counter), _GLF_IDENTITY(max(~ (_injected_loop_counter), ~ (_injected_loop_counter)), (true ? max(~ (_injected_loop_counter), ~ (_injected_loop_counter)) : _GLF_FUZZED(59300))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ _GLF_IDENTITY((_injected_loop_counter), (_GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) - 0)) | ((_injected_loop_counter))), ~ (_injected_loop_counter)))), ~ (~ (~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))))))) - 0))), _GLF_IDENTITY((int(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ _GLF_IDENTITY((_injected_loop_counter), ~ (~ ((_injected_loop_counter)))), ~ (_injected_loop_counter))))))) | (int(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), _GLF_IDENTITY(max(~ (_injected_loop_counter), ~ (_injected_loop_counter)), max(max(~ (_injected_loop_counter), ~ (_injected_loop_counter)), max(~ (_injected_loop_counter), ~ (_injected_loop_counter))))))))), ((int(_GLF_IDENTITY(_injected_loop_counter, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), ~ (~ ((_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))))))))) | (int(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))))))) << 0))), 1, 1), ivec3(int(_GLF_IDENTITY(int(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), ~ (~ (~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))))))) - 0))), _GLF_IDENTITY(_GLF_IDENTITY((int(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter))))))), ~ (~ ((int(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))))))))) | (int(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), _GLF_IDENTITY(max(~ (_injected_loop_counter), ~ (_injected_loop_counter)), max(max(~ (_injected_loop_counter), ~ (_injected_loop_counter)), max(~ (_injected_loop_counter), ~ (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))))))))))), ((int(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter))))))) | (int(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))))))) << 0))), 1, 1), ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_injected_loop_counter), _GLF_IDENTITY(max(~ (_injected_loop_counter), ~ (_injected_loop_counter)), max(max(~ (_injected_loop_counter), ~ (_injected_loop_counter)), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_injected_loop_counter), min(~ (_injected_loop_counter), _GLF_IDENTITY(~ (_injected_loop_counter), ~ (~ (~ (_injected_loop_counter)))))), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))))))) - 0))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_injected_loop_counter), _GLF_IDENTITY(max(~ (_injected_loop_counter), ~ (_injected_loop_counter)), max(max(~ (_injected_loop_counter), ~ (_injected_loop_counter)), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_injected_loop_counter), min(~ (_injected_loop_counter), _GLF_IDENTITY(~ (_injected_loop_counter), ~ (~ (~ (_injected_loop_counter)))))), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))))))) - 0))), int(ivec4(int(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_injected_loop_counter), _GLF_IDENTITY(max(~ (_injected_loop_counter), ~ (_injected_loop_counter)), max(max(~ (_injected_loop_counter), ~ (_injected_loop_counter)), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_injected_loop_counter), min(~ (_injected_loop_counter), _GLF_IDENTITY(~ (_injected_loop_counter), ~ (~ (~ (_injected_loop_counter)))))), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))))))) - 0))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 1)))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_injected_loop_counter), _GLF_IDENTITY(max(~ (_injected_loop_counter), ~ (_injected_loop_counter)), max(max(~ (_injected_loop_counter), ~ (_injected_loop_counter)), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_injected_loop_counter), min(~ (_injected_loop_counter), _GLF_IDENTITY(~ (_injected_loop_counter), ~ (~ (~ (_injected_loop_counter)))))), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))))))) - 0))), (int(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_injected_loop_counter), _GLF_IDENTITY(max(~ (_injected_loop_counter), ~ (_injected_loop_counter)), max(max(~ (_injected_loop_counter), ~ (_injected_loop_counter)), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_injected_loop_counter), min(~ (_injected_loop_counter), _GLF_IDENTITY(~ (_injected_loop_counter), ~ (~ (~ (_injected_loop_counter)))))), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))))))) - 0)))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_injected_loop_counter), _GLF_IDENTITY(max(~ (_injected_loop_counter), ~ (_injected_loop_counter)), max(max(~ (_injected_loop_counter), ~ (_injected_loop_counter)), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_injected_loop_counter), min(~ (_injected_loop_counter), _GLF_IDENTITY(~ (_injected_loop_counter), ~ (~ (~ (_injected_loop_counter)))))), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))))))) - 0))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_injected_loop_counter), _GLF_IDENTITY(max(~ (_injected_loop_counter), ~ (_injected_loop_counter)), max(max(~ (_injected_loop_counter), ~ (_injected_loop_counter)), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_injected_loop_counter), min(~ (_injected_loop_counter), _GLF_IDENTITY(~ (_injected_loop_counter), ~ (~ (~ (_injected_loop_counter)))))), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))))))) - 0))))))))), _GLF_IDENTITY((int(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0)), ~ (_injected_loop_counter))))))) | (int(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), _GLF_IDENTITY(max(~ (_injected_loop_counter), ~ (_injected_loop_counter)), max(max(~ (_injected_loop_counter), ~ (_injected_loop_counter)), max(~ (_injected_loop_counter), ~ (_injected_loop_counter))))))))), ((int(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter))))))) | (int(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))))))) << 0))), 1, 1))))), ~ (~ (ivec3(int(_GLF_IDENTITY(int(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_injected_loop_counter), ~ (~ ((_injected_loop_counter)))), max(~ (_injected_loop_counter), ~ _GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) << 0)))))), (int(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter, 1 * _GLF_IDENTITY((_injected_loop_counter), ~ (~ ((_injected_loop_counter)))))), max(~ _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)), min((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)), (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)))), _GLF_IDENTITY(~ (_injected_loop_counter), _GLF_IDENTITY((_GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) / 1)) ^ 0, ((_GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) / 1)) ^ 0) | ((_GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) / 1)) ^ 0))))))))) | (int(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ _GLF_IDENTITY((_injected_loop_counter), (_GLF_IDENTITY(false ? _GLF_FUZZED(48905) : (_injected_loop_counter), clamp(false ? _GLF_FUZZED(48905) : (_injected_loop_counter), _GLF_IDENTITY(false ? _GLF_FUZZED(48905) : (_injected_loop_counter), int(int(false ? _GLF_FUZZED(48905) : (_injected_loop_counter)))), false ? _GLF_FUZZED(48905) : (_injected_loop_counter))))))))))))), 1, 1))))))) != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)) || false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool((! (false))), bool(bool(_GLF_IDENTITY(bool((! (false))), false || (_GLF_IDENTITY(bool((! (false))), bool(bvec4(_GLF_IDENTITY(bool((! (false))), (bool((! (false)))) || false), false, true, false)))))))))))))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      continue;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    continue;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) >> (1u ^ 1u));
  }
}
