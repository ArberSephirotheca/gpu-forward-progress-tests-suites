#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-561.087))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(81074u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(430.615)), bvec2(true, false))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) && true), true, false))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) || false), false, false, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.2)), vec2(_GLF_FUZZED(433.235), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.2)), vec2(_GLF_FUZZED(433.235), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.2)), vec2(_GLF_FUZZED(433.235), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.2)), vec2(_GLF_FUZZED(433.235), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.2)), vec2(_GLF_FUZZED(433.235), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.2)), vec2(_GLF_FUZZED(433.235), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))))).y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-635.453)), bool(false))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-635.453)), bool(false))) > injectionSwitch.y)), false, true)), true && (bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-635.453)), bool(false))) > injectionSwitch.y)), false, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), false || (_GLF_IDENTITY((_GLF_DEAD(false)), true && (_GLF_IDENTITY((_GLF_DEAD(false)), false || (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false))) || ((injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))), true && (bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))))))), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))) || false)) || false))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) * 1), 0)), _GLF_IDENTITY(0, (0) ^ 0)))], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2.1), _GLF_IDENTITY(_GLF_FUZZED(1.1), _GLF_IDENTITY(float(mat3x4(_GLF_FUZZED(1.1), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, abs(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, abs(0.0), 0.0)), float(mat2x4(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, abs(0.0), 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), 0.0, 0.0)), (true ? float(mat3x4(_GLF_FUZZED(1.1), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, abs(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, abs(0.0), 0.0)), float(mat2x4(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, abs(0.0), 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), 0.0, 0.0)) : _GLF_FUZZED(-3320.5542))))), bvec2(false, false))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, exp(0.0), 0.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 0.0)))) - vec2(0.0, 0.0)).y, false || (injectionSwitch.x > injectionSwitch.y)), false))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), false))))), false), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), 1.0, 0.0))).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false))))), false), false))))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)) || false))))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2.1), _GLF_FUZZED(1.1)), bvec2(false, false))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false))))), false), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false))))), false), false))))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false)))))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2.1), _GLF_FUZZED(1.1)), bvec2(false, false))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false))))), false), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false))))), false), false))))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false)))))), false))))) && true, ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2.1), _GLF_FUZZED(1.1)), bvec2(false, false))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false)))), true, false)))), false), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false)))))))), false), false))))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true), true && ((true))) || false)) || false)))))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2.1), _GLF_FUZZED(1.1)), bvec2(false, false))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2.1), _GLF_FUZZED(1.1)), bvec2(false, false))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))) / vec2(1.0, 1.0)).x > injectionSwitch.y), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false)))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false)))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false)))), false, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false)))), false, true)), true, false))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false)))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false)))), false, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false)))), false, true)), true, false))))), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false)))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false)))), false, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false)))), false, true)), true, false))))), true, false)), true, true))))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, false || (injectionSwitch.x > injectionSwitch.y)), false))))), false), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, abs(1.0), 0.0, 0.0, 0.0)), (vec2(mat2x3(injectionSwitch, abs(1.0), 0.0, 0.0, 0.0))) + vec2(0.0, 0.0))), injectionSwitch)).y)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false))))), false), false))))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false)))))), false))))) && true))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8323.1542)), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true), (_GLF_IDENTITY((true), true && ((true)))) || false) || false)) || false))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch.yx) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-71.05), _GLF_FUZZED(-0.4)), bvec2(false, false))))).x > injectionSwitch.y), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) * (injectionSwitch.x)), 0.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch.yx) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-71.05), _GLF_FUZZED(-0.4)), bvec2(false, false))))).x > injectionSwitch.y), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) * (injectionSwitch.x)), 0.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false)))))))))))))), (bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))) || false))))))), false || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, true, true))), _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, (true) || false))))) || false)))))))), bool(bool(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, true, true))), _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, (true) || false))))) || false))))))))))))))) || false), bool(bvec3(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, true))), _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))) || false))))))))))), (_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))) || false))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)) || false, bool(bvec3((_GLF_IDENTITY(true, (true) || false)) || false, true, true)))))), (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)) || false, bool(bvec3((_GLF_IDENTITY(true, (true) || false)) || false, true, true))))))) || false))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, false, true))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false)))) || false))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)) || false, bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), ! (! ((_GLF_IDENTITY(true, (true) || false))))) || false, true, true)))))))))))))), (bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, false, true))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false)))) || false))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)) || false, bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), ! (! ((_GLF_IDENTITY(true, (true) || false))))) || false, true, true))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), (_GLF_IDENTITY(bool(bvec2(bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false)))))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)) || false, bool(bvec3((_GLF_IDENTITY(true, (true) || false)) || false, true, true))))), bvec2(bvec4(bvec2(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)) || false, bool(bvec3((_GLF_IDENTITY(true, (true) || false)) || false, true, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), false)), false || (bool(bvec2(bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false)))))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)) || false, bool(bvec3((_GLF_IDENTITY(true, (true) || false)) || false, true, true))))), bvec2(bvec4(bvec2(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)) || false, bool(bvec3((_GLF_IDENTITY(true, (true) || false)) || false, true, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), false))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), ! (! (bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))))), true, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))))), bool(bool((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))))))))))
      barrier();
    }
   else
    {
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) ^ (gl_NumWorkGroups)), gl_NumWorkGroups), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)), _GLF_IDENTITY(((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))))) | uvec3(0u, 0u, 0u)) ^ (gl_NumWorkGroups)), gl_NumWorkGroups), 1u), clamp(uvec4(clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) ^ (gl_NumWorkGroups)), gl_NumWorkGroups), 1u), uvec4(clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) ^ (gl_NumWorkGroups)), gl_NumWorkGroups), 1u), _GLF_IDENTITY(uvec4(clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) ^ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u))), gl_NumWorkGroups), 1u), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED((subgroup_id ^ uvec4(59545u, 181332u, 122729u, 98269u))) : uvec4(clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) ^ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u))), gl_NumWorkGroups), 1u))))), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY(uvec4(clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), 1u, 1u), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(clamp(uvec3(28132u, 175075u, 194686u), uvec3(9750u, 69800u, 7762u), uvec3(130472u, 101362u, 72521u))) : uvec3(_GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), 1u, 1u))) ^ uvec3(1u, 1u, 1u)), _GLF_IDENTITY(((uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))) ^ uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), clamp(((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), ((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), ((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))))) | (uvec3(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, max(0u, 0u))))), 0u, 0u) | uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u)) ^ (gl_NumWorkGroups)), gl_NumWorkGroups), 1u), clamp(uvec4(clamp(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(1u, 1u, _GLF_IDENTITY(1u, 0u + (1u))) ^ uvec3(1u, 1u, 1u)) ^ (gl_NumWorkGroups)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(1u, 1u, _GLF_IDENTITY(1u, 0u + (1u))) ^ uvec3(1u, 1u, 1u)) ^ (gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, (uvec3(1u, 1u, _GLF_IDENTITY(1u, 0u + (1u))) ^ uvec3(1u, 1u, 1u)) ^ (gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, (uvec3(1u, 1u, _GLF_IDENTITY(1u, 0u + (1u))) ^ uvec3(1u, 1u, 1u)) ^ (gl_NumWorkGroups)))), gl_NumWorkGroups), 1u), uvec4(clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) ^ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), ~ (_GLF_IDENTITY(~ ((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)), clamp(~ ((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u)), (~ ((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (_GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u)))) | (~ (0u))))))), ~ (_GLF_IDENTITY((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))))), gl_NumWorkGroups), 1u), uvec4(clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) ^ (gl_NumWorkGroups)), gl_NumWorkGroups), 1u)))))), uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(bitfieldInsert(subgroup_id, write_val, 62369, 87547)) : 1u)), _GLF_IDENTITY(1u, uint(uint(1u))), 1u)), 1u, 1u) ^ uvec3(1u, 1u, 1u)), ((uvec3(1u, 1u, 1u) ^ uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) >> 0u), 1u, 1u))) | uvec3(0u, 0u, 0u)) ^ (gl_NumWorkGroups)), gl_NumWorkGroups), 1u), clamp(uvec4(clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), 1u) ^ uvec3(1u, 1u, 1u)) ^ (gl_NumWorkGroups)), gl_NumWorkGroups), 1u), uvec4(clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) ^ (gl_NumWorkGroups)), gl_NumWorkGroups), 1u), uvec4(clamp(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))), _GLF_IDENTITY(gl_NumWorkGroups, (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) ^ (gl_NumWorkGroups)), gl_NumWorkGroups), 1u))), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY(uvec4(clamp(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), 1u, 1u), (false ? _GLF_FUZZED(clamp(uvec3(28132u, 175075u, 194686u), uvec3(9750u, 69800u, 7762u), uvec3(130472u, 101362u, 72521u))) : uvec3(_GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), 1u, 1u))) ^ uvec3(1u, 1u, 1u)), _GLF_IDENTITY(((uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))) ^ uvec3(1u, 1u, 1u))), (((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))) | (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u)) ^ (gl_NumWorkGroups)), uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), 1u, 1u), (false ? _GLF_FUZZED(clamp(uvec3(28132u, 175075u, 194686u), uvec3(9750u, 69800u, 7762u), uvec3(130472u, 101362u, 72521u))) : uvec3(_GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), 1u, 1u))) ^ uvec3(1u, 1u, 1u)), _GLF_IDENTITY(((uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))) ^ uvec3(1u, 1u, 1u))), (((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))) | (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u)) ^ (gl_NumWorkGroups)), 0u))), gl_NumWorkGroups), 1u), clamp(_GLF_IDENTITY(uvec4(clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (uvec3(1u, 1u, _GLF_IDENTITY(1u, 0u + (1u))) ^ uvec3(_GLF_IDENTITY(1u, 1u * (1u)), 1u, 1u)) ^ (gl_NumWorkGroups)), gl_NumWorkGroups), 1u), (true ? uvec4(clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (uvec3(1u, 1u, _GLF_IDENTITY(1u, 0u + (1u))) ^ uvec3(_GLF_IDENTITY(1u, 1u * (1u)), 1u, 1u)) ^ (gl_NumWorkGroups)), gl_NumWorkGroups), 1u) : _GLF_FUZZED(uvec4(96881u, 140410u, 154189u, 33374u)))), uvec4(clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (uvec3(1u, 1u, 1u) ^ uvec3(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(write_val) : 1u)), _GLF_IDENTITY(1u, (1u) | (1u)))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), ~ (_GLF_IDENTITY(~ ((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)), clamp(~ ((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(~ _GLF_IDENTITY(((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)), (((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))) >> (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u)))), _GLF_IDENTITY((~ ((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))), clamp((~ ((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))), (~ ((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))), (~ ((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))) ^ uvec3(0u, 0u, 0u)), ~ ((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))))))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), 1u), uvec4(clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) ^ (gl_NumWorkGroups)), gl_NumWorkGroups), 1u)))))))))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) ^ (gl_NumWorkGroups)), gl_NumWorkGroups), (clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) ^ (gl_NumWorkGroups)), gl_NumWorkGroups)) + uvec3(0u, 0u, 0u))), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(clamp(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (uvec4(70901u, 61737u, 39630u, 72500u).aaa & uvec3(0u, 0u, 0u)) | (gl_NumWorkGroups)), (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) ^ (gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(145463u, 194542u, 13262u)) : gl_NumWorkGroups))), (clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) ^ (gl_NumWorkGroups)), gl_NumWorkGroups)) + uvec3(0u, 0u, 0u)))))).x, (true ? _GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)), ((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))) / uvec3(1u, 1u, 1u)) ^ (_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups)))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))).x : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) - 0u)))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))))), (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)), 0u))), gl_NumWorkGroups))) | uvec3(0u, 0u, 0u)))), gl_NumWorkGroups)).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 1u))), _GLF_IDENTITY(gl_NumWorkGroups, (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) ^ (gl_NumWorkGroups)), gl_NumWorkGroups)).x, (true ? _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 1u))), _GLF_IDENTITY(gl_NumWorkGroups, (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) ^ (gl_NumWorkGroups)), gl_NumWorkGroups)).x : _GLF_FUZZED(subgroup_local_id))) : _GLF_FUZZED(subgroup_size))))), min((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))))), (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)), 0u))), gl_NumWorkGroups))) | uvec3(0u, 0u, 0u)))), gl_NumWorkGroups)).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 1u))), _GLF_IDENTITY(gl_NumWorkGroups, (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) ^ (gl_NumWorkGroups)), gl_NumWorkGroups)).x, (true ? _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 1u))), _GLF_IDENTITY(gl_NumWorkGroups, (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) ^ (gl_NumWorkGroups)), gl_NumWorkGroups)).x : _GLF_FUZZED(subgroup_local_id))) : _GLF_FUZZED(subgroup_size))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))))), (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)), 0u))), gl_NumWorkGroups))) | uvec3(0u, 0u, 0u)))), gl_NumWorkGroups)).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 1u))), _GLF_IDENTITY(gl_NumWorkGroups, (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) ^ (gl_NumWorkGroups)), gl_NumWorkGroups)).x, (true ? _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 1u))), _GLF_IDENTITY(gl_NumWorkGroups, (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) ^ (gl_NumWorkGroups)), gl_NumWorkGroups)).x : _GLF_FUZZED(subgroup_local_id))) : _GLF_FUZZED(subgroup_size)))))))), _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(176569u, 88292u, 147796u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_FUZZED(uvec3(176569u, 88292u, 147796u)), (_GLF_FUZZED(uvec3(176569u, 88292u, 147796u))) + uvec3(0u, 0u, 0u)), (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), (true ? uvec4(_GLF_IDENTITY(_GLF_FUZZED(uvec3(176569u, 88292u, 147796u)), (_GLF_FUZZED(uvec3(176569u, 88292u, 147796u))) + uvec3(0u, 0u, 0u)), (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) : _GLF_FUZZED(uvec4(191993u, 111871u, 157146u, 159047u))))), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_FUZZED(uvec3(176569u, 88292u, 147796u)), (_GLF_FUZZED(uvec3(176569u, 88292u, 147796u))) + uvec3(0u, 0u, 0u)), (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), (true ? uvec4(_GLF_IDENTITY(_GLF_FUZZED(uvec3(176569u, 88292u, 147796u)), (_GLF_FUZZED(uvec3(176569u, 88292u, 147796u))) + uvec3(0u, 0u, 0u)), (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) : _GLF_FUZZED(uvec4(191993u, 111871u, 157146u, 159047u)))))))) : _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), (false ? _GLF_FUZZED(uvec3(176569u, 88292u, 147796u)) : _GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (~ (gl_NumWorkGroups)))))) | (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(uvec3(176569u, 88292u, 147796u)) : _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0)), 0.0 + (float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0))))), injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))) / 1.0), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (gl_NumWorkGroups)))), _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(uvec3(1u, 1u, 1u) ^ _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))) | (uvec3(_GLF_IDENTITY(1u, (1u) - 0u), 1u, 1u))), (false ? _GLF_FUZZED(uvec3(97085u, 99950u, 5161u)) : _GLF_IDENTITY(uvec3(1u, 1u, 1u) ^ _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))) | (uvec3(_GLF_IDENTITY(1u, (1u) - 0u), 1u, 1u))), uvec3(uvec3(uvec3(1u, 1u, 1u) ^ _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))) | (uvec3(_GLF_IDENTITY(1u, (1u) - 0u), 1u, 1u))))))))) ^ (gl_NumWorkGroups)), gl_NumWorkGroups)).x));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).y)))))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) / 1u, ((subgroup_id * subgroup_size) / _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (1u)), clamp(1u, 1u, 1u))) / 1u)) + _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id)));
 atomicStore(write_val, uint(virtual_gid), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(62177) : _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, 0 + (0)))))) & 33884), ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(62177) : _GLF_IDENTITY(0, min(0, 0)))) & 33884)) + 0) | (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) | (4)))), 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_val = atomicLoad(write_val, 4, _GLF_IDENTITY(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec4(64, _GLF_IDENTITY(0, min(0, 0)), 0, 0), _GLF_IDENTITY((ivec4(64, 0, 0, 0)) | ivec4(0, 0, 0, _GLF_IDENTITY(0, max(0, 0))), (_GLF_IDENTITY((ivec4(64, 0, 0, 0)) | ivec4(0, 0, 0, 0), ivec4(0, 0, 0, 0) | (_GLF_IDENTITY((ivec4(64, 0, 0, 0)) | ivec4(0, 0, 0, 0), max((ivec4(64, 0, 0, 0)) | ivec4(0, 0, 0, 0), (ivec4(64, 0, 0, 0)) | ivec4(0, 0, 0, 0)))))) - ivec4(0, 0, 0, 0))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, (64) << (0 << _GLF_IDENTITY(int(7), int(7)))))), min(64, _GLF_IDENTITY(64, _GLF_IDENTITY((64), min((64), (64))) | (64)))), 64, 64), ~ (~ (clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, (64) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), _GLF_IDENTITY(int(7), (int(7)) ^ 0)))))), min(64, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) | _GLF_IDENTITY((64), int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((64), (_GLF_IDENTITY((64), int(int((64))))) | ((64)))))), (_GLF_IDENTITY(64, (64) | (64))) | (_GLF_IDENTITY(64, (64) | (64)))))), 64, 64))))), 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))) && true, _GLF_IDENTITY(((_GLF_IDENTITY(false, false || (false))) && true), (_GLF_IDENTITY(((_GLF_IDENTITY(false, false || (false))) && true), bool(bvec2(((_GLF_IDENTITY(false, false || (false))) && true), false)))) || false) && true))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)), true && (bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))))))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false))
    {
     barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) - _GLF_IDENTITY(0u, (0u) << 0u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) && true))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, sqrt(1.0), 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), (false) || false), true, false))), ! _GLF_IDENTITY((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (false)))))) && true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))))), bool(bvec3(false || (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))))), true, true))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true))), true && (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))))))), bool(bvec3(false || (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))))), true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))))), (! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))))), bool(bool(! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))))))))))), (false) && true))), true && (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true))), (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))) || false)))), bool(bvec3(false || (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))))), true, true)))))) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))), true, true, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
}
