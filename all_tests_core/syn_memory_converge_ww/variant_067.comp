#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = ((0 >> _GLF_IDENTITY(int(1), int(1))) & 76868); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)), max((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), 0 + (_GLF_IDENTITY(int(6), int(6))))) >> _GLF_IDENTITY(int(6), int(6)))))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = ((0 ^ 1) & (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     barrier();
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec4(true && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(true && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), bool(bvec2(bool(bvec4(true && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), true))))))))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, true)), ! (! (bool(bvec4(true, true, false, true))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.0)), float(1.0), bool(true)))))).y)), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, 1.0))).y)), true), bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, 1.0))).y)), true)))), true)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.0)), float(1.0), bool(true)))))).y)), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, 1.0))).y)), true), bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, 1.0))).y)), true)))), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.0)), float(1.0), bool(true)))))).y)), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, 1.0))).y)), true), bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, 1.0))).y)), true)))), true))))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), (injectionSwitch) / vec2(1.0, 1.0)).y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(5.3) : _GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x2(12.24, -877.156, -90.69, -12.01, 3717.9007, 538.966, -3771.1296, -7.5)) : mat4x2(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), injectionSwitch.x) : _GLF_FUZZED(9.7)))))))); _injected_loop_counter ++)
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false || (true), true && (false || (true))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false || (true), true && (false || (true))), true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) * mat2(1.0), clamp((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), mat2(1.0) * ((injectionSwitch) + vec2(0.0, 0.0))))) * mat2(1.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) * mat2(1.0), min((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(291.441), _GLF_FUZZED(-4.3)), bvec2(false, false))))), (false ? _GLF_FUZZED(vec2(15.31, -6.6)) : _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(291.441), _GLF_FUZZED(-4.3)), bvec2(false, false)))))))) + vec2(0.0, 0.0))) * mat2(1.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))) * mat2(1.0)))).x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))) && true)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))) && true)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, false, false, true))))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, false, false, true)))))))) && true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, sqrt(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(sin(0.0), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(sin(0.0), 1.0, 0.0))), 1.0)), (false ? _GLF_FUZZED(56.62) : float(mat3x2(injectionSwitch.y, 1.0, sqrt(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(sin(0.0), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(sin(0.0), 1.0, 0.0))), 1.0))))))))) && true))
        barrier();
      }
    }
   else
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_WRAPPED_LOOP(false)))));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, abs(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), max(round(length(normalize(cos(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), min(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))))), 1.0, 1.0, 1.0), transpose(transpose(mat4x2(injectionSwitch.x, abs(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))))), 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))) * (0.0)))), 0.0))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-6.0) : _GLF_IDENTITY(_GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))))))), min(round(length(_GLF_IDENTITY(normalize(cos(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0))), clamp(_GLF_IDENTITY(normalize(cos(vec3(0.0, 0.0, 0.0))), vec3(mat3x4(normalize(cos(vec3(0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))), normalize(cos(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(normalize(cos(vec3(0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(vec3(5969.9364, 49.61, -0.1)) : normalize(cos(vec3(0.0, 0.0, 0.0))))), min(normalize(cos(vec3(0.0, 0.0, 0.0))), normalize(cos(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), min(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), clamp(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))), vec3(0.0, 0.0, 0.0))))))))))), round(length(normalize(_GLF_IDENTITY(_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), mix(vec3((cos(vec3(0.0, 0.0, 0.0)))[0], (cos(vec3(0.0, 0.0, 0.0)))[1], _GLF_FUZZED(5.7)), vec3(_GLF_FUZZED(1574.3239), _GLF_FUZZED(9.3), (cos(vec3(0.0, 0.0, 0.0)))[2]), bvec3(false, false, true))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), mix(vec3((cos(vec3(0.0, 0.0, 0.0)))[0], (cos(vec3(0.0, 0.0, 0.0)))[1], _GLF_FUZZED(5.7)), vec3(_GLF_FUZZED(1574.3239), _GLF_FUZZED(9.3), (cos(vec3(0.0, 0.0, 0.0)))[2]), bvec3(false, false, true)))), (vec3(_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), mix(vec3((cos(vec3(0.0, 0.0, 0.0)))[0], (cos(vec3(0.0, 0.0, 0.0)))[1], _GLF_FUZZED(5.7)), vec3(_GLF_FUZZED(1574.3239), _GLF_FUZZED(9.3), (cos(vec3(0.0, 0.0, 0.0)))[2]), bvec3(false, false, true))))) * vec3(1.0, 1.0, 1.0))), min(vec3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), mix(vec3((cos(vec3(0.0, 0.0, 0.0)))[0], (cos(vec3(0.0, 0.0, 0.0)))[1], _GLF_FUZZED(5.7)), vec3(_GLF_FUZZED(1574.3239), _GLF_FUZZED(9.3), (cos(vec3(0.0, 0.0, 0.0)))[2]), bvec3(false, false, true)))), (vec3(_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), mix(vec3((cos(vec3(0.0, 0.0, 0.0)))[0], (cos(vec3(0.0, 0.0, 0.0)))[1], _GLF_FUZZED(5.7)), vec3(_GLF_FUZZED(1574.3239), _GLF_FUZZED(9.3), (cos(vec3(0.0, 0.0, 0.0)))[2]), bvec3(false, false, true))))) * vec3(1.0, 1.0, 1.0))), vec3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), mix(vec3((cos(vec3(0.0, 0.0, 0.0)))[0], (cos(vec3(0.0, 0.0, 0.0)))[1], _GLF_FUZZED(5.7)), vec3(_GLF_FUZZED(1574.3239), _GLF_FUZZED(9.3), (cos(vec3(0.0, 0.0, 0.0)))[2]), bvec3(false, false, true)))), (vec3(_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), mix(vec3((cos(vec3(0.0, 0.0, 0.0)))[0], (cos(vec3(0.0, 0.0, 0.0)))[1], _GLF_FUZZED(5.7)), vec3(_GLF_FUZZED(1574.3239), _GLF_FUZZED(9.3), (cos(vec3(0.0, 0.0, 0.0)))[2]), bvec3(false, false, true))))) * vec3(1.0, 1.0, 1.0))))))))))), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(round(length(normalize(cos(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (vec3(0.0, 0.0, 0.0)) * mat3(1.0)))))), min(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), round(length(normalize(cos(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (vec3(0.0, 0.0, 0.0)) * cos(vec3(0.0, 0.0, 0.0))))))))), 0.0), mix(vec2((vec2(_GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(cos(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(50.29)), float(0.0), bool(true)))), float(_GLF_FUZZED(4.7)), bool(false))), 0.0, 0.0)), 0.0, 0.0)), min(cos(vec3(0.0, 0.0, 0.0)), cos(vec3(0.0, 0.0, 0.0))))))), min(round(length(normalize(cos(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.9)), float(1.0), bool(true)))), 0.0))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))))), 0.0))[0], (_GLF_IDENTITY(vec2(_GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), min(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), round(length(normalize(cos(vec3(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0)), mat4(1.0) * (mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0)))))), 0.0))))))), 0.0), _GLF_IDENTITY((vec2(_GLF_IDENTITY(round(length(normalize(cos(vec3(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, abs(0.0), 1.0))), 0.0, 0.0))))), _GLF_IDENTITY(min(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0)))))), (false ? _GLF_FUZZED(ceil(114.753)) : min(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))))))), 0.0)), (true ? (vec2(_GLF_IDENTITY(round(length(normalize(cos(vec3(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, abs(0.0), 1.0))), 0.0, 0.0))))), _GLF_IDENTITY(min(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0)))))), (false ? _GLF_FUZZED(ceil(114.753)) : min(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))))))), 0.0)) : _GLF_FUZZED(injectionSwitch))) * mat2(1.0)))[1]), vec2(_GLF_FUZZED(8.0), _GLF_FUZZED(2851.1867)), bvec2(false, false))))), mix(float(_GLF_FUZZED(-98.82)), float(false ? _GLF_FUZZED(-6.0) : _GLF_IDENTITY(_GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), min(round(length(_GLF_IDENTITY(normalize(_GLF_IDENTITY(cos(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), min(cos(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), cos(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))))), clamp(_GLF_IDENTITY(normalize(cos(vec3(0.0, 0.0, 0.0))), vec3(mat3x4(normalize(cos(vec3(0.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), normalize(cos(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(normalize(cos(vec3(0.0, 0.0, 0.0))), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec3(5969.9364, 49.61, -0.1)), mat3(1.0) * (_GLF_FUZZED(vec3(5969.9364, 49.61, -0.1)))) : normalize(cos(vec3(0.0, 0.0, 0.0))))), min(normalize(cos(vec3(0.0, 0.0, 0.0))), normalize(cos(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), min(vec3(0.0, 0.0, 0.0), _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3((vec3(0.0, 0.0, 0.0))[0], _GLF_FUZZED(5.5), (vec3(0.0, 0.0, 0.0))[2]), vec3(_GLF_FUZZED(6.8), (vec3(0.0, 0.0, 0.0))[1], _GLF_FUZZED(1.7)), bvec3(false, true, false))))))))))))), round(length(normalize(_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), mix(vec3((cos(vec3(0.0, 0.0, 0.0)))[0], (cos(vec3(0.0, 0.0, 0.0)))[1], _GLF_FUZZED(5.7)), vec3(_GLF_FUZZED(1574.3239), _GLF_FUZZED(9.3), (cos(vec3(0.0, 0.0, 0.0)))[2]), bvec3(false, false, true)))))))), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), min(round(length(normalize(cos(vec3(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8.7) : 0.0)), 0.0))))), round(_GLF_IDENTITY(length(normalize(cos(vec3(0.0, 0.0, 0.0)))), (length(_GLF_IDENTITY(normalize(cos(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(mat3(1.0) * (normalize(cos(vec3(0.0, 0.0, 0.0)))), clamp(mat3(1.0) * (normalize(cos(vec3(0.0, 0.0, 0.0)))), mat3(1.0) * (normalize(cos(vec3(0.0, 0.0, 0.0)))), mat3(1.0) * (normalize(cos(vec3(0.0, 0.0, 0.0))))))))) / 1.0)))), 0.0), mix(vec2((vec2(_GLF_IDENTITY(round(_GLF_IDENTITY(length(normalize(_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), min(cos(vec3(0.0, 0.0, 0.0)), cos(vec3(0.0, 0.0, 0.0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((230.284 - -37.08)) : length(normalize(_GLF_IDENTITY(_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), min(cos(vec3(0.0, 0.0, 0.0)), cos(vec3(0.0, 0.0, 0.0)))), vec3(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), min(cos(vec3(0.0, 0.0, 0.0)), cos(vec3(0.0, 0.0, 0.0)))), mix(vec3(_GLF_FUZZED(-9.9), _GLF_FUZZED(-0.7), _GLF_FUZZED((-7270.8290))), vec3((_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), min(cos(vec3(0.0, 0.0, 0.0)), cos(vec3(0.0, 0.0, 0.0)))))[0], (_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), min(cos(vec3(0.0, 0.0, 0.0)), cos(vec3(0.0, 0.0, 0.0)))))[1], (_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), min(cos(vec3(0.0, 0.0, 0.0)), cos(vec3(0.0, 0.0, 0.0)))))[2]), bvec3(true, true, true))), 0.0, 1.0, 0.0, length(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 1.0)))))))), min(round(_GLF_IDENTITY(length(normalize(cos(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)))), max(length(normalize(cos(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)))), length(normalize(cos(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0))))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))))), 0.0))[0], _GLF_IDENTITY((_GLF_IDENTITY(vec2(_GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), min(round(length(normalize(cos(vec3(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0))))), round(length(normalize(cos(vec3(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0)), mat4(1.0) * (mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.1)), bool(false)))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((vec3(-0.2, 8.8, 5251.0876).r))), bool(false))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0)))))), 0.0))))))), 0.0), (vec2(_GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), min(_GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), max(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))))), 0.0)) * mat2(1.0))), mix(vec2(_GLF_FUZZED(vec2(-5.7, 4.5).s), _GLF_FUZZED(-492.964)), vec2(((_GLF_IDENTITY(vec2(_GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), min(round(length(normalize(cos(vec3(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0))))), round(length(normalize(cos(vec3(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0)), mat4(1.0) * (mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.1)), bool(false)))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((vec3(-0.2, 8.8, 5251.0876).r))), bool(false))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0)))))), 0.0))))))), 0.0), (vec2(_GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), min(_GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), max(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))))), 0.0)) * mat2(1.0))))[0], ((_GLF_IDENTITY(vec2(_GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), min(round(length(normalize(cos(vec3(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0))))), round(length(normalize(cos(vec3(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0)), mat4(1.0) * (mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.1)), bool(false)))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((vec3(-0.2, 8.8, 5251.0876).r))), bool(false))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0)))))), 0.0))))))), 0.0), (vec2(_GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), min(_GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), max(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))))), 0.0)) * mat2(1.0))))[1]), bvec2(true, true)))[1]), vec2(_GLF_FUZZED(8.0), _GLF_FUZZED(2851.1867)), bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), min(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, abs(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), max(round(length(normalize(cos(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), min(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))))), 1.0, 1.0, 1.0), transpose(transpose(mat4x2(injectionSwitch.x, abs(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))))), 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))) * (0.0)))), 0.0))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-6.0) : _GLF_IDENTITY(_GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))))))), min(round(length(_GLF_IDENTITY(normalize(cos(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0))), clamp(_GLF_IDENTITY(normalize(cos(vec3(0.0, 0.0, 0.0))), vec3(mat3x4(normalize(cos(vec3(0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))), normalize(cos(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(normalize(cos(vec3(0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(vec3(5969.9364, 49.61, -0.1)) : normalize(cos(vec3(0.0, 0.0, 0.0))))), min(normalize(cos(vec3(0.0, 0.0, 0.0))), normalize(cos(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), min(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), clamp(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))), vec3(0.0, 0.0, 0.0))))))))))), round(length(normalize(_GLF_IDENTITY(_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), mix(vec3((cos(vec3(0.0, 0.0, 0.0)))[0], (cos(vec3(0.0, 0.0, 0.0)))[1], _GLF_FUZZED(5.7)), vec3(_GLF_FUZZED(1574.3239), _GLF_FUZZED(9.3), (cos(vec3(0.0, 0.0, 0.0)))[2]), bvec3(false, false, true))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), mix(vec3((cos(vec3(0.0, 0.0, 0.0)))[0], (cos(vec3(0.0, 0.0, 0.0)))[1], _GLF_FUZZED(5.7)), vec3(_GLF_FUZZED(1574.3239), _GLF_FUZZED(9.3), (cos(vec3(0.0, 0.0, 0.0)))[2]), bvec3(false, false, true)))), (vec3(_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), mix(vec3((cos(vec3(0.0, 0.0, 0.0)))[0], (cos(vec3(0.0, 0.0, 0.0)))[1], _GLF_FUZZED(5.7)), vec3(_GLF_FUZZED(1574.3239), _GLF_FUZZED(9.3), (cos(vec3(0.0, 0.0, 0.0)))[2]), bvec3(false, false, true))))) * vec3(1.0, 1.0, 1.0))), min(vec3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), mix(vec3((cos(vec3(0.0, 0.0, 0.0)))[0], (cos(vec3(0.0, 0.0, 0.0)))[1], _GLF_FUZZED(5.7)), vec3(_GLF_FUZZED(1574.3239), _GLF_FUZZED(9.3), (cos(vec3(0.0, 0.0, 0.0)))[2]), bvec3(false, false, true)))), (vec3(_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), mix(vec3((cos(vec3(0.0, 0.0, 0.0)))[0], (cos(vec3(0.0, 0.0, 0.0)))[1], _GLF_FUZZED(5.7)), vec3(_GLF_FUZZED(1574.3239), _GLF_FUZZED(9.3), (cos(vec3(0.0, 0.0, 0.0)))[2]), bvec3(false, false, true))))) * vec3(1.0, 1.0, 1.0))), vec3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), mix(vec3((cos(vec3(0.0, 0.0, 0.0)))[0], (cos(vec3(0.0, 0.0, 0.0)))[1], _GLF_FUZZED(5.7)), vec3(_GLF_FUZZED(1574.3239), _GLF_FUZZED(9.3), (cos(vec3(0.0, 0.0, 0.0)))[2]), bvec3(false, false, true)))), (vec3(_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), mix(vec3((cos(vec3(0.0, 0.0, 0.0)))[0], (cos(vec3(0.0, 0.0, 0.0)))[1], _GLF_FUZZED(5.7)), vec3(_GLF_FUZZED(1574.3239), _GLF_FUZZED(9.3), (cos(vec3(0.0, 0.0, 0.0)))[2]), bvec3(false, false, true))))) * vec3(1.0, 1.0, 1.0))))))))))), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(round(length(normalize(cos(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (vec3(0.0, 0.0, 0.0)) * mat3(1.0)))))), min(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), round(length(normalize(cos(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (vec3(0.0, 0.0, 0.0)) * cos(vec3(0.0, 0.0, 0.0))))))))), 0.0), mix(vec2((vec2(_GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(cos(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(50.29)), float(0.0), bool(true)))), float(_GLF_FUZZED(4.7)), bool(false))), 0.0, 0.0)), 0.0, 0.0)), min(cos(vec3(0.0, 0.0, 0.0)), cos(vec3(0.0, 0.0, 0.0))))))), min(round(length(normalize(cos(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.9)), float(1.0), bool(true)))), 0.0))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))))), 0.0))[0], (_GLF_IDENTITY(vec2(_GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), min(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), round(length(normalize(cos(vec3(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0)), mat4(1.0) * (mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0)))))), 0.0))))))), 0.0), _GLF_IDENTITY((vec2(_GLF_IDENTITY(round(length(normalize(cos(vec3(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, abs(0.0), 1.0))), 0.0, 0.0))))), _GLF_IDENTITY(min(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0)))))), (false ? _GLF_FUZZED(ceil(114.753)) : min(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))))))), 0.0)), (true ? (vec2(_GLF_IDENTITY(round(length(normalize(cos(vec3(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, abs(0.0), 1.0))), 0.0, 0.0))))), _GLF_IDENTITY(min(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0)))))), (false ? _GLF_FUZZED(ceil(114.753)) : min(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))))))), 0.0)) : _GLF_FUZZED(injectionSwitch))) * mat2(1.0)))[1]), vec2(_GLF_FUZZED(8.0), _GLF_FUZZED(2851.1867)), bvec2(false, false))))), mix(float(_GLF_FUZZED(-98.82)), float(false ? _GLF_FUZZED(-6.0) : _GLF_IDENTITY(_GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), min(round(length(_GLF_IDENTITY(normalize(_GLF_IDENTITY(cos(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), min(cos(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), cos(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))))), clamp(_GLF_IDENTITY(normalize(cos(vec3(0.0, 0.0, 0.0))), vec3(mat3x4(normalize(cos(vec3(0.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), normalize(cos(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(normalize(cos(vec3(0.0, 0.0, 0.0))), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec3(5969.9364, 49.61, -0.1)), mat3(1.0) * (_GLF_FUZZED(vec3(5969.9364, 49.61, -0.1)))) : normalize(cos(vec3(0.0, 0.0, 0.0))))), min(normalize(cos(vec3(0.0, 0.0, 0.0))), normalize(cos(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), min(vec3(0.0, 0.0, 0.0), _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3((vec3(0.0, 0.0, 0.0))[0], _GLF_FUZZED(5.5), (vec3(0.0, 0.0, 0.0))[2]), vec3(_GLF_FUZZED(6.8), (vec3(0.0, 0.0, 0.0))[1], _GLF_FUZZED(1.7)), bvec3(false, true, false))))))))))))), round(length(normalize(_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), mix(vec3((cos(vec3(0.0, 0.0, 0.0)))[0], (cos(vec3(0.0, 0.0, 0.0)))[1], _GLF_FUZZED(5.7)), vec3(_GLF_FUZZED(1574.3239), _GLF_FUZZED(9.3), (cos(vec3(0.0, 0.0, 0.0)))[2]), bvec3(false, false, true)))))))), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), min(round(length(normalize(cos(vec3(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8.7) : 0.0)), 0.0))))), round(_GLF_IDENTITY(length(normalize(cos(vec3(0.0, 0.0, 0.0)))), (length(_GLF_IDENTITY(normalize(cos(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(mat3(1.0) * (normalize(cos(vec3(0.0, 0.0, 0.0)))), clamp(mat3(1.0) * (normalize(cos(vec3(0.0, 0.0, 0.0)))), mat3(1.0) * (normalize(cos(vec3(0.0, 0.0, 0.0)))), mat3(1.0) * (normalize(cos(vec3(0.0, 0.0, 0.0))))))))) / 1.0)))), 0.0), mix(vec2((vec2(_GLF_IDENTITY(round(_GLF_IDENTITY(length(normalize(_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), min(cos(vec3(0.0, 0.0, 0.0)), cos(vec3(0.0, 0.0, 0.0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((230.284 - -37.08)) : length(normalize(_GLF_IDENTITY(_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), min(cos(vec3(0.0, 0.0, 0.0)), cos(vec3(0.0, 0.0, 0.0)))), vec3(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), min(cos(vec3(0.0, 0.0, 0.0)), cos(vec3(0.0, 0.0, 0.0)))), mix(vec3(_GLF_FUZZED(-9.9), _GLF_FUZZED(-0.7), _GLF_FUZZED((-7270.8290))), vec3((_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), min(cos(vec3(0.0, 0.0, 0.0)), cos(vec3(0.0, 0.0, 0.0)))))[0], (_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), min(cos(vec3(0.0, 0.0, 0.0)), cos(vec3(0.0, 0.0, 0.0)))))[1], (_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), min(cos(vec3(0.0, 0.0, 0.0)), cos(vec3(0.0, 0.0, 0.0)))))[2]), bvec3(true, true, true))), 0.0, 1.0, 0.0, length(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 1.0)))))))), min(round(_GLF_IDENTITY(length(normalize(cos(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)))), max(length(normalize(cos(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)))), length(normalize(cos(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0))))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))))), 0.0))[0], _GLF_IDENTITY((_GLF_IDENTITY(vec2(_GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), min(round(length(normalize(cos(vec3(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0))))), round(length(normalize(cos(vec3(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0)), mat4(1.0) * (mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.1)), bool(false)))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((vec3(-0.2, 8.8, 5251.0876).r))), bool(false))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0)))))), 0.0))))))), 0.0), (vec2(_GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), min(_GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), max(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))))), 0.0)) * mat2(1.0))), mix(vec2(_GLF_FUZZED(vec2(-5.7, 4.5).s), _GLF_FUZZED(-492.964)), vec2(((_GLF_IDENTITY(vec2(_GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), min(round(length(normalize(cos(vec3(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0))))), round(length(normalize(cos(vec3(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0)), mat4(1.0) * (mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.1)), bool(false)))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((vec3(-0.2, 8.8, 5251.0876).r))), bool(false))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0)))))), 0.0))))))), 0.0), (vec2(_GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), min(_GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), max(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))))), 0.0)) * mat2(1.0))))[0], ((_GLF_IDENTITY(vec2(_GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), min(round(length(normalize(cos(vec3(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0))))), round(length(normalize(cos(vec3(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0)), mat4(1.0) * (mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.1)), bool(false)))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((vec3(-0.2, 8.8, 5251.0876).r))), bool(false))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0)))))), 0.0))))))), 0.0), (vec2(_GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), min(_GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), max(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))))), 0.0)) * mat2(1.0))))[1]), bvec2(true, true)))[1]), vec2(_GLF_FUZZED(8.0), _GLF_FUZZED(2851.1867)), bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, abs(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), max(round(length(normalize(cos(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), min(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))))), 1.0, 1.0, 1.0), transpose(transpose(mat4x2(injectionSwitch.x, abs(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))))), 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))) * (0.0)))), 0.0))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-6.0) : _GLF_IDENTITY(_GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))))))), min(round(length(_GLF_IDENTITY(normalize(cos(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0))), clamp(_GLF_IDENTITY(normalize(cos(vec3(0.0, 0.0, 0.0))), vec3(mat3x4(normalize(cos(vec3(0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))), normalize(cos(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(normalize(cos(vec3(0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(vec3(5969.9364, 49.61, -0.1)) : normalize(cos(vec3(0.0, 0.0, 0.0))))), min(normalize(cos(vec3(0.0, 0.0, 0.0))), normalize(cos(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), min(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), clamp(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))), vec3(0.0, 0.0, 0.0))))))))))), round(length(normalize(_GLF_IDENTITY(_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), mix(vec3((cos(vec3(0.0, 0.0, 0.0)))[0], (cos(vec3(0.0, 0.0, 0.0)))[1], _GLF_FUZZED(5.7)), vec3(_GLF_FUZZED(1574.3239), _GLF_FUZZED(9.3), (cos(vec3(0.0, 0.0, 0.0)))[2]), bvec3(false, false, true))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), mix(vec3((cos(vec3(0.0, 0.0, 0.0)))[0], (cos(vec3(0.0, 0.0, 0.0)))[1], _GLF_FUZZED(5.7)), vec3(_GLF_FUZZED(1574.3239), _GLF_FUZZED(9.3), (cos(vec3(0.0, 0.0, 0.0)))[2]), bvec3(false, false, true)))), (vec3(_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), mix(vec3((cos(vec3(0.0, 0.0, 0.0)))[0], (cos(vec3(0.0, 0.0, 0.0)))[1], _GLF_FUZZED(5.7)), vec3(_GLF_FUZZED(1574.3239), _GLF_FUZZED(9.3), (cos(vec3(0.0, 0.0, 0.0)))[2]), bvec3(false, false, true))))) * vec3(1.0, 1.0, 1.0))), min(vec3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), mix(vec3((cos(vec3(0.0, 0.0, 0.0)))[0], (cos(vec3(0.0, 0.0, 0.0)))[1], _GLF_FUZZED(5.7)), vec3(_GLF_FUZZED(1574.3239), _GLF_FUZZED(9.3), (cos(vec3(0.0, 0.0, 0.0)))[2]), bvec3(false, false, true)))), (vec3(_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), mix(vec3((cos(vec3(0.0, 0.0, 0.0)))[0], (cos(vec3(0.0, 0.0, 0.0)))[1], _GLF_FUZZED(5.7)), vec3(_GLF_FUZZED(1574.3239), _GLF_FUZZED(9.3), (cos(vec3(0.0, 0.0, 0.0)))[2]), bvec3(false, false, true))))) * vec3(1.0, 1.0, 1.0))), vec3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), mix(vec3((cos(vec3(0.0, 0.0, 0.0)))[0], (cos(vec3(0.0, 0.0, 0.0)))[1], _GLF_FUZZED(5.7)), vec3(_GLF_FUZZED(1574.3239), _GLF_FUZZED(9.3), (cos(vec3(0.0, 0.0, 0.0)))[2]), bvec3(false, false, true)))), (vec3(_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), mix(vec3((cos(vec3(0.0, 0.0, 0.0)))[0], (cos(vec3(0.0, 0.0, 0.0)))[1], _GLF_FUZZED(5.7)), vec3(_GLF_FUZZED(1574.3239), _GLF_FUZZED(9.3), (cos(vec3(0.0, 0.0, 0.0)))[2]), bvec3(false, false, true))))) * vec3(1.0, 1.0, 1.0))))))))))), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(round(length(normalize(cos(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (vec3(0.0, 0.0, 0.0)) * mat3(1.0)))))), min(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), round(length(normalize(cos(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (vec3(0.0, 0.0, 0.0)) * cos(vec3(0.0, 0.0, 0.0))))))))), 0.0), mix(vec2((vec2(_GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(cos(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(50.29)), float(0.0), bool(true)))), float(_GLF_FUZZED(4.7)), bool(false))), 0.0, 0.0)), 0.0, 0.0)), min(cos(vec3(0.0, 0.0, 0.0)), cos(vec3(0.0, 0.0, 0.0))))))), min(round(length(normalize(cos(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.9)), float(1.0), bool(true)))), 0.0))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))))), 0.0))[0], (_GLF_IDENTITY(vec2(_GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), min(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), round(length(normalize(cos(vec3(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0)), mat4(1.0) * (mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0)))))), 0.0))))))), 0.0), _GLF_IDENTITY((vec2(_GLF_IDENTITY(round(length(normalize(cos(vec3(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, abs(0.0), 1.0))), 0.0, 0.0))))), _GLF_IDENTITY(min(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0)))))), (false ? _GLF_FUZZED(ceil(114.753)) : min(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))))))), 0.0)), (true ? (vec2(_GLF_IDENTITY(round(length(normalize(cos(vec3(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, abs(0.0), 1.0))), 0.0, 0.0))))), _GLF_IDENTITY(min(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0)))))), (false ? _GLF_FUZZED(ceil(114.753)) : min(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))))))), 0.0)) : _GLF_FUZZED(injectionSwitch))) * mat2(1.0)))[1]), vec2(_GLF_FUZZED(8.0), _GLF_FUZZED(2851.1867)), bvec2(false, false))))), mix(float(_GLF_FUZZED(-98.82)), float(false ? _GLF_FUZZED(-6.0) : _GLF_IDENTITY(_GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), min(round(length(_GLF_IDENTITY(normalize(_GLF_IDENTITY(cos(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), min(cos(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), cos(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))))), clamp(_GLF_IDENTITY(normalize(cos(vec3(0.0, 0.0, 0.0))), vec3(mat3x4(normalize(cos(vec3(0.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), normalize(cos(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(normalize(cos(vec3(0.0, 0.0, 0.0))), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec3(5969.9364, 49.61, -0.1)), mat3(1.0) * (_GLF_FUZZED(vec3(5969.9364, 49.61, -0.1)))) : normalize(cos(vec3(0.0, 0.0, 0.0))))), min(normalize(cos(vec3(0.0, 0.0, 0.0))), normalize(cos(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), min(vec3(0.0, 0.0, 0.0), _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3((vec3(0.0, 0.0, 0.0))[0], _GLF_FUZZED(5.5), (vec3(0.0, 0.0, 0.0))[2]), vec3(_GLF_FUZZED(6.8), (vec3(0.0, 0.0, 0.0))[1], _GLF_FUZZED(1.7)), bvec3(false, true, false))))))))))))), round(length(normalize(_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), mix(vec3((cos(vec3(0.0, 0.0, 0.0)))[0], (cos(vec3(0.0, 0.0, 0.0)))[1], _GLF_FUZZED(5.7)), vec3(_GLF_FUZZED(1574.3239), _GLF_FUZZED(9.3), (cos(vec3(0.0, 0.0, 0.0)))[2]), bvec3(false, false, true)))))))), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), min(round(length(normalize(cos(vec3(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8.7) : 0.0)), 0.0))))), round(_GLF_IDENTITY(length(normalize(cos(vec3(0.0, 0.0, 0.0)))), (length(_GLF_IDENTITY(normalize(cos(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(mat3(1.0) * (normalize(cos(vec3(0.0, 0.0, 0.0)))), clamp(mat3(1.0) * (normalize(cos(vec3(0.0, 0.0, 0.0)))), mat3(1.0) * (normalize(cos(vec3(0.0, 0.0, 0.0)))), mat3(1.0) * (normalize(cos(vec3(0.0, 0.0, 0.0))))))))) / 1.0)))), 0.0), mix(vec2((vec2(_GLF_IDENTITY(round(_GLF_IDENTITY(length(normalize(_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), min(cos(vec3(0.0, 0.0, 0.0)), cos(vec3(0.0, 0.0, 0.0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((230.284 - -37.08)) : length(normalize(_GLF_IDENTITY(_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), min(cos(vec3(0.0, 0.0, 0.0)), cos(vec3(0.0, 0.0, 0.0)))), vec3(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), min(cos(vec3(0.0, 0.0, 0.0)), cos(vec3(0.0, 0.0, 0.0)))), mix(vec3(_GLF_FUZZED(-9.9), _GLF_FUZZED(-0.7), _GLF_FUZZED((-7270.8290))), vec3((_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), min(cos(vec3(0.0, 0.0, 0.0)), cos(vec3(0.0, 0.0, 0.0)))))[0], (_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), min(cos(vec3(0.0, 0.0, 0.0)), cos(vec3(0.0, 0.0, 0.0)))))[1], (_GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), min(cos(vec3(0.0, 0.0, 0.0)), cos(vec3(0.0, 0.0, 0.0)))))[2]), bvec3(true, true, true))), 0.0, 1.0, 0.0, length(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 1.0)))))))), min(round(_GLF_IDENTITY(length(normalize(cos(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)))), max(length(normalize(cos(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)))), length(normalize(cos(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0))))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))))), 0.0))[0], _GLF_IDENTITY((_GLF_IDENTITY(vec2(_GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), min(round(length(normalize(cos(vec3(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0))))), round(length(normalize(cos(vec3(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0)), mat4(1.0) * (mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.1)), bool(false)))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((vec3(-0.2, 8.8, 5251.0876).r))), bool(false))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0)))))), 0.0))))))), 0.0), (vec2(_GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), min(_GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), max(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))))), 0.0)) * mat2(1.0))), mix(vec2(_GLF_FUZZED(vec2(-5.7, 4.5).s), _GLF_FUZZED(-492.964)), vec2(((_GLF_IDENTITY(vec2(_GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), min(round(length(normalize(cos(vec3(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0))))), round(length(normalize(cos(vec3(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0)), mat4(1.0) * (mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.1)), bool(false)))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((vec3(-0.2, 8.8, 5251.0876).r))), bool(false))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0)))))), 0.0))))))), 0.0), (vec2(_GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), min(_GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), max(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))))), 0.0)) * mat2(1.0))))[0], ((_GLF_IDENTITY(vec2(_GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), min(round(length(normalize(cos(vec3(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0))))), round(length(normalize(cos(vec3(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0)), mat4(1.0) * (mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.1)), bool(false)))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((vec3(-0.2, 8.8, 5251.0876).r))), bool(false))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0)))))), 0.0))))))), 0.0), (vec2(_GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), min(_GLF_IDENTITY(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), max(round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))))), 0.0)) * mat2(1.0))))[1]), bvec2(true, true)))[1]), vec2(_GLF_FUZZED(8.0), _GLF_FUZZED(2851.1867)), bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], injectionSwitch[1])), (true ? injectionSwitch : _GLF_FUZZED(vec2(-9557.6962, -4.2)))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_TRUE(true)), ! (! (_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_TRUE(true)), false || (bool(_GLF_WRAPPED_IF_TRUE(true)))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_TRUE(true)), ! (! (_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_TRUE(true)), false || (bool(_GLF_WRAPPED_IF_TRUE(true)))))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         else
          {
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), ! (! (bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(vec2(1.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), true)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), true)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), true))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), true))))))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), true)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), true))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), true))))))))))))))))), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), true)), false))))))))))), (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).y, true, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), false)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3)))))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), ! (! (_GLF_DEAD(false)))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & ivec2(_GLF_IDENTITY(-29164, ~ (~ (-29164))), 42745).s)); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) | (1)) : _GLF_FUZZED(77268))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) | (0)))), 0)) << _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) | (subgroup_id))) | (subgroup_id)) * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))), true)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))), true))))) && true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(false, bool(bvec2(false, false))), false)))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base) / 1u, uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(workgroup_base + subgroup_base, 0u + (workgroup_base + subgroup_base))) / 1u, 0u, 0u, 1u), ~ (~ (uvec4((_GLF_IDENTITY(workgroup_base + subgroup_base, 0u + (workgroup_base + subgroup_base))) / 1u, 0u, 0u, 1u))))))), (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base) / 1u, uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(workgroup_base + subgroup_base, 0u + (workgroup_base + subgroup_base))) / 1u, 0u, 0u, 1u), ~ (~ (uvec4((_GLF_IDENTITY(workgroup_base + subgroup_base, 0u + (workgroup_base + subgroup_base))) / 1u, 0u, 0u, 1u)))))))) / 1u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 + _GLF_IDENTITY((int(7)), int(int(_GLF_IDENTITY((int(7)), ((int(7))) | ((int(7))))))))), max((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 + _GLF_IDENTITY((int(7)), int(int(_GLF_IDENTITY((int(7)), ((int(7))) | ((int(7))))))))), (1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 + _GLF_IDENTITY((int(7)), int(int(_GLF_IDENTITY((int(7)), ((int(7))) | ((int(7)))))))))))) & _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), max(int(1), int(1)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(7), int(7)), clamp(0 >> _GLF_IDENTITY(int(7), int(7)), 0 >> _GLF_IDENTITY(int(7), int(7)), 0 >> _GLF_IDENTITY(int(7), int(7))))) | (0 >> _GLF_IDENTITY(int(7), int(7)))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))))))))))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))) || false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.7)), float(injectionSwitch.y), bool(true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(write_val, uint(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))), 4, 64, _GLF_IDENTITY(0, int(ivec4(0, 1, 0, 1))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))), true && (_GLF_IDENTITY(! ((false)), false || (! ((false))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))), true && (_GLF_IDENTITY(! ((false)), false || (! ((false)))))), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))), true && (_GLF_IDENTITY(! ((false)), false || (! ((false))))))))))) && true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(-419))), bool(false))) > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint read_val = atomicLoad(_GLF_IDENTITY(write_val, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(write_val, (_GLF_IDENTITY(write_val, (write_val) | 0u)) + (0u & 84512u)), 0u + (write_val)), (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (_GLF_IDENTITY(write_val, (write_val) | 0u)) + (0u & 84512u)), 0u + (write_val))) | 0u), write_val)), 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(ldexp(vec2(284.961, 889.598), ivec2(-29069, 24552))))).x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(ldexp(vec2(284.961, 889.598), ivec2(-29069, 24552))))).x > injectionSwitch.y)), false)))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     else
      {
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false))))), false || (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false))))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), 0u ^ (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (read_val) << 0u))), 0u ^ (buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (read_val) << 0u)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-72.72)), bool(false))), _GLF_FUZZED(-9275.9072)), vec2(_GLF_FUZZED((+ -9.7)), (injectionSwitch)[1]), bvec2(false, true))).x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2.5)), bool(false))))) > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), false || (bool(bvec3(false, true, false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), false || (bool(bvec3(false, true, false))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), false || (bool(bvec3(false, true, false))))))))))));
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(false)))));
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true), (_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY((bool(_GLF_DEAD(false))), ((bool(_GLF_DEAD(false)))) || false) && true)) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))) || false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(865.423) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.2) : injectionSwitch.x)))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), _GLF_IDENTITY(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true))), bvec2(bvec4(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true))), true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true))), bvec2(bvec4(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true))), true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true))), bvec2(bvec4(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true))), true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true))), bvec2(bvec4(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true))), true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true))), bvec2(bvec4(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true))), true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true))), bvec2(bvec4(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true))), true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true))), bvec2(bvec4(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true))), true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true))), bvec2(bvec4(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true))), true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true))), bvec2(bvec4(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true))), true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true))), bvec2(bvec4(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true))), true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), true, false)))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), _GLF_IDENTITY(bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), true))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), true))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), true))))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), true))))), false, true))), true, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), _GLF_IDENTITY(bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), true))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), true))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), true))))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), true))))), false, true))), true, false)))))))), true, false))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
}
