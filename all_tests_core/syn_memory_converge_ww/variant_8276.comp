#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_28 {
 mat4x2 _f0;
 bvec3 _f1;
 uint read_val;
} ;

struct _GLF_struct_25 {
 mat2x3 _f0;
 uvec2 _f1;
 mat4x2 _f2;
 mat4x3 _f3;
 uvec3 _f4;
 ivec3 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_24 {
 mat4x2 _f0;
 bvec2 _f1;
 mat4x2 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_26 {
 bvec4 _f0;
 bvec3 _f1;
 ivec4 _f2;
 _GLF_struct_24 _f3;
 _GLF_struct_25 _f4;
} ;

struct _GLF_struct_22 {
 mat2 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_21 {
 mat2x4 _f0;
 mat2 _f1;
 vec2 _f2;
 mat2x3 _f3;
 ivec4 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_23 {
 _GLF_struct_21 _f0;
 mat3 _f1;
 mat3 _f2;
 bool _f3;
 ivec4 _f4;
 uint workgroup_base;
 mat3 _f5;
 _GLF_struct_22 _f6;
} ;

struct _GLF_struct_19 {
 mat2x3 _f0;
 mat3 _f1;
 mat3 _f2;
 mat2x3 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_20 {
 ivec2 _f0;
 _GLF_struct_19 _f1;
 float _f2;
} ;

struct _GLF_struct_17 {
 int _f0;
 bvec2 _f1;
 bvec4 _f2;
 ivec3 _f3;
 mat3 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_16 {
 uvec2 _f0;
 mat4x3 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_15 {
 bool _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_14 {
 mat2x4 _f0;
 ivec3 _f1;
 mat2 _f2;
 bool _f3;
 uint _f4;
} ;

struct _GLF_struct_18 {
 _GLF_struct_14 _f0;
 _GLF_struct_15 _f1;
 _GLF_struct_16 _f2;
 _GLF_struct_17 _f3;
 ivec3 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_27 {
 uvec3 _f0;
 _GLF_struct_18 _f1;
 int _f2;
 _GLF_struct_20 _f3;
 _GLF_struct_23 _f4;
 _GLF_struct_26 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_11 {
 bvec4 _f0;
 mat3x4 _f1;
 vec2 _f2;
 bool _f3;
} ;

struct _GLF_struct_10 {
 mat3x4 _f0;
 mat3x2 _f1;
 bvec2 _f2;
 uvec4 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_9 {
 mat4x2 _f0;
 mat4 _f1;
 ivec4 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_8 {
 uvec2 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_12 {
 vec3 _f0;
 uvec4 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_9 _f3;
 mat3x4 _f4;
 _GLF_struct_10 _f5;
 _GLF_struct_11 _f6;
} ;

struct _GLF_struct_6 {
 mat2 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_5 {
 bvec3 _f0;
 mat2x4 _f1;
 mat2x3 _f2;
 uvec3 _f3;
 ivec2 _f4;
 mat2x4 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_4 {
 mat2x3 _f0;
 bvec2 _f1;
 bool _f2;
 uint _f3;
 ivec4 _f4;
 mat2x3 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_7 {
 ivec3 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_6 _f3;
} ;

struct _GLF_struct_2 {
 bvec2 _f0;
 mat4x2 _f1;
 mat4x3 _f2;
 mat4x3 _f3;
 mat2 _f4;
 ivec4 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_1 {
 bool _f0;
 mat4x2 _f1;
 bool _f2;
 mat4 _f3;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
 bvec2 _f1;
 mat4 _f2;
 bool _f3;
 float _f4;
 bvec3 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_13 {
 bvec4 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_7 _f2;
 uint subgroup_local_id;
 vec3 _f3;
 _GLF_struct_12 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    barrier();
  }
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(bvec4(_GLF_IDENTITY(true, bool(bool(true)))), _GLF_struct_3(_GLF_struct_0(bvec2(true), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), ! (! (bool(bvec3(true, true, true))))))), mat4(1.0), true, 1.0, bvec3(true), mat4(1.0)), _GLF_struct_1(true, mat4x2(1.0), true, mat4(1.0)), _GLF_struct_2(bvec2(true), mat4x2(1.0), mat4x3(1.0), mat4x3(1.0), mat2(1.0), ivec4(_GLF_IDENTITY(1, 0 ^ (1))), bvec4(_GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(uvec2(1u), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY((uvec2(1u)), (_GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) + uvec2(0u, 0u))) | uvec2(0u, 0u)) | _GLF_IDENTITY((_GLF_IDENTITY(uvec2(1u), (_GLF_IDENTITY(uvec2(1u), uvec2(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec2(1u), (_GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY((uvec2(1u)) / uvec2(1u, 1u), ~ (~ ((uvec2(1u)) / uvec2(1u, 1u)))))) << uvec2(0u, 0u)), 0u, 1u), ~ (~ (uvec4(_GLF_IDENTITY(uvec2(1u), (_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) / uvec2(1u, 1u))) << uvec2(0u, 0u)), 0u, 1u))))))) << uvec2(0u, 0u))), ((_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) << uvec2(0u, 0u)))) | uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_struct_7(ivec3(1), _GLF_struct_4(mat2x3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(950.350)), bool(false)))) + length(vec4(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)))), bvec2(true), true, 1u, ivec4(1), mat2x3(1.0), vec4(1.0)), _GLF_struct_5(bvec3(true), mat2x4(1.0), mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), uvec3(1u), ivec2(_GLF_IDENTITY(1, (1) / 1)), mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, max((1.0) - 0.0, (1.0) - 0.0))), 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3x2(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0))))))), clamp(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), mix(float(max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), float(_GLF_FUZZED(7.8)), bool(false))))) - 0.0), 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec2(mat3x2(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0))))))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), (_GLF_IDENTITY(1.0, (1.0) - 0.0)) - 0.0), 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3x2(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3x2(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0)))))), float(_GLF_IDENTITY(float(float(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3x2(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0))))))), clamp(float(float(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-700.625)))), vec2(mat3x2(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0))))))), float(float(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3x2(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0))))))), float(float(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-703.613) : 1.0))) - 0.0), 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3x2(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0)))))))))))), clamp(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3x2(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0))))), mix(vec2((_GLF_IDENTITY(vec2(1.0, 0.0), _GLF_IDENTITY(min(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3x2(vec2(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-409.458)), bool(false)))), 1.0, 1.0, 1.0, 0.0)))), (_GLF_IDENTITY(min(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3x2(vec2(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-409.458)), bool(false)))), 1.0, 1.0, 1.0, 0.0)))), (min(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3x2(vec2(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-409.458)), bool(false)), 0.0 + (mix(float(0.0), float(_GLF_FUZZED(-409.458)), bool(false)))))), 1.0, 1.0, 1.0, 0.0))))) * vec2(1.0, 1.0))) - vec2(0.0, 0.0))))[0], (_GLF_IDENTITY(vec2(1.0, 0.0), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), (true ? vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (1.0) - 0.0), 0.0) : _GLF_FUZZED(vec2(47.72, -6.7)))), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3x2(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0))))))[1]), vec2(_GLF_FUZZED(float(67415u)), _GLF_IDENTITY(_GLF_FUZZED(626.455), (false ? _GLF_FUZZED(-38.86) : _GLF_FUZZED(626.455)))), bvec2(false, false))))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3x2(vec2(1.0, 0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3x2(vec2(1.0, _GLF_IDENTITY(0.0, float(float(0.0)))), 1.0, 1.0, 1.0, 0.0))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3x2(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0)))))), float(_GLF_IDENTITY(float(float(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3x2(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0))))))), clamp(float(float(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-700.625)))), vec2(mat3x2(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0))))))), float(float(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3x2(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0))))))), float(float(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-703.613) : 1.0))) - 0.0), 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3x2(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0)))))))))))), clamp(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3x2(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0))))), mix(vec2((_GLF_IDENTITY(vec2(1.0, 0.0), _GLF_IDENTITY(min(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3x2(vec2(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-409.458)), bool(false)))), 1.0, 1.0, 1.0, 0.0)))), (_GLF_IDENTITY(min(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3x2(vec2(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-409.458)), bool(false)))), 1.0, 1.0, 1.0, 0.0)))), (min(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3x2(vec2(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-409.458)), bool(false)), 0.0 + (mix(float(0.0), float(_GLF_FUZZED(-409.458)), bool(false)))))), 1.0, 1.0, 1.0, 0.0))))) * vec2(1.0, 1.0))) - vec2(0.0, 0.0))))[0], (_GLF_IDENTITY(vec2(1.0, 0.0), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), (true ? vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (1.0) - 0.0), 0.0) : _GLF_FUZZED(vec2(47.72, -6.7)))), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3x2(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0))))))[1]), vec2(_GLF_FUZZED(float(67415u)), _GLF_IDENTITY(_GLF_FUZZED(626.455), (false ? _GLF_FUZZED(-38.86) : _GLF_FUZZED(626.455)))), bvec2(false, false))))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3x2(vec2(1.0, 0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3x2(vec2(1.0, _GLF_IDENTITY(0.0, float(float(0.0)))), 1.0, 1.0, 1.0, 0.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3x2(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0)))))), float(_GLF_IDENTITY(float(float(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3x2(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0))))))), clamp(float(float(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-700.625)))), vec2(mat3x2(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0))))))), float(float(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3x2(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0))))))), float(float(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-703.613) : 1.0))) - 0.0), 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3x2(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0)))))))))))), clamp(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3x2(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0))))), mix(vec2((_GLF_IDENTITY(vec2(1.0, 0.0), _GLF_IDENTITY(min(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3x2(vec2(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-409.458)), bool(false)))), 1.0, 1.0, 1.0, 0.0)))), (_GLF_IDENTITY(min(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3x2(vec2(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-409.458)), bool(false)))), 1.0, 1.0, 1.0, 0.0)))), (min(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3x2(vec2(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-409.458)), bool(false)), 0.0 + (mix(float(0.0), float(_GLF_FUZZED(-409.458)), bool(false)))))), 1.0, 1.0, 1.0, 0.0))))) * vec2(1.0, 1.0))) - vec2(0.0, 0.0))))[0], (_GLF_IDENTITY(vec2(1.0, 0.0), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), (true ? vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (1.0) - 0.0), 0.0) : _GLF_FUZZED(vec2(47.72, -6.7)))), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3x2(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0))))))[1]), vec2(_GLF_FUZZED(float(67415u)), _GLF_IDENTITY(_GLF_FUZZED(626.455), (false ? _GLF_FUZZED(-38.86) : _GLF_FUZZED(626.455)))), bvec2(false, false))))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3x2(vec2(1.0, 0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3x2(vec2(1.0, _GLF_IDENTITY(0.0, float(float(0.0)))), 1.0, 1.0, 1.0, 0.0)))))))))))))), vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1695.6041) : 0.0)) + _GLF_IDENTITY(_GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED((+ -9082.9027))), float((1.0)), bool(true))), 0.0 + _GLF_IDENTITY(((1.0)), float(mat3x4(((1.0)), 1.0, cos(0.0), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))))), _GLF_struct_6(mat2(1.0), bvec2(true))), gl_SubgroupInvocationID, _GLF_IDENTITY(vec3(1.0), (_GLF_IDENTITY(vec3(1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec3(4.7, -3.3, _GLF_IDENTITY(-6620.0636, mix(float(_GLF_FUZZED(408.171)), float(-6620.0636), bool(true))))), mix(vec3(_GLF_FUZZED(-7211.9047), _GLF_IDENTITY((_GLF_FUZZED(vec3(4.7, -3.3, -6620.0636)))[1], max((_GLF_FUZZED(vec3(4.7, -3.3, -6620.0636)))[1], (_GLF_IDENTITY(_GLF_FUZZED(vec3(4.7, -3.3, -6620.0636)), (true ? _GLF_IDENTITY(_GLF_FUZZED(vec3(4.7, -3.3, -6620.0636)), min(_GLF_FUZZED(vec3(4.7, -3.3, -6620.0636)), _GLF_FUZZED(vec3(4.7, -3.3, -6620.0636)))) : _GLF_FUZZED(vec3(90.56, 2.1, -33.94)))))[1])), (_GLF_FUZZED(vec3(4.7, -3.3, -6620.0636)))[2]), vec3(_GLF_IDENTITY((_GLF_FUZZED(vec3(_GLF_IDENTITY(4.7, max(_GLF_IDENTITY(4.7, mix(float(4.7), float(_GLF_FUZZED(193.332)), bool(false))), 4.7)), -3.3, -6620.0636))), min(_GLF_IDENTITY((_GLF_FUZZED(vec3(4.7, -3.3, -6620.0636))), clamp((_GLF_FUZZED(vec3(4.7, -3.3, -6620.0636))), (_GLF_FUZZED(vec3(4.7, -3.3, -6620.0636))), _GLF_IDENTITY((_GLF_FUZZED(vec3(4.7, -3.3, _GLF_IDENTITY(-6620.0636, mix(float(_GLF_IDENTITY(-6620.0636, min(-6620.0636, -6620.0636))), float(_GLF_FUZZED(float(122743u))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((_GLF_FUZZED(vec3(4.7, -3.3, -6620.0636)))) / vec3(1.0, 1.0, 1.0)))), (_GLF_FUZZED(vec3(4.7, -3.3, -6620.0636)))))[0], _GLF_FUZZED(-7.8), _GLF_FUZZED((6.8 + 5.5))), bvec3(true, false, false))) : vec3(1.0)))) - _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, length(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), 0.0, 0.0))), 0.0, 0.0), mix(vec3((vec3(0.0, 0.0, 0.0))[0], _GLF_FUZZED((+ 405.087)), (_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(0.0, 0.0, 0.0))))[2]), vec3(_GLF_FUZZED(-0.5), (vec3(0.0, 0.0, 0.0))[1], _GLF_FUZZED(vec3(-8.2, 76.15, -7.4).p)), bvec3(false, true, false)))), _GLF_struct_12(vec3(1.0), uvec4(1u), _GLF_struct_8(uvec2(1u), _GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0))))), _GLF_struct_9(mat4x2(1.0), mat4(1.0), ivec4(1), mat4x3(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), mat3x4(1.0), _GLF_struct_10(mat3x4(1.0), mat3x2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(injectionSwitch.x) : 1.0))), bvec2(true), _GLF_IDENTITY(uvec4(1u), (uvec4(_GLF_IDENTITY(1u, min(1u, 1u)))) << uvec4(0u, 0u, 0u, 0u)), mat2x3(1.0)), _GLF_struct_11(bvec4(true), mat3x4(1.0), vec2(1.0), true)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false) || (_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))), bool(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))), true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec3(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), (! (! (! (_GLF_IDENTITY(false, ! (! (false))))))) && true), true, false))))))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec3(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, false), true)), false))))))))))))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))))), ! (! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), ! (! (false)))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))) || false), false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))) || false), false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))) || false))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), true, true), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), true, true), true)))), true)))), ! (! (false))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))), ! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))))) || false), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (_GLF_IDENTITY(false, ! (! (false))))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), bool(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), true && ((! _GLF_IDENTITY((false), ! (! ((false))))))))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), false))) || false))), false))))))))))) || false)) && true), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))), bool(bvec3(! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))), true, false)))))), true, true), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), true, true), true))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((false)))))))), false || (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))))))))), true, true), true))), false))))))), false || (bool(bvec3(false, true, true)))), (_GLF_IDENTITY(bool(bvec3(false, true, true)), false || (bool(bvec3(false, true, true))))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), true, false, true)), true && (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false))), bool(bvec2(! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), false || (bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false))))), true)))))), true))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, true)), true && (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)), true && (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), (! (! ((injectionSwitch.x > injectionSwitch.y)))) || false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec3(-6.3, 52.54, 6.3).b)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) < injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), true, true)))) && (false)), ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec3(-6.3, 52.54, 6.3).b)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) < injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), true, true)))) && (false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), true && (false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9208.4257)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), false, false), true))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(47.56), _GLF_IDENTITY(_GLF_FUZZED(-561.824), max(_GLF_FUZZED(-561.824), _GLF_FUZZED(-561.824)))), bvec2(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), false), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, false || (true))))) && (false), bool(bvec3(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, false || (true))))) && (false), true, true))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, true && (false))), false), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(false, true && (false))), false))))))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (! (true))), false)))) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), false, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), false, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), false, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), false, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), false, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), false, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), false, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), false, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), false, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), false, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), false, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), false, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), false, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), false, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), false, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true))))))), true))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))))) || false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false))))), bool(bool(false)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false))))), bool(bool(false)))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (false ? _GLF_FUZZED(499.912) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(102.796))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))) || ((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), bool(bool(false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-77.53, 538.420)) : injectionSwitch)).y, (false ? _GLF_FUZZED(sin(-2.0)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), max(sqrt(vec2(0.0, 0.0)), sqrt(vec2(0.0, 0.0)))) + (injectionSwitch)).y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sin(-2.0)) : _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(-2575.9856, 3320.0206)) : (injectionSwitch)))).y))) || false), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sin(-2.0)) : _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sin(-2.0)) : _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y))), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sin(-2.0)) : _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y))), false), bvec2(bvec4(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sin(-2.0)) : _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y)), min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sin(-2.0)) : _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sin(-2.0)) : _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y))))), false), false, false))))) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-77.53, 538.420)) : injectionSwitch)).y, (false ? _GLF_FUZZED(sin(-2.0)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), max(sqrt(vec2(0.0, 0.0)), sqrt(vec2(0.0, 0.0)))) + (injectionSwitch)).y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sin(-2.0)) : _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(-2575.9856, 3320.0206)) : (injectionSwitch)))).y))) || false), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sin(-2.0)) : _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sin(-2.0)) : _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y))), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sin(-2.0)) : _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y))), false), bvec2(bvec4(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(sin(-2.0), max(sin(-2.0), _GLF_IDENTITY(sin(-2.0), min(sin(-2.0), sin(-2.0)))))) : _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y)), min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sin(-2.0)) : _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sin(-2.0)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), (_GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : sqrt(vec2(0.0, 0.0))))) / vec2(1.0, 1.0)) + (injectionSwitch)).y))))), false), false, false))))) || false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))))))), bool(bvec4(bool(_GLF_IDENTITY(false, ! (! (false)))), true, true, true)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))) && true) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((mat4(-2.8, -244.744, _GLF_IDENTITY(31.94, (31.94) / 1.0), 9032.3161, -6.9, 5.5, -5.9, -30.93, -0.3, -6174.0775, -8.1, 6.8, -7.5, -21.28, 3.5, 6.9) , injectionSwitch)))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), bool(bvec2(! (_GLF_DEAD(false)), false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_27 _GLF_struct_replacement_27 = _GLF_struct_27(uvec3(1u), _GLF_struct_18(_GLF_struct_14(mat2x4(1.0), _GLF_IDENTITY(ivec3(1), ivec3(ivec3(ivec3(1)))), mat2(1.0), true, 1u), _GLF_struct_15(true, mat3x2(1.0)), _GLF_struct_16(uvec2(1u), mat4x3(1.0), uvec3(1u)), _GLF_struct_17(1, bvec2(true), bvec4(true), ivec3(1), mat3(1.0), ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) - 0))), ivec3(1), mat3x4(1.0)), 1, _GLF_struct_20(ivec2(1), _GLF_struct_19(mat2x3(1.0), mat3(1.0), mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), mat2x3(1.0), mat2x4(1.0)), 1.0), _GLF_struct_23(_GLF_struct_21(mat2x4(1.0), mat2(1.0), vec2(1.0), mat2x3(1.0), ivec4(1), mat4x2(1.0)), _GLF_IDENTITY(mat3(1.0), _GLF_IDENTITY(transpose(transpose(mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), (transpose(transpose(mat3(1.0)))) * mat3(1.0))), mat3(1.0), true, ivec4(_GLF_IDENTITY(1, clamp(1, 1, 1))), workgroup_size * workgroup_id, mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0)), _GLF_struct_22(mat2(1.0), bvec2(true))), _GLF_struct_26(bvec4(true), bvec3(true), ivec4(1), _GLF_struct_24(mat4x2(1.0), _GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true), true), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), true), bvec3(bvec3(bvec3(bvec2(true), _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), ((_GLF_IDENTITY(true, (true) || false))) || _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), true), bvec3(bvec3(bvec3(bvec2(true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), true), bvec3(bvec3(bvec3(bvec2(true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))))))), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), true), bvec3(bvec3(bvec3(bvec2(true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ((true) || false) || false)))))))))))), true))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), true), bvec3(bvec3(bvec3(bvec2(true), _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), ((_GLF_IDENTITY(true, (true) || false))) || _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), true), bvec3(bvec3(bvec3(bvec2(true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), true), bvec3(bvec3(bvec3(bvec2(true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))))))), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), true), bvec3(bvec3(bvec3(bvec2(true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ((true) || false) || false)))))))))))), true)))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, (true) && true)), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(true), true)), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)) && (true)), false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, mix(float(_GLF_FUZZED(-5347.8236)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, sqrt(1.0) * (1.0)), 0.0), mat3x2(mat3x2(mat3x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-196.668)), bool(false))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))), bool(true))))))))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec2(! (! (false)), _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(! (! (false)), _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), bvec2(bvec2(bvec2(! _GLF_IDENTITY((! (false)), ((! (false))) && true), _GLF_IDENTITY(false, bool(bvec3(false, true, true))))))), false)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), ! (! (bool(_GLF_IDENTITY(false, (false) || false)))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), ! (! (bool(_GLF_IDENTITY(false, (false) || false))))))) || false)))), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(false, true, true)))), bvec2(bvec2(bvec2(! (! (false)), _GLF_IDENTITY(false, bool(bvec3(false, true, true))))))), false)), false, false))))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) || false, true && ((! (false)) || false))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true, true && ((bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), ! (! (_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true, true && ((bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true, true && ((bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), ! (! (_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true, true && ((bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), (true && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))) && true)))))))), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), mix(vec2(_GLF_FUZZED(3.8), _GLF_FUZZED(8.4)), vec2(((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))[0], ((true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(0.0)), bvec2(true, false))) : _GLF_FUZZED(injectionSwitch)))[1]), bvec2(true, true)))).y), bool(_GLF_IDENTITY(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), mix(vec2(_GLF_FUZZED(3.8), _GLF_FUZZED(8.4)), vec2(((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))[0], ((true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(0.0)), bvec2(true, false))) : _GLF_FUZZED(injectionSwitch)))[1]), bvec2(true, true)))).y)), true && (bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), mix(vec2(_GLF_FUZZED(3.8), _GLF_FUZZED(8.4)), vec2(((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))[0], ((true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(0.0)), bvec2(true, false))) : _GLF_FUZZED(injectionSwitch)))[1]), bvec2(true, true)))).y))))))))))), _GLF_IDENTITY(true, (true) && true)), true)))))))))))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), true), bvec3(bvec3(bvec3(bvec2(true), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), ((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))), ((_GLF_IDENTITY(true, false || (true)))) && true), (! (_GLF_IDENTITY(true, false || (true)))) || false))), (true) || false))) || false)), ! (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), ((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))), ((_GLF_IDENTITY(true, false || (true)))) && true), (! (_GLF_IDENTITY(true, false || (true)))) || false))), (true) || false))) || false)))))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(true), true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), true), bvec3(bvec4(bvec3(bvec2(true), true), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), true), bvec3(bvec4(bvec3(bvec2(true), true), false)))), false))))), bvec3(bvec3(bvec3(bvec2(true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (true) || false))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(true), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))), bvec3(bvec4(bvec3(bvec2(true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec2(true, false)))), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(true), _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) || false)), bool(bvec3((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) || false)), false, false)))))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))))))))))))))))))))), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(true), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(true, (true) && true)), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec2(true), _GLF_IDENTITY(true, (true) && true))), bvec3(bvec4(bvec3(bvec3(bvec2(true), true)), true))), true))))))))))))), true)))))), mat4x2(1.0), vec4(1.0)), _GLF_struct_25(mat2x3(1.0), uvec2(1u), mat4x2(1.0), mat4x3(1.0), uvec3(1u), ivec3(1), vec2(1.0))), mat3x4(1.0));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_27._f4.workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_struct_replacement_27._f4.workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u), subgroup_id)) * subgroup_size, _GLF_struct_replacement_27._f4.workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_27._f4.workgroup_base + subgroup_id * subgroup_size, 0u + (_GLF_struct_replacement_27._f4.workgroup_base + subgroup_id * subgroup_size)))) + _GLF_struct_replacement_13.subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(write_val, uint(virtual_gid), 4, 64, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) - _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) >> 0))), 0))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_28 _GLF_struct_replacement_28 = _GLF_struct_28(mat4x2(1.0), bvec3(true), atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, uint(_GLF_IDENTITY(uvec4(write_val, 1u, 1u, 1u), uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(uvec4(write_val, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) | (uvec4(write_val, 1u, 1u, 1u))))))), (0u | 0u) + (write_val)), 4, 64, 0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-585.860, 1661.6776)))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec4(_GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bool((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))), bool(bvec4((_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bool((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))), true, false, false))) || false), true, true, true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec4(_GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bool((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))), bool(bvec4((_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bool((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))), true, false, false))) || false), true, true, true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec4(_GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bool((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))), bool(bvec4((_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bool((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))), true, false, false))) || false), true, true, true))))), false, true, false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(_GLF_struct_replacement_28.read_val, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), _GLF_IDENTITY((_GLF_FUZZED(subgroup_size)), ((_GLF_FUZZED(subgroup_size))) | 0u) | 0u), _GLF_FUZZED(subgroup_size))) : _GLF_struct_replacement_28.read_val))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
