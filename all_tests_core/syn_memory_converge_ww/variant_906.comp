#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - 0.0)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true)))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).y)) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))))), true && ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true))))))))))))) || false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec2(7391.9537, -8.5).g)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-13.55)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))) ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-6.4))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true)))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, (false) && true)))), true && (! (! (! (_GLF_IDENTITY(false, (false) && true)))))))))))), (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-7254.6464, -8.3)))).x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))), false, true), true)))))) && true))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2090.4433)), bool(false))), sqrt(cos(0.0)))), float(float(float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2090.4433)), bool(false))), sqrt(cos(0.0)))))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true)), false || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1.4)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1.4)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1.4)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, ! (! (true))))), false || (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, ! (! (true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, bool(bool(true)))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, bool(bvec2((injectionSwitch.x > injectionSwitch.y) || false, false))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, bool(bvec2((injectionSwitch.x > injectionSwitch.y) || false, false)))) || false)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))) && true)))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))) || false), (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, true)), true && (bool(bvec4(false, true, true, true)))), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, _GLF_IDENTITY(true, (true) || false))), false, true, false)))) || _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), true, false, false)), bool(bvec4(bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), true, false, false)), true, true, false)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, determinant(mat2(cos(0.0), 0.0, cos(0.0), 1.0)) * (injectionSwitch.y))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))))) > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), true, true))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), true, true))))), false, true, false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false, true, false))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), true && (! (_GLF_IDENTITY((false), ((false)) && true)))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), true && (! (_GLF_IDENTITY((false), ((false)) && true)))))))))), (bool(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), true && (! (_GLF_IDENTITY((false), ((false)) && true))))))))))) && true)), bool(bool(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), true && (! (_GLF_IDENTITY((false), ((false)) && true)))))))))), (bool(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), true && (! (_GLF_IDENTITY((false), ((false)) && true))))))))))) && true)))))))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))))))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))), bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))), bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 0.0, 1.0)))) * abs(1.0)) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(32.31), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-9.1), mix(float(_GLF_FUZZED(-9.1)), float(_GLF_FUZZED(-2.4)), bool(false)))), bvec2(true, false))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7637.4320)), bool(false))))) > injectionSwitch.y) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(866.329), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.4)), bvec2(true, false))).x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(866.329), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.4)), bvec2(true, false))).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec2(mat2(1.0) * (injectionSwitch))))).x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), ! (! (false))))) || false, ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), ! (! (false))))) || false) && true))) && true))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), bool(bvec2(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> (1u ^ uint(_GLF_ONE(1.0, injectionSwitch.y)))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))), subgroup_local_id))) >> 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)))))).x < injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) || false))))))), (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))) - 0.0, min((_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))) - 0.0, (_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))) - 0.0))))))))) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bool(bool(bvec3(false, false, false)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.3) : injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(27535))), vec2(_GLF_FUZZED(-5373.7376), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).y)))))) && true))))), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x < injectionSwitch.y)))), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))))))))) && true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, false, true))), (_GLF_IDENTITY(! (bool(bvec4(false, true, false, true))), bool(bool(! (bool(bvec4(false, true, false, true))))))) || false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(log(vec2(1.0, 1.0)))).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(log(vec2(1.0, 1.0)))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(log(vec2(1.0, 1.0)))).y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))) || false))), false || (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))) && true), (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), false, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), false, false), false))))))), bool(bool(bool(bvec3(false, false, false)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.3) : injectionSwitch.x)), injectionSwitch.x), float(float(min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.3) : injectionSwitch.x)), injectionSwitch.x))))) < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(27535))), vec2(_GLF_FUZZED(-5373.7376), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).y)))))), ((! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(27535))), vec2(_GLF_FUZZED(-5373.7376), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).y))))))) && true) && true))))), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))[0], min((_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))[0])), (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))[1]), vec2(_GLF_FUZZED(9398.2753), _GLF_FUZZED(0.0)), bvec2(false, false))).x < injectionSwitch.y)))), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, false, true))))))), ! (! ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))))))))) && true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4.6)), bool(false))) > injectionSwitch.y)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, false, true))), (_GLF_IDENTITY(! (bool(bvec4(false, true, false, true))), bool(bool(! (bool(bvec4(false, true, false, true))))))) || false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6855.9025) : injectionSwitch.x)) < injectionSwitch.y)))))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))))) && true))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), bool(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), true, false))))))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(log(vec2(1.0, 1.0)))).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(log(vec2(1.0, 1.0)))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(log(vec2(1.0, 1.0)))).y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, false, true))), (_GLF_IDENTITY(! (bool(bvec4(false, true, false, true))), bool(bool(! (bool(bvec4(false, true, false, true))))))) || false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6855.9025) : injectionSwitch.x)) < injectionSwitch.y)))))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))))) && true))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), bool(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), true, false))))))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(log(vec2(1.0, 1.0)))).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(log(vec2(1.0, 1.0)))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(log(vec2(1.0, 1.0)))).y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, false, true))), (_GLF_IDENTITY(! (bool(bvec4(false, true, false, true))), bool(bool(! (bool(bvec4(false, true, false, true))))))) || false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6855.9025) : injectionSwitch.x)) < injectionSwitch.y)))))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))))) && true))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), bool(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), true, false))))))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(log(vec2(1.0, 1.0)))).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(log(vec2(1.0, 1.0)))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(log(vec2(1.0, 1.0)))).y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), false))))))) || false))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)))))).x < injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) || false))))))), (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))) - 0.0, min((_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))) - 0.0, (_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))) - 0.0))))))))) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bool(bool(bvec3(false, false, false)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.3) : injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(27535))), vec2(_GLF_FUZZED(-5373.7376), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).y)))))) && true))))), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x < injectionSwitch.y)))), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))))))))) && true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, false, true))), (_GLF_IDENTITY(! (bool(bvec4(false, true, false, true))), bool(bool(! (bool(bvec4(false, true, false, true))))))) || false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(log(vec2(1.0, 1.0)))).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(log(vec2(1.0, 1.0)))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(log(vec2(1.0, 1.0)))).y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))) || false))), false || (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))) && true), (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), false, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), false, false), false))))))), bool(bool(bool(bvec3(false, false, false)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.3) : injectionSwitch.x)), injectionSwitch.x), float(float(min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.3) : injectionSwitch.x)), injectionSwitch.x))))) < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(27535))), vec2(_GLF_FUZZED(-5373.7376), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).y)))))), ((! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(27535))), vec2(_GLF_FUZZED(-5373.7376), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).y))))))) && true) && true))))), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))[0], min((_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))[0])), (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))[1]), vec2(_GLF_FUZZED(9398.2753), _GLF_FUZZED(0.0)), bvec2(false, false))).x < injectionSwitch.y)))), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, false, true))))))), ! (! ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))))))))) && true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4.6)), bool(false))) > injectionSwitch.y)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, false, true))), (_GLF_IDENTITY(! (bool(bvec4(false, true, false, true))), bool(bool(! (bool(bvec4(false, true, false, true))))))) || false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6855.9025) : injectionSwitch.x)) < injectionSwitch.y)))))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))))) && true))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), bool(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), true, false))))))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(log(vec2(1.0, 1.0)))).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(log(vec2(1.0, 1.0)))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(log(vec2(1.0, 1.0)))).y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, false, true))), (_GLF_IDENTITY(! (bool(bvec4(false, true, false, true))), bool(bool(! (bool(bvec4(false, true, false, true))))))) || false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6855.9025) : injectionSwitch.x)) < injectionSwitch.y)))))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))))) && true))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), bool(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), true, false))))))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(log(vec2(1.0, 1.0)))).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(log(vec2(1.0, 1.0)))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(log(vec2(1.0, 1.0)))).y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, false, true))), (_GLF_IDENTITY(! (bool(bvec4(false, true, false, true))), bool(bool(! (bool(bvec4(false, true, false, true))))))) || false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6855.9025) : injectionSwitch.x)) < injectionSwitch.y)))))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))))) && true))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), bool(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), true, false))))))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(log(vec2(1.0, 1.0)))).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(log(vec2(1.0, 1.0)))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(log(vec2(1.0, 1.0)))).y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), false))))))) || false))))))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(mix(0.8, -0.1, 6350.5881))))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(mix(0.8, -0.1, 6350.5881))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(mix(0.8, -0.1, 6350.5881))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) && true)) || false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y) && true)))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), true, false, false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((- 6.8))), bool(false))), mix(float(_GLF_FUZZED(-1.6)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-26.21)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))) || false)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, true && (false))), ! (! (false || _GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true)))), _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true)))), ! (! ((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), false || (false || ((false))))), _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))), false))))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) && true))), false || ((false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec3(0.7, 769.710, -6193.1752).t)), bool(false))) > injectionSwitch.y)), false), false))))))), ((_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))), bool(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), false || (false || ((false))))), (_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), false || (false || ((false)))))) || false), _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))), false))))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) && true))), bool(bvec4(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) && true))), true, false, true))), false || ((false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) && true))), bool(bvec4(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) && true))), true, false, true))), false || ((false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false)))))))) || false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false))))), true), false))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 1.0, abs(0.0), 0.0)), mix(vec2(_GLF_IDENTITY((vec2(mat3x2(injectionSwitch, 0.0, 1.0, abs(0.0), 0.0)))[0], mix(float(_GLF_FUZZED(vec2(-18.60, 2972.2360).g)), float((vec2(mat3x2(injectionSwitch, 0.0, 1.0, abs(0.0), 0.0)))[0]), bool(true))), _GLF_FUZZED(_GLF_IDENTITY(7.9, max(7.9, 7.9)))), vec2(_GLF_FUZZED(-9.8), (vec2(mat3x2(injectionSwitch, 0.0, 1.0, abs(0.0), 0.0)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))).x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(write_val, uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), max(4, 4)))), 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read_val = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, uint(uvec2(write_val, (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))), clamp(_GLF_IDENTITY(write_val, uint(uvec2(write_val, (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))), _GLF_IDENTITY(write_val, uint(uvec2(write_val, (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))), _GLF_IDENTITY(write_val, uint(uvec2(write_val, (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))))), 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(determinant(mat2(-9.6, -3.2, -86.43, 25.80))))) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(619.229)), bool(false))), (false ? _GLF_FUZZED(421.770) : injectionSwitch.y)))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(cos(vec4(0.0, 0.0, 0.0, 0.0)), min(cos(vec4(0.0, 0.0, 0.0, 0.0)), cos(vec4(0.0, 0.0, 0.0, 0.0))))))), mix(float(_GLF_FUZZED(253.204)), float(round(length(normalize(cos(vec4(0.0, 0.0, 0.0, 0.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, 0.0, 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8689.5444) : float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), 1.0, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(421.770) : injectionSwitch.y)))), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_FUZZED((true ? -957.627 : float(true)))), bool(false))), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec3(-6201.1735, 8178.2556, 105.892).z)), bool(false))), 0.0, 1.0, round(length(normalize(cos(vec4(0.0, 0.0, 0.0, 0.0))))), 0.0, 0.0, 1.0, 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat4(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), 1.0, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(421.770) : injectionSwitch.y)))), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_FUZZED((true ? -957.627 : float(true)))), bool(false))), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec3(-6201.1735, 8178.2556, 105.892).z)), bool(false))), 0.0, 1.0, round(length(normalize(cos(vec4(0.0, 0.0, 0.0, 0.0))))), 0.0, 0.0, 1.0, 0.0, 1.0)), (transpose(mat4(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), 1.0, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(421.770) : injectionSwitch.y)))), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_FUZZED((true ? -957.627 : float(true)))), bool(false))), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec3(-6201.1735, 8178.2556, 105.892).z)), bool(false))), 0.0, 1.0, round(length(normalize(cos(vec4(0.0, 0.0, 0.0, 0.0))))), 0.0, 0.0, 1.0, 0.0, 1.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))), true, _GLF_IDENTITY(true, (true) && true))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))) + vec2(0.0, 0.0)).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))) + vec2(0.0, 0.0)).x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(read_val, (true ? read_val : _GLF_IDENTITY(_GLF_FUZZED(write_val), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(write_val), clamp(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(write_val), min(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), (_GLF_IDENTITY(_GLF_FUZZED(write_val), min(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val)))) | (_GLF_IDENTITY(_GLF_FUZZED(write_val), min(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val)))))), (max(_GLF_IDENTITY(_GLF_FUZZED(write_val), clamp(_GLF_FUZZED(_GLF_IDENTITY(write_val, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) | 0u), 0u ^ (write_val)))))), _GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(write_val), min(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(write_val, 1u * (_GLF_IDENTITY(write_val, max(write_val, write_val))))), min(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val)))) | (_GLF_IDENTITY(_GLF_FUZZED(write_val), min(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val))))))) / 1u)))), 0u, 0u)), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_val, (true ? read_val : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(write_val), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(write_val), clamp(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_FUZZED(write_val), min(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val)))), (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(write_val), clamp(_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(write_val) : _GLF_FUZZED(workgroup_base)))) ^ 0u), _GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), clamp(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_FUZZED(write_val), min(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val))))) * 1u)), max(_GLF_IDENTITY(_GLF_FUZZED(write_val), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(write_val), clamp(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_FUZZED(write_val), min(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val)))), (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(write_val), clamp(_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(write_val) : _GLF_FUZZED(workgroup_base)))) ^ 0u), _GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), clamp(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_FUZZED(write_val), min(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val))))) * 1u)), _GLF_IDENTITY(_GLF_FUZZED(write_val), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(write_val), clamp(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_FUZZED(write_val), min(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val)))), (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(write_val), clamp(_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(write_val) : _GLF_FUZZED(workgroup_base)))) ^ 0u), _GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), clamp(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_FUZZED(write_val), min(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val))))) * 1u)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_val, _GLF_IDENTITY((true ? read_val : _GLF_IDENTITY(_GLF_FUZZED(write_val), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(write_val), clamp(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_FUZZED(write_val)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val)))), (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(write_val), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(write_val), min(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), (_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(write_val) : _GLF_FUZZED(workgroup_base)))) ^ 0u), _GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), clamp(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_FUZZED(write_val), min(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val))))) * 1u))), ((true ? read_val : _GLF_IDENTITY(_GLF_FUZZED(write_val), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(write_val), clamp(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_FUZZED(write_val)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val)))), (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(write_val), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(write_val), min(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), (_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(write_val) : _GLF_FUZZED(workgroup_base)))) ^ 0u), _GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), clamp(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_FUZZED(write_val), min(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val))))) * 1u)))) << 0u)), uint(uvec3(_GLF_IDENTITY(read_val, (true ? read_val : _GLF_IDENTITY(_GLF_FUZZED(write_val), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(write_val), clamp(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(write_val, (write_val) << (0u | 0u))), min(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val)))), (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(write_val), clamp(_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) ? _GLF_IDENTITY(_GLF_FUZZED(write_val), min(_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_FUZZED(write_val)) * 1u), _GLF_FUZZED(write_val))) : _GLF_FUZZED(workgroup_base)))) ^ 0u), _GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), clamp(_GLF_FUZZED(_GLF_IDENTITY(write_val, 0u ^ (write_val))), _GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_FUZZED(write_val), min(_GLF_FUZZED(_GLF_IDENTITY(write_val, (false ? _GLF_FUZZED(workgroup_base) : write_val))), _GLF_FUZZED(write_val))))) * 1u)))), 1u, 0u)))))), 0u, 0u))), 1u * ((false ? _GLF_FUZZED(subgroup_local_id) : uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_val, (true ? read_val : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(write_val), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(write_val), clamp(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_FUZZED(write_val), min(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val)))), (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(write_val), clamp(_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(write_val) : _GLF_FUZZED(workgroup_base)))) ^ 0u), _GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), clamp(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_FUZZED(write_val), min(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val))))) * 1u)), max(_GLF_IDENTITY(_GLF_FUZZED(write_val), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(write_val), clamp(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_FUZZED(write_val), min(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val)))), (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(write_val), clamp(_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(write_val) : _GLF_FUZZED(workgroup_base)))) ^ 0u), _GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), clamp(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_FUZZED(write_val), min(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val))))) * 1u)), _GLF_IDENTITY(_GLF_FUZZED(write_val), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(write_val), clamp(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_FUZZED(write_val), min(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val)))), (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(write_val), clamp(_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(write_val) : _GLF_FUZZED(workgroup_base)))) ^ 0u), _GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), clamp(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_FUZZED(write_val), min(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val))))) * 1u)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_val, _GLF_IDENTITY((true ? read_val : _GLF_IDENTITY(_GLF_FUZZED(write_val), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(write_val), clamp(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_FUZZED(write_val)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val)))), (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(write_val), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(write_val), min(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), (_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(write_val) : _GLF_FUZZED(workgroup_base)))) ^ 0u), _GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), clamp(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_FUZZED(write_val), min(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val))))) * 1u))), ((true ? read_val : _GLF_IDENTITY(_GLF_FUZZED(write_val), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(write_val), clamp(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_FUZZED(write_val)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val)))), (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(write_val), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(write_val), min(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), (_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(write_val) : _GLF_FUZZED(workgroup_base)))) ^ 0u), _GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), clamp(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_FUZZED(write_val), min(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val))))) * 1u)))) << 0u)), uint(uvec3(_GLF_IDENTITY(read_val, (true ? read_val : _GLF_IDENTITY(_GLF_FUZZED(write_val), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(write_val), clamp(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(write_val, (write_val) << (0u | 0u))), min(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val)))), (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(write_val), clamp(_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) ? _GLF_IDENTITY(_GLF_FUZZED(write_val), min(_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_FUZZED(write_val)) * 1u), _GLF_FUZZED(write_val))) : _GLF_FUZZED(workgroup_base)))) ^ 0u), _GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), clamp(_GLF_FUZZED(_GLF_IDENTITY(write_val, 0u ^ (write_val))), _GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_FUZZED(write_val), min(_GLF_FUZZED(_GLF_IDENTITY(write_val, (false ? _GLF_FUZZED(workgroup_base) : write_val))), _GLF_FUZZED(write_val))))) * 1u)))), 1u, 0u)))))), 0u, 0u)))))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ _GLF_IDENTITY((read_val), min((read_val), (read_val))))), (true ? read_val : _GLF_FUZZED(write_val))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))))))), 0u, 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ _GLF_IDENTITY((read_val), min((read_val), (read_val))))), (true ? read_val : _GLF_FUZZED(write_val))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))))))), 0u, 0u)) >> uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ _GLF_IDENTITY((read_val), min((read_val), (read_val))))), (true ? read_val : _GLF_FUZZED(write_val))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))))))), 0u, 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ _GLF_IDENTITY((read_val), min((read_val), (read_val))))), (true ? read_val : _GLF_FUZZED(write_val))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))))))), 0u, 0u)) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ _GLF_IDENTITY((read_val), min((read_val), (read_val))))), (true ? read_val : _GLF_FUZZED(write_val))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))))))), 0u, 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ _GLF_IDENTITY((read_val), min((read_val), (read_val))))), (true ? read_val : _GLF_FUZZED(write_val))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))))))), 0u, 0u)) >> uvec3(0u, 0u, 0u)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ _GLF_IDENTITY((read_val), min((read_val), (read_val))))), (true ? _GLF_IDENTITY(read_val, ~ (~ (read_val))) : _GLF_FUZZED(write_val))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_val, _GLF_IDENTITY(~ (~ (read_val)), min(~ (~ (read_val)), ~ (~ (read_val))))), (true ? read_val : _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))))))), 0u, 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ _GLF_IDENTITY((read_val), min((read_val), (read_val))))), (true ? read_val : _GLF_FUZZED(write_val))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))))))), 0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 0u))))) >> uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ _GLF_IDENTITY((read_val), min((read_val), (read_val))))), (true ? read_val : _GLF_FUZZED(write_val))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ _GLF_IDENTITY((read_val), max((read_val), (read_val))))), (true ? read_val : _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (_GLF_IDENTITY(~ (read_val), max(_GLF_IDENTITY(~ (read_val), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(~ (read_val), clamp(~ (read_val), ~ (read_val), ~ (read_val))))), ~ (read_val))))), (true ? read_val : _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))))))), 0u, 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, 0u | (_GLF_IDENTITY(read_val, (_GLF_IDENTITY(read_val, min(read_val, read_val))) << 0u))), ~ (~ _GLF_IDENTITY((read_val), min((_GLF_IDENTITY(read_val, 0u ^ (read_val))), (read_val))))), (true ? read_val : _GLF_FUZZED(_GLF_IDENTITY(write_val, (write_val) | 0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), (_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val)))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))))))), 0u, 0u)) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ _GLF_IDENTITY((read_val), min((read_val), (read_val))))), (true ? read_val : _GLF_FUZZED(write_val))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (_GLF_IDENTITY(read_val, ~ (~ (read_val)))) | (_GLF_IDENTITY(read_val, ~ (~ (read_val))))), (true ? read_val : _GLF_FUZZED(_GLF_IDENTITY(write_val, min(write_val, _GLF_IDENTITY(write_val, min(write_val, write_val))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ _GLF_IDENTITY((read_val), 0u ^ ((read_val))))), (true ? read_val : _GLF_FUZZED(write_val))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))))))), 0u, 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ _GLF_IDENTITY((read_val), min((read_val), (read_val))))), (true ? _GLF_IDENTITY(read_val, ~ (~ _GLF_IDENTITY((read_val), min((read_val), (read_val))))) : _GLF_FUZZED(virtual_gid))), (true ? read_val : _GLF_FUZZED(write_val))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))))))), 0u, 0u)) >> uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(168324u, 149666u, 158271u)))), ~ (~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))))), 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, (read_val) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ _GLF_IDENTITY((read_val), min((read_val), (read_val))))), (true ? read_val : _GLF_FUZZED(write_val))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))))))), 0u, 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, (read_val) ^ (1u ^ 1u)), ~ (~ _GLF_IDENTITY((read_val), min((read_val), (read_val))))), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))) ? read_val : _GLF_FUZZED(write_val))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))))))), 0u, 0u)) >> uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ _GLF_IDENTITY((read_val), min((read_val), (read_val))))), (true ? read_val : _GLF_FUZZED(write_val))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))))))), 0u, 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ _GLF_IDENTITY((read_val), min((read_val), (read_val))))), (true ? read_val : _GLF_FUZZED(write_val))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))))))), 0u, 0u)) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ _GLF_IDENTITY((read_val), min((read_val), (read_val))))), (true ? read_val : _GLF_FUZZED(write_val))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (_GLF_IDENTITY(~ (read_val), (_GLF_IDENTITY(false, bool(bvec2(false, false))) ? _GLF_FUZZED(88172u) : ~ (read_val))))), (true ? _GLF_IDENTITY(read_val, 0u | (read_val)) : _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))))))), 0u, 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ _GLF_IDENTITY((read_val), min((read_val), (read_val))))), (true ? read_val : _GLF_FUZZED(write_val))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ _GLF_IDENTITY((read_val), min((read_val), (read_val))))), (true ? read_val : _GLF_FUZZED(write_val))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ _GLF_IDENTITY((read_val), min((read_val), (read_val))))), (true ? read_val : _GLF_FUZZED(write_val))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ _GLF_IDENTITY((read_val), min((read_val), (read_val))))), (true ? read_val : _GLF_FUZZED(write_val)))))), _GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ _GLF_IDENTITY((read_val), min((read_val), (read_val))))), (true ? read_val : _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ _GLF_IDENTITY((read_val), min((read_val), (read_val))))), (true ? read_val : _GLF_FUZZED(write_val)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ _GLF_IDENTITY((read_val), min((read_val), (read_val))))), (true ? read_val : _GLF_FUZZED(write_val))))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ _GLF_IDENTITY((~ (read_val)), uint(uint((~ (read_val)))))), (true ? read_val : _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ _GLF_IDENTITY((read_val), ((read_val)) | (_GLF_IDENTITY((read_val), ((read_val)) / 1u))))), (true ? read_val : _GLF_FUZZED(write_val))))))), 0u, 0u)) >> uvec3(0u, 0u, 0u)))), ~ (~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), (true ? read_val : _GLF_FUZZED(write_val))), 0u, 0u))))) | uvec3(0u, 0u, 0u))), uint(uvec3(_GLF_IDENTITY(read_val, (true ? read_val : _GLF_FUZZED(write_val))), _GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_val, uint(uvec4(read_val, _GLF_IDENTITY(1u, (1u) | 0u), 0u, 0u))), (true ? read_val : _GLF_IDENTITY(_GLF_FUZZED(write_val), ~ (~ (_GLF_FUZZED(write_val)))))), 0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 0u | (0u)))))), max(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_val, uint(_GLF_IDENTITY(uvec4(read_val, _GLF_IDENTITY(1u, (1u) | 0u), 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec4(read_val, _GLF_IDENTITY(1u, (1u) | 0u), 0u, 0u), max(uvec4(read_val, _GLF_IDENTITY(1u, (1u) | 0u), 0u, 0u), uvec4(read_val, _GLF_IDENTITY(1u, (1u) | 0u), 0u, 0u)))))))), (_GLF_IDENTITY(true ? read_val : _GLF_IDENTITY(_GLF_FUZZED(write_val), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(write_val), max(_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_IDENTITY(_GLF_FUZZED(write_val), max(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val)))) | (_GLF_FUZZED(write_val))), _GLF_FUZZED(write_val)))))), max(_GLF_IDENTITY(true ? read_val : _GLF_IDENTITY(_GLF_FUZZED(write_val), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(write_val), max(_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_IDENTITY(_GLF_FUZZED(write_val), max(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val)))) | (_GLF_FUZZED(write_val))), _GLF_FUZZED(write_val)))))), max(true ? read_val : _GLF_IDENTITY(_GLF_FUZZED(write_val), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(write_val), max(_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_IDENTITY(_GLF_FUZZED(write_val), max(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val)))) | (_GLF_FUZZED(write_val))), _GLF_FUZZED(write_val)))))), true ? read_val : _GLF_IDENTITY(_GLF_FUZZED(write_val), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(write_val), max(_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_IDENTITY(_GLF_FUZZED(write_val), max(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val)))) | (_GLF_FUZZED(write_val))), _GLF_FUZZED(write_val)))))))), true ? read_val : _GLF_IDENTITY(_GLF_FUZZED(write_val), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(write_val), max(_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_IDENTITY(_GLF_FUZZED(write_val), max(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val)))) | (_GLF_FUZZED(write_val))), _GLF_FUZZED(write_val)))))))))), 0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 0u | (0u)))))), max(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_val, uint(uvec4(read_val, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | 0u)) | 0u), 0u, 0u))), (_GLF_IDENTITY(true, _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, true && (_GLF_IDENTITY((true) && true, ! (! ((true) && true)))))) && (true)) ? read_val : _GLF_IDENTITY(_GLF_FUZZED(write_val), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_IDENTITY(_GLF_FUZZED(write_val), (115379u & 0u) | (_GLF_FUZZED(write_val)))) - 0u)))))), 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 0u | (0u)))), (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 0u | (0u))))) | 0u))), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, uint(uvec4(read_val, _GLF_IDENTITY(1u, (1u) | 0u), 0u, 0u))), (true ? read_val : _GLF_IDENTITY(_GLF_FUZZED(write_val), ~ _GLF_IDENTITY((~ (_GLF_FUZZED(write_val))), 1u * ((~ (_GLF_FUZZED(write_val)))))))), (false ? _GLF_FUZZED(read_val) : _GLF_IDENTITY(_GLF_IDENTITY(read_val, uint(uvec4(read_val, _GLF_IDENTITY(1u, (1u) | 0u), 0u, 0u))), (true ? read_val : _GLF_IDENTITY(_GLF_FUZZED(write_val), ~ _GLF_IDENTITY((~ (_GLF_FUZZED(write_val))), 1u * ((~ (_GLF_FUZZED(write_val)))))))))), 0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 0u | (0u)))))))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_val, uint(uvec4(read_val, _GLF_IDENTITY(1u, (1u) | 0u), 0u, 0u))), (true ? read_val : _GLF_IDENTITY(_GLF_FUZZED(write_val), ~ (~ (_GLF_FUZZED(write_val)))))), 0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) ^ 0u))))))))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_val, uint(uvec4(read_val, _GLF_IDENTITY(1u, (1u) | 0u), 0u, 0u))), (true ? read_val : _GLF_IDENTITY(_GLF_FUZZED(write_val), ~ (~ (_GLF_FUZZED(write_val)))))), 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), ~ (~ (0u | (0u)))))))))))))), (true ? _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_val, uint(uvec4(read_val, _GLF_IDENTITY(1u, (1u) | 0u), 0u, 0u))), (true ? read_val : _GLF_IDENTITY(_GLF_FUZZED(write_val), ~ (~ (_GLF_FUZZED(write_val)))))), 0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, max(0u, 0u)))))))), max(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_val, uint(_GLF_IDENTITY(uvec4(read_val, _GLF_IDENTITY(1u, (1u) | 0u), 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec4(read_val, _GLF_IDENTITY(1u, (1u) | 0u), 0u, 0u), max(uvec4(_GLF_IDENTITY(read_val, min(read_val, read_val)), _GLF_IDENTITY(1u, (1u) | 0u), 0u, 0u), uvec4(read_val, _GLF_IDENTITY(1u, (1u) | 0u), 0u, 0u)))))))), (_GLF_IDENTITY(true ? read_val : _GLF_IDENTITY(_GLF_FUZZED(write_val), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(write_val), max(_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_IDENTITY(_GLF_FUZZED(write_val), max(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val)))) | (_GLF_FUZZED(write_val))), _GLF_FUZZED(write_val)))))), max(_GLF_IDENTITY(true ? read_val : _GLF_IDENTITY(_GLF_FUZZED(write_val), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(write_val), max(_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_IDENTITY(_GLF_FUZZED(write_val), max(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val)))) | (_GLF_FUZZED(write_val))), _GLF_FUZZED(write_val)))))), max(true ? read_val : _GLF_IDENTITY(_GLF_FUZZED(write_val), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED(write_val), max(_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_IDENTITY(_GLF_FUZZED(write_val), max(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val)))) | (_GLF_FUZZED(write_val))), _GLF_FUZZED(write_val)))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED(write_val), max(_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_IDENTITY(_GLF_FUZZED(write_val), max(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val)))) | (_GLF_FUZZED(write_val))), _GLF_FUZZED(write_val)))), uint(uvec3(~ (_GLF_IDENTITY(_GLF_FUZZED(write_val), max(_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_IDENTITY(_GLF_FUZZED(write_val), max(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val)))) | (_GLF_FUZZED(write_val))), _GLF_FUZZED(write_val)))), 0u, 0u))), ~ (_GLF_IDENTITY(_GLF_FUZZED(write_val), max(_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_IDENTITY(_GLF_FUZZED(write_val), max(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val)))) | (_GLF_FUZZED(write_val))), _GLF_FUZZED(write_val)))))))), true ? read_val : _GLF_IDENTITY(_GLF_FUZZED(write_val), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(write_val), max(_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_IDENTITY(_GLF_FUZZED(write_val), max(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val)))) | (_GLF_FUZZED(write_val))), _GLF_FUZZED(write_val)))))))), true ? read_val : _GLF_IDENTITY(_GLF_FUZZED(write_val), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(write_val), max(_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_IDENTITY(_GLF_FUZZED(write_val), max(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val)))) | (_GLF_FUZZED(write_val))), _GLF_FUZZED(write_val)))))))))), 0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 0u | (0u)))))), max(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_val, uint(uvec4(read_val, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | 0u)) | 0u), 0u, 0u))), (_GLF_IDENTITY(true, _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, true && (_GLF_IDENTITY((true) && true, ! (! ((true) && true)))))) && (true)) ? read_val : _GLF_IDENTITY(_GLF_FUZZED(write_val), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_IDENTITY(_GLF_FUZZED(write_val), (115379u & 0u) | (_GLF_FUZZED(write_val)))) - 0u)))))), 0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 0u | (0u)))), clamp(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 0u | (0u)))), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 0u | (0u)))), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 0u | (0u)))))), (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 0u | (0u))))) | 0u))), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, uint(uvec4(read_val, _GLF_IDENTITY(1u, (1u) | 0u), 0u, 0u))), (true ? read_val : _GLF_IDENTITY(_GLF_FUZZED(write_val), ~ _GLF_IDENTITY((~ (_GLF_FUZZED(write_val))), 1u * ((_GLF_IDENTITY(~ (_GLF_FUZZED(write_val)), (~ (_GLF_FUZZED(write_val))) >> 0u))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(read_val) : _GLF_IDENTITY(_GLF_IDENTITY(read_val, uint(uvec4(read_val, _GLF_IDENTITY(1u, (1u) | 0u), 0u, 0u))), (true ? read_val : _GLF_IDENTITY(_GLF_FUZZED(write_val), ~ _GLF_IDENTITY((~ (_GLF_FUZZED(write_val))), 1u * ((~ (_GLF_FUZZED(write_val)))))))), (false ? _GLF_FUZZED(read_val) : _GLF_IDENTITY(_GLF_IDENTITY(read_val, uint(uvec4(read_val, _GLF_IDENTITY(1u, (1u) | 0u), 0u, 0u))), (true ? read_val : _GLF_IDENTITY(_GLF_FUZZED(write_val), ~ _GLF_IDENTITY((~ (_GLF_FUZZED(write_val))), 1u * ((~ (_GLF_FUZZED(write_val))))))))) - 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 0u | (0u)))))))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_val, uint(uvec4(read_val, _GLF_IDENTITY(1u, (1u) | 0u), 0u, 0u))), (true ? read_val : _GLF_IDENTITY(_GLF_FUZZED(write_val), ~ (~ (_GLF_FUZZED(write_val)))))), 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u | (0u))))) | (_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) ^ 0u))))))))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_val, uint(uvec4(read_val, _GLF_IDENTITY(1u, (1u) | 0u), 0u, 0u))), (true ? read_val : _GLF_IDENTITY(_GLF_FUZZED(write_val), ~ (~ (_GLF_FUZZED(write_val)))))), 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), ~ (~ (0u | (0u)))))))))))))) : _GLF_FUZZED(workgroup_size))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)))))
  return;
}
