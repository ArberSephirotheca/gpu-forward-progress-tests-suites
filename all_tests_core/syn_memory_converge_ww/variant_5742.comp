#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_12 {
 uvec3 _f0;
 mat3x2 _f1;
 vec3 _f2;
 vec3 _f3;
 int _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_13 {
 uint _f0;
 _GLF_struct_12 _f1;
} ;

struct _GLF_struct_10 {
 mat4x3 _f0;
 mat4x2 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_11 {
 _GLF_struct_10 _f0;
} ;

struct _GLF_struct_14 {
 ivec3 _f0;
 mat4 _f1;
 _GLF_struct_11 _f2;
 uint workgroup_base;
 _GLF_struct_13 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_9 {
 uint subgroup_id;
 int _f0;
} ;

struct _GLF_struct_6 {
 mat4x3 _f0;
 ivec3 _f1;
 int _f2;
 uvec4 _f3;
 mat4x3 _f4;
 bool _f5;
} ;

struct _GLF_struct_7 {
 _GLF_struct_6 _f0;
 uint workgroup_size;
} ;

struct _GLF_struct_4 {
 mat2 _f0;
} ;

struct _GLF_struct_3 {
 vec4 _f0;
 uvec4 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_2 {
 mat4 _f0;
 mat3x4 _f1;
 mat3x2 _f2;
 uvec4 _f3;
 bvec2 _f4;
 mat3x2 _f5;
 uint _f6;
} ;

struct _GLF_struct_5 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_4 _f2;
} ;

struct _GLF_struct_0 {
 mat2x3 _f0;
 mat4x3 _f1;
 uint _f2;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
 uvec4 _f1;
 _GLF_struct_0 _f2;
 float _f3;
} ;

struct _GLF_struct_8 {
 _GLF_struct_1 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_7 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_basenum_workgroup;
 uvec3 GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_base;
 GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_basenum_workgroup.xyz = GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_base;
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged4_0_1_13_1_1_8_2_1_17_3_1_13num_workgroupread_valsubgroup_local_idsubgroup_size;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(gl_SubgroupID, 1);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_basenum_workgroup.xyz.y = subgroup_size;
 GLF_merged4_0_1_13_1_1_8_2_1_17_3_1_13num_workgroupread_valsubgroup_local_idsubgroup_size.w = GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_basenum_workgroup.xyz.y;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_basenum_workgroup.xyz.x = subgroup_local_id;
 GLF_merged4_0_1_13_1_1_8_2_1_17_3_1_13num_workgroupread_valsubgroup_local_idsubgroup_size.z = GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_basenum_workgroup.xyz.x;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_basenum_workgroup.w = num_workgroup;
 GLF_merged4_0_1_13_1_1_8_2_1_17_3_1_13num_workgroupread_valsubgroup_local_idsubgroup_size.x = GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_basenum_workgroup.w;
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_1(mat3(1.0), uvec4(1u), _GLF_struct_0(mat2x3(1.0), mat4x3(1.0), 1u), 1.0), _GLF_struct_5(_GLF_struct_2(mat4(1.0), mat3x4(1.0), mat3x2(1.0), uvec4(1u), bvec2(true), mat3x2(1.0), 1u), _GLF_struct_3(vec4(1.0), uvec4(1u), mat2x4(1.0)), _GLF_struct_4(mat2(1.0))), _GLF_struct_7(_GLF_struct_6(mat4x3(1.0), ivec3(1), 1, uvec4(1u), mat4x3(1.0), true), gl_WorkGroupSize.x));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(ivec3(1), mat4(1.0), _GLF_struct_11(_GLF_struct_10(mat4x3(1.0), mat4x2(1.0), mat3x4(1.0))), _GLF_struct_replacement_8._f2.workgroup_size * workgroup_id, _GLF_struct_13(1u, _GLF_struct_12(uvec3(1u), mat3x2(1.0), vec3(1.0), vec3(1.0), 1, bvec4(true))), vec2(1.0));
 GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_basenum_workgroup.xyz.z = _GLF_struct_replacement_14.workgroup_base;
 uint virtual_gid = GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_basenum_workgroup.xyz.z + _GLF_struct_replacement_9.subgroup_id * GLF_merged4_0_1_13_1_1_8_2_1_17_3_1_13num_workgroupread_valsubgroup_local_idsubgroup_size.w + GLF_merged4_0_1_13_1_1_8_2_1_17_3_1_13num_workgroupread_valsubgroup_local_idsubgroup_size.z;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 GLF_merged4_0_1_13_1_1_8_2_1_17_3_1_13num_workgroupread_valsubgroup_local_idsubgroup_size.y = read_val;
 buf[virtual_gid] = uint(subgroupAllEqual(GLF_merged4_0_1_13_1_1_8_2_1_17_3_1_13num_workgroupread_valsubgroup_local_idsubgroup_size.y));
}
