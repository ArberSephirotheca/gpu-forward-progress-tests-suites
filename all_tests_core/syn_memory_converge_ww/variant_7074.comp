#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base;
 uvec4 GLF_merged2_0_3_63_3_1_8GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizeread_val;
 uvec3 GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_size;
 GLF_merged2_0_3_63_3_1_8GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizeread_val.xyz = GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_size;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x = subgroup_id;
 GLF_merged2_0_3_63_3_1_8GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizeread_val.xyz.y = GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged2_0_3_63_3_1_8GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizeread_val.xyz.z = _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u);
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y = workgroup_base;
 uint virtual_gid = GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged2_0_3_63_3_1_8GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizeread_val.xyz.y * GLF_merged2_0_3_63_3_1_8GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizeread_val.xyz.z + subgroup_local_id;
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 GLF_merged2_0_3_63_3_1_8GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizeread_val.w = read_val;
 GLF_merged2_0_3_63_3_1_8GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizeread_val.xyz.x = GLF_merged2_0_3_63_3_1_8GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizeread_val.w;
 buf[virtual_gid] = uint(subgroupAllEqual(GLF_merged2_0_3_63_3_1_8GLF_merged3_0_1_8_1_1_11_2_1_13read_valsubgroup_idsubgroup_sizeread_val.xyz.x));
}
