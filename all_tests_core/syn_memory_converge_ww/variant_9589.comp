#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_13 {
 vec2 _f0;
 mat2x3 _f1;
 mat2x3 _f2;
 int _f3;
 bvec4 _f4;
 mat4 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_12 {
 uvec3 _f0;
 float _f1;
 vec3 _f2;
 mat2x4 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_14 {
 _GLF_struct_12 _f0;
 bvec2 _f1;
 _GLF_struct_13 _f2;
} ;

struct _GLF_struct_11 {
 vec4 _f0;
 ivec3 _f1;
 uint _f2;
 vec2 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_10 {
 uvec2 _f0;
} ;

struct _GLF_struct_8 {
 mat2x3 _f0;
 ivec3 _f1;
 float _f2;
 uvec2 _f3;
 float _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_7 {
 int _f0;
} ;

struct _GLF_struct_6 {
 mat3x4 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_5 {
 mat4x3 _f0;
 ivec2 _f1;
 vec4 _f2;
 mat4 _f3;
 vec3 _f4;
 uint read_val;
 uint _f5;
} ;

struct _GLF_struct_9 {
 _GLF_struct_5 _f0;
 vec2 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_7 _f3;
 _GLF_struct_8 _f4;
 uvec3 _f5;
 int _f6;
} ;

struct _GLF_struct_15 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
 _GLF_struct_11 _f2;
 mat3x4 _f3;
 uint _f4;
 _GLF_struct_14 _f5;
} ;

struct _GLF_struct_2 {
 bvec3 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_1 {
 mat2 _f0;
 int _f1;
 mat4x3 _f2;
 bool _f3;
} ;

struct _GLF_struct_0 {
 mat3 _f0;
 uint subgroup_size;
} ;

struct _GLF_struct_3 {
 mat3x2 _f0;
 _GLF_struct_0 _f1;
 bool _f2;
 _GLF_struct_1 _f3;
 vec4 _f4;
 _GLF_struct_2 _f5;
} ;

struct _GLF_struct_4 {
 vec3 _f0;
 _GLF_struct_3 _f1;
 vec2 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(vec3(1.0), _GLF_struct_3(mat3x2(1.0), _GLF_struct_0(mat3(1.0), gl_SubgroupSize), true, _GLF_struct_1(mat2(1.0), 1, mat4x3(1.0), true), vec4(1.0), _GLF_struct_2(bvec3(true), bvec2(true))), vec2(1.0));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * _GLF_struct_replacement_4._f1._f1.subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_struct_9(_GLF_struct_5(mat4x3(1.0), ivec2(1), vec4(1.0), mat4(1.0), vec3(1.0), atomicLoad(write_val, 4, 64, 0), 1u), vec2(1.0), _GLF_struct_6(mat3x4(1.0), mat4x3(1.0)), _GLF_struct_7(1), _GLF_struct_8(mat2x3(1.0), ivec3(1), 1.0, uvec2(1u), 1.0, uvec3(1u)), uvec3(1u), 1), _GLF_struct_10(uvec2(1u)), _GLF_struct_11(vec4(1.0), ivec3(1), 1u, vec2(1.0), mat2x3(1.0)), mat3x4(1.0), 1u, _GLF_struct_14(_GLF_struct_12(uvec3(1u), 1.0, vec3(1.0), mat2x4(1.0), mat2x3(1.0)), bvec2(true), _GLF_struct_13(vec2(1.0), mat2x3(1.0), mat2x3(1.0), 1, bvec4(true), mat4(1.0), ivec2(1))));
 buf[virtual_gid] = uint(subgroupAllEqual(_GLF_struct_replacement_15._f0._f0.read_val));
}
