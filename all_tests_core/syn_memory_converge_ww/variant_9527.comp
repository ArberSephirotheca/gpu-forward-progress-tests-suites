#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bool(bool(bool(_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0))), injectionSwitch.x)) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))), true, true, true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(false, (false) && true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), false || (_GLF_IDENTITY(bool(bvec3(false, true, false)), false || (bool(bvec3(false, true, false))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), true && (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(abs(vec2(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-5.8)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(59.89, 37.98)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), (_GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), (true ? (injectionSwitch) - vec2(0.0, 0.0) : _GLF_FUZZED(vec2(8.4, 2.7))))) - vec2(0.0, 0.0))))).x, float(vec3(injectionSwitch.x, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1202.5889))), 1.0))))), 1.0, 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, 1.0, 1.0)), min(float(vec3(injectionSwitch.x, 1.0, 1.0)), float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 1.0), min(vec3(injectionSwitch.x, 1.0, 1.0), vec3(injectionSwitch.x, 1.0, 1.0))))))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 1.0)))))), float(mat4x3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0, 1.0))), _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 1.0)))), 0.0 + (1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 1.0)))))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), sqrt(1.0))), abs(1.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-38.22)), float(0.0), bool(true))))), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, tan(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, tan(0.0)))), 0.0, abs(1.0))))), 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(66.95)), float(float(vec4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(mod(901.051, 6.8)) : 1.0)), (false ? _GLF_FUZZED(refract(-39.46, -6.0, 4.8)) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(mod(901.051, 6.8)) : 1.0)))), 1.0), mix(vec3(_GLF_FUZZED((6.9 - -147.645)), (vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(mod(901.051, 6.8)) : 1.0)), 1.0))[1], _GLF_FUZZED(-817.204)), vec3((vec3(injectionSwitch.x, _GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(mod(901.051, 6.8)), (_GLF_FUZZED(mod(901.051, 6.8))) - determinant(mat2(0.0, 1.0, 0.0, 0.0))) : 1.0)), 1.0))[0], _GLF_FUZZED(-30.00), (vec3(injectionSwitch.x, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(mod(901.051, 6.8)) : 1.0)), 1.0))[2]), bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), 1.0, 1.0, 1.0))), bool(true)))))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-4.0, 1345.3695)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y, injectionSwitch.y))) - 0.0)), _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec3(! (false), _GLF_IDENTITY(true, ! (! (true))), true)))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, false)))))) && (false))), (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(! (false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (false), bool(bool(! (false)))))), bool(bvec4(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bool(! (false)))))), false, true, false)))), ! (! (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (false), bool(bool(! (false)))))), bool(bvec4(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bool(! (false)))))), false, true, false)))))))))))), (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(30.03)), float(_GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), (min(injectionSwitch.y, injectionSwitch.y)) / exp(0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) - 0.0, mix(float(_GLF_FUZZED(8223.0400)), float(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(30.03)), float(_GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), (min(injectionSwitch.y, injectionSwitch.y)) / exp(0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) - 0.0, (true ? (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(30.03)), float(_GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), (min(injectionSwitch.y, injectionSwitch.y)) / exp(0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) - 0.0 : _GLF_FUZZED(-8.7)))), bool(true))))), _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec3(! _GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true)))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bool(! (false))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (false), bool(bool(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3((false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))))), bool(bvec4(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (false), bool(bool(! (false)))))), ! (! (bool((_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), false, true, false))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) && true))), bool(bvec3(! (false), _GLF_IDENTITY(true, ! (! (true))), true)))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bool(! (false))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), bool(bvec3(! _GLF_IDENTITY((false), ((false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), false || (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (! (((false)) && true)))), bool(bvec3(! _GLF_IDENTITY((false), ((false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))), bool(bvec4(bool((_GLF_IDENTITY(! (false), bool(bool(! (false)))))), false, true, false)))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (! (false)) && true))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, true), true)))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bool(! (false))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (false), bool(bool(! (_GLF_IDENTITY(false, (false) && true))))))), bool(bvec4(bool((_GLF_IDENTITY(! (false), bool(bool(! (false)))))), false, true, false)))))))))))), (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, log(1.0), 1.0, 1.0, 1.0))) > injectionSwitch.y))))) || false)) && true)))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1]))) - vec2(0.0, 0.0)).x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 1.0))))), 1.0, 1.0, 1.0))) > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY((bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.3)), float(injectionSwitch.y), bool(true))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.3)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), (bool(true)) || false)) && true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.3)), float(injectionSwitch.y), bool(true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), true, true, false)))), _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), bool(bool(! (false)))))), _GLF_IDENTITY(true, ! (! (true))) && ((! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false)))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))) || false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)))), mix(float(_GLF_FUZZED(5.2)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)), 1.0 * (injectionSwitch.x))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)))))))) && true, _GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))) || false))) || (_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), (_GLF_IDENTITY(true && (true), false || (true && (true)))) || false))), ! (! ((_GLF_IDENTITY(true, true && (true)))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true))))), (bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))) && true)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true))))), (bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))) && true)))))), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true))))), (bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))) && true)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true))))), (bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))) && true))))))))))))) && (_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), true && (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))), false || ((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))), bool(bool(! (false)))))))), false || ((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))) || false))), (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY((bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), ! (! (_GLF_IDENTITY((false), ((false)) || false))))))))))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), false || (((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! ((bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.6)), bool(false))) > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false))), bool(bool(! (false))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(true && (_GLF_IDENTITY((false), ! (! ((false))))), (true && (_GLF_IDENTITY((false), ! (! ((false)))))) && true)))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), bool(bool(! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(! (false), bool(bool(! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))), bool(_GLF_IDENTITY(bool((! (_GLF_IDENTITY(! (false), bool(bool(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))), (bool((! (_GLF_IDENTITY(! (false), bool(bool(! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))) || false))), true)), (bool(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(! (false), bool(bool(! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))), bool(_GLF_IDENTITY(bool((! (_GLF_IDENTITY(! (false), bool(bool(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))), (bool((! (_GLF_IDENTITY(! (false), bool(bool(! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))) || false))), true))) || false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))), ((! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))))) && true))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), true && (bool(_GLF_IDENTITY(false, true && (false)))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), true && (bool(_GLF_IDENTITY(false, true && (false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true)))))))))) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, (false) || false))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), true && (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))))) && true), true, false), false))))))), (injectionSwitch.x > injectionSwitch.y))))))))) && _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7.2))), _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-371.684))), injectionSwitch.y))))) && true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))), _GLF_IDENTITY(false, (false) || false) || ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), true && (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))), false || ((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))), _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), (injectionSwitch.x < injectionSwitch.y)), false, false))) || false))), (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY((bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! _GLF_IDENTITY((false), ((false)) || false)))))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), min(vec4(injectionSwitch, 0.0, 1.0), vec4(injectionSwitch, 0.0, 1.0))))).x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! ((bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.6)), bool(false))) > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), ! (_GLF_IDENTITY(! (((false))), bool(bvec4(! (((false))), true, false, true)))))))))), ! (! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(true && (_GLF_IDENTITY((false), ! (! ((false))))), (true && (_GLF_IDENTITY((false), ! (! ((false)))))) && true)))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true)))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true)))))))), false || (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true))))))))))), false || (bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true)))))))), false || (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true)))))))))))))))))))) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec2((_GLF_IDENTITY(false, (false) || false)), true)))))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))) && true), true, false), false))))))), (injectionSwitch.x > injectionSwitch.y))))))))) && _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(-7.2), max(_GLF_IDENTITY(_GLF_FUZZED(-7.2), (_GLF_FUZZED(-7.2)) / determinant(mat2(1.0, 0.0, 0.0, 1.0))), _GLF_FUZZED(-7.2))))), _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-371.684))), injectionSwitch.y))))) && true, ! (! (_GLF_IDENTITY((bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))), false || ((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))), false || _GLF_IDENTITY(((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! _GLF_IDENTITY((false), ! (! ((false)))))))))))), false || (_GLF_IDENTITY(((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! _GLF_IDENTITY((false), ! (! ((false)))))))))))), true && (((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! _GLF_IDENTITY((false), ! (! ((false))))))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))) || false))), (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY((bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! _GLF_IDENTITY((false), ((false)) || false)))))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! ((bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.6)), bool(_GLF_IDENTITY(false, false || (false))))) > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))) || false)))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(true && (_GLF_IDENTITY((false), ! (! ((false))))), (true && _GLF_IDENTITY((_GLF_IDENTITY((false), ! (! ((false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY((false), ! (! ((false))))), ((_GLF_IDENTITY((false), ! (! ((false)))))) || false)))) && true)))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && _GLF_IDENTITY((_GLF_IDENTITY((false), ! (! ((false))))), ((_GLF_IDENTITY((false), ! (! ((false)))))) && true)))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true)))), bool(bool(_GLF_IDENTITY(! (false), bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true))))))))))))))) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, (false) || false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, (false) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, (false) || false)))))))))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))) && true), true, false), false))))))), (injectionSwitch.x > injectionSwitch.y))))))))) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false || (true), false, false), bvec3(bvec4(bvec3(false || (true), false, false), true)))), (bool(_GLF_IDENTITY(bvec3(false || (true), false, false), bvec3(bvec4(bvec3(false || (true), false, false), true))))) && true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7.2))), _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-371.684))), injectionSwitch.y))))) && true))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bool(bvec2(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true)))), _GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))), false || ((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (_GLF_IDENTITY(false, (false) || false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))), false || ((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))) || false))), (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY((bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! _GLF_IDENTITY((false), ((false)) || false)))))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! ((bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.6)), bool(false))) > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false)))))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY((false), ! (! ((false))))), (true && (_GLF_IDENTITY((false), ! (! ((false)))))) && true), (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), ! (! ((false))))), (true && (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! (! (bool(bool(_GLF_IDENTITY((false), ! (! ((false))))))))))))))) && true)) && true)))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! ((false)))), bool(bvec4(bool((! ((false)))), true, false, true)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! ((false)))), bool(bvec4(bool((! ((false)))), true, false, true)))), bool(bvec3(bool(_GLF_IDENTITY(bool((! ((false)))), bool(bvec4(bool((! ((false)))), true, false, true)))), true, true))))))))))), bool(bvec4((_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! ((false)))), bool(bvec4(bool((! ((false)))), true, false, true)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! ((false)))), bool(bvec4(bool((! ((false)))), true, false, true)))), bool(bvec3(bool(_GLF_IDENTITY(bool((! ((false)))), bool(bvec4(bool((! ((false)))), true, false, true)))), true, true))))))))))), false, false, true))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true)))))))))) && true), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) || false))), (! ((_GLF_IDENTITY(false, (false) || false)))) && true))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))) && true), true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) || false))), (! ((_GLF_IDENTITY(false, (false) || false)))) && true))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))) && true), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) || false))), (! ((_GLF_IDENTITY(false, (false) || false)))) && true))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) || false))), (! ((_GLF_IDENTITY(false, (false) || false)))) && true))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))) && true), true, false), false))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) || false))), (! ((_GLF_IDENTITY(false, (false) || false)))) && true))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))) && true), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) || false))), (! ((_GLF_IDENTITY(false, (false) || false)))) && true))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) || false))), (! ((_GLF_IDENTITY(false, (false) || false)))) && true))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))) && true), true, false), false))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) || false))), (! ((_GLF_IDENTITY(false, (false) || false)))) && true))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))) && true), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) || false))), (! ((_GLF_IDENTITY(false, (false) || false)))) && true))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) || false))), (! ((_GLF_IDENTITY(false, (false) || false)))) && true))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))) && true), true, false), false))))))), false))), false))))), false))))))), (injectionSwitch.x > injectionSwitch.y))))))))) && _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7.2))), _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), min(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(float(mat3x2(max(injectionSwitch.y, injectionSwitch.y), cos(0.0), 1.0, 0.0, 1.0, 1.0)), float(mat4x2(float(mat3x2(max(injectionSwitch.y, injectionSwitch.y), cos(0.0), 1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), max(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y)))))) : _GLF_FUZZED(-371.684))), injectionSwitch.y))))) && true, ! (! (_GLF_IDENTITY((bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))), false || ((_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), bool(bvec3((! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), false, false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))), false || ((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))) || false))), (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY((bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (false), true && (! (false))))), bool(bool(! _GLF_IDENTITY((false), ((false)) || false)))))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! ((bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.6)), bool(false)), 1.0 * (_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.6)), bool(false)), max(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.6)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.6)), bool(false))))))) > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), ! (! ((! ((false)))))))))), ! (! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY((false), ! (! ((false))))), ! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY((false), ! (! ((false))))), true && (true && (_GLF_IDENTITY((false), ! (! ((false)))))))))), (true && (_GLF_IDENTITY((false), ! (! ((false)))))) && true)))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), true && (_GLF_IDENTITY((! ((false))), ((! ((false)))) && true))))) && true)))))))))) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, (false) || false))))))))), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, (false) || false))))))))), false, true, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec4((! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, (false) || false))))))))), false, true, false)), false), bvec2(bvec4(bvec2(bool(bvec4((! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, (false) || false))))))))), false, true, false)), false), true, false)))))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))) && true), true, false), false))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))))))) && _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-111.800)), float(injectionSwitch.x), bool(true))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7.2))), _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(-371.684))), injectionSwitch.y))))) && true))), false, false)))))))))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0])), injectionSwitch[1]))) * vec2(1.0, 1.0)), (injectionSwitch) + vec2(0.0, 0.0)).x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))) || false))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false)) || ((injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(write_val) : workgroup_id)), (workgroup_size * workgroup_id) >> 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (false ? _GLF_FUZZED(3127.7535) : injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), false)), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat4(1.0) * (mat3x4(injectionSwitch, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), mat3x4(mat4(mat4(1.0) * (mat3x4(injectionSwitch, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-647.383))))), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat4(1.0) * (mat3x4(injectionSwitch, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0)), mat3x4(mat4(mat4(1.0) * (mat3x4(injectionSwitch, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec3(bvec2(! (false), true), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec3(bvec2(! (false), true), true)))))))))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6.5, 8158.7381)))))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)))).y)))))) || false), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))), clamp(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))), (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))), false, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))))))), false))))))), true))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (false ? _GLF_FUZZED(mod(vec2(4.0, -425.918), vec2(-2054.5523, 7392.4865))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(write_val, uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (! (_GLF_IDENTITY(true, ! (! (true))))) && true))) ? _GLF_IDENTITY(virtual_gid, 1u * (virtual_gid)) : _GLF_FUZZED(uint(-0.8)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u + (_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(num_workgroup))))), (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))) << 0u), virtual_gid, _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))), ~ (_GLF_IDENTITY(~ ((virtual_gid)), _GLF_IDENTITY((~ ((virtual_gid))) * _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_size)) : _GLF_IDENTITY(1u, (1u) | (1u)))), max((~ ((virtual_gid))) * 1u, (~ ((virtual_gid))) * _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u))), 0u ^ (_GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u)))))))))) >> 0u)))), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) ^ 0)) ^ 0)) << 0), 0);
 uint read_val = atomicLoad(write_val, 4, _GLF_IDENTITY(64, clamp(64, 64, 64)), 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
}
