#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), false)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((7800.5997 / -92.43)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.9)), bvec2(true, false))).y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ! (! ((! (false))))), _GLF_IDENTITY(true && _GLF_IDENTITY((! (! _GLF_IDENTITY((false), ((false)) || false))), false || ((_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (false)), false || ((! (false)))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY((! (false)), false || ((! (false)))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), false || ((false))))))), false || (_GLF_IDENTITY((! (false)), true && ((! (false)))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY((! (false)), false || ((! (false)))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), (true && _GLF_IDENTITY((! (! _GLF_IDENTITY((false), ((false)) || false))), false || ((_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (false)), false || ((! (false)))), true, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false, false || (false)) || (bool(bvec4(_GLF_IDENTITY((! (false)), false || ((! (false)))), true, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (bool(bvec4(_GLF_IDENTITY((! (false)), false || ((! (false)))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), false || ((false))))))), false || (_GLF_IDENTITY((! (false)), true && ((! (false)))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY((! (false)), false || ((! (false)))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) || false)))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), (bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true))))))))))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(0.0), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(sqrt(1.0), 1.0, 0.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-740.893)), bool(false))), 1.0), vec3(sqrt(1.0), 1.0, 0.0)))))).y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 0.0)), (vec2(mat2(injectionSwitch, 1.0, 0.0))) * vec2(1.0, 1.0))).y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)), true, false)))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)))) && true))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), false, true, true)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), ((1u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (false ? _GLF_FUZZED(workgroup_base) : 2u)))))) ^ 0u) >> _GLF_IDENTITY(uint(2u), uint(2u)))), clamp(uvec2(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), ~ (~ ((1u << _GLF_IDENTITY(uint(2u), uint(2u))))))) - 0u) >> _GLF_IDENTITY(uint(2u), uint(2u))), clamp((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), ~ (~ ((1u << _GLF_IDENTITY(uint(2u), uint(2u))))))) - 0u) >> _GLF_IDENTITY(uint(2u), uint(2u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u)))) * 1u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u)))) * 1u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), min(uint(uvec2(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u)))) * 1u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(uvec2(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u)))) * 1u), uint(_GLF_ONE(1.0, injectionSwitch.y))))))) + 0u)), ~ (~ ((1u << _GLF_IDENTITY(uint(2u), uint(2u))))))) - _GLF_IDENTITY(0u, 0u ^ (0u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), _GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), ~ (~ ((1u << _GLF_IDENTITY(uint(2u), uint(2u))))))) - 0u) >> _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u))))), min((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), (_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), uint(2u)), (1u << _GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u))))), ~ (~ (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(_GLF_IDENTITY(uint(2u), 0u + (_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))))), uint(2u), uint(2u))), uint(2u))), uint(uint(_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(_GLF_IDENTITY(uint(2u), 0u + (_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))))), uint(2u), uint(2u))), uint(2u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(_GLF_IDENTITY(uint(2u), 0u + (_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))))), uint(2u), uint(2u))), uint(2u))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(_GLF_IDENTITY(uint(2u), 0u + (_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))))), uint(2u), uint(2u))), uint(2u)))) * 1u)) | 0u)))))))) - 0u) >> _GLF_IDENTITY(uint(2u), uint(2u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), ~ (~ ((1u << _GLF_IDENTITY(uint(2u), uint(2u))))))) - 0u) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))), uvec2(subgroup_size, _GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(2u), uint(2u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(2u), uint(2u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (_GLF_IDENTITY(uint(2u), uint(2u)))))) ^ 0u)))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(_GLF_IDENTITY(uvec4(2u, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (uvec4(2u, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), uint(2u))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(2u), uint(2u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(2u), uint(2u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))), uint(2u))), uint(2u)))))) ^ 0u)))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(_GLF_IDENTITY(uvec4(2u, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (uvec4(2u, 1u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))))))))), uint(2u))), (((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(2u), uint(2u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(2u), uint(2u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))), uint(2u))), uint(2u)))))) ^ 0u)))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(_GLF_IDENTITY(uvec4(2u, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (uvec4(2u, 1u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))))))))), uint(2u)))) | 0u)) * 1u)), uvec2(subgroup_size, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), (uint(2u)) - 0u)) | (uint(2u))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)), (_GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)), ((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))) | 0u)) | ((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))) | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)), clamp((_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), min(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))))))) | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))))) | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, max(0u, 0u)))), 0u, 0u)) + (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))))))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), 0u + (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, 1u * (0u))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) << 0u))) + _GLF_IDENTITY(1, min(1, 1))))))) % subgroup_size), 0u | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))) + (_GLF_IDENTITY((subgroup_local_id + 1), 0u + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)))))), ((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))))))) | ((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))))))))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | (1))))), 0u + (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))))))) % subgroup_size), max(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), 0u + (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))))))) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), 0u + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)), min((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)))))), ((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1))))))) | (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)))))), uint(uvec2((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)))))), 0u))))))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))))) + 0u))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), 0u + (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))) + _GLF_IDENTITY(1, min(1, 1))))))) % subgroup_size), 0u | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) * subgroup_size))) + (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)) + (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), (min(1, 1)) << 0))))))) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | (1))))), 0u + (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))))))) % subgroup_size), max(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), 0u + (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))))))) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), 0u + (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))))) + 0u)), ~ (~ ((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) * subgroup_size))) + (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)) + (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), (min(1, 1)) << 0))))))) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | (1))))), 0u + (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))))))) % subgroup_size), max(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), 0u + (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))))))) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), 0u + (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))))) + 0u))))))) ^ 0u)) - 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), (bool(bool((! (false))))) || false))), true)), false))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, sin(0.0), 0.0, 0.0, sqrt(1.0)))))), bool(_GLF_IDENTITY(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, false)))))))) && true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) && true)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) && true)), true && (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(sin(vec2(0.0, 0.0)))).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(sin(vec2(0.0, 0.0)))).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(sin(vec2(0.0, 0.0)))).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (1)))))))), uint(uvec3(uint(1), 1u, 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), ~ (~ (uint(1)))))), clamp(_GLF_IDENTITY(uint(1), max(_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))), _GLF_IDENTITY(uint(1), ~ (~ (uint(1)))))), _GLF_IDENTITY(uint(1), max(_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))), _GLF_IDENTITY(uint(1), ~ (~ (uint(1)))))), _GLF_IDENTITY(uint(1), max(_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))), _GLF_IDENTITY(uint(1), ~ (_GLF_IDENTITY(~ (uint(1)), (false ? _GLF_FUZZED(virtual_gid) : ~ (uint(1))))))))))) + 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), max(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))) | 0u)), (uint(1)) | (uint(_GLF_IDENTITY(1, 0 ^ (1))))), ~ _GLF_IDENTITY((~ (uint(1))), min((~ (uint(1))), (~ (uint(1)))))))), max(_GLF_IDENTITY(uint(1), max(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))) | 0u)), (uint(1)) | (uint(_GLF_IDENTITY(1, 0 ^ (1))))), ~ _GLF_IDENTITY((~ (uint(1))), min((~ (uint(1))), (~ (uint(1)))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), max(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))) | 0u)), (uint(1)) | (uint(_GLF_IDENTITY(1, 0 ^ (1))))), ~ _GLF_IDENTITY((~ (uint(1))), min((~ (uint(1))), (~ (uint(1)))))))), min(_GLF_IDENTITY(uint(1), max(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))) | 0u)), (uint(1)) | (uint(_GLF_IDENTITY(1, 0 ^ (1))))), ~ _GLF_IDENTITY((~ (uint(1))), min((~ (uint(1))), (~ (uint(1)))))))), _GLF_IDENTITY(uint(1), max(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))) | 0u)), (uint(1)) | (uint(_GLF_IDENTITY(1, 0 ^ (1))))), ~ _GLF_IDENTITY((~ (uint(1))), min((~ (uint(1))), (~ (uint(1))))))))))))) + 0u) | ((_GLF_IDENTITY(uint(1), max(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) << 0u)) * 1u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(1)), 0u + ((uint(1)))), (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(1)), 0u + ((uint(1)))), (true ? ~ _GLF_IDENTITY((uint(1)), 0u + ((uint(1)))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) / 1u))))))) >> 0u)))))) + 0u))), 4, 64, 4);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), true))))))))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), false, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false)))))))), false)), false)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false))), ! (! (false))), _GLF_IDENTITY(false, true && (false)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false))), ! (! (false))), _GLF_IDENTITY(false, true && (false)), false), false))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))))), true, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))) || (_GLF_IDENTITY(false, ! (! (false)))))))))))), true, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, _GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || (false))), false)))))))))))), false, false)))))) && true))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, false || (true)), true), false))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), true && (bool(bvec3(false, false, false)))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))) && true), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))), true && (injectionSwitch.x < injectionSwitch.y))) && true), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true)))))))), false || (bool(bvec4(true, true, true, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))))), false))))))) || false), (! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))) && true)))), true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, sin(0.0), 0.0, 1.0, log(1.0), 0.0, 0.0, 1.0, 0.0))) < injectionSwitch.y)))), bool(bvec3(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))) && true), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true)))))))), false || (bool(bvec4(true, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false))))))) || false)) && true)) && true))), false, false))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), ! (! ((false))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), true))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), true && ((! (_GLF_IDENTITY(false, (false) || false))))), bool(bvec4(! (! (false)), true, false, true)))))), _GLF_IDENTITY(true && (! (! (false))), (_GLF_IDENTITY(true && (! (! (false))), bool(bvec4(true && (! (! (false))), false, false, false)))) || false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)), false)), false || (bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), false, true)), (bool(bvec3(! (false), false, true))) && true))), true && (! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))) && true))), _GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, false || (true))) || false), false), true, false))))) && (false)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))), ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, true && (false)), false), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false))))) && true))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))), ((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), true))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), bool(bvec4(! (! (false)), true, false, true)))))), true && (! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), false || (bool(bvec4(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))) && true))), _GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, false || (true)), false), true, false))))) && (false)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, true && (false)), false), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false))))) && true))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))))))) || false) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), bool(bool((! (true)))))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) || false) && (true)))))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(true, false || (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (! (true))))))))))) && true))
  return;
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), injectionSwitch.y, injectionSwitch.y))))))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true), false)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true), false))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true), false)))), false)))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true), false))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x < injectionSwitch.y)))), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x < injectionSwitch.y)))), false, false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)) * (injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.0)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.0)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y) && true))) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), true, true))), true, false))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), false, true))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(true);
  }
}
