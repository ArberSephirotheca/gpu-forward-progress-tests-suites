#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 0.0, log(1.0), 1.0, 0.0, 1.0, length(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0))).y, true)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false), false, false)), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false), false, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false), false, false), false))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false), false, false), false))))), true))))), true, true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   do
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
      }
     do
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true))))), ! (! (false))))))))))
          return;
         barrier();
        }
      }
     else
      {
      }
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (49717 & 0)); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2.8)), bool(false)))) / 1.0) > injectionSwitch.y)), true)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.0)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y), (bool(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.0)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y)) || false)))), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), _GLF_IDENTITY(_GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, true && ((false) || false))))), false || ((false) || false)))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         return;
         do
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_DEAD(false))
            barrier();
           break;
          }
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, (true) || false)), false, false)))))));
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
            }
           return;
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, true))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(acosh(56.31)) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5992.4191) : injectionSwitch.x)))) > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             else
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
          }
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), ! (! (false)))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) - 0), ~ (~ (int(5)))), _GLF_IDENTITY(int(5), (int(5)) | (int(_GLF_IDENTITY(5, (5) ^ 0)))))), max(_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), ~ (~ (_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), _GLF_IDENTITY((int(5)), ((int(5))) >> 0) >> 0)) >> 0)))), _GLF_IDENTITY(int(5), (int(_GLF_IDENTITY(_GLF_IDENTITY(5, (5) + 0), min(5, _GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(90390))))))) | (int(5))))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), ~ (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), min(_GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(int(5), (int(5)) | (int(5))))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), _GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), clamp((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), int(int((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5)))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5)))))), 0 + (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5)))))), ~ (~ (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5)))))))))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (_GLF_IDENTITY(int(5), clamp(int(5), int(5), _GLF_IDENTITY(int(5), (int(5)) * 1))))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))))))), _GLF_IDENTITY(int(5), (int(5)) | (_GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) | (5))), (_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), (int(5)) | (int(5)))) ^ (0 & 73975))) | 0)))))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), ~ (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), min(_GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(int(5), (int(5)) | (int(5))))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), _GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (int(5)), clamp(~ (int(5)), _GLF_IDENTITY(~ (int(5)), int(ivec4(~ (int(5)), 1, 0, (0 ^ 1)))), ~ (int(5))))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), clamp((~ (_GLF_IDENTITY((~ _GLF_IDENTITY((int(5)), clamp(_GLF_IDENTITY((int(5)), clamp(_GLF_IDENTITY((int(5)), max((int(5)), (int(5)))), (int(5)), (int(5)))), (int(5)), _GLF_IDENTITY((int(5)), 0 ^ ((int(5))))))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), int(int((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5)))))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), (~ (_GLF_IDENTITY((~ (int(5))), _GLF_IDENTITY((false ? _GLF_FUZZED(-40590) : (~ (int(5)))), ~ (~ ((false ? _GLF_FUZZED(-40590) : (~ (int(5)))))))))))))))), _GLF_IDENTITY(int(5), (int(5)) | (_GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) | (5))), _GLF_IDENTITY((_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(-68631)))) ^ (0 & 73975))), ((_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(-68631)))) ^ (0 & 73975)))) >> 0) | 0)))))), clamp(((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), ~ (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), min(_GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(int(5), (int(5)) | (int(5))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-40590, (true ? -40590 : _GLF_FUZZED(74635)))) : (~ (int(5))))))))), _GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), clamp((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), _GLF_IDENTITY((false ? _GLF_FUZZED(-40590) : (~ (int(5)))), ((false ? _GLF_FUZZED(-40590) : (~ (int(5))))) + 0)))), int(int((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5)))))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))))))), _GLF_IDENTITY(int(5), (int(5)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(5, 0, 0, 1), (ivec4(5, 0, 0, 1)) >> ivec4(0, 0, 0, 0))), (int(_GLF_IDENTITY(ivec4(5, 0, 0, 1), (ivec4(5, 0, 0, 1)) >> ivec4(0, 0, 0, 0)))) - 0))) | (5))), ~ (~ (int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(5, 0, 0, 1), (ivec4(5, 0, 0, 1)) >> ivec4(0, 0, 0, 0))), (int(_GLF_IDENTITY(ivec4(5, 0, 0, 1), (ivec4(5, 0, 0, 1)) >> ivec4(0, 0, 0, 0)))) - 0))) | (5)))))), (_GLF_IDENTITY(int(5), (int(5)) ^ (0 & 73975))) | 0)))))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), ~ (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), min(_GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(int(5), (int(5)) | (int(5))))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), _GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), clamp((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(_GLF_IDENTITY(5, (5) | (5))))))))), int(int((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5)))))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : _GLF_IDENTITY((~ (int(5))), (_GLF_IDENTITY((~ (int(5))), ((~ (int(5)))) | 0)) ^ 0))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(_GLF_IDENTITY(5, (5) >> (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))))))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), min((~ (_GLF_IDENTITY((~ (int(_GLF_IDENTITY(5, (5) >> (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))))))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), (~ (_GLF_IDENTITY((~ (int(_GLF_IDENTITY(5, (5) >> (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))))))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))))))))), _GLF_IDENTITY(int(5), (int(5)) | (_GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) | (5))), (_GLF_IDENTITY(int(5), (int(5)) ^ (0 & 73975))) | 0)))))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), ~ (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), min(_GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(int(5), (int(5)) | _GLF_IDENTITY((int(5)), (true ? _GLF_IDENTITY((int(5)), int(int((int(5))))) : _GLF_FUZZED((82571 % -23799))))))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), _GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), clamp((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), int(int((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5)))))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), clamp(~ _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), clamp((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), int(int((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5)))))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), clamp((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), int(int((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5)))))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), (~ _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), clamp((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), int(int((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5)))))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5)))))))))) | 0), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), clamp((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), int(int((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5)))))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))))))))), _GLF_IDENTITY(int(5), (int(5)) | (_GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) | (5))), (_GLF_IDENTITY(int(5), (int(5)) ^ _GLF_IDENTITY((0 & 73975), 0 ^ ((0 & 73975))))) | 0))))))))) | 0) ^ 0), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) | 0)), ~ (~ (int(5)))), _GLF_IDENTITY(int(5), (int(5)) | (int(5))))))), (false ? _GLF_FUZZED(-80951) : _GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, 0 ^ (5))), (int(5)) - 0), ~ (~ (int(5)))), _GLF_IDENTITY(int(5), (int(5)) | (int(_GLF_IDENTITY(5, _GLF_IDENTITY((5) ^ 0, min((5) ^ 0, (5) ^ 0)))))))), max(_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), ~ (~ (_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), _GLF_IDENTITY((int(5)), ((int(5))) >> 0) >> 0)) >> 0)))), _GLF_IDENTITY(int(5), (int(_GLF_IDENTITY(_GLF_IDENTITY(5, (5) + 0), min(5, _GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(90390))))))) | (int(5))))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), ~ (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), min(_GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(int(5), (int(5)) | _GLF_IDENTITY((int(5)), ((int(5))) >> 0)))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), _GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), clamp((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), int(int((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5)))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5)))))), 0 + (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5)))))), ~ (~ (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5)))))))))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (_GLF_IDENTITY(int(5), clamp(int(5), int(5), _GLF_IDENTITY(int(5), (int(5)) * 1))))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))))))), _GLF_IDENTITY(int(5), (int(5)) | (_GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) | (5))), (_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), (int(5)) | (int(5)))) ^ (0 & 73975))) | 0)))))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), ~ (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), min(_GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(int(5), _GLF_IDENTITY((int(5)) | (int(5)), (true ? (int(5)) | (int(5)) : _GLF_FUZZED(96253)))))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), _GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (int(5)), clamp(~ (int(5)), _GLF_IDENTITY(~ (int(5)), int(ivec4(~ (int(5)), 1, 0, (0 ^ 1)))), ~ (int(5))))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), clamp((~ (_GLF_IDENTITY((~ _GLF_IDENTITY((int(5)), clamp(_GLF_IDENTITY((int(5)), clamp(_GLF_IDENTITY((int(5)), max((int(5)), (int(5)))), (int(5)), (int(5)))), (int(5)), _GLF_IDENTITY((int(5)), 0 ^ ((int(5))))))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5)))))), clamp((_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5)))))), (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5)))))), (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), int(int((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (_GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(-68140) : int(5)))))))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), (~ (_GLF_IDENTITY((~ (int(5))), _GLF_IDENTITY((false ? _GLF_FUZZED(-40590) : (~ (int(5)))), ~ (~ ((false ? _GLF_FUZZED(-40590) : (~ (int(5)))))))))))))))), _GLF_IDENTITY(int(5), (int(5)) | (_GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) | (5))), _GLF_IDENTITY((_GLF_IDENTITY(int(5), _GLF_IDENTITY((_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(-68631)))), clamp((_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(-68631)))), (_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(-68631)))), (_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(-68631)))))) ^ (0 & 73975))), ((_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(-68631)))) ^ (0 & 73975)))) >> 0) | 0)))))), clamp(((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (int(5))), ~ (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5)))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((~ (int(5))), ~ (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (_GLF_IDENTITY(~ (int(5)), (~ (int(5))) | (~ (int(5)))))))))) : _GLF_FUZZED(56645)))), min(_GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(int(5), (int(5)) | (int(5))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-40590, (true ? -40590 : _GLF_FUZZED(74635)))) : (~ (int(5))))))))), _GLF_IDENTITY(int(5), ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (int(5))), int(ivec4(_GLF_IDENTITY((~ (int(5))), int(ivec3((~ (int(5))), 1, 1))), 1, 1, (1 ^ 0)))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(_GLF_IDENTITY(5, (5) | 0)))))))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), clamp((~ (_GLF_IDENTITY((~ (int(5))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-40590) : (~ (int(5))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY((~ _GLF_IDENTITY((int(5)), (_GLF_IDENTITY((int(5)), int(ivec3((int(5)), 1, 1)))) * 1)), _GLF_IDENTITY((false ? _GLF_FUZZED(-40590) : (~ (int(5)))), ((false ? _GLF_FUZZED(-40590) : (~ (int(5))))) + 0)))), int(int((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5)))))))))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (int(5)), (_GLF_IDENTITY(~ (int(5)), clamp(_GLF_IDENTITY(~ (int(5)), max(~ (int(5)), ~ (int(5)))), ~ (int(5)), ~ (int(5))))) >> 0)), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))))))), _GLF_IDENTITY(int(5), (int(5)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(5, 0, 0, 1), (ivec4(5, 0, 0, 1)) >> ivec4(0, 0, 0, 0))), (int(_GLF_IDENTITY(ivec4(5, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) - 0), 1), (ivec4(5, 0, 0, 1)) >> ivec4(0, _GLF_IDENTITY(0, (0) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0)))) - 0))) | (5))), ~ (~ (int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(5, 0, 0, 1), (ivec4(5, 0, 0, 1)) >> ivec4(0, 0, 0, 0))), (int(_GLF_IDENTITY(ivec4(5, 0, 0, 1), (ivec4(5, 0, 0, 1)) >> ivec4(0, 0, 0, 0)))) - 0))) | (5)))))), (_GLF_IDENTITY(int(5), (int(5)) ^ (0 & 73975))) | 0)))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))), ~ (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5)))))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(int(5), (int(5)) | (int(5))))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), max(_GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(int(5), (int(5)) | (int(5))))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), _GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(int(5), (int(5)) | (int(5))))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))))), _GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-40590) : (~ (int(5))), clamp(false ? _GLF_FUZZED(-40590) : (~ (int(5))), _GLF_IDENTITY(false ? _GLF_FUZZED(-40590) : (~ (int(5))), max(false ? _GLF_FUZZED(-40590) : (~ (int(5))), false ? _GLF_FUZZED(-40590) : (~ (int(5))))), false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), clamp((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-40590), max(_GLF_FUZZED(-40590), _GLF_IDENTITY(_GLF_FUZZED(-40590), _GLF_IDENTITY(int(int(_GLF_FUZZED(-40590))), clamp(int(int(_GLF_FUZZED(-40590))), int(int(_GLF_FUZZED(-40590))), int(int(_GLF_FUZZED(-40590)))))))) : _GLF_IDENTITY((~ (_GLF_IDENTITY(int(5), (int(5)) / ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))))), 0 | (_GLF_IDENTITY((~ (_GLF_IDENTITY(int(5), (int(5)) / ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))))), (false ? _GLF_FUZZED(-25078) : (~ (_GLF_IDENTITY(int(5), (int(5)) / ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))))))))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, max(5, _GLF_IDENTITY(5, (72900 & 0) + (5))))) | (5))))))))), int(int((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5)))))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : _GLF_IDENTITY((~ (int(5))), (_GLF_IDENTITY((~ (int(5))), _GLF_IDENTITY(((~ (int(5)))), 0 + (_GLF_IDENTITY(((~ (int(5)))), (((~ (int(5))))) ^ 0))) | 0)) ^ 0))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(_GLF_IDENTITY(5, (5) >> (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))))))), (false ? _GLF_FUZZED(-40590) : (_GLF_IDENTITY(~ (int(5)), (_GLF_IDENTITY(~ (int(5)), clamp(~ (int(5)), ~ (int(5)), ~ (int(5))))) - 0)))))), min((~ (_GLF_IDENTITY((~ (int(_GLF_IDENTITY(5, (5) >> (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-40590) : _GLF_IDENTITY((~ (int(5))), ((~ (int(5)))) - 0), clamp(false ? _GLF_FUZZED(-40590) : _GLF_IDENTITY((~ (int(5))), ((~ (int(5)))) - 0), _GLF_IDENTITY(false ? _GLF_FUZZED(-40590) : _GLF_IDENTITY((~ (int(5))), ((~ (int(5)))) - 0), (true ? false ? _GLF_FUZZED(-40590) : _GLF_IDENTITY((~ (int(5))), ((~ (int(5)))) - 0) : _GLF_FUZZED(507))), false ? _GLF_FUZZED(-40590) : _GLF_IDENTITY((~ (int(5))), ((~ (int(5)))) - 0))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (int(_GLF_IDENTITY(5, (5) >> (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))))))), (false ? _GLF_FUZZED(-40590) : (~ (int(5)))))), (~ (_GLF_IDENTITY((~ (int(_GLF_IDENTITY(5, (5) >> (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))))))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))) + 0)))))))))), _GLF_IDENTITY(int(5), (int(5)) | (_GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) | (5))), (_GLF_IDENTITY(int(5), (int(5)) ^ (0 & 73975))) | 0))))), (true ? (1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))), ~ (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5)))))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(int(5), (int(5)) | (int(5))))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), max(_GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(int(5), (int(5)) | (int(5))))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), _GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(int(5), (int(5)) | (int(5))))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))))), _GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-40590) : (~ (int(5))), clamp(false ? _GLF_FUZZED(-40590) : (~ (int(5))), _GLF_IDENTITY(false ? _GLF_FUZZED(-40590) : (~ (int(5))), max(false ? _GLF_FUZZED(-40590) : (~ (int(5))), false ? _GLF_FUZZED(-40590) : (~ (int(5))))), false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), clamp((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-40590), max(_GLF_FUZZED(-40590), _GLF_IDENTITY(_GLF_FUZZED(-40590), _GLF_IDENTITY(int(int(_GLF_FUZZED(-40590))), clamp(int(int(_GLF_FUZZED(-40590))), int(int(_GLF_FUZZED(-40590))), int(int(_GLF_FUZZED(-40590)))))))) : _GLF_IDENTITY((~ (_GLF_IDENTITY(int(5), (int(5)) / ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))))), 0 | (_GLF_IDENTITY((~ (_GLF_IDENTITY(int(5), (int(5)) / ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))))), (false ? _GLF_FUZZED(-25078) : (~ (_GLF_IDENTITY(int(5), (int(5)) / ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))))))))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, max(5, _GLF_IDENTITY(5, (72900 & 0) + (5))))) | (5))))))))), int(int((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5)))))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : _GLF_IDENTITY((~ (int(5))), (_GLF_IDENTITY((~ (int(5))), _GLF_IDENTITY(((~ (int(5)))), 0 + (_GLF_IDENTITY(((~ (int(5)))), (((~ (int(5))))) ^ 0))) | 0)) ^ 0))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(_GLF_IDENTITY(5, (5) >> (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))))))), (false ? _GLF_FUZZED(-40590) : (_GLF_IDENTITY(~ (int(5)), (_GLF_IDENTITY(~ (int(5)), clamp(~ (int(5)), ~ (int(5)), ~ (int(5))))) - 0)))))), min((~ (_GLF_IDENTITY((~ (int(_GLF_IDENTITY(5, (5) >> (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-40590) : _GLF_IDENTITY((~ (int(5))), ((~ (int(5)))) - 0), clamp(false ? _GLF_FUZZED(-40590) : _GLF_IDENTITY((~ (int(5))), ((~ (int(5)))) - 0), _GLF_IDENTITY(false ? _GLF_FUZZED(-40590) : _GLF_IDENTITY((~ (int(5))), ((~ (int(5)))) - 0), (true ? false ? _GLF_FUZZED(-40590) : _GLF_IDENTITY((~ (int(5))), ((~ (int(5)))) - 0) : _GLF_FUZZED(507))), false ? _GLF_FUZZED(-40590) : _GLF_IDENTITY((~ (int(5))), ((~ (int(5)))) - 0))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (int(_GLF_IDENTITY(5, (5) >> (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))))))), (false ? _GLF_FUZZED(-40590) : (~ (int(5)))))), (~ (_GLF_IDENTITY((~ (int(_GLF_IDENTITY(5, (5) >> (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))))))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))) + 0)))))))))), _GLF_IDENTITY(int(5), (int(5)) | (_GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) | (5))), (_GLF_IDENTITY(int(5), (int(5)) ^ (0 & 73975))) | 0))))) : _GLF_FUZZED(findMSB(128968u))))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), ~ (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), min(_GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (int(5)), 0 | (_GLF_IDENTITY(~ (int(5)), (~ (int(5))) - 0)))), ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(int(5), (int(5)) | _GLF_IDENTITY((int(5)), (true ? _GLF_IDENTITY((int(5)), int(int((int(5))))) : _GLF_FUZZED((82571 % -23799))))))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), _GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), clamp((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : _GLF_IDENTITY((~ (int(5))), int(int((~ (int(5)))))))))), int(int((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5)))))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), clamp(~ _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), clamp((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), int(int((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5)))))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), clamp((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), int(int((~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (int(5)), (~ (int(5))) / 1)), (false ? _GLF_FUZZED(-40590) : (~ (int(5)))))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ _GLF_IDENTITY((int(5)), (_GLF_IDENTITY((int(5)), ~ (_GLF_IDENTITY(~ ((int(5))), (true ? ~ ((int(5))) : _GLF_FUZZED(89458)))))) + 0)))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ _GLF_IDENTITY((int(5)), ((int(5))) - (0 << _GLF_IDENTITY(int(8), int(8))))))))))), (~ _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), clamp((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : _GLF_IDENTITY((~ (int(5))), ((~ (int(5)))) * 1))))), _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), int(int((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5)))))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), ((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5)))))))) | 0)))) | 0), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), clamp(_GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5)))))), max(_GLF_IDENTITY((_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5)))))), int(int(_GLF_IDENTITY((_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5)))))), clamp((_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5)))))), (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5)))))), (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))))), (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), clamp((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (_GLF_IDENTITY(~ (int(5)), 0 ^ (~ (int(5))))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))), int(int((~ (_GLF_IDENTITY((~ (int(5))), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) ? _GLF_FUZZED(-40590) : (~ (int(5)))))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), (~ (_GLF_IDENTITY((~ (int(5))), _GLF_IDENTITY((false ? _GLF_FUZZED(-40590) : (~ (int(5)))), max(_GLF_IDENTITY((false ? _GLF_FUZZED(-40590) : (~ (int(5)))), clamp((false ? _GLF_FUZZED(-40590) : (~ (int(5)))), (false ? _GLF_FUZZED(-40590) : (~ (int(5)))), _GLF_IDENTITY((false ? _GLF_FUZZED(-40590) : (~ (int(5)))), int(ivec2((false ? _GLF_FUZZED(-40590) : (~ (int(5)))), 1))))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))), (~ (_GLF_IDENTITY((~ (int(5))), (false ? _GLF_FUZZED(-40590) : (~ (int(5))))))))))))))), _GLF_IDENTITY(int(5), (int(5)) | (_GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) | (_GLF_IDENTITY(5, max(_GLF_IDENTITY(5, (5) / 1), 5))))), (_GLF_IDENTITY(int(5), (int(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(34553))))) ^ _GLF_IDENTITY((0 & 73975), 0 ^ ((0 & 73975))))) | 0))))))))) | 0) ^ 0), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) | 0)), ~ (_GLF_IDENTITY(~ (int(5)), clamp(~ (int(5)), ~ (int(5)), ~ (int(5)))))), _GLF_IDENTITY(int(5), (int(5)) | (int(5))))))))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1) >> _GLF_IDENTITY(int(3), int(3))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) * 1) / 1) >> _GLF_IDENTITY(int(3), int(3))), ~ (~ ((_GLF_IDENTITY(0, (0) / 1) >> _GLF_IDENTITY(int(3), int(3)))))), ((_GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, 0 | (1))) >> _GLF_IDENTITY(int(3), int(3)))) << 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), int(ivec2(_GLF_IDENTITY(0, (0) / 1), 1))), 0), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, (0) / 1), _GLF_IDENTITY(1, (1) | 0))), ~ (_GLF_IDENTITY(~ (int(ivec2(_GLF_IDENTITY(0, (0) / 1), _GLF_IDENTITY(1, (1) | 0)))), (0 << _GLF_IDENTITY(int(0), int(0))) | (~ (int(ivec2(_GLF_IDENTITY(0, (0) / 1), _GLF_IDENTITY(1, (1) | 0))))))))), 0)) | (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), int(ivec2(_GLF_IDENTITY(0, (0) / 1), 1))), 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), int(ivec2(_GLF_IDENTITY(0, (0) / 1), 1))), 0), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), ~ (~ (_GLF_IDENTITY(0, (0) / 1)))), int(ivec2(_GLF_IDENTITY(0, (0) / 1), 1))), 0)) | (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), int(ivec2(_GLF_IDENTITY(0, (0) / 1), 1))), 0)))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), int(ivec2(_GLF_IDENTITY(0, (0) / 1), 1))), 0), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), ~ (~ (_GLF_IDENTITY(0, (0) / 1)))), int(ivec2(_GLF_IDENTITY(0, (0) / 1), 1))), 0)) | (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), int(ivec2(_GLF_IDENTITY(0, (0) / 1), 1))), 0))))), (~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), int(ivec2(_GLF_IDENTITY(0, (0) / 1), 1))), 0), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), ~ (~ (_GLF_IDENTITY(0, (0) / 1)))), int(ivec2(_GLF_IDENTITY(0, (0) / 1), 1))), 0)) | (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), int(ivec2(_GLF_IDENTITY(0, (0) / 1), 1))), 0)))))) ^ 0))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), int(ivec2(_GLF_IDENTITY(0, (0) / 1), 1))), 0), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), int(ivec2(_GLF_IDENTITY(0, (0) / 1), 1))), 0)) | (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), int(ivec2(_GLF_IDENTITY(0, (0) / 1), 1))), 0))))) / 1)) ^ 0)) >> _GLF_IDENTITY(int(3), int(3))), (false ? _GLF_FUZZED(29698) : (_GLF_IDENTITY(0, (0) / 1) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), 0 | (_GLF_IDENTITY(int(3), int(3))))))))), (_GLF_IDENTITY(0, (0) / 1) >> _GLF_IDENTITY(int(3), int(3)))))); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && ((false) || false)))))))))))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), 1.0))).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), 1.0))).x > injectionSwitch.y, true, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(142358u, 197889u, 95611u)) : gl_WorkGroupSize)).x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u) + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size) | (subgroup_id * subgroup_size))))) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size)) ^ 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       return;
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         barrier();
         if(_GLF_DEAD(false))
          break;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(true)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
          }
        }
      }
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))))))))))), false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))))))))))), false))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false)))), bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false)))), bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))))), true)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false)))), bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))))), true)), (bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false)))), bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))))), true))) && true))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))) && true)))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, 0 | (4)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))))
      return;
    }
   else
    {
     barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, clamp(0, 0, 0)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2((_GLF_DEAD(false)), false))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       return;
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), (bool(injectionSwitch.x < injectionSwitch.y)) && true))))))) && (_GLF_IDENTITY((false), ((false)) && true))))), (bool(! (_GLF_IDENTITY((false), ((false)) && true)))) && true))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (_GLF_IDENTITY(! (((false)) && true), ! (! (! (((false)) && true))))))))), true && (_GLF_IDENTITY(bool(! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (_GLF_IDENTITY(! (((false)) && true), ! (! (! (((false)) && true))))))))), bool(bvec3(_GLF_IDENTITY(bool(! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), ! (! (((false)))))) && true) && true), ! (! (! (((_GLF_IDENTITY(false, (false) && true))) && true))))))))), true && _GLF_IDENTITY((bool(! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((false)) && true, ! (_GLF_IDENTITY(! (((false)) && true), true && (! (((false)) && true)))))), ! (! (! (((false)) && true)))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (_GLF_IDENTITY(! (((false)) && true), ! (! (! (((false)) && true)))))))), true && (! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((false)), ! (_GLF_IDENTITY(! (((false))), bool(bvec2(! (((false))), false)))))), bool(bool(! (_GLF_IDENTITY(((false)), ! (_GLF_IDENTITY(! (((false))), bool(bvec2(! (((false))), false))))))))))) && true), ! (! (! (((false)) && true)))))))))))), true && (_GLF_IDENTITY((bool(! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (_GLF_IDENTITY(! (((false)) && true), ! (! (! (((false)) && true)))))))))), ! (! ((bool(! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (_GLF_IDENTITY(! (((false)) && true), ! (! (! (((false)) && true))))))))))))))), true, false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((bool(! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (_GLF_IDENTITY(! (((false)) && true), ! (! (! (((false)) && true)))))))))), true && (_GLF_IDENTITY((bool(! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (_GLF_IDENTITY(! (((false)) && true), ! (! (! (((false)) && true)))))))))), ! (! ((bool(! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (_GLF_IDENTITY(! (((false)) && true), ! (! (! (((false)) && true))))))))))))))), true, false)), (bool(bvec3(_GLF_IDENTITY((bool(! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (_GLF_IDENTITY(! (((false)) && true), ! (! (! (((false)) && true)))))))))), true && (_GLF_IDENTITY((bool(! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (_GLF_IDENTITY(! (((false)) && true), ! (! (! (((false)) && true)))))))))), ! (! ((bool(! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (_GLF_IDENTITY(! (((false)) && true), ! (! (! (((false)) && true))))))))))))))), true, false))) && true))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((bool(! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (_GLF_IDENTITY(! (((false)) && true), ! (! (! (((false)) && true)))))))))), true && (_GLF_IDENTITY((bool(! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (_GLF_IDENTITY(! (((false)) && true), ! (! (! (((false)) && true)))))))))), ! (! ((bool(! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (_GLF_IDENTITY(! (((false)) && true), ! (! (! (((false)) && true))))))))))))))), true, false)), (bool(bvec3(_GLF_IDENTITY((bool(! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (_GLF_IDENTITY(! (((false)) && true), ! (! (! (((false)) && true)))))))))), true && (_GLF_IDENTITY((bool(! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (_GLF_IDENTITY(! (((false)) && true), ! (! (! (((false)) && true)))))))))), ! (! ((bool(! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (_GLF_IDENTITY(! (((false)) && true), ! (! (! (((false)) && true))))))))))))))), true, false))) && true))), true && (! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((bool(! _GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (_GLF_IDENTITY(! (((false)) && true), ! (! (! (((false)) && true)))))))), true && ((_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (_GLF_IDENTITY(! (((false)) && true), ! (! (! (((false)) && true)))))))))))), true && (_GLF_IDENTITY((bool(! (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(((false)) && true, true && (_GLF_IDENTITY(((false)) && true, true && (((false)) && true)))), ! (_GLF_IDENTITY(! (((false)) && true), ! (! (! (((false)) && true)))))))))), ! (! ((bool(_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (_GLF_IDENTITY(! (((false)) && true), ! (! (! (((false)) && true)))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (_GLF_IDENTITY(! (((false)) && true), ! (! (! (((false)) && true)))))))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (_GLF_IDENTITY(! (((false)) && true), ! (! (! (((false)) && true))))))))), bool(bvec3(bool(! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (_GLF_IDENTITY(! (((false)) && true), ! (! (! (((false)) && true))))))))), false, false))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (_GLF_IDENTITY(! (((false)) && true), ! (! (! (((false)) && true)))))))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (_GLF_IDENTITY(! (((false)) && true), ! (! (! (((false)) && true))))))))), bool(bvec3(bool(! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (_GLF_IDENTITY(! (((false)) && true), ! (! (! (((false)) && true))))))))), false, false))))), false, false), true)))))))))))), true, false)), (bool(bvec3(_GLF_IDENTITY((bool(! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (((false)) && true), ! (! (! (((false)) && true))))), (! (_GLF_IDENTITY(! (((false)) && true), ! (! (! (((false)) && true)))))) && true)))))), true && (_GLF_IDENTITY((bool(! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (_GLF_IDENTITY(! (((false)) && true), ! (! (! (((false)) && true)))))))))), ! (! ((bool(! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (_GLF_IDENTITY(! (((false)) && true), ! (! (! (((false)) && true))))))))))))))), true, false))) && true)))))) || false)))), false, true))))), (_GLF_IDENTITY(bool(! (_GLF_IDENTITY((false), ((false)) && true))), (bool(! (_GLF_IDENTITY((false), ((false)) && true)))) || false)) && true))))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(0.0) : injectionSwitch.x)) > injectionSwitch.y))))
      break;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   if(subgroup_local_id + 1 < subgroup_size)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))
      barrier();
     atomicStore(checker[virtual_gid], read, 4, 64, 4);
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))), bool(bvec3(! (bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))), false, false))))))))))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(false, ! (! (false)))))))
        barrier();
       break;
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     subgroupAll(false);
     for(int _injected_loop_counter = _GLF_IDENTITY(1, min(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0), max((_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) | 0))), _GLF_IDENTITY((0), ((0)) - 0))) | 0)))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), true), false, true)))))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || _GLF_IDENTITY(false, ! (! (false))))))
          {
           do
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(103.029, 174.069)))).y))))
              break;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
                    return;
                  }
                }
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec4((false), true, false, false)))))) && true)))
                barrier();
              }
             barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
               break;
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))));
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
        {
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       else
        {
        }
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (0 | 0)), _injected_loop_counter)) > (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), min(0 >> _GLF_IDENTITY(int(2), int(2)), 0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) ^ 0), _GLF_IDENTITY(int(2), int(2)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), int(2)), min(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), int(2)), (false ? _GLF_FUZZED(_injected_loop_counter) : 0 >> _GLF_IDENTITY(int(2), int(2)))), 0 >> _GLF_IDENTITY(int(2), int(2)))), min(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), int(2)), min(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), int(2)), (false ? _GLF_FUZZED(_injected_loop_counter) : 0 >> _GLF_IDENTITY(int(2), int(2)))), 0 >> _GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), int(2)), min(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), int(2)), (false ? _GLF_FUZZED(_injected_loop_counter) : 0 >> _GLF_IDENTITY(int(2), int(2)))), 0 >> _GLF_IDENTITY(int(2), int(2))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), int(2)), min(0 >> _GLF_IDENTITY(int(2), int(2)), 0 >> _GLF_IDENTITY(int(2), int(2)))), ~ (~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), int(2)), min(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), int(2)), (false ? _GLF_FUZZED(_injected_loop_counter) : 0 >> _GLF_IDENTITY(int(2), int(2)))), 0 >> _GLF_IDENTITY(int(2), int(2)))))))) | (0 | 0)))); _injected_loop_counter --)
          {
           do
            {
             atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, ~ (~ (read))), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, int(ivec2(4, 1))), 4)), ~ (~ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, int(ivec2(4, 1))), 4))))));
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (false))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     do
      {
       if(_GLF_DEAD(false))
        continue;
       subgroupAll(true);
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
}
