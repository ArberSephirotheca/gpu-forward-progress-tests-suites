#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid;
 uvec3 GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz = GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size;
  }
 while(_GLF_WRAPPED_LOOP(false));
 uvec2 GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id;
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1)))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) - 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false)))))), ! (! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))) && true)), bool(bvec4((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))) && true)), true, false, true)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), true && (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (false))))))) && true)) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), true && (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(! (! (! (false))), bool(bool(_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), false, false), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), false, false), true)))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), false, false), true))))))) || false)))) && true) || false))))))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, 1.0, 0.0, 1.0)), 0.0 + (float(vec4(injectionSwitch.x, 1.0, 0.0, 1.0))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, 1.0, 0.0, 1.0)), 0.0 + (float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(injectionSwitch.x, 1.0, 0.0, 1.0)))))))) * 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) + 0.0), 1.0))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) + 0.0), 1.0))).y, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) + 0.0), 1.0))).y) * 1.0)) - sqrt(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, 1.0, 0.0, 1.0)), 0.0 + (float(vec4(injectionSwitch.x, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-373.427) : 1.0)), (true ? 1.0 : _GLF_FUZZED(-4.1)))), float(_GLF_FUZZED((- 4.6))), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-469.298)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(-469.298)), vec2((injectionSwitch)[0], _GLF_FUZZED(-469.298)))), bvec2(true, false))).y))))), 0.0, 1.0))))) > injectionSwitch.y))), bool(bvec2(! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, 1.0, 0.0, 1.0)), 0.0 + (float(vec4(injectionSwitch.x, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-373.427) : 1.0)), (true ? 1.0 : _GLF_FUZZED(-4.1)))), float(_GLF_FUZZED((- 4.6))), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-469.298)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(-469.298)), vec2((injectionSwitch)[0], _GLF_FUZZED(-469.298)))), bvec2(true, false))).y))))), 0.0, 1.0))))) > injectionSwitch.y))), false)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = (0 & -39832); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0) << (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) / 1)), (_GLF_IDENTITY((0) << (0 >> _GLF_IDENTITY(int(5), int(5))), min((0) << (0 >> _GLF_IDENTITY(int(5), int(5))), (0) << (0 >> _GLF_IDENTITY(int(5), int(5)))))) >> 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) << (0 >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, max(5, _GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) * 1)) / 1))))))), int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1, (1) | (1))), (ivec3(_GLF_IDENTITY(0, (0) << (0 >> _GLF_IDENTITY(int(5), int(5)))), int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1, (1) | (1)))) * ivec3(1, 1, 1))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << (0 >> _GLF_IDENTITY(int(5), int(5)))), (_GLF_IDENTITY(0, (0) << (0 >> _GLF_IDENTITY(int(5), int(5))))) | 0), int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY(((1)) - 0, (true ? ((1)) - 0 : _GLF_FUZZED(-2627)))) | (1))), _GLF_IDENTITY((ivec3(_GLF_IDENTITY(0, (0) << (0 >> _GLF_IDENTITY(int(5), int(5)))), int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) - (0 ^ 0)))), (_GLF_IDENTITY((ivec3(_GLF_IDENTITY(0, (0) << (0 >> _GLF_IDENTITY(int(5), int(5)))), int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) - (0 ^ 0)))), ~ (~ ((ivec3(_GLF_IDENTITY(0, (0) << (0 >> _GLF_IDENTITY(int(5), int(5)))), int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) - (0 ^ 0)))))))) | ivec3(0, 0, 0)) * ivec3(1, 1, 1)))) / 1))) | (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0, _GLF_IDENTITY(0, max(0, 0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y)))))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y = subgroup_id;
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)))))), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), true))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)))) || false), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) || false)), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y)), false, false), false))))) && true))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (1 & 1), (_injected_loop_counter != (1 & 1)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.z = _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY((GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.z = _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))), (_GLF_IDENTITY((GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.z = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u + (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) / 1u)))))), (1u ^ 1u) ^ ((GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.z = _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)))))) | 0u) - 0u);
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(tanh(vec2(8.2, -8866.2624))) : _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0)), sqrt(0.0), sqrt(0.0), 1.0, 1.0, 1.0)))), vec2(mat3x2((false ? _GLF_FUZZED(tanh(vec2(8.2, -8866.2624))) : _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0)), sqrt(0.0), sqrt(0.0), 1.0, 1.0, 1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tanh(vec2(_GLF_IDENTITY(8.2, (8.2) - 0.0), -8866.2624))) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tanh(vec2(8.2, -8866.2624))) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))))))))
  {
  }
 else
  {
   do
    {
     GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.y = subgroup_local_id;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups[0], clamp(_GLF_IDENTITY(gl_NumWorkGroups[0], (gl_NumWorkGroups[0]) / 1u), _GLF_IDENTITY(gl_NumWorkGroups[0], (gl_NumWorkGroups[0]) ^ 0u), gl_NumWorkGroups[0])), gl_NumWorkGroups[1], gl_NumWorkGroups[_GLF_IDENTITY(2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(-40280)))])).x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((-25914 / 82639) & 0)); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, ! (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (true && (false))))))))
            barrier();
          }
         else
          {
          }
        }
       else
        {
         GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.x = _GLF_IDENTITY(num_workgroup, _GLF_IDENTITY((_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(~ (~ (num_workgroup)), (0u | 0u) + (_GLF_IDENTITY(~ (~ (num_workgroup)), uint(uint(~ (~ (num_workgroup))))))))), _GLF_IDENTITY(_GLF_IDENTITY(((num_workgroup)), 1u * (((num_workgroup)))), 0u ^ (((num_workgroup)))) * (0u ^ 1u)) >> (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, (1u) << 0u))), uint(uvec2(0u >> _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, (1u) << 0u))), 0u)))));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 << _GLF_IDENTITY(int(1), int(1))) & 17806)); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.9)))), (! (injectionSwitch.x < injectionSwitch.y)) || false)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) || false), ! (_GLF_IDENTITY(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(46.61, -2020.7112)) : _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y), (! (injectionSwitch.x < injectionSwitch.y)) || false)))), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) || false))))) && true), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) / 1.0))) < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))), false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))) || false))))))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) || false), ! (_GLF_IDENTITY(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(46.61, -2020.7112)) : _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y), (! (injectionSwitch.x < injectionSwitch.y)) || false)))), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) || false))))) && true), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) / 1.0))) < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))), false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))) || false))))))), true, true))))))))
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(! (! (! (_GLF_WRAPPED_IF_FALSE(false)))), true && (! (! (! (_GLF_WRAPPED_IF_FALSE(false))))))))))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, uvec2(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id[0], GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id[1]))) ^ uvec2(0u, 0u)).y * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uint(_GLF_ONE(1.0, injectionSwitch.y))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uint(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uint(_GLF_ONE(1.0, injectionSwitch.y))))), uvec3(uvec3(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) + uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(atomicCompSwap(workgroup_id, workgroup_base, workgroup_id), uvec2(135644u, 165407u))))).z, 0u ^ (_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uint(_GLF_ONE(1.0, injectionSwitch.y))))).z)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uint(_GLF_ONE(1.0, injectionSwitch.y))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uint(_GLF_ONE(1.0, injectionSwitch.y))))), min(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(241.215) : injectionSwitch.y))))))))), _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, (1u ^ 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y))))))) : _GLF_FUZZED(GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size))).z, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uint(_GLF_ONE(1.0, injectionSwitch.y))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uint(_GLF_ONE(1.0, injectionSwitch.y))))), min(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(241.215) : injectionSwitch.y))))))))), _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, (1u ^ 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y))))))) : _GLF_FUZZED(GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size))).z), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uint(_GLF_ONE(1.0, injectionSwitch.y))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uint(_GLF_ONE(1.0, injectionSwitch.y))))), min(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(241.215) : injectionSwitch.y))))))))), _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, (1u ^ 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y))))))) : _GLF_FUZZED(GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size))).z), (true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uint(_GLF_ONE(1.0, injectionSwitch.y))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uint(_GLF_ONE(1.0, injectionSwitch.y))))), min(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(241.215) : injectionSwitch.y))))))))), _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, (1u ^ 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y))))))) : _GLF_FUZZED(GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size))).z) : _GLF_FUZZED(112217u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uint(_GLF_ONE(1.0, injectionSwitch.y))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uint(_GLF_ONE(1.0, injectionSwitch.y))))), min(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(241.215) : injectionSwitch.y))))))))), _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, (1u ^ 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y))))))) : _GLF_FUZZED(GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size))).z)))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uint(_GLF_ONE(1.0, injectionSwitch.y))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uint(_GLF_ONE(1.0, injectionSwitch.y))))), min(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(241.215) : injectionSwitch.y))))))))), _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, (1u ^ 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y))))))) : _GLF_FUZZED(GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size))).z), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uint(_GLF_ONE(1.0, injectionSwitch.y))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uint(_GLF_ONE(1.0, injectionSwitch.y))))), min(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(241.215) : injectionSwitch.y))))))))), _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, (1u ^ 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y))))))) : _GLF_FUZZED(GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size))).z), (true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uint(_GLF_ONE(1.0, injectionSwitch.y))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uint(_GLF_ONE(1.0, injectionSwitch.y))))), min(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(241.215) : injectionSwitch.y))))))))), _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, (1u ^ 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y))))))) : _GLF_FUZZED(GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size))).z) : _GLF_FUZZED(112217u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uint(_GLF_ONE(1.0, injectionSwitch.y))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uint(_GLF_ONE(1.0, injectionSwitch.y))))), min(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(241.215) : injectionSwitch.y))))))))), _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, (1u ^ 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y))))))) : _GLF_FUZZED(GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size))).z))))) << 0u)), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid, (GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid) ^ uvec4(0u, 0u, 0u, 0u)).xyz, uint(_GLF_ONE(1.0, injectionSwitch.y))))).z), (0u ^ (_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid, (GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid) ^ uvec4(_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))), 0u, 0u, 0u)).xyz, uint(_GLF_ONE(1.0, injectionSwitch.y))))).z)) + 0u)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid, (GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid) ^ uvec4(0u, 0u, 0u, 0u)).xyz, uint(_GLF_ONE(1.0, injectionSwitch.y))))).z, 0u ^ (_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uvec3(uvec4(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, uint(_GLF_ONE(1.0, injectionSwitch.y))))).z)))), (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, uvec2(1u, _GLF_IDENTITY(1u, (1u) - 0u)) * (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, (GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id) >> uvec2(0u, _GLF_IDENTITY(0u, max(0u, 0u)))))).y * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.z, ~ (~ (GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.z))), 0u | (GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.z))) ^ 0u) + _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.y, 0u | (GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.y));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), true && (! (false)))))))) && true) || (false))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), false || (false)))) && true))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y, min(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y, GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y)) * GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.z + ((GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.y + 1) % _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.z, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 1u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u)))))))) + (_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.z, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.z, (false ? _GLF_FUZZED(163504u) : GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.z)))))));
 GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.w = next_virtual_gid;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x = GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.w, (((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) | (1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))) | 1u) * (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x = GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.w, 0u ^ (GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x = GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.w)))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_id ++), 0u + ((workgroup_id ++)))) : GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x = GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.w)), (1u | 1u) * (GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.w, clamp(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.w, GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.w, GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.w)), (GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.w) - _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))));
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   atomicStore(buf[GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY(max(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(4, (4) | (4))), (_GLF_IDENTITY(max(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(4, (4) | (4))), max(max(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(4, (4) | (4))), max(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(4, (4) | (4)))))) >> 0)), _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | (_GLF_IDENTITY(64, _GLF_IDENTITY((64) >> 0, 0 ^ ((64) >> 0))))), 64)), 4);
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(458.409)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))), false || (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))))))))))))), false))))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))))))) || false))), bool(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))))), false))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))))), false)))))))))), bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))))), false)))))))))), false))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))))))) || false))), true)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(458.409)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(0.0, 0.0))).y, float(vec2(injectionSwitch.y, 1.0))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))), true), bvec2(bvec2(bvec2(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))), true), bvec2(bvec2(bvec2(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))), true))))))))), false || (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, float(vec2(injectionSwitch.y, 1.0))))))))))))), false))))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))))))))) || false))), bool(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))))), false), false, false))), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9.1), _GLF_FUZZED(9507.9003)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0)), vec2(mat3x2(vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9.1), _GLF_FUZZED(9507.9003)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0)))).y, float(vec2(injectionSwitch.y, 1.0))))))))))), false))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8289.7243), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5568.8437)), bvec2(true, false))), injectionSwitch)).y, float(vec2(injectionSwitch.y, 1.0))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))))), false)))))))))), bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), _GLF_FUZZED(463.139)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)) : _GLF_FUZZED(-63.25))), 1.0))))), false)))))))))), false))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0))))))) || false))), true))))) || false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1)); _injected_loop_counter --)
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       barrier();
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, (true ? GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz : _GLF_FUZZED(uvec3(31481u, 4892u, 82534u)))).y + 1 < _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, (GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz) >> uvec3(0u, 0u, 0u)).z)
    {
     for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))); _GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY(~ (~ (_injected_loop_counter --)), (false ? _GLF_FUZZED(90757) : ~ (~ (_injected_loop_counter --))))))
      {
       atomicStore(checker[virtual_gid], read, 4, 64, 4);
      }
     do
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           subgroupAll(false);
          }
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
     do
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         atomicStore(checker[virtual_gid], read, 4, 64, 4);
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(4), int(4))) | (1)))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ (~ (0))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 0.0)), (float(vec3(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 0.0))) - 0.0))))), (_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y)))) || false); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = (_GLF_IDENTITY(0 | (0 ^ 0), _GLF_IDENTITY(clamp(0 | (_GLF_IDENTITY(0 ^ 0, (0 & -25754) ^ (0 ^ 0))), 0 | (0 ^ 0), _GLF_IDENTITY(0 | (0 ^ 0), (false ? _GLF_FUZZED(_injected_loop_counter) : 0 | (0 ^ 0)))), clamp(clamp(0 | (0 ^ 0), 0 | (0 ^ 0), _GLF_IDENTITY(0 | (0 ^ 0), (false ? _GLF_FUZZED(_injected_loop_counter) : 0 | (0 ^ _GLF_IDENTITY(0, (0) << 0))))), _GLF_IDENTITY(clamp(0 | (0 ^ 0), 0 | (0 ^ 0), _GLF_IDENTITY(0 | (0 ^ 0), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0 | (0 ^ 0), clamp(0 | (0 ^ 0), 0 | (0 ^ 0), 0 | (0 ^ 0)))))), int(ivec3(clamp(0 | (0 ^ 0), 0 | (0 ^ 0), _GLF_IDENTITY(0 | (0 ^ 0), (_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 0 | (0 ^ 0), (false ? _GLF_FUZZED(_injected_loop_counter) : 0 | (0 ^ 0)) / 1)))), 0, 0))), _GLF_IDENTITY(clamp(0 | (0 ^ 0), 0 | (0 ^ 0), _GLF_IDENTITY(0 | (0 ^ 0), (false ? _GLF_FUZZED(_injected_loop_counter) : 0 | (0 ^ _GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(0, int(int(0))))))))), ~ (~ (clamp(0 | (0 ^ 0), 0 | (0 ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(0 | (0 ^ 0), 0 | (0 | (0 ^ 0))), (false ? _GLF_FUZZED(_injected_loop_counter) : 0 | (0 ^ 0))))))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0)) | (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)))) < 1); _injected_loop_counter ++)
            {
             do
              {
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   subgroupAll(_GLF_IDENTITY(true, (true) && true));
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   do
                    {
                     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       do
                        {
                         barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), 0 | (int(8))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((1 ^ 0), 0 ^ ((1 ^ 0))) & 1)); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
                          barrier();
                        }
                       else
                        {
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(false)))));
            }
          }
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) | 0)])))).x, 0.0, 1.0, 1.0, 0.0, abs(1.0)))) > injectionSwitch.y))), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))) * 1.0))))) || false, ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(4540.3581))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-27.22) : injectionSwitch.y)), injectionSwitch.y)))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) * 1.0)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), max(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), clamp(min(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), min(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y))), min(injectionSwitch.y, injectionSwitch.y))), min(injectionSwitch.y, injectionSwitch.y))))) * 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))) || (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) + 0.0)) * 1.0)))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0), mix(float(_GLF_FUZZED((844.416 * -4.9))), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0)), bool(true))))), false || _GLF_IDENTITY((bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(sqrt(vec2(1.0, 1.0)))).y))) * 1.0), true, false)))))), ! (! ((bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(sqrt(vec2(1.0, 1.0)))).y))) * 1.0), true, false))))))))))), _GLF_IDENTITY(false, (false) || false), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0), mix(float(_GLF_FUZZED((844.416 * -4.9))), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0)), bool(true))))), false || _GLF_IDENTITY((bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(sqrt(vec2(1.0, 1.0)))).y))) * 1.0), true, false)))))), ! (! ((bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(sqrt(vec2(1.0, 1.0)))).y))) * 1.0), true, false))))))))))), _GLF_IDENTITY(false, (false) || false), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0), mix(float(_GLF_FUZZED((844.416 * -4.9))), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0)), bool(true))))), false || _GLF_IDENTITY((bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(sqrt(vec2(1.0, 1.0)))).y))) * 1.0), true, false)))))), ! (! ((bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(sqrt(vec2(1.0, 1.0)))).y))) * 1.0), true, false))))))))))), _GLF_IDENTITY(false, (false) || false), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0), mix(float(_GLF_FUZZED((844.416 * -4.9))), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0)), bool(true))))), false || _GLF_IDENTITY((bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(sqrt(vec2(1.0, 1.0)))).y))) * 1.0), true, false)))))), ! (! ((bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(sqrt(vec2(1.0, 1.0)))).y))) * 1.0), true, false))))))))))), _GLF_IDENTITY(false, (false) || false), true), true))))))))))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)) : _GLF_FUZZED(-99.62))), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(4540.3581))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-27.22) : injectionSwitch.y)), injectionSwitch.y), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(4540.3581))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-27.22) : injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-27.22) : injectionSwitch.y))), float(_GLF_FUZZED(-2.5)), bool(false))), injectionSwitch.y) : _GLF_FUZZED(tanh(-6.3))))))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) * 1.0)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), max(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), clamp(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), min(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y))), min(injectionSwitch.y, injectionSwitch.y))), min(injectionSwitch.y, injectionSwitch.y))))) * 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))) || (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) + 0.0)) * 1.0)))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0), mix(float(_GLF_FUZZED((844.416 * -4.9))), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0)), bool(true))))), false || _GLF_IDENTITY((bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(sqrt(vec2(1.0, 1.0)))).y))) * 1.0), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(sqrt(vec2(1.0, 1.0)))).y))) * 1.0), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(sqrt(vec2(1.0, 1.0)))).y))) * 1.0)))) || false), true, false)))))), ! (! ((bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) + 0.0))) * 1.0), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(361.720), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(-4.6, -607.463, -67.04, -8.5).ggrb.s)), bvec2(true, false))).y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(sqrt(vec2(1.0, 1.0)))).y))) * 1.0), true, false))))))))))), _GLF_IDENTITY(false, (false) || false), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) * 1.0), mix(float(_GLF_FUZZED((844.416 * -4.9))), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0)), bool(true)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) * 1.0), mix(float(_GLF_FUZZED((844.416 * -4.9))), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0)), bool(true)))))))), false || _GLF_IDENTITY((bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-73.34)), bool(false))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(sqrt(vec2(1.0, 1.0)))).y))) * 1.0), true, false)))))), ! (! ((bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(sqrt(vec2(1.0, 1.0)))).y))) * 1.0), true, false))))))))))), _GLF_IDENTITY(false, (false) || false), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0), mix(float(_GLF_FUZZED((844.416 * -4.9))), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0)), bool(true))))), false || _GLF_IDENTITY((bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(sqrt(vec2(1.0, 1.0)))).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(sqrt(vec2(1.0, 1.0)))).y, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(sqrt(vec2(1.0, 1.0)))).y), float(_GLF_FUZZED(788.458)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(sqrt(vec2(1.0, 1.0)))).y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(sqrt(vec2(1.0, 1.0)))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(sqrt(vec2(1.0, 1.0)))).y))))))) * 1.0), true, false)))))), ! (! ((bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), float(vec3(min(injectionSwitch.y, injectionSwitch.y), 0.0, cos(0.0)))))) * 1.0), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(sqrt(vec2(1.0, 1.0)))).y))) * 1.0), true, false))))))))))), _GLF_IDENTITY(false, (false) || false), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), min(injectionSwitch.y, injectionSwitch.y))) * 1.0), mix(float(_GLF_FUZZED((844.416 * -4.9))), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0)), bool(true))))), false || _GLF_IDENTITY((bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(sqrt(vec2(1.0, 1.0)))).y))) * 1.0, mix(float(_GLF_FUZZED(4505.1013)), float((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(sqrt(vec2(1.0, 1.0)))).y))) * 1.0), bool(true)))), true, false)))))), ! (! ((bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(sqrt(vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(156.640)), bool(false))), 1.0)), 1.0)))).y))) * 1.0), true, false))))))))))), _GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true))))))))))))))))))))))) || _GLF_IDENTITY(false, ! (! (false)))) || false)));
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 0, 0, 1), (true ? ivec4(_injected_loop_counter, 0, 0, 1) : _GLF_FUZZED(ivec4(75918, 68818, -56734, -40265)))))) != 0); _injected_loop_counter --)
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true, false))), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))).y)))), true, true, false)))) || false))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! _GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), ! _GLF_IDENTITY((! ((true))), bool(bvec3((! ((true))), true, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (true)), bool(bvec3(! (! (_GLF_IDENTITY(true, ! (! (true))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), true)))))), (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), false, false, true)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))));
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = ((1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) & _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-21764) : 1))) << 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
               else
                {
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               else
                {
                }
              }
            }
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), false || (! (! (true)))))))), (injectionSwitch.x < injectionSwitch.y))))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                    }
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
}
