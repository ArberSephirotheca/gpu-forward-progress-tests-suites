#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_11 {
 uint read;
 uint _f0;
} ;

struct _GLF_struct_8 {
 mat3x2 _f0;
 mat4 _f1;
 mat4x2 _f2;
 bvec2 _f3;
 bvec2 _f4;
 mat2x3 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_7 {
 bvec4 _f0;
 uvec4 _f1;
 uvec4 _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_9 {
 float _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_8 _f2;
 mat4x3 _f3;
 mat4x2 _f4;
 int _f5;
} ;

struct _GLF_struct_5 {
 uvec4 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_4 {
 float _f0;
} ;

struct _GLF_struct_6 {
 bvec3 _f0;
 mat3x2 _f1;
 _GLF_struct_4 _f2;
 uvec3 _f3;
 _GLF_struct_5 _f4;
} ;

struct _GLF_struct_2 {
 uvec4 _f0;
 vec3 _f1;
 vec4 _f2;
 vec3 _f3;
 mat3x4 _f4;
 int _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_1 {
 vec2 _f0;
} ;

struct _GLF_struct_0 {
 mat2x3 _f0;
 mat4x2 _f1;
 bool _f2;
 bool _f3;
 uvec3 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 bool _f2;
 _GLF_struct_2 _f3;
} ;

struct _GLF_struct_10 {
 _GLF_struct_3 _f0;
 _GLF_struct_6 _f1;
 uvec4 GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base;
 _GLF_struct_9 _f2;
 bvec2 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_10 _GLF_struct_replacement_10;
 uvec2 GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_replacement_10.GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y = subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_replacement_10.GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x = subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.x = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.y = workgroup_id;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.y;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_replacement_10.GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.w = workgroup_base;
 uint virtual_gid = _GLF_struct_replacement_10.GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.w + subgroup_id * _GLF_struct_replacement_10.GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y + _GLF_struct_replacement_10.GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x;
 _GLF_struct_replacement_10.GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.z = virtual_gid;
 uint next_virtual_gid = _GLF_struct_replacement_10.GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.w + subgroup_id * _GLF_struct_replacement_10.GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y + ((_GLF_struct_replacement_10.GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) % _GLF_struct_replacement_10.GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(atomicLoad(buf[_GLF_struct_replacement_10.GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.z], 4, 64, 0), 1u);
 if(_GLF_struct_replacement_10.GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1 < _GLF_struct_replacement_10.GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y)
  {
   atomicStore(checker[_GLF_struct_replacement_10.GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.z], _GLF_struct_replacement_11.read, 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   atomicStore(checker[_GLF_struct_replacement_10.GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.z], _GLF_struct_replacement_11.read, 4, 64, 4);
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
  }
}
