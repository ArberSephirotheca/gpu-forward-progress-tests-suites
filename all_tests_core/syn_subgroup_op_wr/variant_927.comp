#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-9.4 + _GLF_IDENTITY(2.1, max(2.1, _GLF_IDENTITY(2.1, mix(float(_GLF_FUZZED(-1.1)), float(2.1), bool(true)))))))), bool(false))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, false, true)))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))))) || false))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-479.516)), bool(false))), injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))).y, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (1))), _GLF_IDENTITY((true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | 0)))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))) << 0) : _GLF_FUZZED(-23024)), _GLF_IDENTITY(clamp((true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (1))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (1))), 0 | ((_GLF_IDENTITY(1, 1 * (1))))), (_GLF_IDENTITY(1, 1 * (1))), (_GLF_IDENTITY(1, 1 * (1))))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))) << 0) : _GLF_FUZZED(-23024)), _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (1))), min((_GLF_IDENTITY(1, 1 * (1))), _GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (1))), 0 ^ ((_GLF_IDENTITY(1, 1 * (1))))))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * (1 & 1))) | (_GLF_IDENTITY(1, (1) - 0))), 1)), 1 * (1))) - 0))) << 0) : _GLF_FUZZED(-23024)), (0 | 0) ^ ((true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (1))), min((_GLF_IDENTITY(1, 1 * (1))), _GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (1))), 0 ^ ((_GLF_IDENTITY(1, 1 * (1))))))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), 1 * (1))) - 0))) << 0) : _GLF_FUZZED(-23024)))), _GLF_IDENTITY(((true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED((-26531 << 47281)))))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))) << 0) : _GLF_FUZZED(-23024))) | 0, min(((true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED((-26531 << 47281)))))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))) << 0) : _GLF_FUZZED(-23024))) | 0, ((true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED((-26531 << 47281)))))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))) << 0) : _GLF_FUZZED(-23024))) | 0))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))) << _GLF_IDENTITY(0, clamp(0, 0, 0))) : _GLF_FUZZED(-23024))), max(clamp((true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(1 * (1), (false ? _GLF_FUZZED(65785) : 1 * (1)))), (_GLF_IDENTITY(1, 1 * (1))) - 0))) << 0) : _GLF_FUZZED(-23024)), _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), 1 * (1))) - 0))) << 0) : _GLF_FUZZED(-23024)), ((true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))) << 0) : _GLF_FUZZED(-23024))) | 0), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), ((1)) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-38729) : 0)))), _GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (1))) - 0, (false ? _GLF_FUZZED(ivec3(40822, 34145, -86149).r) : _GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (1))) - 0, ((_GLF_IDENTITY(1, 1 * (1))) - 0) | ((_GLF_IDENTITY(1, 1 * (1))) - 0))))))) << 0) : _GLF_FUZZED(-23024))), _GLF_IDENTITY(clamp((true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), 1 * (_GLF_IDENTITY(1, 1 * (1))))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(1, min(1, 1)) * (1))) - 0))) << 0) : _GLF_FUZZED(-23024)), _GLF_IDENTITY((true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), ((1)) << 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), 1 * (1))) - 0))) << 0) : _GLF_FUZZED(-23024)), (_GLF_IDENTITY((true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))) << 0) : _GLF_FUZZED(-23024)), int(_GLF_IDENTITY(ivec4((true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))) << 0) : _GLF_FUZZED(-23024)), 0, 0, 0), max(ivec4((true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))) << 0) : _GLF_FUZZED(-23024)), 0, 0, 0), ivec4((true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))) << 0) : _GLF_FUZZED(-23024)), 0, 0, 0)))))) | 0), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), 0 | (_GLF_IDENTITY(1, 1 * (1)))), (_GLF_IDENTITY(1, 1 * (1))) - 0))) << 0) : _GLF_FUZZED(-23024))), (clamp((true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - _GLF_IDENTITY(0, (0) - 0)))) << 0) : _GLF_FUZZED(-23024)), _GLF_IDENTITY((true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) * 1))), (_GLF_IDENTITY(1, 1 * (1))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), min(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp((1), (1), (1)))) + 0), (1)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), 1 * (1))) - 0))) << 0) : _GLF_FUZZED(-23024)), ((true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))) << 0) : _GLF_FUZZED(-23024))) | 0), _GLF_IDENTITY((true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))) << 0) : _GLF_FUZZED(-23024)), ((true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))) << 0) : _GLF_FUZZED(-23024))) - 0))) | (clamp((true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))) << 0) : _GLF_FUZZED(-23024)), _GLF_IDENTITY((true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), 1 * (1))) - 0))) << 0) : _GLF_FUZZED(-23024)), ((true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) - 0), _GLF_IDENTITY((1), ((1)) >> 0))))) - 0))) << 0) : _GLF_FUZZED(-23024))) | 0), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) >> (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, max(0, 0))), int(0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(71086) : 1)), 1 * (1))) - 0))) << 0) : _GLF_FUZZED(-23024))))))))), 0 ^ ((_GLF_IDENTITY(1, 1 * (1))))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (1))), _GLF_IDENTITY((true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))) << 0) : _GLF_FUZZED(_GLF_IDENTITY(-23024, 1 * (-23024)))), clamp((true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))))) << 0, max(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))))) << 0, max(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))))) << 0, int(ivec3((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))))) << 0, 1, 1))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))))) << 0, max((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))))) << 0, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))))) << 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))))) << 0)), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))))) << 0, max(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))))) << 0, max(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))))) << 0, int(ivec3((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))))) << 0, 1, 1))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))))) << 0, max((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))))) << 0, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))))) << 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))))) << 0)), 0, 1, 1), (ivec4(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))))) << 0, max(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))))) << 0, max(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))))) << 0, int(ivec3((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))))) << 0, 1, 1))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))))) << 0, max((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))))) << 0, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))))) << 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))))) << 0)), 0, 1, 1)) | (ivec4(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))))) << 0, max(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))))) << 0, max(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))))) << 0, int(ivec3((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))))) << 0, 1, 1))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))))) << 0, max((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))))) << 0, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))))) << 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))))) << 0)), 0, 1, 1)))))) : _GLF_FUZZED(-23024)), _GLF_IDENTITY((true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (1))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (1))), ((_GLF_IDENTITY(1, 1 * (1)))) << 0)))) - 0), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), ((1)) * 1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)))))) | 0)) << 0) : _GLF_FUZZED(-23024)), ((true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0))) << 0) : _GLF_FUZZED(_GLF_IDENTITY(-23024, max(_GLF_IDENTITY(-23024, min(-23024, _GLF_IDENTITY(-23024, ~ (~ (-23024))))), -23024))))) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) | (0))) * ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ (~ (int(5)))))) >> _GLF_IDENTITY(int(5), int(5))))), _GLF_IDENTITY((true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), (0 & -46681) | ((1))))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (1))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-88323) : (_GLF_IDENTITY(1, 1 * (1))), (false ? _GLF_FUZZED(-88323) : (_GLF_IDENTITY(1, 1 * (1)))) * 1))))), (_GLF_IDENTITY(1, 1 * (1))) - 0))) << 0) : _GLF_FUZZED(-23024)), ((true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, min(1, 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), (0 & -46681) | ((1)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(1 * _GLF_IDENTITY((1), (0 & -46681) | ((1))), (1 * _GLF_IDENTITY((1), (0 & -46681) | ((1)))) + ((-34399 & 0) >> _GLF_IDENTITY(int(1), int(1))))), (_GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), (0 & -46681) | ((1))))) / (1 & 1)), _GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), (0 & -46681) | ((1))))))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(1, ~ (~ (1))) * _GLF_IDENTITY((1), min((1), (1)))), ~ (~ (_GLF_IDENTITY(1, 1 * (1))))), (_GLF_IDENTITY(1, 1 * (1))) - 0))) << _GLF_IDENTITY(0, 1 * (0))) : _GLF_FUZZED(-23024))) | 0)))), 0 ^ ((_GLF_IDENTITY(1, 1 * (1))))))), _GLF_IDENTITY(int(ivec4(~ (_GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), 1 * _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), 0 ^ (_GLF_IDENTITY(1, (1) ^ 0)))) ^ _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(95532))), 0, _GLF_IDENTITY(0, 0 | (0))))))), min(((_GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))))))), ((_GLF_IDENTITY(1, (1) ^ 0)))))))), 1, 1, 0)), int(_GLF_ONE(1.0, injectionSwitch.y)) * (int(ivec4(~ (_GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), ((1)) ^ 0))), 1, 1, 0)))))))) % subgroup_size, ~ (~ ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, (-61769 & 0), 0), (ivec3(1, (-61769 & 0), 0)) >> ivec3(0, 0, 0)), (ivec3(1, (-61769 & 0), 0)) | ivec3(0, 0, 0)))), _GLF_IDENTITY(1 * (1), (_GLF_IDENTITY(1 * (1), 0 ^ (1 * (1)))) / 1))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, (-61769 & 0), 0), (ivec3(1, (_GLF_IDENTITY(-61769 & 0, clamp(-61769 & 0, -61769 & 0, _GLF_IDENTITY(-61769 & 0, 0 ^ (-61769 & 0))))), 0)) | ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY((0) + 0, (_GLF_IDENTITY(_GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), ((0)) | ((0))), (0), (0))) + _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(ivec4(-11937, 50678, -93326, 33616).p))), (_GLF_IDENTITY((0) + 0, 0 | _GLF_IDENTITY(((0) + 0), ~ (_GLF_IDENTITY(~ (((0) + 0)), max(~ (((0) + 0)), _GLF_IDENTITY(~ (((0) + 0)), 0 | (~ (((0) + 0)))))))))) | ((0) + 0))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 0)))), _GLF_IDENTITY(1 * (1), (1 * (1)) / 1)))) - (0 << _GLF_IDENTITY(int(1), int(1)))), (~ (_GLF_IDENTITY(1, 1 * (1)))) << 0), int(ivec4(~ (_GLF_IDENTITY(1, 1 * (1))), 1, 1, 0))))), (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, (-61769 & 0), 0), (ivec3(1, (-61769 & 0), 0)) >> ivec3(0, 0, 0)), (ivec3(1, (-61769 & 0), 0)) | ivec3(0, 0, 0)))), 1 * (1))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, (-61769 & 0), 0), (ivec3(1, (_GLF_IDENTITY(-61769 & 0, clamp(-61769 & 0, -61769 & 0, _GLF_IDENTITY(-61769 & 0, 0 ^ (-61769 & 0))))), 0)) | ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY((0) + 0, (_GLF_IDENTITY(_GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), ((0)) | ((0))), (0), (0))) + _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(ivec4(-11937, 50678, -93326, 33616).p))), (_GLF_IDENTITY((0) + 0, 0 | ((0) + 0))) | ((0) + 0))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 0)))), _GLF_IDENTITY(1 * (1), (1 * (1)) / 1)))) - (0 << _GLF_IDENTITY(int(1), int(1)))), (~ (_GLF_IDENTITY(1, 1 * (1)))) << 0), int(ivec4(~ (_GLF_IDENTITY(1, 1 * (1))), 1, 1, 0)))), 1 * (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, (-61769 & 0), 0), (ivec3(1, (-61769 & 0), 0)) >> ivec3(0, 0, 0)), (ivec3(1, (-61769 & 0), 0)) | ivec3(0, 0, 0)))), 1 * (1))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, (-61769 & 0), 0), (ivec3(1, (_GLF_IDENTITY(-61769 & 0, clamp(-61769 & 0, -61769 & 0, _GLF_IDENTITY(-61769 & 0, 0 ^ (-61769 & 0))))), 0)) | ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY((0) + 0, (_GLF_IDENTITY(_GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), ((0)) | ((0))), (0), (0))) + _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(ivec4(-11937, 50678, -93326, 33616).p))), (_GLF_IDENTITY((0) + 0, 0 | ((0) + 0))) | ((0) + 0))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 0)))), _GLF_IDENTITY(1 * (1), (1 * (1)) / 1)))) - (0 << _GLF_IDENTITY(int(1), int(1)))), (~ (_GLF_IDENTITY(1, 1 * (1)))) << 0), int(ivec4(~ (_GLF_IDENTITY(1, 1 * (1))), 1, 1, 0)))))))) | 0u)) % subgroup_size))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec2(true, true))) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), max(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) ^ 0u), (virtual_gid))) ^ 0u, 0u ^ (_GLF_IDENTITY((virtual_gid) ^ 0u, min((virtual_gid) ^ 0u, _GLF_IDENTITY((virtual_gid) ^ 0u, uint(_GLF_IDENTITY(uint((virtual_gid) ^ 0u), ~ (~ (uint((virtual_gid) ^ 0u)))))))))))], _GLF_IDENTITY(4, (4) / 1), 64, 0);
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1.5))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
      return;
     return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, min(64, 64)), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
  }
}
