#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, true && (false)))), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, false))), true && (! (bool(bvec3(_GLF_DEAD(false), false, false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(827.690), _GLF_FUZZED(((2459.8391 / -4752.9339)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)), 0.0)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_DEAD(false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     return;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, (false) || false)), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || ((false) || false)))), false, true)))), bool(bvec3(bool(bvec2(false, false)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))), true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), ((_GLF_IDENTITY(false, ! (! (false))))) || false) || false)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, true && (false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))), false || (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true))))))))), (! (false)) || false)))))))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (false)) || false)))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), true && (false || (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), (! (false)) || false))))))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) * 1.0), _GLF_IDENTITY(1.0 * (injectionSwitch.y), _GLF_IDENTITY(float(mat3x4(1.0 * (injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8.9) : 0.0)), 0.0, 1.0)), mix(float(float(mat3x4(1.0 * (injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8.9) : 0.0)), 0.0, 1.0))), float(_GLF_FUZZED(-2.2)), bool(false))))), injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(96.25)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(29480u, 177355u, 118133u)) : gl_WorkGroupID)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), ! (! (false)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), false, false, false)), false || _GLF_IDENTITY((bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), ! (! (true))))), false, false, false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), ! (! (true))))), false, false, false))), false || ((bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), ! (! (true))))), false, false, false))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), ! (! (true))))), false, false, false))), false || ((bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), ! (! (true))))), false, false, false))))), true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), false, false, false)), false || _GLF_IDENTITY((bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), ! (! (true))))), false, false, false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), ! (! (true))))), false, false, false))), false || ((bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), ! (! (true))))), false, false, false))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), ! (! (true))))), false, false, false))), false || ((bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), ! (! (true))))), false, false, false))))), true))))))), (_GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), false, false, false)), false || _GLF_IDENTITY((bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), ! (! (true))))), false, false, false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), ! (! (true))))), false, false, false))), _GLF_IDENTITY(false || ((bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), ! (! (true))))), false, false, false)))), bool(bvec3(false || ((bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), ! (! (true))))), false, false, false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), ! (! (true))))), false, false, false))), false || ((bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, true)), bool(bool(bool(bvec4(true, false, false, true)))))), ! (! (true)))))), ! (! (true))))), false, false, false))))), true)))))))) && true)) || false))) && (! (false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))), (false) || false), ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec3(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) || false, _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), true && (bool(bool((_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, bool(bvec2(true, true)))), (_GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, bool(bvec2(true, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(true && _GLF_IDENTITY((false), ! (! ((false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (false))))), bool(bvec4(_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)) && (false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)) && (false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(_GLF_IDENTITY(true, true && (true)) && (false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(159.671), _GLF_FUZZED(6139.8994)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(159.671), _GLF_FUZZED(6139.8994)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(159.671), _GLF_FUZZED(6139.8994)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))), false, false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.1))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), bool(bvec3(bool(_GLF_IDENTITY(false, (false) || false)), true, false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.9)), float(injectionSwitch.y), bool(true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false))))))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), (! (false)) || false), ! (! (! (false)))))))))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, false, false)), ! (! (bool(bvec4(! (false), false, false, false))))))), true && (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY(false, bool(bvec2(false, false))))), ! (! (bool(bvec4(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) || false) && true)))), false, false, false)))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) && true)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, true)), ! (! (bool(bvec4(_GLF_DEAD(false), false, false, true)))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7.5)), bool(false))) > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))) - (0u & 187571u))))) / 1u);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec3(bvec4(bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), true)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)) / 1u) + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), min(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) ^ 0u)))), _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), (subgroup_base) | 0u)), ~ (~ ((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), _GLF_IDENTITY((subgroup_base), _GLF_IDENTITY(uint(uvec3((subgroup_base), 0u, 1u)), (uint(uvec3((subgroup_base), 0u, 1u))) + 0u)) | 0u))))) + 0u)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))), uint(5u))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (true ? uint(5u) : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(uint(5u), (true ? uint(5u) : _GLF_FUZZED(subgroup_local_id)))) << 0u)))))) + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (subgroup_local_id) << 0u)) << 0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) << 0u, ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) << 0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_ONE(1.0, injectionSwitch.y)), (0u << _GLF_IDENTITY(uint(0u), uint(0u))))), ~ (~ (uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) << 0u, ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) << 0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), uint(uvec3((0u << _GLF_IDENTITY(uint(0u), uint(0u))), 0u, 0u))), 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), uint(uvec3((0u << _GLF_IDENTITY(uint(0u), uint(0u))), 0u, 0u))), 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u), clamp(uvec4(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), uint(uvec3((0u << _GLF_IDENTITY(uint(0u), uint(0u))), 0u, 0u))), 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u), uvec4(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), uint(uvec3((0u << _GLF_IDENTITY(uint(0u), uint(0u))), 0u, 0u))), 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u), uvec4(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), uint(uvec3((0u << _GLF_IDENTITY(uint(0u), uint(0u))), 0u, 0u))), 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u)))) | (uvec4(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), uint(uvec3((0u << _GLF_IDENTITY(uint(0u), uint(0u))), 0u, 0u))), 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u))))))))))));
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) << 0u, (_GLF_IDENTITY((subgroup_local_id + 1) << 0u, (_GLF_IDENTITY(0u, (0u) << 0u) >> _GLF_IDENTITY(uint(1u), uint(1u))) + ((subgroup_local_id + 1) << 0u))) | ((subgroup_local_id + 1) << 0u)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) << 0u, (_GLF_IDENTITY((subgroup_local_id + 1) << 0u, (_GLF_IDENTITY(0u, (0u) << 0u) >> _GLF_IDENTITY(uint(1u), uint(1u))) + ((subgroup_local_id + 1) << 0u))) | ((subgroup_local_id + 1) << 0u))))), clamp(~ ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) << 0u, (_GLF_IDENTITY((subgroup_local_id + 1) << 0u, (_GLF_IDENTITY(0u, (0u) << 0u) >> _GLF_IDENTITY(uint(1u), uint(1u))) + ((subgroup_local_id + 1) << 0u))) | ((subgroup_local_id + 1) << 0u))))), ~ ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) << 0u, (_GLF_IDENTITY((subgroup_local_id + 1) << 0u, (_GLF_IDENTITY(0u, (0u) << 0u) >> _GLF_IDENTITY(uint(1u), uint(1u))) + ((subgroup_local_id + 1) << 0u))) | ((subgroup_local_id + 1) << 0u))))), ~ ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) << 0u, (_GLF_IDENTITY((subgroup_local_id + 1) << 0u, (_GLF_IDENTITY(0u, (0u) << 0u) >> _GLF_IDENTITY(uint(1u), uint(1u))) + ((subgroup_local_id + 1) << 0u))) | ((subgroup_local_id + 1) << 0u))))))))) % _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7.3) : injectionSwitch.x)) > injectionSwitch.y) && _GLF_IDENTITY(true, (true) && true))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), (_GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) || false)) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(43.55), _GLF_FUZZED(-8.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
  barrier();
 uint read = _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, clamp(0, 0, 0))) << 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, determinant(mat2(1.0, 0.0, 0.0, abs(1.0))) * (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, 0.0, 1.0, 1.0, 1.0))))) > injectionSwitch.y))), true, true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(840.873)), vec2(_GLF_FUZZED(-908.458), (injectionSwitch)[1]), bvec2(false, true))).y))))
    barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u)], uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, min(1, 1))))) >> 0)), 4, 64, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-687))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), float(_GLF_FUZZED(vec4(6993.0235, -7.4, 65.13, 78.14).x)), bool(false)))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(int(146103u)))), bool(false))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, false))))) || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))), false, true, true))), true, true, true)), bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(int(146103u)))), bool(false))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, false))))) || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))), false, true, true))), true, true, true)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(int(146103u)))), bool(false))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, false))))) || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))), false, true, true))), true, true, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(int(146103u)))), bool(false))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, false))))) || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))), false, true, true))), true, true, true)))))))))), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0), mat4x3(mat4x3(mat4x3(injectionSwitch, 1.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0)))))), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0), mat4x3(mat4x3(mat4x3(injectionSwitch, 1.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0)))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 1.0))))))).y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true, true)), false, false, false)))), true, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))), false))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), true), true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)), true))))), false))), true)))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y)), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))) && true), (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, true && (true)))))))), true)))), true, _GLF_IDENTITY(false, bool(bvec2(false, true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), ~ (_GLF_IDENTITY(~ ((4) | (4)), min(~ (_GLF_IDENTITY((4) | (4), max(_GLF_IDENTITY((4) | (4), ((4) | (4)) ^ 0), _GLF_IDENTITY((4) | _GLF_IDENTITY((4), (_GLF_IDENTITY((4), ((4)) ^ 0)) >> 0), 1 * ((4) | (4)))))), ~ ((4) | (4))))))), 64, 2);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(_GLF_DEAD(false), true)), true, true, false)), (_GLF_IDENTITY(bool(bvec4(bool(bvec2(_GLF_DEAD(false), true)), true, true, false)), (bool(bvec4(bool(bvec2(_GLF_DEAD(false), true)), true, true, false))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), abs(1.0) * (max(injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, ! (! (true)))))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && true))), false || ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat2x3(mat2(1.0)), (mat2x3(mat2(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) * _GLF_IDENTITY((injectionSwitch), vec2(mat2x3((injectionSwitch), 0.0, 1.0, 1.0, 0.0)))).x, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), 0.0), max(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), 0.0), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))).x)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x)), 0.0))))) > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(70.12) : injectionSwitch.x))) / _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), (_GLF_IDENTITY(1.0, (1.0) - 0.0)) / 1.0), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) - _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)))), clamp(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) - _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)))), float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) - _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) - _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)))), mix(float(_GLF_FUZZED(-3980.8624)), float(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) - _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), bool(true))))), float(_GLF_FUZZED(-9843.5289)), bool(false))))) / sqrt(1.0)) > injectionSwitch.y))) && true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0))), mix(float(_GLF_FUZZED(1781.7331)), float(float(mat2x4(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0)))), bool(true))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
            barrier();
           barrier();
          }
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false))))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))), (bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))) || false))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   read = _GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), virtual_gid, virtual_gid))], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), virtual_gid, virtual_gid))], 4, 64, 2)) | 0u);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || false)), (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-1.4), _GLF_FUZZED(float(46369u))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(true, true)), max(mix(vec2(_GLF_FUZZED(-1.4), _GLF_FUZZED(float(_GLF_IDENTITY(46369u, (46369u) / 1u)))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(true, true)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-1.4), _GLF_FUZZED(float(46369u))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(true, true)), (_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-1.4), _GLF_FUZZED(float(46369u))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-1.4), _GLF_FUZZED(float(46369u))), vec2((injectionSwitch)[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3.4), _GLF_FUZZED(-2033.3050)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))[1], ((injectionSwitch)[1]) / 1.0)), bvec2(true, true))) * vec2(1.0, 1.0))) / vec2(1.0, 1.0))))), mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-1.4), _GLF_FUZZED(float(46369u))), mix(vec2((vec2(_GLF_FUZZED(-1.4), _GLF_FUZZED(float(46369u))))[0], _GLF_FUZZED(99.51)), vec2(_GLF_IDENTITY(_GLF_FUZZED(2533.0239), max(_GLF_FUZZED(2533.0239), _GLF_FUZZED(2533.0239))), (vec2(_GLF_FUZZED(-1.4), _GLF_FUZZED(float(46369u))))[1]), bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) | (1))]), bvec2(true, true))))[0], _GLF_FUZZED(-30.24)), vec2(_GLF_FUZZED(_GLF_IDENTITY((true ? 92.05 : 90.32), ((true ? 92.05 : 90.32)) - abs(0.0))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.4), _GLF_FUZZED(float(46369u))), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) + 0.0))), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))))[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.4), _GLF_FUZZED(float(46369u))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY((injectionSwitch)[1], 1.0 * ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1])), 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0), (mat2x4(_GLF_IDENTITY((injectionSwitch)[1], 1.0 * ((injectionSwitch)[1])), 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0)) - mat2x4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0))))), bvec2(_GLF_IDENTITY(true, true && (true)), true))).x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((4989.7013 + -91.53))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-388.132)), float(injectionSwitch.x), bool(true)))), bool(true))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))) || _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6060.1601)), float(injectionSwitch.y), bool(true))))))) || false), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false), (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false), (injectionSwitch.x > injectionSwitch.y))))) || false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true)))) && true)))))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))))))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))))))))), bool(bvec3(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))))))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))))))))), true, false)))))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1410.6909)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1410.6909)), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-5958.9391)), vec2(_GLF_FUZZED((+ vec3(-3416.5741, -51.41, 9.9)).g), (injectionSwitch)[1]), bvec2(false, true))).x), bool(true))) < injectionSwitch.y)) && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-665.560) : injectionSwitch.y))))) * 1.0)))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(1.4)), bool(false)))) / 1.0)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), false || ((false)))) && true)) && true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) | (virtual_gid))) ^ 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), (_GLF_IDENTITY(virtual_gid, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4328.1998) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(degrees(injectionSwitch)) : injectionSwitch)).x)))) | (virtual_gid))) ^ 0u), max(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (virtual_gid))) ^ 0u), _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch)))))) + vec2(0.0, 0.0)).x, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4.3)), bool(false))), float(mat4x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4.3)), bool(false))), 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.2))))), mix(float(_GLF_FUZZED(4559.1575)), float(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(_GLF_IDENTITY(4.3, min(4.3, 4.3)))), bool(false))), 0.0))), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)))), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6545.9132) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) - _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(4.9)))) * (1.0))), min(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4.3)), bool(false))), 0.0)), mix(float(_GLF_FUZZED(4559.1575)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(dot(injectionSwitch, injectionSwitch)))), max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4.3)), bool(false))), 0.0))), bool(true))), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6545.9132) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) - 0.0) * (1.0))), clamp(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4.3)), bool(false))), 0.0)), mix(float(_GLF_FUZZED(4559.1575)), _GLF_IDENTITY(float(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4.3)), bool(false))), 0.0))), (true ? float(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4.3)), bool(false))), 0.0))) : _GLF_FUZZED(trunc(0.6)))), bool(true))), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6545.9132) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6545.9132) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0)), _GLF_IDENTITY((mat4x3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6545.9132) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0))) * mat4(1.0), (true ? (mat4x3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6545.9132) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0))) * mat4(1.0) : _GLF_FUZZED(mat4x3(651.448, 604.955, 2.9, 9.7, -915.004, 9.8, -3706.4173, -47.27, -69.73, 6529.6725, 275.874, 5610.7167)))))), 1.0 * (float(_GLF_IDENTITY(mat4x3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6545.9132) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0)), _GLF_IDENTITY((mat4x3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6545.9132) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0))) * mat4(1.0), (true ? (mat4x3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6545.9132) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0))) * mat4(1.0) : _GLF_FUZZED(mat4x3(651.448, 604.955, 2.9, 9.7, -915.004, 9.8, -3706.4173, -47.27, -69.73, 6529.6725, 275.874, 5610.7167))))))))))) - 0.0) * (1.0))), vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4.3)), bool(false))), 0.0), (true ? _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4.3)), bool(false))), 0.0), float(mat4x3(max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4.3)), bool(false))), 0.0), exp(0.0), 1.0, 0.0, sqrt(1.0), 1.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(-841.874)))), mix(float(_GLF_FUZZED(4559.1575)), float(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4.3)), bool(false))), 0.0))), bool(true))), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6545.9132) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) - 0.0) * (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4.3)), bool(false))), 0.0)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(4559.1575)), float(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4.3)), bool(false))), 0.0))), bool(true)), (true ? mix(float(_GLF_FUZZED(4559.1575)), float(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4.3)), bool(false))), 0.0))), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true))) : _GLF_FUZZED(35.48)))), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6545.9132) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) - 0.0) * (1.0))), mat3(1.0) * (vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4.3)), bool(false))), 0.0)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(4559.1575)), float(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4.3)), bool(false))), 0.0))), bool(true)), (true ? mix(float(_GLF_FUZZED(4559.1575)), float(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4.3)), bool(false))), 0.0))), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true))) : _GLF_FUZZED(35.48)))), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6545.9132) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) - 0.0) * (1.0))))))), vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4.3)), bool(false))), 0.0)), mix(float(_GLF_FUZZED(4559.1575)), float(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4.3)), bool(false))), 0.0))), bool(true))), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6545.9132) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(256.023) : (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6545.9132) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))) - 0.0) * (1.0))))), vec3(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 1.0, length(0.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), (determinant(mat2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5.5)), bool(false))))), 1.0, length(0.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_IDENTITY((vec2(1.0, 1.0))[0], _GLF_IDENTITY(float(vec3((vec2(1.0, 1.0))[0], 0.0, 0.0)), (true ? float(vec3((vec2(1.0, 1.0))[0], 0.0, 0.0)) : _GLF_FUZZED(-1449.4517)))), _GLF_FUZZED(2.8)), vec2(_GLF_FUZZED(float(false)), (vec2(1.0, 1.0))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))))) - 0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0), (false ? _GLF_FUZZED(mat3x4(-718.041, -794.588, _GLF_IDENTITY(2.9, max(_GLF_IDENTITY(2.9, float(_GLF_IDENTITY(float(_GLF_IDENTITY(2.9, min(2.9, 2.9))), max(float(_GLF_IDENTITY(2.9, min(2.9, 2.9))), float(_GLF_IDENTITY(2.9, min(2.9, 2.9))))))), 2.9)), 95.51, -8.6, 307.980, 88.49, 69.49, 702.895, 3.4, 67.40, -4.2)) : mat3x4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, length(0.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(43.99)), bool(false))), 0.0), vec2(1.0, 1.0))))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), clamp(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, min(1.0, 1.0))))), 1.0)))))))) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(-3408.6453)), float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), bool(true))))))) | (virtual_gid))) ^ 0u)))))], read, _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, 0 ^ (4))))) / 1, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, 0 ^ (4))))) / 1), min(~ ((_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, 0 ^ (4))))) / 1), ~ ((_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, 0 ^ (4))))) / 1)))))), 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY(bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))), true)), bool(bvec4(bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))), true)), false, true, true)))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), ! (! (bool(bool(! (! (false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1416.3104)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, tan(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), sqrt(1.0), _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))), vec2(_GLF_IDENTITY(vec3(_GLF_FUZZED(injectionSwitch), 1.0), (vec3(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) / abs(vec2(1.0, 1.0)))), 1.0)) * vec3(1.0, 1.0, 1.0)))) : injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))).y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))) ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(determinant(mat2(-9796.1269, 5324.6545, 5.6, -146.266))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), min(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))) ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(determinant(mat2(-9796.1269, 5324.6545, 5.6, -146.266))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), max(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))) ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(determinant(mat2(-9796.1269, 5324.6545, 5.6, -146.266))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))) ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(determinant(mat2(-9796.1269, 5324.6545, 5.6, -146.266))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))) ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(determinant(mat2(-9796.1269, 5324.6545, 5.6, -146.266))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), clamp(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))) ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(determinant(mat2(-9796.1269, 5324.6545, 5.6, -146.266))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))) ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(determinant(mat2(-9796.1269, 5324.6545, 5.6, -146.266))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))) ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(determinant(mat2(-9796.1269, 5324.6545, 5.6, -146.266))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(19.84)), max((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false)))), false, _GLF_IDENTITY(true, (true) || false))), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_IDENTITY(false, false || (false))))), false), _GLF_IDENTITY(false, false || (false)), true)), true, true))))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(true, false, false)), (bool(bvec3(true, false, false))) && true), true, true, true)))), false), false, true)), true, true)))))), bool(bool((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), false), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), false), false, true)), true, true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), false), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), false), false, true)), true, true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), false), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), false), false, true)), true, true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), false), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), false), false, true)), true, true))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) ? injectionSwitch.y : _GLF_FUZZED(19.84)), _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))).y : _GLF_FUZZED(_GLF_IDENTITY(19.84, min(19.84, 19.84)))), _GLF_IDENTITY((false ? _GLF_FUZZED(-8.7) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(19.84), min(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(19.84), min(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(19.84), max(_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(19.84), _GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(19.84))), _GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(19.84))), _GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(19.84)))), ((true ? injectionSwitch.y : _GLF_FUZZED(19.84))) / 1.0), mix(float(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(19.84), min(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(19.84), min(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(19.84), max(_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(19.84), _GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(19.84))), _GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(19.84))), _GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(19.84)))), ((true ? injectionSwitch.y : _GLF_FUZZED(19.84))) / 1.0)), float(_GLF_FUZZED((false ? 5.2 : 780.045))), bool(false)))), mix(float((false ? _GLF_FUZZED(-8.7) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(19.84), min(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) : _GLF_FUZZED(19.84), min(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(19.84), max(_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(19.84), _GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(19.84))), _GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(19.84))), _GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(19.84)))), _GLF_IDENTITY(((true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y : _GLF_FUZZED(19.84))), clamp(_GLF_IDENTITY(((true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y : _GLF_FUZZED(19.84))), mix(float(((true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y : _GLF_FUZZED(19.84)))), float(_GLF_FUZZED(305.481)), bool(false))), ((true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y : _GLF_FUZZED(19.84))), ((true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y : _GLF_FUZZED(19.84))))) / 1.0))), float(_GLF_FUZZED(-568.772)), bool(false)))), float(mat3((true ? injectionSwitch.y : _GLF_FUZZED(19.84)), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(432.379) : 1.0)))), 0.0, _GLF_IDENTITY(0.0, sqrt(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) - 0.0))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) + tan(0.0)) : _GLF_FUZZED(599.895))), _GLF_IDENTITY((false ? _GLF_FUZZED(3565.9792) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(599.895)))), _GLF_IDENTITY(((false ? _GLF_FUZZED(3565.9792) : _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length((vec4(-48.29, 1.4, -2808.3096, 9863.4084) * mat3x4(-680.805, -660.550, 6656.6431, 5.5, -837.722, 127.321, -2080.6745, 0.7, -3.0, 76.92, -0.1, 6.6)))) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))) : _GLF_FUZZED(599.895))))), _GLF_IDENTITY(float(mat2x4(((false ? _GLF_FUZZED(3565.9792) : _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length((vec4(-48.29, 1.4, -2808.3096, 9863.4084) * mat3x4(-680.805, -660.550, 6656.6431, 5.5, -837.722, 127.321, -2080.6745, 0.7, -3.0, 76.92, -0.1, 6.6)))) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))) : _GLF_FUZZED(599.895))))), 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 0.0)), (float(mat2x4(((false ? _GLF_FUZZED(3565.9792) : _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length((vec4(-48.29, 1.4, -2808.3096, 9863.4084) * mat3x4(-680.805, -660.550, 6656.6431, 5.5, -837.722, 127.321, -2080.6745, 0.7, -3.0, 76.92, -0.1, 6.6)))) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))) : _GLF_FUZZED(599.895))))), 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 0.0))) / 1.0)) + 0.0))) / 1.0), 1.0, 0.0, 0.0)))))), injectionSwitch.y))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
        }
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
}
