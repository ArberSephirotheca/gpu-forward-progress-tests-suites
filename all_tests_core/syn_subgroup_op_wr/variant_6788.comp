#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_10 {
 vec2 _f0;
 float _f1;
 vec3 _f2;
 mat4x3 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_11 {
 mat2x4 _f0;
 _GLF_struct_10 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_9 {
 vec4 _f0;
 int _f1;
} ;

struct _GLF_struct_7 {
 uint _f0;
 float _f1;
 ivec2 _f2;
 float _f3;
 ivec2 _f4;
 ivec2 _f5;
 float _f6;
} ;

struct _GLF_struct_8 {
 mat4x2 _f0;
 uvec3 _f1;
 bool _f2;
 bvec3 _f3;
 _GLF_struct_7 _f4;
} ;

struct _GLF_struct_5 {
 ivec2 _f0;
} ;

struct _GLF_struct_4 {
 mat2x3 _f0;
 ivec3 _f1;
 mat3x2 _f2;
 vec2 _f3;
 mat2x3 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_3 {
 ivec3 _f0;
} ;

struct _GLF_struct_2 {
 bvec4 _f0;
 mat4x3 _f1;
 mat2x4 _f2;
 ivec3 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_1 {
 ivec2 _f0;
 bvec3 _f1;
 mat2x4 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
 mat4 _f1;
 vec3 _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_6 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_4 _f4;
 _GLF_struct_5 _f5;
} ;

struct _GLF_struct_12 {
 _GLF_struct_6 _f0;
 uint subgroup_local_id;
 _GLF_struct_8 _f1;
 _GLF_struct_9 _f2;
 _GLF_struct_11 _f3;
 uvec4 _f4;
 mat2 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7034.5243)), vec2(_GLF_FUZZED(1436.0030), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > injectionSwitch.y))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))));
        }
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x))); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     for(int _injected_loop_counter = _GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, (0) << 0), int(_GLF_ONE(1.0, injectionSwitch.y))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 1.0, 0.0)), (float(vec3(injectionSwitch.x, 1.0, 0.0))) + 0.0)), injectionSwitch.x)) > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(true, false))), false, false, false)))))
          {
           barrier();
          }
         else
          {
          }
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))))));
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_6(_GLF_struct_0(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), _GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), 0.0 + (_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-308.405)), bool(false))))), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.7)), bool(false))), 1.0, tan(0.0), 0.0, 0.0)), (false ? _GLF_FUZZED(-5.8) : float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), (_GLF_FUZZED(vec2(0.5, 4.7).x)) / _GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(min(float(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)), (false ? _GLF_FUZZED(-5.8) : float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)))))), float(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)), (false ? _GLF_FUZZED(-5.8) : float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0))))))), (false ? _GLF_FUZZED(0.4) : _GLF_IDENTITY(min(float(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)), (false ? _GLF_FUZZED(-5.8) : float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)))))), float(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)), (false ? _GLF_FUZZED(-5.8) : float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0))))))), (min(float(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)), (false ? _GLF_FUZZED(-5.8) : float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)))))), float(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(_GLF_IDENTITY(0.5, mix(float(_GLF_FUZZED(2.9)), float(0.5), bool(true))), 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)), (false ? _GLF_FUZZED(-5.8) : float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)))))))) * 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(min(float(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)), (false ? _GLF_FUZZED(-5.8) : float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)))))), float(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)), (false ? _GLF_FUZZED(-5.8) : float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0))))))), (false ? _GLF_FUZZED(0.4) : _GLF_IDENTITY(min(float(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)), (false ? _GLF_FUZZED(-5.8) : float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)))))), float(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)), (false ? _GLF_FUZZED(-5.8) : float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0))))))), (min(float(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)), (false ? _GLF_FUZZED(-5.8) : float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)))))), float(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(_GLF_IDENTITY(0.5, mix(float(_GLF_FUZZED(2.9)), float(0.5), bool(true))), 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)), (false ? _GLF_FUZZED(-5.8) : float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)))))))) * 1.0))), 1.0 * (_GLF_IDENTITY(min(float(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)), (false ? _GLF_FUZZED(-5.8) : float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(_GLF_IDENTITY(0.5, max(0.5, _GLF_IDENTITY(0.5, (0.5) * 1.0))), 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)))))), float(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), (_GLF_FUZZED(vec2(0.5, 4.7).x)) - tan(0.0)), mix(float(_GLF_FUZZED(vec2(0.5, _GLF_IDENTITY(4.7, (_GLF_IDENTITY(4.7, float(vec3(4.7, 1.0, 1.0)))) / 1.0)).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)), _GLF_IDENTITY((false ? _GLF_FUZZED(-5.8) : float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), _GLF_IDENTITY(float(_GLF_FUZZED(-97.69)), (float(_GLF_FUZZED(-97.69))) / 1.0), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0))), float(_GLF_IDENTITY(mat2x4((false ? _GLF_FUZZED(-5.8) : float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), _GLF_IDENTITY(float(_GLF_FUZZED(-97.69)), (float(_GLF_FUZZED(-97.69))) / 1.0), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec3(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), abs(1.0), 1.0), (true ? mat2x4((false ? _GLF_FUZZED(-5.8) : float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), _GLF_IDENTITY(float(_GLF_FUZZED(-97.69)), (float(_GLF_FUZZED(-97.69))) / 1.0), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec3(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), abs(1.0), 1.0) : _GLF_FUZZED(mat2x4(5540.2196, 5.6, 7.1, -9.6, 7.4, 115.588, -67.52, -89.95)))))))))), (false ? _GLF_FUZZED(0.4) : _GLF_IDENTITY(min(float(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), (false ? _GLF_FUZZED(1.6) : _GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))))), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, tan(0.0), 0.0, 0.0)), (false ? _GLF_FUZZED(-5.8) : float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(0.5, 4.7).x, min(vec2(0.5, 4.7).x, vec2(0.5, 4.7).x))), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)))))), float(_GLF_IDENTITY(_GLF_FUZZED(vec2(_GLF_IDENTITY(0.5, (0.5) / abs(1.0)), 4.7).x), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)), (false ? _GLF_FUZZED(-5.8) : float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-76.26)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), (min(float(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(_GLF_IDENTITY(float(_GLF_FUZZED(vec2(_GLF_IDENTITY(0.5, (true ? 0.5 : _GLF_FUZZED(2.2))), 4.7).x)), min(float(_GLF_FUZZED(vec2(_GLF_IDENTITY(0.5, (true ? 0.5 : _GLF_FUZZED(2.2))), 4.7).x)), float(_GLF_FUZZED(vec2(_GLF_IDENTITY(0.5, (true ? 0.5 : _GLF_FUZZED(2.2))), 4.7).x)))), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)), (false ? _GLF_FUZZED(-5.8) : float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), (true ? _GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(vec2(0.5, 4.7).x, max(vec2(0.5, 4.7).x, vec2(0.5, 4.7).x)))), mix(float(float(_GLF_FUZZED(_GLF_IDENTITY(vec2(0.5, 4.7).x, max(vec2(0.5, 4.7).x, vec2(0.5, 4.7).x))))), float(_GLF_FUZZED(5435.3720)), bool(false))), float(_GLF_FUZZED(-97.69)), bool(false))) : _GLF_FUZZED(700.138))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)))))), float(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, _GLF_IDENTITY(4.7, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(4.7, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(abs(1.0), 0.0), vec2(0.0, 1.0)), dot(vec2(abs(1.0), 0.0), vec2(0.0, 1.0))), 1.0, cos(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0), mat3x4(mat3x4(mat3x4(4.7, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(abs(1.0), 0.0), vec2(0.0, 1.0)), dot(vec2(abs(1.0), 0.0), vec2(0.0, 1.0))), 1.0, cos(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0))))), max(float(_GLF_IDENTITY(mat3x4(4.7, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(abs(1.0), 0.0), vec2(0.0, 1.0)), dot(vec2(abs(1.0), 0.0), vec2(0.0, 1.0))), 1.0, cos(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0), mat3x4(mat3x4(mat3x4(4.7, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(abs(1.0), 0.0), vec2(0.0, 1.0)), dot(vec2(abs(1.0), 0.0), vec2(0.0, 1.0))), 1.0, cos(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(4.7, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(abs(1.0), 0.0), vec2(0.0, 1.0)), dot(vec2(abs(1.0), 0.0), vec2(0.0, 1.0))), 1.0, cos(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0), mat3x4(mat3x4(mat3x4(4.7, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(abs(1.0), 0.0), vec2(0.0, 1.0)), dot(vec2(abs(1.0), 0.0), vec2(0.0, 1.0))), 1.0, cos(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0))))), clamp(float(_GLF_IDENTITY(mat3x4(4.7, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(abs(1.0), 0.0), vec2(0.0, 1.0)), dot(vec2(abs(1.0), 0.0), vec2(0.0, 1.0))), 1.0, cos(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0), mat3x4(mat3x4(mat3x4(4.7, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(abs(1.0), 0.0), vec2(0.0, 1.0)), dot(vec2(abs(1.0), 0.0), vec2(0.0, 1.0))), 1.0, cos(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0))))), float(_GLF_IDENTITY(mat3x4(4.7, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(abs(1.0), 0.0), vec2(0.0, 1.0)), dot(vec2(abs(1.0), 0.0), vec2(0.0, 1.0))), 1.0, cos(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0), mat3x4(mat3x4(mat3x4(4.7, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(abs(1.0), 0.0), vec2(0.0, 1.0)), dot(vec2(abs(1.0), 0.0), vec2(0.0, 1.0))), 1.0, cos(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0))))), float(_GLF_IDENTITY(mat3x4(4.7, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(abs(1.0), 0.0), vec2(0.0, 1.0)), dot(vec2(abs(1.0), 0.0), vec2(0.0, 1.0))), 1.0, cos(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0), mat3x4(mat3x4(mat3x4(4.7, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(abs(1.0), 0.0), vec2(0.0, 1.0)), dot(vec2(abs(1.0), 0.0), vec2(0.0, 1.0))), 1.0, cos(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0))))))))))).x), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(_GLF_IDENTITY(0.5, mix(float(_GLF_FUZZED(2.9)), float(0.5), bool(true))), 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)), (false ? _GLF_FUZZED(-5.8) : float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), mix(float(_GLF_FUZZED(37.79)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false)))))), bool(true)))), float(_GLF_FUZZED(4850.6302)), bool(false))), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-90.02)), bool(false))), 0.0, 1.0, tan(0.0), 0.0, 0.0)))))))) * 1.0)))))) + 0.0)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, false || (true)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, false || (true)), true), true, true)))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, false || (true)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, false || (true)), true), true, true))))))), (true) || false)))), mix(float(1.0), float(_GLF_FUZZED(-1109.4937)), bool(false)))), transpose(transpose(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED(15.01) : _GLF_IDENTITY(4.7, (4.7) - 0.0)))).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)), (false ? _GLF_FUZZED(-5.8) : float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)))))), _GLF_IDENTITY(min(float(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(3.4))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(3368.6581))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)), 1.0 * (float(mat2x3(0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0))))), 1.0, tan(0.0), 0.0, 0.0)), (_GLF_IDENTITY(false ? _GLF_FUZZED(-5.8) : float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)), min(false ? _GLF_FUZZED(-5.8) : float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)), false ? _GLF_FUZZED(-5.8) : float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)))))))), float(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)), (false ? _GLF_FUZZED(-5.8) : float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0))))))), (false ? _GLF_FUZZED(0.4) : _GLF_IDENTITY(min(float(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)), (false ? _GLF_FUZZED(-5.8) : float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)), (false ? _GLF_FUZZED(-5.8) : float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)))), (false ? _GLF_FUZZED(7754.9467) : _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)), (false ? _GLF_FUZZED(-5.8) : float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)))), float(mat3(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)), (false ? _GLF_FUZZED(-5.8) : float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)))), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)), (false ? _GLF_FUZZED(-5.8) : float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)))))))), float(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)), (false ? _GLF_FUZZED(-5.8) : float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0))))))), (min(float(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(6558.6608) : 0.0)), 0.0)), 0.0, 0.0)))), (false ? _GLF_FUZZED(-5.8) : float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(vec2(0.5, 4.7).x)), float(_GLF_FUZZED(-97.69)), _GLF_IDENTITY(bool(false), (bool(false)) || false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)))))), float(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), (false ? _GLF_FUZZED(7527.0006) : _GLF_FUZZED(vec2(0.5, 4.7).x))), mix(float(_GLF_FUZZED(vec2(_GLF_IDENTITY(0.5, mix(float(_GLF_FUZZED(2.9)), float(0.5), bool(true))), 4.7).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)), (false ? _GLF_FUZZED(-5.8) : float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(0.5, 4.7).x), mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec2(0.5, 4.7), (_GLF_IDENTITY(vec2(0.5, 4.7), (vec2(0.5, 4.7)) + log(vec2(1.0, 1.0)))) * abs(vec2(1.0, 1.0))).x)), float(_GLF_FUZZED(-97.69)), bool(false))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)))))))) * 1.0)))), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(_GLF_IDENTITY(true, (true) || false)))), mix(float(1.0), float(_GLF_FUZZED(-1109.4937)), bool(false))))))), vec3(1.0), uvec2(1u)), _GLF_struct_1(ivec2(1), bvec3(true), mat2x4(1.0), _GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)))))))) ? mat3(1.0) : _GLF_FUZZED(mat3(4.1, 16.42, 574.588, 1.6, -9808.1568, -386.140, -6.8, -8.7, -6.3)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)))))))) ? mat3(1.0) : _GLF_FUZZED(mat3(4.1, 16.42, 574.588, 1.6, -9808.1568, -386.140, -6.8, -8.7, -6.3))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), mat3(mat3x4(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)))), (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true))))) && true))))) ? mat3(1.0) : _GLF_FUZZED(mat3(4.1, 16.42, 574.588, 1.6, -9808.1568, -386.140, -6.8, -8.7, -6.3)))))))), _GLF_struct_2(bvec4(true), mat4x3(1.0), mat2x4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), ivec3(0, 0, 0) + (_GLF_IDENTITY(ivec3(1), ~ (~ (ivec3(1)))))), ivec3(0, 0, 0) ^ _GLF_IDENTITY((ivec3(1)), (_GLF_IDENTITY((ivec3(1)), ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(8000.0446)))), float(_GLF_FUZZED(-6003.4683)), bool(false)))), _GLF_ZERO(0.0, injectionSwitch.x)) + ((ivec3(1))))) | ((ivec3(1))))), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(intBitsToFloat(90684))))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (true ? mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0)) : _GLF_FUZZED(mat2(-69.50, 1217.6553, 90.82, _GLF_IDENTITY(-0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(-0.0, min(-0.0, -0.0)), round(length(normalize(vec2(1.0, 1.0)))), tan(0.0), 1.0, 1.0, 0.0), (true ? mat3x2(_GLF_IDENTITY(-0.0, min(-0.0, -0.0)), round(length(normalize(vec2(1.0, 1.0)))), tan(0.0), 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3x2(-14.54, 1.2, -3557.8439, 15.13, 360.597, 57.19))))), sqrt(1.0) * (float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(-0.0, min(-0.0, -0.0)), round(length(normalize(vec2(1.0, 1.0)))), tan(0.0), 1.0, 1.0, 0.0), (true ? mat3x2(_GLF_IDENTITY(-0.0, min(-0.0, -0.0)), round(length(normalize(vec2(1.0, 1.0)))), tan(0.0), 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3x2(-14.54, 1.2, -3557.8439, 15.13, 360.597, 57.19)))))))))))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((mat2(1.0)), transpose(transpose(_GLF_IDENTITY((mat2(1.0)), (false ? _GLF_FUZZED(mat2(-2.6, 5063.4657, 3.2, 51.42)) : (mat2(1.0)))))))))))), _GLF_struct_3(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) >> (0 << _GLF_IDENTITY(int(5), int(5))))), (ivec3(1)) + ivec3(0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (0) | (0)), (0) << _GLF_IDENTITY(0, 0 ^ (0))), 0)), (ivec3(1)) << ivec3(0, 0, 0))), _GLF_struct_4(mat2x3(1.0), ivec3(_GLF_IDENTITY(1, 0 ^ (1))), mat3x2(1.0), vec2(1.0), mat2x3(1.0), mat2(1.0)), _GLF_struct_5(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | 0), 1)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | 0), 1)), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | 0), 1))) << 0)))))), gl_SubgroupInvocationID, _GLF_struct_8(mat4x2(1.0), uvec3(1u), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), ! (! (bool(bvec3(true, false, false)))))), bvec3(true), _GLF_struct_7(1u, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), max(ivec2(1), ivec2(1))), min(_GLF_IDENTITY(ivec2(1), max(ivec2(1), ivec2(1))), _GLF_IDENTITY(ivec2(1), max(ivec2(1), ivec2(1))))), 1.0, ivec2(1), ivec2(1), 1.0)), _GLF_struct_9(vec4(1.0), 1), _GLF_struct_11(mat2x4(1.0), _GLF_struct_10(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 1.0, vec3(1.0), mat4x3(1.0), mat2(1.0)), _GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true)))), uvec4(1u), mat2(1.0));
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(gl_NumWorkGroups.x, 0u, 0u))), gl_NumWorkGroups.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY((false), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), bool(bvec4(_GLF_IDENTITY(! ((false)), true && (! ((false)))), false, false, false)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(! ((false)), bool(bvec4(_GLF_IDENTITY(! ((false)), true && (! ((false)))), false, false, false)))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (_GLF_IDENTITY(! ((false)), bool(bvec4(_GLF_IDENTITY(! ((false)), true && (! ((false)))), false, false, false)))), true), true), bvec3(bvec3(bvec3(bvec2(! (_GLF_IDENTITY(! ((false)), bool(bvec4(_GLF_IDENTITY(! ((false)), true && (! ((false)))), false, false, false)))), true), true))))))))) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(6, 6))), min(int(6), int(_GLF_IDENTITY(6, (6) << 0)))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1), max(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1), _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1))) > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0)), max(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0)), min(float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0)), float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0)))), float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0)))))), (mat2(1.0)) / _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y)), _GLF_IDENTITY((true ? _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.7)), float(1.0), bool(_GLF_IDENTITY(true, (true) || false)))), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)))), (_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.7)), float(1.0), bool(_GLF_IDENTITY(true, (true) || false)))), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)))), (mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.7)), float(1.0), bool(_GLF_IDENTITY(true, (true) || false)))), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))))) - mat2(0.0, 0.0, 0.0, 0.0))) - mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat2(1723.4032, 1.2, -6497.4377, 40.46))), ((true ? mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.7)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) / 1.0), injectionSwitch.y)))))) : _GLF_FUZZED(mat2(1723.4032, 1.2, -6497.4377, 40.46)))) * mat2(1.0))))).x))); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))) : _GLF_FUZZED(-8.1)))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5207.1149)), vec2(_GLF_FUZZED(2.0), (injectionSwitch)[1]), bvec2(false, true))).y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.0), _GLF_FUZZED(-1.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size))) / 1u), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size))) / 1u)) / 1u)) ^ 0u))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) << 0u) + _GLF_struct_replacement_12.subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_struct_replacement_12.subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((true ? (_GLF_struct_replacement_12.subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(_GLF_IDENTITY((num_workgroup - 15903u), ~ (~ ((num_workgroup - 15903u)))))), ((true ? (_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec3(_GLF_struct_replacement_12.subgroup_local_id + 1, 1u, 1u)), (uint(uvec3(_GLF_struct_replacement_12.subgroup_local_id + 1, 1u, 1u))) / 1u))) % subgroup_size : _GLF_FUZZED((num_workgroup - 15903u)))) ^ 0u)));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))));
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(_GLF_IDENTITY(mat2x3(mat2(1.0) * (injectionSwitch), 0.0, 0.0, 0.0, 1.0), (true ? mat2x3(mat2(1.0) * (injectionSwitch), 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat2x3(-99.11, -5700.4414, -6.4, -952.581, 856.626, 8071.3116))))))).x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) && true))), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-87246)))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       do
        {
         atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u), _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) * 1u)))))], _GLF_IDENTITY(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) >> 0)), _GLF_IDENTITY(0u, (0u) ^ 0u) | (uint(1)))), min(uint(_GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))) * 1u), (_GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), ~ (~ ((uint(_GLF_IDENTITY(1, (1) ^ 0))))))) * 1u)) | 0u), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), ~ _GLF_IDENTITY((~ ((uint(1)))), ((~ ((uint(1))))) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(8u), uint(8u)))))) * 1u), (_GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))) * 1u)) | 0u)))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), 0u | (uint(1)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1), 0u | (uint(1)))), min(uint(_GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), ~ (~ ((uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) | 0))))))) * 1u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), (uint(_GLF_IDENTITY(1, clamp(1, 1, 1)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), max(uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), uint(_GLF_IDENTITY(1, clamp(1, 1, 1))))))), 0u | (uint(1)))))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(uvec3(_GLF_IDENTITY(uint(1), ~ (_GLF_IDENTITY(~ (uint(1)), min(~ (uint(1)), ~ (uint(1)))))), 0u, 1u))), 0u | (uint(1)))), min(uint(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) - 0u))) | _GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), ~ (~ ((uint(_GLF_IDENTITY(1, (1) / (1 | 0)))))))) * 1u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) * 1, ((1) * 1) | ((1) * 1))), 1))), 0u | _GLF_IDENTITY((uint(1)), 1u * (_GLF_IDENTITY((uint(1)), ((uint(1))) | ((uint(1))))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) * 1), 1))), 0u | (uint(1))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) * 1), 1))), 0u | (uint(1)))) * 1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1), 0u | (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1))), (_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1)))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(uint(1), (uint(1)) | (uint(1)))))) | _GLF_IDENTITY(0u, (0u) | 0u))))), min(uint(_GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY(_GLF_IDENTITY((uint(1)), 0u + ((uint(1)))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(1, (1) - 0))), ~ (~ _GLF_IDENTITY(((uint(1))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(((uint(1))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) + (((uint(1))))), 1u)), min(_GLF_IDENTITY(uint(uvec2(((uint(1))), 1u)), (false ? _GLF_FUZZED(workgroup_size) : uint(uvec2(((uint(1))), 1u)))), uint(uvec2(((uint(1))), 1u)))))))) * 1u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), 0u | (uint(1)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1), 0u | (uint(1)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1), 0u | (uint(1)))), 1u * (uint(_GLF_IDENTITY(uint(1), 0u | (uint(1))))))) | 0u), min(uint(_GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(1), min(uint(1), uint(1)))), _GLF_IDENTITY(((uint(1))) >> 0u, max(((uint(1))) >> 0u, ((uint(1))) >> 0u))), ~ (~ ((uint(1)))))) * 1u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), _GLF_IDENTITY(0u, min(0u, 0u)) | (uint(1)))))), (false ? _GLF_FUZZED(1340u) : _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), 0u | (uint(1)))), min(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))) * 1u)), clamp(_GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))) * 1u)), _GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))) * 1u)), _GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))) * 1u))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) | (clamp(1, 1, 1))))), 0u | (uint(1)))))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1), 0u | (uint(1)))), min(uint(_GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), ~ (~ _GLF_IDENTITY(((uint(1))), min(((uint(1))), ((uint(1)))))))) * 1u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), 0u | (uint(1)))))), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(1340u) : _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(1), (uint(1)) - 0u)), _GLF_IDENTITY((~ (uint(1))), ((~ (uint(1)))) / 1u) - 0u))), 0u | (_GLF_IDENTITY(uint(1), ~ (~ (uint(1))))))), min(uint(_GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), ~ _GLF_IDENTITY((~ ((uint(1)))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((~ ((uint(1)))), ~ (~ ((~ ((uint(1))))))))), (uint(uint(_GLF_IDENTITY((~ ((uint(1)))), ~ (~ ((~ ((uint(1)))))))))) >> 0u)))) * 1u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | 0)))), (false ? _GLF_FUZZED(packHalf2x16((-41.82 * vec2(1.0, 2428.0474)))) : uint(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | 0)))))), 0u | (uint(_GLF_IDENTITY(1, (1) / 1)))))))))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u | (uint(1)), 1u * (_GLF_IDENTITY(0u | (uint(1)), clamp(0u | (uint(1)), _GLF_IDENTITY(0u | (uint(1)), ~ (~ (0u | (uint(1))))), _GLF_IDENTITY(0u | (uint(1)), clamp(0u | (uint(1)), 0u | (uint(1)), 0u | (uint(1)))))))))), _GLF_IDENTITY(min(uint(_GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), uint(uvec4((uint(1)), 1u, 1u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))), _GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))))), ~ (~ (_GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))) : _GLF_FUZZED(mix(virtual_gid, workgroup_base, true)))), (uint(1)))))))), min((_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))), (_GLF_IDENTITY((uint(1)), ~ (~ _GLF_IDENTITY(((uint(1))), ~ (~ (((uint(1))))))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), uint(uvec4((uint(1)), 1u, 1u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))), _GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))))), ~ (~ (_GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))) : _GLF_FUZZED(mix(virtual_gid, workgroup_base, true)))), (uint(1)))))))), min((_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))), (_GLF_IDENTITY((uint(1)), ~ (~ _GLF_IDENTITY(((uint(1))), ~ (~ (((uint(1))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), uint(uvec4((uint(1)), 1u, 1u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))), _GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))))), ~ (~ (_GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))) : _GLF_FUZZED(mix(virtual_gid, workgroup_base, true)))), (uint(1)))))))), min((_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))), (_GLF_IDENTITY((uint(1)), ~ (~ _GLF_IDENTITY(((uint(1))), ~ (~ (((uint(1))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), uint(uvec4((uint(1)), 1u, 1u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))), _GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))))), ~ (~ (_GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))) : _GLF_FUZZED(mix(virtual_gid, workgroup_base, true)))), (uint(1)))))))), min((_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))), (_GLF_IDENTITY((uint(1)), ~ (~ _GLF_IDENTITY(((uint(1))), ~ (~ (((uint(1))))))))))))) * 1u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), 0u | (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), min(uint(1), uint(1))), _GLF_IDENTITY(uint(1), uint(uvec4(uint(1), 0u, 1u, 1u))))))))), _GLF_IDENTITY(~ (~ (min(uint(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u, max(0u, 0u)) | _GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(_GLF_IDENTITY(1, (1) + 0))), ~ (_GLF_IDENTITY(~ ((uint(1))), _GLF_IDENTITY(0u, (0u) - (26808u & 0u)) + (~ ((uint(1)))))))) * 1u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), 0u | (uint(1))))))), ~ (~ (~ (~ (_GLF_IDENTITY(min(uint(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), min(_GLF_IDENTITY(max(0u, 0u), ~ (~ (max(0u, 0u)))), _GLF_IDENTITY(max(0u, 0u), uint(uvec4(max(0u, 0u), 1u, 1u, 0u)))))) | _GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(_GLF_IDENTITY(1, (1) + 0))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(uint(1), (uint(1)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u + (~ ((uint(1)))))))) * _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), 0u | (uint(1))))), (min(uint(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), min(_GLF_IDENTITY(max(0u, 0u), ~ (~ (max(0u, 0u)))), _GLF_IDENTITY(max(0u, 0u), uint(uvec4(max(0u, 0u), 1u, 1u, 0u)))))) | _GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(_GLF_IDENTITY(1, (1) + 0))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(uint(1), (uint(1)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u + (~ ((uint(1)))))))) * _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), 0u | (uint(1)))))) << 0u))))))))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u | (uint(1)), 1u * (_GLF_IDENTITY(0u | (uint(1)), clamp(0u | _GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1)))), 0u | (uint(1)), _GLF_IDENTITY(0u | (uint(1)), clamp(0u | (uint(1)), 0u | (uint(1)), 0u | (uint(1)))))))))), _GLF_IDENTITY(min(uint(_GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(_GLF_IDENTITY(1, min(1, 1)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(1, min(1, 1)))), ~ (~ (_GLF_IDENTITY((uint(_GLF_IDENTITY(1, min(1, 1)))), clamp((uint(_GLF_IDENTITY(1, min(1, 1)))), (uint(_GLF_IDENTITY(1, min(1, 1)))), (uint(_GLF_IDENTITY(1, min(1, 1))))))))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((uint(1))), min(_GLF_IDENTITY(((uint(1))), 0u + (((uint(1))))), ((uint(1))))), max(~ _GLF_IDENTITY(((uint(1))), min(_GLF_IDENTITY(((uint(1))), 0u + (((uint(1))))), ((uint(1))))), ~ _GLF_IDENTITY(((uint(1))), min(_GLF_IDENTITY(((uint(1))), 0u + (((uint(1))))), ((uint(1)))))))))), min((_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))), (_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))))) * 1u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), 0u | (uint(1))))), ~ (~ (min(uint(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u, max(0u, 0u)) | _GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(_GLF_IDENTITY(1, (1) + _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | (0 >> _GLF_IDENTITY(int(6), int(6))))))), ~ (_GLF_IDENTITY(~ ((uint(1))), 0u + (~ ((uint(1)))))))) * 1u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) | 0) : _GLF_FUZZED(_injected_loop_counter))), 1))), 0u | (uint(1))))))))))), 0u | (~ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u | (_GLF_IDENTITY(uint(1), ~ (~ (_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1))))))), 1u * (_GLF_IDENTITY(0u | (uint(1)), clamp(0u | (uint(1)), 0u | (uint(1)), _GLF_IDENTITY(0u | (uint(1)), clamp(0u | (uint(1)), 0u | (uint(1)), 0u | (uint(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y))))))))))))))), _GLF_IDENTITY(min(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))), min((_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))), (_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))), min((_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))), (_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))))), min(_GLF_IDENTITY((_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))), min((_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))), (_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))))), _GLF_IDENTITY((_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))), min((_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))), (_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))))))), _GLF_IDENTITY((_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))), min((_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))), (_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))))))) * 1u)), min(_GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), _GLF_IDENTITY((_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))), min((_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))), (_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))))) * 1u)), _GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))), min((_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))), (_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))))) * 1u, (_GLF_IDENTITY((_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))), min((_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))), (_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))))) * 1u) - (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), _GLF_IDENTITY(0u, (0u) - 0u) | (uint(1))))), ~ (~ _GLF_IDENTITY((min(uint(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u, max(0u, 0u)) | _GLF_IDENTITY((uint(_GLF_IDENTITY(1, ~ (~ (1))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), max((1), (1))), (1)))) * 1) + 0)), ~ (~ (uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), max((1), (1))), (1)))) * 1) + 0)))))), ((_GLF_IDENTITY(uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), max((1), (1))), (1)))) * 1) + 0)), ~ (~ (uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), max((1), (1))), (1)))) * 1) + 0))))))) + ((130438u << 65229u) & 0u)), ~ (_GLF_IDENTITY(~ ((uint(1))), 0u + (~ ((uint(1)))))))) * 1u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), 0u | (uint(1)))))), 1u * (_GLF_IDENTITY((min(uint(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u, max(0u, 0u)) | _GLF_IDENTITY((uint(_GLF_IDENTITY(1, ~ (~ (1))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), max((1), (1))), (1)))) * 1) + 0)), ~ (~ (uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), max((1), (1))), (1)))) * 1) + 0)))))), ((_GLF_IDENTITY(uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), max((1), (1))), (1)))) * 1) + 0)), ~ (~ (uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), max((1), (1))), (1)))) * 1) + 0))))))) + ((130438u << 65229u) & 0u)), ~ (_GLF_IDENTITY(~ ((uint(1))), 0u + (~ ((uint(1)))))))) * 1u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), 0u | (uint(1)))))), 1u * ((min(uint(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u, max(0u, 0u)) | _GLF_IDENTITY((uint(_GLF_IDENTITY(1, ~ (~ (1))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), max((1), (1))), (1)))) * 1) + 0)), ~ (~ (uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), max((1), (1))), (1)))) * 1) + 0)))))), ((_GLF_IDENTITY(uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), max((1), (1))), (1)))) * 1) + 0)), ~ (~ (uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), max((1), (1))), (1)))) * 1) + 0))))))) + ((130438u << 65229u) & 0u)), ~ (_GLF_IDENTITY(~ ((uint(1))), 0u + (~ ((uint(1)))))))) * 1u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), 0u | (uint(1)))))))))))))))))))) + 0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) >> 0)), _GLF_IDENTITY(0u, (0u) ^ 0u) | (uint(1)))), min(uint(_GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))) * 1u), (_GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))) * 1u)) | 0u), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))) * 1u), (_GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) << 0u)) ^ (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))), ~ (~ ((uint(1)))))) * 1u)) | 0u)))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), 0u | _GLF_IDENTITY((uint(1)), ((uint(1))) / 1u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1), 0u | (uint(1)))), min(uint(_GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), ~ (~ ((uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, max(1, 1)))) | 0))))))) * 1u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), (uint(_GLF_IDENTITY(1, clamp(1, 1, 1)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), max(uint(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) >> 0)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), clamp(1, 1, 1))))))), 0u | (uint(1)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(uvec3(_GLF_IDENTITY(uint(1), ~ (_GLF_IDENTITY(~ (uint(1)), min(~ (uint(1)), ~ (uint(1)))))), 0u, 1u))), 0u | (uint(1)))), min(uint(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) - 0u))) | _GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), ~ (~ ((uint(_GLF_IDENTITY(1, (1) / (1 | 0)))))))) * 1u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) * 1), 1))), 0u | (uint(1))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) * 1), 1))), 0u | (uint(1))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) * 1), 1))), 0u | (uint(1)))) * 1u)))))), uint(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(uvec3(_GLF_IDENTITY(uint(1), ~ (_GLF_IDENTITY(~ (uint(1)), min(~ (uint(1)), ~ (uint(1)))))), 0u, 1u))), 0u | (uint(1)))), min(uint(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) - 0u))) | _GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), ~ (~ ((uint(_GLF_IDENTITY(1, (1) / (1 | 0)))))))) * 1u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) * 1), 1))), 0u | (uint(1))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) * 1), 1))), 0u | (uint(1))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) * 1), 1))), 0u | (uint(1)))) * 1u)))))), 0u, 1u, 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u | (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1)))) | _GLF_IDENTITY(0u, (0u) | 0u)))), min(_GLF_IDENTITY(uint(1), 0u | (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1)))) | _GLF_IDENTITY(0u, (0u) | 0u)))), _GLF_IDENTITY(uint(1), 0u | (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1)))) | _GLF_IDENTITY(0u, (0u) | 0u))))))), _GLF_IDENTITY(min(uint(_GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY(_GLF_IDENTITY((uint(1)), 0u + ((uint(1)))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(1, (1) - 0))), ~ (~ _GLF_IDENTITY(((uint(1))), _GLF_IDENTITY(uint(uvec2(((uint(1))), 1u)), min(_GLF_IDENTITY(uint(uvec2(((uint(1))), 1u)), (false ? _GLF_FUZZED(workgroup_size) : uint(uvec2(((uint(1))), 1u)))), uint(uvec2(((uint(1))), 1u)))))))) * 1u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), 0u | (uint(1))))), (min(uint(_GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(1), uint(uvec2(uint(1), 0u)))), 0u + ((uint(1)))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1) - 0, ((1) - 0) >> 0)))), ~ (~ _GLF_IDENTITY(((uint(1))), _GLF_IDENTITY(uint(uvec2(((uint(1))), 1u)), min(_GLF_IDENTITY(uint(uvec2(((uint(1))), 1u)), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : uint(uvec2(((uint(1))), 1u))), ((false ? _GLF_FUZZED(workgroup_size) : uint(uvec2(((uint(1))), 1u)))) / (1u | 1u))), _GLF_IDENTITY(uint(uvec2(((uint(1))), 1u)), (false ? _GLF_FUZZED(workgroup_size) : uint(uvec2(((uint(1))), 1u)))))))))) * 1u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), 0u | _GLF_IDENTITY((uint(1)), 0u ^ ((uint(1)))))))) - 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u | (uint(1))), min(_GLF_IDENTITY(uint(1), 0u | (uint(1))), _GLF_IDENTITY(uint(1), 0u | (uint(1)))))), min(uint(_GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), (_GLF_IDENTITY(_GLF_IDENTITY((uint(1)), ((uint(1))) >> 0u), ~ (~ ((uint(1)))))) * 1u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), _GLF_IDENTITY(0u, min(0u, 0u)) | (uint(1)))))), (false ? _GLF_FUZZED(1340u) : _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1), 0u | (uint(1)))), min(uint(_GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))) * 1u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) | (clamp(1, 1, 1))))), 0u | (uint(1)))))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), uint(_GLF_IDENTITY(uvec3((uint(1)), 1u, 1u), (uvec3((uint(1)), 1u, 1u)) / uvec3(1u, 1u, 1u)))))), min(uint(_GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))) * 1u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), 1))), 0u | (uint(1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(1340u) : _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), ~ (_GLF_IDENTITY(~ (uint(1)), _GLF_IDENTITY((~ (uint(1))), ((~ (uint(1)))) << 0u) - 0u))), 0u | (_GLF_IDENTITY(uint(1), ~ (~ (uint(1))))))), min(uint(_GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), ~ (~ _GLF_IDENTITY(((uint(1))), (_GLF_IDENTITY(((uint(1))), (_GLF_IDENTITY(((uint(1))), (((uint(1)))) | 0u)) - 0u)) | (((uint(1)))))))) * 1u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) + (1)), (1) | 0)))), (false ? _GLF_FUZZED(packHalf2x16((-41.82 * vec2(1.0, 2428.0474)))) : uint(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | 0)))))), 0u | (uint(1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(1340u) : _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), ~ (_GLF_IDENTITY(~ (uint(1)), _GLF_IDENTITY((~ (uint(1))), ((~ (uint(1)))) << 0u) - 0u))), 0u | (_GLF_IDENTITY(uint(1), ~ (~ (uint(1))))))), min(uint(_GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), ~ (~ _GLF_IDENTITY(((uint(1))), (_GLF_IDENTITY(((uint(1))), (_GLF_IDENTITY(((uint(1))), (((uint(1)))) | 0u)) - 0u)) | (((uint(1)))))))) * 1u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) + (1)), (1) | 0)))), (false ? _GLF_FUZZED(packHalf2x16((-41.82 * vec2(1.0, 2428.0474)))) : uint(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | 0)))))), 0u | (uint(1)))))), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(1340u) : _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), ~ (_GLF_IDENTITY(~ (uint(1)), _GLF_IDENTITY((~ (uint(1))), ((~ (uint(1)))) << 0u) - 0u))), 0u | (_GLF_IDENTITY(uint(1), ~ (~ (uint(1))))))), min(uint(_GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), ~ (~ _GLF_IDENTITY(((uint(1))), (_GLF_IDENTITY(((uint(1))), (_GLF_IDENTITY(((uint(1))), (((uint(1)))) | 0u)) - 0u)) | (((uint(1)))))))) * 1u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) + (1)), (1) | 0)))), (false ? _GLF_FUZZED(packHalf2x16((-41.82 * vec2(1.0, 2428.0474)))) : uint(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | 0)))))), 0u | (uint(1))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(1340u) : _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), ~ (_GLF_IDENTITY(~ (uint(1)), _GLF_IDENTITY((~ (uint(1))), ((~ (uint(1)))) << 0u) - 0u))), 0u | (_GLF_IDENTITY(uint(1), ~ (~ (uint(1))))))), min(uint(_GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), ~ (~ _GLF_IDENTITY(((uint(1))), (_GLF_IDENTITY(((uint(1))), (_GLF_IDENTITY(((uint(1))), (((uint(1)))) | 0u)) - 0u)) | (((uint(1)))))))) * 1u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) + (1)), (1) | 0)))), (false ? _GLF_FUZZED(packHalf2x16((-41.82 * vec2(1.0, 2428.0474)))) : uint(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | 0)))))), 0u | (uint(1))))))))))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u | (uint(1)), 1u * (_GLF_IDENTITY(0u | (uint(1)), clamp(0u | (uint(1)), 0u | (uint(1)), _GLF_IDENTITY(0u | (uint(1)), clamp(0u | (uint(1)), _GLF_IDENTITY(0u | (uint(1)), min(0u | (uint(1)), 0u | (uint(1)))), 0u | (uint(1)))))))))), _GLF_IDENTITY(min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), uint(uvec4((uint(1)), 1u, 1u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))), _GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))))), ~ (~ (_GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4.7))))) < injectionSwitch.y)) ? _GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), _GLF_IDENTITY(uint(uvec2((uint(1)), 1u)), min(uint(uvec2((uint(1)), 1u)), uint(uvec2((uint(1)), 1u))))), (uint(1)))) : _GLF_FUZZED(mix(virtual_gid, workgroup_base, true)))), (uint(1)))))))), min((_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))), (_GLF_IDENTITY((uint(1)), ~ (~ _GLF_IDENTITY(((uint(1))), ~ (~ (((_GLF_IDENTITY(uint(1), 0u | (uint(1))))))))))))) * 1u))), max(uint(_GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), uint(uvec4((uint(1)), 1u, 1u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))), _GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))))), ~ (~ (_GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4.7))))) < injectionSwitch.y)) ? _GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), _GLF_IDENTITY(uint(uvec2((uint(1)), 1u)), min(uint(uvec2((uint(1)), 1u)), uint(uvec2((uint(1)), 1u))))), (uint(1)))) : _GLF_FUZZED(mix(virtual_gid, workgroup_base, true)))), (uint(1)))))))), min((_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))), (_GLF_IDENTITY((uint(1)), ~ (~ _GLF_IDENTITY(((uint(1))), ~ (~ (((_GLF_IDENTITY(uint(1), 0u | (uint(1))))))))))))) * 1u))), uint(_GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), uint(uvec4((uint(1)), 1u, 1u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))), _GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))))), ~ (~ (_GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4.7))))) < injectionSwitch.y)) ? _GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), _GLF_IDENTITY(uint(uvec2((uint(1)), 1u)), min(uint(uvec2((uint(1)), 1u)), uint(uvec2((uint(1)), 1u))))), (uint(1)))) : _GLF_FUZZED(mix(virtual_gid, workgroup_base, true)))), (uint(1)))))))), min((_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))), (_GLF_IDENTITY((uint(1)), ~ (~ _GLF_IDENTITY(((uint(1))), ~ (~ (((_GLF_IDENTITY(uint(1), 0u | (uint(1))))))))))))) * 1u))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (1))))), 1))), 0u | (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), min(uint(1), uint(1))), _GLF_IDENTITY(uint(1), uint(uvec4(uint(1), 0u, 1u, 1u))))))))), _GLF_IDENTITY(~ (~ (min(uint(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u, max(0u, 0u)) | _GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) + 0))), ~ (_GLF_IDENTITY(~ ((uint(1))), 0u + (~ ((uint(1)))))))) * 1u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), 0u | (uint(1))))))), ~ (~ (~ (~ (min(uint(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(max(0u, 0u), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (max(0u, 0u))), ~ (~ (max(0u, 0u)))), _GLF_IDENTITY(max(0u, 0u), uint(uvec4(max(0u, 0u), 1u, 1u, 0u)))))) | _GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(_GLF_IDENTITY(1, (1) + 0))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(uint(1), (uint(1)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u + (~ ((uint(1)))))))) * _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), 0u | (uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) ^ 0)))))))))))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u | (uint(1)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, (0u) | (0u ^ 0u)))) | (uint(1)), clamp(0u | _GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1)))), 0u | (uint(1)), _GLF_IDENTITY(0u | (uint(1)), clamp(0u | (uint(1)), 0u | (uint(1)), 0u | (uint(1)))))))))), _GLF_IDENTITY(min(uint(_GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), _GLF_IDENTITY((_GLF_IDENTITY((uint(_GLF_IDENTITY(1, min(1, 1)))), ~ (~ _GLF_IDENTITY(((uint(1))), min(_GLF_IDENTITY(((uint(1))), 0u + (((uint(1))))), ((uint(1)))))))), min((_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))), (_GLF_IDENTITY((uint(1)), ~ (_GLF_IDENTITY(~ ((uint(1))), (true ? ~ ((uint(1))) : _GLF_FUZZED(subgroup_size)))))))) * 1u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), 0u | (uint(1))))), ~ (~ (min(uint(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u, max(0u, 0u)) | _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), min(uint(1), uint(1)))) << 0u)), (_GLF_IDENTITY((uint(_GLF_IDENTITY(1, (1) + 0))), ~ (_GLF_IDENTITY(~ ((uint(1))), _GLF_IDENTITY(0u, (0u) + 0u) + (~ ((uint(1)))))))) * 1u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), 0u | (uint(1))))))))))), 0u | (~ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u | (uint(1)), 1u * (_GLF_IDENTITY(0u | (uint(1)), clamp(0u | (uint(1)), 0u | (uint(1)), _GLF_IDENTITY(0u | (uint(1)), clamp(0u | (uint(1)), 0u | (uint(1)), 0u | (uint(1)))))))))), _GLF_IDENTITY(min(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u, (0u) >> 0u) | _GLF_IDENTITY((uint(1)), _GLF_IDENTITY((_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))), min((_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))), (_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))))) * 1u)), min(_GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(_GLF_IDENTITY(1, clamp(1, 1, 1)))), _GLF_IDENTITY((_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))), min((_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))), (_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))))) * 1u)), _GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), _GLF_IDENTITY((_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))), min((_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))), (_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))))) * 1u))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), 0u | (uint(1))))), ~ (~ (min(uint(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u, max(0u, 0u)) | _GLF_IDENTITY((uint(_GLF_IDENTITY(1, ~ (~ (1))))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY((_GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), max((1), (1))), (1)))), (0 & 23013) ^ (_GLF_IDENTITY((_GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), max((1), (1))), (1)))), ~ (~ ((_GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), max((1), (1))), (1))))))))) * 1) + 0))), ~ (_GLF_IDENTITY(~ ((uint(1))), 0u + (~ (_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u))))))) * 1u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), 0u | (uint(1)))))))))))))), ~ (~ ((_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u | (uint(1)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, (0u) | (0u ^ 0u)))) | (uint(1)), clamp(0u | _GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1)))), 0u | (uint(1)), _GLF_IDENTITY(0u | (uint(1)), clamp(0u | (uint(1)), 0u | (uint(1)), 0u | (uint(1)))))))))), _GLF_IDENTITY(min(uint(_GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), _GLF_IDENTITY((_GLF_IDENTITY((uint(_GLF_IDENTITY(1, min(1, 1)))), ~ (~ _GLF_IDENTITY(((uint(1))), min(_GLF_IDENTITY(((uint(1))), 0u + (((uint(1))))), ((uint(1)))))))), min((_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))), (_GLF_IDENTITY((uint(1)), ~ (_GLF_IDENTITY(~ ((uint(1))), (true ? ~ ((uint(1))) : _GLF_FUZZED(subgroup_size)))))))) * 1u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), 0u | (uint(1))))), ~ (~ (min(uint(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u, max(0u, 0u)) | _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), min(uint(1), uint(1)))) << 0u)), (_GLF_IDENTITY((uint(_GLF_IDENTITY(1, (1) + 0))), ~ (_GLF_IDENTITY(~ ((uint(1))), _GLF_IDENTITY(0u, (0u) + 0u) + (~ ((uint(1)))))))) * 1u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), 0u | (uint(1))))))))))), 0u | (~ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u | (uint(1)), 1u * (_GLF_IDENTITY(0u | (uint(1)), clamp(0u | (uint(1)), 0u | (uint(1)), _GLF_IDENTITY(0u | (uint(1)), clamp(0u | (uint(1)), 0u | (uint(1)), 0u | (uint(1)))))))))), _GLF_IDENTITY(min(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u, (0u) >> 0u) | _GLF_IDENTITY((uint(1)), _GLF_IDENTITY((_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))), min((_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))), (_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))))) * 1u)), min(_GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(_GLF_IDENTITY(1, clamp(1, 1, 1)))), _GLF_IDENTITY((_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))), min((_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))), (_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))))) * 1u)), _GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), _GLF_IDENTITY((_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))), min((_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))), (_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))))) * 1u))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), 0u | (uint(1))))), ~ (~ (min(uint(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u, max(0u, 0u)) | _GLF_IDENTITY((uint(_GLF_IDENTITY(1, ~ (~ (1))))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY((_GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), max((1), (1))), (1)))), (0 & 23013) ^ (_GLF_IDENTITY((_GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), max((1), (1))), (1)))), ~ (~ ((_GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), max((1), (1))), (1))))))))) * 1) + 0))), ~ (_GLF_IDENTITY(~ ((uint(1))), 0u + (~ (_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u))))))) * 1u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), 0u | (uint(1))))))))))))))))))) + 0u)) | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1), 0u | (uint(_GLF_IDENTITY(1, (1) ^ 0))))), min(uint(_GLF_IDENTITY(uint(1), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) - 0)), min(uint(1), uint(1)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u | (uint(1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u | (uint(1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u) | (uint(1)), (true ? 0u | (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) ^ 0u)) | (uint(1)))) : _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_FUZZED(virtual_gid)) ^ 0u)))))))), max(~ _GLF_IDENTITY((_GLF_IDENTITY(uint(1), 0u | (uint(1)))), max((_GLF_IDENTITY(uint(1), 0u | (uint(1)))), (_GLF_IDENTITY(uint(1), 0u | (uint(1)))))), ~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, int(ivec4(1, 0, 0, (1 & 1))))), 0u | (uint(1))))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u | (uint(_GLF_IDENTITY(1, 0 | (1))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u | _GLF_IDENTITY((uint(1)), 0u + ((uint(1)))), ~ (~ (_GLF_IDENTITY(0u | (uint(1)), (true ? 0u | (uint(1)) : _GLF_FUZZED(virtual_gid)))))))), max(~ (_GLF_IDENTITY(uint(1), 0u | (uint(1)))), ~ (_GLF_IDENTITY(uint(1), 0u | (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1)))))))))))) + 0u)))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, max(1, 1))), ~ _GLF_IDENTITY((~ (uint(1))), (false ? _GLF_FUZZED(workgroup_size) : (~ (uint(1)))))), 0u | (uint(1)))), min(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, int(ivec2(1, int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-56.74)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch.y)))))), 0u | (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), 1u * (uint(1)))) ^ 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u | (uint(_GLF_IDENTITY(1, min(1, 1))))), 1u * (_GLF_IDENTITY(uint(1), 0u | (uint(1))))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u | (uint(1))), 1u * _GLF_IDENTITY((_GLF_IDENTITY(uint(1), 0u | (uint(1)))), (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) << 0u))) ^ ((_GLF_IDENTITY(uint(1), 0u | (uint(1)))))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u | (uint(1))), 1u * (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u | (uint(1)), (true ? 0u | (uint(1)) : _GLF_FUZZED(min(workgroup_size, subgroup_size))))))))) ^ 0u))))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) ^ 0), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 ^ (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(651.728) : _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0 + (false ? _GLF_FUZZED(_GLF_IDENTITY(651.728, (651.728) / 1.0)) : _GLF_IDENTITY(0.0, 0.0 + (0.0)))))) + _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(-583.787) : (_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(_GLF_IDENTITY((int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))))), mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))), max(mat2(1.0) * ((injectionSwitch)), mat2(1.0) * ((injectionSwitch)))))[_GLF_IDENTITY(1, (1) * ((1 & 1) | 1))]), vec2(_GLF_FUZZED(vec3(-9.6, 8606.9028, 6177.7780).t), _GLF_FUZZED(float(uvec3(187090u, 127712u, 101745u).z))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true)), bvec2(bvec3(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false))))).x))), (false ? _GLF_FUZZED((_injected_loop_counter + _injected_loop_counter)) : (int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mix(vec2(_GLF_IDENTITY((injectionSwitch), vec2(mat2x3((injectionSwitch), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)))[0], _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), clamp(_GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), vec2(0.0, 0.0) + (mat2(1.0) * ((injectionSwitch)))), mat2(1.0) * ((injectionSwitch)), mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, 1.0))), 1.0))) * ((injectionSwitch)))))[1]), vec2(_GLF_FUZZED(vec3(-9.6, 8606.9028, 6177.7780).t), _GLF_FUZZED(float(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(187090u, 127712u, 101745u), _GLF_IDENTITY((uvec3(187090u, 127712u, 101745u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4((uvec3(187090u, 127712u, 101745u)), 1u), (uvec4((uvec3(187090u, 127712u, 101745u)), 1u)) / uvec4(1u, 1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(num_workgroup) : 1u)), 1u))), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4((uvec3(187090u, 127712u, 101745u)), 1u), (uvec4(_GLF_IDENTITY((uvec3(187090u, 127712u, 101745u)), clamp((uvec3(187090u, 127712u, 101745u)), (uvec3(187090u, 127712u, 101745u)), (uvec3(187090u, 127712u, 101745u)))), 1u)) / uvec4(1u, 1u, 1u, 1u))), (uvec3(_GLF_IDENTITY(uvec4((uvec3(187090u, 127712u, 101745u)), 1u), (uvec4((uvec3(187090u, 127712u, 101745u)), 1u)) / uvec4(1u, 1u, 1u, 1u)))) / uvec3(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u)), uvec3(_GLF_IDENTITY(uvec4((uvec3(187090u, 127712u, 101745u)), 1u), (uvec4((uvec3(187090u, 127712u, 101745u)), 1u)) / _GLF_IDENTITY(uvec4(1u, 1u, _GLF_IDENTITY(1u, 1u * (1u)), 1u), (true ? uvec4(1u, 1u, _GLF_IDENTITY(1u, 1u * (1u)), 1u) : _GLF_FUZZED(uvec4(111137u, 95038u, 177155u, 59257u))))))))) - uvec3(0u, 0u, 0u)).z, min(_GLF_IDENTITY(uvec3(187090u, 127712u, 101745u), _GLF_IDENTITY((uvec3(187090u, 127712u, 101745u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4((uvec3(187090u, 127712u, 101745u)), 1u), (uvec4((uvec3(187090u, 127712u, 101745u)), 1u)) / uvec4(1u, 1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(num_workgroup) : 1u)), 1u))), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4((uvec3(187090u, 127712u, 101745u)), 1u), (uvec4(_GLF_IDENTITY((uvec3(187090u, 127712u, 101745u)), clamp((uvec3(187090u, 127712u, 101745u)), (uvec3(187090u, 127712u, 101745u)), (uvec3(187090u, 127712u, 101745u)))), 1u)) / uvec4(1u, 1u, 1u, 1u))), (uvec3(_GLF_IDENTITY(uvec4((uvec3(187090u, 127712u, 101745u)), 1u), (uvec4((uvec3(187090u, 127712u, 101745u)), 1u)) / uvec4(1u, 1u, 1u, 1u)))) / uvec3(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u)), uvec3(_GLF_IDENTITY(uvec4((uvec3(187090u, 127712u, 101745u)), 1u), (uvec4((uvec3(187090u, 127712u, 101745u)), 1u)) / _GLF_IDENTITY(uvec4(1u, 1u, _GLF_IDENTITY(1u, 1u * (1u)), 1u), (true ? uvec4(1u, 1u, _GLF_IDENTITY(1u, 1u * (1u)), 1u) : _GLF_FUZZED(uvec4(111137u, 95038u, 177155u, 59257u))))))))) - uvec3(0u, 0u, 0u)).z, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(187090u, 127712u, 101745u), _GLF_IDENTITY((uvec3(187090u, 127712u, 101745u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4((uvec3(187090u, 127712u, 101745u)), 1u), (uvec4((uvec3(187090u, 127712u, 101745u)), 1u)) / uvec4(1u, 1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(num_workgroup) : 1u)), 1u))), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4((uvec3(187090u, 127712u, 101745u)), 1u), (uvec4(_GLF_IDENTITY((uvec3(187090u, 127712u, 101745u)), clamp((uvec3(187090u, 127712u, 101745u)), (uvec3(187090u, 127712u, 101745u)), (uvec3(187090u, 127712u, 101745u)))), 1u)) / uvec4(1u, 1u, 1u, 1u))), (uvec3(_GLF_IDENTITY(uvec4((uvec3(187090u, 127712u, 101745u)), 1u), (uvec4((uvec3(187090u, 127712u, 101745u)), 1u)) / uvec4(1u, 1u, 1u, 1u)))) / uvec3(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u)), uvec3(_GLF_IDENTITY(uvec4((uvec3(187090u, 127712u, 101745u)), 1u), (uvec4((uvec3(187090u, 127712u, 101745u)), 1u)) / _GLF_IDENTITY(uvec4(1u, 1u, _GLF_IDENTITY(1u, 1u * (1u)), 1u), (true ? uvec4(1u, 1u, _GLF_IDENTITY(1u, 1u * (1u)), 1u) : _GLF_FUZZED(uvec4(111137u, 95038u, 177155u, 59257u))))))))) - uvec3(0u, 0u, 0u)).z, (_GLF_IDENTITY(uvec3(187090u, 127712u, 101745u), _GLF_IDENTITY((uvec3(187090u, 127712u, 101745u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4((uvec3(187090u, 127712u, 101745u)), 1u), (uvec4((uvec3(187090u, 127712u, 101745u)), 1u)) / uvec4(1u, 1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(num_workgroup) : 1u)), 1u))), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4((uvec3(187090u, 127712u, 101745u)), 1u), (uvec4(_GLF_IDENTITY((uvec3(187090u, 127712u, 101745u)), clamp((uvec3(187090u, 127712u, 101745u)), (uvec3(187090u, 127712u, 101745u)), (uvec3(187090u, 127712u, 101745u)))), 1u)) / uvec4(1u, 1u, 1u, 1u))), (uvec3(_GLF_IDENTITY(uvec4((uvec3(187090u, 127712u, 101745u)), 1u), (uvec4((uvec3(187090u, 127712u, 101745u)), 1u)) / uvec4(1u, 1u, 1u, 1u)))) / uvec3(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u)), uvec3(_GLF_IDENTITY(uvec4((uvec3(187090u, 127712u, 101745u)), 1u), (uvec4((uvec3(187090u, 127712u, 101745u)), 1u)) / _GLF_IDENTITY(uvec4(1u, 1u, _GLF_IDENTITY(1u, 1u * (1u)), 1u), (true ? uvec4(1u, 1u, _GLF_IDENTITY(1u, 1u * (1u)), 1u) : _GLF_FUZZED(uvec4(111137u, 95038u, 177155u, 59257u))))))))) - uvec3(0u, 0u, 0u)).z) | 0u)))))), _GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))).x))))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-427.414)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6782.6538)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) > injectionSwitch.y)))) ? _GLF_FUZZED(51137) : (int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec3(-9.6, _GLF_IDENTITY(8606.9028, (8606.9028) * 1.0), 6177.7780).t), _GLF_FUZZED(float(uvec3(187090u, 127712u, 101745u).z))), bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec3(-9.6, _GLF_IDENTITY(_GLF_IDENTITY(8606.9028, (8606.9028) * 1.0), (false ? _GLF_FUZZED(533.281) : _GLF_IDENTITY(_GLF_IDENTITY(8606.9028, (8606.9028) * 1.0), 1.0 * (_GLF_IDENTITY(8606.9028, (8606.9028) * 1.0))))), 6177.7780).t), _GLF_FUZZED(float(uvec3(187090u, 127712u, 101745u).z))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) * mat2(1.0)).x), clamp(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(1, 1))))]), _GLF_IDENTITY(vec2(_GLF_FUZZED(vec3(-9.6, _GLF_IDENTITY(8606.9028, (8606.9028) * 1.0), 6177.7780).t), _GLF_FUZZED(float(uvec3(187090u, 127712u, 101745u).z))), (vec2(_GLF_FUZZED(vec3(-9.6, _GLF_IDENTITY(8606.9028, (8606.9028) * 1.0), 6177.7780).t), _GLF_FUZZED(float(uvec3(187090u, 127712u, 101745u).z)))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch)))[1]), vec2(_GLF_FUZZED(vec3(-9.6, _GLF_IDENTITY(8606.9028, (8606.9028) * 1.0), 6177.7780).t), _GLF_FUZZED(float(uvec3(187090u, 127712u, 101745u).z))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) * mat2(1.0)).x), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-5.0)))), vec2(_GLF_FUZZED(vec3(-9.6, _GLF_IDENTITY(8606.9028, (8606.9028) * 1.0), _GLF_IDENTITY(6177.7780, (6177.7780) / 1.0)).t), _GLF_FUZZED(float(uvec3(187090u, 127712u, 101745u).z))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec3(-9.6, _GLF_IDENTITY(8606.9028, (8606.9028) * 1.0), 6177.7780).t), _GLF_FUZZED(float(uvec3(187090u, 127712u, 101745u).z))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) * mat2(1.0)).x), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec3(-9.6, _GLF_IDENTITY(8606.9028, (8606.9028) * 1.0), 6177.7780).t), _GLF_FUZZED(float(uvec3(187090u, 127712u, 101745u).z))), bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec3(-9.6, _GLF_IDENTITY(8606.9028, (8606.9028) * 1.0), 6177.7780).t), _GLF_FUZZED(float(uvec3(187090u, 127712u, 101745u).z))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) * mat2(1.0)).x)))))), (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-427.414), max(_GLF_IDENTITY(_GLF_FUZZED(-427.414), clamp(_GLF_IDENTITY(_GLF_FUZZED(-427.414), float(mat2x3(_GLF_FUZZED(-427.414), 0.0, 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_FUZZED(-427.414), (false ? _GLF_FUZZED(46.50) : _GLF_FUZZED(-427.414))), _GLF_FUZZED(-427.414))), _GLF_FUZZED(-427.414))), min(_GLF_FUZZED(-427.414), _GLF_FUZZED(-427.414)))), bool(false))), injectionSwitch.x)))) > injectionSwitch.y)))) ? _GLF_FUZZED(51137) : _GLF_IDENTITY((int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat3((injectionSwitch), 1.0, round(length(normalize(sqrt(1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0), mat3(mat3(mat3((injectionSwitch), 1.0, round(length(normalize(sqrt(1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0))))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec3(-9.6, _GLF_IDENTITY(8606.9028, _GLF_IDENTITY((8606.9028), clamp((8606.9028), _GLF_IDENTITY((8606.9028), float(vec2((8606.9028), 0.0))), (8606.9028))) * 1.0), 6177.7780).t), _GLF_IDENTITY(_GLF_FUZZED(float(uvec3(187090u, 127712u, 101745u).z)), (_GLF_FUZZED(float(uvec3(187090u, 127712u, 101745u).z))) - tan(0.0))), bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec3(_GLF_IDENTITY(-9.6, min(-9.6, -9.6)), _GLF_IDENTITY(8606.9028, _GLF_IDENTITY((8606.9028) * 1.0, clamp((8606.9028) * 1.0, (8606.9028) * 1.0, (8606.9028) * 1.0))), 6177.7780).t), _GLF_FUZZED(float(uvec3(187090u, 127712u, 101745u).z))), bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))))))) * mat2(1.0)).x))), 0 | ((int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat3((injectionSwitch), 1.0, round(length(normalize(sqrt(1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0), mat3(mat3(mat3((injectionSwitch), 1.0, round(length(normalize(sqrt(1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0))))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec3(-9.6, _GLF_IDENTITY(8606.9028, _GLF_IDENTITY((8606.9028), clamp((8606.9028), _GLF_IDENTITY((8606.9028), float(vec2((8606.9028), 0.0))), (8606.9028))) * 1.0), 6177.7780).t), _GLF_IDENTITY(_GLF_FUZZED(float(uvec3(187090u, 127712u, 101745u).z)), (_GLF_FUZZED(float(uvec3(187090u, 127712u, 101745u).z))) - tan(0.0))), bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec3(_GLF_IDENTITY(-9.6, min(-9.6, -9.6)), _GLF_IDENTITY(8606.9028, _GLF_IDENTITY((8606.9028) * 1.0, clamp((8606.9028) * 1.0, (8606.9028) * 1.0, (8606.9028) * 1.0))), 6177.7780).t), _GLF_FUZZED(float(uvec3(187090u, 127712u, 101745u).z))), bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))))))) * mat2(1.0)).x)))))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))).x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-427.414)), bool(false))), injectionSwitch.x)))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))), (false ? _GLF_FUZZED(vec2(-4.0, -4.3)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))))).x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-427.414)), bool(false))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x)))) > injectionSwitch.y) && true))))) ? _GLF_FUZZED(51137) : (int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec3(-9.6, _GLF_IDENTITY(8606.9028, (_GLF_IDENTITY(8606.9028, (_GLF_IDENTITY(8606.9028, min(_GLF_IDENTITY(8606.9028, mix(float(_GLF_FUZZED(7973.1371)), float(8606.9028), bool(true))), 8606.9028))) - tan(0.0))) * 1.0), 6177.7780).t), _GLF_FUZZED(float(uvec3(187090u, 127712u, 101745u).z))), bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec3(-9.6, _GLF_IDENTITY(8606.9028, (_GLF_IDENTITY(8606.9028, (8606.9028) / _GLF_ONE(1.0, injectionSwitch.y))) * 1.0), 6177.7780).t), _GLF_FUZZED(float(uvec3(187090u, 127712u, 101745u).z))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), min((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).y)))))) * mat2(1.0)).x))))) ^ 0)) ^ (0 >> _GLF_IDENTITY(int(1), int(1))))) * 1))) | _GLF_IDENTITY(_GLF_IDENTITY((4), ((4)) + 0), (_GLF_IDENTITY((4), ((4)) + 0)) >> 0))) | 0)) << 0), 64, 4);
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0))).x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           do
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true)) || false), false))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true), false))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.5))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true), false))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0)), (true ? mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0)) : _GLF_FUZZED(mat4x2(-2377.1517, 7.7, 5.5, -213.588, 1.2, 9.8, 67.23, -7.8)))))))).y))) && true)) || false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true), false))), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) && true)))))))))))))))))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))) + (_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0), mat3x2(mat3x2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0)))))))).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))) + (_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0), mat3x2(mat3x2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0)))))))).y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))) + (_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0), mat3x2(mat3x2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0)))))))).y)))))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       else
        {
        }
      }
     else
      {
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true), false, true))))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, (true ? 3 : _GLF_FUZZED(-23782)))), int(3)))); _injected_loop_counter ++)
              {
               barrier();
              }
            }
          }
         barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))))))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(5688.9946, -0.7)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0))))).y))), false, true, true))))))
          {
           for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec3(int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-63320) : 4))), 0, 0))))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, 1 * (0))); _injected_loop_counter --)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(int(int(4)))), int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, 1, 0), (ivec3(4, 1, 0)) | (_GLF_IDENTITY(ivec3(4, 1, 0), clamp(ivec3(4, 1, 0), ivec3(4, 1, 0), ivec3(4, 1, 0))))))), ~ (~ (_GLF_IDENTITY(4, clamp(4, 4, 4))))), _GLF_IDENTITY(4, (4) * 1)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, _GLF_IDENTITY(0, (0 << _GLF_IDENTITY(int(8), int(8))) ^ (0)), 1, 1))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, int(ivec4(1, _GLF_IDENTITY(0, (0 << _GLF_IDENTITY(int(8), int(8))) ^ (0)), 1, 1))), int(_GLF_ONE(1.0, injectionSwitch.y)), 1), ~ (~ (ivec3(_GLF_IDENTITY(1, int(ivec4(1, _GLF_IDENTITY(0, (0 << _GLF_IDENTITY(int(8), int(8))) ^ (0)), 1, 1))), int(_GLF_ONE(1.0, injectionSwitch.y)), 1))))), clamp(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, int(ivec4(1, _GLF_IDENTITY(0, (0 << _GLF_IDENTITY(int(8), int(8))) ^ (0)), 1, 1))), int(_GLF_ONE(1.0, injectionSwitch.y)), 1), ~ (~ (ivec3(_GLF_IDENTITY(1, int(ivec4(1, _GLF_IDENTITY(0, (0 << _GLF_IDENTITY(int(8), int(8))) ^ (0)), 1, 1))), int(_GLF_ONE(1.0, injectionSwitch.y)), 1))))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, int(ivec4(1, _GLF_IDENTITY(0, (0 << _GLF_IDENTITY(int(8), int(8))) ^ (0)), 1, 1))), int(_GLF_ONE(1.0, injectionSwitch.y)), 1), ~ (~ (ivec3(_GLF_IDENTITY(1, int(ivec4(1, _GLF_IDENTITY(0, (0 << _GLF_IDENTITY(int(8), int(8))) ^ (0)), 1, 1))), int(_GLF_ONE(1.0, injectionSwitch.y)), 1))))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, int(ivec4(1, _GLF_IDENTITY(0, (0 << _GLF_IDENTITY(int(8), int(8))) ^ (0)), 1, 1))), int(_GLF_ONE(1.0, injectionSwitch.y)), 1), ~ (~ (ivec3(_GLF_IDENTITY(1, int(ivec4(1, _GLF_IDENTITY(0, (0 << _GLF_IDENTITY(int(8), int(8))) ^ (0)), 1, 1))), int(_GLF_ONE(1.0, injectionSwitch.y)), 1)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 0, 1, 1))), (_GLF_IDENTITY(1, int(ivec4(1, _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, int(ivec3(0, 1, 0))))), 1, 1)))) - 0), _GLF_IDENTITY(1, int(ivec4(1, 0, 1, 1)))))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)))))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0), _GLF_IDENTITY((vec3(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)) * mat3(1.0), clamp(_GLF_IDENTITY((vec3(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)) * mat3(1.0), ((vec3(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)) * mat3(1.0)) + vec3(0.0, 0.0, 0.0)), (vec3(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)) * mat3(1.0), (vec3(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)) * mat3(1.0)))), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)))))))))))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, length(vec2(0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 0.0))), 1.0, 0.0, 1.0, cos(0.0)))) > injectionSwitch.y))))))
                {
                }
               else
                {
                 for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-17.07))), 0.0)), injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
              barrier();
            }
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(8), int(8)), (0 >> _GLF_IDENTITY(int(8), int(8))) ^ 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(8), int(8)), ~ (~ (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(8, min(8, 8))), int(8)))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(8), int(8)), ~ (~ (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(8, min(8, 8))), int(8))))))), min(~ ((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(8), int(8)), ~ (~ (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(8, min(8, 8))), int(8))))))), ~ ((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(8), int(8)), ~ (~ (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(8, min(8, 8))), int(8)))))))))))), int(_GLF_IDENTITY(ivec4(~ ((0 >> _GLF_IDENTITY(int(8), int(8)))), 1, 1, (1 & 1)), (ivec4(~ ((0 >> _GLF_IDENTITY(int(8), int(8)))), 1, 1, (1 & 1))) ^ ivec4(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, abs(1.0), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), min(_GLF_IDENTITY(int(8), _GLF_IDENTITY(clamp(int(8), _GLF_IDENTITY(int(8), 0 | (int(8))), _GLF_IDENTITY(int(8), (false ? _GLF_FUZZED(_injected_loop_counter) : int(8)))), (clamp(int(8), _GLF_IDENTITY(int(8), 0 | (int(8))), _GLF_IDENTITY(int(8), (false ? _GLF_FUZZED(_injected_loop_counter) : int(8))))) | (clamp(int(8), _GLF_IDENTITY(int(8), 0 | (int(8))), _GLF_IDENTITY(int(8), (false ? _GLF_FUZZED(_injected_loop_counter) : int(8))))))), _GLF_IDENTITY(int(8), 0 | (int(8))))), int(8))), ~ (~ _GLF_IDENTITY(((0 >> _GLF_IDENTITY(int(8), int(8)))), (((0 >> _GLF_IDENTITY(int(8), int(8))))) ^ 0)))) - 0)); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(714.164) : injectionSwitch.x)) > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true))))))))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 barrier();
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             barrier();
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & -26912)); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))))))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true && (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), false || (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))))))))), true && (false))))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               barrier();
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, 0 | (_injected_loop_counter ++)))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false)))))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(_injected_loop_counter) : int(1))), int(1)))); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  barrier();
                }
              }
            }
          }
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (true ? _GLF_IDENTITY(3, (3) | (3)) : _GLF_FUZZED(_injected_loop_counter)))), _GLF_IDENTITY(int(3), (int(3)) / 1)), (45439 & 0) ^ (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)) / 1, ((int(3)) / 1) + (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))))))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) * 1)))); _injected_loop_counter ++)
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0) > (0 >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_local_id, clamp(_GLF_struct_replacement_12.subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_local_id, (_GLF_struct_replacement_12.subgroup_local_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_struct_replacement_12.subgroup_local_id) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))) - 0u)), _GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_local_id, min(_GLF_struct_replacement_12.subgroup_local_id, _GLF_struct_replacement_12.subgroup_local_id)))) + 1 < subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_local_id + 1 < subgroup_size, ! (! (_GLF_struct_replacement_12.subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) << 0) < subgroup_size)))), ((_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_local_id + 1 < subgroup_size, ! (! (_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_local_id, min(_GLF_struct_replacement_12.subgroup_local_id, _GLF_struct_replacement_12.subgroup_local_id)) + 1 < subgroup_size))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(_GLF_IDENTITY(bvec2(_GLF_struct_replacement_12.subgroup_local_id + 1 < subgroup_size, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_struct_replacement_12.subgroup_local_id + 1 < subgroup_size, false))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_struct_replacement_12.subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true && (true), bool(bvec2(true && (true), true))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(true && (true), bool(bvec2(true && (true), true))), false), false)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true && (true), bool(bvec2(true && (true), true))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(true && (true), bool(bvec2(true && (true), true))), false), false)))), false, true), bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true && (true), bool(bvec2(true && (true), true))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(true && (true), bool(bvec2(true && (true), true))), false), false)))), false, true)))))))))))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
              barrier();
             barrier();
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), ((injectionSwitch) / vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))))) - vec2(0.0, 0.0)).y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y)), false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(((uvec4(158926u, 35117u, 179081u, 124403u) == uvec4(96999u, 9626u, 102642u, 182637u)) ? -82.33 : 6976.5139)), (vec2(0.0, 0.0))[1]), vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(vec2(-221.173, 96.65).g)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))).y)), false)))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))).y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y)), false)))))))), false))))), false)))))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
           atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, max(4, 4)), 64, 4);
           subgroupAll(false);
          }
         else
          {
           atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, max(read, read)), 4, 64, 4);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (-7476 & 0)); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 subgroupAll(true);
                }
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false), false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false), false, false), false)), true)))))));
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3282.0971), _GLF_FUZZED(851.819)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            {
            }
           else
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
              }
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0)) << _GLF_IDENTITY(int(1), int(1))), min((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(0, (0) | (0))) | (_GLF_IDENTITY(0, (0) | (0)))) << _GLF_IDENTITY(int(1), int(1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), int(int(_GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), (true ? (0) | (0) : _GLF_FUZZED(_injected_loop_counter))))))) << _GLF_IDENTITY(int(1), int(1))), ~ (~ ((_GLF_IDENTITY(0, (0) | (0)) << _GLF_IDENTITY(int(1), int(1)))))))) ^ _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), int(ivec2(1, 1)))) | (1))) | (1))), 1 * (clamp(1, _GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, (1) | (1)))))))); _injected_loop_counter ++)
              {
               if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)))), true, false))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-65.69)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))) || false), (false) || false)))
                        barrier();
                       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                        {
                         barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                      }
                     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                       do
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(refract(-9.9, 8.7, -3.2)))) < injectionSwitch.y))))
                            {
                             barrier();
                            }
                           else
                            {
                            }
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             barrier();
                            }
                           else
                            {
                            }
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         do
                          {
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         do
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), (injectionSwitch.x < injectionSwitch.y))))
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               barrier();
                              }
                             else
                              {
                              }
                             if(_GLF_DEAD(false))
                              barrier();
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           else
                            {
                            }
                          }
                        }
                       else
                        {
                        }
                      }
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                    }
                  }
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           do
            {
             for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(7175.9532)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), bool(true)))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false, false)), bool(bvec4(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false, false)), true, true, false)))), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false, false)), bool(bvec4(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false, false)), true, true, false)))), true))))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))));
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(5.0) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0), mat4(1.0) * (mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)), 1.0, 1.0, 1.0))))).x, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), mat4(1.0) * (mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))).x) * 1.0)))); _injected_loop_counter --)
          {
           barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           barrier();
          }
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, false || (false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec3(bool(bvec3(false, false, false)), false, false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
