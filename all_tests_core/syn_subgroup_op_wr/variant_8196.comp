#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) || false), false)), true && (bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (false) || false), false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), clamp((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec2(1791.1873, -0.9).t)), bool(false))), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(injectionSwitch.y, injectionSwitch.y))), min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, 1.0))))), 0.0, cos(0.0), sin(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), (vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, 1.0))))), 0.0, cos(0.0), sin(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))) - sqrt(vec2(0.0, 0.0)))).y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) - _GLF_IDENTITY(0.0, max(0.0, 0.0)))))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0))), injectionSwitch.y)), (injectionSwitch.y) - 0.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))) && true, (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(mat4x3(vec3(0.0, 0.0, 0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat4x3(vec3(0.0, 0.0, 0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(mat4x3(3823.9134, 2.4, 55.65, 99.13, -22.53, 2.8, -8.9, 5201.0845, -8.1, 6689.4510, 4.3, -8.7)) : mat4x3(vec3(0.0, 0.0, 0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))))), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), abs(0.0)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), abs(0.0)))), (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0))), 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), abs(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))))) : _GLF_FUZZED(-983.409)))), float(_GLF_FUZZED(2.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))) - 0.0)))) && _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(mat4x3(vec3(0.0, 0.0, 0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat4x3(vec3(0.0, 0.0, 0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(mat4x3(3823.9134, 2.4, 55.65, 99.13, -22.53, 2.8, -8.9, 5201.0845, -8.1, 6689.4510, 4.3, -8.7)) : mat4x3(vec3(0.0, 0.0, 0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))))), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), abs(0.0)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), abs(0.0)))), (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0))), 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), abs(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))))) : _GLF_FUZZED(-983.409)))), float(_GLF_FUZZED(2.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))) - 0.0)))) && _GLF_IDENTITY(true, false || (true)), true)), true && (bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(mat4x3(vec3(0.0, 0.0, 0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat4x3(vec3(0.0, 0.0, 0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(mat4x3(3823.9134, 2.4, 55.65, 99.13, -22.53, 2.8, -8.9, 5201.0845, -8.1, 6689.4510, 4.3, -8.7)) : mat4x3(vec3(0.0, 0.0, 0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))))), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), abs(0.0)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), abs(0.0)))), (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0))), 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), abs(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))))) : _GLF_FUZZED(-983.409)))), float(_GLF_FUZZED(2.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))) - 0.0)))) && _GLF_IDENTITY(true, false || (true)), true)))))) || false)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, min(_GLF_IDENTITY((injectionSwitch.y) - 0.0, min((injectionSwitch.y) - 0.0, (injectionSwitch.y) - 0.0)), (injectionSwitch.y) - 0.0)))))), false || ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))) && true, ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) && true) || false)), false, true, true))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.1), _GLF_FUZZED(-4.5)), vec2(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * ((injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), max(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(injectionSwitch.y, injectionSwitch.y))), min((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) - _GLF_IDENTITY(0.0, max(0.0, 0.0)))))) && true, bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.1), _GLF_FUZZED(-4.5)), vec2(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * ((injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), max(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(injectionSwitch.y, injectionSwitch.y))), min((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) - _GLF_IDENTITY(0.0, max(0.0, 0.0)))))) && true, bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.1), _GLF_FUZZED(-4.5)), vec2(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * ((injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), max(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(injectionSwitch.y, injectionSwitch.y))), min((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) - _GLF_IDENTITY(0.0, max(0.0, 0.0)))))) && true, false))), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.1))), _GLF_IDENTITY((injectionSwitch.y), max(_GLF_IDENTITY((injectionSwitch.y), 1.0 * ((injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))).y), min((injectionSwitch.y), (injectionSwitch.y))))) - 0.0))))))) && true, (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, cos(0.0) * (0.0)), 0.0)), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / cos(0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), abs(0.0)))), mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(57.37)), bool(false))), 0.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))) * _GLF_IDENTITY((tan(0.0)), (true ? (tan(0.0)) : _GLF_FUZZED(6.2)))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(865.244)), float(0.0), bool(true))))), abs(0.0))), mix(float(_GLF_IDENTITY(float(mat3(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(57.37)), bool(false))), 0.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))) * _GLF_IDENTITY((tan(0.0)), (true ? (tan(0.0)) : _GLF_FUZZED(6.2)))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(865.244)), float(0.0), bool(true))))), abs(0.0))), clamp(float(mat3(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(57.37)), bool(false))), 0.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))) * _GLF_IDENTITY((tan(0.0)), (true ? (tan(0.0)) : _GLF_FUZZED(6.2)))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(865.244)), float(0.0), bool(true))))), abs(0.0))), _GLF_IDENTITY(float(mat3(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(57.37)), bool(false))), 0.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))) * _GLF_IDENTITY((tan(0.0)), (true ? (tan(0.0)) : _GLF_FUZZED(6.2)))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(865.244)), float(0.0), bool(true))))), abs(0.0))), (float(mat3(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(57.37)), bool(false))), 0.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))) * _GLF_IDENTITY((tan(0.0)), (true ? (tan(0.0)) : _GLF_FUZZED(6.2)))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(865.244)), float(0.0), bool(true))))), abs(0.0)))) * 1.0), float(mat3(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(57.37)), bool(false))), 0.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))) * _GLF_IDENTITY((tan(0.0)), (true ? (tan(0.0)) : _GLF_FUZZED(6.2)))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(865.244)), float(0.0), bool(true))))), abs(0.0)))))), float(_GLF_FUZZED(14.84)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), float(_GLF_FUZZED(2.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, tan(0.0), 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(0.4)), bool(false)))))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(587.210)), float(injectionSwitch.y), bool(true))), (injectionSwitch.y) + 0.0)), max((injectionSwitch.y), (injectionSwitch.y))) - 0.0)))) && _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, cos(0.0) * (0.0)), 0.0)), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / cos(0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), abs(0.0)))), mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(57.37)), bool(false))), 0.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))) * _GLF_IDENTITY((tan(0.0)), (true ? (tan(0.0)) : _GLF_FUZZED(6.2)))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(865.244)), float(0.0), bool(true))))), abs(0.0))), mix(float(_GLF_IDENTITY(float(mat3(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(57.37)), bool(false))), 0.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))) * _GLF_IDENTITY((tan(0.0)), (true ? (tan(0.0)) : _GLF_FUZZED(6.2)))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(865.244)), float(0.0), bool(true))))), abs(0.0))), clamp(float(mat3(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(57.37)), bool(false))), 0.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))) * _GLF_IDENTITY((tan(0.0)), (true ? (tan(0.0)) : _GLF_FUZZED(6.2)))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(865.244)), float(0.0), bool(true))))), abs(0.0))), _GLF_IDENTITY(float(mat3(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(57.37)), bool(false))), 0.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))) * _GLF_IDENTITY((tan(0.0)), (true ? (tan(0.0)) : _GLF_FUZZED(6.2)))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(865.244)), float(0.0), bool(true))))), abs(0.0))), (float(mat3(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(57.37)), bool(false))), 0.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))) * _GLF_IDENTITY((tan(0.0)), (true ? (tan(0.0)) : _GLF_FUZZED(6.2)))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(865.244)), float(0.0), bool(true))))), abs(0.0)))) * 1.0), float(mat3(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(57.37)), bool(false))), 0.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))) * _GLF_IDENTITY((tan(0.0)), (true ? (tan(0.0)) : _GLF_FUZZED(6.2)))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(865.244)), float(0.0), bool(true))))), abs(0.0)))))), float(_GLF_FUZZED(14.84)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), float(_GLF_FUZZED(2.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, tan(0.0), 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(0.4)), bool(false)))))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(587.210)), float(injectionSwitch.y), bool(true))), (injectionSwitch.y) + 0.0)), max((injectionSwitch.y), (injectionSwitch.y))) - 0.0)))) && _GLF_IDENTITY(true, ! (! (true))), true)), bool(_GLF_IDENTITY(bvec3(bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, cos(0.0) * (0.0)), 0.0)), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / cos(0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), abs(0.0)))), mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(57.37)), bool(false))), 0.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))) * _GLF_IDENTITY((tan(0.0)), (true ? (tan(0.0)) : _GLF_FUZZED(6.2)))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(865.244)), float(0.0), bool(true))))), abs(0.0))), mix(float(_GLF_IDENTITY(float(mat3(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(57.37)), bool(false))), 0.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))) * _GLF_IDENTITY((tan(0.0)), (true ? (tan(0.0)) : _GLF_FUZZED(6.2)))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(865.244)), float(0.0), bool(true))))), abs(0.0))), clamp(float(mat3(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(57.37)), bool(false))), 0.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))) * _GLF_IDENTITY((tan(0.0)), (true ? (tan(0.0)) : _GLF_FUZZED(6.2)))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(865.244)), float(0.0), bool(true))))), abs(0.0))), _GLF_IDENTITY(float(mat3(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(57.37)), bool(false))), 0.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))) * _GLF_IDENTITY((tan(0.0)), (true ? (tan(0.0)) : _GLF_FUZZED(6.2)))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(865.244)), float(0.0), bool(true))))), abs(0.0))), (float(mat3(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(57.37)), bool(false))), 0.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))) * _GLF_IDENTITY((tan(0.0)), (true ? (tan(0.0)) : _GLF_FUZZED(6.2)))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(865.244)), float(0.0), bool(true))))), abs(0.0)))) * 1.0), float(mat3(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(57.37)), bool(false))), 0.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))) * _GLF_IDENTITY((tan(0.0)), (true ? (tan(0.0)) : _GLF_FUZZED(6.2)))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(865.244)), float(0.0), bool(true))))), abs(0.0)))))), float(_GLF_FUZZED(14.84)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), float(_GLF_FUZZED(2.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, tan(0.0), 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(0.4)), bool(false)))))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(587.210)), float(injectionSwitch.y), bool(true))), (injectionSwitch.y) + 0.0)), max((injectionSwitch.y), (injectionSwitch.y))) - 0.0)))) && _GLF_IDENTITY(true, ! (! (true))), true)), true, true), bvec3(bvec4(bvec3(bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, cos(0.0) * (0.0)), 0.0)), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / cos(0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), abs(0.0)))), mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(57.37)), bool(false))), 0.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))) * _GLF_IDENTITY((tan(0.0)), (true ? (tan(0.0)) : _GLF_FUZZED(6.2)))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(865.244)), float(0.0), bool(true))))), abs(0.0))), mix(float(_GLF_IDENTITY(float(mat3(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(57.37)), bool(false))), 0.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))) * _GLF_IDENTITY((tan(0.0)), (true ? (tan(0.0)) : _GLF_FUZZED(6.2)))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(865.244)), float(0.0), bool(true))))), abs(0.0))), clamp(float(mat3(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(57.37)), bool(false))), 0.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))) * _GLF_IDENTITY((tan(0.0)), (true ? (tan(0.0)) : _GLF_FUZZED(6.2)))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(865.244)), float(0.0), bool(true))))), abs(0.0))), _GLF_IDENTITY(float(mat3(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(57.37)), bool(false))), 0.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))) * _GLF_IDENTITY((tan(0.0)), (true ? (tan(0.0)) : _GLF_FUZZED(6.2)))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(865.244)), float(0.0), bool(true))))), abs(0.0))), (float(mat3(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(57.37)), bool(false))), 0.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))) * _GLF_IDENTITY((tan(0.0)), (true ? (tan(0.0)) : _GLF_FUZZED(6.2)))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(865.244)), float(0.0), bool(true))))), abs(0.0)))) * 1.0), float(mat3(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(57.37)), bool(false))), 0.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))) * _GLF_IDENTITY((tan(0.0)), (true ? (tan(0.0)) : _GLF_FUZZED(6.2)))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(865.244)), float(0.0), bool(true))))), abs(0.0)))))), float(_GLF_FUZZED(14.84)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), float(_GLF_FUZZED(2.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, tan(0.0), 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(0.4)), bool(false)))))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(587.210)), float(injectionSwitch.y), bool(true))), (injectionSwitch.y) + 0.0)), max((injectionSwitch.y), (injectionSwitch.y))) - 0.0)))) && _GLF_IDENTITY(true, ! (! (true))), true)), true, true), false))))))) || false)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), false || ((_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))) && true, ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY((injectionSwitch.y), (false ? _GLF_FUZZED(-5.8) : (injectionSwitch.y))), 1.0, _GLF_IDENTITY(sqrt(1.0), _GLF_IDENTITY((_GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0)))) + _GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(676.950) : (_GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0)))) + _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, sin(0.0), _GLF_IDENTITY(dot(vec3(1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0)), max(float(mat4x2(0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0)), float(mat4x2(0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0)))))), max(_GLF_IDENTITY(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0)), max(float(mat4x2(0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0)), float(mat4x2(0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0)))))), min(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0)), max(float(mat4x2(0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0)), float(mat4x2(0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0)))))), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0)), max(float(mat4x2(0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0)), float(mat4x2(0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0)))))))), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0)), max(float(mat4x2(0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0)), float(mat4x2(0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0))))))))), dot(vec3(1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(76.53)), float(0.0), bool(true))), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(54.87))), 0.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0))), 0.0, abs(0.0), 1.0), mat3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(2167.1499)), bool(false)))) * (mat3(_GLF_IDENTITY((injectionSwitch.y), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false) ? _GLF_FUZZED(_GLF_IDENTITY(-5.8, mix(float(_GLF_IDENTITY(-5.8, (-5.8) - 0.0)), float(_GLF_FUZZED(-55.35)), bool(false)))) : (injectionSwitch.y))), 1.0, sqrt(1.0), 0.0, sin(0.0), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0), tan(vec3(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7099.7048)), float(0.0), bool(true))))), 0.0)) + (vec3(1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0))), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))))), dot(vec3(1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0))), 0.0, abs(0.0), 1.0))))) - 0.0)))) && true) || false)), false, true, true)))))) || false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (injectionSwitch.y) - 0.0)) / abs(1.0))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (true ? _GLF_IDENTITY((gl_WorkGroupSize) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), ((gl_WorkGroupSize) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) / uvec3(1u, 1u, 1u)) : _GLF_FUZZED(uvec3(193067u, 23978u, 84020u))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0, sqrt(1.0), 0.0, 0.0))))).y))), false, true, true))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(0.0, 0.0) + (max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) && true))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.5)), bool(false)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bool((false))))))) || false), ! (! (! (_GLF_IDENTITY(false, true && (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))), ! (! (! (_GLF_IDENTITY(false, true && (false))))))) && true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) - uvec3(0u, 0u, 0u), max((gl_WorkGroupID) - uvec3(0u, 0u, 0u), _GLF_IDENTITY((gl_WorkGroupID) - uvec3(0u, 0u, 0u), (_GLF_IDENTITY((gl_WorkGroupID) - uvec3(0u, 0u, 0u), ((gl_WorkGroupID) - uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u))))))), gl_WorkGroupID, gl_WorkGroupID)), max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + tan(vec2(0.0, 0.0))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, _GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), subgroup_id)))), min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), subgroup_id)))), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), subgroup_id)))))), subgroup_id))), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))) >> 0u, (true ? (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))) >> 0u : _GLF_FUZZED(subgroup_local_id)))), 1u, 0u, 1u), (uvec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))) >> 0u), 1u, 0u, 1u)) >> uvec4(0u, 0u, 0u, 0u)))))) * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(74.05), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(35.07)), bvec2(true, false))).y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_size) : subgroup_base)) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1)), subgroup_local_id + 1))) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) * _GLF_IDENTITY(1u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_base), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_base), (true ? _GLF_FUZZED(subgroup_base) : _GLF_FUZZED(subgroup_id))), _GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base))) : 1u)))) << 0u), min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) * 1u, (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) * 1u) / 1u))) << 0u), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)) * 1u)) << 0u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) * 1u, (true ? ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) << 0) : _GLF_FUZZED((-76435 & -83018))))))), (1) | (1))) % subgroup_size) * 1u : _GLF_FUZZED(subgroup_local_id))), (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u) | ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))), (subgroup_local_id + 1) % subgroup_size))) * 1u)))) << 0u), min(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(subgroup_size), (true ? subgroup_size : _GLF_FUZZED(subgroup_size)) * 1u), (true ? subgroup_size : _GLF_FUZZED(subgroup_size)) ^ 0u))), 0u), (uvec2(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_size))), 0u)) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u)))))), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, (0u | 0u) + (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))) + 1) % subgroup_size) * 1u)) << 0u), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, (1) - (96376 & 0))) % subgroup_size) * 1u)) << 0u)))) : _GLF_FUZZED(subgroup_local_id)));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec4(bvec3(false, true, false), _GLF_IDENTITY(false, (false) && true))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 uint read = _GLF_IDENTITY(0, (0) ^ 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  return;
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), 1u * (_GLF_IDENTITY(uint(1), (uint(_GLF_IDENTITY(1, ~ (~ (1))))) - 0u))), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)))))), 1.0, exp(0.0), 0.0, 1.0))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), false))))), false, true, false)), bool(bool(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))))))), _GLF_IDENTITY(true, bool(bvec3(true, false, false))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY((subgroup_local_id % 2) == 0, bool(bvec3((subgroup_local_id % 2) == 0, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(3.3)), bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, abs(1.0)))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8433.8020) : injectionSwitch.y)), false), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (! (bool(bvec4(false, false, false, true))))))))), false, true)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)).y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, max(2, 2)));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(false, ! (! (false)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), _GLF_IDENTITY(! (! (bool(false))), bool(bvec2(! (! (bool(false))), true))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED((4857.4736)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED((4857.4736)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED((4857.4736)))), float(mat3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED((4857.4736)))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED((4857.4736))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED((4857.4736)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED((4857.4736)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED((4857.4736)))), float(mat3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED((4857.4736)))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED((4857.4736))))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED((4857.4736)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED((4857.4736)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED((4857.4736)))), float(mat3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED((4857.4736)))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED((4857.4736))))))) : _GLF_FUZZED(-5.8)))) / 1.0)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, false, true)))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false)))))))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true)))))))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + sqrt(0.0)) > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, max(2, 2)), 2))), ~ (~ (~ (2)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(min(ivec4(-70875, 62362, 16579, 43224), 94689)[1]))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (2), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(~ (2), 1), (ivec2(~ (2), 1)) - ivec2(0, 0))), int(ivec3(int(_GLF_IDENTITY(ivec2(~ (2), 1), (ivec2(~ (2), 1)) - ivec2(0, 0))), 0, 1))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(~ (2), 1), (ivec2(~ (2), 1)) - ivec2(0, 0))), int(ivec3(int(_GLF_IDENTITY(ivec2(~ (2), 1), (ivec2(~ (2), 1)) - ivec2(0, 0))), 0, 1))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(~ (2), 1), (ivec2(~ (2), 1)) - ivec2(0, 0))), int(ivec3(int(_GLF_IDENTITY(ivec2(~ (2), 1), (ivec2(~ (2), 1)) - ivec2(0, 0))), 0, 1))))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (2), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(~ (2), 1), (ivec2(~ (2), 1)) - ivec2(0, 0))), int(ivec3(int(_GLF_IDENTITY(ivec2(~ (2), 1), (ivec2(~ (2), _GLF_IDENTITY(1, int(ivec2(1, 1))))) - ivec2(0, 0))), 0, 1))))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (2), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(~ (2), 1), (ivec2(~ (2), 1)) - ivec2(0, 0))), int(ivec3(int(_GLF_IDENTITY(ivec2(~ (2), 1), (ivec2(~ (2), 1)) - ivec2(0, 0))), 0, 1)))), (_GLF_IDENTITY(~ (2), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(~ (2), 1), (ivec2(~ (2), 1)) - ivec2(0, 0))), int(ivec3(int(_GLF_IDENTITY(ivec2(~ (2), 1), (ivec2(~ (2), 1)) - ivec2(0, 0))), 0, 1))))) | (_GLF_IDENTITY(~ (2), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(~ (2), 1), (ivec2(~ (2), 1)) - ivec2(0, 0))), int(ivec3(int(_GLF_IDENTITY(ivec2(~ (2), 1), (ivec2(~ (2), 1)) - ivec2(0, 0))), 0, 1)))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(~ (2), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(~ (2), 1), (ivec2(~ (2), 1)) - ivec2(0, 0))), int(ivec3(int(_GLF_IDENTITY(ivec2(~ (2), 1), (ivec2(~ (2), 1)) - ivec2(0, 0))), 0, 1))))), _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(~ (2), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(~ (2), 1), (ivec2(~ (2), 1)) - ivec2(0, 0))), int(ivec3(int(_GLF_IDENTITY(ivec2(~ (2), 1), (ivec2(~ (2), 1)) - ivec2(0, 0))), 0, 1))))))), min(~ (~ ((_GLF_IDENTITY(~ (2), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(~ (2), 1), (ivec2(~ (2), 1)) - ivec2(0, 0))), int(ivec3(int(_GLF_IDENTITY(ivec2(~ (2), 1), (ivec2(~ (2), 1)) - ivec2(0, 0))), 0, 1))))))), ~ (~ ((_GLF_IDENTITY(~ (2), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(~ (2), 1), (ivec2(~ (2), 1)) - ivec2(0, 0))), int(ivec3(int(_GLF_IDENTITY(ivec2(~ (2), 1), (ivec2(~ (2), 1)) - ivec2(0, 0))), 0, 1))))))))))))) ^ 0)), 2, _GLF_IDENTITY(2, (2) | (2)))));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true)), true && (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(! (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(! (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true))), false))))))))))), ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true)))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))) || false))) || _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))), ! (! (! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))))))))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY(_GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), true && ((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_DEAD(false)))))))) && true, false || (_GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), true && ((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ((! (true))) && true))))))) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x))), float(_GLF_FUZZED(-3.5)), bool(_GLF_IDENTITY(false, false || (false))))) > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec4(1.5, 14.84, -2585.7637, 1.0).t)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4496.4714)), float(injectionSwitch.y), bool(true))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))))))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))) && true))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
}
