#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) | (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, int(ivec3(1, 0, 1)))), max(int(_GLF_IDENTITY(1, int(ivec3(1, 0, 1)))), int(_GLF_IDENTITY(1, int(ivec3(1, 0, 1))))))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-117.520) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = ((0 >> _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)), _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 1), (ivec3(1, 1, 1)) | (ivec3(1, 1, 1))))) * (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) ^ 0)), _GLF_IDENTITY(int(2), (int(2)) << 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(int(0), int(0))))) >> _GLF_IDENTITY(int(0), int(0))) | 0)))); _injected_loop_counter ++)
        {
         return;
        }
      }
     return;
    }
  }
 uvec2 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id;
 uvec2 GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id;
 uvec4 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size;
 uint subgroup_id = gl_SubgroupID;
 do
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (-23086 & 0)); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false)))))))
              return;
            }
           if(_GLF_DEAD(false))
            continue;
          }
         else
          {
          }
         break;
        }
       break;
      }
     GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y = subgroup_id;
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), true, false)))))) || false)), ! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (_GLF_WRAPPED_LOOP(false)))))));
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_size = gl_SubgroupSize;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
   GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x = subgroup_size;
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w = GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z = subgroup_local_id;
        }
       else
        {
        }
      }
    }
  }
 else
  {
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 do
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, 0 | (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0)))) / 1) < 1), true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, 0 | (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0)))) / 1) < 1)))) || false); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
        {
         return;
        }
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
   else
    {
     GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.x = num_workgroup;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(1, ~ (~ (1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0), (true ? mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0) : _GLF_FUZZED(mat2(-62.32, 0.2, -705.821, 964.052)))))) < injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               else
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                      {
                       return;
                       if(_GLF_DEAD(false))
                        continue;
                       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
                        return;
                      }
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
          }
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
      }
    }
  }
 else
  {
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (true)), false || ((! (true)))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((! (true)), false || ((! (true)))), (_GLF_IDENTITY((! (true)), _GLF_IDENTITY(false, false || (false)) || ((! (true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, 1u * (gl_WorkGroupID.x));
 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y = workgroup_id;
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, false))))) || false))))))
    {
     _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y = GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y, 0u | (GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y = GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y));
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y), (_GLF_FUZZED(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, max(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, min(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id)), ~ (~ (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id))), GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id)), GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id)).y)) | 0u) : _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y, _GLF_IDENTITY((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), uint(7u)), max(0u >> _GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(0u, uint(uint(0u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) | (7u))), uint(7u))))), (true ? (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), uint(7u)), max(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), uint(7u)), ~ (~ (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))), 0u >> _GLF_IDENTITY(uint(7u), uint(7u))))) : _GLF_FUZZED(num_workgroup))) | _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y, 0u ^ _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y), clamp((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y), (GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y), (GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y))))), ((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y, 0u ^ (GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)))) | 0u))) | _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y), _GLF_IDENTITY(_GLF_IDENTITY(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)), max(_GLF_IDENTITY(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)), clamp(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)), ((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)), ((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)))), ((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)))) | 0u, _GLF_IDENTITY(uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y), 1u * (_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y), ~ (~ ((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y))))))) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))), clamp(uint(_GLF_IDENTITY(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u), (true ? _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u) : _GLF_FUZZED(19515u)))))), max(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u), (true ? _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u) : _GLF_FUZZED(19515u)))))), uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u), (true ? _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u) : _GLF_FUZZED(19515u))))))))), uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))), uint(uvec2(((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id, uvec2(0u, 0u) + (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id, (GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id) | uvec2(0u, 0u)))).y)) | 0u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), min((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))))))), 1u, 0u)), 1u * (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(4u) : _GLF_FUZZED(subgroup_size))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))), clamp(uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY((uint(4u)), _GLF_IDENTITY(uint(uvec4((uint(4u)), (1u ^ 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (_GLF_IDENTITY(uint(uvec4((uint(4u)), (1u ^ 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(uvec4((uint(4u)), (1u ^ 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) << 0u))))) / 1u))))), uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, _GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))), clamp((1u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))), clamp((1u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))) : _GLF_FUZZED(subgroup_size))))), uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), clamp(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))) | (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)))), (1u | 1u)))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))))))), 1u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(4u) : _GLF_FUZZED(subgroup_size))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))), clamp(uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY((uint(4u)), _GLF_IDENTITY(uint(uvec4((uint(4u)), (1u ^ 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (_GLF_IDENTITY(uint(uvec4((uint(4u)), (1u ^ 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(uvec4((uint(4u)), (1u ^ 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) << 0u))))) / 1u))))), uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, _GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))), clamp((1u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))), clamp((1u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))) : _GLF_FUZZED(subgroup_size))))), uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), clamp(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))) | (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)))), (1u | 1u)))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))))))), 1u, 0u)))))))))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y), (_GLF_FUZZED(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, max(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, min(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id)), ~ (~ (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id))), GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id)), GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id)).y)) | 0u) : _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y, _GLF_IDENTITY((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), uint(7u)), max(0u >> _GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(0u, uint(uint(0u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) | (7u))), uint(7u))))), (true ? (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), uint(7u)), max(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), uint(7u)), ~ (~ (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))), 0u >> _GLF_IDENTITY(uint(7u), uint(7u))))) : _GLF_FUZZED(num_workgroup))) | _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y, 0u ^ _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y), clamp((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y), (GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y), (GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y))))), ((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y, 0u ^ (GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)))) | 0u))) | _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y), _GLF_IDENTITY(_GLF_IDENTITY(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)), max(_GLF_IDENTITY(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)), clamp(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)), ((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)), ((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)))), ((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)))) | 0u, _GLF_IDENTITY(uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y), 1u * (_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y), ~ (~ ((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y))))))) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))), clamp(uint(_GLF_IDENTITY(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u), (true ? _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u) : _GLF_FUZZED(19515u)))))), max(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u), (true ? _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u) : _GLF_FUZZED(19515u)))))), uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u), (true ? _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u) : _GLF_FUZZED(19515u))))))))), uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))), uint(uvec2(((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id, uvec2(0u, 0u) + (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id, (GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id) | uvec2(0u, 0u)))).y)) | 0u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), min((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))))))), 1u, 0u)), 1u * (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(4u) : _GLF_FUZZED(subgroup_size))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))), clamp(uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY((uint(4u)), _GLF_IDENTITY(uint(uvec4((uint(4u)), (1u ^ 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (_GLF_IDENTITY(uint(uvec4((uint(4u)), (1u ^ 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(uvec4((uint(4u)), (1u ^ 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) << 0u))))) / 1u))))), uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, _GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))), clamp((1u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))), clamp((1u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))) : _GLF_FUZZED(subgroup_size))))), uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), clamp(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))) | (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)))), (1u | 1u)))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))))))), 1u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(4u) : _GLF_FUZZED(subgroup_size))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))), clamp(uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY((uint(4u)), _GLF_IDENTITY(uint(uvec4((uint(4u)), (1u ^ 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (_GLF_IDENTITY(uint(uvec4((uint(4u)), (1u ^ 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(uvec4((uint(4u)), (1u ^ 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) << 0u))))) / 1u))))), uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, _GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))), clamp((1u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))), clamp((1u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))) : _GLF_FUZZED(subgroup_size))))), uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), clamp(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))) | (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)))), (1u | 1u)))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))))))), 1u, 0u)))))))))))), max(workgroup_size * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y), (_GLF_FUZZED(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, max(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, min(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id)), ~ (~ (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id))), GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id)), GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id)).y)) | 0u) : _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y, _GLF_IDENTITY((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), uint(7u)), max(0u >> _GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(0u, uint(uint(0u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) | (7u))), uint(7u))))), (true ? (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), uint(7u)), max(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), uint(7u)), ~ (~ (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))), 0u >> _GLF_IDENTITY(uint(7u), uint(7u))))) : _GLF_FUZZED(num_workgroup))) | _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y, 0u ^ _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y), clamp((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y), (GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y), (GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y))))), ((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y, 0u ^ (GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)))) | 0u))) | _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y), _GLF_IDENTITY(_GLF_IDENTITY(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)), max(_GLF_IDENTITY(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)), clamp(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)), ((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)), ((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)))), ((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)))) | 0u, _GLF_IDENTITY(uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y), 1u * (_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y), ~ (~ ((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y))))))) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))), clamp(uint(_GLF_IDENTITY(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u), (true ? _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u) : _GLF_FUZZED(19515u)))))), max(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u), (true ? _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u) : _GLF_FUZZED(19515u)))))), uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u), (true ? _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u) : _GLF_FUZZED(19515u))))))))), uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))), uint(uvec2(((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id, uvec2(0u, 0u) + (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id, (GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id) | uvec2(0u, 0u)))).y)) | 0u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), min((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))))))), 1u, 0u)), 1u * (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(4u) : _GLF_FUZZED(subgroup_size))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))), clamp(uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY((uint(4u)), _GLF_IDENTITY(uint(uvec4((uint(4u)), (1u ^ 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (_GLF_IDENTITY(uint(uvec4((uint(4u)), (1u ^ 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(uvec4((uint(4u)), (1u ^ 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) << 0u))))) / 1u))))), uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, _GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))), clamp((1u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))), clamp((1u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))) : _GLF_FUZZED(subgroup_size))))), uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), clamp(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))) | (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)))), (1u | 1u)))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))))))), 1u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(4u) : _GLF_FUZZED(subgroup_size))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))), clamp(uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY((uint(4u)), _GLF_IDENTITY(uint(uvec4((uint(4u)), (1u ^ 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (_GLF_IDENTITY(uint(uvec4((uint(4u)), (1u ^ 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(uvec4((uint(4u)), (1u ^ 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) << 0u))))) / 1u))))), uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, _GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))), clamp((1u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))), clamp((1u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))) : _GLF_FUZZED(subgroup_size))))), uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), clamp(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))) | (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)))), (1u | 1u)))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))))))), 1u, 0u)))))))))))), workgroup_size * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y), (_GLF_FUZZED(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, max(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, min(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id)), ~ (~ (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id))), GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id)), GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id)).y)) | 0u) : _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y, _GLF_IDENTITY((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), uint(7u)), max(0u >> _GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(0u, uint(uint(0u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) | (7u))), uint(7u))))), (true ? (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), uint(7u)), max(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), uint(7u)), ~ (~ (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))), 0u >> _GLF_IDENTITY(uint(7u), uint(7u))))) : _GLF_FUZZED(num_workgroup))) | _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y, 0u ^ _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y), clamp((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y), (GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y), (GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y))))), ((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y, 0u ^ (GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)))) | 0u))) | _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y), _GLF_IDENTITY(_GLF_IDENTITY(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)), max(_GLF_IDENTITY(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)), clamp(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)), ((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)), ((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)))), ((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)))) | 0u, _GLF_IDENTITY(uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y), 1u * (_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y), ~ (~ ((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y))))))) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))), clamp(uint(_GLF_IDENTITY(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u), (true ? _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u) : _GLF_FUZZED(19515u)))))), max(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u), (true ? _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u) : _GLF_FUZZED(19515u)))))), uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u), (true ? _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u) : _GLF_FUZZED(19515u))))))))), uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))), uint(uvec2(((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id, uvec2(0u, 0u) + (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id, (GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id) | uvec2(0u, 0u)))).y)) | 0u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), min((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))))))), 1u, 0u)), 1u * (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(4u) : _GLF_FUZZED(subgroup_size))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))), clamp(uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY((uint(4u)), _GLF_IDENTITY(uint(uvec4((uint(4u)), (1u ^ 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (_GLF_IDENTITY(uint(uvec4((uint(4u)), (1u ^ 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(uvec4((uint(4u)), (1u ^ 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) << 0u))))) / 1u))))), uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, _GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))), clamp((1u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))), clamp((1u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))) : _GLF_FUZZED(subgroup_size))))), uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), clamp(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))) | (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)))), (1u | 1u)))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))))))), 1u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(4u) : _GLF_FUZZED(subgroup_size))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))), clamp(uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY((uint(4u)), _GLF_IDENTITY(uint(uvec4((uint(4u)), (1u ^ 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (_GLF_IDENTITY(uint(uvec4((uint(4u)), (1u ^ 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(uvec4((uint(4u)), (1u ^ 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) << 0u))))) / 1u))))), uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, _GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))), clamp((1u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))), clamp((1u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))) : _GLF_FUZZED(subgroup_size))))), uint(uvec2(((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.y)) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), clamp(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))) | (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)))), (1u | 1u)))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))))))), 1u, 0u))))))))))))))));
 uint subgroup_base = GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w;
 GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x = subgroup_base;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, clamp(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x) / 1u) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x) / _GLF_IDENTITY(1u, 0u ^ (1u))) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z), ((_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x) / _GLF_IDENTITY(1u, 0u ^ (1u))) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z)) << 0u)), _GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size) / uvec4(1u, 1u, 1u, 1u)).z, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, max(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, _GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x) << 0u)))) / 1u) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, max(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, _GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x) << 0u)))) / _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) | (1u))))) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z) * 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id, (GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id) - uvec2(0u, 0u)), (uvec2(0u, 0u) | uvec2(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))) | (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id, clamp(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id, _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id, (GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id) + uvec2(0u, 0u)), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id, min(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id, GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id)))))).x + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, 0u ^ (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x) / 1u) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, 0u ^ (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x) / 1u) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z)), min(_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, _GLF_IDENTITY(0u, (0u) | (0u)) ^ (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x) / 1u) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, 0u ^ (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x) / 1u) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, 0u ^ (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x) / 1u) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z)), (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, 0u ^ (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x) / 1u) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z))) << 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x) / 1u) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z), (0u ^ (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x) / 1u) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z)) ^ 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, 0u ^ (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x) / 1u) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z)))), _GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, 0u ^ (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, 0u | (GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x))) / 1u) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z)), _GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, 0u ^ (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x) / 1u) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z)))), 0u)))))))), 0u | (clamp(_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, 0u ^ (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x) / 1u) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z)), _GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, 0u ^ (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x) / 1u) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, 0u ^ (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x) / 1u) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x) / 1u) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z))))))))), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, clamp(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x) / 1u) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x) / _GLF_IDENTITY(1u, 0u ^ (1u))) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z), ((_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x) / _GLF_IDENTITY(1u, 0u ^ (1u))) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z)) << 0u)), _GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size) / uvec4(1u, 1u, 1u, 1u)).z, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, max(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, _GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x) << 0u)))) / 1u) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, max(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, _GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x) << 0u)))) / _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) | (1u))))) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z) * 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id, (GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id) - uvec2(0u, 0u)), (uvec2(0u, 0u) | uvec2(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))) | (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id, clamp(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id, _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id, (GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id) + uvec2(0u, 0u)), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id, min(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id, GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id)))))).x + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, 0u ^ (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x) / 1u) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, 0u ^ (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x) / 1u) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z)), min(_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, _GLF_IDENTITY(0u, (0u) | (0u)) ^ (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x) / 1u) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, 0u ^ (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x) / 1u) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, 0u ^ (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x) / 1u) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z)), (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, 0u ^ (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x) / 1u) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z))) << 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x) / 1u) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z), (0u ^ (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x) / 1u) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z)) ^ 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, 0u ^ (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x) / 1u) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z)))), _GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, 0u ^ (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, 0u | (GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x))) / 1u) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z)), _GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, 0u ^ (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x) / 1u) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z)))), 0u)))))))), 0u | (clamp(_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, 0u ^ (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x) / 1u) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z)), _GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, 0u ^ (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x) / 1u) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, 0u ^ (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x) / 1u) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x, (workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x) / 1u) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z))))))))))) - 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x + ((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z + 1) % GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w), (false ? _GLF_FUZZED(workgroup_id) : workgroup_base + GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id.x + ((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z + 1) % GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w)));
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (64623 & 0)); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, abs(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, length(0.0), 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, length(0.0), 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, round(length(normalize(1.0))) * (1.0)))), 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))) < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(26.36) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0)).x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0) : _GLF_FUZZED(-55.27))) > injectionSwitch.y)) ? _GLF_FUZZED(423.081) : injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(76.55)), vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), bvec2(false, true))).y, (false ? _GLF_FUZZED(26.36) : injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(76.55)), vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), bvec2(false, true))).y, (false ? _GLF_FUZZED(26.36) : injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(76.55)), vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), bvec2(false, true))).y, (false ? _GLF_FUZZED(26.36) : injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(76.55)), vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), bvec2(false, true))).y, (false ? _GLF_FUZZED(26.36) : injectionSwitch.y))) + 0.0))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(423.081), (false ? _GLF_FUZZED(-3436.7645) : _GLF_FUZZED(423.081))) : injectionSwitch.y)))), false || _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(26.36) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(bool(injectionSwitch.x > injectionSwitch.y), false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(bool(injectionSwitch.x > injectionSwitch.y), false)))))), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(bool(injectionSwitch.x > injectionSwitch.y), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) ? _GLF_IDENTITY(_GLF_FUZZED(423.081), max(_GLF_FUZZED(423.081), _GLF_FUZZED(423.081))) : injectionSwitch.y), (true ? (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(423.081), max(_GLF_FUZZED(423.081), _GLF_FUZZED(423.081))) : injectionSwitch.y) : _GLF_FUZZED(9011.9782))))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0))).y, (false ? _GLF_FUZZED(26.36) : injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0))).y, (false ? _GLF_FUZZED(26.36) : injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0))).y, (false ? _GLF_FUZZED(26.36) : injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0))).y, (false ? _GLF_FUZZED(26.36) : injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0))).y, (false ? _GLF_FUZZED(26.36) : injectionSwitch.y)), mix(float(_GLF_FUZZED(-544.204)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0))).y, (false ? _GLF_FUZZED(26.36) : injectionSwitch.y)), float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0))).y, (false ? _GLF_FUZZED(26.36) : injectionSwitch.y)), 1.0, 0.0, 0.0, 0.0, 0.0)))), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1635.0198)), vec2(_GLF_FUZZED(-156.618), (injectionSwitch)[1]), bvec2(false, true)))) / sqrt(exp(vec2(0.0, 0.0)))).y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(423.081), max(_GLF_FUZZED(423.081), _GLF_FUZZED(423.081))) : injectionSwitch.y)))))), (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(26.36, max(26.36, _GLF_IDENTITY(26.36, mix(float(26.36), float(_GLF_FUZZED(648.900)), bool(false)))))) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(423.081), max(_GLF_FUZZED(423.081), _GLF_FUZZED(423.081))) : injectionSwitch.y), ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) ? _GLF_IDENTITY(_GLF_FUZZED(423.081), _GLF_IDENTITY(max(_GLF_FUZZED(423.081), _GLF_FUZZED(423.081)), min(_GLF_IDENTITY(max(_GLF_FUZZED(423.081), _GLF_FUZZED(423.081)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : _GLF_IDENTITY(max(_GLF_FUZZED(423.081), _GLF_FUZZED(423.081)), min(max(_GLF_FUZZED(423.081), _GLF_FUZZED(423.081)), max(_GLF_FUZZED(423.081), _GLF_FUZZED(423.081)))))), max(_GLF_FUZZED(423.081), _GLF_FUZZED(423.081))))) : injectionSwitch.y)) - 0.0))))))) && true))))), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))))), true && (bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(26.36) : injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(423.081) : injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(423.081) : injectionSwitch.y))), float(_GLF_FUZZED(-804.959)), bool(false)))))), _GLF_IDENTITY(false, (false) || false)))))))))
    {
     if(_GLF_DEAD(false))
      break;
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), max(int(6), int(6)))) | (_GLF_IDENTITY(int(6), (int(6)) >> 0))), _GLF_IDENTITY(int(_GLF_IDENTITY(6, 0 | (6))), (true ? int(6) : _GLF_IDENTITY(_GLF_FUZZED((mat2x3(-96.88, 6.9, 483.981, -6.0, 18.50, -9.0) , 9106)), 0 ^ (_GLF_FUZZED((mat2x3(-96.88, 6.9, 483.981, -6.0, 18.50, -9.0) , 9106))))))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, 0 | (6))), (true ? int(6) : _GLF_IDENTITY(_GLF_FUZZED((mat2x3(-96.88, 6.9, 483.981, -6.0, 18.50, -9.0) , 9106)), int(_GLF_IDENTITY(ivec2(_GLF_FUZZED((mat2x3(-96.88, 6.9, 483.981, -6.0, 18.50, -9.0) , 9106)), 0), ~ (~ (ivec2(_GLF_FUZZED((mat2x3(-96.88, 6.9, 483.981, -6.0, 18.50, -9.0) , 9106)), 0)))))))))) | (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, 0 | (6))), (true ? int(6) : _GLF_FUZZED((mat2x3(-96.88, 6.9, 483.981, -6.0, 18.50, -9.0) , 9106)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
            return;
           for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), clamp((_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), (_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), (_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))) - tan(0.0)), injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))) - tan(0.0)), injectionSwitch.x)), 0 ^ _GLF_IDENTITY((int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))) - tan(0.0)), injectionSwitch.x))), ((int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))) - tan(0.0)), injectionSwitch.x)))) | 0))) + 0), _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0, ~ (_GLF_IDENTITY(~ ((int(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0), 1 * (~ ((int(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (1 ^ 0) * (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) ^ 0)))))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                     if(_GLF_DEAD(false))
                      return;
                    }
                   else
                    {
                     for(int _injected_loop_counter = _GLF_IDENTITY(((0 >> _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), min(((0 >> _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), ((0 >> _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
                        {
                         return;
                        }
                       else
                        {
                        }
                      }
                     do
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
                        return;
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))));
                }
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                continue;
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true))))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
                  {
                   return;
                  }
                }
              }
            }
          }
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         return;
        }
      }
    }
   else
    {
    }
  }
 uint read = 0;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) ^ 0), 0), (false ? _GLF_FUZZED(ivec2(-28318, -64492)) : ivec2(_GLF_IDENTITY(1, (1) ^ 0), 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), false, false)))))
      break;
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), ((false)) && true) && true)))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))
          {
           for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 | 0), ! (! (_injected_loop_counter != (0 | 0))))); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))
              {
               return;
              }
             else
              {
              }
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        break;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      break;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z % 2) == 0, _GLF_IDENTITY((_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z % 2) == 0, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z % 2) == 0, false || ((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z % 2) == 0))))) && true, bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z % 2) == 0, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z % 2) == 0, false || ((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z % 2) == 0)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z % 2) == 0, ! (! ((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z % 2) == 0))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z % 2) == 0, false || ((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z % 2) == _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, int(ivec2(0, 1)))))) | (0)))))))))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z % 2) == 0, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z % 2) == 0, false || ((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z % 2) == 0))))) && true, ((_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z % 2) == 0, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z % 2), (_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z % 2), (_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z % 2), 1u * ((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z % 2)))) | ((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z % 2)))) | ((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z % 2))) == 0, false || ((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z % 2) == 0))))) && true) || false))), true, true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z % 2), _GLF_IDENTITY(uint(uvec3((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z % 2), (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (true ? uint(2u) : _GLF_FUZZED(workgroup_size))))), 1u)), (uint(uvec3((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z % 2), (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (true ? uint(2u) : _GLF_FUZZED(workgroup_size))))), 1u))) >> 0u)) == 0, _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size, min(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size, GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size)).z, _GLF_IDENTITY(uint(uvec3(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (_GLF_IDENTITY(~ (uint(uvec3(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((~ (~ (uint(uvec3(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), clamp((~ (~ (uint(uvec3(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (~ (~ (uint(uvec3(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (~ (~ (uint(uvec3(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))))) % 2) == 0), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z % 2) == 0), ! (! (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z % 2) == 0))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z % 2) == 0), ! (! (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z % 2) == 0))))), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z % 2) == 0), ! (! (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z % 2) == 0))))), false), true, true))))))) || false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((_GLF_IDENTITY((int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) / 1.0), injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), (0 | 0) | (_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), (_GLF_IDENTITY(((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), (false ? _GLF_FUZZED(38004) : ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))))) - 0) | 0)))), 1 * ((_GLF_IDENTITY((int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) / 1.0), injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), (0 | 0) | (_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), (_GLF_IDENTITY(((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), (false ? _GLF_FUZZED(38004) : ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))))) - 0) | 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter < ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), ~ (~ ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))))) >> ((0 >> _GLF_IDENTITY(int(4), int(4))) | 0))), ~ (~ (((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))))), false, false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), true)))))))))) && true); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   subgroupAll(_GLF_IDENTITY(false, (false) || false));
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
            }
          }
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))), bool(bvec4((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)))).x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.1) : injectionSwitch.y))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false))))))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false))))))), false)))))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false))))))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false))))))), false)))))))))))))))), _GLF_IDENTITY(false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) && true)), (false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) && true))) && true)), false || (! (_GLF_IDENTITY(false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) && true)), (false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8051.5295))), injectionSwitch.y, injectionSwitch.y))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)) && true)), true)), false, true))) && true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false))), (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false)))) || false)), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)), true)), false, true)), (bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, false, false)))) || false)), true)), false, true))) && true))), false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) && true))) && true)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
        }
       else
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), _GLF_IDENTITY(1 * ((1)), max(1 * ((1)), 1 * ((1)))))); _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter) | (_injected_loop_counter), (_GLF_IDENTITY((_injected_loop_counter) | (_injected_loop_counter), clamp((_injected_loop_counter) | (_injected_loop_counter), (_injected_loop_counter) | (_injected_loop_counter), (_injected_loop_counter) | (_injected_loop_counter)))) - 0)) > _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.0)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), bool(true))))) ^ (0))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) > 0), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) > 0), true, false, false)), (bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) > 0), true, false, false))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(ivec4(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter)), 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 0 | (int(6))))), 1))) > 0)), ! (! (_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) > 0)), true && (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))) > 0, bool(bool(_injected_loop_counter > 0)))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, bool(bool(_injected_loop_counter > 0))))) || false)))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || false)), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(true, (true) || false))), true && (_GLF_IDENTITY((bool(_GLF_IDENTITY(true, (true) || false))), ! (! ((bool(_GLF_IDENTITY(true, (true) || false))))))))))))))) && (bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * (0 ^ 1)) > 0)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) > 0)) && true)))), true && (bool(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))))), true && ((! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)) && true)), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)) && true))), (bool((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)) && true)))) && true))))), true && (bool(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))))))))))); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             read = atomicLoad(buf[virtual_gid], 4, 64, 2);
            }
           else
            {
             if(_GLF_DEAD(false))
              break;
            }
          }
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 + _GLF_IDENTITY((int(5)), clamp((int(5)), (int(5)), _GLF_IDENTITY((int(5)), _GLF_IDENTITY(clamp(_GLF_IDENTITY((int(5)), ~ (~ ((int(5))))), _GLF_IDENTITY((int(5)), ((int(5))) ^ 0), (int(5))), clamp(clamp(_GLF_IDENTITY((int(5)), ~ (~ ((int(5))))), _GLF_IDENTITY((int(5)), ((int(5))) ^ 0), (int(5))), _GLF_IDENTITY(clamp(_GLF_IDENTITY((int(5)), ~ (~ ((int(5))))), _GLF_IDENTITY((int(5)), ((int(5))) ^ 0), (int(5))), min(clamp(_GLF_IDENTITY((int(5)), ~ (~ ((int(5))))), _GLF_IDENTITY((int(5)), ((int(5))) ^ 0), (int(5))), clamp(_GLF_IDENTITY((int(5)), ~ (~ ((int(5))))), _GLF_IDENTITY((int(5)), ((int(5))) ^ 0), (int(5))))), clamp(_GLF_IDENTITY((int(5)), ~ (~ ((int(5))))), _GLF_IDENTITY((int(5)), ((int(5))) ^ 0), (int(5))))))))))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 << _GLF_IDENTITY(int(4), int(4))) ^ _GLF_IDENTITY(0, clamp(0, 0, 0)))); _injected_loop_counter --)
            {
             return;
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 subgroupAll(false);
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)), (bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false), bool(bvec2(bool(bvec4(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-2956.2851), 0.0 + (_GLF_IDENTITY(_GLF_FUZZED(-2956.2851), 1.0 * (_GLF_FUZZED(-2956.2851)))))), bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), 0.0, 0.0, 1.0))), injectionSwitch)).x > injectionSwitch.y))))))))))), false, _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (bool(true))))), (injectionSwitch.x < injectionSwitch.y)), true)), true))))))));
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
              }
            }
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && (true))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))))), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y)))))))) && true))))
          {
           return;
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               return;
              }
            }
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).y))))))), (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), false)), false || (bool(bvec2((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), false)))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false))))) && (true))))))))))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter))))), (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)))))) >> 0) != (1 & (_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-54315) : 1)) & 1, int(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-54315) : _GLF_IDENTITY(1, 0 | (1)))) & 1, (_GLF_IDENTITY(0 ^ 0, int(ivec2(0 ^ 0, 0)))), 1, 0)))))); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               do
                {
                 read = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | 0u), 4, _GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, (64) | 0))), _GLF_IDENTITY(_GLF_IDENTITY(2, max(2, 2)), (true ? _GLF_IDENTITY(2, max(2, 2)) : _GLF_FUZZED(79325)))), (_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), clamp(64, 64, 64)), 2), uint(_GLF_IDENTITY(uvec4(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), clamp(64, 64, 64)), 2), (0u ^ 1u), 0u, 0u), max(uvec4(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), clamp(64, 64, 64)), 2), _GLF_IDENTITY((0u ^ 1u), _GLF_IDENTITY(clamp((0u ^ 1u), (0u ^ 1u), (0u ^ 1u)), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) ^ (clamp((0u ^ 1u), (0u ^ 1u), (0u ^ 1u))))), 0u, 0u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), clamp(64, 64, 64)), 2), (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), clamp(64, 64, 64)), 2)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), clamp(64, 64, 64)), 2), (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), clamp(64, 64, 64)), 2)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), clamp(64, 64, 64)), 2), (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), clamp(64, 64, 64)), 2)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), clamp(64, 64, 64)), 2), (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), clamp(64, 64, 64)), 2)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), clamp(64, 64, 64)), 2), (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), clamp(64, 64, 64)), 2)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), clamp(64, 64, 64)), 2), (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), clamp(64, 64, 64)), 2)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), clamp(64, 64, 64)), 2), (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), clamp(64, 64, 64)), 2)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (0u ^ 1u), 0u, 0u))))), ~ (_GLF_IDENTITY(~ (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, clamp(64, 64, 64)), 2)), (~ (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, clamp(64, 64, 64)), 2))) | (~ (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, clamp(64, 64, 64)), 2))))))) | 0u);
                 if(_GLF_DEAD(false))
                  continue;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
         for(int _injected_loop_counter = (1 & (((1 & 1) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) * 1))) >> _GLF_IDENTITY(int(4), int(4)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)), max(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), _GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0), _injected_loop_counter)), _injected_loop_counter))))) - 0) != 0); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))) && true), false || (false))))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
                break;
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
               for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(1, 1 * (1)) ^ 1)); _injected_loop_counter --)
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                          {
                           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), (! (_GLF_IDENTITY(true, true && (true)))) && true)))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(true, true && (true)))))))))), bool(bvec3(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))), false, false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))), bool(bvec3(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))), false, false))), false)))))))))
                            {
                             return;
                            }
                           else
                            {
                            }
                          }
                         else
                          {
                          }
                         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, ~ (~ (3)))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(int(3), 0, 1)), (int(ivec3(int(3), 0, 1))) >> 0), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(int(3), 0, 1), (_GLF_IDENTITY(ivec3(int(3), 0, 1), ivec3(0, 0, 0) + (ivec3(int(3), 0, 1)))) ^ ivec3(0, 0, 0))), (int(ivec3(int(3), 0, 1))) >> 0)) | (_GLF_IDENTITY(int(ivec3(int(3), 0, 1)), (int(ivec3(int(3), 0, 1))) >> 0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                          {
                           if(_GLF_DEAD(false))
                            break;
                           if(_GLF_DEAD(false))
                            continue;
                           do
                            {
                             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
                              {
                              }
                             else
                              {
                               if(_GLF_DEAD(false))
                                return;
                              }
                            }
                           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))));
                           if(_GLF_DEAD(false))
                            break;
                          }
                        }
                      }
                     else
                      {
                       return;
                      }
                    }
                  }
                 else
                  {
                  }
                }
               if(_GLF_DEAD(false))
                continue;
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               continue;
              }
             continue;
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
         else
          {
          }
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, (false ? _GLF_FUZZED(1.6) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x) - 0.0))) < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), true && (bool((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))) || false)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-7.7, -1.0)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(702.671) : 0.0)), cos(0.0), 1.0))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(702.671) : 0.0)), cos(0.0), 1.0))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y : _GLF_FUZZED(-3283.5031)))) || false)))), true)))))), bool(bool((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED((+ -3.5)) : injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat4(1.4, 9.9, 2.9, 0.2, -0.2, -59.03, 2180.9054, -984.148, -1947.1139, 5.2, 70.27, 821.197, _GLF_IDENTITY(907.155, clamp(_GLF_IDENTITY(907.155, clamp(907.155, 907.155, 907.155)), _GLF_IDENTITY(907.155, clamp(907.155, 907.155, 907.155)), 907.155)), 334.823, 481.911, -6837.5440))))), injectionSwitch.y)) * (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), injectionSwitch, injectionSwitch)))))).y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), clamp(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(vec2(_GLF_ONE(1.0, injectionSwitch.y), 1.0), mat2(1.0) * (vec2(_GLF_ONE(1.0, injectionSwitch.y), 1.0)))))) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y) || false)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, mix(float(_GLF_FUZZED(3.1)), float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), bool(true))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch), vec2(mat2(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0))), sin(0.0), length(vec2(0.0, 0.0)))))).y, float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch), vec2(mat2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), sin(0.0), length(vec2(0.0, 0.0)))))).y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(sin(0.0), float(mat2x4(_GLF_IDENTITY(sin(0.0), 1.0 * (sin(0.0))), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, exp(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, exp(0.0)), vec3(log(1.0), 0.0, 1.0))), 0.0))), _GLF_IDENTITY(length(vec2(0.0, 0.0)), _GLF_IDENTITY(float(mat2x4(length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(sqrt(1.0), 1.0, 0.0)), dot(vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(sqrt(1.0), 1.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0))), (false ? _GLF_FUZZED(4.1) : float(mat2x4(length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(sqrt(1.0), 1.0, 0.0)), dot(vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(sqrt(1.0), 1.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0))))))), (false ? _GLF_FUZZED(mat2(-392.213, -6.4, 276.114, 6.2)) : mat2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(sin(0.0), float(mat2x4(_GLF_IDENTITY(sin(0.0), 1.0 * (sin(0.0))), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, exp(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, exp(0.0)), vec3(log(1.0), 0.0, 1.0))), 0.0))), _GLF_IDENTITY(length(vec2(0.0, 0.0)), _GLF_IDENTITY(float(mat2x4(length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(sqrt(1.0), 1.0, 0.0)), dot(vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(sqrt(1.0), 1.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0))), (false ? _GLF_FUZZED(4.1) : float(mat2x4(length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(sqrt(1.0), 1.0, 0.0)), dot(vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(sqrt(1.0), 1.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0)))))))))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch), vec2(mat2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), sin(0.0), length(vec2(0.0, 0.0)))))).y)), 0.0, 0.0, 1.0)))) || false)))), true)))))), bool(bool((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_FALSE(false), false), bvec2(bvec2(bvec2(_GLF_WRAPPED_IF_FALSE(false), false)))))))
        {
        }
       else
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           subgroupBarrier();
          }
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) != ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY(max(int(_GLF_IDENTITY(7, min(7, 7))), int(7)), (max(int(_GLF_IDENTITY(7, min(7, 7))), int(7))) << 0)))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
  {
   atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec3(64, 0, (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) - 0)), int(2))))), min(int(ivec3(64, 0, (0 >> _GLF_IDENTITY(int(2), int(2))))), int(ivec3(64, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(2), (int(2)) + 0), 0, 0), (ivec3(_GLF_IDENTITY(int(2), (int(2)) + 0), 0, 0)) | ivec3(0, 0, 0)))), int(2)), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(2), (int(2)) + 0), 0, 0), (ivec3(_GLF_IDENTITY(int(2), (int(2)) + 0), 0, 0)) | ivec3(0, 0, 0)))), int(2))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(2), (int(2)) + 0), 0, 0), (ivec3(_GLF_IDENTITY(int(2), (int(2)) + 0), 0, 0)) | ivec3(0, 0, 0)))), int(2)))))))))), 4);
  }
}
