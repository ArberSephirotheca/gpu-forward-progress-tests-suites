#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) | (1))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), true)), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, false || (true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), true)), true)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), true)), true))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), true)), true))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))), true), true)), true)))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true), true)), true))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))), true)), true))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), true && (bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), true)), true)))))))))), false))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), _GLF_IDENTITY(true, bool(bvec2(true, false))))), true))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), true)), true))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), false)))))))) || (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(371.904, -53.38)))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))))) || (_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), ((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))) || false)) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), false)), bool(bvec2(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), false)), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), ! (! (! (false)))), false))))), bool(bvec2(false, false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(false)))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), ! (_GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_DEAD(false)))))))))), bool(bool(! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(false)))))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), bool(bvec3(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))), true, true))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))), false, true)))))))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-6357.4763) : _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-634.289)), bool(false))))))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) + _GLF_IDENTITY(0u, min(0u, 0u))) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 | (~ (1))))))), max(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), ~ (~ (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))))) - _GLF_IDENTITY((0u | 0u), 0u ^ ((0u | 0u)))) + 1) >> 0u), 0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), max(0u, 0u)), 0u))) ^ 0u)))), _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))), ((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))), (subgroup_local_id + 1) >> 0u), 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))), (subgroup_local_id + 1) >> 0u), 0u, 0u, 0u), (uvec4(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))), (subgroup_local_id + 1) >> 0u), 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> _GLF_IDENTITY(0u, (0u) | (0u)))))))))) | ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, (subgroup_local_id + 1) >> 0u), 0u, 0u, 0u)), min(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))) ^ 0u) + 1, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + _GLF_IDENTITY(1, clamp(1, 1, 1)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) | (subgroup_local_id)), (subgroup_local_id) ^ 0u) + 1, 1u))))), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) << 0)) >> 0u), 0u, 0u, 0u)), (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))), (subgroup_local_id) * 1u)) ^ 0u) + 1, (subgroup_local_id + 1) >> 0u), 0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u)))) - uint(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4(0.0, exp(0.0), 1.0, 0.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1.2)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0))), float(vec2(_GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), exp(0.0), 1.0, 0.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0))), 0.0))), injectionSwitch.x))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, (subgroup_local_id + 1) >> 0u), 0u, 0u, 0u))))), subgroup_local_id + 1), max(max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(0), int(0))) | (1)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, (subgroup_local_id + 1) >> 0u), 0u, 0u, 0u)), (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, (subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))) >> 0u), 0u, 0u, 0u))) << 0u), _GLF_IDENTITY(min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, (subgroup_local_id + 1) >> 0u), 0u, 0u, 0u), ~ (~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))) ^ 0u) + 1, (subgroup_local_id + 1) >> 0u), _GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u))))), (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, (subgroup_local_id + 1) >> 0u), 0u, 0u, 0u))) - uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))) / vec2(1.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))) / vec2(1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))) / vec2(1.0, 1.0))))).x))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) ^ 0u, ((subgroup_local_id) ^ 0u) | (_GLF_IDENTITY((subgroup_local_id) ^ 0u, (_GLF_IDENTITY((subgroup_local_id) ^ 0u, max(_GLF_IDENTITY((subgroup_local_id) ^ 0u, ~ (~ ((subgroup_local_id) ^ 0u))), _GLF_IDENTITY((subgroup_local_id) ^ 0u, ~ (~ ((subgroup_local_id) ^ 0u)))))) | ((subgroup_local_id) ^ 0u))))) + 1, (subgroup_local_id + 1) >> 0u), _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u, 0u))), 0u | (_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, (subgroup_local_id + 1) >> _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u))))), 0u, 0u, 0u), ~ (~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, (subgroup_local_id + 1) >> _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u))))), 0u, 0u, 0u))))), uint(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, (subgroup_local_id + 1) >> _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u))))), 0u, 0u, 0u), ~ (~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, (subgroup_local_id + 1) >> _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u))))), 0u, 0u, 0u)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, (subgroup_local_id + 1) >> _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u))))), 0u, 0u, 0u), ~ (~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, (subgroup_local_id + 1) >> _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u))))), 0u, 0u, 0u)))))), max(uint(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, (subgroup_local_id + 1) >> _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u))))), 0u, 0u, 0u), ~ (~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, (subgroup_local_id + 1) >> _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u))))), 0u, 0u, 0u)))))), uint(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, (subgroup_local_id + 1) >> _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u))))), 0u, 0u, 0u), ~ (~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, (subgroup_local_id + 1) >> _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u))))), 0u, 0u, 0u)))))))))))), (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, (subgroup_local_id + 1) >> 0u), 0u, 0u, 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) ^ 0u, ((subgroup_local_id) ^ 0u) | (_GLF_IDENTITY((subgroup_local_id) ^ 0u, (_GLF_IDENTITY((subgroup_local_id) ^ 0u, max((subgroup_local_id) ^ 0u, (subgroup_local_id) ^ 0u))) | ((subgroup_local_id) ^ 0u))))) + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) ^ 0u, ((subgroup_local_id) ^ 0u) | (_GLF_IDENTITY((subgroup_local_id) ^ 0u, (_GLF_IDENTITY((subgroup_local_id) ^ 0u, max((subgroup_local_id) ^ 0u, (subgroup_local_id) ^ 0u))) | ((subgroup_local_id) ^ 0u))))) + 1) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) ^ 0u, ((subgroup_local_id) ^ 0u) | (_GLF_IDENTITY((subgroup_local_id) ^ 0u, (_GLF_IDENTITY((subgroup_local_id) ^ 0u, max((subgroup_local_id) ^ 0u, _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))) ^ 0u))) | _GLF_IDENTITY(((subgroup_local_id) ^ 0u), (false ? _GLF_FUZZED((subgroup_local_id << num_workgroup)) : ((subgroup_local_id) ^ 0u))))))) + 1) << uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(subgroup_local_id)))), (subgroup_local_id + 1) >> 0u), 0u, 0u, 0u))), _GLF_IDENTITY((min(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), (subgroup_local_id) ^ 0u) + 1, (subgroup_local_id + 1) >> 0u), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(uvec2(148692u, 19918u).x) : 0u)), 0u, 0u)), _GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), (false ? _GLF_FUZZED(subgroup_id) : (subgroup_local_id)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u) + 1, (subgroup_local_id + 1) >> 0u), 0u, 0u, 0u))), (true ? (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), (false ? _GLF_FUZZED(subgroup_id) : (subgroup_local_id)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u) + 1, (subgroup_local_id + 1) >> 0u), 0u, 0u, 0u))) : _GLF_FUZZED(num_workgroup))) - uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(527.220))))))) - 0.0)) + _GLF_IDENTITY(dot(vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec3(1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec3(1.0, 0.0, 1.0)), min(dot(vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec3(1.0, 0.0, 1.0)))))))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) ^ 0u, ((subgroup_local_id) ^ 0u) | (_GLF_IDENTITY((subgroup_local_id) ^ 0u, (_GLF_IDENTITY((subgroup_local_id) ^ _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, uint(uint(0u))))), 0u, 0u)), max((subgroup_local_id) ^ 0u, (subgroup_local_id) ^ 0u))) | ((subgroup_local_id) ^ 0u))))) + 1, (subgroup_local_id + 1) >> 0u), 0u, 0u, 0u)))), ((min(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, (subgroup_local_id + 1) >> 0u), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(uvec2(148692u, 19918u).x) : 0u)), _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)), _GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, (subgroup_local_id + 1) >> 0u), _GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u))), ~ (~ ((uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, (subgroup_local_id + 1) >> 0u), _GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), _GLF_IDENTITY((subgroup_local_id) ^ 0u, ((subgroup_local_id) ^ 0u) | (_GLF_IDENTITY((subgroup_local_id) ^ 0u, (_GLF_IDENTITY((subgroup_local_id) ^ _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, uint(uint(0u))))), 0u, 0u)), max((subgroup_local_id) ^ 0u, (subgroup_local_id) ^ 0u))) | ((subgroup_local_id) ^ 0u))))) + 1, (subgroup_local_id + 1) >> 0u), 0u, 0u, 0u))))) << _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(6u))), ~ (~ ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))))))) | 0u))))), subgroup_local_id + _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(-40976)))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) >> 0u, uint(uvec3(_GLF_IDENTITY((subgroup_local_id + 1) >> 0u, 0u ^ ((subgroup_local_id + 1) >> 0u)), 1u, 0u))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + ((subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-54597)))) >> 0u))), 0u, 0u, 0u)), min(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, (subgroup_local_id + 1) >> 0u), 0u, 0u, 0u)), (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, _GLF_IDENTITY((subgroup_local_id + 1) >> 0u, ((subgroup_local_id + 1) >> 0u) - 0u)), 0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) ^ 0u, 0u | ((subgroup_local_id) ^ 0u))) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u)) >> 0u), 0u, 0u, 0u))))), uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) >> 0u, uint(uvec3(_GLF_IDENTITY((subgroup_local_id + 1) >> 0u, 0u ^ ((subgroup_local_id + 1) >> 0u)), 1u, 0u))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + ((subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-54597)))) >> 0u))), 0u, 0u, 0u)), min(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, (subgroup_local_id + 1) >> 0u), 0u, 0u, 0u)), (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, _GLF_IDENTITY((subgroup_local_id + 1) >> 0u, ((subgroup_local_id + 1) >> 0u) - 0u)), 0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) ^ 0u, 0u | ((subgroup_local_id) ^ 0u))) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u)) >> 0u), 0u, 0u, 0u))))), 0u, 0u, 0u))), subgroup_local_id + 1))))))) % subgroup_size);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) ^ 0) / 1), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || (_GLF_IDENTITY((false) && true, ((false) && true) || false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)), false || (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)), false || (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)), false || (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)), false || (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)), false || (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, (false) && true), true))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(virtual_gid, virtual_gid), (max(virtual_gid, virtual_gid)) | (max(virtual_gid, virtual_gid))))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec2(4, 0)))) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec2(4, 0)))) ^ 0), clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec2(4, 0)))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec2(4, 0)))) ^ 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec2(4, 0)))) ^ 0)) ^ 0), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec2(4, 0)))) ^ 0)))) | (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec2(4, 0)))) ^ 0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY((_GLF_IDENTITY(4, int(ivec2(4, 0)))), ((_GLF_IDENTITY(4, int(ivec2(4, 0))))) << 0) ^ 0), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec2(4, 0)))) ^ 0), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, int(ivec2(4, _GLF_IDENTITY(0, max(0, 0)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(4, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(4, 0))), 0 | (_GLF_IDENTITY(4, int(ivec2(4, 0)))))) * 1))) ^ 0) ^ 0))), 64, 0);
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))))), subgroup_local_id, subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << _GLF_IDENTITY(0u, (0u) >> 0u)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))))), subgroup_local_id, subgroup_local_id)) + 1) - 0u) < subgroup_size, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id) ^ 0u))), subgroup_local_id, subgroup_local_id)) + 1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id) ^ 0u))), subgroup_local_id, subgroup_local_id)) + 1)), 1u * (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id) ^ 0u))), subgroup_local_id, subgroup_local_id)) + 1)), (~ (~ (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id, max(false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id, false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id)), (false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id) ^ 0u))), subgroup_local_id, subgroup_local_id)) + 1))) + 0u)))) < subgroup_size))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY((4) << 0, 0 | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((4), ((4)) + 0), (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (false ? _GLF_FUZZED(floatBitsToInt(-9401.1730)) : 8)), (8) | 0)), int(8))) | (~ (_GLF_IDENTITY(4, 0 + (4)))))))), clamp((4), (4), (4))) << 0, 0 | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((4), ~ (~ (_GLF_IDENTITY((4), (false ? _GLF_FUZZED((69030 - 46084)) : (4)))))), ((4)) + 0), (0 >> _GLF_IDENTITY(int(8), int(8))) | (~ (4)))))), clamp((4), (4), (4))) << 0, clamp(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((4), ((4)) + 0), (0 >> _GLF_IDENTITY(int(8), int(8))) | (~ (4))), min(_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((4), ((4)) + 0), (0 >> _GLF_IDENTITY(int(8), int(8))) | (~ (4))), (_GLF_IDENTITY(~ _GLF_IDENTITY((4), ((4)) + 0), (0 >> _GLF_IDENTITY(int(8), int(8))) | (~ (4)))) << 0), _GLF_IDENTITY(~ _GLF_IDENTITY((4), ((4)) + 0), (0 >> _GLF_IDENTITY(int(8), int(8))) | (~ (4)))))))), clamp((4), (4), (4))) << 0, _GLF_IDENTITY((_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((4), ((4)) + 0), _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(8), int(8))), (false ? _GLF_FUZZED(84525) : _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(8), int(8))), ((0 >> _GLF_IDENTITY(int(8), int(8)))) ^ 0))) | (~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) - 0)) << 0)) | (4)))))))), clamp((4), (4), (4))) << 0, _GLF_IDENTITY((_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((4), ((4)) + 0), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (1 ^ 1) | _GLF_IDENTITY((_GLF_IDENTITY(int(8), int(8))), ((_GLF_IDENTITY(int(8), int(8)))) - 0))) | (~ (4)))))), clamp((4), (4), (4))) << 0))))))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
      barrier();
     barrier();
    }
   subgroupAll(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) && true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, (injectionSwitch.y) - 0.0)), float(_GLF_FUZZED(4246.3102)), bool(false))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(1851.6648)), bool(false))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y) || false))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(atan(vec2(0.5, 40.50))))))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))) && true))))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, (injectionSwitch.y) - 0.0)), float(_GLF_FUZZED(4246.3102)), bool(false))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(1851.6648)), bool(false))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y) || false))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(atan(vec2(0.5, 40.50))))))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))) && true))))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, (injectionSwitch.y) - 0.0)), float(_GLF_FUZZED(4246.3102)), bool(false)))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, (injectionSwitch.y) - 0.0)), float(_GLF_FUZZED(4246.3102)), bool(false))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(1851.6648)), bool(false))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true), false))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false))))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))).y) || false))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(atan(vec2(0.5, 40.50))))))).x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(atan(vec2(0.5, 40.50))))))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(atan(vec2(0.5, 40.50))))))).x > injectionSwitch.y)))), false, false, true))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))))), true && (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))))))))) && true)))) && true))))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))))) || false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, max(64, 64)), 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))) || false))))));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
