#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_13 {
 mat2x4 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_12 {
 mat4x3 _f0;
 uvec2 _f1;
 uvec4 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_11 {
 uvec2 _f0;
 mat3 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_14 {
 ivec3 _f0;
 _GLF_struct_11 _f1;
 _GLF_struct_12 _f2;
 mat3 _f3;
 _GLF_struct_13 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_9 {
 ivec3 _f0;
 int _f1;
 uvec4 _f2;
 mat4x3 _f3;
 uint num_workgroup;
 int _f4;
} ;

struct _GLF_struct_8 {
 ivec4 _f0;
 mat2x3 _f1;
 bvec4 _f2;
 bool _f3;
 float _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_10 {
 bvec2 _f0;
 vec4 _f1;
 ivec2 _f2;
 _GLF_struct_8 _f3;
 _GLF_struct_9 _f4;
} ;

struct _GLF_struct_6 {
 ivec2 _f0;
 mat4x3 _f1;
 uvec4 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_5 {
 ivec3 _f0;
} ;

struct _GLF_struct_7 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 mat3 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_15 {
 _GLF_struct_7 _f0;
 _GLF_struct_10 _f1;
 mat2x4 _f2;
 _GLF_struct_14 _f3;
 mat4x3 _f4;
 vec3 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
 bvec2 _f1;
 vec4 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
} ;

struct _GLF_struct_0 {
 ivec3 _f0;
 uvec2 _f1;
 uint _f2;
 mat2 _f3;
 mat3x2 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_4 {
 int _f0;
 _GLF_struct_1 _f1;
 uint virtual_gid;
 _GLF_struct_3 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_struct_7(_GLF_struct_5(_GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), (ivec3(1)) ^ _GLF_IDENTITY(ivec3(0, 0, 0), clamp(ivec3(0, 0, 0), ivec3(0, 0, 0), _GLF_IDENTITY(ivec3(0, 0, 0), (_GLF_IDENTITY(ivec3(0, 0, 0), (true ? _GLF_IDENTITY(ivec3(0, 0, 0), ivec3(0, 0, 0) ^ (ivec3(0, 0, 0))) : _GLF_FUZZED(mix(ivec3(44252, -50292, 53509), ivec3(-94925, -42981, -55785), bvec3(true, false, false)))))) >> ivec3(0, 0, 0)))))) - ivec3(0, _GLF_IDENTITY(0, 0 + (0)), 0))), _GLF_struct_6(_GLF_IDENTITY(ivec2(1), max(ivec2(1), ivec2(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, 0 | ((1) | 0)))))))), mat4x3(1.0), uvec4(1u), ivec2(1)), mat3(_GLF_IDENTITY(1.0, (1.0) + 0.0)), _GLF_IDENTITY(ivec3(1), (ivec3(1)) - ivec3(0, _GLF_IDENTITY(0, (0) + 0), 0))), _GLF_struct_10(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), _GLF_IDENTITY(true, (true) && true), true, false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), true, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), true, true, false))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), true, true, false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), true && (_GLF_IDENTITY(bool(true), ! (! (bool(true))))))) && true), true, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), true, true, false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(353.093, 7.4)))).y))))))))))), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), true, true, false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), true, true, false))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), injectionSwitch)).x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), true, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), bool(bvec4(bool(true), true, true, false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(true), bool(bvec4(bool(_GLF_IDENTITY(true, false || (true))), true, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), true, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), true, true, false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))), true, true, _GLF_IDENTITY(false, (false) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), true, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false), false)))), false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)))))), vec4(1.0), ivec2(1), _GLF_struct_8(ivec4(1), mat2x3(1.0), bvec4(true), true, 1.0, mat3x2(1.0)), _GLF_struct_9(ivec3(_GLF_IDENTITY(1, 0 | (1))), 1, uvec4(1u), mat4x3(1.0), _GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | ((gl_NumWorkGroups))) + uvec3(0u, 0u, 0u)))), clamp(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(156108u, 70738u, 40545u)))), _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | ((gl_NumWorkGroups))) + uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | ((gl_NumWorkGroups))) + uvec3(0u, 0u, 0u)))), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | ((gl_NumWorkGroups))) + uvec3(0u, 0u, 0u))))))), _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | ((gl_NumWorkGroups))) + uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))), gl_NumWorkGroups), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(0u, 0u ^ (0u))) / 1u), 0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u))) | (clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))), gl_NumWorkGroups)))), gl_NumWorkGroups)).x, 1)), mat2x4(1.0), _GLF_struct_14(ivec3(1), _GLF_struct_11(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | (_GLF_IDENTITY(uvec2(1u), max(uvec2(1u), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), _GLF_IDENTITY(uvec2(1u), (uvec2(1u)) - (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)))), uvec2(1u))))))), mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bvec4(_GLF_IDENTITY(true, ! (! (true))))), _GLF_struct_12(mat4x3(1.0), uvec2(1u), uvec4(1u), mat3x2(1.0)), mat3(1.0), _GLF_struct_13(mat2x4(1.0), _GLF_IDENTITY(vec3(1.0), max(_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) * mat3(1.0)), _GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / _GLF_IDENTITY(exp(vec3(0.0, 0.0, 0.0)), (exp(vec3(0.0, 0.0, 0.0))) * mat3(1.0)))))), ivec3(1)), mat4x3(1.0), vec3(1.0), mat2(1.0));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x)));
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       do
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(1, ~ (~ (1))), ! (! (_injected_loop_counter != 1)))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) != 1); _injected_loop_counter ++)
              {
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   do
                    {
                     do
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                        {
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (false ? _GLF_FUZZED((_injected_loop_counter)) : ~ (0)))))))); _injected_loop_counter --)
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (((_GLF_IDENTITY((1 ^ 0), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((1 ^ 0), ((1 ^ 0)) | ((1 ^ 0))), (0 ^ 0)), (ivec2(_GLF_IDENTITY((1 ^ 0), ((1 ^ 0)) | ((1 ^ 0))), (0 ^ 0))) | ivec2(0, 0)))) & 1) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter != (((_GLF_IDENTITY((1 ^ 0), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((1 ^ 0), ((1 ^ 0)) | ((1 ^ 0))), (0 ^ 0)), (ivec2(_GLF_IDENTITY((1 ^ 0), ((1 ^ 0)) | ((1 ^ 0))), (0 ^ 0))) | ivec2(0, 0)))) & 1) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), false), bvec2(bvec3(bvec2(_injected_loop_counter != (((_GLF_IDENTITY((1 ^ 0), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((1 ^ 0), ((1 ^ 0)) | ((1 ^ 0))), (0 ^ 0)), (ivec2(_GLF_IDENTITY((1 ^ 0), ((1 ^ 0)) | ((1 ^ 0))), (0 ^ 0))) | ivec2(0, 0)))) & 1) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), false), true)))))); _injected_loop_counter ++)
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1]))))), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))) - vec2(0.0, 0.0))).x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)))))))), bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).x > injectionSwitch.y))), true)))))))
                                  {
                                  }
                                 else
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                    {
                                    }
                                   else
                                    {
                                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                      {
                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                        {
                                         do
                                          {
                                           do
                                            {
                                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                                              {
                                               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, 1 * (_injected_loop_counter ++))) / int(_GLF_ONE(1.0, injectionSwitch.y))))
                                                {
                                                 return;
                                                }
                                              }
                                            }
                                           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false))));
                                          }
                                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                        }
                                       else
                                        {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                             else
                              {
                              }
                            }
                          }
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))));
                  }
                 else
                  {
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
  }
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(1, _GLF_struct_1(_GLF_struct_0(_GLF_IDENTITY(ivec3(1), (ivec3(1)) ^ _GLF_IDENTITY(ivec3(0, 0, 0), min(ivec3(0, 0, 0), _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) / _GLF_IDENTITY(ivec3(1, 1, 1), ivec3(0, 0, 0) ^ (ivec3(1, 1, 1))))))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED((outerProduct(vec4(322.305, -78.28, -46.00, -141.340), vec3(-55.61, -8.9, -472.489)) , _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))))), max(1u, 1u)), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, min(1u, 1u)))), 1u))))))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, min(1u, 1u)), 0u), ~ (~ (uvec2(_GLF_IDENTITY(1u, min(1u, 1u)), 0u)))))), max(1u, _GLF_IDENTITY(1u, min(1u, 1u)))), 1u))))))), uvec2(_GLF_IDENTITY(uvec2(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), (_GLF_IDENTITY(max(1u, 1u), (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - 0u), (_GLF_IDENTITY(1u, (1u) - 0u)) | (_GLF_IDENTITY(1u, (1u) - 0u))), 1u), (max(1u, 1u)) / 1u)) ^ 0u)) | (max(1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, min(1u, 1u)))), 1u)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, min(1u, 1u)))), 1u)))))))))), uvec2(0u, 0u) | (uvec2(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) << 0u), 1u)))), 1u))))))))))))) | (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(subgroup_base) : 1u)), max(1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, 1u * (1u)), _GLF_IDENTITY(max(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, min(1u, 1u)))), 1u), min(max(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, min(1u, 1u)))), 1u), max(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, min(1u, 1u)))), 1u))))))))))), 1u, mat2(1.0), mat3x2(1.0), ivec4(1))), _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, clamp(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? _GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u) : _GLF_IDENTITY(_GLF_FUZZED(170238u), 1u * (_GLF_IDENTITY(_GLF_FUZZED(170238u), (_GLF_FUZZED(170238u)) >> 0u))))) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u), (workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)) + subgroup_local_id) | _GLF_IDENTITY(0u, (0u) / _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), _GLF_struct_3(_GLF_struct_2(mat3x2(1.0), bvec2(true), vec4(1.0), mat4x2(1.0))));
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1), ((subgroup_local_id + 1)) - 0u) % subgroup_size);
 uint read = 0;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4354.0703, -855.892)) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), min((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))))) + vec2(0.0, 0.0))))), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4354.0703, -855.892)) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(1.0, 1.0)), (mat2(1.0) * (vec2(1.0, 1.0))) / vec2(1.0, 1.0))) * (injectionSwitch))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), min((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))))) + vec2(0.0, 0.0)))))) * vec2(1.0, 1.0)).y))) && true)))
  {
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) | 0u), _GLF_IDENTITY(4, (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (true))), bool(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), true, false)))))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), _GLF_IDENTITY(true, true && (true)), false))), true), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), true && (! (true)))))))), false)))))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), _GLF_IDENTITY(true, true && (true)), false))), true), false)))))))))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)) ? _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), (_GLF_IDENTITY((4), max(_GLF_IDENTITY((4), clamp((4), (4), (4))), _GLF_IDENTITY((4), min((4), (4))))) | (4)) << 0)), ~ (~ (_GLF_IDENTITY(4, (4) | (4))))) : _GLF_FUZZED(-14803))), 64, 4);
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), (_GLF_IDENTITY((subgroup_local_id % 2), min((subgroup_local_id % 2), _GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) - 0u)))) - 0u) == _GLF_IDENTITY(0, (0) * 1), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) + 0u)), min((subgroup_local_id % 2), _GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) - 0u)))) - 0u) == _GLF_IDENTITY(0, (0) * 1)))), false || ((subgroup_local_id % 2) == _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), clamp(_GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (_GLF_IDENTITY(0, (0) >> 0)) + 0), _GLF_IDENTITY(0, (0) >> 0))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true))))))))
        {
        }
       else
        {
         do
          {
           for(int _injected_loop_counter = (_GLF_IDENTITY(-98965, (_GLF_IDENTITY(_GLF_IDENTITY(-98965, 0 ^ (_GLF_IDENTITY(-98965, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(true, false))), false, false, true)), true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(true, false))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))), false, true))))), true), bvec2(bvec2(bvec2(true, true)))))) ? -98965 : _GLF_FUZZED(99837))))), (_GLF_IDENTITY(_GLF_IDENTITY(-98965, 0 ^ (_GLF_IDENTITY(-98965, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))) ? -98965 : _GLF_FUZZED(99837), _GLF_IDENTITY((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, false, false)))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, false, false))))), bool(bvec2(bool(bool(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, false, false))))), false)))))), true), bvec2(bvec2(bvec2(true, true)))))) ? -98965 : _GLF_FUZZED(99837)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))) ? -98965 : _GLF_FUZZED(99837)), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))) ? -98965 : _GLF_FUZZED(99837), clamp(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))) ? -98965 : _GLF_FUZZED(99837), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))) ? -98965 : _GLF_FUZZED(99837), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))) ? -98965 : _GLF_FUZZED(99837)))), (true ? (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))) ? -98965 : _GLF_FUZZED(99837)) : _GLF_FUZZED(82588))))), _GLF_IDENTITY((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, true))), bvec2(bvec2(bvec2(bvec2(bvec2(true, true))))))))) ? -98965 : _GLF_FUZZED(99837)), (false ? _GLF_FUZZED(-36875) : _GLF_IDENTITY((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, true))), bvec2(bvec2(bvec2(bvec2(bvec2(true, true))))))))) ? -98965 : _GLF_FUZZED(99837)), ((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, true))), bvec2(bvec2(bvec2(bvec2(bvec2(true, true))))))))) ? -98965 : _GLF_FUZZED(99837))) << 0))), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))) ? -98965 : _GLF_FUZZED(99837)))) | (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))) ? -98965 : _GLF_FUZZED(99837))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))) ? -98965 : _GLF_FUZZED(99837), _GLF_IDENTITY((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))) ? -98965 : _GLF_FUZZED(99837)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))) ? -98965 : _GLF_FUZZED(99837)), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))) ? -98965 : _GLF_FUZZED(99837)), (true ? (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))), ! (! (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))))), true, true, true)))) ? -98965 : _GLF_FUZZED(99837)) : _GLF_FUZZED(82588))))), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))) ? -98965 : _GLF_FUZZED(99837)), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))) ? -98965 : _GLF_FUZZED(99837)))) | (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))) ? -98965 : _GLF_FUZZED(99837))))))))), (_GLF_IDENTITY(-98965, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(-98965, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))) ? -98965 : _GLF_FUZZED(99837)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(69373) : 0)) ^ (_GLF_IDENTITY(-98965, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), true), bvec2(bvec2(bvec2(true, true)))))) ? -98965 : _GLF_FUZZED(99837)))), clamp(0 ^ (_GLF_IDENTITY(-98965, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, true)), bvec2(bvec2(bvec2(bvec2(true, true))))))))) ? -98965 : _GLF_FUZZED(99837)))), _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(-98965, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true)) ? -98965 : _GLF_FUZZED(99837)))), ~ (~ (_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(-98965, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))) ? -98965 : _GLF_FUZZED(99837)))), 0 + (_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(-98965, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))) ? -98965 : _GLF_FUZZED(99837)))), int(_GLF_IDENTITY(ivec3(0 ^ (_GLF_IDENTITY(-98965, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))) ? -98965 : _GLF_FUZZED(99837)))), 1, 1), ivec3(0, 0, 0) | (ivec3(0 ^ (_GLF_IDENTITY(-98965, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))) ? -98965 : _GLF_FUZZED(99837)))), 1, 1)))))))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(-98965, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))) ? -98965 : _GLF_FUZZED(99837))), min(_GLF_IDENTITY(_GLF_IDENTITY(-98965, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))) ? -98965 : _GLF_FUZZED(99837))), (true ? _GLF_IDENTITY(-98965, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(true, true)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(true, true)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(true, true)))), false, false))), false)))))))) ? -98965 : _GLF_FUZZED(99837))) : _GLF_FUZZED(15426))), _GLF_IDENTITY(-98965, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))) ? -98965 : _GLF_FUZZED(99837))))))))))))) >> 0)) ^ (0 | 0))) | (-98965)) & _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1), _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0))) < 1); _injected_loop_counter ++)
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, max(8, 8)), (_GLF_IDENTITY(_GLF_IDENTITY(8, max(8, 8)), ~ (~ (_GLF_IDENTITY(8, max(8, 8)))))) | 0)), 0 + (int(_GLF_IDENTITY(8, max(8, 8))))), int(8)), (_GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), int(8))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) >> 0), min(8, _GLF_IDENTITY(8, (8) / 1))), max(_GLF_IDENTITY(8, _GLF_IDENTITY((false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0), findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(8, int(ivec3(8, _GLF_IDENTITY(0, (0) >> 0), 1)))), max((false ? _GLF_FUZZED(atomicLoad(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1), _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(8, int(ivec3(8, 0, 1)))), (false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(8, int(ivec3(8, 0, 1))))))), 8))), _GLF_IDENTITY(int(8), min(int(8), int(8))))))) >> _GLF_IDENTITY(int(5), int(5)), ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, max(8, 8)), (_GLF_IDENTITY(_GLF_IDENTITY(8, max(8, 8)), ~ (~ (_GLF_IDENTITY(8, max(8, 8)))))) | 0)), 0 + (int(_GLF_IDENTITY(8, max(8, 8))))), int(_GLF_IDENTITY(8, (true ? 8 : _GLF_FUZZED(_injected_loop_counter))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), _GLF_IDENTITY(int(8), min(_GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8))), int(8))))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) >> 0), min(8, _GLF_IDENTITY(8, (8) / 1))), max(_GLF_IDENTITY(8, _GLF_IDENTITY((false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(findMSB(_injected_loop_counter), (-25999 & 0) | (findMSB(_injected_loop_counter))), 69704)) : _GLF_IDENTITY(8, int(ivec3(8, _GLF_IDENTITY(0, (0) >> 0), 1)))), max((false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(8, int(ivec3(8, 0, 1)))), (false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(8, int(ivec3(8, 0, 1))))))), 8))), _GLF_IDENTITY(int(8), _GLF_IDENTITY(min(int(8), int(8)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(min(int(8), int(8)), (min(int(8), int(8))) ^ 0)), (~ (_GLF_IDENTITY(min(int(8), int(8)), (min(int(8), int(8))) ^ 0))) >> 0)))))))) >> _GLF_IDENTITY(int(5), int(5))) | 0), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, max(8, 8)), (_GLF_IDENTITY(_GLF_IDENTITY(8, max(8, 8)), ~ (~ (_GLF_IDENTITY(8, max(8, 8)))))) | _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | _GLF_IDENTITY((_GLF_IDENTITY(0, (0) >> 0)), clamp((_GLF_IDENTITY(0, (0) >> 0)), (_GLF_IDENTITY(0, (0) >> 0)), (_GLF_IDENTITY(0, (0) >> 0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) >> 0))), 0 | (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))))), int(ivec3((_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) | (_GLF_IDENTITY(0, (0) >> 0))))), _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) >> 0))))))), 0 + (_GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), (int(_GLF_IDENTITY(8, max(8, 8)))) - 0))), int(8)), (_GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), int(8))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) >> 0), min(8, _GLF_IDENTITY(8, _GLF_IDENTITY((8) / 1, ~ (_GLF_IDENTITY(~ ((8) / 1), 0 ^ (~ ((8) / 1)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(8, (8) >> 0), min(8, _GLF_IDENTITY(8, (8) / 1)))) ^ 0), max(_GLF_IDENTITY(8, _GLF_IDENTITY((false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(8, int(ivec3(8, _GLF_IDENTITY(0, (0) >> 0), 1)))), max((_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter) | (_injected_loop_counter), min((_injected_loop_counter) | (_injected_loop_counter), (_injected_loop_counter) | (_injected_loop_counter)))), _injected_loop_counter, _GLF_IDENTITY(findMSB(_injected_loop_counter), clamp(_GLF_IDENTITY(findMSB(_injected_loop_counter), min(findMSB(_injected_loop_counter), findMSB(_injected_loop_counter))), _GLF_IDENTITY(findMSB(_injected_loop_counter), _GLF_IDENTITY((_GLF_IDENTITY(findMSB(_injected_loop_counter), max(findMSB(_injected_loop_counter), findMSB(_injected_loop_counter)))) / 1, (_GLF_IDENTITY((_GLF_IDENTITY(findMSB(_injected_loop_counter), max(findMSB(_injected_loop_counter), findMSB(_injected_loop_counter)))) / 1, int(ivec2((_GLF_IDENTITY(findMSB(_injected_loop_counter), max(findMSB(_injected_loop_counter), findMSB(_injected_loop_counter)))) / 1, 1)))) / 1)), findMSB(_injected_loop_counter))), 69704), max(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704), atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)))) : _GLF_IDENTITY(8, int(ivec3(8, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (0) | (0)), _GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), 1))), (false ? _GLF_FUZZED(_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)), _injected_loop_counter, _GLF_IDENTITY(findMSB(_injected_loop_counter), clamp(_GLF_IDENTITY(findMSB(_injected_loop_counter), min(findMSB(_injected_loop_counter), findMSB(_injected_loop_counter))), _GLF_IDENTITY(findMSB(_injected_loop_counter), (_GLF_IDENTITY(findMSB(_injected_loop_counter), max(findMSB(_injected_loop_counter), findMSB(_injected_loop_counter)))) / 1), findMSB(_injected_loop_counter))), 69704), max(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704), atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)))) : _GLF_IDENTITY(8, int(ivec3(8, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (0) | (0)), _GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), clamp(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (0) | (0)), _GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (0) | (0)), _GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (0) | (0)), _GLF_IDENTITY(0, clamp(0, 0, 0)), 0))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (0) | (0)), _GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), clamp(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (0) | (0)), _GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (0) | (0)), _GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (0) | (0)), _GLF_IDENTITY(0, clamp(0, 0, 0)), 0)))))), 1)))) * 1)), (_GLF_IDENTITY(false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(_GLF_IDENTITY(8, int(ivec3(8, 0, 1))), (_GLF_IDENTITY(_GLF_IDENTITY(8, int(ivec3(8, 0, 1))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(8, int(ivec3(8, 0, 1)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(8, int(ivec3(8, 0, 1))), clamp(_GLF_IDENTITY(8, int(ivec3(8, 0, 1))), _GLF_IDENTITY(8, int(ivec3(8, 0, 1))), _GLF_IDENTITY(_GLF_IDENTITY(8, int(ivec3(8, 0, 1))), (true ? _GLF_IDENTITY(8, int(ivec3(8, 0, 1))) : _GLF_FUZZED(_injected_loop_counter))))))), (false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(_GLF_IDENTITY(8, int(ivec3(8, 0, 1))), (_GLF_IDENTITY(_GLF_IDENTITY(8, int(ivec3(8, 0, 1))), (false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), clamp(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter))) : _GLF_IDENTITY(8, int(ivec3(8, 0, 1)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(8, int(ivec3(8, 0, 1))), clamp(_GLF_IDENTITY(8, int(ivec3(8, 0, 1))), _GLF_IDENTITY(8, int(ivec3(8, 0, 1))), _GLF_IDENTITY(_GLF_IDENTITY(8, int(ivec3(8, 0, 1))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(8, int(ivec3(8, 0, 1))), (_GLF_IDENTITY(8, int(ivec3(8, 0, 1)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(_injected_loop_counter)))))))) + 0))))), 8))), _GLF_IDENTITY(int(8), min(int(_GLF_IDENTITY(8, 0 ^ (8))), int(8))))))) >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, max(_GLF_IDENTITY(5, (false ? _GLF_FUZZED(_injected_loop_counter) : 5)), 5)))), 0 | ((_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, ~ (~ (0))), 0, 0)) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, max(8, 8)), (_GLF_IDENTITY(_GLF_IDENTITY(8, max(8, 8)), ~ (~ (_GLF_IDENTITY(8, max(8, 8)))))) | 0)), 0 + (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, max(_GLF_IDENTITY(8, int(ivec3(8, 0, 1))), 8)), max(8, 8)), _GLF_IDENTITY(0, (0) << 0) | (_GLF_IDENTITY(8, max(8, 8))))), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, max(_GLF_IDENTITY(8, int(ivec3(8, 0, 1))), 8)), max(8, 8)), _GLF_IDENTITY(0, (0) << 0) | (_GLF_IDENTITY(8, max(8, 8))))), 0 | (int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, max(_GLF_IDENTITY(8, int(ivec3(8, 0, 1))), 8)), max(8, 8)), _GLF_IDENTITY(0, (0) << 0) | (_GLF_IDENTITY(8, max(8, 8))))))) : _GLF_FUZZED(78535))))), int(8)), (_GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), int(8))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) >> 0), min(8, _GLF_IDENTITY(8, (8) / 1))), max(_GLF_IDENTITY(8, _GLF_IDENTITY((false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(8, int(ivec3(8, _GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY(1, (1) - 0))))), max((false ? _GLF_FUZZED(_GLF_IDENTITY(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704), 0 | (atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)))) : _GLF_IDENTITY(8, int(ivec3(8, 0, 1)))), (false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(8, int(ivec3(8, 0, 1))))))), 8))), _GLF_IDENTITY(int(8), min(int(8), _GLF_IDENTITY(int(8), max(_GLF_IDENTITY(int(8), (int(8)) ^ 0), int(8))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | 0), int(_GLF_IDENTITY(5, (5) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) | _GLF_IDENTITY(((0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, max(8, 8)), (_GLF_IDENTITY(_GLF_IDENTITY(8, max(8, 8)), ~ (~ (_GLF_IDENTITY(8, max(8, 8)))))) | 0)), _GLF_IDENTITY(0, min(0, 0)) + (int(_GLF_IDENTITY(8, max(8, 8))))), int(8)), (_GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), int(8))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) >> 0), _GLF_IDENTITY(min(8, _GLF_IDENTITY(8, _GLF_IDENTITY((8) / 1, clamp((8) / 1, (8) / 1, (8) / 1)))), (0 >> _GLF_IDENTITY(int(7), int(7))) ^ (min(8, _GLF_IDENTITY(8, _GLF_IDENTITY((8) / 1, clamp((8) / 1, (8) / 1, (8) / 1))))))), max(_GLF_IDENTITY(8, _GLF_IDENTITY((false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(8, int(ivec3(8, _GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))))))), max((false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(_GLF_IDENTITY(8, clamp(8, _GLF_IDENTITY(8, clamp(8, 8, 8)), 8)), int(ivec3(8, 0, 1)))), (false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(8, _GLF_IDENTITY(int(ivec3(8, 0, _GLF_IDENTITY(1, ~ (~ (1))))), max(int(ivec3(8, 0, _GLF_IDENTITY(1, ~ (~ (1))))), int(ivec3(8, 0, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1))), ~ (1)))))))))))))), 8))), _GLF_IDENTITY(_GLF_IDENTITY(int(8), min(_GLF_IDENTITY(int(8), max(int(8), int(8))), _GLF_IDENTITY(_GLF_IDENTITY(int(8), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(8), (true ? int(8) : _GLF_FUZZED(_injected_loop_counter))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(int(8), (int(8)) / 1), int(8), int(8)), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(int(8), (int(8)) / 1), int(8), int(8)), 0 + (clamp(_GLF_IDENTITY(int(8), (int(8)) / 1), int(8), int(8))))) >> 0)))), min(int(8), int(8))))))) >> _GLF_IDENTITY(int(5), int(5))), max(((0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, max(8, 8)), (_GLF_IDENTITY(_GLF_IDENTITY(8, _GLF_IDENTITY(max(8, 8), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(max(8, 8), int(ivec3(max(8, 8), 0, 1))) : _GLF_FUZZED(_injected_loop_counter)))), ~ (~ (_GLF_IDENTITY(8, max(8, 8)))))) | 0)), _GLF_IDENTITY(0, min(0, 0)) + (int(_GLF_IDENTITY(8, max(8, 8))))), int(8)), (_GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), int(8))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) >> 0), min(8, _GLF_IDENTITY(8, _GLF_IDENTITY((8) / 1, clamp((8) / 1, (8) / 1, (8) / 1))))), max(_GLF_IDENTITY(8, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(8, int(ivec3(8, _GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))))), int(ivec4(_GLF_IDENTITY(false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(8, int(ivec3(8, _GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))))), (false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(8, int(ivec3(8, _GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))))))) | 0), 0, 0, 0)))), max((false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(_GLF_IDENTITY(8, clamp(8, _GLF_IDENTITY(8, clamp(8, 8, 8)), 8)), _GLF_IDENTITY(int(ivec3(8, 0, 1)), (int(ivec3(8, 0, 1))) - 0))), (false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(8, _GLF_IDENTITY(int(ivec3(8, 0, _GLF_IDENTITY(1, ~ (~ (1))))), max(int(ivec3(8, 0, _GLF_IDENTITY(1, ~ (~ (1))))), int(ivec3(8, 0, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1))), ~ (1)))))))))))))), 8))), _GLF_IDENTITY(_GLF_IDENTITY(int(8), min(_GLF_IDENTITY(int(8), max(int(8), int(8))), _GLF_IDENTITY(_GLF_IDENTITY(int(8), (false ? _GLF_FUZZED(_injected_loop_counter) : int(8))), clamp(_GLF_IDENTITY(int(8), (int(8)) / 1), int(8), int(8))))), min(int(8), int(8))))))) >> _GLF_IDENTITY(int(5), int(5))), ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, max(8, 8)), (_GLF_IDENTITY(_GLF_IDENTITY(8, max(8, 8)), ~ (~ (_GLF_IDENTITY(8, max(8, 8)))))) | 0)), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 + (0)), 0)) + (int(_GLF_IDENTITY(_GLF_IDENTITY(8, max(8, 8)), (_GLF_IDENTITY(8, max(8, 8))) << 0)))), int(8)), (_GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), int(8))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) >> 0), min(8, _GLF_IDENTITY(8, _GLF_IDENTITY((8) / 1, clamp((8) / 1, (8) / 1, (8) / 1))))), max(_GLF_IDENTITY(_GLF_IDENTITY(8, _GLF_IDENTITY((false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(8, int(ivec3(8, _GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))))))), max((false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(_GLF_IDENTITY(8, clamp(8, _GLF_IDENTITY(8, clamp(8, 8, 8)), 8)), int(ivec3(8, 0, 1)))), (false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(8, _GLF_IDENTITY(int(ivec3(8, 0, _GLF_IDENTITY(1, ~ (~ (1))))), max(int(ivec3(8, 0, _GLF_IDENTITY(1, ~ (~ (1))))), int(ivec3(8, 0, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1))), ~ (1)))))))))))))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(8, _GLF_IDENTITY((false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(8, int(ivec3(8, _GLF_IDENTITY(0, _GLF_IDENTITY((0) >> 0, ((0) >> 0) / 1)), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))))))), max((false ? _GLF_IDENTITY(_GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)), (_GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704))) | (_GLF_IDENTITY(_GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)))))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, clamp(8, _GLF_IDENTITY(8, clamp(8, 8, 8)), 8)), int(ivec3(8, 0, 1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(8, clamp(8, _GLF_IDENTITY(8, clamp(8, 8, 8)), 8)), int(ivec3(8, 0, 1))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, clamp(8, _GLF_IDENTITY(8, clamp(8, 8, 8)), 8)), int(ivec3(8, 0, 1))), (_GLF_IDENTITY(_GLF_IDENTITY(8, clamp(8, _GLF_IDENTITY(8, clamp(8, 8, 8)), 8)), int(ivec3(8, 0, 1)))) | (_GLF_IDENTITY(_GLF_IDENTITY(8, clamp(8, _GLF_IDENTITY(8, clamp(8, 8, 8)), 8)), int(ivec3(8, 0, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(8, clamp(8, _GLF_IDENTITY(8, clamp(8, 8, 8)), 8)), int(ivec3(8, 0, 1)))))), (false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(8, _GLF_IDENTITY(int(ivec3(8, 0, _GLF_IDENTITY(1, ~ (~ (1))))), max(int(ivec3(8, 0, _GLF_IDENTITY(1, ~ (~ (1))))), int(ivec3(8, 0, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(_GLF_IDENTITY(~ (1), clamp(_GLF_IDENTITY(~ (1), 1 * (~ (1))), ~ (1), ~ (1))), ~ (1)))))))))))))))), 8))), _GLF_IDENTITY(_GLF_IDENTITY(int(8), min(_GLF_IDENTITY(int(8), max(int(8), int(8))), _GLF_IDENTITY(_GLF_IDENTITY(int(8), (false ? _GLF_FUZZED(_injected_loop_counter) : int(8))), clamp(_GLF_IDENTITY(int(8), (int(8)) / 1), int(8), int(8))))), min(int(8), int(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, clamp(8, 8, 8))) - 0)))))))) >> _GLF_IDENTITY(int(5), int(5))))))), bool(bvec4(_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, max(8, 8)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, 0 | (8)), max(8, 8)), ~ (~ (_GLF_IDENTITY(8, max(8, 8)))))) | 0)), 0 + (int(_GLF_IDENTITY(8, max(8, 8))))), int(8)), (_GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), int(8))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) >> 0), min(8, _GLF_IDENTITY(_GLF_IDENTITY(8, (8) / 1), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(8, (8) / 1), 1, 0, 0), ~ (~ (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(8, (8) / 1), 1, 0, 0), (ivec4(_GLF_IDENTITY(8, (8) / 1), 1, 0, 0)) - ivec4(0, 0, 0, 0))))))))), max(_GLF_IDENTITY(8, _GLF_IDENTITY((false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(8, int(ivec3(8, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(0, 0))))))) >> 0), 1)))), max((false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(8, int(ivec3(8, 0, 1)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(8, int(ivec3(8, _GLF_IDENTITY(0, 0 | (0)), 1))), (false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(8, int(ivec3(8, _GLF_IDENTITY(0, 0 | (0)), 1)))) | 0))))), 8))), _GLF_IDENTITY(int(8), min(int(8), int(8))))))) >> _GLF_IDENTITY(int(5), int(5)), ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, max(8, 8)), (_GLF_IDENTITY(_GLF_IDENTITY(8, max(8, _GLF_IDENTITY(8, 0 | (8)))), ~ (~ (_GLF_IDENTITY(8, max(8, 8)))))) | 0)), 0 + (int(_GLF_IDENTITY(8, max(8, 8))))), int(8)), (_GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), int(8))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) >> 0), min(8, _GLF_IDENTITY(8, (8) / 1))), max(_GLF_IDENTITY(8, _GLF_IDENTITY((false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(8, int(ivec3(8, _GLF_IDENTITY(0, (0) >> 0), 1)))), max((false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(8, int(ivec3(8, 0, 1)))), (false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(8, int(ivec3(8, 0, 1))))))), 8))), _GLF_IDENTITY(int(8), min(int(8), int(8))))))) >> _GLF_IDENTITY(int(5), int(5))) | 0), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, max(8, 8)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, max(8, 8))))), max(8, 8)), ~ (~ (_GLF_IDENTITY(8, max(8, 8)))))) | _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) >> 0))), min(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | _GLF_IDENTITY((_GLF_IDENTITY(0, (0) >> 0)), max((_GLF_IDENTITY(0, (0) >> 0)), (_GLF_IDENTITY(0, (0) >> 0))))), 0 | (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))))), int(ivec3((_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec4(0, 0, 1, 1))), (0) >> 0))))), _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) >> 0))))))), 0 + (int(_GLF_IDENTITY(8, max(8, 8))))), int(8)), (_GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), int(8))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) >> 0), min(8, _GLF_IDENTITY(8, _GLF_IDENTITY((8) / 1, ~ (_GLF_IDENTITY(~ ((8) / 1), 0 ^ (~ ((8) / 1)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(8, (8) >> 0), min(8, _GLF_IDENTITY(8, (8) / 1)))) ^ 0), max(_GLF_IDENTITY(8, _GLF_IDENTITY((false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(_GLF_IDENTITY(8, int(ivec3(8, _GLF_IDENTITY(0, (0) >> 0), 1))), (_GLF_IDENTITY(8, int(ivec3(8, _GLF_IDENTITY(0, (0) >> 0), 1)))) * 1)), max((_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)), _injected_loop_counter, _GLF_IDENTITY(findMSB(_injected_loop_counter), clamp(_GLF_IDENTITY(findMSB(_injected_loop_counter), min(findMSB(_injected_loop_counter), findMSB(_injected_loop_counter))), _GLF_IDENTITY(findMSB(_injected_loop_counter), (_GLF_IDENTITY(findMSB(_injected_loop_counter), max(findMSB(_injected_loop_counter), findMSB(_injected_loop_counter)))) / 1), findMSB(_injected_loop_counter))), 69704), max(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704), atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)))) : _GLF_IDENTITY(8, int(ivec3(8, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (0) | _GLF_IDENTITY((0), ((0)) ^ 0)), _GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), 1))), (false ? _GLF_FUZZED(_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)), _injected_loop_counter, _GLF_IDENTITY(findMSB(_injected_loop_counter), clamp(_GLF_IDENTITY(findMSB(_injected_loop_counter), min(findMSB(_injected_loop_counter), findMSB(_injected_loop_counter))), _GLF_IDENTITY(findMSB(_injected_loop_counter), (_GLF_IDENTITY(findMSB(_injected_loop_counter), max(findMSB(_injected_loop_counter), findMSB(_injected_loop_counter)))) / 1), findMSB(_injected_loop_counter))), 69704), max(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704), atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)))) : _GLF_IDENTITY(8, int(ivec3(8, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (0) | (0)), _GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), 1)))) * 1)), (_GLF_IDENTITY(false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(_GLF_IDENTITY(8, int(ivec3(8, 0, 1))), (_GLF_IDENTITY(_GLF_IDENTITY(8, int(ivec3(8, 0, 1))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (8) / 1)) * (0 | 1)), int(ivec3(8, 0, 1)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(8, int(ivec3(8, 0, 1))), clamp(_GLF_IDENTITY(8, int(ivec3(8, 0, 1))), _GLF_IDENTITY(8, int(ivec3(8, 0, 1))), _GLF_IDENTITY(_GLF_IDENTITY(8, int(ivec3(8, 0, 1))), (true ? _GLF_IDENTITY(8, int(ivec3(8, 0, 1))) : _GLF_FUZZED(_injected_loop_counter))))))), (false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(_GLF_IDENTITY(8, int(ivec3(8, 0, 1))), (_GLF_IDENTITY(_GLF_IDENTITY(8, int(ivec3(_GLF_IDENTITY(8, 1 * (8)), 0, 1))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(8, int(ivec3(8, 0, 1)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(8, int(ivec3(8, 0, 1))), clamp(_GLF_IDENTITY(8, int(ivec3(8, 0, 1))), _GLF_IDENTITY(8, int(ivec3(8, 0, 1))), _GLF_IDENTITY(_GLF_IDENTITY(8, int(ivec3(8, 0, 1))), (true ? _GLF_IDENTITY(8, int(ivec3(8, 0, 1))) : _GLF_FUZZED(_injected_loop_counter)))))))) + 0))))), 8))), _GLF_IDENTITY(int(8), min(int(_GLF_IDENTITY(8, 0 ^ (8))), int(8))))))) >> _GLF_IDENTITY(int(5), int(5)), 0 | ((_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, ~ (~ (0))), 0, 0)) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, max(8, 8)), (_GLF_IDENTITY(_GLF_IDENTITY(8, max(8, 8)), ~ (~ (_GLF_IDENTITY(8, max(8, 8)))))) | 0)), 0 + (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, max(_GLF_IDENTITY(8, int(ivec3(8, 0, 1))), 8)), max(8, 8)), _GLF_IDENTITY(0, (0) << 0) | (_GLF_IDENTITY(8, max(8, 8))))), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, max(_GLF_IDENTITY(8, int(ivec3(8, 0, 1))), 8)), max(8, 8)), _GLF_IDENTITY(0, (0) << 0) | (_GLF_IDENTITY(8, max(8, 8))))), 0 | (int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, max(_GLF_IDENTITY(8, int(ivec3(8, 0, 1))), 8)), max(8, 8)), _GLF_IDENTITY(0, (0) << 0) | (_GLF_IDENTITY(8, max(8, 8))))))) : _GLF_FUZZED(78535))))), int(8)), (_GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), int(8))) | _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) >> 0), min(8, _GLF_IDENTITY(8, (8) / 1))), max(_GLF_IDENTITY(8, _GLF_IDENTITY((false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(8, int(ivec3(8, _GLF_IDENTITY(0, (0) >> 0), 1)))), max((false ? _GLF_FUZZED(_GLF_IDENTITY(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704), 0 | (atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)))) : _GLF_IDENTITY(8, int(ivec3(8, 0, 1)))), (false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(8, int(ivec3(8, 0, 1))))))), 8))), _GLF_IDENTITY(int(8), min(int(8), _GLF_IDENTITY(int(8), max(_GLF_IDENTITY(int(8), (int(8)) ^ 0), int(8))))))), max((_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) >> 0), min(8, _GLF_IDENTITY(8, (8) / 1))), max(_GLF_IDENTITY(8, _GLF_IDENTITY((false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(8, int(ivec3(8, _GLF_IDENTITY(0, (0) >> 0), 1)))), max((false ? _GLF_FUZZED(_GLF_IDENTITY(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704), 0 | (atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)))) : _GLF_IDENTITY(8, int(ivec3(8, 0, 1)))), (false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(8, int(ivec3(8, 0, 1))))))), 8))), _GLF_IDENTITY(int(8), min(int(8), _GLF_IDENTITY(int(8), max(_GLF_IDENTITY(int(8), (int(8)) ^ 0), int(8))))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) >> 0), min(8, _GLF_IDENTITY(8, (8) / 1))), max(_GLF_IDENTITY(8, _GLF_IDENTITY((false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(8, int(ivec3(8, _GLF_IDENTITY(0, (0) >> 0), 1)))), max((false ? _GLF_FUZZED(_GLF_IDENTITY(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704), 0 | (atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)))) : _GLF_IDENTITY(8, int(ivec3(8, 0, 1)))), (false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(8, int(ivec3(8, 0, 1))))))), 8))), _GLF_IDENTITY(int(8), min(int(8), _GLF_IDENTITY(int(8), max(_GLF_IDENTITY(int(8), (int(8)) ^ 0), int(8))))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | 0), int(_GLF_IDENTITY(5, (5) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) | _GLF_IDENTITY(((0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, max(_GLF_IDENTITY(8, int(ivec2(_GLF_IDENTITY(8, (8) | (8)), (0 ^ 0)))), 8)), (_GLF_IDENTITY(_GLF_IDENTITY(8, max(8, 8)), ~ (~ (_GLF_IDENTITY(8, max(8, 8)))))) | 0)), _GLF_IDENTITY(0, min(0, 0)) + (int(_GLF_IDENTITY(8, max(8, 8))))), int(8)), (_GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), int(8))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) >> 0), min(8, _GLF_IDENTITY(8, _GLF_IDENTITY((8) / 1, clamp((8) / 1, (_GLF_IDENTITY(8, (8) / 1)) / 1, (8) / 1))))), max(_GLF_IDENTITY(8, _GLF_IDENTITY((false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(8, int(ivec3(8, _GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))))))), max((false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(_GLF_IDENTITY(8, clamp(8, _GLF_IDENTITY(8, clamp(8, 8, 8)), 8)), int(ivec3(8, 0, 1)))), (false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(8, _GLF_IDENTITY(int(ivec3(8, 0, _GLF_IDENTITY(1, ~ (~ (1))))), max(int(ivec3(8, 0, _GLF_IDENTITY(1, ~ (~ (1))))), int(ivec3(8, 0, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1))), ~ (1)))))))))))))), 8))), _GLF_IDENTITY(_GLF_IDENTITY(int(8), min(_GLF_IDENTITY(int(8), max(int(8), int(8))), _GLF_IDENTITY(_GLF_IDENTITY(int(8), (false ? _GLF_FUZZED(_injected_loop_counter) : int(8))), clamp(_GLF_IDENTITY(int(8), (int(_GLF_IDENTITY(8, max(8, 8)))) / 1), int(8), int(8))))), min(int(8), int(8))))))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(int(int(5)))))), max(((0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, max(8, 8)), (_GLF_IDENTITY(_GLF_IDENTITY(8, max(8, 8)), ~ (~ (_GLF_IDENTITY(8, max(8, 8)))))) | 0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, max(8, 8)), (_GLF_IDENTITY(_GLF_IDENTITY(8, max(8, 8)), ~ (~ (_GLF_IDENTITY(8, max(8, 8)))))) | 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(8, max(8, 8)), (_GLF_IDENTITY(_GLF_IDENTITY(8, max(8, 8)), ~ (~ (_GLF_IDENTITY(8, max(8, 8)))))) | 0))), _GLF_IDENTITY(_GLF_IDENTITY(8, max(8, 8)), (_GLF_IDENTITY(_GLF_IDENTITY(8, max(8, 8)), ~ (~ (_GLF_IDENTITY(8, max(8, 8)))))) | 0)))), _GLF_IDENTITY(0, min(0, 0)) + (int(_GLF_IDENTITY(8, max(8, 8))))), int(8)), (_GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), int(8))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) >> 0), min(8, _GLF_IDENTITY(8, _GLF_IDENTITY((8) / 1, clamp((8) / 1, (8) / 1, (8) / 1))))), max(_GLF_IDENTITY(8, _GLF_IDENTITY((false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(8, int(ivec3(8, _GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))))))), max((false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(_GLF_IDENTITY(8, clamp(8, _GLF_IDENTITY(8, clamp(8, 8, 8)), 8)), int(ivec3(8, 0, 1)))), (false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(8, _GLF_IDENTITY(int(ivec3(8, 0, _GLF_IDENTITY(1, ~ (~ (1))))), max(int(ivec3(8, 0, _GLF_IDENTITY(1, ~ (~ (1))))), int(ivec3(8, 0, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1))), ~ (1)))))))))))))), 8))), _GLF_IDENTITY(_GLF_IDENTITY(int(8), min(_GLF_IDENTITY(_GLF_IDENTITY(int(8), max(int(8), int(8))), (_GLF_IDENTITY(int(8), max(int(8), int(8)))) | (_GLF_IDENTITY(int(8), max(int(8), int(8))))), _GLF_IDENTITY(_GLF_IDENTITY(int(8), (false ? _GLF_FUZZED(_injected_loop_counter) : int(8))), clamp(_GLF_IDENTITY(int(8), (int(8)) / 1), int(8), int(8))))), min(int(8), int(8))))))) >> _GLF_IDENTITY(int(5), int(5))), ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, max(8, 8)), (_GLF_IDENTITY(_GLF_IDENTITY(8, max(8, 8)), ~ (~ (_GLF_IDENTITY(8, max(8, 8)))))) | 0)), _GLF_IDENTITY(0, min(0, 0)) + (int(_GLF_IDENTITY(8, max(8, 8))))), int(8)), (_GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), int(8))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) >> 0), min(8, _GLF_IDENTITY(8, _GLF_IDENTITY((8) / 1, clamp((8) / 1, (8) / 1, (8) / 1))))), max(_GLF_IDENTITY(8, _GLF_IDENTITY((false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(8, int(ivec3(8, _GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))))))), max((false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(_GLF_IDENTITY(8, clamp(8, _GLF_IDENTITY(8, clamp(8, 8, 8)), 8)), int(ivec3(8, 0, 1)))), (false ? _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, findMSB(_injected_loop_counter), 69704)) : _GLF_IDENTITY(8, _GLF_IDENTITY(int(ivec3(8, 0, _GLF_IDENTITY(1, ~ (~ (1))))), max(int(ivec3(8, 0, _GLF_IDENTITY(1, ~ (~ (1))))), int(ivec3(8, 0, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1))), ~ (1)))))))))))))), 8))), _GLF_IDENTITY(_GLF_IDENTITY(int(8), min(_GLF_IDENTITY(int(8), max(int(8), int(8))), _GLF_IDENTITY(_GLF_IDENTITY(int(8), (false ? _GLF_FUZZED(_injected_loop_counter) : int(8))), clamp(_GLF_IDENTITY(int(8), (int(8)) / 1), int(_GLF_IDENTITY(8, max(8, 8))), int(8))))), min(int(8), int(8))))))) >> _GLF_IDENTITY(int(5), int(5))))))), false, false, false)))); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 for(int _injected_loop_counter = _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> _GLF_IDENTITY(0, (0) | (0))) * 1))) ^ 0), _GLF_IDENTITY(1, (1) | (1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, _GLF_IDENTITY(1 * (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY(0, 0 | (0)) ^ (0))), (1 * (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY(0, 0 | (0)) ^ (0)))) | (1 * (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY(0, 0 | (0)) ^ (0))))))); _injected_loop_counter --)
                  {
                   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     do
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY(1, (1) | (1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                          {
                           do
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))
                                {
                                }
                               else
                                {
                                 do
                                  {
                                   do
                                    {
                                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)) - 0))) > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))))); _injected_loop_counter --)
                                      {
                                       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                        {
                                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0)))))))
                                          {
                                          }
                                         else
                                          {
                                           if(_GLF_WRAPPED_IF_TRUE(true))
                                            {
                                             do
                                              {
                                               if(_GLF_WRAPPED_IF_FALSE(false))
                                                {
                                                }
                                               else
                                                {
                                                 subgroupAll(false);
                                                }
                                              }
                                             while(_GLF_WRAPPED_LOOP(false));
                                            }
                                           else
                                            {
                                            }
                                          }
                                        }
                                      }
                                    }
                                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))));
                          }
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
      }
    }
   read = atomicLoad(buf[_GLF_IDENTITY(_GLF_struct_replacement_4.virtual_gid, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) * (_GLF_struct_replacement_4.virtual_gid))], 4, 64, _GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, min(2, 2)))));
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) | (1)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter), (_GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) << 0)) * 1) << 0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0), min(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0), _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0))))))) != _GLF_IDENTITY((_GLF_IDENTITY(50453 & 0, (50453 & _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) << 0))) : _GLF_FUZZED(35594)))) | 0)), (true ? (50453 & 0) : _GLF_FUZZED(_injected_loop_counter)))); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = _GLF_IDENTITY((_GLF_IDENTITY(0, (0) - 0) ^ 1), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) - 0) ^ 1), ((_GLF_IDENTITY(0, (0) - 0) ^ 1)) * 1), 1, 1, 0)), min(int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) - 0) ^ 1), ((_GLF_IDENTITY(0, (0) - 0) ^ 1)) * 1), 1, 1, 0)), int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) - 0) ^ 1), ((_GLF_IDENTITY(0, (0) - 0) ^ 1)) * 1), 1, 1, 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (-44217 & 0)); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               subgroupAll(false);
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         else
          {
          }
        }
      }
    }
   read = atomicLoad(buf[_GLF_struct_replacement_4.virtual_gid], 4, 64, 2);
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), true))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true))))))
  {
  }
 else
  {
   subgroupBarrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), (bool(bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))) || false))), true && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), (bool(bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))) || false))))))))
  {
  }
 else
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         atomicStore(checker[_GLF_struct_replacement_4.virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(read, (_GLF_IDENTITY(read, 1u * (read))) >> _GLF_IDENTITY((0u & 149420u), ((0u & 149420u)) | ((0u & 149420u)))), 0u + (_GLF_IDENTITY(read, (read) | 0u))), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0 | (4), 0 + (0 | (4)))), clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(0 | (4), 0 + (0 | (4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0 | (4), 0 + (0 | (4)))), (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 + (0)), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, 0 + (0)), 1, 0, 1), (ivec4(_GLF_IDENTITY(0, 0 + (0)), 1, 0, 1)) * ivec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) | (4), 0 + (0 | (4)))), (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(0 | (4), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, int(ivec2(0, 1))))) | (4), (0 | (4)) ^ 0), 0 | (4), 0 | (4))), 0 + (0 | (4))))) | (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(0 | (4), 0 + (0 | (4))), ~ (~ (_GLF_IDENTITY(0 | (4), 0 + (0 | (4)))))))))) * 1), _GLF_IDENTITY(4, _GLF_IDENTITY(0 | (4), 0 + (0 | (4)))))));
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
}
