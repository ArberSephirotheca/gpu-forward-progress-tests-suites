#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_17 {
 uint workgroup_id;
 float _f0;
} ;

struct _GLF_struct_14 {
 mat3x4 _f0;
 vec2 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_13 {
 uint _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_15 {
 mat3x2 _f0;
 mat2x4 _f1;
 _GLF_struct_13 _f2;
 _GLF_struct_14 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_11 {
 bvec4 _f0;
} ;

struct _GLF_struct_12 {
 _GLF_struct_11 _f0;
} ;

struct _GLF_struct_9 {
 mat4x3 _f0;
} ;

struct _GLF_struct_8 {
 vec4 _f0;
} ;

struct _GLF_struct_7 {
 uint _f0;
 uvec3 _f1;
 ivec4 _f2;
 uvec4 _f3;
 float _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_10 {
 uvec4 _f0;
 _GLF_struct_7 _f1;
 ivec4 _f2;
 _GLF_struct_8 _f3;
 _GLF_struct_9 _f4;
 bvec3 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_5 {
 uvec2 _f0;
 mat4x3 _f1;
 uvec3 _f2;
 uvec3 _f3;
 vec2 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_4 {
 vec2 _f0;
 mat2x4 _f1;
 mat4x2 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_3 {
 mat3x4 _f0;
 vec3 _f1;
 uvec4 _f2;
 mat2x3 _f3;
 ivec2 _f4;
 float _f5;
} ;

struct _GLF_struct_2 {
 vec2 _f0;
 float _f1;
 vec3 _f2;
} ;

struct _GLF_struct_1 {
 float _f0;
} ;

struct _GLF_struct_6 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_3 _f2;
 bvec3 _f3;
 _GLF_struct_4 _f4;
 _GLF_struct_5 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_16 {
 _GLF_struct_6 _f0;
 _GLF_struct_10 _f1;
 _GLF_struct_12 _f2;
 _GLF_struct_15 _f3;
 ivec4 _f4;
 uint workgroup_size;
} ;

struct _GLF_struct_0 {
 uint subgroup_local_id;
 uvec3 _f0;
 mat4x2 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat4x2(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 0.0), mat4x2(mat4x2(mat4x2(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 0.0)))))))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), true))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), true))))), true, true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.2), _GLF_FUZZED(-3.9)), bvec2(false, false))).x < injectionSwitch.y)))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), true))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), true))))), true, true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, true), true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), true))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), true))))), true, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true, true), true))))), true, true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.2), _GLF_FUZZED(-3.9)), bvec2(false, false))).x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), true))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, true)))) && true)), true, true), true))))), true, true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true))))))) || false)), bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(true, (true) || false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), true))), true))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, true), true))))), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), (! (true)) || false))))), true), false))), true)))))))))))), true)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true), true && ((true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) && true), true && ((true)))), true && (! (_GLF_IDENTITY((true), true && ((true))))))) && true))) || false)), bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(true, (true) || false))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true), bvec3(bvec4(bvec3(false, true, true), false))), true))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, (true) && true)), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, (true) || false), true), false))), _GLF_IDENTITY(true, (true) || false)))))))))), false))), true))))))))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y))), false, true, false))))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(gl_SubgroupInvocationID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), (_GLF_IDENTITY(true, ! (! (true))) ? max(1u, 1u) : _GLF_FUZZED(subgroup_id))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uvec3(1u)), min(~ (uvec3(1u)), ~ (uvec3(1u))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uvec3(1u)), uvec3(uvec3(_GLF_IDENTITY((uvec3(1u)), max((uvec3(1u)), (uvec3(1u))))))), min(~ (uvec3(1u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (uvec3(1u)) : _GLF_FUZZED(uvec3(48153u, 91822u, 107248u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (uvec3(1u)) : _GLF_FUZZED(uvec3(48153u, 91822u, 107248u))) / uvec3(1u, 1u, 1u))))))), (~ (_GLF_IDENTITY(~ (uvec3(1u)), min(~ (uvec3(1u)), ~ (uvec3(1u)))))) | (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uvec3(1u)), min(~ (uvec3(1u)), ~ (uvec3(1u))))), _GLF_IDENTITY(clamp((_GLF_IDENTITY(~ (uvec3(1u)), min(~ (uvec3(1u)), ~ (uvec3(1u))))), (_GLF_IDENTITY(~ (uvec3(1u)), min(~ (uvec3(1u)), ~ (uvec3(1u))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (uvec3(1u)), min(~ (uvec3(1u)), ~ (uvec3(1u))))), (false ? _GLF_FUZZED(uvec3(79089u, 136158u, 173621u)) : (_GLF_IDENTITY(~ (uvec3(1u)), min(~ (uvec3(1u)), ~ (uvec3(1u)))))))), ~ (_GLF_IDENTITY(~ (clamp((_GLF_IDENTITY(~ (uvec3(1u)), min(~ (uvec3(1u)), ~ (uvec3(1u))))), (_GLF_IDENTITY(~ (uvec3(1u)), min(~ (uvec3(1u)), ~ (uvec3(1u))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (uvec3(1u)), min(~ (uvec3(1u)), ~ (uvec3(1u))))), (false ? _GLF_FUZZED(uvec3(79089u, 136158u, 173621u)) : (_GLF_IDENTITY(~ (uvec3(1u)), min(~ (uvec3(1u)), ~ (uvec3(1u))))))))), (~ (clamp((_GLF_IDENTITY(~ (uvec3(1u)), min(~ (uvec3(1u)), ~ _GLF_IDENTITY((uvec3(1u)), uvec3(uvec4((uvec3(1u)), 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (uvec3(1u)), min(~ (uvec3(1u)), ~ (uvec3(1u))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (uvec3(1u)), min(~ (uvec3(1u)), ~ (uvec3(1u))))), ((_GLF_IDENTITY(~ (uvec3(1u)), min(~ (uvec3(1u)), ~ (uvec3(1u)))))) / uvec3(1u, 1u, 1u))) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (uvec3(1u)), min(~ (uvec3(1u)), ~ (uvec3(1u))))), (false ? _GLF_FUZZED(uvec3(79089u, 136158u, 173621u)) : (_GLF_IDENTITY(~ (uvec3(1u)), _GLF_IDENTITY(min(~ (uvec3(1u)), ~ (uvec3(1u))), uvec3(uvec4(min(~ (uvec3(1u)), ~ (uvec3(1u))), 1u)))))))))) + uvec3(0u, 0u, 0u)))))))) - uvec3(0u, 0u, 0u))), mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), clamp(_GLF_IDENTITY(min(1.0, 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(min(1.0, 1.0), mix(float(min(1.0, 1.0)), float(_GLF_FUZZED(-653.622)), bool(false))), clamp(min(1.0, 1.0), min(1.0, 1.0), min(1.0, 1.0))), min(1.0, 1.0))), min(1.0, 1.0), min(1.0, 1.0))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x)), 1.0, 1.0, 0.0))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x)), 1.0, 1.0, 0.0))) > injectionSwitch.y)) && true))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(126943u, 105399u, 77764u)) : gl_NumWorkGroups)), gl_NumWorkGroups)), uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)), uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) / 1u), 1u, 1u), (uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) / 1u), 1u, 1u)) << uvec3(0u, 0u, 0u)) * (_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(28160u, 83415u, 122604u))))))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), true)))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_struct_6(_GLF_struct_1(1.0), _GLF_struct_2(vec2(1.0), 1.0, _GLF_IDENTITY(vec3(1.0), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec3(7.6, _GLF_IDENTITY(586.441, max(586.441, 586.441)), -296.936)) : vec3(1.0)))), _GLF_struct_3(mat3x4(1.0), vec3(1.0), uvec4(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : 1u), min((false ? _GLF_FUZZED(subgroup_size) : 1u), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : 1u), 1u * ((false ? _GLF_FUZZED(subgroup_size) : 1u)))))), 1u))), mat2x3(1.0), ivec2(1), 1.0), bvec3(true), _GLF_struct_4(vec2(1.0), mat2x4(1.0), mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))))) - 0.0)), bvec2(true)), _GLF_struct_5(uvec2(1u), mat4x3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4986.9577)), bool(false))), _GLF_IDENTITY(1.0, (1.0) / 1.0)))), uvec3(1u), uvec3(1u), vec2(1.0), mat2x4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0))), _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))), _GLF_struct_10(uvec4(1u), _GLF_struct_7(1u, _GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u)))), ivec4(1), uvec4(1u), 1.0, mat2x4(1.0)), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), min(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y)))))) * (_GLF_IDENTITY(1, 1 * (1))))), min(ivec4(_GLF_IDENTITY(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), min(min(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), clamp(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y))), 0.0, 0.0, 0.0), vec4(mat2(vec4(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), clamp(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y))), 0.0, 0.0, 0.0))))))))))) * (1))), ivec4(_GLF_IDENTITY(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), mix(float(float(mat4(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), float(_GLF_FUZZED(-39.79)), bool(false)))), float(vec4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), mix(float(float(mat4(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), float(_GLF_FUZZED(-39.79)), bool(false)))), 1.0, 0.0, 1.0))), injectionSwitch.y), min(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y)))))) * (1))))), _GLF_struct_8(vec4(1.0)), _GLF_struct_9(mat4x3(1.0)), bvec3(true), _GLF_IDENTITY(vec3(1.0), (vec3(1.0)) * mat3(1.0))), _GLF_struct_12(_GLF_struct_11(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))))), _GLF_struct_15(mat3x2(1.0), mat2x4(1.0), _GLF_struct_13(1u, mat4x2(1.0)), _GLF_struct_14(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(-38.34) : 1.0), min((false ? _GLF_FUZZED(-38.34) : 1.0), (false ? _GLF_FUZZED(-38.34) : 1.0))))), _GLF_IDENTITY(vec2(1.0), min(vec2(1.0), vec2(1.0))), mat4x3(1.0)), mat3x2(1.0)), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - 0)))), 0 | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 | (1)), max(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 | (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 | (1)))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(0 | (1), (_GLF_IDENTITY(0 | (1), min(0 | (1), _GLF_IDENTITY(0 | (1), ~ (~ (0 | (1))))))) | (0 | (1)))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 | (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 | (1))))), max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(0 | (1), (_GLF_IDENTITY(0 | (1), min(0 | (1), _GLF_IDENTITY(0 | (1), ~ (~ (0 | (1))))))) | (0 | (1)))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 | (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 | (1))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(0 | (1), (_GLF_IDENTITY(0 | (1), min(0 | (1), _GLF_IDENTITY(0 | (1), ~ (~ (0 | (1))))))) | (0 | (1)))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 | (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 | (1)))))))))) / 1)), gl_WorkGroupSize.x);
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), (bool(bvec4(_GLF_DEAD(false), false, true, true))) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! ((false))))), bool(bvec2(! (_GLF_IDENTITY((false), ! (! ((false))))), true))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u)).x, 1.0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))) && true), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false), true, false)))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false), true, false)))))), true, true, true))))) || (false))))), ! (! ((! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false), true, false)))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false), true, false)))))), true, true, true))))) || (false))))))))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_base = _GLF_struct_replacement_16.workgroup_size * _GLF_IDENTITY(_GLF_struct_replacement_17.workgroup_id, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_struct_replacement_17.workgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_17.workgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u, 0u)), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, (0u) << 0u), 0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(0u, 0u))))), 0u)), 0u | (uint(uvec4(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u, 0u))))) << 0u)) | (_GLF_struct_replacement_17.workgroup_id))) >> 0u) : _GLF_FUZZED(subgroup_size)), ~ (_GLF_IDENTITY(~ ((true ? _GLF_IDENTITY(_GLF_struct_replacement_17.workgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_17.workgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u, 0u)), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u, 0u)), 0u | (uint(uvec4(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u, 0u))))) << 0u)) | (_GLF_struct_replacement_17.workgroup_id))) >> 0u) : _GLF_FUZZED(subgroup_size))), 0u | (_GLF_IDENTITY(~ ((true ? _GLF_IDENTITY(_GLF_struct_replacement_17.workgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_17.workgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u, 0u)), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u, 0u)), 0u | (uint(uvec4(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u, 0u))))) << 0u)) | (_GLF_struct_replacement_17.workgroup_id))) >> 0u) : _GLF_FUZZED(subgroup_size))), uint(uint(~ ((true ? _GLF_IDENTITY(_GLF_struct_replacement_17.workgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_17.workgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u, 0u)), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u, 0u)), 0u | (uint(uvec4(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u, 0u))))) << 0u)) | (_GLF_struct_replacement_17.workgroup_id))) >> 0u) : _GLF_FUZZED(subgroup_size)))))))))));
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(max((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u)) | (workgroup_base))) << 0u)), (workgroup_base)), (true ? max((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, clamp((workgroup_base) + 0u, (workgroup_base) + 0u, (workgroup_base) + 0u)))) | (workgroup_base))) << 0u)), (workgroup_base)) : _GLF_FUZZED(subgroup_size)))) / 1u)), max((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(max((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u)) | (workgroup_base))) << 0u)), (workgroup_base)), (true ? max((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, clamp((workgroup_base) + 0u, (workgroup_base) + 0u, (workgroup_base) + 0u)))) | (workgroup_base))) << 0u)), (workgroup_base)) : _GLF_FUZZED(subgroup_size)))) / 1u)), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(max((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u)) | (workgroup_base))) << 0u)), (workgroup_base)), (true ? max((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, clamp((workgroup_base) + 0u, (workgroup_base) + 0u, (workgroup_base) + 0u)))) | (workgroup_base))) << 0u)), (workgroup_base)) : _GLF_FUZZED(subgroup_size)))) / 1u)))), ~ _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(max((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u)) | (workgroup_base))) << 0u)), (workgroup_base)), (true ? max((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, clamp((workgroup_base) + 0u, (workgroup_base) + 0u, (workgroup_base) + 0u)))) | (workgroup_base))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, clamp((workgroup_base) + 0u, (workgroup_base) + 0u, (workgroup_base) + 0u)))) | (workgroup_base))), uint(uvec4((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, clamp((workgroup_base) + 0u, (workgroup_base) + 0u, (workgroup_base) + 0u)))) | (workgroup_base))), 0u, 0u, 1u))))) << 0u)), (workgroup_base)) : _GLF_FUZZED(subgroup_size)))), clamp(_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(max((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u)) | (workgroup_base))) << 0u)), (workgroup_base)), (true ? max((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, clamp((workgroup_base) + 0u, (workgroup_base) + 0u, (workgroup_base) + 0u)))) | (workgroup_base))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, clamp((workgroup_base) + 0u, (workgroup_base) + 0u, (workgroup_base) + 0u)))) | (workgroup_base))), uint(uvec4((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, clamp((workgroup_base) + 0u, (workgroup_base) + 0u, (workgroup_base) + 0u)))) | (workgroup_base))), 0u, 0u, 1u))))) << 0u)), (workgroup_base)) : _GLF_FUZZED(subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(max((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u)) | (workgroup_base))) << 0u)), (workgroup_base)), (true ? max((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, clamp((workgroup_base) + 0u, (workgroup_base) + 0u, (workgroup_base) + 0u)))) | (workgroup_base))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, clamp((workgroup_base) + 0u, (workgroup_base) + 0u, (workgroup_base) + 0u)))) | (workgroup_base))), uint(uvec4((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, clamp((workgroup_base) + 0u, (workgroup_base) + 0u, (workgroup_base) + 0u)))) | (workgroup_base))), 0u, 0u, 1u))))) << 0u)), (workgroup_base)) : _GLF_FUZZED(subgroup_size)))), uint(uint(_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(max((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u)) | (workgroup_base))) << 0u)), (workgroup_base)), (true ? max((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, clamp((workgroup_base) + 0u, (workgroup_base) + 0u, (workgroup_base) + 0u)))) | (workgroup_base))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, clamp((workgroup_base) + 0u, (workgroup_base) + 0u, (workgroup_base) + 0u)))) | (workgroup_base))), uint(uvec4((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, clamp((workgroup_base) + 0u, (workgroup_base) + 0u, (workgroup_base) + 0u)))) | (workgroup_base))), 0u, 0u, 1u))))) << 0u)), (workgroup_base)) : _GLF_FUZZED(subgroup_size))))))), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(max((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u)) | (workgroup_base))) << 0u)), (workgroup_base)), (true ? max((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, clamp((workgroup_base) + 0u, (workgroup_base) + 0u, (workgroup_base) + 0u)))) | (workgroup_base))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, clamp((workgroup_base) + 0u, (workgroup_base) + 0u, (workgroup_base) + 0u)))) | (workgroup_base))), uint(uvec4((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, clamp((workgroup_base) + 0u, (workgroup_base) + 0u, (workgroup_base) + 0u)))) | (workgroup_base))), 0u, 0u, 1u))))) << 0u)), (workgroup_base)) : _GLF_FUZZED(subgroup_size)))), ~ (~ (_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(max((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u)) | (workgroup_base))) << 0u)), (workgroup_base)), (true ? max((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, clamp((workgroup_base) + 0u, (workgroup_base) + 0u, (workgroup_base) + 0u)))) | (workgroup_base))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, clamp((workgroup_base) + 0u, (workgroup_base) + 0u, (workgroup_base) + 0u)))) | (workgroup_base))), uint(uvec4((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, clamp((workgroup_base) + 0u, (workgroup_base) + 0u, (workgroup_base) + 0u)))) | (workgroup_base))), 0u, 0u, 1u))))) << 0u)), (workgroup_base)) : _GLF_FUZZED(subgroup_size))))))))) / 1u)))), ((~ (~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(max((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u)) | (workgroup_base))) << 0u)), (workgroup_base)), (true ? max((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, clamp((workgroup_base) + 0u, (workgroup_base) + 0u, (workgroup_base) + 0u)))) | (workgroup_base))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, clamp((workgroup_base) + 0u, (workgroup_base) + 0u, (workgroup_base) + 0u)))) | (workgroup_base))), uint(uvec4((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, clamp((workgroup_base) + 0u, (workgroup_base) + 0u, (workgroup_base) + 0u)))) | (workgroup_base))), 0u, 0u, 1u))))) << 0u)), (workgroup_base)) : _GLF_FUZZED(subgroup_size)))), clamp(_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(max((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u)) | (workgroup_base))) << 0u)), (workgroup_base)), (true ? max((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, clamp((workgroup_base) + 0u, (workgroup_base) + 0u, (workgroup_base) + 0u)))) | (workgroup_base))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, clamp((workgroup_base) + 0u, (workgroup_base) + 0u, (workgroup_base) + 0u)))) | (workgroup_base))), uint(uvec4((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, clamp((workgroup_base) + 0u, (workgroup_base) + 0u, (workgroup_base) + 0u)))) | (workgroup_base))), 0u, 0u, 1u))))) << 0u)), (workgroup_base)) : _GLF_FUZZED(subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(max((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u)) | (workgroup_base))) << 0u)), (workgroup_base)), (true ? max((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, clamp((workgroup_base) + 0u, (workgroup_base) + 0u, (workgroup_base) + 0u)))) | (workgroup_base))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, clamp((workgroup_base) + 0u, (workgroup_base) + 0u, (workgroup_base) + 0u)))) | (workgroup_base))), uint(uvec4((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, clamp((workgroup_base) + 0u, (workgroup_base) + 0u, (workgroup_base) + 0u)))) | (workgroup_base))), 0u, 0u, 1u))))) << 0u)), (workgroup_base)) : _GLF_FUZZED(subgroup_size)))), uint(uint(_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(max((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u)) | (workgroup_base))) << 0u)), (workgroup_base)), (true ? max((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, clamp((workgroup_base) + 0u, (workgroup_base) + 0u, (workgroup_base) + 0u)))) | (workgroup_base))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, clamp((workgroup_base) + 0u, (workgroup_base) + 0u, (workgroup_base) + 0u)))) | (workgroup_base))), uint(uvec4((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, clamp((workgroup_base) + 0u, (workgroup_base) + 0u, (workgroup_base) + 0u)))) | (workgroup_base))), 0u, 0u, 1u))))) << 0u)), (workgroup_base)) : _GLF_FUZZED(subgroup_size))))))), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(max((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u)) | (workgroup_base))) << 0u)), (workgroup_base)), (true ? max((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, clamp((workgroup_base) + 0u, (workgroup_base) + 0u, (workgroup_base) + 0u)))) | (workgroup_base))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, clamp((workgroup_base) + 0u, (workgroup_base) + 0u, (workgroup_base) + 0u)))) | (workgroup_base))), uint(uvec4((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, clamp((workgroup_base) + 0u, (workgroup_base) + 0u, (workgroup_base) + 0u)))) | (workgroup_base))), 0u, 0u, 1u))))) << 0u)), (workgroup_base)) : _GLF_FUZZED(subgroup_size)))), ~ (~ (_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(max((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u)) | (workgroup_base))) << 0u)), (workgroup_base)), (true ? max((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, clamp((workgroup_base) + 0u, (workgroup_base) + 0u, (workgroup_base) + 0u)))) | (workgroup_base))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, clamp((workgroup_base) + 0u, (workgroup_base) + 0u, (workgroup_base) + 0u)))) | (workgroup_base))), uint(uvec4((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, clamp((workgroup_base) + 0u, (workgroup_base) + 0u, (workgroup_base) + 0u)))) | (workgroup_base))), 0u, 0u, 1u))))) << 0u)), (workgroup_base)) : _GLF_FUZZED(subgroup_size))))))))) / 1u))))) ^ 0u)))) + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_0.subgroup_local_id)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_0.subgroup_local_id)), 0u, 1u, 1u), max(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) - 0u)) : _GLF_struct_replacement_0.subgroup_local_id)), 0u, 1u, 1u), uvec4(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_0.subgroup_local_id)), 0u, 1u, 1u)))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_0.subgroup_local_id)), 0u, 1u, 1u), max(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, num_workgroup))) : _GLF_struct_replacement_0.subgroup_local_id)), 0u, 1u, 1u), uvec4(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_0.subgroup_local_id)), 0u, 1u, 1u))))) << 0u)), (_GLF_struct_replacement_0.subgroup_local_id) - 0u);
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), (_GLF_struct_replacement_0.subgroup_local_id + 1) - 0u)) % subgroup_size);
 uint read = 0;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), min(uint(1), _GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), min(uint(1), uint(1))), uint(1))))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED((-4.2 + 8.5)), (injectionSwitch)[1]), (vec2(_GLF_FUZZED((-4.2 + 8.5)), (injectionSwitch)[1])) * mat2(1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(float(false))), bvec2(true, false))).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED((-4.2 + 8.5)), (injectionSwitch)[1]), (vec2(_GLF_FUZZED((-4.2 + 8.5)), (injectionSwitch)[1])) * mat2(1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(float(false))), bvec2(true, false))).y, mix(float(_GLF_FUZZED(-3.7)), float(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED((-4.2 + 8.5)), (injectionSwitch)[1]), (vec2(_GLF_FUZZED((-4.2 + 8.5)), (injectionSwitch)[1])) * mat2(1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(float(false))), bvec2(true, false))).y), bool(true))), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED((-4.2 + 8.5)), (injectionSwitch)[1]), (vec2(_GLF_FUZZED((-4.2 + 8.5)), (injectionSwitch)[1])) * mat2(1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(float(false))), bvec2(true, false))).y)), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) + 0.0)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_0.subgroup_local_id % 2), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_0.subgroup_local_id % 2), _GLF_IDENTITY(min(_GLF_IDENTITY((_GLF_struct_replacement_0.subgroup_local_id % 2), ~ (~ ((_GLF_struct_replacement_0.subgroup_local_id % 2)))), (_GLF_struct_replacement_0.subgroup_local_id % 2)), uint(uint(min(_GLF_IDENTITY((_GLF_struct_replacement_0.subgroup_local_id % 2), ~ (~ ((_GLF_struct_replacement_0.subgroup_local_id % 2)))), (_GLF_struct_replacement_0.subgroup_local_id % 2)))))), ((_GLF_struct_replacement_0.subgroup_local_id % 2)) >> 0u))) == 0, true && ((_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, min(_GLF_struct_replacement_0.subgroup_local_id, _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, max(_GLF_struct_replacement_0.subgroup_local_id, _GLF_struct_replacement_0.subgroup_local_id)))) % 2) == 0)))
  {
   subgroupAll(false);
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   read = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)), 0u ^ (virtual_gid))], 4, 64, _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | _GLF_IDENTITY((2), min((2), (2))))) + _GLF_IDENTITY(0, (false ? _GLF_FUZZED(86408) : 0))));
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), true && (bool((false))))), (bool(_GLF_IDENTITY(bool((false)), true && (bool((false)))))) && true)), true && (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), true && (bool((false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bool((false)), true && (bool((false))))))), (bool(_GLF_IDENTITY(bool((false)), true && (bool((false)))))) && true)))), _GLF_IDENTITY((false || (false)), false || (_GLF_IDENTITY((false || (false)), ! (! ((false || (false))))))) || false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 if(_GLF_DEAD(false))
  return;
 subgroupBarrier();
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)], read, _GLF_IDENTITY(4, min(4, 4)), 64, 4);
}
