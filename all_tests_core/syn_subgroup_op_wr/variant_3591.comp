#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_2 {
 bvec3 _f0;
 uint _f1;
 int _f2;
 uvec3 _f3;
 uint _f4;
 mat2x3 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_3 {
 int _f0;
 _GLF_struct_2 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
 bvec4 _f1;
 mat4x2 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 uint subgroup_id;
} ;

struct _GLF_struct_4 {
 _GLF_struct_1 _f0;
 _GLF_struct_3 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), ! _GLF_IDENTITY((! (! (_GLF_DEAD(false)))), true && ((! (! (_GLF_DEAD(false)))))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), true, false))), ! (! (! (_GLF_DEAD(false)))))))), _GLF_IDENTITY((bool(bool((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), ! (! (! (_GLF_DEAD(false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || ((bool(bool((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), _GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), bool(bvec4(! (! (! (_GLF_DEAD(false)))), false, false, false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (! (! (_GLF_DEAD(false)))) && true)))))) && true), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), ! _GLF_IDENTITY((! (! (_GLF_DEAD(false)))), true && ((! (! (_GLF_DEAD(false)))))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), true, false))), ! (! (! (_GLF_DEAD(false)))))))), _GLF_IDENTITY((bool(bool((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), ! (! (! (_GLF_DEAD(false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || ((bool(bool((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), _GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), bool(bvec4(! (! (! (_GLF_DEAD(false)))), false, false, false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), ! _GLF_IDENTITY((! (! (_GLF_DEAD(false)))), true && ((! (! (_GLF_DEAD(false)))))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), true, false))), ! (! (! (_GLF_DEAD(false)))))))), _GLF_IDENTITY((bool(bool((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), ! (! (! (_GLF_DEAD(false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || ((bool(bool((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), _GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), bool(bvec4(! (! (! (_GLF_DEAD(false)))), false, false, false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (true && _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), ! _GLF_IDENTITY((! (! (_GLF_DEAD(false)))), true && ((! (! (_GLF_DEAD(false)))))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), true, false))), ! (! (! (_GLF_DEAD(false)))))))), _GLF_IDENTITY((bool(bool((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), ! (! (! (_GLF_DEAD(false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || ((bool(bool((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), _GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), bool(bvec4(! (! (! (_GLF_DEAD(false)))), false, false, false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false || (bool(bool(_GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), ! _GLF_IDENTITY((! (! (_GLF_DEAD(false)))), true && ((! (! (_GLF_DEAD(false)))))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), true, false))), ! (! (! (_GLF_DEAD(false)))))))), _GLF_IDENTITY((bool(bool((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), ! (! (! (_GLF_DEAD(false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || ((bool(bool((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), _GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), bool(bvec4(! (! (! (_GLF_DEAD(false)))), false, false, false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (true && _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), ! _GLF_IDENTITY((! (! (_GLF_DEAD(false)))), true && ((! (! (_GLF_DEAD(false)))))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), true, false))), ! (! (! (_GLF_DEAD(false)))))))), _GLF_IDENTITY((bool(bool((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), ! (! (! (_GLF_DEAD(false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || ((bool(bool((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), _GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), bool(bvec4(! (! (! (_GLF_DEAD(false)))), false, false, false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))), (! (! (_GLF_DEAD(false)))) && true)))))) && true))))
  barrier();
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_1(_GLF_struct_0(bvec4(true), bvec4(_GLF_IDENTITY(true, (true) || false)), mat4x2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1), (~ (1)) | 0)), (~ (_GLF_IDENTITY(~ (1), (~ (1)) | 0))) | (~ (_GLF_IDENTITY(~ (1), (~ (1)) | 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(~ (1), 1, 1), clamp(ivec3(~ (1), 1, 1), _GLF_IDENTITY(ivec3(~ (1), 1, 1), ivec3(0, 0, 0) + (ivec3(~ (1), 1, 1))), ivec3(~ (1), 1, 1)))), max(int(_GLF_IDENTITY(ivec3(~ (1), 1, 1), clamp(ivec3(~ (1), 1, 1), _GLF_IDENTITY(ivec3(~ (1), 1, 1), ivec3(0, 0, 0) + (ivec3(~ (1), 1, 1))), ivec3(~ (1), 1, 1)))), int(_GLF_IDENTITY(ivec3(~ (1), 1, 1), clamp(ivec3(~ (1), 1, 1), _GLF_IDENTITY(ivec3(~ (1), 1, 1), ivec3(0, 0, 0) + (ivec3(~ (1), 1, 1))), ivec3(~ (1), 1, 1))))))))), int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(5.1)), float(0.0), bool(true))))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.0)), float(0.0), bool(true)))) - 0.0))), injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, ~ (~ (1))), 1, 0)), int(int(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, ~ (~ (1))), 1, 0), (ivec3(_GLF_IDENTITY(1, ~ (~ (1))), 1, 0)) | (ivec3(_GLF_IDENTITY(1, ~ (~ (1))), 1, 0))))))))))) >> int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))))), gl_SubgroupID), _GLF_struct_3(1, _GLF_struct_2(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), 1u, _GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, 0), (false ? _GLF_FUZZED(ivec3(-71128, -76646, 61339)) : _GLF_IDENTITY(ivec3(1, 0, 0), (ivec3(0, 0, 0) & ivec3(-29568, 21250, -26040)) | (_GLF_IDENTITY(ivec3(1, 0, 0), (ivec3(1, 0, 0)) >> ivec3(0, 0, 0)))))))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, 0), (false ? _GLF_FUZZED(ivec3(-71128, -76646, 61339)) : ivec3(1, 0, 0))))), 1, (0 >> _GLF_IDENTITY(int(0), int(0))))), (int(ivec3(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, 0), (false ? _GLF_FUZZED(ivec3(-71128, -76646, 61339)) : ivec3(1, 0, 0))))), 1, (0 >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, min(0, 0)))))))) | 0)), _GLF_IDENTITY(uvec3(1u), clamp(_GLF_IDENTITY(uvec3(1u), ~ (_GLF_IDENTITY(~ (uvec3(1u)), (~ (uvec3(1u))) * uvec3(1u, 1u, 1u)))), uvec3(1u), _GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY((uvec3(1u)) / uvec3(1u, 1u, 1u), (_GLF_IDENTITY((uvec3(1u)) / uvec3(1u, 1u, 1u), ((uvec3(1u)) / uvec3(1u, 1u, 1u)) | ((uvec3(1u)) / uvec3(1u, 1u, 1u)))) - uvec3(0u, 0u, 0u))))), 1u, mat2x3(1.0), mat4x2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), max(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, 0 + (1))) + (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - int(_GLF_ZERO(0.0, injectionSwitch.x))), int(_GLF_IDENTITY(6, (6) | (6)))))), _GLF_IDENTITY(1, 0 + (1))))), max(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), max(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, 0 + (1))) + (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - int(_GLF_ZERO(0.0, injectionSwitch.x))), int(_GLF_IDENTITY(6, (6) | (6)))))), _GLF_IDENTITY(1, 0 + (1))))), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), max(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, 0 + (1))) + (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - int(_GLF_ZERO(0.0, injectionSwitch.x))), int(_GLF_IDENTITY(6, (6) | (6)))))), _GLF_IDENTITY(1, 0 + (1))))))), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0, 0)), int(ivec2(int(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0, 0)), 1)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, 0 + (1))) + _GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) * 1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - int(_GLF_ZERO(0.0, injectionSwitch.x))), int(6))), (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(4))))) ^ (_GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) * 1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - int(_GLF_ZERO(0.0, injectionSwitch.x))), int(6))), ((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) * 1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - int(_GLF_ZERO(0.0, injectionSwitch.x))), int(6)))) | 0)))), _GLF_IDENTITY(1, 0 + (1))))), clamp(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), max(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, 0 + (1))) + (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0)))), int(6)))), _GLF_IDENTITY(1, 0 + (1))))), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), max(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, 0 + (1))) + (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - int(_GLF_ZERO(0.0, injectionSwitch.x))), int(6)))), _GLF_IDENTITY(1, 0 + (1))))), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), max(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, 0 + (1))) + (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - int(_GLF_ZERO(0.0, injectionSwitch.x))), int(6)))), _GLF_IDENTITY(1, 0 + (1)))))))) ^ ivec2(0, 0))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.2)), vec2(_GLF_FUZZED(-1.3), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.2)), vec2(_GLF_FUZZED(-1.3), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).y))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_4._f0.subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, round(_GLF_IDENTITY(length(normalize(exp(vec2(0.0, 0.0)))), (true ? length(normalize(exp(vec2(0.0, 0.0)))) : _GLF_FUZZED(-7.4)))), _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), clamp(round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), mat3x2(mat3(mat3x2(injectionSwitch, round(length(normalize(exp(vec2(0.0, 0.0))))), _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), clamp(round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))))).y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7.9)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)))), bool(true))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(float(_GLF_FUZZED(vec3(167.367, vec2(5.7, 6.8)).g)), min(_GLF_IDENTITY(float(_GLF_FUZZED(vec3(167.367, vec2(5.7, 6.8)).g)), mix(float(_GLF_FUZZED(7.5)), float(float(_GLF_FUZZED(vec3(167.367, vec2(5.7, 6.8)).g))), bool(true))), float(_GLF_FUZZED(vec3(167.367, vec2(5.7, 6.8)).g)))), bool(false))), float(mat3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(float(_GLF_FUZZED(vec3(167.367, vec2(5.7, 6.8)).g)), min(_GLF_IDENTITY(float(_GLF_FUZZED(vec3(167.367, vec2(5.7, 6.8)).g)), mix(float(_GLF_FUZZED(7.5)), float(float(_GLF_FUZZED(vec3(167.367, vec2(5.7, 6.8)).g))), bool(true))), float(_GLF_FUZZED(vec3(167.367, vec2(5.7, 6.8)).g)))), bool(false))), 0.0, 0.0, 0.0, sqrt(0.0), tan(0.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[1]), float(_GLF_FUZZED(-579.843)), bool(false)), float(vec2(_GLF_IDENTITY(mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-579.843)), bool(false)), float(mat4x3(mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-579.843)), bool(false)), exp(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, sqrt(1.0), 1.0))), sqrt(1.0)))))))) + vec2(0.0, 0.0)).y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((3.7))), vec2(_GLF_FUZZED(82.46), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))) * _GLF_IDENTITY(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), vec2(mat3x2(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), 1.0, 0.0, 0.0, 1.0))))[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5.5) : injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED((-797.850 * injectionSwitch)) : vec2(1.0, 1.0))) * (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))))).y) / 1.0)), max(min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], float(mat2x4(injectionSwitch[0], _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3.4) : 1.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))))), injectionSwitch[1])).y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y)))))), min(float(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y) / 1.0)), max(min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0)))[0], injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], float(mat2x4(injectionSwitch[0], 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))))), injectionSwitch[1])).y, injectionSwitch.y), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y) / 1.0)), max(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) >> 0))))], injectionSwitch[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0, 0))], _GLF_IDENTITY(injectionSwitch[0], float(mat2x4(injectionSwitch[0], 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(6639.5698))))), 0.0, 0.0))))), injectionSwitch[1])).y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y))))), (_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y) / 1.0)), max(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) >> 0))))], injectionSwitch[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0, 0))], _GLF_IDENTITY(injectionSwitch[0], float(mat2x4(injectionSwitch[0], 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(6639.5698))))), 0.0, 0.0))))), injectionSwitch[1])).y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y))))), float(vec4(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y) / 1.0)), max(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) >> 0))))], injectionSwitch[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0, 0))], _GLF_IDENTITY(injectionSwitch[0], float(mat2x4(injectionSwitch[0], 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(6639.5698))))), 0.0, 0.0))))), injectionSwitch[1])).y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y))))), 0.0, 0.0, tan(0.0))))) - 0.0))))), mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(vec3(_GLF_IDENTITY(167.367, _GLF_IDENTITY(float(mat2x3(167.367, 1.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), abs(1.0), 1.0)), (float(mat2x3(167.367, 1.0, 0.0, 0.0, abs(1.0), 1.0))) + length(vec3(0.0, 0.0, 0.0)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(5.7, max(_GLF_IDENTITY(5.7, min(5.7, 5.7)), 5.7)), 6.8), mix(vec2(_GLF_FUZZED(vec4(-4.2, -6366.1352, -51.40, -58.90).w), _GLF_FUZZED(-9296.0851)), vec2((vec2(_GLF_IDENTITY(5.7, max(_GLF_IDENTITY(5.7, min(5.7, 5.7)), 5.7)), 6.8))[0], (vec2(_GLF_IDENTITY(5.7, max(_GLF_IDENTITY(5.7, min(5.7, 5.7)), 5.7)), 6.8))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))).g)), bool(false))), _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mat2(1.0) * (injectionSwitch)).y))), float(_GLF_FUZZED(vec3(167.367, vec2(5.7, 6.8)).g)), bool(false)), (false ? _GLF_FUZZED(327.050) : _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).y))), float(_GLF_FUZZED(vec3(167.367, vec2(5.7, 6.8)).g)), bool(false)), (mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-19.96, 284.985), (vec2(-19.96, 284.985)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))).y))), float(_GLF_FUZZED(vec3(167.367, vec2(5.7, 6.8)).g)), bool(false))) * 1.0)))), mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(269.272, -28.51, -9.0, -9756.6840))))) * mat2(1.0)) * (injectionSwitch)).y))), float(_GLF_IDENTITY(_GLF_FUZZED(vec3(167.367, vec2(5.7, 6.8)).g), min(_GLF_FUZZED(vec3(167.367, vec2(5.7, 6.8)).g), _GLF_FUZZED(vec3(167.367, vec2(5.7, 6.8)).g)))), bool(false)))), float(_GLF_FUZZED(-47.94)), bool(false))), true, false)), _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(vec3(167.367, vec2(5.7, 6.8)).g)), bool(false))), true, false))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(vec3(167.367, vec2(5.7, 6.8)).g)), bool(false))), true, false))) || false)), ! (! ((bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), max(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4910.8885, -8650.3184)))).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))))), float(_GLF_FUZZED(vec3(167.367, _GLF_IDENTITY(vec2(5.7, 6.8), min(_GLF_IDENTITY(vec2(5.7, 6.8), (vec2(5.7, 6.8)) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(5.7, 6.8), (vec2(5.7, 6.8)) - vec2(0.0, 0.0))))).g)), bool(false))), _GLF_IDENTITY(true, ! (! (true))), false))) || false))))), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), true)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), true))))) || false)) || (injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), true)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), true))))) || false)) || (injectionSwitch.x > injectionSwitch.y), false, false, true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && (_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false))))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true)))), false), bvec2(bvec2(bvec2((false), false)))))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true)))), false), bvec2(bvec2(bvec2((false), false)))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true)))), false), bvec2(bvec2(bvec2((false), false)))))), ((bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true)))), false), bvec2(bvec2(bvec2((false), false))))))) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), _GLF_IDENTITY(false, (false) && true)), bvec2(bvec2(bvec2((false), false))))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false)))))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false)))))), ! (! ((bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false)))))))))) && true))))), _GLF_IDENTITY(! (! (true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false))))), false || (bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false)))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false))))), false || (bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false)))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false))))), false || (bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false)))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false))))), false || (bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false)))))))), true), false, true)))))))))))), true && (! (! (true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false))))), false || (bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false)))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false)))))), bool(_GLF_IDENTITY(bvec2(! (bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false)))))), true), bvec2(bvec3(bvec2(! (bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false)))))), true), true)))))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false))))), false || (bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false)))))))), true), false, true)))))))))))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_4._f0.subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_4._f0.subgroup_id * subgroup_size, max(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_4._f0.subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_4._f0.subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_4._f0.subgroup_id * subgroup_size, (_GLF_struct_replacement_4._f0.subgroup_id * subgroup_size) | (_GLF_struct_replacement_4._f0.subgroup_id * subgroup_size)))))) * 1u), _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_4._f0.subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_4._f0.subgroup_id * subgroup_size, (workgroup_base + _GLF_struct_replacement_4._f0.subgroup_id * subgroup_size) | (workgroup_base + _GLF_struct_replacement_4._f0.subgroup_id * subgroup_size))) | (workgroup_base + _GLF_struct_replacement_4._f0.subgroup_id * subgroup_size))))))), uint(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_struct_replacement_4._f0.subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(1u, uint(uvec4(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u, 1u, 0u)))), uvec3(0u, 0u, 0u) | (uvec3(workgroup_base + _GLF_struct_replacement_4._f0.subgroup_id * subgroup_size, 1u, 1u))))) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, 1u, 1u), uvec4(0u, _GLF_IDENTITY(0u, (0u) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), uint(5u)), 1u * (1u << _GLF_IDENTITY(uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u)))))), 0u, 0u) + (uvec4(subgroup_local_id, 1u, _GLF_IDENTITY(1u, (1u) << (150910u & 0u)), 1u))))) + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), _GLF_IDENTITY(min((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) * 1)) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((subgroup_local_id + 1) % subgroup_size)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(min(((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(clamp(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))))), _GLF_IDENTITY(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), (true ? min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0)))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)) : _GLF_FUZZED(workgroup_id)))), (_GLF_IDENTITY(clamp(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))))), _GLF_IDENTITY(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), (true ? min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0)))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)) : _GLF_FUZZED(workgroup_id)))), ~ (~ (clamp(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))))), _GLF_IDENTITY(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), (true ? min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0)))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)) : _GLF_FUZZED(workgroup_id)))))))) ^ 0u)), ~ (~ (min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))))), _GLF_IDENTITY((_GLF_IDENTITY(0u ^ 0u, _GLF_IDENTITY(0u + (0u ^ _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 1u), (uvec2(0u, 1u)) | (uvec2(0u, 1u)))))))), _GLF_IDENTITY((_GLF_IDENTITY(0u + (0u ^ _GLF_IDENTITY(0u, (0u) | (0u))), uint(uvec3(_GLF_IDENTITY(0u + (0u ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) >> 0u))), (0u) | (0u))), (0u + (0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | 0u), 0u))) | (0u)))) << 0u), 1u, 1u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(0u + (0u ^ _GLF_IDENTITY(0u, (0u) | (0u))), uint(uvec3(_GLF_IDENTITY(0u + (0u ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) >> 0u))), (0u) | (0u))), (0u + (0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | 0u), 0u))) | (0u)))) << 0u), 1u, 1u)))))) << (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))), ~ (~ ((_GLF_IDENTITY(0u ^ 0u, _GLF_IDENTITY(0u + (0u ^ _GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(0u + (0u ^ _GLF_IDENTITY(0u, (0u) | (0u))), uint(uvec3(_GLF_IDENTITY(0u + (0u ^ _GLF_IDENTITY(0u, (0u) | (0u))), (0u + (0u ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (true ? _GLF_IDENTITY(0u, (0u) | (0u)) : _GLF_FUZZED(workgroup_base))))) << 0u), 1u, 1u)))) << (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), 0u | (_GLF_IDENTITY(uint(5u), uint(5u))))))))))), (0u ^ _GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) ? _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, (1u) + 0u)) << 0u) : _GLF_FUZZED(uvec3(157135u, 144069u, 24336u)[1])))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) ? _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, (1u) + 0u)) << 0u) : _GLF_FUZZED(uvec3(157135u, 144069u, 24336u)[1])))), max((_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) ? _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, (1u) + 0u)) << 0u) : _GLF_FUZZED(uvec3(157135u, 144069u, 24336u)[1])))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) ? _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, (1u) + 0u)) << 0u) : _GLF_FUZZED(uvec3(157135u, 144069u, 24336u)[1])))), ((_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) ? _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, (1u) + 0u)) << 0u) : _GLF_FUZZED(uvec3(157135u, 144069u, 24336u)[1]))))) - 0u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) ? _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, (1u) + 0u)) << 0u) : _GLF_FUZZED(uvec3(157135u, 144069u, 24336u)[1])))), min((_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) ? _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, (1u) + 0u)) << 0u) : _GLF_FUZZED(uvec3(157135u, 144069u, 24336u)[1])))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) ? _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, (1u) + 0u)) << 0u) : _GLF_FUZZED(uvec3(157135u, 144069u, 24336u)[1])))), (false ? _GLF_FUZZED(184206u) : (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) ? _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, (1u) + 0u)) << 0u) : _GLF_FUZZED(uvec3(157135u, 144069u, 24336u)[1]))))))))))))), ~ (~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) >> 0u)), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) >> 0u))) - 0u) % _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)), ((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y))))))) + 1) % subgroup_size)), clamp(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (0u & 66703u) | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) / 1u)))), ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (0u & 66703u) | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) / 1u))))) | (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (0u & 66703u) | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) / 1u)))), ~ (~ ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (0u & 66703u) | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) / 1u)))))))))), _GLF_IDENTITY(min(((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))), 0 ^ ((_GLF_IDENTITY(1, min(1, 1))))) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), min(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), (true ? uint(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) : _GLF_FUZZED(workgroup_base)))), (true ? uint(_GLF_IDENTITY(uint(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), (true ? uint(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) : _GLF_FUZZED(workgroup_base)))) : _GLF_FUZZED(num_workgroup)))))) : _GLF_FUZZED(workgroup_id), uint(uvec2(_GLF_IDENTITY(true ? _GLF_IDENTITY(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), min(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), (true ? uint(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) : _GLF_FUZZED(workgroup_base)))), (true ? uint(_GLF_IDENTITY(uint(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), (true ? uint(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) : _GLF_FUZZED(workgroup_base)))) : _GLF_FUZZED(num_workgroup)))))) : _GLF_FUZZED(workgroup_id), clamp(_GLF_IDENTITY(true ? _GLF_IDENTITY(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), min(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), (true ? uint(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) : _GLF_FUZZED(workgroup_base)))), (true ? uint(_GLF_IDENTITY(uint(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), (true ? uint(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) : _GLF_FUZZED(workgroup_base)))) : _GLF_FUZZED(num_workgroup)))))) : _GLF_FUZZED(workgroup_id), clamp(true ? _GLF_IDENTITY(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), min(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), (true ? uint(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) : _GLF_FUZZED(workgroup_base)))), (true ? uint(_GLF_IDENTITY(uint(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), (true ? uint(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) : _GLF_FUZZED(workgroup_base)))) : _GLF_FUZZED(num_workgroup)))))) : _GLF_FUZZED(workgroup_id), true ? _GLF_IDENTITY(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), min(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), (true ? uint(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) : _GLF_FUZZED(workgroup_base)))), (true ? uint(_GLF_IDENTITY(uint(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), (true ? uint(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) : _GLF_FUZZED(workgroup_base)))) : _GLF_FUZZED(num_workgroup)))))) : _GLF_FUZZED(workgroup_id), true ? _GLF_IDENTITY(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), min(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), (true ? uint(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) : _GLF_FUZZED(workgroup_base)))), (true ? uint(_GLF_IDENTITY(uint(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), (true ? uint(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) : _GLF_FUZZED(workgroup_base)))) : _GLF_FUZZED(num_workgroup)))))) : _GLF_FUZZED(workgroup_id))), true ? _GLF_IDENTITY(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), min(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), (true ? uint(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) : _GLF_FUZZED(workgroup_base)))), (true ? uint(_GLF_IDENTITY(uint(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), (true ? uint(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) : _GLF_FUZZED(workgroup_base)))) : _GLF_FUZZED(num_workgroup)))))) : _GLF_FUZZED(workgroup_id), true ? _GLF_IDENTITY(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), min(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), (true ? uint(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) : _GLF_FUZZED(workgroup_base)))), (true ? uint(_GLF_IDENTITY(uint(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), (true ? uint(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) : _GLF_FUZZED(workgroup_base)))) : _GLF_FUZZED(num_workgroup)))))) : _GLF_FUZZED(workgroup_id))), 0u))))))), ~ (~ (min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(min(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), clamp(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), (true ? min(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))) : _GLF_FUZZED(workgroup_id))))), ~ (~ (min(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) / 1u), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u)))))))))), (_GLF_IDENTITY(0u ^ 0u, 0u + (0u ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(0u, (0u) | (0u))) ^ 0u)))), (0u ^ _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) + 0u)))))))))));
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(_GLF_IDENTITY(1, (1) ^ (1 ^ 1)))) + 0u), 4, 64, 4);
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, max(4, 4)), 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), min(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (_GLF_IDENTITY(4, ~ (~ (4)))) | 0), _GLF_IDENTITY(4, _GLF_IDENTITY((4) + 0, 0 + (_GLF_IDENTITY((4) + 0, ((4) + 0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))), 4)))), 4))) * 1), _GLF_IDENTITY(64, 0 ^ _GLF_IDENTITY((64), ((64)) | ((64)))), 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], read, 4, _GLF_IDENTITY(64, (64) << 0), 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), false, true, true)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), false, true, true))) || false))))))) || false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))) || false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (4) / (0 ^ 1)), _GLF_IDENTITY(64, (64) | (64)), 4);
   subgroupAll(true);
  }
 if(_GLF_DEAD(false))
  barrier();
}
