#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))), true && (_GLF_IDENTITY(bool(bvec2(false, false)), ! _GLF_IDENTITY((! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))), ((! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))) && true)))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))), true && (_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))))))) && true))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), bool(bool(bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true)))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.8)), vec2(_GLF_FUZZED(1743.4677), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y, true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.8)), vec2(_GLF_FUZZED(1743.4677), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), (clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.8)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.8)), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.8)))), vec2(_GLF_FUZZED(1743.4677), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))) - vec2(0.0, 0.0))).y, true, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.8)), vec2(_GLF_FUZZED(1743.4677), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), (clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.8)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.8)), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.8)))), vec2(_GLF_FUZZED(1743.4677), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))) - vec2(0.0, 0.0))).y, true, false)), true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.8)), vec2(_GLF_FUZZED(1743.4677), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), (clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.8)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.8)), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.8)))), vec2(_GLF_FUZZED(1743.4677), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))) - vec2(0.0, 0.0))).y, true, false)), true), bvec2(bvec3(bvec2(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.8)), vec2(_GLF_FUZZED(1743.4677), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), (clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.8)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.8)), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.8)))), vec2(_GLF_FUZZED(1743.4677), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))) - vec2(0.0, 0.0))).y, true, false)), true), true))), true)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.8)), vec2(_GLF_FUZZED(1743.4677), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), (clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.8)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.8)), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.8)))), vec2(_GLF_FUZZED(1743.4677), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))) - vec2(0.0, 0.0))).y, true, false)), true), bvec2(bvec3(bvec2(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.8)), vec2(_GLF_FUZZED(1743.4677), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), (clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.8)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.8)), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.8)))), vec2(_GLF_FUZZED(1743.4677), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))) - vec2(0.0, 0.0))).y, true, false)), true), true))), true)), true))))))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch), (max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)) * mat2(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.8)), vec2(_GLF_FUZZED(1743.4677), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y, true, false))), false)))) && true)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat4x3(vec2(1.0, 1.0), 1.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, false))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true), false, true), true)))))))), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))) || _GLF_IDENTITY((false), true && ((false))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(1u * (workgroup_id), (1u * (workgroup_id)) + 0u)), workgroup_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), (true && (false)) && true))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7759.8928)), vec2(_GLF_FUZZED((true ? -2747.4091 : 3.2)), (injectionSwitch)[1]), bvec2(false, true))), min(injectionSwitch, injectionSwitch)))).y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), (injectionSwitch.x > injectionSwitch.y)) || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(workgroup_id)))) / ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))))) + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u | (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (false ? _GLF_FUZZED(workgroup_size) : ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_base)))) << 0u), max(subgroup_size, subgroup_size))))))), ((subgroup_local_id + 1) % subgroup_size))), (workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))) + ((subgroup_local_id + 1) % subgroup_size)) << 0u);
 uint read = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (_GLF_IDENTITY(0, (0) >> 0)) >> 0)), min((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (_GLF_IDENTITY(0, (0) >> 0)) >> 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (_GLF_IDENTITY(0, (0) >> 0)) >> 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), (_GLF_IDENTITY(_GLF_IDENTITY((0), 1 * ((0))), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, int(ivec2(0, int(_GLF_ONE(1.0, injectionSwitch.y))))))), (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, int(ivec2(0, int(_GLF_ONE(1.0, injectionSwitch.y)))))))) / 1))))) / _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), ~ (~ (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), int(int(int(4)))), int(4))), int(4))) >> _GLF_IDENTITY(int(4), int(4))))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)))))), _GLF_IDENTITY(_GLF_IDENTITY((0), min((0), (0))), clamp((0), _GLF_IDENTITY(_GLF_IDENTITY((0), _GLF_IDENTITY(max((0), (0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0), (0)), (_GLF_IDENTITY(_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0), min(_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0), min(_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0), _GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0)))))) | (max((0), (0))))), int(int(_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0), (0)), (_GLF_IDENTITY(max(_GLF_IDENTITY((0), ((0)) * int(_GLF_ONE(1.0, injectionSwitch.y))), (0)), (max((0), (0))) >> 0)) | _GLF_IDENTITY((max((0), (0))), clamp((max((0), (0))), (max((0), (0))), _GLF_IDENTITY((max((0), (0))), ((max((0), (0)))) | 0))))), max(~ (_GLF_IDENTITY(max((0), (0)), (_GLF_IDENTITY(max((0), (0)), (max((0), (_GLF_IDENTITY(0, (0) | 0)))) >> 0)) | (max(_GLF_IDENTITY((0), min((0), (0))), (0))))), ~ (_GLF_IDENTITY(max((0), (0)), (_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0)) | (max((0), (0))))))))))))), max(_GLF_IDENTITY((0), _GLF_IDENTITY(max((0), (0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0), (0)), (_GLF_IDENTITY(_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0), min(_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0), min(_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0), _GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0)))))) | (max((0), (0))))), int(int(_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0), (0)), (_GLF_IDENTITY(max(_GLF_IDENTITY((0), ((0)) * int(_GLF_ONE(1.0, injectionSwitch.y))), (0)), (max((0), (0))) >> 0)) | _GLF_IDENTITY((max((0), (0))), clamp((max((0), (0))), (max((0), (0))), _GLF_IDENTITY((max((0), (0))), ((max((0), (0)))) | 0))))), max(~ (_GLF_IDENTITY(max((0), (0)), (_GLF_IDENTITY(max((0), (0)), (max((0), (_GLF_IDENTITY(0, (0) | 0)))) >> 0)) | (max(_GLF_IDENTITY((0), min((0), (0))), (0))))), ~ (_GLF_IDENTITY(max((0), (0)), (_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0)) | (max((0), (0))))))))))))), _GLF_IDENTITY((0), _GLF_IDENTITY(max((0), (0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0), (0)), (_GLF_IDENTITY(_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0), min(_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0), min(_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0), _GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0)))))) | (max((0), (0))))), int(int(_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0), (0)), (_GLF_IDENTITY(max(_GLF_IDENTITY((0), ((0)) * int(_GLF_ONE(1.0, injectionSwitch.y))), (0)), (max((0), (0))) >> 0)) | _GLF_IDENTITY((max((0), (0))), clamp((max((0), (0))), (max((0), (0))), _GLF_IDENTITY((max((0), (0))), ((max((0), (0)))) | 0))))), max(~ (_GLF_IDENTITY(max((0), (0)), (_GLF_IDENTITY(max((0), (0)), (max((0), (_GLF_IDENTITY(0, (0) | 0)))) >> 0)) | (max(_GLF_IDENTITY((0), min((0), (0))), (0))))), ~ (_GLF_IDENTITY(max((0), (0)), (_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0)) | (max((0), (0))))))))))))))), (0))))) / 1), min(_GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), (_GLF_IDENTITY(_GLF_IDENTITY((0), 1 * ((0))), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, int(ivec2(0, int(_GLF_ONE(1.0, injectionSwitch.y))))))), (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, int(ivec2(0, int(_GLF_ONE(1.0, injectionSwitch.y)))))))) / 1))))) / _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), ~ (~ (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), int(int(int(4)))), int(4))), int(4))) >> _GLF_IDENTITY(int(4), int(4))))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)))))), _GLF_IDENTITY(_GLF_IDENTITY((0), min((0), (0))), clamp((0), _GLF_IDENTITY(_GLF_IDENTITY((0), _GLF_IDENTITY(max((0), (0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0), (0)), (_GLF_IDENTITY(_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0), min(_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0), min(_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0), _GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0)))))) | (max((0), (0))))), int(int(_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0), (0)), (_GLF_IDENTITY(max(_GLF_IDENTITY((0), ((0)) * int(_GLF_ONE(1.0, injectionSwitch.y))), (0)), (max((0), (0))) >> 0)) | _GLF_IDENTITY((max((0), (0))), clamp((max((0), (0))), (max((0), (0))), _GLF_IDENTITY((max((0), (0))), ((max((0), (0)))) | 0))))), max(~ (_GLF_IDENTITY(max((0), (0)), (_GLF_IDENTITY(max((0), (0)), (max((0), (_GLF_IDENTITY(0, (0) | 0)))) >> 0)) | (max(_GLF_IDENTITY((0), min((0), (0))), (0))))), ~ (_GLF_IDENTITY(max((0), (0)), (_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0)) | (max((0), (0))))))))))))), max(_GLF_IDENTITY((0), _GLF_IDENTITY(max((0), (0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0), (0)), (_GLF_IDENTITY(_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0), min(_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0), min(_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0), _GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0)))))) | (max((0), (0))))), int(int(_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0), (0)), (_GLF_IDENTITY(max(_GLF_IDENTITY((0), ((0)) * int(_GLF_ONE(1.0, injectionSwitch.y))), (0)), (max((0), (0))) >> 0)) | _GLF_IDENTITY((max((0), (0))), clamp((max((0), (0))), (max((0), (0))), _GLF_IDENTITY((max((0), (0))), ((max((0), (0)))) | 0))))), max(~ (_GLF_IDENTITY(max((0), (0)), (_GLF_IDENTITY(max((0), (0)), (max((0), (_GLF_IDENTITY(0, (0) | 0)))) >> 0)) | (max(_GLF_IDENTITY((0), min((0), (0))), (0))))), ~ (_GLF_IDENTITY(max((0), (0)), (_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0)) | (max((0), (0))))))))))))), _GLF_IDENTITY((0), _GLF_IDENTITY(max((0), (0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0), (0)), (_GLF_IDENTITY(_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0), min(_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0), min(_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0), _GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0)))))) | (max((0), (0))))), int(int(_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0), (0)), (_GLF_IDENTITY(max(_GLF_IDENTITY((0), ((0)) * int(_GLF_ONE(1.0, injectionSwitch.y))), (0)), (max((0), (0))) >> 0)) | _GLF_IDENTITY((max((0), (0))), clamp((max((0), (0))), (max((0), (0))), _GLF_IDENTITY((max((0), (0))), ((max((0), (0)))) | 0))))), max(~ (_GLF_IDENTITY(max((0), (0)), (_GLF_IDENTITY(max((0), (0)), (max((0), (_GLF_IDENTITY(0, (0) | 0)))) >> 0)) | (max(_GLF_IDENTITY((0), min((0), (0))), (0))))), ~ (_GLF_IDENTITY(max((0), (0)), (_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0)) | (max((0), (0))))))))))))))), (0))))) / 1), _GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), (_GLF_IDENTITY(_GLF_IDENTITY((0), 1 * ((0))), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, int(ivec2(0, int(_GLF_ONE(1.0, injectionSwitch.y))))))), (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, int(ivec2(0, int(_GLF_ONE(1.0, injectionSwitch.y)))))))) / 1))))) / _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), ~ (~ (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), int(int(int(4)))), int(4))), int(4))) >> _GLF_IDENTITY(int(4), int(4))))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)))))), _GLF_IDENTITY(_GLF_IDENTITY((0), min((0), (0))), clamp((0), _GLF_IDENTITY(_GLF_IDENTITY((0), _GLF_IDENTITY(max((0), (0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0), (0)), (_GLF_IDENTITY(_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0), min(_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0), min(_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0), _GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0)))))) | (max((0), (0))))), int(int(_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0), (0)), (_GLF_IDENTITY(max(_GLF_IDENTITY((0), ((0)) * int(_GLF_ONE(1.0, injectionSwitch.y))), (0)), (max((0), (0))) >> 0)) | _GLF_IDENTITY((max((0), (0))), clamp((max((0), (0))), (max((0), (0))), _GLF_IDENTITY((max((0), (0))), ((max((0), (0)))) | 0))))), max(~ (_GLF_IDENTITY(max((0), (0)), (_GLF_IDENTITY(max((0), (0)), (max((0), (_GLF_IDENTITY(0, (0) | 0)))) >> 0)) | (max(_GLF_IDENTITY((0), min((0), (0))), (0))))), ~ (_GLF_IDENTITY(max((0), (0)), (_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0)) | (max((0), (0))))))))))))), max(_GLF_IDENTITY((0), _GLF_IDENTITY(max((0), (0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0), (0)), (_GLF_IDENTITY(_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0), min(_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0), min(_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0), _GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0)))))) | (max((0), (0))))), int(int(_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0), (0)), (_GLF_IDENTITY(max(_GLF_IDENTITY((0), ((0)) * int(_GLF_ONE(1.0, injectionSwitch.y))), (0)), (max((0), (0))) >> 0)) | _GLF_IDENTITY((max((0), (0))), clamp((max((0), (0))), (max((0), (0))), _GLF_IDENTITY((max((0), (0))), ((max((0), (0)))) | 0))))), max(~ (_GLF_IDENTITY(max((0), (0)), (_GLF_IDENTITY(max((0), (0)), (max((0), (_GLF_IDENTITY(0, (0) | 0)))) >> 0)) | (max(_GLF_IDENTITY((0), min((0), (0))), (0))))), ~ (_GLF_IDENTITY(max((0), (0)), (_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0)) | (max((0), (0))))))))))))), _GLF_IDENTITY((0), _GLF_IDENTITY(max((0), (0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0), (0)), (_GLF_IDENTITY(_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0), min(_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0), min(_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0), _GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0)))))) | (max((0), (0))))), int(int(_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0), (0)), (_GLF_IDENTITY(max(_GLF_IDENTITY((0), ((0)) * int(_GLF_ONE(1.0, injectionSwitch.y))), (0)), (max((0), (0))) >> 0)) | _GLF_IDENTITY((max((0), (0))), clamp((max((0), (0))), (max((0), (0))), _GLF_IDENTITY((max((0), (0))), ((max((0), (0)))) | 0))))), max(~ (_GLF_IDENTITY(max((0), (0)), (_GLF_IDENTITY(max((0), (0)), (max((0), (_GLF_IDENTITY(0, (0) | 0)))) >> 0)) | (max(_GLF_IDENTITY((0), min((0), (0))), (0))))), ~ (_GLF_IDENTITY(max((0), (0)), (_GLF_IDENTITY(max((0), (0)), (max((0), (0))) >> 0)) | (max((0), (0))))))))))))))), (0))))) / 1)))) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) - 0));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))))).y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), false, false), true))))))), (bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), false, false))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), (injectionSwitch)[_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, 0), ~ (~ (_GLF_IDENTITY(ivec3(1, 0, 0), max(ivec3(1, 0, 0), ivec3(1, 0, 0))))))))]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-3436.8387), _GLF_FUZZED(-929.296)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(_GLF_FUZZED(-3436.8387), _GLF_FUZZED(-929.296)), (false ? _GLF_FUZZED(vec2(-621.452, -4203.0860)) : vec2(_GLF_FUZZED(-3436.8387), _GLF_FUZZED(-929.296)))))), bvec2(false, false))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(false || (! (_GLF_DEAD(false))), (_GLF_IDENTITY(false || _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(false))), false || ((! (_GLF_DEAD(false)))))))), false || (false || (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u)], uint(1), 4, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(int(false)) : 64)), _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(4, 0), _GLF_IDENTITY(~ (~ (ivec2(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED((68693 + -62751)) : _GLF_IDENTITY(0, (0) << 0)))))), ivec2(0, 0) ^ (~ (~ (ivec2(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED((68693 + -62751)) : _GLF_IDENTITY(0, (0) << 0))))))))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9.2), _GLF_FUZZED(-751.950)), bvec2(false, false))), vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9.2), _GLF_FUZZED(-751.950)), bvec2(false, false))), vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), vec2(_GLF_FUZZED(-9.2), _GLF_FUZZED(-751.950)), bvec2(false, false))), vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0))).x > injectionSwitch.y) || false)) || false)))) || false)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u | (_GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   subgroupAll(_GLF_IDENTITY(false, (false) && true));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(int(workgroup_size)))), clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(int(workgroup_size)), int(ivec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(int(workgroup_size)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(int(workgroup_size)))), clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? 4 : _GLF_FUZZED(int(workgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(int(workgroup_size)))), _GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(int(workgroup_size)))))), _GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(int(workgroup_size)))))), 64, _GLF_IDENTITY(2, (2) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))), clamp(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, (4) ^ 0), 0, (1 ^ 0)))), 64, _GLF_IDENTITY(2, (2) - (0 | 0))), atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2)));
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   subgroupAll(false);
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
    return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(-6953.8968, 5.7, 138.222, -5.7) * mat2x4(8647.5897, 0.3, 4477.5569, 99.41, 1.7, -709.831, 31.14, -4.8))) : injectionSwitch))) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), ((_GLF_IDENTITY(4, min(4, 4)))) << 0) | (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) | (4)), 4, 4)), (false ? _GLF_FUZZED(-89163) : _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, clamp(4, 4, 4))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(4, clamp(4, 4, 4))), (~ (_GLF_IDENTITY(4, clamp(4, 4, 4)))) ^ 0), ~ (_GLF_IDENTITY(4, clamp(4, 4, 4))))))))))), min(4, 4)), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), bool(bvec2(bool(_GLF_IDENTITY(false, true && (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3289.3865), _GLF_FUZZED(-5.5)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), bvec2(true, true))).y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), false))))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), false)))))))))), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false))) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-20.19)), bool(false))) : _GLF_FUZZED(71.68))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), _GLF_IDENTITY(true && (false), (true && (false)) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), false || (bool(bvec3(false, true, false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
}
