#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_12 {
 uvec4 _f0;
} ;

struct _GLF_struct_11 {
 mat4x2 _f0;
 bvec4 _f1;
 bvec3 _f2;
 mat3x4 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_13 {
 _GLF_struct_11 _f0;
 _GLF_struct_12 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_14 {
 uint num_workgroup;
 _GLF_struct_13 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_9 {
 uvec4 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_10 {
 mat4 _f0;
 _GLF_struct_9 _f1;
 mat2x3 _f2;
 bool _f3;
 uint subgroup_id;
 float _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_6 {
 int _f0;
 ivec4 _f1;
 mat3 _f2;
 int _f3;
} ;

struct _GLF_struct_5 {
 vec2 _f0;
 mat2x4 _f1;
 ivec3 _f2;
 ivec3 _f3;
 mat2x3 _f4;
 uint _f5;
} ;

struct _GLF_struct_4 {
 ivec3 _f0;
 ivec4 _f1;
 ivec3 _f2;
 uint _f3;
 mat2 _f4;
} ;

struct _GLF_struct_3 {
 mat4x2 _f0;
} ;

struct _GLF_struct_7 {
 _GLF_struct_3 _f0;
 mat2 _f1;
 bvec4 _f2;
 _GLF_struct_4 _f3;
 _GLF_struct_5 _f4;
 mat4x2 _f5;
 _GLF_struct_6 _f6;
} ;

struct _GLF_struct_1 {
 mat4x2 _f0;
 ivec2 _f1;
 mat3x4 _f2;
 ivec4 _f3;
 mat3x4 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_0 {
 ivec4 _f0;
 mat3x4 _f1;
 bvec3 _f2;
 vec4 _f3;
 mat2x3 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_2 {
 mat4x3 _f0;
 mat2x4 _f1;
 _GLF_struct_0 _f2;
 _GLF_struct_1 _f3;
} ;

struct _GLF_struct_8 {
 ivec4 _f0;
 ivec2 _f1;
 uint subgroup_local_id;
 _GLF_struct_2 _f2;
 uvec4 _f3;
 _GLF_struct_7 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))) && true)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(mat4(1.0), _GLF_struct_9(_GLF_IDENTITY(uvec4(1u), (true ? uvec4(1u) : _GLF_FUZZED(uvec4(30211u, 33277u, 166619u, 54492u)))), mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, determinant(mat2(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0), mat2(1.0) * (vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(0.0, 0.0)), 1.0))), vec2(0.0, 1.0))), 0.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))) + (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) / 1.0), 0.0, 1.0, 1.0)), mix(float(float(mat3x2(1.0, determinant(mat2(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(785.851) : 0.0)), 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), 0.0, 0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))), vec2(0.0, 1.0))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(smoothstep(31.13, -9.6, _GLF_IDENTITY(_GLF_IDENTITY(-8063.5690, _GLF_IDENTITY(float(mat3x2(-8063.5690, 0.0, 1.0, 1.0, 0.0, 1.0)), clamp(_GLF_IDENTITY(float(mat3x2(-8063.5690, 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0 + (float(mat3x2(-8063.5690, 0.0, 1.0, 1.0, 0.0, 1.0)))), float(mat3x2(-8063.5690, 0.0, 1.0, 1.0, 0.0, 1.0)), float(mat3x2(-8063.5690, 0.0, 1.0, 1.0, 0.0, 1.0))))), max(_GLF_IDENTITY(-8063.5690, max(-8063.5690, -8063.5690)), -8063.5690)))) : 0.0)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0), (mat3x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0)) * mat3(1.0))), clamp(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0), (mat3x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0)) * mat3(1.0))), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0), (mat3x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0)) * mat3(1.0))), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0), (mat3x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0)) * mat3(1.0)))))), 0.0, 1.0, 1.0))), float(_GLF_FUZZED(228.689)), bool(false)))), _GLF_IDENTITY((1.0) - 0.0, (false ? _GLF_FUZZED(435.642) : (1.0) - 0.0))))), mat2x3(1.0), true, gl_SubgroupID, 1.0, mat2x3(_GLF_IDENTITY(1.0, (1.0) - determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, 0.0))).y), 0.0, tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0)))));
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 1.0, 1.0, 0.0))))))) || false))
    return;
   barrier();
  }
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(ivec4(_GLF_IDENTITY(1, ~ (~ (1)))), ivec2(1), gl_SubgroupInvocationID, _GLF_struct_2(mat4x3(1.0), mat2x4(1.0), _GLF_struct_0(_GLF_IDENTITY(ivec4(1), ~ (_GLF_IDENTITY(~ (ivec4(1)), min(~ (ivec4(1)), ~ (ivec4(1)))))), mat3x4(1.0), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec4(true, false, false, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)))))), vec4(1.0), mat2x3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0)), vec4(1.0)), _GLF_struct_1(mat4x2(1.0), ivec2(1), mat3x4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), ivec4(1), mat3x4(1.0), ivec2(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(58252)))))), uvec4(1u), _GLF_struct_7(_GLF_struct_3(mat4x2(1.0)), _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), (_GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0)))) - mat2(0.0, 0.0, 0.0, 0.0))) - mat2(0.0, 0.0, 0.0, 0.0)), bvec4(true), _GLF_struct_4(ivec3(1), ivec4(1), ivec3(1), 1u, mat2(1.0)), _GLF_struct_5(vec2(1.0), mat2x4(1.0), ivec3(1), ivec3(1), mat2x3(1.0), 1u), mat4x2(1.0), _GLF_struct_6(1, ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY((1) << (0 << _GLF_IDENTITY(int(8), int(8))), (true ? (1) << (0 << _GLF_IDENTITY(int(8), int(8))) : _GLF_FUZZED(-35661))))), mat3(1.0), 1)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), (_GLF_IDENTITY(false ? _GLF_FUZZED(325.888) : float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(1072.3781)))), vec2(_GLF_FUZZED(-434.244), _GLF_FUZZED(-5822.7600)), bvec2(_GLF_IDENTITY(false, ! (! (false))), false))).x))), mix(float(_GLF_FUZZED(3671.8505)), float(_GLF_IDENTITY(false ? _GLF_FUZZED(325.888) : float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(1072.3781)))), vec2(_GLF_FUZZED(-434.244), _GLF_FUZZED(-5822.7600)), bvec2(_GLF_IDENTITY(false, ! (! (false))), false))).x))), float(mat3x2(false ? _GLF_FUZZED(325.888) : float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(1072.3781)))), vec2(_GLF_FUZZED(-434.244), _GLF_FUZZED(-5822.7600)), bvec2(_GLF_IDENTITY(false, ! (! (false))), false))).x))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0)))), bool(true))))))))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true)) || false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(gl_NumWorkGroups.x, _GLF_struct_13(_GLF_struct_11(mat4x2(1.0), bvec4(true), bvec3(_GLF_IDENTITY(true, (true) || false)), mat3x4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0))), float(_GLF_FUZZED(-8.4)), bool(false)))), mat3x4(1.0)), _GLF_struct_12(uvec4(1u)), mat2x4(_GLF_IDENTITY(1.0, (1.0) / 1.0))), vec2(1.0));
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(false)), true), bvec2(bvec3(bvec2((_GLF_DEAD(false)), true), false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(false)), true), bvec2(bvec3(bvec2((_GLF_DEAD(false)), true), false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(false)), true), bvec2(bvec3(bvec2((_GLF_DEAD(false)), true), false)))), true, false)))))) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(vec4(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-37.01), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(9099.9922)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), (injectionSwitch))), 1.0, 0.0)), mix(vec2((vec2(vec4(mat2(1.0) * (injectionSwitch), 1.0, 0.0)))[0], (vec2(vec4(mat2(1.0) * (injectionSwitch), 1.0, 0.0)))[1]), vec2(_GLF_FUZZED(-448.355), _GLF_FUZZED(-725.313)), bvec2(false, false)))))) * vec2(1.0, 1.0)).x > injectionSwitch.y), _GLF_IDENTITY(false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, cos(tan(0.0)), 1.0, 1.0)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, cos(tan(0.0)), 1.0, 1.0))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, cos(tan(0.0)), 1.0, 1.0)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, cos(tan(0.0)), 1.0, 1.0))))) && true)), bool(bvec2(false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, cos(tan(0.0)), 1.0, 1.0)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, cos(tan(0.0)), 1.0, 1.0))))) && true)), false)))))))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(4.3)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), ((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))) && true)) || false)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))) || false), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))) || false)) && true)))), false))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-511.874)), float(injectionSwitch.y), bool(true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true))))), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))))) && true), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), ! (! (! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))), true && (true && (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), ! (! (! (_GLF_IDENTITY(! (false), (! (false)) || false)))))))))))))))))) || false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))) || false) && true)) && true)) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))).y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))), true && (bool(bool(_GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true))))))))), (bool(bvec2(false, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false, true, true))), bool(bvec2(false, true))))), false || ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false, true, true))), bool(bvec2(false, true))))), false || ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), ! (! ((_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false, true, true))), bool(bvec2(false, true))))), false || ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))))))), bool(bvec4(! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), true, true, true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(false, true))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))), bool(bool(! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))))))), false, false, false))), false || (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))), (! ((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))))) && true))), false, false, false))), ! (! (! (bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (_GLF_IDENTITY(bool(bvec2(false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, true)))))))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, bool(bvec4(_GLF_IDENTITY((false) && true, bool(bvec3((false) && true, false, false))), true, true, true))))))), true)))))), (! ((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))))) && true))), false, false, false)))))))))))))) && true)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), bool(bvec4(! (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (_GLF_IDENTITY(bool(bvec2(true, true)), ! (! _GLF_IDENTITY((bool(bvec2(true, true))), ! (! (_GLF_IDENTITY((bool(bvec2(true, true))), (_GLF_IDENTITY((bool(bvec2(true, true))), ((bool(bvec2(true, true)))) && true)) && true))))))))))))))), true, true, true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), ((_GLF_IDENTITY(false, bool(bvec2(false, true))))) && true)), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), false || ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))), false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, ! (! (true))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), true && ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))))))), false, false, false))), false || (! (bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, true && (true)))))), ! (! ((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, true && (true)))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, true && (true)))))), ! (! ((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, true && (true)))))))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, true && (true)))))), ! (! ((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, true && (true)))))))))), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, true && (true)))))), ! (! ((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, true && (true))))))))))))), true))))) && true)), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))))))))))), false, false, false))))))))))) && true)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)))), false), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false))), bool(bvec2(false, true)))), false)))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, bool(bvec2(false, true)))))), false), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), false)))))))), false || (bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))), false), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), false))))))))))))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), false))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), false))))), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), false)))), false, false)))), true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, true))))), false, false))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), false)))))))), false || (bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))), true), bvec3(bvec4(bvec3(bvec2(bvec4(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))), true), false))))), bvec2(bvec2(bvec2(bvec4(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), false))))))))))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), ((_GLF_IDENTITY(false, bool(bvec2(false, true))))) || false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), (! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))) && true), bool(bvec4(! (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && true) || false)) || false)))))), true, true, true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) || false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) || false)))))))))) && true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true))), false || (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true)))))) && true)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) || false)))))))))) && true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true))), false || (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true)))))) && true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) || false)))))))))) && true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true))), false || (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true)))))) && true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) || false)))))))))) && true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true))), false || (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true)))))) && true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) || false)))))))))) && true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true))), false || (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true)))))) && true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) || false)))))))))) && true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true))), false || (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true)))))) && true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) || false)))))))))) && true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true))), false || (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true)))))) && true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) || false)))))))))) && true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true))), false || (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true)))))) && true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) || false)))))))))) && true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true))), false || (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true)))))) && true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) || false)))))))))) && true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true))), false || (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true)))))) && true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))))), false, false, false))), false || _GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), true && ((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))))) || false)) || false, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), true && ((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))))) || false)) || false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), true && ((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))))) || false)) || false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))))) && true)), false, false, false)))), true && ((! (bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), true && ((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))))) || false)) || false, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), true && ((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))))) || false)) || false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), true && ((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))))) || false)) || false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))))) && true)), false, false, false))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), ((_GLF_IDENTITY(false, bool(bvec2(false, true))))) || false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), (! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))) && true), bool(bvec4(! (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && true) || false)) || false)))))), true, true, true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) || false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) || false)))))))))) && true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true))), false || (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true)))))) && true)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) || false)))))))))) && true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true))), false || (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true)))))) && true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) || false)))))))))) && true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true))), false || (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true)))))) && true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) || false)))))))))) && true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true))), false || (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true)))))) && true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) || false)))))))))) && true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true))), false || (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true)))))) && true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) || false)))))))))) && true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true))), false || (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true)))))) && true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) || false)))))))))) && true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true))), false || (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true)))))) && true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) || false)))))))))) && true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true))), false || (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true)))))) && true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) || false)))))))))) && true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true))), false || (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true)))))) && true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) || false)))))))))) && true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true))), false || (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true)))))) && true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))))), false, false, false))), false || _GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), true && ((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))))) || false)) || false, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), true && ((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))))) || false)) || false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), true && ((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))))) || false)) || false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))))) && true)), false, false, false)))), true && ((! (bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), true && ((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))))) || false)) || false, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), true && ((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))))) || false)) || false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), true && ((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))))) || false)) || false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))))) && true)), false, false, false))))))))))), ((_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), ((_GLF_IDENTITY(false, bool(bvec2(false, true))))) || false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), (! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))) && true), bool(bvec4(! (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && true) || false)) || false)))))), true, true, true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) || false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) || false)))))))))) && true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true))), false || (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true)))))) && true)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) || false)))))))))) && true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true))), false || (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true)))))) && true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) || false)))))))))) && true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true))), false || (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true)))))) && true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) || false)))))))))) && true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true))), false || (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true)))))) && true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) || false)))))))))) && true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true))), false || (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true)))))) && true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) || false)))))))))) && true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true))), false || (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true)))))) && true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) || false)))))))))) && true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true))), false || (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true)))))) && true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) || false)))))))))) && true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true))), false || (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true)))))) && true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) || false)))))))))) && true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true))), false || (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true)))))) && true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) || false)))))))))) && true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true))), false || (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (bool(bool(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true)))))) && true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))))), false, false, false))), false || _GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), true && ((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))))) || false)) || false, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), true && ((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))))) || false)) || false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), true && ((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))))) || false)) || false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))))) && true)), false, false, false)))), true && ((! (bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), true && ((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))))) || false)) || false, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), true && ((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))))) || false)) || false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), true && ((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))))) || false)) || false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))))) && true)), false, false, false)))))))))))) && true))))) && true))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         barrier();
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0)))).y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))) || false)))) && true)))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-1.8), _GLF_FUZZED(-4.7)), mix(vec2(_GLF_FUZZED(4677.9500), _GLF_FUZZED(-2.6)), vec2((vec2(_GLF_FUZZED(-1.8), _GLF_FUZZED(-4.7)))[0], (vec2(_GLF_FUZZED(-1.8), _GLF_FUZZED(-4.7)))[1]), bvec2(true, true))), bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)), false))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch), (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch)) / vec2(1.0, 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch)))))) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3388.1375))))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-949.878)), vec2(_GLF_FUZZED(-8.8), (injectionSwitch)[1]), bvec2(false, true))))), 0.0, exp(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), mix(float(_GLF_FUZZED(25.58)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0)), bool(true)))), min(min(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-949.878)), vec2(_GLF_FUZZED(-8.8), (injectionSwitch)[1]), bvec2(false, true))))), 0.0, exp(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), mix(float(_GLF_FUZZED(25.58)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0)), bool(true)))), min(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-949.878)), vec2(_GLF_FUZZED(-8.8), (injectionSwitch)[1]), bvec2(false, true))))), 0.0, exp(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), mix(float(_GLF_FUZZED(25.58)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0)), bool(true))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.8), _GLF_FUZZED(-1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((21.18))), vec2(_GLF_FUZZED(vec2(-5.1, -0.3).s), (injectionSwitch)[1]), bvec2(false, true)))) : injectionSwitch)))))).x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false), true, true))))), (injectionSwitch.x > injectionSwitch.y)), false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.5)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8905.3188) : injectionSwitch.x))), bool(true))) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.5) : injectionSwitch.y))))))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))) / _GLF_IDENTITY(1u, (1u) << 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))) / _GLF_IDENTITY(1u, (1u) << 0u)), ~ (~ (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))) / _GLF_IDENTITY(1u, (1u) << 0u)))))) >> 0u), (workgroup_id) >> 0u), min(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))) / 1u), (workgroup_id) >> 0u), (workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))) / 1u), (workgroup_id) >> 0u)) >> 0u), workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))) / 1u), (workgroup_id) >> 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_10.subgroup_id * subgroup_size + _GLF_struct_replacement_8.subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_10.subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) - 0u), _GLF_struct_replacement_8.subgroup_local_id, _GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : _GLF_struct_replacement_8.subgroup_local_id)))) + 1, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, uint(uvec3(_GLF_struct_replacement_8.subgroup_local_id, 0u, 0u))) + 1) - 0u)) << 0u)) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)) | (virtual_gid))], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1)), (-58468 & (0 & -4700)), (20291 & 0)))), 0, (64192 & 0)), clamp(ivec3(1, 0, (64192 & 0)), ivec3(1, 0, (64192 & 0)), ivec3(1, 0, (64192 & 0))))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 0, (64192 & 0)), clamp(ivec3(1, 0, (64192 & 0)), ivec3(1, 0, (64192 & 0)), ivec3(1, 0, (64192 & _GLF_IDENTITY(0, int(ivec3(0, 1, 0)))))))), clamp(int(_GLF_IDENTITY(ivec3(1, 0, (64192 & 0)), clamp(ivec3(1, 0, (64192 & 0)), ivec3(1, 0, (64192 & 0)), ivec3(1, 0, (64192 & 0))))), int(_GLF_IDENTITY(ivec3(1, 0, (64192 & 0)), clamp(ivec3(1, 0, (64192 & 0)), ivec3(1, 0, (64192 & 0)), ivec3(1, 0, (64192 & _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-3786) : 0))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 0, (64192 & 0)), (ivec3(1, 0, (64192 & 0))) * ivec3(1, 1, 1)), clamp(ivec3(_GLF_IDENTITY(1, (1) + 0), 0, (64192 & 0)), ivec3(1, 0, _GLF_IDENTITY((64192 & 0), max((64192 & 0), (64192 & 0)))), ivec3(1, 0, (64192 & 0))))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 0, (64192 & 0)), clamp(ivec3(1, 0, (64192 & 0)), ivec3(1, 0, (64192 & 0)), ivec3(1, 0, (64192 & _GLF_IDENTITY(0, int(ivec3(0, 1, 0)))))))), clamp(int(_GLF_IDENTITY(ivec3(1, 0, (64192 & 0)), clamp(ivec3(1, 0, (64192 & 0)), ivec3(1, 0, (64192 & 0)), ivec3(1, 0, (64192 & 0))))), int(_GLF_IDENTITY(ivec3(1, 0, (64192 & 0)), clamp(ivec3(1, 0, (64192 & 0)), ivec3(1, 0, (64192 & 0)), ivec3(1, 0, (64192 & _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-3786) : 0))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 0, (64192 & 0)), (ivec3(1, 0, (64192 & 0))) * ivec3(1, 1, 1)), clamp(ivec3(_GLF_IDENTITY(1, (1) + 0), 0, (64192 & 0)), ivec3(1, 0, _GLF_IDENTITY((64192 & 0), max((64192 & 0), (64192 & 0)))), ivec3(1, 0, (64192 & 0)))))))) ^ 0)))), 0 | (1)), min(_GLF_struct_replacement_8.subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 0, (64192 & 0)), clamp(ivec3(1, 0, (64192 & 0)), _GLF_IDENTITY(ivec3(1, 0, (64192 & 0)), ivec3(0, 0, 0) ^ (ivec3(1, 0, (64192 & 0)))), ivec3(1, 0, (64192 & 0))))), 1 * (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 0, (64192 & 0)), clamp(ivec3(1, 0, (64192 & 0)), ivec3(1, 0, (64192 & 0)), ivec3(1, 0, (64192 & _GLF_IDENTITY(0, int(ivec3(0, 1, 0)))))))), clamp(int(_GLF_IDENTITY(ivec3(1, 0, (64192 & 0)), clamp(ivec3(1, 0, (64192 & 0)), ivec3(1, 0, (64192 & 0)), ivec3(1, 0, (64192 & 0))))), int(_GLF_IDENTITY(ivec3(1, 0, (64192 & 0)), clamp(ivec3(1, 0, (64192 & 0)), ivec3(1, 0, _GLF_IDENTITY((64192 & 0), 0 ^ (_GLF_IDENTITY((64192 & 0), max((64192 & 0), (64192 & 0)))))), ivec3(1, 0, (64192 & _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-3786) : 0))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 0, (64192 & 0)), (ivec3(1, 0, (64192 & 0))) * ivec3(1, 1, 1)), clamp(ivec3(_GLF_IDENTITY(1, (1) + 0), 0, (64192 & 0)), ivec3(1, 0, _GLF_IDENTITY((64192 & 0), max((64192 & 0), (64192 & 0)))), ivec3(1, 0, (64192 & 0)))))))))), 0 | (1)), _GLF_struct_replacement_8.subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 0, (64192 & 0)), clamp(ivec3(1, 0, _GLF_IDENTITY((64192 & 0), (1 ^ 1) + ((64192 & 0)))), ivec3(1, 0, (64192 & 0)), ivec3(1, 0, (64192 & 0))))), 1 * (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 0, (64192 & 0)), clamp(ivec3(1, 0, (64192 & 0)), ivec3(1, 0, (64192 & 0)), ivec3(1, 0, (64192 & _GLF_IDENTITY(0, int(ivec3(0, 1, 0)))))))), clamp(int(_GLF_IDENTITY(ivec3(1, 0, (64192 & 0)), clamp(ivec3(1, 0, (64192 & 0)), ivec3(1, 0, (64192 & 0)), ivec3(1, 0, (64192 & 0))))), int(_GLF_IDENTITY(ivec3(1, 0, (64192 & 0)), clamp(ivec3(1, 0, (64192 & 0)), ivec3(1, 0, (64192 & 0)), ivec3(1, 0, (64192 & _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-3786) : 0))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 0, (64192 & 0)), (ivec3(1, 0, (64192 & 0))) * ivec3(1, 1, 1)), clamp(ivec3(_GLF_IDENTITY(1, (1) + 0), 0, (64192 & 0)), ivec3(1, 0, _GLF_IDENTITY((_GLF_IDENTITY(64192 & 0, clamp(64192 & 0, 64192 & 0, _GLF_IDENTITY(64192 & 0, ~ (~ (64192 & 0)))))), max((64192 & 0), (64192 & 0)))), ivec3(1, 0, (64192 & 0))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 0, (64192 & 0)), (ivec3(1, 0, (64192 & 0))) * ivec3(1, 1, 1)), clamp(ivec3(_GLF_IDENTITY(1, (1) + 0), 0, (64192 & 0)), ivec3(1, 0, _GLF_IDENTITY((_GLF_IDENTITY(64192 & 0, clamp(64192 & 0, 64192 & 0, _GLF_IDENTITY(64192 & 0, ~ (~ (64192 & 0)))))), max((64192 & 0), (64192 & 0)))), ivec3(1, 0, (64192 & 0))))), (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 0, (64192 & 0)), (ivec3(1, 0, (64192 & 0))) * ivec3(1, 1, 1)), clamp(ivec3(_GLF_IDENTITY(1, (1) + 0), 0, (64192 & 0)), ivec3(1, 0, _GLF_IDENTITY((_GLF_IDENTITY(64192 & 0, clamp(64192 & 0, 64192 & 0, _GLF_IDENTITY(64192 & 0, ~ (~ (64192 & 0)))))), max((64192 & 0), (64192 & 0)))), ivec3(1, 0, (64192 & 0)))))) | 0)), (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 0, (64192 & 0)), (ivec3(1, 0, (64192 & 0))) * ivec3(1, 1, 1)), clamp(ivec3(_GLF_IDENTITY(1, (1) + 0), 0, (64192 & 0)), ivec3(1, 0, _GLF_IDENTITY((_GLF_IDENTITY(64192 & 0, clamp(64192 & 0, 64192 & 0, _GLF_IDENTITY(64192 & 0, ~ (~ (64192 & 0)))))), max((64192 & 0), (64192 & 0)))), ivec3(1, 0, (64192 & 0))))), (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 0, (64192 & 0)), (ivec3(1, 0, (64192 & 0))) * ivec3(1, 1, 1)), clamp(ivec3(_GLF_IDENTITY(1, (1) + 0), 0, (64192 & 0)), ivec3(1, 0, _GLF_IDENTITY((_GLF_IDENTITY(64192 & 0, clamp(64192 & 0, 64192 & 0, _GLF_IDENTITY(64192 & 0, ~ (~ (64192 & 0)))))), max((64192 & 0), (64192 & 0)))), ivec3(1, 0, (64192 & 0)))))) | 0))) + 0)))))))), 0 | (1)))) < _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-86.51, (-86.51) - determinant(mat4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.5)), bvec2(true, false))).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), bool(bvec4((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), true, false, true))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0)))) / 1.0))))), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))) && true, bool(bvec4((bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, false, true, true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.8)), bool(false))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))), bool(bvec3((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, clamp(read, _GLF_IDENTITY(read, (false ? _GLF_FUZZED(read) : _GLF_IDENTITY(read, uint(uvec2(read, 1u))))), _GLF_IDENTITY(read, min(_GLF_IDENTITY(read, (read) | 0u), read)))), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), true && (! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))) || false) && true))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2873.8792, 500.333))))) + vec2(0.0, 0.0)) : _GLF_FUZZED((mat3x2(-89.37, -9983.1430, 5547.4767, 8.6, 153.935, 17.25) / 4.3)[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(63269) : 2))])))[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2873.8792, 500.333))))) + vec2(0.0, 0.0)) : _GLF_FUZZED((mat3x2(-89.37, -9983.1430, 5547.4767, 8.6, 153.935, 17.25) / 4.3)[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(63269) : 2))])))[0], injectionSwitch[1]))) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-4923.4525))) > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), (true && (_GLF_DEAD(false))) && true)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
