#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
    {
     do
      {
       do
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(1.9), (false ? _GLF_FUZZED(cosh(-2998.8217)) : _GLF_IDENTITY(_GLF_FUZZED(1.9), (_GLF_FUZZED(1.9)) - 0.0)))), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.5)), bool(false)))))))))), bool(_GLF_IDENTITY(true, false || (true))))), 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0), vec2(0.0, 1.0))), max(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0), vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)))))), dot(vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(mat2(vec3(0.0, 0.0, 0.0), 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(vec3(0.0, 0.0, 0.0), 1.0))))), vec3(1.0, 1.0, 1.0))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2291.9069) : 1.0))))), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(atanh((bvec2(true, true) , 126.310))) : 1.0)), 1.0, 1.0))), 1.0), vec2(0.0, 1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(1.9), (false ? _GLF_FUZZED(cosh(-2998.8217)) : _GLF_IDENTITY(_GLF_FUZZED(1.9), (_GLF_FUZZED(1.9)) - 0.0)))), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.5)), bool(false)))))))))), bool(_GLF_IDENTITY(true, false || (true))))), 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0), vec2(0.0, 1.0))), max(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0), vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)))))), dot(vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(mat2(vec3(0.0, 0.0, 0.0), 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(vec3(0.0, 0.0, 0.0), 1.0))))), vec3(1.0, 1.0, 1.0))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2291.9069) : 1.0))))), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(atanh((bvec2(true, true) , 126.310))) : 1.0)), 1.0, 1.0))), 1.0), vec2(0.0, 1.0))))), float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(1.9), (false ? _GLF_FUZZED(cosh(-2998.8217)) : _GLF_IDENTITY(_GLF_FUZZED(1.9), (_GLF_FUZZED(1.9)) - 0.0)))), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.5)), bool(false)))))))))), bool(_GLF_IDENTITY(true, false || (true))))), 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0), vec2(0.0, 1.0))), max(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0), vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)))))), dot(vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(mat2(vec3(0.0, 0.0, 0.0), 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(vec3(0.0, 0.0, 0.0), 1.0))))), vec3(1.0, 1.0, 1.0))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2291.9069) : 1.0))))), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(atanh((bvec2(true, true) , 126.310))) : 1.0)), 1.0, 1.0))), 1.0), vec2(0.0, 1.0))))), 0.0, 0.0, 1.0, 0.0, 0.0)))) - 0.0), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(tan(0.0), min(tan(0.0), tan(0.0))), 0.0, 0.0, length(0.0)))) > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false)))))) && true)))
                    {
                    }
                   else
                    {
                     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true))))))
                      {
                       do
                        {
                         barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     else
                      {
                      }
                    }
                  }
                 else
                  {
                  }
                }
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))) << _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 1u * (0u)), 0u)));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), ~ (~ ((subgroup_id)))) + 0u) * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), (subgroup_local_id + 1))) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), max(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), min(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), max(max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), (max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)) >> 0u)))) ^ 0u)))) | ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))), (subgroup_local_id + 1) % subgroup_size))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))), (subgroup_local_id + 1) % subgroup_size))), clamp(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))), (subgroup_local_id + 1) % subgroup_size))), ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))), (subgroup_local_id + 1) % subgroup_size)))) | ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))), (subgroup_local_id + 1) % subgroup_size))))), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))), (subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))), (subgroup_local_id + 1) % subgroup_size))))))) ^ 0u), max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), min(uint(uvec2(subgroup_local_id + 1, 0u)), _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), (uint(uvec2(subgroup_local_id + 1, 0u))) / 1u))))) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), max((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))))))), (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_size)), max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))))), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)), (false ? _GLF_FUZZED(workgroup_id) : ((subgroup_local_id + 1)))) / 1u), (subgroup_local_id + 1))) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), max(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), min(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(max((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_local_id))) + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), max(max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), (max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)) >> 0u)))) ^ 0u)))) | ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))), (subgroup_local_id + 1) % subgroup_size))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))), (subgroup_local_id + 1) % subgroup_size))), clamp(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))), (subgroup_local_id + 1) % subgroup_size))), ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))), (subgroup_local_id + 1) % subgroup_size)))) | ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))), (subgroup_local_id + 1) % subgroup_size))))), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))), (subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))), (subgroup_local_id + 1) % subgroup_size))))))) ^ 0u), max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), min(uint(uvec2(subgroup_local_id + 1, 0u)), _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), (uint(uvec2(subgroup_local_id + 1, 0u))) / 1u))))) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), max((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) << 0u) + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))))))), (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), min(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_size)), max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))))));
 do
  {
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-39972) : 4))), max(_GLF_IDENTITY((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-39972) : 4))), (_GLF_IDENTITY((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-39972) : 4))), ((_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(-39972) : 4), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (false ? _GLF_FUZZED(-39972) : 4) : _GLF_FUZZED(_injected_loop_counter)))))) | ((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-39972) : 4)))))) * 1), (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-39972) : 4))))), (_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-777.576))), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? mat2(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(5.0, 3.2, 12.69, 9.7)))))))))) && (false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) + 0.0))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true))), true))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true))), true))))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && true), true, true))), true)))))), bool(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && true), true, true))), true)))))), bool(bvec3((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((false)) && true), true, true))), true)))))), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), false || (_GLF_IDENTITY((false), ((false)) && true))), true, true))), true))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, bool(bvec4(((false)) && true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), true, true))), _GLF_IDENTITY(true, true && (true))))))))), false), true)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, _GLF_IDENTITY(true, bool(bool(true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true))), true))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, _GLF_IDENTITY(true, bool(bool(true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true))), true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, _GLF_IDENTITY(true, bool(bool(true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true))), true))))))))) || false), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true))), _GLF_IDENTITY(true, true && (true))))))))), false), true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((false)))) && true), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true))), true))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) && true)) && true), true, true))), _GLF_IDENTITY(true, true && (true))))))))), false), true)), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true))), true))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true))), _GLF_IDENTITY(true, true && (true))))))))), false), true)), false, false)), true, true)))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true))), true))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, (false) || false))) && true), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true))), _GLF_IDENTITY(true, true && (true))))))))), false), true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true))), true))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)), ! (! (((false))))) && true), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true))), _GLF_IDENTITY(true, true && (true))))))))), false), true)), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))) && true), true))))))) && true), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true))), true))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true))), _GLF_IDENTITY(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), true, false, true)), false || (bool(bvec4(bool(_GLF_IDENTITY(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), true, false, true)))))) && (true))))))))), false), true)), false, false)), true, true)))), true), true)))))))))))))))))), _GLF_IDENTITY(false, false || (false)))))))) ? _GLF_FUZZED(-39972) : 4))), (_GLF_IDENTITY((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-39972) : 4))), clamp((_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))) ? _GLF_FUZZED(-39972) : 4), ((false ? _GLF_FUZZED(-39972) : 4)) | ((false ? _GLF_FUZZED(-39972) : 4))))), (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-39972) : 4))), _GLF_IDENTITY((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-39972) : 4))), min((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-39972) : 4))), (_GLF_IDENTITY(4, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))), false, true))) ? _GLF_FUZZED(-39972) : 4)))))))) << 0)) ^ 0) | (4)), 64, 4);
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), _GLF_IDENTITY((~ (0)) ^ 0, (_GLF_IDENTITY((~ (0)) ^ 0, ((~ (0)) ^ 0) << 0)) / 1))), _GLF_IDENTITY(clamp(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((0), (_GLF_IDENTITY((0), ((0)) ^ 0)) ^ 0), _GLF_IDENTITY((~ (0)) ^ 0, ((~ (0)) ^ 0) | ((~ (0)) ^ 0)))), _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), max((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), max((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), _GLF_IDENTITY((_GLF_IDENTITY(~ (0), _GLF_IDENTITY((~ (0)), (_GLF_IDENTITY((~ (0)), (true ? _GLF_IDENTITY((~ (0)), min((~ (0)), (~ (0)))) : _GLF_FUZZED(31954)))) << 0) ^ _GLF_IDENTITY(0, (0) / 1))), ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) | ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))))))) : _GLF_FUZZED(47867), (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), min((_GLF_IDENTITY(~ _GLF_IDENTITY((0), min((0), (0))), (~ (0)) ^ 0)), (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))) : _GLF_FUZZED(47867)) | (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), int(ivec4((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), 0, 1, 0)))))) ^ 0) : _GLF_FUZZED(47867)))), min((_GLF_IDENTITY(true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), max((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), max((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), _GLF_IDENTITY((_GLF_IDENTITY(~ (0), _GLF_IDENTITY((~ (0)), (_GLF_IDENTITY((~ (0)), (true ? _GLF_IDENTITY((~ (0)), min((~ (0)), (~ (0)))) : _GLF_FUZZED(31954)))) << 0) ^ _GLF_IDENTITY(0, (0) / 1))), ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) | ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))))))) : _GLF_FUZZED(47867), (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), min((_GLF_IDENTITY(~ _GLF_IDENTITY((0), min((0), (0))), (~ (0)) ^ 0)), (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))) : _GLF_FUZZED(47867)) | (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), int(ivec4((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), 0, 1, 0)))))) ^ 0) : _GLF_FUZZED(47867)))), _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), max((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), max((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), _GLF_IDENTITY((_GLF_IDENTITY(~ (0), _GLF_IDENTITY((~ (0)), (_GLF_IDENTITY((~ (0)), (true ? _GLF_IDENTITY((~ (0)), min((~ (0)), (~ (0)))) : _GLF_FUZZED(31954)))) << 0) ^ _GLF_IDENTITY(0, (0) / 1))), ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) | ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))))))) : _GLF_FUZZED(47867), (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), min((_GLF_IDENTITY(~ _GLF_IDENTITY((0), min((0), (0))), (~ (0)) ^ 0)), (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))) : _GLF_FUZZED(47867)) | (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), int(ivec4((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), 0, 1, 0)))))) ^ 0) : _GLF_FUZZED(47867)))), max((_GLF_IDENTITY(true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), max((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), max((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), _GLF_IDENTITY((_GLF_IDENTITY(~ (0), _GLF_IDENTITY((~ (0)), (_GLF_IDENTITY((~ (0)), (true ? _GLF_IDENTITY((~ (0)), min((~ (0)), (~ (0)))) : _GLF_FUZZED(31954)))) << 0) ^ _GLF_IDENTITY(0, (0) / 1))), ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) | ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))))))) : _GLF_FUZZED(47867), (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), min((_GLF_IDENTITY(~ _GLF_IDENTITY((0), min((0), (0))), (~ (0)) ^ 0)), (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))) : _GLF_FUZZED(47867)) | (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), int(ivec4((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), 0, 1, 0)))))) ^ 0) : _GLF_FUZZED(47867)))), (_GLF_IDENTITY(true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), max((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), max((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), _GLF_IDENTITY((_GLF_IDENTITY(~ (0), _GLF_IDENTITY((~ (0)), (_GLF_IDENTITY((~ (0)), (true ? _GLF_IDENTITY((~ (0)), min((~ (0)), (~ (0)))) : _GLF_FUZZED(31954)))) << 0) ^ _GLF_IDENTITY(0, (0) / 1))), ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) | ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))))))) : _GLF_FUZZED(47867), (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), min((_GLF_IDENTITY(~ _GLF_IDENTITY((0), min((0), (0))), (~ (0)) ^ 0)), (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))) : _GLF_FUZZED(47867)) | (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), int(ivec4((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), 0, 1, 0)))))) ^ 0) : _GLF_FUZZED(47867)))))))))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((0), (_GLF_IDENTITY((0), ((0)) ^ 0)) ^ 0), _GLF_IDENTITY((~ (0)) ^ 0, ((~ (0)) ^ 0) | ((~ (0)) ^ 0)))), _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), max((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), max((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), _GLF_IDENTITY((_GLF_IDENTITY(~ (0), _GLF_IDENTITY((~ (0)), (_GLF_IDENTITY((~ (0)), (true ? _GLF_IDENTITY((~ (0)), min((~ (0)), (~ (0)))) : _GLF_FUZZED(31954)))) << 0) ^ _GLF_IDENTITY(0, (0) / 1))), ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) | ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))))))) : _GLF_FUZZED(47867), (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), min((_GLF_IDENTITY(~ _GLF_IDENTITY((0), min((0), (0))), (~ (0)) ^ 0)), (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))) : _GLF_FUZZED(47867)) | (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), int(ivec4((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), 0, 1, 0)))))) ^ 0) : _GLF_FUZZED(47867)))), min((_GLF_IDENTITY(true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), max((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), max((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), _GLF_IDENTITY((_GLF_IDENTITY(~ (0), _GLF_IDENTITY((~ (0)), (_GLF_IDENTITY((~ (0)), (true ? _GLF_IDENTITY((~ (0)), min((~ (0)), (~ (0)))) : _GLF_FUZZED(31954)))) << 0) ^ _GLF_IDENTITY(0, (0) / 1))), ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) | ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))))))) : _GLF_FUZZED(47867), (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), min((_GLF_IDENTITY(~ _GLF_IDENTITY((0), min((0), (0))), (~ (0)) ^ 0)), (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))) : _GLF_FUZZED(47867)) | (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), int(ivec4((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), 0, 1, 0)))))) ^ 0) : _GLF_FUZZED(47867)))), _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), max((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), max((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), _GLF_IDENTITY((_GLF_IDENTITY(~ (0), _GLF_IDENTITY((~ (0)), (_GLF_IDENTITY((~ (0)), (true ? _GLF_IDENTITY((~ (0)), min((~ (0)), (~ (0)))) : _GLF_FUZZED(31954)))) << 0) ^ _GLF_IDENTITY(0, (0) / 1))), ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) | ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))))))) : _GLF_FUZZED(47867), (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), min((_GLF_IDENTITY(~ _GLF_IDENTITY((0), min((0), (0))), (~ (0)) ^ 0)), (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))) : _GLF_FUZZED(47867)) | (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), int(ivec4((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), 0, 1, 0)))))) ^ 0) : _GLF_FUZZED(47867)))), max((_GLF_IDENTITY(true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), max((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), max((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), _GLF_IDENTITY((_GLF_IDENTITY(~ (0), _GLF_IDENTITY((~ (0)), (_GLF_IDENTITY((~ (0)), (true ? _GLF_IDENTITY((~ (0)), min((~ (0)), (~ (0)))) : _GLF_FUZZED(31954)))) << 0) ^ _GLF_IDENTITY(0, (0) / 1))), ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) | ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))))))) : _GLF_FUZZED(47867), (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), min((_GLF_IDENTITY(~ _GLF_IDENTITY((0), min((0), (0))), (~ (0)) ^ 0)), (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))) : _GLF_FUZZED(47867)) | (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), int(ivec4((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), 0, 1, 0)))))) ^ 0) : _GLF_FUZZED(47867)))), (_GLF_IDENTITY(true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), max((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), max((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), _GLF_IDENTITY((_GLF_IDENTITY(~ (0), _GLF_IDENTITY((~ (0)), (_GLF_IDENTITY((~ (0)), (true ? _GLF_IDENTITY((~ (0)), min((~ (0)), (~ (0)))) : _GLF_FUZZED(31954)))) << 0) ^ _GLF_IDENTITY(0, (0) / 1))), ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) | ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))))))) : _GLF_FUZZED(47867), (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), min((_GLF_IDENTITY(~ _GLF_IDENTITY((0), min((0), (0))), (~ (0)) ^ 0)), (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))) : _GLF_FUZZED(47867)) | (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), int(ivec4((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), 0, 1, 0)))))) ^ 0) : _GLF_FUZZED(47867)))))))))), ((_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((0), (_GLF_IDENTITY((0), ((0)) ^ 0)) ^ 0), _GLF_IDENTITY((~ (0)) ^ 0, ((~ (0)) ^ 0) | ((~ (0)) ^ 0)))), _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), max((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), max((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), _GLF_IDENTITY((_GLF_IDENTITY(~ (0), _GLF_IDENTITY((~ (0)), (_GLF_IDENTITY((~ (0)), (true ? _GLF_IDENTITY((~ (0)), min((~ (0)), (~ (0)))) : _GLF_FUZZED(31954)))) << 0) ^ _GLF_IDENTITY(0, (0) / 1))), ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) | ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))))))) : _GLF_FUZZED(47867), (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), min((_GLF_IDENTITY(~ _GLF_IDENTITY((0), min((0), (0))), (~ (0)) ^ 0)), (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))) : _GLF_FUZZED(47867)) | (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), int(ivec4((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), 0, 1, 0)))))) ^ 0) : _GLF_FUZZED(47867)))), min((_GLF_IDENTITY(true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), max((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), max((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), _GLF_IDENTITY((_GLF_IDENTITY(~ (0), _GLF_IDENTITY((~ (0)), (_GLF_IDENTITY((~ (0)), (true ? _GLF_IDENTITY((~ (0)), min((~ (0)), (~ (0)))) : _GLF_FUZZED(31954)))) << 0) ^ _GLF_IDENTITY(0, (0) / 1))), ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) | ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))))))) : _GLF_FUZZED(47867), (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), min((_GLF_IDENTITY(~ _GLF_IDENTITY((0), min((0), (0))), (~ (0)) ^ 0)), (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))) : _GLF_FUZZED(47867)) | (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), int(ivec4((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), 0, 1, 0)))))) ^ 0) : _GLF_FUZZED(47867)))), _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), max((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), max((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), _GLF_IDENTITY((_GLF_IDENTITY(~ (0), _GLF_IDENTITY((~ (0)), (_GLF_IDENTITY((~ (0)), (true ? _GLF_IDENTITY((~ (0)), min((~ (0)), (~ (0)))) : _GLF_FUZZED(31954)))) << 0) ^ _GLF_IDENTITY(0, (0) / 1))), ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) | ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))))))) : _GLF_FUZZED(47867), (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), min((_GLF_IDENTITY(~ _GLF_IDENTITY((0), min((0), (0))), (~ (0)) ^ 0)), (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))) : _GLF_FUZZED(47867)) | (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), int(ivec4((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), 0, 1, 0)))))) ^ 0) : _GLF_FUZZED(47867)))), max((_GLF_IDENTITY(true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), max((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), max((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), _GLF_IDENTITY((_GLF_IDENTITY(~ (0), _GLF_IDENTITY((~ (0)), (_GLF_IDENTITY((~ (0)), (true ? _GLF_IDENTITY((~ (0)), min((~ (0)), (~ (0)))) : _GLF_FUZZED(31954)))) << 0) ^ _GLF_IDENTITY(0, (0) / 1))), ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) | ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))))))) : _GLF_FUZZED(47867), (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), min((_GLF_IDENTITY(~ _GLF_IDENTITY((0), min((0), (0))), (~ (0)) ^ 0)), (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))) : _GLF_FUZZED(47867)) | (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), int(ivec4((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), 0, 1, 0)))))) ^ 0) : _GLF_FUZZED(47867)))), (_GLF_IDENTITY(true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), max((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), max((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), _GLF_IDENTITY((_GLF_IDENTITY(~ (0), _GLF_IDENTITY((~ (0)), (_GLF_IDENTITY((~ (0)), (true ? _GLF_IDENTITY((~ (0)), min((~ (0)), (~ (0)))) : _GLF_FUZZED(31954)))) << 0) ^ _GLF_IDENTITY(0, (0) / 1))), ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) | ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))))))) : _GLF_FUZZED(47867), (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), min((_GLF_IDENTITY(~ _GLF_IDENTITY((0), min((0), (0))), (~ (0)) ^ 0)), (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))) : _GLF_FUZZED(47867)) | (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), ((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), int(ivec4((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), 0, 1, 0)))))) ^ 0) : _GLF_FUZZED(47867))))))))))) ^ (1 ^ 1)))) << 0), ~ (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), ~ (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))), (clamp(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), (true ? (_GLF_IDENTITY(~ _GLF_IDENTITY((0), ((0)) ^ 0), (~ (0)) ^ 0)) : _GLF_FUZZED(47867)))) << 0), ~ (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)), ~ (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))) / 1))), (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, min(0, 0))))))) * 1));
 do
  {
   do
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       do
        {
         if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), (subgroup_size) / 1u), subgroup_size))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), (subgroup_size) / 1u), subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), (~ (_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 0u), clamp(uvec4(subgroup_size, 1u, 0u, 0u), uvec4(subgroup_size, 1u, 0u, 0u), uvec4(subgroup_size, 1u, 0u, 0u))))))))) - 0u))))))) / _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 1u))), subgroup_size))) * 1u))) << 0u), (_GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(uint(-27599)) : _GLF_IDENTITY((subgroup_size), 0u ^ ((subgroup_size))))) | (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), (subgroup_size) / 1u), subgroup_size)))) - 0u)))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
            {
            }
           else
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec4((true), true, true, true))), false || ((true))))), false || (_GLF_IDENTITY(true, ! (! (true)))))) && true)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec4((true), true, true, true))), false || ((true))))), false || (_GLF_IDENTITY(true, ! (! (true)))))) && true)), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec4((true), true, true, true))), false || ((true))))), false || (_GLF_IDENTITY(true, ! (! (true)))))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec4((true), true, true, true))), false || ((true))))), false || (_GLF_IDENTITY(true, ! (! (true)))))) && true))) && true)))))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), ((true)) && true)))), false || ((true))))), false || (_GLF_IDENTITY(true, ! (! (true)))))) && true)), false, true))), (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ((! (true))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(true, ! (! (true)))))) && true))) || false)))))
                  {
                   do
                    {
                     atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, max(4, 4)));
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, true, false))))));
                  }
                 else
                  {
                  }
                }
              }
            }
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             subgroupAll(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))));
            }
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, max(4, 4)))), 4, 4)));
            }
           for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) | 0)))); _injected_loop_counter ++)
            {
             do
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) ^ 0)), (_GLF_IDENTITY(int(1), int(1))) | 0)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), max(int(7), int(7))))), (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1) != ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), max(int(7), int(7)))))) || false)); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     do
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 1 * (int(0))))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                          {
                           subgroupAll(true);
                          }
                        }
                       else
                        {
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   else
                    {
                    }
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false)) && true))
            {
             do
              {
               do
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       do
                        {
                         do
                          {
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
                            {
                            }
                           else
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 do
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                    {
                                    }
                                   else
                                    {
                                     if(_GLF_DEAD(false))
                                      {
                                       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                                        {
                                         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))) || false))))
                                          {
                                          }
                                         else
                                          {
                                           if(_GLF_WRAPPED_IF_FALSE(false))
                                            {
                                            }
                                           else
                                            {
                                             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (true ? max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) : _GLF_FUZZED(sign(injectionSwitch))))).x > injectionSwitch.y))))
                                              {
                                              }
                                             else
                                              {
                                               do
                                                {
                                                 barrier();
                                                }
                                               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
                                              }
                                            }
                                          }
                                        }
                                       else
                                        {
                                        }
                                      }
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                }
                               else
                                {
                                }
                              }
                             else
                              {
                              }
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), true, false, false))))));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
}
