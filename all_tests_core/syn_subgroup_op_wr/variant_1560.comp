#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
 uvec3 GLF_merged2_0_2_47_2_1_17GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_id;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 uvec3 GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) | (0))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))), false, false))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
      {
      }
     else
      {
       barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid;
 GLF_merged2_0_2_47_2_1_17GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_id.xy = GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid;
 GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy = GLF_merged2_0_2_47_2_1_17GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_id.xy;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_size.x = subgroup_id;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.5), _GLF_FUZZED(-92.75)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y))));
 GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x = GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_size.x;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     barrier();
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     barrier();
    }
   for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_size.y = subgroup_local_id;
  }
 else
  {
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     GLF_merged2_0_2_47_2_1_17GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_id.z = GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_size.y;
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, tan(0.0), round(length(normalize(1.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_size.z = workgroup_size;
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) * (injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 1.0)), injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_size.z * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(1u), uint(1u))) << _GLF_IDENTITY(uint(0u), uint(0u))), (((0u << _GLF_IDENTITY(uint(1u), uint(1u))) << _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u)), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, 0u ^ (0u)) ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) ^ (workgroup_base)))) << 0u)) / 1u, min(_GLF_IDENTITY((_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(1u), uint(1u))) << _GLF_IDENTITY(uint(0u), uint(0u))), (((0u << _GLF_IDENTITY(uint(1u), uint(1u))) << _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u)), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, 0u ^ (0u)) ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) ^ (workgroup_base)))) << 0u)) / 1u, (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(1u), uint(1u))) << _GLF_IDENTITY(uint(0u), uint(0u))), (((0u << _GLF_IDENTITY(uint(1u), uint(1u))) << _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u)), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, 0u ^ (0u)) ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) ^ (workgroup_base)))) << 0u)) / 1u)), (_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(1u), uint(1u))) << _GLF_IDENTITY(uint(0u), uint(0u))), (((0u << _GLF_IDENTITY(uint(1u), uint(1u))) << _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u)), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, 0u ^ (0u)) ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) ^ (workgroup_base)))) << 0u)) / 1u)))) + _GLF_IDENTITY(GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy, uvec2(_GLF_IDENTITY(uvec2(GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy), clamp(uvec2(GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy), uvec2(GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy), uvec2(GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy))))).x * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, 0u ^ (0u)) ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))))) << 0u))) - 0u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, 0u ^ (0u)) ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))))) << 0u))) - 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, 0u ^ (0u)) ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))))) << 0u))) - 0u)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, 0u ^ (0u)) ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))))) << 0u))) - 0u)))), min(_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, 0u ^ (0u)) ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))))) << 0u))) - 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, 0u ^ (0u)) ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))))) << 0u))) - 0u)))))))) / _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) - 0u))))) + GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : workgroup_base)), 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)) / _GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x * _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (workgroup_base) : _GLF_FUZZED(subgroup_local_id))))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)) / 1u)) + GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x * subgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) | (_GLF_IDENTITY(0u, (0u) + (1u ^ 1u)))) ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), workgroup_base)), 0u ^ (workgroup_base)))) << 0u)) / 1u)) + GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), uint(uvec2(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))), _GLF_IDENTITY((min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u, (0u & 115895u) | ((min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)))) / 1u)) + GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x * subgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (_GLF_IDENTITY(_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (83173u & 0u) + (workgroup_base))))), 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (83173u & 0u) + (workgroup_base))))), 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u), uint(uvec4(_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (83173u & 0u) + (workgroup_base))))), 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u), 0u, 0u, 1u)))) + (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) / 1u)) + GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x * subgroup_size)))) >> 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) | 0u), _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / ((1u | 1u) ^ _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)))))), (_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), (_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(num_workgroup)))))) - 0u)), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)) / 1u)) + GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)) / 1u), (_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)) / 1u)) - (0u ^ 0u))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), max(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) - 0u))), _GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)) / 1u, ((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), clamp(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) ^ 0u), _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)) / _GLF_IDENTITY(1u, (1u) * 1u)) - 0u)))) | 0u) + GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x * subgroup_size))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, 0u ^ (0u)) ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))))) << 0u))) - 0u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, 0u ^ (0u)) ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))))) << 0u))) - 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, 0u ^ (0u)) ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))))) << 0u))) - 0u)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, 0u ^ (0u)) ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))))) << 0u))) - 0u)))), min(_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, 0u ^ (0u)) ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))))) << 0u))) - 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, 0u ^ (0u)) ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))))) << 0u))) - 0u)))))))) / _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) - 0u))))) + GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : workgroup_base)), 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)) / _GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x * _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (workgroup_base) : _GLF_FUZZED(subgroup_local_id))))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)) / 1u)) + GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x * subgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) | (_GLF_IDENTITY(0u, (0u) + (1u ^ 1u)))) ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), workgroup_base)), 0u ^ (workgroup_base)))) << 0u)) / 1u)) + GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), uint(uvec2(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))), _GLF_IDENTITY((min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u, (0u & 115895u) | ((min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)))) / 1u)) + GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x * subgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (_GLF_IDENTITY(_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (83173u & 0u) + (workgroup_base))))), 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (83173u & 0u) + (workgroup_base))))), 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u), uint(uvec4(_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (83173u & 0u) + (workgroup_base))))), 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u), 0u, 0u, 1u)))) + (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) / 1u)) + GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x * subgroup_size)))) >> 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) | 0u), _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / ((1u | 1u) ^ _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)))))), (_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), (_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(num_workgroup)))))) - 0u)), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)) / 1u)) + GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)) / 1u), (_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)) / 1u)) - (0u ^ 0u))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), max(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) - 0u))), _GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)) / 1u, ((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), clamp(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) ^ 0u), _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)) / _GLF_IDENTITY(1u, (1u) * 1u)) - 0u)))) | 0u) + GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x * subgroup_size))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, 0u ^ (0u)) ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))))) << 0u))) - 0u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, 0u ^ (0u)) ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))))) << 0u))) - 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, 0u ^ (0u)) ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))))) << 0u))) - 0u)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, 0u ^ (0u)) ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))))) << 0u))) - 0u)))), min(_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, 0u ^ (0u)) ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))))) << 0u))) - 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, 0u ^ (0u)) ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))))) << 0u))) - 0u)))))))) / _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) - 0u))))) + GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : workgroup_base)), 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)) / _GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x * _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (workgroup_base) : _GLF_FUZZED(subgroup_local_id))))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)) / 1u)) + GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x * subgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) | (_GLF_IDENTITY(0u, (0u) + (1u ^ 1u)))) ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), workgroup_base)), 0u ^ (workgroup_base)))) << 0u)) / 1u)) + GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), uint(uvec2(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))), _GLF_IDENTITY((min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u, (0u & 115895u) | ((min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)))) / 1u)) + GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x * subgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (_GLF_IDENTITY(_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (83173u & 0u) + (workgroup_base))))), 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (83173u & 0u) + (workgroup_base))))), 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u), uint(uvec4(_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (83173u & 0u) + (workgroup_base))))), 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u), 0u, 0u, 1u)))) + (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) / 1u)) + GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x * subgroup_size)))) >> 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) | 0u), _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / ((1u | 1u) ^ _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)))))), (_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), (_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(num_workgroup)))))) - 0u)), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)) / 1u)) + GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)) / 1u), (_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)) / 1u)) - (0u ^ 0u))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), max(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) - 0u))), _GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)) / 1u, ((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), clamp(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) ^ 0u), _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)) / _GLF_IDENTITY(1u, (1u) * 1u)) - 0u)))) | 0u) + GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x * subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, 0u ^ (0u)) ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))))) << 0u))) - 0u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, 0u ^ (0u)) ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))))) << 0u))) - 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, 0u ^ (0u)) ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))))) << 0u))) - 0u)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, 0u ^ (0u)) ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))))) << 0u))) - 0u)))), min(_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, 0u ^ (0u)) ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))))) << 0u))) - 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, 0u ^ (0u)) ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)), ((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))))) << 0u))) - 0u)))))))) / _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) - 0u))))) + GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : workgroup_base)), 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)) / _GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x * _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (workgroup_base) : _GLF_FUZZED(subgroup_local_id))))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)) / 1u)) + GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x * subgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) | (_GLF_IDENTITY(0u, (0u) + (1u ^ 1u)))) ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), workgroup_base)), 0u ^ (workgroup_base)))) << 0u)) / 1u)) + GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), uint(uvec2(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))), _GLF_IDENTITY((min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u, (0u & 115895u) | ((min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)))) / 1u)) + GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x * subgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (_GLF_IDENTITY(_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (83173u & 0u) + (workgroup_base))))), 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (83173u & 0u) + (workgroup_base))))), 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u), uint(uvec4(_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (83173u & 0u) + (workgroup_base))))), 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u), 0u, 0u, 1u)))) + (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) / 1u)) + GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x * subgroup_size)))) >> 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) | 0u), _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / ((1u | 1u) ^ _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)))))), (_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), (_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(num_workgroup)))))) - 0u)), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)) / 1u)) + GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)) / 1u), (_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)) / 1u)) - (0u ^ 0u))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), max(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) - 0u))), _GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)) / 1u, ((_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), clamp(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) ^ 0u), _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) << 0u)) / _GLF_IDENTITY(1u, (1u) * 1u)) - 0u)))) | 0u) + GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x * subgroup_size))))) - 0u) + GLF_merged2_0_2_47_2_1_17GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_id.z;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.y = virtual_gid;
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x, max(GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x, _GLF_IDENTITY(GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x, (_GLF_IDENTITY(GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread, (GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread) | (GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread)).xy, ~ (~ (GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy))).x, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread, (GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread) | (GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread)).xy, ~ (~ (GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread, (GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread) | (GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread)).xy, ~ (~ (GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread, (GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread) | (GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread)).xy, ~ (~ (GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy))).x, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread, (GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread) | (GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread)).xy, ~ (~ (GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy))).x))))), 0u, 1u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread, (GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread) | (GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread)).xy, max(_GLF_IDENTITY(GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread, (GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread) | (GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread)).xy, _GLF_IDENTITY(GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread, (GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread) | (GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread)).xy)), ~ (~ (GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread, (GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread) | (GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread)).xy, ~ (~ (GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread, (GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread) | (GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread)).xy, ~ (~ (GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread, (GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread) | (GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread)).xy, ~ (~ (GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy)))) | uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x)), 0u, 1u)) >> uvec3(0u, 0u, 0u)))), GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x))) - _GLF_IDENTITY(0u, (0u) ^ 0u)))), uint(uvec2(_GLF_IDENTITY(GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x, clamp(GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x, GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x, GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.x)), 0u)))) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-0.9)), vec2(_GLF_FUZZED((-3831.5455 - -682.035)), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.8), _GLF_FUZZED(-757.716)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x))))) * subgroup_size + ((GLF_merged2_0_2_47_2_1_17GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_id.z + _GLF_IDENTITY(1, (false ? _GLF_FUZZED((1878 % -92533)) : 1))) % subgroup_size);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool((false))))))))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (false ? _GLF_FUZZED(-69969) : _GLF_IDENTITY(4, max(4, 4))))) - (0 | 0)), _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))) >> 0, max((_GLF_IDENTITY(4, max(4, 4))) >> 0, (_GLF_IDENTITY(4, max(4, 4))) >> 0)))) - 0), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = atomicLoad(_GLF_IDENTITY(buf[GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.y], ~ (~ (buf[GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.y]))), 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.z = _GLF_IDENTITY(read, max(read, _GLF_IDENTITY(read, ~ (~ (_GLF_IDENTITY(read, (read) << 0u))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) : _GLF_FUZZED(4.4))) > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) || false)))))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
        {
         do
          {
           barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     else
      {
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true)))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(false, false, false, false))) || false))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
    }
   do
    {
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     for(int _injected_loop_counter = (22071 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, false)))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(GLF_merged2_0_2_47_2_1_17GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_id.z + 1, (_GLF_IDENTITY(GLF_merged2_0_2_47_2_1_17GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_id.z + 1, (_GLF_IDENTITY(GLF_merged2_0_2_47_2_1_17GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_id.z, ~ (~ (GLF_merged2_0_2_47_2_1_17GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_id.z))) + 1) - 0u)) | (GLF_merged2_0_2_47_2_1_17GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_id.z + 1)) < subgroup_size)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               do
                {
                 do
                  {
                   do
                    {
                     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
              }
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               do
                {
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             barrier();
            }
          }
         else
          {
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
        {
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(59900) : 1))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)); _injected_loop_counter --)
              {
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                      {
                       barrier();
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(5522.3506)))))));
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           do
            {
             barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0)), (true ? vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0)) : _GLF_FUZZED(injectionSwitch)))) : _GLF_FUZZED(injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0)), (true ? vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0)) : _GLF_FUZZED(injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))))).y, min(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0)), (true ? vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))).y, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0)), (true ? vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))).y))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 0.0)), (true ? vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))).y, min(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0)), (true ? vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))).y, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0)), (true ? vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(sin(0.0), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0), mat3x4(mat3x4(mat3x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(sin(0.0), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0))))), (float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(sin(0.0), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0), mat3x4(mat3x4(mat3x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(sin(0.0), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0)))))) / 1.0)), 0.0, 0.0, 0.0)) : _GLF_FUZZED(injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))).y))))), false, false, true))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
                {
                 barrier();
                }
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         atomicStore(checker[GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.y], GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.z, 4, 64, 4);
        }
       else
        {
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))));
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     subgroupAll(false);
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   else
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(true)))))
              {
               barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               else
                {
                }
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
            barrier();
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)));
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)))) > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           atomicStore(checker[_GLF_IDENTITY(GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.y, (GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.xy.y) ^ (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))))], GLF_merged2_0_2_47_2_1_4GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread.z, 4, 64, _GLF_IDENTITY(4, min(4, 4)));
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (int(_GLF_ONE(1.0, injectionSwitch.y)) & (0 | 1))); _injected_loop_counter ++)
        {
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
      }
     do
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(3), int(3))) ^ (0)), _GLF_IDENTITY(0, max(0, 0))), clamp(max(_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) | (int(3)))) >> 0))) ^ (0)), _GLF_IDENTITY(0, max(0, 0))), _GLF_IDENTITY(max(_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(3), int(3))) ^ (0)), _GLF_IDENTITY(0, max(0, 0))), int(ivec4(max(_GLF_IDENTITY(0, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), ((0 >> _GLF_IDENTITY(int(3), int(3)))) | ((0 >> _GLF_IDENTITY(int(3), int(3))))) ^ (0)), _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-37025)))))), 0, 0, 0))), max(_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(3), int(3))) ^ (0)), _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), max(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, 0))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(3), int(3))) ^ (0)), _GLF_IDENTITY(0, max(0, 0))), clamp(max(_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) | (int(3)))) >> 0))) ^ (0)), _GLF_IDENTITY(0, max(0, 0))), _GLF_IDENTITY(max(_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(3), int(3))) ^ (0)), _GLF_IDENTITY(0, max(0, 0))), int(ivec4(max(_GLF_IDENTITY(0, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), ((0 >> _GLF_IDENTITY(int(3), int(3)))) | ((0 >> _GLF_IDENTITY(int(3), int(3))))) ^ (0)), _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-37025)))))), 0, 0, 0))), max(_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(3), int(3))) ^ (0)), _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), max(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, 0))))))), (_GLF_IDENTITY(max(_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(3), int(3))) ^ (0)), _GLF_IDENTITY(0, max(0, 0))), clamp(max(_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) | (int(3)))) >> 0))) ^ (0)), _GLF_IDENTITY(0, max(0, 0))), _GLF_IDENTITY(max(_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(3), int(3))) ^ (0)), _GLF_IDENTITY(0, max(0, 0))), int(ivec4(max(_GLF_IDENTITY(0, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), ((0 >> _GLF_IDENTITY(int(3), int(3)))) | ((0 >> _GLF_IDENTITY(int(3), int(3))))) ^ (0)), _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-37025)))))), 0, 0, 0))), max(_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(3), int(3))) ^ (0)), _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), max(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, 0)))))))) | (_GLF_IDENTITY(max(_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(3), int(3))) ^ (0)), _GLF_IDENTITY(0, max(0, 0))), clamp(max(_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) | (int(3)))) >> 0))) ^ (0)), _GLF_IDENTITY(0, max(0, 0))), _GLF_IDENTITY(max(_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(3), int(3))) ^ (0)), _GLF_IDENTITY(0, max(0, 0))), int(ivec4(max(_GLF_IDENTITY(0, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), ((0 >> _GLF_IDENTITY(int(3), int(3)))) | ((0 >> _GLF_IDENTITY(int(3), int(3))))) ^ (0)), _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-37025)))))), 0, 0, 0))), max(_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(3), int(3))) ^ (0)), _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), max(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, 0))))))))), _GLF_IDENTITY(max(_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(3), int(3))) ^ (0)), _GLF_IDENTITY(0, max(0, 0))), clamp(max(_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) | (int(3)))) >> 0))) ^ (0)), _GLF_IDENTITY(0, max(0, 0))), _GLF_IDENTITY(max(_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(3), int(3))) ^ (0)), _GLF_IDENTITY(0, max(0, 0))), int(ivec4(max(_GLF_IDENTITY(0, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), ((0 >> _GLF_IDENTITY(int(3), int(3)))) | ((0 >> _GLF_IDENTITY(int(3), int(3))))) ^ (0)), _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-37025)))))), 0, 0, 0))), max(_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(3), int(3))) ^ (0)), _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), max(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, 0))))))), _GLF_IDENTITY(max(_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(3), int(3))) ^ (0)), _GLF_IDENTITY(0, max(0, 0))), clamp(max(_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) | (int(3)))) >> 0))) ^ (0)), _GLF_IDENTITY(0, max(0, 0))), _GLF_IDENTITY(max(_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(3), int(3))) ^ (0)), _GLF_IDENTITY(0, max(0, 0))), int(ivec4(max(_GLF_IDENTITY(0, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), ((0 >> _GLF_IDENTITY(int(3), int(3)))) | ((0 >> _GLF_IDENTITY(int(3), int(3))))) ^ (0)), _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-37025)))))), 0, 0, 0))), max(_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(3), int(3))) ^ (0)), _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), max(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, 0)))))))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(63435))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(63435), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_FUZZED(63435), clamp(_GLF_FUZZED(63435), _GLF_FUZZED(63435), _GLF_IDENTITY(_GLF_FUZZED(63435), max(_GLF_FUZZED(63435), _GLF_IDENTITY(_GLF_FUZZED(63435), (_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_FUZZED(63435), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_FUZZED(63435)) | 0))))))), int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec2(_GLF_IDENTITY(_GLF_FUZZED(63435), clamp(_GLF_IDENTITY(_GLF_FUZZED(63435), int(ivec4(_GLF_IDENTITY(_GLF_FUZZED(63435), int(int(_GLF_FUZZED(63435)))), 0, 0, 1))), _GLF_FUZZED(63435), _GLF_FUZZED(_GLF_IDENTITY(63435, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(63435, (63435) | (63435)), 0, 1, 1), ~ (~ (ivec4(_GLF_IDENTITY(63435, (63435) | (63435)), 0, 1, 1))))))))), int(_GLF_ONE(1.0, injectionSwitch.y)))) ^ ivec2(0, 0)))))), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(63435)))) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(63435)))))) | 0)) << 0)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(63435))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) | (1)) : _GLF_IDENTITY(_GLF_FUZZED(63435), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_FUZZED(63435), clamp(_GLF_FUZZED(63435), _GLF_FUZZED(63435), _GLF_IDENTITY(_GLF_FUZZED(63435), max(_GLF_FUZZED(63435), _GLF_IDENTITY(_GLF_FUZZED(63435), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_FUZZED(_GLF_IDENTITY(63435, (_GLF_IDENTITY(63435, clamp(_GLF_IDENTITY(63435, (63435) / 1), 63435, 63435))) << (0 & 77635))))))))), int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec2(_GLF_IDENTITY(_GLF_FUZZED(63435), clamp(_GLF_FUZZED(63435), _GLF_FUZZED(63435), _GLF_FUZZED(63435))), int(_GLF_ONE(1.0, injectionSwitch.y)))) ^ ivec2(0, 0)))))), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(63435)))) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(63435)))))) | 0)) << 0)), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(63435))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) | (1)) : _GLF_IDENTITY(_GLF_FUZZED(63435), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_FUZZED(63435), _GLF_IDENTITY(clamp(_GLF_FUZZED(63435), _GLF_FUZZED(63435), _GLF_IDENTITY(_GLF_FUZZED(63435), max(_GLF_FUZZED(63435), _GLF_IDENTITY(_GLF_FUZZED(63435), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_FUZZED(_GLF_IDENTITY(63435, (_GLF_IDENTITY(63435, clamp(_GLF_IDENTITY(63435, (63435) / 1), 63435, 63435))) << (0 & 77635)))))))), clamp(clamp(_GLF_FUZZED(63435), _GLF_FUZZED(63435), _GLF_IDENTITY(_GLF_FUZZED(63435), max(_GLF_FUZZED(63435), _GLF_IDENTITY(_GLF_FUZZED(63435), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_FUZZED(_GLF_IDENTITY(63435, (_GLF_IDENTITY(63435, clamp(_GLF_IDENTITY(63435, (63435) / 1), 63435, 63435))) << (0 & 77635)))))))), clamp(_GLF_FUZZED(63435), _GLF_FUZZED(63435), _GLF_IDENTITY(_GLF_FUZZED(63435), max(_GLF_FUZZED(63435), _GLF_IDENTITY(_GLF_FUZZED(63435), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_FUZZED(_GLF_IDENTITY(63435, (_GLF_IDENTITY(63435, clamp(_GLF_IDENTITY(63435, (63435) / 1), 63435, 63435))) << (0 & 77635)))))))), clamp(_GLF_FUZZED(63435), _GLF_FUZZED(63435), _GLF_IDENTITY(_GLF_FUZZED(63435), max(_GLF_FUZZED(63435), _GLF_IDENTITY(_GLF_FUZZED(63435), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_FUZZED(_GLF_IDENTITY(63435, (_GLF_IDENTITY(63435, clamp(_GLF_IDENTITY(63435, (63435) / 1), 63435, 63435))) << (0 & 77635))))))))))), int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((ivec2(_GLF_IDENTITY(_GLF_FUZZED(63435), clamp(_GLF_FUZZED(63435), _GLF_FUZZED(63435), _GLF_FUZZED(63435))), int(_GLF_ONE(1.0, injectionSwitch.y)))) ^ ivec2(0, 0), min((ivec2(_GLF_IDENTITY(_GLF_FUZZED(63435), clamp(_GLF_FUZZED(63435), _GLF_FUZZED(63435), _GLF_FUZZED(63435))), int(_GLF_ONE(1.0, injectionSwitch.y)))) ^ ivec2(0, 0), (ivec2(_GLF_IDENTITY(_GLF_FUZZED(63435), clamp(_GLF_FUZZED(63435), _GLF_FUZZED(63435), _GLF_FUZZED(63435))), int(_GLF_ONE(1.0, injectionSwitch.y)))) ^ ivec2(0, 0)))))))), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(63435)))) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(63435)))))) | 0)) << 0)))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, (false) || false)))), (! (! (! (_GLF_IDENTITY(false, (false) || false))))) || false)))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), false, true))))))))
            barrier();
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.5) : 0.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), injectionSwitch.x))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             subgroupAll(true);
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))));
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
      }
    }
  }
}
