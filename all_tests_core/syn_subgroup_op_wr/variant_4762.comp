#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-708.684), _GLF_FUZZED(_GLF_IDENTITY(8.9, max(8.9, 8.9)))), bvec2(false, _GLF_IDENTITY(false, (false) || false)))), injectionSwitch)), injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-708.684), _GLF_FUZZED(8.9)), bvec2(false, false))), injectionSwitch)), injectionSwitch)).y))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(false, false), false)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(false, false), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || (_GLF_IDENTITY(true, ! (! (true))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, abs(0.0), 1.0, 1.0, sqrt(0.0), 0.0, tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(cos(0.0), 0.0)), dot(vec2(1.0, 0.0), vec2(cos(0.0), 0.0))), 0.0, 0.0, 1.0))), bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, true, true), false)))))), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, abs(0.0), 1.0, 1.0, sqrt(0.0), 0.0, tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(cos(0.0), 0.0)), dot(vec2(1.0, 0.0), vec2(cos(0.0), 0.0))), 0.0, 0.0, 1.0))), bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, true, true), false)))))))))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), float(mat4(injectionSwitch.y, abs(0.0), 1.0, 1.0, sqrt(0.0), 0.0, tan(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(cos(0.0), 0.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(cos(0.0), 0.0), vec2(_GLF_IDENTITY(mat2x3(vec2(cos(0.0), 0.0), 0.0, 0.0, sin(0.0), 0.0), (mat2x3(vec2(cos(0.0), 0.0), 0.0, 0.0, sin(0.0), 0.0)) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 0.0, 0.0, 1.0))), bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), true, true), bvec3(bvec4(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, true, true), false)))))), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, float(mat4(injectionSwitch.y, abs(0.0), 1.0, 1.0, sqrt(0.0), 0.0, tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(cos(0.0), 0.0)), dot(vec2(1.0, 0.0), vec2(cos(0.0), 0.0))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1422.3781))), 0.0, 1.0))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, true, true), false))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, true, true), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, true, true), false))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, true, true), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, true, true), false))))))))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x))), min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), false || ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x))), min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.8)), float(injectionSwitch.y), bool(true)))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x, gl_WorkGroupID.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(487.497, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(487.497, max(487.497, 487.497)), 0.0, sqrt(1.0), 0.0, 1.0, 0.0, sin(length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0), mat2x4(_GLF_IDENTITY(mat3x4(mat2x4(_GLF_IDENTITY(487.497, max(487.497, 487.497)), 0.0, sqrt(1.0), 0.0, 1.0, 0.0, sin(length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0)), transpose(transpose(mat3x4(mat2x4(_GLF_IDENTITY(487.497, max(487.497, 487.497)), 0.0, sqrt(1.0), 0.0, 1.0, 0.0, sin(length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0)))))))), float(mat3x4(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(487.497, max(487.497, 487.497)), 0.0, sqrt(1.0), 0.0, 1.0, 0.0, sin(length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0), mat2x4(_GLF_IDENTITY(mat3x4(mat2x4(_GLF_IDENTITY(487.497, max(487.497, 487.497)), 0.0, sqrt(1.0), 0.0, 1.0, 0.0, sin(length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0)), transpose(transpose(mat3x4(mat2x4(_GLF_IDENTITY(487.497, max(487.497, 487.497)), 0.0, sqrt(1.0), 0.0, 1.0, 0.0, sin(length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0)))))))), 1.0, 0.0, sqrt(0.0), 1.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(487.497, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(487.497, max(487.497, 487.497)), 0.0, sqrt(1.0), 0.0, 1.0, 0.0, sin(length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0), mat2x4(_GLF_IDENTITY(mat3x4(mat2x4(_GLF_IDENTITY(487.497, max(487.497, 487.497)), 0.0, sqrt(1.0), 0.0, 1.0, 0.0, sin(length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0)), transpose(transpose(mat3x4(mat2x4(_GLF_IDENTITY(487.497, max(487.497, 487.497)), 0.0, sqrt(1.0), 0.0, 1.0, 0.0, sin(length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0)))))))), float(mat3x4(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(487.497, max(487.497, 487.497)), 0.0, sqrt(1.0), 0.0, 1.0, 0.0, sin(length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0), mat2x4(_GLF_IDENTITY(mat3x4(mat2x4(_GLF_IDENTITY(487.497, max(487.497, 487.497)), 0.0, sqrt(1.0), 0.0, 1.0, 0.0, sin(length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0)), transpose(transpose(mat3x4(mat2x4(_GLF_IDENTITY(487.497, max(487.497, 487.497)), 0.0, sqrt(1.0), 0.0, 1.0, 0.0, sin(length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0)))))))), 1.0, 0.0, sqrt(0.0), 1.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))), float(_GLF_FUZZED(332.444)), bool(false))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)), log(1.0), 1.0, 1.0)), max(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)), log(1.0), 1.0, 1.0)), float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * mat2(1.0)).x, max(injectionSwitch.x, injectionSwitch.x)), log(1.0), 1.0, 1.0))))))), injectionSwitch.x), (clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(487.497, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(487.497, _GLF_IDENTITY(max(487.497, 487.497), max(max(487.497, 487.497), _GLF_IDENTITY(max(487.497, 487.497), (max(487.497, 487.497)) * 1.0)))), 0.0, sqrt(1.0), 0.0, 1.0, 0.0, sin(length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), mix(vec4((vec4(0.0, 0.0, 0.0, 0.0))[0], _GLF_FUZZED(9.7), _GLF_FUZZED(5.0), _GLF_FUZZED(1.8)), vec4(_GLF_FUZZED(-9.1), (vec4(0.0, 0.0, 0.0, 0.0))[1], (vec4(0.0, 0.0, 0.0, 0.0))[2], (vec4(0.0, 0.0, 0.0, 0.0))[3]), bvec4(false, true, true, true)))) + vec4(0.0, 0.0, 0.0, 0.0)))), 1.0), mat2x4(_GLF_IDENTITY(mat3x4(mat2x4(_GLF_IDENTITY(487.497, max(487.497, 487.497)), 0.0, sqrt(1.0), 0.0, 1.0, 0.0, sin(length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0)), transpose(transpose(mat3x4(mat2x4(_GLF_IDENTITY(487.497, max(487.497, 487.497)), 0.0, sqrt(1.0), 0.0, 1.0, 0.0, sin(length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0)))))))), float(mat3x4(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(487.497, max(487.497, 487.497)), 0.0, sqrt(1.0), 0.0, 1.0, 0.0, sin(length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0), mat2x4(_GLF_IDENTITY(mat3x4(mat2x4(_GLF_IDENTITY(487.497, max(487.497, 487.497)), 0.0, sqrt(1.0), 0.0, 1.0, 0.0, sin(length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0)), transpose(transpose(mat3x4(mat2x4(_GLF_IDENTITY(487.497, max(487.497, 487.497)), 0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), max(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))))), 0.0, sin(length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0)))))))), 1.0, 0.0, sqrt(0.0), 1.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x)), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(_GLF_FUZZED(injectionSwitch), 1.0, 0.0, abs(1.0), 1.0), _GLF_IDENTITY((mat3x2(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (true ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(asin(injectionSwitch)))), 1.0, 0.0, abs(1.0), 1.0)) * mat3(1.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + ((mat3x2(_GLF_FUZZED(injectionSwitch), 1.0, 0.0, abs(1.0), 1.0)) * mat3(1.0))))), clamp(vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))), 1.0, 0.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0), _GLF_IDENTITY((mat3x2(_GLF_FUZZED(injectionSwitch), 1.0, 0.0, abs(1.0), 1.0)) * mat3(1.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + ((mat3x2(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_FUZZED(-49.50), _GLF_FUZZED((-7.9 * -471.359))), vec2((_GLF_FUZZED(injectionSwitch))[0], (_GLF_FUZZED(injectionSwitch))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), 1.0, 0.0, abs(1.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)))) * mat3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1171.8453) : 1.0))))))), vec2(_GLF_IDENTITY(mat3x2(_GLF_FUZZED(injectionSwitch), 1.0, 0.0, abs(1.0), 1.0), _GLF_IDENTITY((mat3x2(_GLF_FUZZED(injectionSwitch), 1.0, 0.0, abs(1.0), 1.0)) * mat3(1.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + ((mat3x2(_GLF_FUZZED(injectionSwitch), 1.0, 0.0, abs(1.0), 1.0)) * mat3(1.0))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(_GLF_FUZZED(injectionSwitch), 1.0, 0.0, abs(1.0), 1.0), _GLF_IDENTITY((mat3x2(_GLF_FUZZED(injectionSwitch), 1.0, 0.0, abs(1.0), 1.0)) * mat3(1.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + ((mat3x2(_GLF_FUZZED(injectionSwitch), 1.0, 0.0, abs(1.0), 1.0)) * mat3(1.0))))), _GLF_IDENTITY(min(vec2(_GLF_IDENTITY(mat3x2(_GLF_FUZZED(injectionSwitch), 1.0, 0.0, abs(1.0), 1.0), _GLF_IDENTITY((mat3x2(_GLF_FUZZED(injectionSwitch), 1.0, 0.0, abs(1.0), 1.0)) * mat3(1.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + ((mat3x2(_GLF_FUZZED(injectionSwitch), 1.0, 0.0, abs(1.0), 1.0)) * mat3(1.0))))), vec2(_GLF_IDENTITY(mat3x2(_GLF_FUZZED(injectionSwitch), 1.0, 0.0, abs(1.0), 1.0), _GLF_IDENTITY((mat3x2(_GLF_FUZZED(injectionSwitch), 1.0, 0.0, abs(1.0), 1.0)) * mat3(1.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + ((mat3x2(_GLF_FUZZED(injectionSwitch), 1.0, 0.0, abs(1.0), 1.0)) * mat3(1.0)))))), max(min(vec2(_GLF_IDENTITY(mat3x2(_GLF_FUZZED(injectionSwitch), 1.0, 0.0, abs(1.0), 1.0), _GLF_IDENTITY((mat3x2(_GLF_FUZZED(injectionSwitch), 1.0, 0.0, abs(1.0), 1.0)) * mat3(1.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + ((mat3x2(_GLF_FUZZED(injectionSwitch), 1.0, 0.0, abs(1.0), 1.0)) * mat3(1.0))))), vec2(_GLF_IDENTITY(mat3x2(_GLF_FUZZED(injectionSwitch), 1.0, 0.0, abs(1.0), 1.0), _GLF_IDENTITY((mat3x2(_GLF_FUZZED(injectionSwitch), 1.0, 0.0, abs(1.0), 1.0)) * mat3(1.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + ((mat3x2(_GLF_FUZZED(injectionSwitch), 1.0, 0.0, abs(1.0), 1.0)) * mat3(1.0)))))), min(vec2(_GLF_IDENTITY(mat3x2(_GLF_FUZZED(injectionSwitch), 1.0, 0.0, abs(1.0), 1.0), _GLF_IDENTITY((mat3x2(_GLF_FUZZED(injectionSwitch), 1.0, 0.0, abs(1.0), 1.0)) * mat3(1.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + ((mat3x2(_GLF_FUZZED(injectionSwitch), 1.0, 0.0, abs(1.0), 1.0)) * mat3(1.0))))), vec2(_GLF_IDENTITY(mat3x2(_GLF_FUZZED(injectionSwitch), 1.0, 0.0, abs(1.0), 1.0), _GLF_IDENTITY((mat3x2(_GLF_FUZZED(injectionSwitch), 1.0, 0.0, abs(1.0), 1.0)) * mat3(1.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + ((mat3x2(_GLF_FUZZED(injectionSwitch), 1.0, 0.0, abs(1.0), 1.0)) * mat3(1.0)))))))))))) : injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)), log(1.0), 1.0, 1.0)), max(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)), log(1.0), 1.0, 1.0)), float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) + 0.0)), log(1.0), 1.0, 1.0))))))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).x)) / cos(0.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(dot(vec3(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)), dot(vec3(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))), 1.0, 1.0, 0.0, 1.0)))))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(false, ! (! (false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(false, ! (! (false)))))), true && (bool(bool(_GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(false, ! (! (false))))))))), bool(bvec3(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(false, ! (! (false)))))), true && (bool(bool(_GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(false, ! (! (false))))))))), true, true))))))))))) || false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))) || false)))), ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))) || false))))) && true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_id) : ~ (0u))))) << _GLF_IDENTITY(uint(3u), uint(3u))) ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (true ? (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) : _GLF_FUZZED(subgroup_local_id)))) + subgroup_local_id) + 0u), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), 0u | (_GLF_IDENTITY(0u, (0u) >> 0u))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) | (3u))), uint(3u))) ^ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))) + subgroup_local_id) + _GLF_IDENTITY(0u, (0u) | (0u)))) << 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * ((injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-716.272), _GLF_FUZZED(-4.0)), bvec2(false, false))), injectionSwitch)).y))), false || (bool(bool((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))), true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), false || (bool(bool((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))), true))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true, false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(_GLF_IDENTITY(uvec3((subgroup_local_id + 1) % subgroup_size, 1u, 1u), min(uvec3((subgroup_local_id + 1) % subgroup_size, 1u, 1u), uvec3((subgroup_local_id + 1) % subgroup_size, 1u, 1u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), (true ? _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) : _GLF_FUZZED(workgroup_base)))) | (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) + _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3((subgroup_local_id + 1) % subgroup_size, 1u, 1u), min(uvec3((subgroup_local_id + 1) % subgroup_size, 1u, 1u), uvec3((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), 1u, 1u)))), (uint(_GLF_IDENTITY(uvec3((subgroup_local_id + 1) % subgroup_size, 1u, 1u), min(uvec3((subgroup_local_id + 1) % subgroup_size, 1u, 1u), uvec3((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), 1u, 1u))))) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : 0u)) ^ (workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_id, (1u ^ 0u), 1u), (uvec3(subgroup_id, (1u ^ 0u), 1u)) ^ (uvec3(0u, 0u, 0u) & uvec3(28177u, 13286u, 157330u)))), (0u | 0u) ^ (uint(_GLF_IDENTITY(uvec3(subgroup_id, (1u ^ 0u), 1u), (uvec3(subgroup_id, (1u ^ 0u), 1u)) ^ (uvec3(0u, 0u, 0u) & uvec3(28177u, 13286u, 157330u)))))))) * 1u) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3((subgroup_local_id + 1) % subgroup_size, 1u, 1u), min(uvec3((subgroup_local_id + 1) % subgroup_size, 1u, 1u), uvec3((subgroup_local_id + 1) % subgroup_size, 1u, 1u))), (_GLF_IDENTITY(uvec3((subgroup_local_id + 1) % subgroup_size, 1u, 1u), min(uvec3((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size, 1u, 1u), uvec3((subgroup_local_id + 1) % subgroup_size, 1u, 1u)))) / uvec3(1u, 1u, 1u))))), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(_GLF_IDENTITY(uvec3((subgroup_local_id + 1) % subgroup_size, 1u, 1u), min(uvec3((subgroup_local_id + 1) % subgroup_size, 1u, 1u), uvec3((subgroup_local_id + 1) % subgroup_size, 1u, 1u))))))), ((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(_GLF_IDENTITY(uvec3((subgroup_local_id + 1) % subgroup_size, 1u, 1u), min(uvec3((subgroup_local_id + 1) % subgroup_size, 1u, 1u), uvec3((subgroup_local_id + 1) % subgroup_size, 1u, 1u)))))))) | 0u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, ~ (~ (4))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))], 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(! (! ((false) && true)), _GLF_IDENTITY(bool(bvec2(! (! ((false) && true)), true)), (bool(bvec2(! (! ((false) && true)), true))) || false))))), false, false, true))), false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / abs(1.0)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0))[0], injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (1) * 1)), (false ? _GLF_FUZZED(-37140) : 0 + (_GLF_IDENTITY(1, (1) * 1)))))])).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((- -0.4))), bvec2(true, false))))).x) - 0.0) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0))[0], injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (1) * 1)), (false ? _GLF_FUZZED(-37140) : 0 + (_GLF_IDENTITY(1, (1) * 1)))))])).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((- -0.4))), bvec2(true, false))))).x) - 0.0) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), false)))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0))[0], injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (1) * 1)), (false ? _GLF_FUZZED(-37140) : 0 + (_GLF_IDENTITY(1, (1) * 1)))))])).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((- -0.4))), bvec2(true, false))))).x) - 0.0) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0))[0], injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (1) * 1)), (false ? _GLF_FUZZED(-37140) : 0 + (_GLF_IDENTITY(1, (1) * 1)))))])).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((- -0.4))), bvec2(true, false))))).x) - 0.0) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), false)))))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false)))) && true)), bool(bvec3((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true))))) && true)), true, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true)), bool(bvec3((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true)), true, false)))), false || (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true)), bool(bvec3((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true)), true, false))))))), bool(bvec3(! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true)), bool(bvec3((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true)), true, false)))), _GLF_IDENTITY(false || (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true)), bool(bvec3((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true)), true, false))))), false || (_GLF_IDENTITY(false || (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true)), bool(bvec3((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true)), true, false))))), ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))) || (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true, ! (! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true)))), ! (! (! (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true, ! (! ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.4)), bool(false))))))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true))))))))))), bool(bvec3((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true)), true, false)))))))))))), false, _GLF_IDENTITY(true, false || (true)))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0))[0], _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch))[_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) | 0)), (false ? _GLF_FUZZED(_GLF_IDENTITY(-37140, min(-37140, -37140))) : 0 + (_GLF_IDENTITY(1, (1) * 1)))))])).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.5), _GLF_IDENTITY((injectionSwitch), vec2(mat4x2((injectionSwitch), 0.0, 1.0, 1.0, 0.0, sqrt(1.0), exp(0.0))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((- -0.4))), bvec2(true, false))))).x) - 0.0) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) | (0 | 0))])).x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0))[0], injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (1) * 1)), (false ? _GLF_FUZZED(-37140) : 0 + (_GLF_IDENTITY(1, (1) * 1)))))])).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0))[0], injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (1) * 1)), (false ? _GLF_FUZZED(-37140) : 0 + (_GLF_IDENTITY(1, (1) * 1)))))])).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0))[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (1) * 1)), (false ? _GLF_FUZZED(-37140) : 0 + (_GLF_IDENTITY(1, (1) * 1)))))], min(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (1) * 1)), (false ? _GLF_FUZZED(-37140) : 0 + (_GLF_IDENTITY(1, (1) * 1)))))], injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (1) * 1)), (false ? _GLF_FUZZED(-37140) : 0 + (_GLF_IDENTITY(1, (1) * 1)))))])))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((- -0.4))), bvec2(_GLF_IDENTITY(true, (true) && true), false))))).x) - 0.0) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), vec2(injectionSwitch[0], injectionSwitch[1])))[0], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), vec2(injectionSwitch[0], injectionSwitch[1])))[1]), vec2(_GLF_FUZZED(5.4), _GLF_FUZZED(vec4(81.75, 3.0, -7130.6014, -7.6).b)), bvec2(false, false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)))), false)))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0))[0], injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (1) * 1)), (false ? _GLF_FUZZED(-37140) : 0 + (_GLF_IDENTITY(1, (1) * 1)))))])).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((- -0.4))), bvec2(true, false))))).x) - 0.0) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0)))[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(false ? _GLF_FUZZED(-37140) : 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), clamp((_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)))), 0 + (_GLF_IDENTITY(false ? _GLF_FUZZED(-37140) : 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), clamp((_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)))), (false ? _GLF_FUZZED(-37140) : 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), clamp((_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1))))) | (false ? _GLF_FUZZED(-37140) : 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), clamp((_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)))))))))))], _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(false ? _GLF_FUZZED(-37140) : 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), clamp((_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)))), 0 + (_GLF_IDENTITY(false ? _GLF_FUZZED(-37140) : 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), clamp((_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)))), (false ? _GLF_FUZZED(-37140) : 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), clamp((_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1))))) | (false ? _GLF_FUZZED(-37140) : 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), clamp((_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)))))))))))], _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(9244.7221)), float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), bool(true)))), 1.0, 0.0, 1.0, 1.0), mat3x2(mat3x4(mat3x2(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(false ? _GLF_FUZZED(-37140) : 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), clamp((_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)))), 0 + (_GLF_IDENTITY(false ? _GLF_FUZZED(-37140) : 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), clamp((_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)))), (false ? _GLF_FUZZED(-37140) : 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), clamp((_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1))))) | (false ? _GLF_FUZZED(-37140) : 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), clamp((_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)))))))))))], _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(9244.7221)), float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), bool(true)))), 1.0, 0.0, 1.0, 1.0))))), min(float(_GLF_IDENTITY(mat3x2(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(false ? _GLF_FUZZED(-37140) : 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), clamp((_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)))), 0 + (_GLF_IDENTITY(false ? _GLF_FUZZED(-37140) : 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), clamp((_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)))), (false ? _GLF_FUZZED(-37140) : 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), clamp((_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1))))) | (false ? _GLF_FUZZED(-37140) : 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), clamp((_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)))))))))))], _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(9244.7221)), float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), bool(true)))), 1.0, 0.0, 1.0, 1.0), mat3x2(mat3x4(mat3x2(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(false ? _GLF_FUZZED(-37140) : 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), clamp((_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)))), 0 + (_GLF_IDENTITY(false ? _GLF_FUZZED(-37140) : 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), clamp((_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)))), (false ? _GLF_FUZZED(-37140) : 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), clamp((_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1))))) | (false ? _GLF_FUZZED(-37140) : 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), clamp((_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)))))))))))], _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(9244.7221)), float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), bool(true)))), 1.0, 0.0, 1.0, 1.0))))), float(_GLF_IDENTITY(mat3x2(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(false ? _GLF_FUZZED(-37140) : 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), clamp((_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)))), 0 + (_GLF_IDENTITY(false ? _GLF_FUZZED(-37140) : 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), clamp((_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)))), (false ? _GLF_FUZZED(-37140) : 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), clamp((_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1))))) | (false ? _GLF_FUZZED(-37140) : 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), clamp((_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)))))))))))], _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(9244.7221)), float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), bool(true)))), 1.0, 0.0, 1.0, 1.0), mat3x2(mat3x4(mat3x2(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(false ? _GLF_FUZZED(-37140) : 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), clamp((_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)))), 0 + (_GLF_IDENTITY(false ? _GLF_FUZZED(-37140) : 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), clamp((_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)))), (false ? _GLF_FUZZED(-37140) : 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), clamp((_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1))))) | (false ? _GLF_FUZZED(-37140) : 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), clamp((_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)))))))))))], _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(9244.7221)), float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), bool(true)))), 1.0, 0.0, 1.0, 1.0)))))))))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, determinant(mat4(exp(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0)), clamp(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, determinant(mat4(exp(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, determinant(mat4(exp(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0)), _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, determinant(mat4(exp(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0)), mix(vec2((vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, determinant(mat4(exp(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0)))[0], _GLF_FUZZED(-2.6)), vec2(_GLF_FUZZED(-3375.9491), (vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, determinant(mat4(exp(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0)))[1]), bvec2(false, true)))))).y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.5), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED((- -0.4)), (_GLF_FUZZED((- -0.4))) - 0.0)), min(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED((- -0.4)), (_GLF_FUZZED((- -0.4))) - 0.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED((- -0.4)), (_GLF_FUZZED((- -0.4))) - 0.0)))), bvec2(true, false))))).x) - 0.0) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) + vec2(0.0, _GLF_IDENTITY(0.0, abs(0.0) + (0.0)))), vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0))[0], injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (1) * 1)), (false ? _GLF_FUZZED(-37140) : 0 + (_GLF_IDENTITY(1, (1) * 1)))))])).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((- -0.4))), bvec2(true, false)))), vec2(_GLF_IDENTITY(mat4x2(min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((- -0.4))), bvec2(true, false)))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(-1.6, 733.858, 3.0, -4.5, -3.1, -5085.7459, -9.3, 275.488)) : mat4x2(min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((- -0.4))), bvec2(true, false)))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))))).x) - 0.0) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), false)))))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))) || false))) || false)))) && true)), bool(bvec3((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) || false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true))))) && true)), true, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true)), bool(bvec3((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true)), true, false)))), (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, false || (((injectionSwitch.x > injectionSwitch.y)) || false))))) && true)), bool(bvec3((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true)), true, false))))) && true), false || (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true)), bool(bvec3((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false), true, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false), true, true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false), true, true))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false), true, true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false), true, true))))))))), false))))))) && true)), true, false))))))), bool(bvec3(! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true)), bool(bvec3((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true)), true, false)))), _GLF_IDENTITY(false || (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true)), bool(bvec3((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true)), true, false))))), false || (_GLF_IDENTITY(false || (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(fract(7.2)))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true)), bool(bvec3((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false))) && true)), true, false))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))) || (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec2(true, true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))) && true, ! (! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false)))))) && true)))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), true))) || false))) && true, ! (! ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.4)), bool(false)))), min(0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.4)), bool(false)))), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.4)), bool(false))))))))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true)))))), false || ((! (! (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), true))) || false))) && true, ! (! ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.4)), bool(false)))), min(0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.4)), bool(false)))), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.4)), bool(false))))))))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true))))))))))))), bool(bvec3((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true)), true, false)))))), ! (! ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))) || (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec2(true, true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))) && true, ! (! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false)))))) && true)))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), true))) || false))) && true, ! (! ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.4)), bool(false)))), min(0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.4)), bool(false)))), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.4)), bool(false))))))))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true)))))), false || ((! (! (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), true))) || false))) && true, ! (! ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.4)), bool(false)))), min(0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.4)), bool(false)))), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.4)), bool(false))))))))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true))))))))))))), bool(bvec3((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true)), true, false))))))))))))))), false, _GLF_IDENTITY(true, false || (true))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, true))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((1354.0101 / -450.521)), _GLF_FUZZED(-7992.1471)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(round(injectionSwitch)) : injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) || false))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7095.8018, 7.8)))))).x, _GLF_IDENTITY(float(float(injectionSwitch.x)), clamp(_GLF_IDENTITY(float(float(injectionSwitch.x)), clamp(float(float(injectionSwitch.x)), float(float(injectionSwitch.x)), float(float(injectionSwitch.x)))), float(float(injectionSwitch.x)), _GLF_IDENTITY(float(float(injectionSwitch.x)), max(float(float(injectionSwitch.x)), float(_GLF_IDENTITY(float(injectionSwitch.x), float(vec4(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))), 0.0, cos(0.0), 1.0))))))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7095.8018, 7.8)))))).x, _GLF_IDENTITY(float(float(injectionSwitch.x)), clamp(_GLF_IDENTITY(float(float(injectionSwitch.x)), clamp(float(float(injectionSwitch.x)), float(float(injectionSwitch.x)), float(float(injectionSwitch.x)))), float(float(injectionSwitch.x)), _GLF_IDENTITY(float(float(injectionSwitch.x)), max(float(float(injectionSwitch.x)), float(_GLF_IDENTITY(float(injectionSwitch.x), float(vec4(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))), 0.0, cos(0.0), 1.0))))))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7095.8018, 7.8)))))).x, _GLF_IDENTITY(float(float(injectionSwitch.x)), clamp(_GLF_IDENTITY(float(float(injectionSwitch.x)), clamp(float(float(injectionSwitch.x)), float(float(injectionSwitch.x)), float(float(injectionSwitch.x)))), float(float(injectionSwitch.x)), _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3.8))))), max(float(float(injectionSwitch.x)), float(_GLF_IDENTITY(float(injectionSwitch.x), float(vec4(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))), 0.0, cos(0.0), 1.0))))))))) > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))) - 0u), min(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), (virtual_gid) >> 0u))), _GLF_IDENTITY((virtual_gid) - 0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((virtual_gid) - 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((virtual_gid) - 0u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY((virtual_gid) - 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((virtual_gid) - 0u))), (~ (_GLF_IDENTITY((virtual_gid) - 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((virtual_gid) - 0u)))) * 1u)) | (~ (_GLF_IDENTITY((virtual_gid) - 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((virtual_gid) - 0u)))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec4(workgroup_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 0u, 1u)), (uint(uvec4(workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u))) | 0u)), workgroup_id))) : _GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)))], _GLF_IDENTITY(read, 0u + (_GLF_IDENTITY(read, max(read, read)))), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) / 1.0) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), true && (! (false))))))), bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), true && (! (false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), true && (! (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), true && (! (false))))), bool(bvec3(_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), true && (! (false))))), false, false)))))))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) && true))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! _GLF_IDENTITY((false), ((false)) && true)))), false || (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))) && true)) || false)))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! _GLF_IDENTITY((false), ((false)) && true)))), false || (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))) && true)) || false)))))), false, true)))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))), false || (false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))))), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))), false || (false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))))), false, true)), true))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))), false || (false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))))), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))), false || (false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))))), false, true)), true))), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))), false || (false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))))), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))), false || (false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))))), false, true)), true))), true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))), false || (false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))))), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))), false || (false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))))), false, true)), true))), true)))), true)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))), false || (false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))))), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), false || (false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))))), false, true)), true)))), true))))))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true && (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.5)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), false || (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bool(bvec2(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), false)))) && true))), bool(bvec4(bool(bool(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bool(bvec2(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), false)))) && true))), true, false, false)))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
      barrier();
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true)), false))))))), true && (false))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false)))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false)))), (! (_GLF_IDENTITY((false), true && ((false))))) && true)))))) || false)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (_GLF_IDENTITY(read, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + 0u) ^ (read))) | _GLF_IDENTITY(_GLF_IDENTITY((read), _GLF_IDENTITY(((read)) | ((read)), 1u * (_GLF_IDENTITY(((read)) | ((read)), (((read)) | ((read))) << 0u)))), ((_GLF_IDENTITY(read, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(read, (read) / 1u))))) / 1u)), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((64), max(_GLF_IDENTITY((64), 0 ^ ((64))), (64))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((64), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3((64), 0, 1), ivec3(0, 0, 0) | (ivec3((64), 0, 1)))), 0 | (int(_GLF_IDENTITY(ivec3((64), 0, 1), ivec3(0, 0, 0) | (ivec3((64), 0, 1))))))), max(_GLF_IDENTITY((64), _GLF_IDENTITY(0 ^ ((64)), (0 ^ ((64))) ^ 0)), (64))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((64), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3((64), 0, 1), _GLF_IDENTITY(ivec3(0, 0, 0), min(ivec3(0, 0, 0), ivec3(0, 0, 0))) | (ivec3((64), 0, 1)))), 0 | (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3((64), 0, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) << 0), 1))))), ivec3(0, 0, 0) | (ivec3((64), 0, 1)))), clamp(int(_GLF_IDENTITY(ivec3((64), 0, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) << 0), 1))))), ivec3(0, 0, 0) | (ivec3((64), 0, 1)))), int(_GLF_IDENTITY(ivec3((64), 0, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) << 0), 1))))), ivec3(0, 0, 0) | (ivec3((64), 0, 1)))), int(_GLF_IDENTITY(ivec3((64), 0, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) << 0), 1))))), ivec3(0, 0, 0) | (ivec3((64), 0, 1))))))))), max(_GLF_IDENTITY((64), 0 ^ ((64))), (64))) | 0), (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((64), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3((64), 0, 1), ivec3(0, 0, 0) | (ivec3((64), 0, 1)))), 0 | (int(_GLF_IDENTITY(ivec3((64), 0, 1), ivec3(0, 0, 0) | (ivec3((64), 0, 1))))))), max(_GLF_IDENTITY((64), 0 ^ ((64))), (64))) | 0, (false ? _GLF_FUZZED(-99281) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, max(64, 64))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3((64), 0, 1), ivec3(0, 0, 0) | (ivec3((64), 0, 1)))), 0 | (int(_GLF_IDENTITY(ivec3((64), 0, 1), ivec3(0, 0, 0) | (ivec3((64), 0, 1))))))), max(_GLF_IDENTITY((64), 0 ^ ((64))), (64))) | 0)))) ^ 0)) | 0), (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((64), 0 ^ _GLF_IDENTITY(((64)), (((64))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), max(_GLF_IDENTITY(_GLF_IDENTITY((64), _GLF_IDENTITY(0 ^ ((64)), ~ (~ (_GLF_IDENTITY(0 ^ ((64)), min(0 ^ ((64)), 0 ^ ((64)))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, min(64, 64)))))), _GLF_IDENTITY(0 ^ ((64)), ~ (~ (_GLF_IDENTITY(0 ^ ((_GLF_IDENTITY(64, (64) / int(_GLF_ONE(1.0, injectionSwitch.y))))), min(0 ^ ((64)), 0 ^ ((64)))))))), _GLF_IDENTITY((64), _GLF_IDENTITY(0 ^ ((64)), ~ (~ (_GLF_IDENTITY(0 ^ ((64)), min(0 ^ ((64)), 0 ^ ((64)))))))))), (64))) | 0)) << 0)) + 0), 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (true))), bvec2(bvec2(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)), true))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true))), (injectionSwitch.x > injectionSwitch.y))))))))), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, sqrt(round(length(normalize(1.0)))), 0.0, 1.0, 0.0))) > injectionSwitch.y, true, false, true)))))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false))), (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, sin(0.0)))).x > injectionSwitch.y)))), false || (! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), true, false))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) && true), true)))))))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, cos(0.0), 0.0, log(determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 1.0, sqrt(abs(0.0)), 1.0))).x > injectionSwitch.y))))), ! (! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))))))), false, true), true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0)).x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(3.9))))), float(_GLF_FUZZED(_GLF_IDENTITY(-2.3, 0.0 + (_GLF_IDENTITY(-2.3, clamp(-2.3, -2.3, -2.3)))))), bool(false))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))) || ((true))))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(true, true && (true))), ! (! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), false, false))), true, false))) && (_GLF_IDENTITY(true, true && (true))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3((true), false, false), bvec3(bvec3(bvec3((true), false, false)))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true))))), true, false, false)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true))))), true, false, false)), true))))), true && (true))))))), bool(bvec3(! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(true && (_GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(bool(bool(true && (_GLF_IDENTITY(true, true && (true))))), false || (_GLF_IDENTITY(bool(bool(true && (_GLF_IDENTITY(true, true && (true))))), true && (bool(bool(true && (_GLF_IDENTITY(true, true && (true)))))))))))))), false, true))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3235.3126)), bool(false))) : _GLF_FUZZED(94.78)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))), true))), bool(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))), true))), true))) && (false), ! (_GLF_IDENTITY(! (true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) || false), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) || false), true)))), false)))))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true) || false))))) && (false), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec2((true), true))), true && (_GLF_IDENTITY((true), bool(bvec2((true), true)))))))) || false))) && (false)) && true)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9843.3474) : injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(9843.3474, (true ? _GLF_IDENTITY(9843.3474, (false ? _GLF_FUZZED(-7981.8578) : 9843.3474)) : _GLF_FUZZED(-9932.0905)))) : injectionSwitch.x)) > injectionSwitch.y)) && true))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), false, true)))) && true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
}
