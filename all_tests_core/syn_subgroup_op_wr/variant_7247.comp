#version 460
struct _GLF_struct_17 {
 uvec2 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_15 {
 vec4 _f0;
 float _f1;
} ;

struct _GLF_struct_14 {
 mat3 _f0;
 vec4 _f1;
 mat3x2 _f2;
 uint _f3;
} ;

struct _GLF_struct_13 {
 vec2 _f0;
 mat2x4 _f1;
 bvec2 _f2;
 bvec4 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_12 {
 uint _f0;
} ;

struct _GLF_struct_16 {
 _GLF_struct_12 _f0;
 vec4 _f1;
 _GLF_struct_13 _f2;
 mat3 _f3;
 _GLF_struct_14 _f4;
 _GLF_struct_15 _f5;
} ;

struct _GLF_struct_18 {
 vec4 _f0;
 uint virtual_gid;
 mat2 _f1;
 _GLF_struct_16 _f2;
 _GLF_struct_17 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_9 {
 uvec3 _f0;
 vec3 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_8 {
 uvec2 _f0;
 bvec4 _f1;
 bvec4 _f2;
 bvec4 _f3;
 bvec3 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_7 {
 vec2 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_10 {
 _GLF_struct_7 _f0;
 mat4x2 _f1;
 mat2 _f2;
 _GLF_struct_8 _f3;
 mat4 _f4;
 _GLF_struct_9 _f5;
} ;

struct _GLF_struct_11 {
 uint workgroup_id;
 mat4x2 _f0;
 ivec2 _f1;
 bool _f2;
 _GLF_struct_10 _f3;
} ;

struct _GLF_struct_5 {
 uint workgroup_size;
 ivec3 _f0;
} ;

struct _GLF_struct_3 {
 float _f0;
 mat3x4 _f1;
 ivec4 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_2 {
 uint _f0;
 mat3 _f1;
 int _f2;
} ;

struct _GLF_struct_1 {
 ivec2 _f0;
 vec2 _f1;
 ivec2 _f2;
 float _f3;
 vec4 _f4;
 ivec4 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_4 {
 _GLF_struct_1 _f0;
 mat2x4 _f1;
 mat3x4 _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_3 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_6 {
 uint _f0;
 mat4x2 _f1;
 bvec4 _f2;
 _GLF_struct_4 _f3;
 vec3 _f4;
 _GLF_struct_5 _f5;
} ;

struct _GLF_struct_0 {
 ivec2 _f0;
 vec2 _f1;
 vec3 _f2;
 mat2 _f3;
 uint subgroup_id;
 mat4x2 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(ivec2(1), vec2(1.0), vec3(1.0), mat2(1.0), gl_SubgroupID, mat4x2(1.0));
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(1u, mat4x2(1.0), bvec4(true), _GLF_struct_4(_GLF_struct_1(ivec2(1), vec2(1.0), ivec2(1), 1.0, vec4(1.0), ivec4(1), mat2(1.0)), mat2x4(1.0), mat3x4(1.0), _GLF_struct_2(1u, mat3(1.0), 1), _GLF_struct_3(1.0, mat3x4(1.0), ivec4(1), mat3x4(1.0)), bvec4(true)), vec3(1.0), _GLF_struct_5(gl_WorkGroupSize.x, ivec3(1)));
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(gl_WorkGroupID.x, mat4x2(1.0), ivec2(1), true, _GLF_struct_10(_GLF_struct_7(vec2(1.0), ivec2(1)), mat4x2(1.0), mat2(1.0), _GLF_struct_8(uvec2(1u), bvec4(true), bvec4(true), bvec4(true), bvec3(true), vec2(1.0)), mat4(1.0), _GLF_struct_9(uvec3(1u), vec3(1.0), vec3(1.0))));
 uint workgroup_base = _GLF_struct_replacement_6._f5.workgroup_size * _GLF_struct_replacement_11.workgroup_id;
 uint subgroup_base = _GLF_struct_replacement_0.subgroup_id * subgroup_size;
 _GLF_struct_18 _GLF_struct_replacement_18 = _GLF_struct_18(vec4(1.0), workgroup_base + subgroup_base + subgroup_local_id, mat2(1.0), _GLF_struct_16(_GLF_struct_12(1u), vec4(1.0), _GLF_struct_13(vec2(1.0), mat2x4(1.0), bvec2(true), bvec4(true), mat3x4(1.0)), mat3(1.0), _GLF_struct_14(mat3(1.0), vec4(1.0), mat3x2(1.0), 1u), _GLF_struct_15(vec4(1.0), 1.0)), _GLF_struct_17(uvec2(1u), mat4(1.0)), bvec2(true));
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 uint read = 0;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if((subgroup_local_id % 2) == 0)
  {
   subgroupAll(false);
   read = atomicLoad(buf[_GLF_struct_replacement_18.virtual_gid], 4, 64, 2);
  }
 else
  {
   subgroupAll(false);
   read = atomicLoad(buf[_GLF_struct_replacement_18.virtual_gid], 4, 64, 2);
  }
 subgroupBarrier();
 atomicStore(checker[_GLF_struct_replacement_18.virtual_gid], read, 4, 64, 4);
}
