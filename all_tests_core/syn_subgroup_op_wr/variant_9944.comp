#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))), bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) && true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false, false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))), (bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))))) && true))) && true)), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))), (bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))))) && true))) && true))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(32.09), _GLF_IDENTITY(_GLF_FUZZED(-6.2), (true ? _GLF_IDENTITY(_GLF_FUZZED(-6.2), float(mat2x3(_GLF_FUZZED(-6.2), 0.0, 1.0, 0.0, cos(0.0), 1.0))) : _GLF_FUZZED(-4278.2281)))), bvec2(false, false))), injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY((false ? _GLF_FUZZED(111482u) : _GLF_IDENTITY(0u, (0u) | (0u))), min((false ? _GLF_FUZZED(111482u) : _GLF_IDENTITY(0u, (0u) | (0u))), (false ? _GLF_FUZZED(111482u) : _GLF_IDENTITY(0u, (0u) | (0u))))))))), uint(0u))))), (uint(uvec2(0u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) << 0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(0u)), ~ (~ (_GLF_IDENTITY(uint(0u), uint(0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(uint(0u), uint(0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(uint(0u), uint(0u))))))))))) * _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) | (uint(uint(1u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec2(gl_NumWorkGroups.x, 1u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (gl_NumWorkGroups.x), max((0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | 0u), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (gl_NumWorkGroups.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec4(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) + 0u), 0u, 1u, 1u))), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) + 0u), 0u, 1u, 1u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) + 0u), 0u, 1u, 1u), clamp(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) ^ uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)).x) + 0u), 0u, 1u, 1u), uvec4(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) + 0u), 0u, 1u, 1u), uvec4(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) + 0u), 0u, 1u, 1u)))) - uvec4(0u, 0u, 0u, 0u))))))), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (gl_NumWorkGroups.x)), _GLF_IDENTITY(gl_NumWorkGroups.x, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (157342u & 0u) | (_GLF_IDENTITY(uint(6u), uint(6u))))) ^ (gl_NumWorkGroups.x))), (false ? _GLF_FUZZED(112429u) : _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), (gl_NumWorkGroups.x) | 0u), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), _GLF_IDENTITY((uvec3(gl_NumWorkGroups)) | (uvec3(gl_NumWorkGroups)), max((uvec3(gl_NumWorkGroups)) | (uvec3(gl_NumWorkGroups)), (uvec3(gl_NumWorkGroups)) | (uvec3(gl_NumWorkGroups))))))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) | (uvec3(gl_NumWorkGroups)))))) ^ uvec3(0u, 0u, 0u)).x), max((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) ^ uvec3(0u, 0u, 0u)), (uvec3(gl_NumWorkGroups)) | (uvec3(gl_NumWorkGroups))))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) | (uvec3(gl_NumWorkGroups)))))) ^ uvec3(0u, 0u, 0u)).x), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), _GLF_IDENTITY((uvec3(gl_NumWorkGroups)) | (uvec3(gl_NumWorkGroups)), (true ? (uvec3(gl_NumWorkGroups)) | (uvec3(gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(168132u, 79756u, 89851u))))))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) | (uvec3(gl_NumWorkGroups)))))) ^ uvec3(0u, 0u, 0u)).x), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) | (uvec3(gl_NumWorkGroups))))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) | (uvec3(gl_NumWorkGroups)))))) ^ uvec3(0u, 0u, 0u)).x)) | ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) | (uvec3(gl_NumWorkGroups))))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)))))))), _GLF_IDENTITY((uvec3(gl_NumWorkGroups)), min((uvec3(gl_NumWorkGroups)), (uvec3(gl_NumWorkGroups)))) | (uvec3(gl_NumWorkGroups)))))) ^ uvec3(0u, 0u, 0u)).x)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))).x, (_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(gl_NumWorkGroups.x, 1u, 1u)))) + (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (false ? _GLF_FUZZED(69094u) : uint(_GLF_IDENTITY(2u, (2u) >> 0u))))))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (gl_NumWorkGroups.x), ((0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (gl_NumWorkGroups.x)) - 0u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))).x, (_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(gl_NumWorkGroups.x, 1u, 1u)))) + (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (false ? _GLF_FUZZED(69094u) : uint(_GLF_IDENTITY(2u, (2u) >> 0u))))))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (gl_NumWorkGroups.x), ((0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (gl_NumWorkGroups.x)) - 0u)))), _GLF_IDENTITY(gl_NumWorkGroups.x, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY((uint(6u)) - 0u, uint(uvec3((uint(6u)) - 0u, 0u, 0u)))), uint(6u))) ^ (gl_NumWorkGroups.x))), min(clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)))))), _GLF_IDENTITY(gl_NumWorkGroups.x, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)))))), _GLF_IDENTITY(gl_NumWorkGroups.x, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (gl_NumWorkGroups.x))), clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(6u), uint(6u))), (true ? (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(6u)), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) << 0u)) : _GLF_FUZZED(119513u))) ^ (gl_NumWorkGroups.x)), _GLF_IDENTITY(gl_NumWorkGroups.x, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (gl_NumWorkGroups.x)), _GLF_IDENTITY(gl_NumWorkGroups.x, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (gl_NumWorkGroups.x))))))))), 0u + _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups.x), _GLF_IDENTITY((~ (gl_NumWorkGroups.x)) * 1u, _GLF_IDENTITY(((~ (gl_NumWorkGroups.x)) * 1u) | (_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), 0u | (_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ~ _GLF_IDENTITY((~ _GLF_IDENTITY(((~ (gl_NumWorkGroups.x))), (((~ (gl_NumWorkGroups.x)))) >> 0u)), uint(uvec2((~ ((~ (gl_NumWorkGroups.x)))), 1u)))))) * 1u), (_GLF_IDENTITY(((~ (gl_NumWorkGroups.x)) * 1u) | (_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (~ (gl_NumWorkGroups.x)) ^ (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) << 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), ~ _GLF_IDENTITY((~ ((~ (gl_NumWorkGroups.x)))), uint(uvec2((~ ((~ (gl_NumWorkGroups.x)))), 1u)))))) * 1u), (((~ (gl_NumWorkGroups.x)) * 1u) | (_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (~ (gl_NumWorkGroups.x)) ^ (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) << 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), ~ _GLF_IDENTITY((~ ((~ (gl_NumWorkGroups.x)))), uint(uvec2((~ ((~ (gl_NumWorkGroups.x)))), 1u)))))) * 1u)) | 0u)) - 0u)))), ((_GLF_IDENTITY(~ (gl_NumWorkGroups.x), _GLF_IDENTITY((~ (gl_NumWorkGroups.x)) * 1u, _GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), (true ? _GLF_IDENTITY((~ (gl_NumWorkGroups.x)), min((~ (gl_NumWorkGroups.x)), (~ (gl_NumWorkGroups.x)))) : _GLF_FUZZED(44593u))) * 1u) | (_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), 0u | (_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ~ _GLF_IDENTITY((~ ((~ (gl_NumWorkGroups.x)))), uint(uvec2((~ ((~ (gl_NumWorkGroups.x)))), 1u)))))) * 1u), (((~ (gl_NumWorkGroups.x)) * 1u) | (_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (~ (gl_NumWorkGroups.x)) ^ (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (~ (gl_NumWorkGroups.x)) ^ (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (~ (gl_NumWorkGroups.x)) ^ (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))) | (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (~ (gl_NumWorkGroups.x)) ^ (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))))) * 1u)), ~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (false ? _GLF_FUZZED(subgroup_id) : ~ (gl_NumWorkGroups.x)))))), uint(uvec2((~ ((~ _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)))))), 1u)))))) * 1u)) - 0u))))) | ((_GLF_IDENTITY(~ (gl_NumWorkGroups.x), _GLF_IDENTITY((~ (gl_NumWorkGroups.x)) * 1u, _GLF_IDENTITY(((~ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x)) * 1u) | (_GLF_IDENTITY(_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), min(_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ~ (~ ((~ (gl_NumWorkGroups.x))))), _GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) | ((~ (gl_NumWorkGroups.x)))))), 0u | (_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ~ _GLF_IDENTITY((~ ((~ (gl_NumWorkGroups.x)))), uint(uvec2((~ ((~ (gl_NumWorkGroups.x)))), 1u)))))) * 1u), (((~ (_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) - 0u))))) * 1u) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x))) | (_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)))))), _GLF_IDENTITY(0u, (0u) | (0u | 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (~ (gl_NumWorkGroups.x)) ^ (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((~ (gl_NumWorkGroups.x))), (true ? ~ ((~ (gl_NumWorkGroups.x))) : _GLF_FUZZED(subgroup_local_id)))), uint(uvec2((~ ((~ (gl_NumWorkGroups.x)))), 1u)))))) * 1u)) - 0u)))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), mat2x4(mat2x4(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), 0.0 + (_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), mat2x4(mat2x4(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), (false ? _GLF_FUZZED(-9.6) : float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), mat2x4(mat2x4(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))))))))))))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(7.3))), bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)), bvec2(bvec3(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)), false))))))), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), bool(bvec2(_GLF_DEAD(false), true)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), false)))), false)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), false)))), false))))) || false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, uint(uint(workgroup_id))) : _GLF_FUZZED(workgroup_id)));
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u);
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))), (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))) || false))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)).x)), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 uint read = 0;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1087.2437) : 1.0))) + 0.0))))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(77.68)), float(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0), vec2(1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))), 1.0, 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(sin(-2895.7219)))), 1.0, 0.0, 1.0, exp(0.0), 1.0))))) + _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)) % 2), clamp((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)) % 2), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)) % 2), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)) % 2))))), max((_GLF_IDENTITY(subgroup_local_id % 2, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(sin(-2895.7219)))), (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(sin(-2895.7219))))) / 1.0), 1.0, 0.0, 1.0, exp(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0))))))) + (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)) : subgroup_local_id)) % 2))), (_GLF_IDENTITY(subgroup_local_id % 2, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(54.66)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), bool(true))) * (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))), float(mat3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(sin(-2895.7219)))), 1.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))), 1.0))))) + (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)) % 2))))) == _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, 1 * (0)))))
  {
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, int(ivec3(4, 1, (_GLF_IDENTITY(0 | _GLF_IDENTITY(0, (0) | (0)), max(0 | 0, 0 | 0)))))), 64, 2);
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec2((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), false))) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec2((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), false))) && true)), (bool(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec2((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), false))) && true))) && true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))) || (false), (_GLF_IDENTITY(false, bool(bvec2(false, false))) || (false)) && true), bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (false)))))))))), true && (false)), _GLF_TRUE(_GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), true)))), ((_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(acosh(_GLF_IDENTITY(mod(injectionSwitch, -0.0), (mod(injectionSwitch, -0.0)) - vec2(0.0, 0.0)))) : injectionSwitch, (false ? _GLF_FUZZED(acosh(_GLF_IDENTITY(mod(injectionSwitch, -0.0), _GLF_IDENTITY((mod(injectionSwitch, -0.0)), (false ? _GLF_FUZZED(injectionSwitch) : (mod(injectionSwitch, -0.0)))) - vec2(0.0, 0.0)))) : injectionSwitch) / vec2(1.0, 1.0)))).x, mix(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(acosh(_GLF_IDENTITY(mod(injectionSwitch, -0.0), (mod(injectionSwitch, -0.0)) - vec2(0.0, 0.0)))) : injectionSwitch, (false ? _GLF_FUZZED(acosh(_GLF_IDENTITY(mod(injectionSwitch, -0.0), _GLF_IDENTITY((mod(injectionSwitch, -0.0)), (false ? _GLF_FUZZED(injectionSwitch) : (mod(injectionSwitch, -0.0)))) - vec2(0.0, 0.0)))) : injectionSwitch) / vec2(1.0, 1.0)))).x), float(_GLF_FUZZED(float(-62740))), bool(false))) < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.3)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-927.116), (injectionSwitch)[1]), clamp(vec2(_GLF_FUZZED(-927.116), _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), (injectionSwitch), (injectionSwitch)))) / vec2(1.0, 1.0))[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-927.116), (injectionSwitch)[1]), mix(vec2(_GLF_FUZZED(-8.4), (vec2(_GLF_FUZZED(-927.116), (injectionSwitch)[1]))[1]), vec2((vec2(_GLF_FUZZED(-927.116), (injectionSwitch)[1]))[0], _GLF_FUZZED(-8.4)), bvec2(true, false))), vec2(_GLF_FUZZED(-927.116), (injectionSwitch)[1]))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(true, false || (true))), false)))))))).y)), false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, exp(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 1.0, length(0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), 1.0, 0.0), mat3x4(mat4(mat3x4(injectionSwitch.x, 1.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, length(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))))))) - _GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x)))), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, 1.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, length(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0), mat3x4(mat4(mat3x4(injectionSwitch.x, 1.0, exp(0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), float(_GLF_IDENTITY(mat3x2(0.0, 1.0, determinant(mat2(sqrt(0.0), 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0))))), round(length(normalize(1.0)))), transpose(transpose(mat3x2(0.0, 1.0, _GLF_IDENTITY(determinant(mat2(sqrt(0.0), 0.0, 0.0, 0.0)), min(determinant(mat2(sqrt(0.0), 0.0, 0.0, 0.0)), determinant(mat2(sqrt(0.0), 0.0, 0.0, 0.0)))), 0.0, 1.0, round(length(normalize(1.0))))))))), 0.0, 1.0, 1.0, 1.0, length(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))))))) - _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, length(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0), mat3x4(mat4(mat3x4(injectionSwitch.x, 1.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, length(0.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-949.054) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0))), 1.0, 0.0))))))) - _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, exp(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, length(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0), mat3x4(mat4(mat3x4(injectionSwitch.x, 1.0, exp(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, length(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))))))) - _GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, exp(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(length(0.0), mix(float(_GLF_FUZZED((9345.4372 / -7694.8792))), float(length(0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0), mat3x4(mat4(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, 1.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, length(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))))))) - _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, exp(0.0), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0)))), 0.0, 1.0, 1.0, 1.0, length(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0), mat3x4(mat4(mat3x4(injectionSwitch.x, 1.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, length(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)))))), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, exp(0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0)))), float(mat4x2(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0)))), 1.0, 0.0, determinant(mat3(0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0))), 0.0, 1.0, 1.0, 1.0, length(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0), mat3x4(mat4(mat3x4(injectionSwitch.x, 1.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(length(0.0), float(mat4(length(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)))))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(mat4(1.0) * (mat4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, exp(0.0), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0)))), 0.0, 1.0, 1.0, 1.0, length(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0), mat3x4(mat4(mat3x4(injectionSwitch.x, 1.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, length(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)))))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0)), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (mat4(1.0) * (mat4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, exp(0.0), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0)))), 0.0, 1.0, 1.0, 1.0, length(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0), mat3x4(mat4(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, 1.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, length(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)))))), 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0)))))))) - _GLF_ZERO(0.0, injectionSwitch.x)))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(84.99), _GLF_FUZZED(-4386.2096)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))), injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, true))), false, true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, true))), false, true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, true))), false, true, true)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(882.765)), vec2(_GLF_FUZZED(-2740.8606), (injectionSwitch)[1]), bvec2(false, true))) : _GLF_FUZZED(vec2(558.177, 7741.3265)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bool(true && (false)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), false || (false || (_GLF_DEAD(false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) && true))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true)))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true)))), false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y) || false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)), false || (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), true))))))), ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))) || false)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(intBitsToFloat(74809)) : injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(120.480), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5.3)), vec2(_GLF_FUZZED(81.98), (injectionSwitch)[1]), bvec2(false, true))))))[1], _GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (_GLF_IDENTITY(((injectionSwitch)[1]), (((injectionSwitch)[1])) - 0.0))) - 0.0)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-39.95)), vec2(_GLF_IDENTITY(mat3(vec2((injectionSwitch)[0], _GLF_FUZZED(-39.95)), 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, sqrt(0.0)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(vec2((injectionSwitch)[0], _GLF_FUZZED(-39.95)), 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, sqrt(0.0)))))), bvec2(true, false)), (mix(vec2(_GLF_FUZZED(120.480), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(9.6) : _GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])))), _GLF_FUZZED(-39.95)), bvec2(true, false))) * mat2(1.0))), injectionSwitch)).y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false))), true)))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), _GLF_IDENTITY(false || _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) || false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), ! (! ((bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ! (! ((_GLF_DEAD(false)) || false)))))))))), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), ! (! ((bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))), false)), true)))), false || (false || _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)), (_GLF_DEAD(false)) || false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), ! (! ((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))) || false))), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ! (! ((_GLF_DEAD(false)) || false)))))))))), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), ! (! ((bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))), false)), true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, true && (true))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))) && true) && (false)), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.5)), bool(false))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(uvec2(buf[virtual_gid], (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, 0u ^ _GLF_IDENTITY((6u), _GLF_IDENTITY(((6u)), ~ (~ (_GLF_IDENTITY(((6u)), (true ? ((6u)) : _GLF_FUZZED(subgroup_base)))))) ^ (1u ^ 1u)))), _GLF_IDENTITY(uint(6u), (uint(6u)) >> ((0u << _GLF_IDENTITY(uint(1u), uint(1u))) << _GLF_IDENTITY(uint(5u), uint(5u)))))), clamp((1u << _GLF_IDENTITY(uint(6u), uint(6u))), (1u << _GLF_IDENTITY(uint(6u), uint(6u))), (1u << _GLF_IDENTITY(uint(6u), uint(6u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, min(6u, 6u))), uint(6u)), ~ (~ (_GLF_IDENTITY(uint(6u), uint(6u))))))))))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) | 0)) * 1))), (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) | 0)) * 1))), (false ? _GLF_FUZZED(87946) : _GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) | 0)) * 1)))))) | (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) | 0), (_GLF_IDENTITY(64, (64) | 0)) - (0 >> _GLF_IDENTITY(int(4), int(4))))) * 1))))), 2);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(22.05) : injectionSwitch.x))), float(_GLF_FUZZED((false ? -768.812 : 101.497))), bool(false))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false || (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))), ! (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false || (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false || (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))), ! (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false || (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true)))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0)))) * vec2(1.0, 1.0)).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (_GLF_IDENTITY(false, true && (false))))) || false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false))))) && true))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true)))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true))))))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 subgroupBarrier();
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u, (0u) - 0u) | (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (virtual_gid)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) << 0u), max(_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) << 0u), _GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) << 0u)))))), clamp(_GLF_IDENTITY(~ (~ (virtual_gid)), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) / 1u), _GLF_IDENTITY((~ (~ (virtual_gid))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) ^ (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | 0u)))), max((~ (~ (virtual_gid))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) ^ (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | 0u)))), (~ (~ (virtual_gid))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) ^ (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | 0u)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) ^ (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | _GLF_IDENTITY(0u, (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read) : 0u)))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) ^ (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | 0u)))))), min((_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ~ (~ ((0u) ^ 0u))))) ^ (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY((uint(2u)), ((uint(2u))) ^ 0u) | 0u)))))), (_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) ^ (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | 0u)))))))), (_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ _GLF_IDENTITY((virtual_gid), 1u * (_GLF_IDENTITY((virtual_gid), 0u ^ ((virtual_gid))))))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) | ((0u) ^ 0u)))) ^ (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | 0u))))))))) | ((_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (virtual_gid), ~ (~ (_GLF_IDENTITY(~ (virtual_gid), uint(uvec2(~ (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))), 1u))))))), _GLF_IDENTITY((~ (~ (virtual_gid))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((~ (~ (virtual_gid))))) << _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) ^ (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | 0u)))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) ^ (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | 0u))))) | 0u)))))), ~ (~ (~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) ^ (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid)), _GLF_IDENTITY(virtual_gid, (virtual_gid) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (~ (~ _GLF_IDENTITY((virtual_gid), clamp((virtual_gid), _GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(((virtual_gid)) << 0u, 1u * (_GLF_IDENTITY(((virtual_gid)) << 0u, uint(uvec2(((virtual_gid)) << 0u, 0u)))))), _GLF_IDENTITY((virtual_gid), uint(uvec2(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) ^ 0u), 0u))))))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) ^ (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | _GLF_IDENTITY(0u, (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), true, true, false)), bool(bool(bool(bvec4(! (false), true, true, false)))))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read) : 0u)))), (_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | _GLF_IDENTITY(0u, (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), true, true, false)), bool(bool(bool(bvec4(! (false), true, true, false)))))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read) : 0u))))) >> 0u))))), _GLF_IDENTITY(max((_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) ^ (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY((uint(2u)) | 0u, max(_GLF_IDENTITY((uint(2u)) | 0u, ~ (~ ((uint(2u)) | 0u))), (uint(2u)) | 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) ^ (_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) ^ (_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | 0u))))), 1u * (_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) ^ (_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | 0u)))))))) ^ 0u))), uint(uvec4(_GLF_IDENTITY(max((_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) ^ (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY((uint(2u)) | 0u, max(_GLF_IDENTITY((uint(2u)) | 0u, ~ (~ ((uint(2u)) | 0u))), (uint(2u)) | 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) ^ (_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) ^ (_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | 0u))))), 1u * (_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) ^ (_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | 0u)))))))) ^ 0u))), 0u ^ (max((_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) ^ (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY((uint(2u)) | 0u, max(_GLF_IDENTITY((uint(2u)) | 0u, ~ (~ ((uint(2u)) | 0u))), (uint(2u)) | 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) ^ (_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) ^ (_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | 0u))))), 1u * (_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) ^ (_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | 0u)))))))) ^ 0u))))), 1u, 1u, 1u))))) | ((_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (virtual_gid), ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(~ (virtual_gid), uint(uvec2(~ (virtual_gid), 1u))))), min((~ (_GLF_IDENTITY(~ (virtual_gid), uint(uvec2(~ (virtual_gid), 1u))))), (~ (_GLF_IDENTITY(~ (virtual_gid), uint(uvec2(~ (virtual_gid), 1u))))))), ((~ (_GLF_IDENTITY(~ (virtual_gid), uint(uvec2(~ (virtual_gid), 1u)))))) | ((~ (_GLF_IDENTITY(~ (virtual_gid), uint(uvec2(~ (virtual_gid), 1u))))))))), (~ (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) + 0u))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) ^ (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u), _GLF_IDENTITY(uint(2u), (uint(2u)) | 0u))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (virtual_gid)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) | 0u)), (_GLF_IDENTITY(~ (~ (virtual_gid)), (false ? _GLF_FUZZED(106359u) : ~ (~ (virtual_gid))))) | _GLF_IDENTITY((~ (~ (virtual_gid))), uint(uvec3(_GLF_IDENTITY((~ (~ (virtual_gid))), _GLF_IDENTITY(uint(uvec3((~ (~ (virtual_gid))), 1u, 1u)), (uint(uvec3((~ (~ (virtual_gid))), 1u, 1u))) | (uint(uvec3((~ (~ (virtual_gid))), 1u, 1u))))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (uint(5u))))), 1u))))) << 0u)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED((-- virtual_gid)) : _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (virtual_gid)), (_GLF_IDENTITY(~ (~ (virtual_gid)), (_GLF_IDENTITY(~ (~ (virtual_gid)), (_GLF_IDENTITY(false ? _GLF_FUZZED(106359u) : ~ (~ (virtual_gid)), min(false ? _GLF_FUZZED(106359u) : ~ (~ (virtual_gid)), false ? _GLF_FUZZED(106359u) : ~ (~ (virtual_gid))))))) | (~ (~ (virtual_gid))))) << 0u)), ((_GLF_IDENTITY(~ (~ (virtual_gid)), _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (virtual_gid)), _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (virtual_gid)), (false ? _GLF_FUZZED(106359u) : ~ (~ (virtual_gid))))) | (~ (~ (virtual_gid))), ~ (~ ((_GLF_IDENTITY(~ (~ (virtual_gid)), (false ? _GLF_FUZZED(106359u) : ~ (~ (virtual_gid))))) | (~ (~ (virtual_gid)))))))) << 0u, ((_GLF_IDENTITY(~ (~ (virtual_gid)), _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (virtual_gid)), (false ? _GLF_FUZZED(106359u) : ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(virtual_gid, (1u ^ 1u) | (virtual_gid))), (~ (virtual_gid)) | 0u))))) | (~ (~ (virtual_gid))), ~ (~ ((_GLF_IDENTITY(~ (~ (virtual_gid)), (false ? _GLF_FUZZED(106359u) : ~ (~ (virtual_gid))))) | (~ (~ (virtual_gid)))))))) << 0u) + 0u)))) | ((_GLF_IDENTITY(~ (~ (virtual_gid)), (_GLF_IDENTITY(~ (~ (virtual_gid)), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((virtual_gid), ((virtual_gid)) - 0u)), (false ? _GLF_FUZZED(106359u) : ~ (~ (virtual_gid))))) | (~ (~ (virtual_gid))))) << 0u))))))), ((~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (virtual_gid)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) | 0u)), (_GLF_IDENTITY(~ (~ (virtual_gid)), (false ? _GLF_FUZZED(106359u) : ~ (~ (virtual_gid))))) | _GLF_IDENTITY((~ (~ (virtual_gid))), uint(uvec3(_GLF_IDENTITY((~ (~ (virtual_gid))), _GLF_IDENTITY(uint(uvec3((~ (~ (virtual_gid))), 1u, 1u)), (uint(uvec3((~ (~ (virtual_gid))), 1u, 1u))) | (uint(uvec3((~ (~ (virtual_gid))), 1u, 1u))))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (uint(5u))))), 1u))))) << 0u)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED((-- virtual_gid)) : _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (virtual_gid)), (_GLF_IDENTITY(~ (~ (virtual_gid)), (_GLF_IDENTITY(~ (~ (virtual_gid)), (_GLF_IDENTITY(false ? _GLF_FUZZED(106359u) : ~ (~ (virtual_gid)), min(false ? _GLF_FUZZED(106359u) : ~ (~ (virtual_gid)), false ? _GLF_FUZZED(106359u) : ~ (~ (virtual_gid))))))) | (~ (~ (virtual_gid))))) << 0u)), ((_GLF_IDENTITY(~ (~ (virtual_gid)), _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (virtual_gid)), _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (virtual_gid)), (false ? _GLF_FUZZED(106359u) : ~ (~ (virtual_gid))))) | (~ (~ (virtual_gid))), ~ (~ ((_GLF_IDENTITY(~ (~ (virtual_gid)), (false ? _GLF_FUZZED(106359u) : ~ (~ (virtual_gid))))) | (~ (~ (virtual_gid)))))))) << 0u, ((_GLF_IDENTITY(~ (~ (virtual_gid)), _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (virtual_gid)), (false ? _GLF_FUZZED(106359u) : ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(virtual_gid, (1u ^ 1u) | (virtual_gid))), (~ (virtual_gid)) | 0u))))) | (~ (~ (virtual_gid))), ~ (~ ((_GLF_IDENTITY(~ (~ (virtual_gid)), (false ? _GLF_FUZZED(106359u) : ~ (~ (virtual_gid))))) | (~ (~ (virtual_gid)))))))) << 0u) + 0u)))) | ((_GLF_IDENTITY(~ (~ (virtual_gid)), (_GLF_IDENTITY(~ (~ (virtual_gid)), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((virtual_gid), ((virtual_gid)) - 0u)), (false ? _GLF_FUZZED(106359u) : ~ (~ (virtual_gid))))) | (~ (~ (virtual_gid))))) << 0u)))))))) >> (1u ^ 1u))), min(_GLF_IDENTITY(~ (~ (virtual_gid)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((~ (virtual_gid)), 0u ^ ((~ (virtual_gid))))), (_GLF_IDENTITY((~ _GLF_IDENTITY((~ (virtual_gid)), 0u ^ ((~ (virtual_gid))))), max((~ _GLF_IDENTITY((~ (virtual_gid)), 0u ^ ((~ (virtual_gid))))), (~ _GLF_IDENTITY((~ (virtual_gid)), 0u ^ ((~ (virtual_gid)))))))) ^ 0u) << 0u, ~ (~ (_GLF_IDENTITY((~ (~ (virtual_gid))) << 0u, ((~ (~ (virtual_gid))) << 0u) ^ 0u))))), max(_GLF_IDENTITY(~ (~ (virtual_gid)), _GLF_IDENTITY((~ (~ (virtual_gid))) << 0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((~ (~ (virtual_gid))), clamp((~ (~ (virtual_gid))), (~ (~ (virtual_gid))), _GLF_IDENTITY((~ (~ (virtual_gid))), (true ? (~ (~ (virtual_gid))) : _GLF_FUZZED(subgroup_id))))) << 0u, ((~ (~ (virtual_gid))) << 0u) ^ 0u))))), _GLF_IDENTITY(~ (~ (virtual_gid)), _GLF_IDENTITY((~ (~ (virtual_gid))) << 0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((~ (~ (virtual_gid))), (true ? (~ (~ (virtual_gid))) : _GLF_FUZZED(subgroup_id))) << 0u, ((~ (~ (virtual_gid))) << 0u) ^ 0u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (virtual_gid)), ~ (~ (_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) << _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))))), (_GLF_IDENTITY(~ (~ (virtual_gid)), ~ (~ (_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) << _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-6.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1u)))))))) ^ 0u))), _GLF_IDENTITY(~ (~ (virtual_gid)), ~ (~ (_GLF_IDENTITY(~ (~ (virtual_gid)), (_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) >> 0u)) << 0u))))))))), _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))))], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}
