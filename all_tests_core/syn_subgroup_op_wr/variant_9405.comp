#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   else
    {
    }
  }
 uvec3 GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(false, (false) && true) || (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (_GLF_IDENTITY(! ((! (true))), ! (! (! ((! (true)))))))))))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   do
    {
     GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y = _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (subgroup_local_id)), (true ? _GLF_IDENTITY(~ _GLF_IDENTITY((~ (subgroup_local_id)), min(_GLF_IDENTITY((~ (subgroup_local_id)), (true ? (~ (subgroup_local_id)) : _GLF_FUZZED(67720u))), (~ (subgroup_local_id)))), min(~ (~ (subgroup_local_id)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED((subgroup_size - 120642u)))))), (true ? ~ (~ (subgroup_local_id)) : _GLF_FUZZED(subgroup_local_id))))) : _GLF_FUZZED((-- subgroup_size)))));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, sin(0.0), 0.0, 0.0))))), injectionSwitch)))).y), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), true, false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), true, false))))), false || (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), true, false))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8652.5819)), float(injectionSwitch.x), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (_GLF_IDENTITY(bool(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)))))) > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4197.3951)), bool(false)))), true), _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), false))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8652.5819)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y), true), bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), _GLF_IDENTITY(bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-46.73), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(528.684) : (injectionSwitch)[0])), _GLF_FUZZED(-3573.1647)), bvec2(true, false))).y, mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-46.73), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(528.684) : (injectionSwitch)[0])), _GLF_FUZZED(-3573.1647)), bvec2(true, false))).y), float(_GLF_FUZZED(200.554)), bool(false)))), true), true)))))), _GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))) && true)))), false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), true, false))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8652.5819)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(-7.6, -245.707, 38.67, -5752.6998).t)), vec2(_GLF_FUZZED(5.0), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x < injectionSwitch.y))))) > injectionSwitch.y), true), _GLF_IDENTITY(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), false)), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), false)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), false))), bvec2(bvec2(bvec2(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), false)))))))), false, true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), false)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), false))), bvec2(bvec2(bvec2(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), false)))))))), false, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), false)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), false))), bvec2(bvec2(bvec2(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), false)))))))), false, true))))), true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(-1.2), _GLF_FUZZED(-3641.5062)), bvec2(false, false)))).x, mix(float(_GLF_FUZZED(8652.5819)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_IDENTITY(true, ! (! (true))))))))) > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6651.2526) : injectionSwitch.y)), injectionSwitch.y))), true), _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))))))))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, float(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0))))) < injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), true, false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y), true), true, false))), bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))), false))), false))))), ! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y), true), true, false))), bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))), false))), false)))))), true && (! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))))).x > injectionSwitch.y), true), true, false))), bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))), false))), false)))))))))), false || (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), true, false))), bvec2(bvec4(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(8652.5819)), min(float(_GLF_FUZZED(8652.5819)), float(_GLF_FUZZED(8652.5819)))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), true), bvec2(bvec4(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(distance(8.5, -521.824)) : injectionSwitch.y))), true), _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), false))), _GLF_IDENTITY(false, bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) || (false), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))) || (false)) || (false), false))))));
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = (0 & -59451); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(0, ~ (~ (0))))), ~ (~ (_GLF_IDENTITY((1) >> _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(0, ~ (~ (0))))), ~ (~ ((1) >> _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(0, ~ (~ (0))))))))))))); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, int(ivec2(0, 0)))), min(int(0), int(0))), int(0)))); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))));
              }
            }
          }
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(936.455), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[_GLF_IDENTITY(1, min(1, 1))]), clamp(vec2(_GLF_FUZZED(936.455), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1]), vec2(_GLF_FUZZED(936.455), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(936.455), _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), (injectionSwitch), (injectionSwitch)))[1]), mix(vec2((vec2(_GLF_FUZZED(936.455), _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), (injectionSwitch), (injectionSwitch)))[1]))[0], (vec2(_GLF_FUZZED(936.455), _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), (injectionSwitch), (injectionSwitch)))[1]))[1]), vec2(_GLF_FUZZED((+ 3.7)), _GLF_FUZZED((-3.7 / 24.42))), bvec2(false, false))))), vec2((injectionSwitch)[_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)), (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)), (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)), min((_GLF_IDENTITY(0, (0) / 1)), (_GLF_IDENTITY(0, (0) / 1))))) - 0)) << 0)))) : _GLF_FUZZED(97747)))], _GLF_FUZZED(-2768.0531)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.6)), bool(false))))), false))).y))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))));
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * _GLF_IDENTITY((gl_NumWorkGroups.x), _GLF_IDENTITY(((gl_NumWorkGroups.x)) ^ _GLF_IDENTITY(0u, max(0u, 0u)), clamp(_GLF_IDENTITY(((gl_NumWorkGroups.x)) ^ _GLF_IDENTITY(0u, max(0u, 0u)), max(((gl_NumWorkGroups.x)) ^ _GLF_IDENTITY(0u, max(0u, 0u)), ((gl_NumWorkGroups.x)) ^ _GLF_IDENTITY(0u, max(0u, 0u)))), _GLF_IDENTITY(((gl_NumWorkGroups.x)) ^ _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(((gl_NumWorkGroups.x)) ^ _GLF_IDENTITY(0u, max(0u, 0u)), (false ? _GLF_FUZZED(subgroup_id) : ((gl_NumWorkGroups.x)) ^ _GLF_IDENTITY(0u, max(0u, 0u)))), ((gl_NumWorkGroups.x)) ^ _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(((gl_NumWorkGroups.x)) ^ _GLF_IDENTITY(0u, max(0u, 0u)), (((gl_NumWorkGroups.x)) ^ _GLF_IDENTITY(0u, max(0u, 0u))) | (((gl_NumWorkGroups.x)) ^ _GLF_IDENTITY(0u, max(0u, 0u))))), uint(uvec2(clamp(_GLF_IDENTITY(((gl_NumWorkGroups.x)) ^ _GLF_IDENTITY(0u, max(0u, 0u)), (false ? _GLF_FUZZED(subgroup_id) : ((gl_NumWorkGroups.x)) ^ _GLF_IDENTITY(0u, max(0u, 0u)))), ((gl_NumWorkGroups.x)) ^ _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(((gl_NumWorkGroups.x)) ^ _GLF_IDENTITY(0u, max(0u, 0u)), (((gl_NumWorkGroups.x)) ^ _GLF_IDENTITY(0u, max(0u, 0u))) | (((gl_NumWorkGroups.x)) ^ _GLF_IDENTITY(0u, max(0u, 0u))))), 1u)))), ((gl_NumWorkGroups.x)) ^ _GLF_IDENTITY(0u, max(0u, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec4(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x)), 0u, 1u, (1u & 1u)))), clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u), _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) * 1u), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)).x)), _GLF_IDENTITY((gl_NumWorkGroups.x), ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), gl_NumWorkGroups.x, gl_NumWorkGroups.x)))) ^ 0u) + 0u)));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.z = workgroup_id;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))));
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), (! ((_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))) && true))))))))))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id, (GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id) / uvec3(1u, 1u, 1u)).z;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   else
    {
    }
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, (1) ^ 0)))), max(_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ (0 | 0))) ^ 0)))), clamp((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y, ~ (_GLF_IDENTITY(~ (GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y), 0u | (_GLF_IDENTITY(~ (GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y), clamp(_GLF_IDENTITY(~ (GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y), ~ (~ (_GLF_IDENTITY(~ (GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y), max(~ (GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y), ~ (GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y)))))), ~ (GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y), ~ (GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y))))))) + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, (1) ^ 0)))), (GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, (1) ^ 0)))), (GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y + _GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) ^ 0), min(_GLF_IDENTITY(1, ~ (~ (1))), 1)), _GLF_IDENTITY(1, (1) ^ 0)))))), _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, (1) ^ 0)))), (true ? (GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(1, (1) | 0))), 1)), _GLF_IDENTITY(1, (1) ^ 0)))) : _GLF_FUZZED(subgroup_size))))) % subgroup_size), (((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id, (GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id) / uvec3(1u, 1u, 1u)).y, (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y, uint(uvec2(GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y, 0u)))) | 0u) + _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) - 0), 1)), 1), (_GLF_IDENTITY(min(_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)), (_GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) | (1))))) * 1)) - 0), 1)), 1), _GLF_IDENTITY(1, (1) << 0) * (_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, 1 * (1)))), min(int(int(_GLF_IDENTITY(1, 1 * (1)))), int(int(_GLF_IDENTITY(1, 1 * (1))))))), min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) - 0), 1)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, 1 * (1)))), min(int(int(_GLF_IDENTITY(1, 1 * (1)))), int(int(_GLF_IDENTITY(1, 1 * (1))))))), ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), 1 * ((1)))))), min(int(int(_GLF_IDENTITY(1, 1 * (1)))), int(int(_GLF_IDENTITY(1, 1 * (1)))))))))), min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) - 0), 1)) : _GLF_FUZZED(int(workgroup_id)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) - 0), 1)), max(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) - 0), 1)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (0 | 0) | (_GLF_IDENTITY(1, ~ (~ (1))))), (1) / 1))), (1) * 1)) - 0), 1)))), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1) * 1, ((1) * 1) | (_GLF_IDENTITY((1) * 1, ~ (~ ((1) * 1))))), min(_GLF_IDENTITY((1) * 1, ((1) * 1) | (_GLF_IDENTITY((1) * 1, ~ (~ ((1) * 1))))), _GLF_IDENTITY((1) * 1, ((1) * 1) | (_GLF_IDENTITY((1) * 1, ~ (~ ((1) * 1))))))))) - _GLF_IDENTITY(0, max(0, 0))), _GLF_IDENTITY(1, 0 ^ (1)))))), 1), clamp(min(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | 0) * 1)) - 0), 1)), 1), min(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, 0, _GLF_IDENTITY(0, int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (0)))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (0)))), clamp(int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), (~ (~ (0))) << 0))), int(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), ~ (~ (0)))), int(_GLF_IDENTITY(0, ~ (~ (0)))))), _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(_GLF_IDENTITY(ivec3(~ (0), 0, 1), ~ (~ (ivec3(~ (0), 0, 1))))))))), max(int(_GLF_IDENTITY(0, ~ (~ (0)))), int(_GLF_IDENTITY(0, ~ (~ (0))))))))))))), (1) * 1)) - 0), 1)), 1), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) - 0), 1)), int(ivec2(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) - 0), 1)), int(_GLF_ONE(1.0, injectionSwitch.y))))), 1), clamp(min(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) - 0), 1)), 1), min(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), max((_GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) / 1)), clamp((_GLF_IDENTITY(1, (1) / 1)), (_GLF_IDENTITY(1, (1) / 1)), (_GLF_IDENTITY(1, (1) / 1)))))) * 1)) - 0), 1)), 1), _GLF_IDENTITY(min(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) - 0), 1)), 1), (false ? _GLF_FUZZED(72143) : min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) - 0), 1)), 1)))))))))) | int(_GLF_ZERO(0.0, injectionSwitch.x))))) % subgroup_size)) + 0u);
 do
  {
   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) / 1), _GLF_IDENTITY(int(_GLF_IDENTITY(int(0 | 0), clamp(int(0 | 0), int(0 | 0), int(0 | 0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(int(0 | 0)) : _GLF_FUZZED(_injected_loop_counter)))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, 0 | (0)))), _GLF_IDENTITY(int(int(0 | 0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(int(0 | 0)) : _GLF_FUZZED(_injected_loop_counter))))))))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 | 0), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_injected_loop_counter != (0 | 0), false || (_injected_loop_counter != (0 | 0))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_injected_loop_counter != (0 | 0), false || (_injected_loop_counter != (0 | 0))), true)))))))) || _GLF_IDENTITY(false, true && (false))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> 0))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), clamp(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) ? _GLF_FUZZED(2255.7899) : injectionSwitch.x)))) > injectionSwitch.y))))
              {
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               barrier();
              }
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.x = next_virtual_gid;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false))))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     atomicStore(buf[GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.x], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, max(1, 1))), clamp(uint(_GLF_IDENTITY(1, _GLF_IDENTITY(max(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(-3056), clamp(_GLF_FUZZED(-3056), _GLF_FUZZED(-3056), _GLF_IDENTITY(_GLF_FUZZED(-3056), ~ (~ (_GLF_FUZZED(-3056))))))))))), _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(19105) : 1))))), (_GLF_IDENTITY(max(1, 1), (max(1, 1)) >> 0)) >> (1 ^ 1)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, max(1, 1))), (true ? uint(_GLF_IDENTITY(1, max(1, 1))) : _GLF_FUZZED(virtual_gid))), uint(_GLF_IDENTITY(1, max(1, 1))))), 4, 64, 4);
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-90109))), (0) | (0)), min(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), min(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), max(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, (0) | (0)))), _GLF_IDENTITY(0, (0) | (0)))), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, 0 ^ (0)))), (false ? _GLF_FUZZED(-32562) : _GLF_IDENTITY(0, (0) | (0)))))), ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), ~ (_GLF_IDENTITY(~ ((0) | (0)), (~ ((0) | (0))) + (0 >> _GLF_IDENTITY(int(6), int(6))))))))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), ((0)) | ((0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0))))) + 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0)))), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0))))))))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), clamp((0) | (0), (0) | (0), _GLF_IDENTITY((0) | (0), ~ (_GLF_IDENTITY(~ ((0) | (0)), _GLF_IDENTITY((~ ((0) | (0))) | (~ ((0) | (0))), 0 ^ (_GLF_IDENTITY((~ ((0) | (0))) | (~ ((0) | (0))), ((~ ((0) | (0))) | (~ ((0) | (0)))) >> 0))))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0))) / int(_GLF_ONE(1.0, injectionSwitch.y))))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(53944) : _GLF_IDENTITY(0, (0) | (0))))) - _GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(2), int(2)))))))))) << 0))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp((0), (0), (0))) | (0)))))), int(_GLF_IDENTITY(ivec3((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp((0), (0), (0))) | (0)))))), 1, 1), ~ (~ (ivec3((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp((0), (0), (0))) | (0)))))), 1, 1)))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(-60905), (_GLF_FUZZED(-60905)) - 0) : _GLF_IDENTITY(0, (0) | (0)))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0))))) + 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0)))), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0))))))))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), clamp((0) | (0), (0) | (0), _GLF_IDENTITY((0) | (_GLF_IDENTITY(0, (0) >> 0)), ~ (_GLF_IDENTITY(~ ((0) | (0)), (~ ((0) | (0))) | (~ ((0) | (0))))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-60905, min(-60905, -60905))) : _GLF_IDENTITY(0, (0) | (0)))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp((0), (0), (0))) | (0)), (false ? _GLF_FUZZED(53944) : _GLF_IDENTITY(0, (0) | (0))))) - 0)))))) << 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0)))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, (1 | 0), int(_GLF_ONE(1.0, injectionSwitch.y))), min(ivec3(0, (1 | 0), int(_GLF_ONE(1.0, injectionSwitch.y))), ivec3(0, (1 | 0), int(_GLF_ONE(1.0, injectionSwitch.y))))))))), (0) | (0)), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), max((0) | (0), (0) | (0))))), int(int((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), max((0) | (0), (0) | (0))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0))))) + 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0)))), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0))))))))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), clamp((0) | (0), (0) | (_GLF_IDENTITY(0, clamp(0, 0, 0))), _GLF_IDENTITY((0) | (0), ~ (_GLF_IDENTITY(~ ((0) | (0)), (~ ((0) | (0))) | (~ ((0) | (0))))))))), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0)))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(53944) : _GLF_IDENTITY(0, (0) | (0))))) - 0)))))) << 0))), (false ? _GLF_FUZZED(-70157) : _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0)))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), 0 | (_GLF_IDENTITY(0, (0) | (0)))), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0)))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0))))) + 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0)))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0)))), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0)))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0))))) ^ 0))))), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0))))))))) | _GLF_IDENTITY((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), clamp((0) | (0), (0) | (0), _GLF_IDENTITY((0) | (0), ~ (_GLF_IDENTITY(~ ((0) | (0)), (~ ((0) | (0))) | (~ ((0) | (0))))))))), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0)))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(53944) : _GLF_IDENTITY(0, (0) | (0))))) - 0)))))) << 0)), ((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), clamp((0) | (0), (0) | (0), _GLF_IDENTITY((0) | (0), ~ (_GLF_IDENTITY(~ ((0) | (0)), (~ ((0) | (0))) | (~ ((0) | (0))))))))), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0)))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(53944) : _GLF_IDENTITY(0, (0) | (0))))) - 0)))))) << 0))) | (_GLF_IDENTITY((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), clamp((0) | (0), (0) | (0), _GLF_IDENTITY((0) | (0), ~ (_GLF_IDENTITY(~ ((0) | (0)), (~ ((0) | (0))) | (~ ((0) | (0))))))))), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0)))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(53944) : _GLF_IDENTITY(0, (0) | (0))))) - 0)))))) << 0)), 1 * ((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), clamp((0) | (0), (0) | (0), _GLF_IDENTITY((0) | (0), ~ (_GLF_IDENTITY(~ ((0) | (0)), (~ ((0) | (0))) | (~ ((0) | (0))))))))), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0)))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(53944) : _GLF_IDENTITY(0, (0) | (0))))) - 0)))))) << 0))))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0)))))), _GLF_IDENTITY(((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0)))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0))))) + 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0)))), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0))))))))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), clamp((0) | (0), (0) | (0), _GLF_IDENTITY((0) | (0), ~ (_GLF_IDENTITY(~ ((0) | (0)), (~ ((0) | (0))) | (~ ((0) | (0))))))))), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0)))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(53944) : _GLF_IDENTITY(0, (0) | (0))))) - 0)))))) << 0)), ~ (~ (((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0)))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), (0 ^ 0) + ((0)))), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), (0 ^ 0) + ((0)))), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), (0 ^ 0) + ((0)))), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), (0 ^ 0) + ((0)))), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0)))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), (0 ^ 0) + ((0)))), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), (0 ^ 0) + ((0)))), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0))))))) + 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (0) | (0)))), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0))))))))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((0) | (0), clamp((0) | (0), (0) | (0), _GLF_IDENTITY((0) | (0), ~ (_GLF_IDENTITY(~ ((0) | (0)), (~ ((0) | (0))) | (~ ((0) | (0))))))))), _GLF_IDENTITY((false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(5), int(5))) ^ (_GLF_IDENTITY((false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0))), ((false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(0, (0) | (0)))) << 0)))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY((false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, min(0, 0)), 0))) | (0)), (false ? _GLF_FUZZED(53944) : _GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, (0) << 0), 1))), (0) | (0))))) - 0)), max((false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, min(0, 0)), 0))) | (0)), (false ? _GLF_FUZZED(53944) : _GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, (0) << 0), 1))), (0) | (0))))) - 0)), (false ? _GLF_FUZZED(-60905) : _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, min(0, 0)), 0))) | (0)), (false ? _GLF_FUZZED(53944) : _GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, (0) << 0), 1))), (0) | (0))))) - 0)))))))) << 0))))))) ^ 0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / 1))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (false)), true, false, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), false), bvec2(bvec2(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), false)))))) || _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)) && (false), (_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))) || (true)) && (false)) && true)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)) && (false), (_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))) || (true)) && (false)) && true)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)) && (false), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))) || (true)), (_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))) || (true))) && true) && (false)) && true)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), true && ((true)))) && (false))))))) || false)))))))) && true)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))))), ! (! (_GLF_IDENTITY(false, true && (false)))))))))) && true)) || false), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || (! (_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(true, (true) || false) && (false)))))))))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && (false))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)))))))))) && true)), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && (false))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, bool(bool((true) || false)))) && (false)))))))), bool(bvec4(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && (false))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, bool(bool((true) || false)))) && (false)))))))), ! (! ((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && (false))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, bool(bool((true) || false)))) && (false))))))))))), true, false, true))))) && true)))))) && true) || false)), bool(bvec3(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && (false))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)))))))))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), ! (! (bool(bool(_GLF_IDENTITY(false, true && (false)))))))), bool(bvec3(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), ! (! (bool(bool(_GLF_IDENTITY(false, true && (false)))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)))))))))) && true)), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && (false))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)))))))))) && true)))))) && true) || false)), false, false))))) || false))
          barrier();
        }
       else
        {
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 do
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (0 | (0 | 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), ((_GLF_WRAPPED_IF_TRUE(true))) || false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), ((_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ((true) && true) && true))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, true))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))))))), ((_GLF_WRAPPED_IF_TRUE(true))) || false), true, false)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), ((_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && true)), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), ((_GLF_WRAPPED_IF_TRUE(true))) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((false), ((false)) || false))), true, false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), ((_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))) || false), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), ((_GLF_WRAPPED_IF_TRUE(true))) || false), true, false))))))), true)))))))
      {
       if(GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false), bvec3(bvec4(bvec3(bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false), true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
            barrier();
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))));
               barrier();
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(94.92) : injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(94.92) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(94.92) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(94.92) : injectionSwitch.x)))) : _GLF_FUZZED(-71.54))) < injectionSwitch.y))))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), bool(bool(! (_GLF_WRAPPED_IF_FALSE(false))))))))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             barrier();
                            }
                          }
                        }
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(1 & 1, int(ivec2(1 & 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))))))); _injected_loop_counter ++)
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) : _GLF_IDENTITY(true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), (true ? _GLF_IDENTITY(_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), (_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89)))) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), (true ? _GLF_IDENTITY(_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), (_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89)))) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0)), clamp(true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(_GLF_IDENTITY(3318.9193, min(3318.9193, _GLF_IDENTITY(3318.9193, (3318.9193) - 0.0))), 6.9), vec2(97.58, 39.89))), true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), true ? (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(53.31), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(0.3)), bvec2(true, false)))) - vec2(0.0, 0.0))) : _GLF_IDENTITY(_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), (_GLF_IDENTITY(_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), (true ? _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))) : _GLF_FUZZED(vec2(-49.00, -2.7))))) / vec2(1.0, 1.0))))))), vec2(mat2x4((_GLF_IDENTITY(true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(_GLF_IDENTITY(vec2(3318.9193, 6.9), min(vec2(3318.9193, 6.9), vec2(3318.9193, 6.9))), vec2(97.58, 39.89))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), clamp(true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(3318.9193, _GLF_IDENTITY(6.9, min(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-1.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 6.9))), vec2(97.58, 39.89))), true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) - length(vec3(0.0, 0.0, 0.0)))))) : _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89)))))))), 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))))) * mat2(1.0), max(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) ? (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_IDENTITY(_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), (_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89)))) - vec2(0.0, 0.0)), (_GLF_IDENTITY(_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), (_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89)))) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))), clamp(true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(_GLF_IDENTITY(3318.9193, min(3318.9193, _GLF_IDENTITY(3318.9193, (3318.9193) - 0.0))), 6.9), vec2(97.58, 39.89))), true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))))), vec2(mat4(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_IDENTITY(_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), (_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89)))) - vec2(0.0, 0.0)), (_GLF_IDENTITY(_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), (_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89)))) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))), clamp(true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(_GLF_IDENTITY(3318.9193, min(3318.9193, _GLF_IDENTITY(3318.9193, (3318.9193) - 0.0))), 6.9), vec2(97.58, 39.89))), true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0)))))), vec2(mat2x4((_GLF_IDENTITY(true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(vec2(35.64, 6.3)))))) : _GLF_FUZZED(mod(_GLF_IDENTITY(vec2(3318.9193, 6.9), min(vec2(3318.9193, 6.9), vec2(3318.9193, _GLF_IDENTITY(6.9, clamp(6.9, 6.9, 6.9))))), vec2(97.58, 39.89))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), clamp(true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89)))))))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) * mat2(1.0), mix(vec2((false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) ? (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_IDENTITY(_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), (_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89)))) - vec2(0.0, 0.0)), (_GLF_IDENTITY(_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), (_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89)))) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))), clamp(true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(_GLF_IDENTITY(3318.9193, min(3318.9193, _GLF_IDENTITY(3318.9193, (3318.9193) - 0.0))), 6.9), vec2(97.58, 39.89))), true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))))), vec2(mat4(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_IDENTITY(_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), (_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89)))) - vec2(0.0, 0.0)), (_GLF_IDENTITY(_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), (_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89)))) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))), clamp(true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(_GLF_IDENTITY(3318.9193, min(3318.9193, _GLF_IDENTITY(3318.9193, (3318.9193) - 0.0))), 6.9), vec2(97.58, 39.89))), true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0)))))), vec2(mat2x4((_GLF_IDENTITY(true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(vec2(35.64, 6.3)))))) : _GLF_FUZZED(mod(_GLF_IDENTITY(vec2(3318.9193, 6.9), min(vec2(3318.9193, 6.9), vec2(3318.9193, _GLF_IDENTITY(6.9, clamp(6.9, 6.9, 6.9))))), vec2(97.58, 39.89))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), clamp(true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89)))))))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) * mat2(1.0))[0], (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) ? (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_IDENTITY(_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), (_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89)))) - vec2(0.0, 0.0)), (_GLF_IDENTITY(_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), (_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89)))) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))), clamp(true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(_GLF_IDENTITY(3318.9193, min(3318.9193, _GLF_IDENTITY(3318.9193, (3318.9193) - 0.0))), 6.9), vec2(97.58, 39.89))), true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))))), vec2(mat4(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_IDENTITY(_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), (_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89)))) - vec2(0.0, 0.0)), (_GLF_IDENTITY(_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), (_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89)))) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))), clamp(true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(_GLF_IDENTITY(3318.9193, min(3318.9193, _GLF_IDENTITY(3318.9193, (3318.9193) - 0.0))), 6.9), vec2(97.58, 39.89))), true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0)))))), vec2(mat2x4((_GLF_IDENTITY(true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(vec2(35.64, 6.3)))))) : _GLF_FUZZED(mod(_GLF_IDENTITY(vec2(3318.9193, 6.9), min(vec2(3318.9193, 6.9), vec2(3318.9193, _GLF_IDENTITY(6.9, clamp(6.9, 6.9, 6.9))))), vec2(97.58, 39.89))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), clamp(true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89)))))))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) * mat2(1.0))[1]), vec2(_GLF_FUZZED((false ? -6.2 : -43.45)), _GLF_FUZZED(14.00)), bvec2(false, false))), false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), clamp(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch))))) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0)), 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(true ? (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))) : _GLF_IDENTITY(_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), (true ? _GLF_IDENTITY(_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), (_GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89)))) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))), clamp(true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(_GLF_IDENTITY(3318.9193, min(3318.9193, _GLF_IDENTITY(3318.9193, (3318.9193) - 0.0))), 6.9), vec2(97.58, 39.89))), _GLF_IDENTITY(true, false || (true)) ? (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), min(_GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), min((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0))), (injectionSwitch) - vec2(0.0, 0.0))))) : _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), true ? (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89)))))))), vec2(mat2x4((_GLF_IDENTITY(true ? (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)))), mat3x4(mat4(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)))))))))) : _GLF_FUZZED(mod(_GLF_IDENTITY(vec2(3318.9193, 6.9), min(vec2(3318.9193, 6.9), vec2(3318.9193, 6.9))), vec2(97.58, 39.89))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), clamp(true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89))), _GLF_IDENTITY(true, ! (! (true))) ? (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(mod(vec2(3318.9193, 6.9), vec2(97.58, 39.89)))))))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) * mat2(1.0))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(mat2x4((injectionSwitch), 0.0, log(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), (dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))) / 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))) * mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat2x4(1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0)), dot(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(37.64)), bool(false))), 0.0, 1.0, 0.0), vec4(1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 1.0))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, round(length(normalize(vec2(1.0, 1.0))))), mat3(mat3x4(mat3(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))), vec2(mat4x3(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))), (vec2(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))) - vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, tan(0.0)))), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0))))))))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(mat3(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0))))), mat3(mat3x4(mat3(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))))))))))) : (injectionSwitch) * mat2(1.0)))) - vec2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) + 0.0, float(mat2((0.0) + 0.0, 1.0, 0.0, sin(0.0)))))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec4((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))) - vec2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(0.0, (0.0) + 0.0)))), sqrt(0.0), determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec4(mat4x2(vec4((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))) - vec2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(0.0, (0.0) + 0.0)))), sqrt(0.0), determinant(mat2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-0.7 - 5.2))), float(0.0), bool(true))), 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(vec4((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))) - vec2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(0.0, (0.0) + 0.0)))), sqrt(0.0), determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec4(mat4x2(vec4((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat2(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))))))))) - vec2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(0.0, (0.0) + 0.0)))), sqrt(0.0), determinant(mat2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-0.7 - 5.2))), float(0.0), bool(true))), 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(vec4(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(vec4((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0), max(_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0), min(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0))), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))))) - vec2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)), (max(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5.4)), bool(false))), 0.0)))), _GLF_IDENTITY(0.0, (0.0) / 1.0))) / 1.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0)))) + 0.0)))), sqrt(0.0), determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (true ? _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(6748.2622, 9.9, 704.832, -794.869)) : mat2(0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(mat2(93.15, -5.3, -37.43, 78.99)))))), vec4(mat4x2(vec4((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-93.32), _GLF_FUZZED(-8926.5338)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) : (injectionSwitch) * mat2(1.0)))) - vec2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(mix(float(_GLF_FUZZED(530.527)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true)), float(mat2x3(mix(float(_GLF_FUZZED(530.527)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true)), 1.0, 1.0, 0.0, 0.0, tan(0.0))))))), _GLF_IDENTITY(0.0, (0.0) + 0.0)))), sqrt(_GLF_IDENTITY(0.0, (0.0) * 1.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0))), (_GLF_IDENTITY(vec4((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0)))))) - vec2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, clamp((0.0) / 1.0, _GLF_IDENTITY(_GLF_IDENTITY((0.0) / 1.0, mix(float(_GLF_FUZZED(float(38617))), float((0.0) / 1.0), bool(true))), max((0.0) / 1.0, (0.0) / 1.0)), (0.0) / 1.0))))), _GLF_IDENTITY(0.0, (0.0) + 0.0)))), sqrt(0.0), determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec4(mat4x2(vec4((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-5574.9313, -16.56)), (false ? _GLF_FUZZED(vec2(-7.7, -5.4)) : _GLF_FUZZED(vec2(-5574.9313, -16.56)))) : injectionSwitch), min(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-5574.9313, -16.56)), (false ? _GLF_FUZZED(vec2(-7.7, -5.4)) : _GLF_FUZZED(vec2(-5574.9313, -16.56)))) : injectionSwitch), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(46.44, 42.34)) : (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-5574.9313, -16.56)), (false ? _GLF_FUZZED(vec2(-7.7, -5.4)) : _GLF_FUZZED(vec2(-5574.9313, -16.56)))) : injectionSwitch))), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-5574.9313, -16.56)), (false ? _GLF_FUZZED(vec2(-7.7, -5.4)) : _GLF_FUZZED(vec2(-5574.9313, -16.56)))) : injectionSwitch)))))))) : (injectionSwitch) * mat2(1.0)))) - vec2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - abs(sin(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8.8) : 0.0)))), (0.0) / 1.0))), _GLF_IDENTITY(0.0, (0.0) + 0.0)))), sqrt(0.0), determinant(mat2(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0)))) * mat4(1.0)), 1.0, 0.0)), (vec4(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(vec4((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))) * mat2(1.0))))) - vec2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), (true ? _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, (1.0) / 1.0)))) : _GLF_FUZZED(_GLF_IDENTITY(-6.7, max(-6.7, _GLF_IDENTITY(-6.7, min(_GLF_IDENTITY(-6.7, float(mat2x3(-6.7, 0.0, 1.0, 1.0, 1.0, 0.0))), -6.7))))))), _GLF_IDENTITY(0.0, (0.0) + 0.0)))), sqrt(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(3773.8508)), bool(false)))), determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec4(mat4x2(vec4((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) * mat2(1.0)) : _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0))))), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))))) - vec2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0))), (false ? _GLF_IDENTITY(_GLF_FUZZED(34.94), (_GLF_FUZZED(34.94)) - 0.0) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), max(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), max(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))))))))), _GLF_IDENTITY(0.0, (0.0) + 0.0)))), sqrt(0.0), determinant(mat2(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0))), (_GLF_IDENTITY(vec4((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(float(false)) : 1.0)))))) - vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(0.0, (0.0) + 0.0)))), sqrt(0.0), determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), vec4(mat4x2(vec4((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))))) - vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(0.0, 1.0, 0.0, 1.0), (mat2(0.0, 1.0, 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))), min(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(0.0, (0.0) + 0.0)))), sqrt(0.0), determinant(mat2(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0)))) * mat4(1.0)), _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, sqrt(1.0), abs(1.0), 1.0))), 0.0))) - _GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(33.06) : 0.0))) - 0.0), 0.0, 0.0, 0.0), (true ? _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), max(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(vec4(-9.2, -8.6, -821.174, 7459.8486)))))))))).x > injectionSwitch.y))))
                            {
                             do
                              {
                               barrier();
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                          }
                        }
                      }
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                        {
                         barrier();
                        }
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                      }
                    }
                  }
                }
               else
                {
                }
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    {
                     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                      {
                       barrier();
                      }
                    }
                  }
                 else
                  {
                  }
                 do
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.8)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))))
                      barrier();
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             do
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) ^ 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, (0) << 0)))); _injected_loop_counter --)
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))), true && (bool(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))), true && (bool(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))), false, true)))))))))))))
                  {
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((+ 74.87))), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), max(injectionSwitch, injectionSwitch)))).y))));
                    }
                   do
                    {
                     barrier();
                    }
                   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), ! (! (! (_GLF_WRAPPED_LOOP(false)))))), ! (! (! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), ! (! (! (_GLF_WRAPPED_LOOP(false)))))))))));
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))));
            }
           else
            {
             atomicStore(checker[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(read, 0u | (_GLF_IDENTITY(read, 0u ^ (read)))), ~ (~ (_GLF_IDENTITY(read, (read) | (read))))), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4), ((4)) | ((4))), 0 + ((_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) + 0)))))), (true ? _GLF_IDENTITY((4), (true ? _GLF_IDENTITY((4), ((4)) | ((4))) : _GLF_FUZZED(75382))) : _GLF_FUZZED(-5779))) / 1), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4) / 1, ((4) / 1) + 0), max(_GLF_IDENTITY((4) / 1, ((4) / 1) + 0), _GLF_IDENTITY((4) / 1, ((4) / 1) + 0))))) | 0))));
            }
          }
         do
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               for(int _injected_loop_counter = (1 ^ _GLF_IDENTITY(0, 0 | (0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     do
                      {
                       do
                        {
                         subgroupAll(false);
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))));
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), ! (_GLF_IDENTITY(! (! ((false))), false || (! (! ((false)))))))), bool(bvec3((_GLF_IDENTITY(! ((false)), ! (_GLF_IDENTITY(! (! ((false))), false || (! (! ((false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x > injectionSwitch.y))));
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))
                  barrier();
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)), _injected_loop_counter, _injected_loop_counter)) != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true))));
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         do
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), false || (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), false || (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), (_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))) || false)))))); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(ivec2(int(1), 0))), int(1)))); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                }
              }
             else
              {
              }
             atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : read), _GLF_IDENTITY(clamp((false ? _GLF_FUZZED(workgroup_size) : read), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(read, min(read, read))), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), min(_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (true ? _GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))) : _GLF_FUZZED(num_workgroup)))), _GLF_FUZZED(workgroup_size))) : read)), (true ? _GLF_IDENTITY(clamp((false ? _GLF_FUZZED(workgroup_size) : read), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(read, min(read, read))), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), min(_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (true ? _GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))) : _GLF_FUZZED(num_workgroup)))), _GLF_FUZZED(workgroup_size))) : read)), (_GLF_IDENTITY(clamp((false ? _GLF_FUZZED(workgroup_size) : read), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(read, min(read, read))), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), min(_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (true ? _GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))) : _GLF_FUZZED(num_workgroup)))), _GLF_FUZZED(workgroup_size))) : read)), uint(uvec3(clamp((false ? _GLF_FUZZED(workgroup_size) : read), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(read, min(read, read))), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), min(_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (true ? _GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))) : _GLF_FUZZED(num_workgroup)))), _GLF_FUZZED(workgroup_size))) : read)), 1u, 1u)))) >> 0u) : _GLF_FUZZED(read))))), _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 1, 1, 0), (ivec4(4, 1, 1, 0)) >> ivec4(0, 0, 0, 0)))), 64, 4);
            }
           for(int _injected_loop_counter = _GLF_IDENTITY(1, clamp(1, 1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
              barrier();
            }
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), false), bvec2(bvec2(bvec2(_GLF_WRAPPED_LOOP(false), false))))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), false), bvec2(bvec2(bvec2(_GLF_WRAPPED_LOOP(false), false)))))))));
         subgroupAll(true);
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
  }
}
