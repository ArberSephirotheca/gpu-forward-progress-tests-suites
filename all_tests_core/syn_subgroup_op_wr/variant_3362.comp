#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size.x = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size.z = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size.y = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size.w = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size.w * workgroup_id;
 uint virtual_gid = workgroup_base + GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size.x * GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size.z + GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size.y;
 uint next_virtual_gid = workgroup_base + GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size.x * GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size.z + ((GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size.y + 1) % GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size.z);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size.y + 1 < GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size.z)
  {
   switch(_GLF_SWITCH((23404 & 0)))
    {
     case 81:
     {
      for(bvec3 _GLF_SWITCH_0_0v; false; ivec4(2083, 98190, 39612, -90629))
       {
        -2.7;
       }
      vec3 _GLF_SWITCH_0_1v;
      mat3 _GLF_SWITCH_0_2v, _GLF_SWITCH_0_3v[47], _GLF_SWITCH_0_4v;
      if(true)
       {
        {
         ivec4(-41695, 89752, 30845, 11216);
         bvec3 _GLF_SWITCH_0_5v, _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v;
         ivec3 _GLF_SWITCH_0_8v, _GLF_SWITCH_0_9v;
         (ivec2(34733, -42265) - (~ ivec2(-13434, -43738)));
        }
        for(        findMSB(-23955);
 ((mat3x2(4911.2525, -54.98, 7.3, -7.5, 3924.5762, -10.63) / 38.95) != mat3x2(-79.88, -13.38, 9.9, -4974.6016, 733.085, 3.9)); bvec4(true, false, true, false))
         {
          mat4x2(996.822, -953.763, 9.8, -67.70, -28.84, 53.32, 867.019, 97.51);
          ;
          uvec3 _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v[35], _GLF_SWITCH_0_12v;
          bvec2 _GLF_SWITCH_0_13v;
          mat2(-5.9, 7224.2662, -5.5, -8.0);
          (uvec4(192619u, 86925u, 133166u, 198252u) + GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size.x);
          mat4x2(8.7, 5.3, 3.1, 276.660, 80.80, 7.8, -52.46, 8111.5274);
          uvec4 _GLF_SWITCH_0_14v, _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v[91];
          mat2(3.3, -377.931, -8.5, 39.26);
         }
        {
         ;
        }
        while(false)
         {
          mat4x3 _GLF_SWITCH_0_17v, _GLF_SWITCH_0_18v;
          (ivec3(33988, -80294, 57677) << 1503);
          ivec2 _GLF_SWITCH_0_19v, _GLF_SWITCH_0_20v;
          distance(round(2.1), 67.14);
          ;
          bvec4(false, true, true, false);
          mat4(85.65, -2787.3587, -2.8, 3.0, 6034.9600, -5216.2194, 359.303, 3.0, -19.03, -6.4, 59.32, 948.396, -45.72, 91.03, -5785.6378, 22.23);
          uint _GLF_SWITCH_0_21v, _GLF_SWITCH_0_22v;
          vec3 _GLF_SWITCH_0_23v[45], _GLF_SWITCH_0_24v, _GLF_SWITCH_0_25v[26];
         }
       }
      else
       {
        for(        ivec4(-3158, 5965, -20099, -58549);
 false; -59304)
         {
          mat3x2 _GLF_SWITCH_0_26v, _GLF_SWITCH_0_27v, _GLF_SWITCH_0_28v;
          bool _GLF_SWITCH_0_29v, _GLF_SWITCH_0_30v[67], _GLF_SWITCH_0_31v[5];
          mat4 _GLF_SWITCH_0_32v;
         }
        for(        (+ mat4(6676.7831));
 true; mat4x2(7.8, -2.3, -30.91, 539.593, -468.821, -557.054, -615.143, 7.3))
         {
          uvec2(53128u, 82679u);
         }
        ;
        vec4 _GLF_SWITCH_0_33v, _GLF_SWITCH_0_34v;
       }
      {
       mat2x3 _GLF_SWITCH_0_35v[3];
       mat4x3(-3.0, 3434.4189, -837.481, -19.07, -72.61, 6277.8898, 7090.1587, -1.5, 5.2, 282.840, 0.3, -429.904);
      }
     }
     case 52:
     {
      mat4(-89.23, 9.1, 82.84, -8.6, 0.9, 5831.6810, -0.4, -0.6, -5.8, 98.64, 9.4, 1.8, -671.089, 3.4, 8.0, -575.473);
     }
     case 0:
     case 79:
     case 3:
     case 44:
     case 42:
     case 65:
     atomicStore(checker[virtual_gid], read, 4, 64, 4);
     case 97:
     case 29:
     subgroupAll(false);
     break;
     default:
     1;
    }
  }
 else
  {
   switch(_GLF_SWITCH(0))
    {
     case 97:
     mat3x2(9234.3538, 2.3, -3134.8905, 6.5, -9.8, 4116.3149);
     case 51:
     (vec3(-8.8, 7.1, -80.79) * mat2x3(-963.985, 570.270, 9932.9900, 4.8, -8277.3704, 785.491));
     case 0:
     case 68:
     case 79:
     case 65:
     case 20:
     case 64:
     case 90:
     atomicStore(checker[virtual_gid], read, 4, 64, 4);
     case 40:
     case 6:
     subgroupAll(true);
     break;
     case 12:
     bvec4 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v[14], _GLF_SWITCH_1_2v[6];
     default:
     1;
    }
  }
}
