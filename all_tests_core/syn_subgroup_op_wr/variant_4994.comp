#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || (_GLF_IDENTITY((false) || false, ((false) || false) || false))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 0u)))))))), clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6335.6849) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y)))) && true))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (gl_WorkGroupID), clamp(uvec3(0u, 0u, 0u) | (gl_WorkGroupID), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) >> uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (gl_WorkGroupID), (uvec3(0u, 0u, 0u) | (gl_WorkGroupID)) - uvec3(0u, 0u, 0u))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)) ? _GLF_FUZZED((++ workgroup_id)) : workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) | _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u)) - 0u)) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((subgroup_id * subgroup_size), max((subgroup_id * subgroup_size), (subgroup_id * subgroup_size)))), _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size, subgroup_id * subgroup_size))))) >> 0u) + subgroup_local_id, min(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | (subgroup_size), max(0u | (subgroup_size), 0u | (subgroup_size)))) + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))) - 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size : _GLF_FUZZED(subgroup_id))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), _GLF_IDENTITY(0u, _GLF_IDENTITY(0u + (0u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u + (0u), ~ (~ (0u + (0u))))))))))), clamp(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (~ (((_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))))) + 1) % _GLF_IDENTITY(subgroup_size, (1u ^ 1u) + (subgroup_size)))))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(virtual_gid) : subgroup_id * subgroup_size)))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(133228u) : _GLF_IDENTITY(workgroup_base, (workgroup_base) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_id * subgroup_size)))) + ((subgroup_local_id + 1) % subgroup_size), 1u)), uint(uvec2(uint(_GLF_IDENTITY(uvec2(workgroup_base + _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(num_workgroup))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u), (false ? _GLF_FUZZED(((false ? workgroup_size : workgroup_size) | uvec2(41183u, 193562u))) : uvec2(workgroup_base + _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(num_workgroup))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u)))), 0u))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (! (bool(bvec4(false, false, false, true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0))), cos(0.0), cos(0.0), 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, abs(0.0), 0.0)), max(float(mat4(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, tan(0.0), cos(0.0), cos(0.0), 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, abs(0.0), 0.0)), _GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, tan(0.0), cos(0.0), cos(0.0), 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, abs(0.0), 0.0)), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, tan(0.0), cos(0.0), cos(0.0), 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, abs(0.0), 0.0)), (false ? _GLF_FUZZED(-86.76) : float(mat4(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, tan(0.0), cos(0.0), cos(0.0), 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, abs(0.0), 0.0)))), 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0)), (float(mat4(_GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, tan(0.0), cos(0.0), cos(0.0), 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, abs(0.0), 0.0)), (false ? _GLF_FUZZED(-86.76) : float(mat4(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, tan(0.0), cos(0.0), cos(0.0), 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, abs(0.0), 0.0)))), 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0))) + 0.0))))) > _GLF_IDENTITY(injectionSwitch.y, sqrt(abs(1.0)) * (injectionSwitch.y))))))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) >> _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u)))), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u)))))), (uint(uint((_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u))))))) / 1u)))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.2)), bool(false))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.2)), bool(false))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), clamp(_GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), float(_GLF_IDENTITY(vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0), _GLF_IDENTITY((vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0)) * mat4(1.0), min((vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0)) * mat4(1.0), (vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0)) * mat4(1.0)))))), _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), mix(float(round(length(normalize(vec2(1.0, 1.0))))), float(_GLF_FUZZED(1605.0972)), bool(false))), round(length(normalize(vec2(1.0, 1.0)))))), determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), 0.0, 0.0, 0.0, 1.0))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) || false)), true && (false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, bool(bool((false) || false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec4(bvec2((false), true), false, false))), bvec2(bvec3(bvec2((false), true), true))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true), false)))))))))) || false, bool(bool((false) || false)))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true))), true))))) || false, bool(bool((false) || false)))) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true))), true))))) || false, bool(bool((false) || false)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true))), true))))) || false, (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true))), true))))) || false, bool(bvec3(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true))), true))))) || false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), bool(bool((false) || false)))) || false))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true))), true))))) || false, bool(bool((false) || false)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true))), true))))) || false, bool(bool((false) || false)))) || false))), false, false)))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bool((false) || false), ! (! (_GLF_IDENTITY(bool((false) || false), (bool((false) || false)) || false)))))))), true && (false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, bool(bool((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, _GLF_IDENTITY(true, true && (true)), false, false))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false))))))) && true))))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true))), true))))) || false, bool(bool((false) || false)))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true))), true))))) || false, _GLF_IDENTITY(bool(bool((false) || false)), true && (bool(bool((false) || false)))))) || false))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) || false)), true && (false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, bool(bool((false) || false))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true))), false))), true))))) || false, bool(bool(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bool((false))))))) || false)))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true))), false))), true))))) || false, bool(bool(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bool((false))))))) || false)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true))), false))), true))))) || false, bool(bool(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bool((false))))))) || false)))))), false, true))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false), true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), false)))), false))))), bvec2(bvec3(bvec2((false), true), true))), true))))) || false, bool(bool((false) || false)))) || false)))))))), (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) || false)), true && (false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, bool(bool((false) || false))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true))), false))), true))))) || false, bool(bool(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), true, true, false)))))) || false)))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true))), false))), true))))) || false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bool((false))))))) || false), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bool((false))))))) || false)), bool(bvec3(! (bool(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bool((false))))))) || false)), false, true)))))))), _GLF_IDENTITY(false, bool(bool(false))) || ((_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true))), false))), true))))) || false, bool(bool(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bool((false))))))) || false)))))), false, true))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false), true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), false)))), false))))), bvec2(bvec3(bvec2((false), true), true))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false), true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), false)))), false))))), bvec2(bvec3(bvec2((false), true), true))), true)))))))) || false, bool(bool((false) || false)))) || false))))))))) && true)), false, false)))) && true)), _GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false))))), true && (((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false)))))))))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.9), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(4.1)), bvec2(true, false))).y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), clamp((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0))), _GLF_IDENTITY((1.0), min(_GLF_IDENTITY((1.0), max((1.0), (1.0))), (1.0))))) - 0.0), 0.0)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)), _GLF_IDENTITY(false || (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) + (0u ^ 0u)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1 < subgroup_size), true && (! (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / _GLF_IDENTITY(1u, (0u ^ ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) * (1u))) + 1 < subgroup_size)))))))), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) + (0u ^ 0u)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1 < subgroup_size), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) && (! (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / _GLF_IDENTITY(1u, (0u ^ ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) * (1u))) + 1 < subgroup_size))))))))), (! (false || (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) + (0u ^ 0u)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1 < subgroup_size), true && (! (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / _GLF_IDENTITY(1u, (0u ^ ((_GLF_IDENTITY(1u, (1u) | (1u)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) >> 0u)) + 0u)), _GLF_IDENTITY(uint(6u), min(_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u)))))))) * (1u))) + 1 < subgroup_size)))))))))) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (_GLF_IDENTITY(false, ! (! (false))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(false);
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), _GLF_IDENTITY(! (! (false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(! (! (false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), false || (! (! (false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))), true, false, true)))))), false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-11801))), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(11.30, 517.426)) : injectionSwitch)).y) - 0.0), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), mat2(_GLF_IDENTITY(mat2x3(mat2(injectionSwitch, 0.0, 0.0)), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x3(mat2(injectionSwitch, 0.0, 0.0)))))))).x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(-9685.8439)), min(float(_GLF_FUZZED(-9685.8439)), _GLF_IDENTITY(float(_GLF_FUZZED(-9685.8439)), min(float(_GLF_FUZZED(_GLF_IDENTITY(-9685.8439, clamp(-9685.8439, -9685.8439, -9685.8439)))), float(_GLF_FUZZED(_GLF_IDENTITY(-9685.8439, clamp(-9685.8439, -9685.8439, -9685.8439)))))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(-9685.8439)), min(float(_GLF_FUZZED(-9685.8439)), _GLF_IDENTITY(float(_GLF_FUZZED(-9685.8439)), min(float(_GLF_FUZZED(_GLF_IDENTITY(-9685.8439, clamp(-9685.8439, -9685.8439, -9685.8439)))), float(_GLF_FUZZED(_GLF_IDENTITY(-9685.8439, clamp(-9685.8439, -9685.8439, -9685.8439)))))))), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(-9685.8439)), min(float(_GLF_FUZZED(-9685.8439)), _GLF_IDENTITY(float(_GLF_FUZZED(-9685.8439)), min(float(_GLF_FUZZED(_GLF_IDENTITY(-9685.8439, clamp(-9685.8439, -9685.8439, -9685.8439)))), float(_GLF_FUZZED(_GLF_IDENTITY(-9685.8439, clamp(-9685.8439, -9685.8439, -9685.8439)))))))), _GLF_IDENTITY(float(_GLF_FUZZED(-9685.8439)), min(float(_GLF_FUZZED(-9685.8439)), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-9685.8439, min(_GLF_IDENTITY(-9685.8439, mix(float(_GLF_IDENTITY(-9685.8439, 1.0 * (-9685.8439))), float(_GLF_FUZZED(-23.09)), bool(false))), -9685.8439)))), min(float(_GLF_FUZZED(_GLF_IDENTITY(-9685.8439, clamp(-9685.8439, -9685.8439, -9685.8439)))), float(_GLF_FUZZED(_GLF_IDENTITY(-9685.8439, clamp(-9685.8439, -9685.8439, -9685.8439)))))))), _GLF_IDENTITY(float(_GLF_FUZZED(-9685.8439)), min(float(_GLF_FUZZED(-9685.8439)), _GLF_IDENTITY(float(_GLF_FUZZED(-9685.8439)), min(float(_GLF_FUZZED(_GLF_IDENTITY(-9685.8439, clamp(-9685.8439, -9685.8439, -9685.8439)))), float(_GLF_FUZZED(_GLF_IDENTITY(-9685.8439, clamp(-9685.8439, -9685.8439, -9685.8439))))))))))), float(_GLF_FUZZED(float(68490u))), bool(false))), float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), bool(true))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-9685.8439)), min(float(_GLF_FUZZED(-9685.8439)), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-9685.8439, float(mat4(-9685.8439, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), sqrt(1.0), 0.0, 0.0))))), min(float(_GLF_FUZZED(_GLF_IDENTITY(-9685.8439, clamp(-9685.8439, -9685.8439, -9685.8439)))), float(_GLF_FUZZED(-9685.8439)))))), float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), bool(true))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, ! (! (true))), false, false)), (bool(bvec4(false, _GLF_IDENTITY(true, ! (! (true))), false, false))) && true))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false || (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) > injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec4(bvec3(bvec3(false, true, false)), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec4(bvec3(bvec3(false, true, false)), false)))))))), bvec3(bvec3(bvec3(false, true, false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))))))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, bool(bool(true))), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))), true)), true)))))))))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false) && true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false))), ! _GLF_IDENTITY(_GLF_IDENTITY((! ((false) && true)), false || ((! ((false) && true)))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true) && true), (! (_GLF_IDENTITY((false), ((false)) && true) && true)) && true)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY((false) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false))), ! (! ((false) && _GLF_IDENTITY(true, (true) || false)))))), (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), true, true, false))) && true, bool(bvec3(_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))) && true, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), true))))), false))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) && true), true && (_GLF_IDENTITY(((false) && true), ! (! (((false) && true)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, _GLF_IDENTITY(false, ! (! (false)))))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(((false) && true), true && (_GLF_IDENTITY(((false) && true), ! (! (((false) && true)))))), ! (! (! _GLF_IDENTITY(((false) && true), true && (_GLF_IDENTITY(((false) && true), ! (! (((false) && true)))))))))), bool(bvec2((_GLF_IDENTITY(! _GLF_IDENTITY(((false) && true), true && (_GLF_IDENTITY(((false) && true), ! (! (((false) && true)))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY((false) && true, ! (! ((false) && true)))), true && (_GLF_IDENTITY(((false) && true), ! (! (((false) && true)))))))))), true)))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (! ((_GLF_IDENTITY(_GLF_IDENTITY((false) && true, bool(bvec3((false) && true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), false))), ! (! ((false) && true)))))))) && _GLF_IDENTITY(true, false || (true))))))), (_GLF_IDENTITY((false) && true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false) && true, bool(_GLF_IDENTITY(bvec3((false) && true, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (! (false))), false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((false) && true, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false)))))), false), bvec3(_GLF_IDENTITY(bvec3(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false)), bvec3(bvec4(bvec3(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false)), false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false), bvec3(_GLF_IDENTITY(bvec3(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false)), bvec3(bvec4(bvec3(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) || (false))) && true, _GLF_IDENTITY(false, ! (! (false))), false)), false)))))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false), bvec3(_GLF_IDENTITY(bvec3(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false)), bvec3(bvec4(bvec3(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false)), false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false), bvec3(_GLF_IDENTITY(bvec3(bvec3((false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), true))))), true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false))), false)), bvec3(bvec4(bvec3(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false)), false)))))), true)))))))))), ! _GLF_IDENTITY((! ((false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))), false || ((! ((false) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), true && (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), false || (! (true)))))))))))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY((false) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false))), ! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) && true))))), (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, true && (false))) && true, _GLF_IDENTITY(false, ! (! (false))), false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false), bvec3(bvec3(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false)))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false), bvec3(bvec3(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false)))), false)), true))))))))), ! (! _GLF_IDENTITY(((false) && true), true && (_GLF_IDENTITY(((false) && true), ! (! (((false) && true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ((false) && true) && true)) && true), _GLF_IDENTITY(false, ! (! (false))), false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false), bvec3(bvec3(bvec3((false) && true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), false)))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false), bvec3(bvec3(bvec3((false) && true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), false)))), false)), true))))))))), ! (! _GLF_IDENTITY(((false) && true), true && (_GLF_IDENTITY(((false) && true), ! (! (((false) && true))))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, _GLF_IDENTITY(bool(bvec3((false) && true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), false)), (bool(bvec3((false) && true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), false))) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(_GLF_IDENTITY(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false), bvec3(bvec3(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false)))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false), bvec3(bvec3(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, true && (false)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false), bvec3(bvec3(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, true && (false))))))))), false)), true))))))))), ! (! _GLF_IDENTITY(((false) && true), true && (_GLF_IDENTITY(((false) && true), ! (! (((false) && true)))))))))))))))), true && (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY((false) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), false))), ! (! ((false) && true))))), true && (! ((_GLF_IDENTITY(_GLF_IDENTITY((false) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), false))), ! (! ((false) && true)))))))))) && true)))))) && _GLF_IDENTITY(true, bool(bool(true)))), _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))) && true, bool(bvec3(_GLF_IDENTITY((false) && true, ((false) && true) && true), _GLF_IDENTITY(false, ! (! (false))), false))), ! (! ((false) && true))))))), true && ((_GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false))), ! (! ((false) && true))))))))), bool(bvec4(false || (_GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false)), ! (! (bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true))), false)))))), ! (! ((false) && true))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false) && true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false))), ! _GLF_IDENTITY((! ((false) && true)), false || ((! ((false) && true)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY((false) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false))), ! (! (_GLF_IDENTITY((false) && true, ! (! ((false) && true)))))))), (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec2(! (! (false)), true)), ! (! (bool(bvec2(! (! (false)), true))))))), false))), ! (! _GLF_IDENTITY(((false) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(((false) && true), ! (! _GLF_IDENTITY((((false) && true)), bool(bvec4(_GLF_IDENTITY((((false) && true)), ((((false) && true))) || false), false, false, false))))), ! (! (_GLF_IDENTITY(((false) && true), ! (! (((false) && true))))))))))))), true && (! ((_GLF_IDENTITY(_GLF_IDENTITY((false) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), false))), ! (! _GLF_IDENTITY(((false) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(((false) && true), bool(bvec3(((false) && true), true, true))), false, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(((false) && true), bool(bvec3(((false) && true), true, true))), false, true)), false, true))))))))))) && true))))), (_GLF_IDENTITY((false) && true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), true && ((false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true)))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false))), ! _GLF_IDENTITY(_GLF_IDENTITY((! ((false) && true)), bool(bvec4((! ((false) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), false || ((_GLF_IDENTITY(! ((false) && true), bool(bool(! ((false) && true))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false) && true, bool(bvec3(_GLF_IDENTITY((false) && true, true && ((false) && true)), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false))), false))), ! (! ((false) && true))), (_GLF_IDENTITY(_GLF_IDENTITY((false) && true, bool(bvec3((false) && true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false))), false))), ! (! ((false) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))) && true, ((false) && true) && true), _GLF_IDENTITY(false, ! (! (false))), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), _GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), false)))))), ! (! _GLF_IDENTITY(((false) && true), true && (_GLF_IDENTITY(((false) && true), ! (! _GLF_IDENTITY((((false) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((((false) && true)), _GLF_IDENTITY(! (! ((((false) && true)))), ! (_GLF_IDENTITY(! (! (! ((((false) && true))))), bool(bvec2(_GLF_IDENTITY(! (! (! ((((false) && true))))), bool(bool(! _GLF_IDENTITY((! (! ((((false) && true))))), _GLF_IDENTITY(bool(bool((! (! ((((false) && true))))))), bool(bvec2(bool(bool((! (! ((((false) && true))))))), true))))))), true))))))), (! (_GLF_IDENTITY((((false) && true)), ! (! ((((false) && true))))))) || false))))))))))), true && (! ((_GLF_IDENTITY(_GLF_IDENTITY((false) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! _GLF_IDENTITY((! (! (false))), bool(_GLF_IDENTITY(bvec3((! (! (false))), false, false), bvec3(bvec3(bvec3((! (! (false))), false, false))))))))), false))), ! (! (_GLF_IDENTITY((false) && true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || ((false) && true), (_GLF_IDENTITY(false, ! (! (false))) || ((false) && true)) || false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false)))))), ! (! _GLF_IDENTITY(((false) && true), true && (_GLF_IDENTITY(((false) && true), ! (! (((false) && true)))))))))), true && (! ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), false))), ! (! ((false) && true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false)))))), ! (! _GLF_IDENTITY(((false) && true), true && (_GLF_IDENTITY(((_GLF_IDENTITY(false, (false) || false)) && true), ! (! (((false) && true)))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false))))))))))), ! (! _GLF_IDENTITY(_GLF_IDENTITY(((false) && true), bool(bvec3(((false) && true), true, true))), true && (_GLF_IDENTITY(((false) && true), ! (! (((false) && true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, true, true)), ! (! (bool(bvec4((false), true, true, true)))))), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false)))))), ! (! _GLF_IDENTITY(((false) && true), true && (_GLF_IDENTITY(((false) && true), ! (! (((false) && true))))))))) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false))))))))))), ! (! _GLF_IDENTITY(_GLF_IDENTITY(((false) && true), bool(bvec3(((false) && true), true, true))), true && (_GLF_IDENTITY(((false) && true), ! (! (((false) && true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, true, true)), ! (! (bool(bvec4((false), true, true, true)))))), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false)))))), ! (! _GLF_IDENTITY(((false) && true), true && (_GLF_IDENTITY(((false) && true), ! (! (((false) && true))))))))) || false)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false))))))))))), ! (! _GLF_IDENTITY(_GLF_IDENTITY(((false) && true), bool(bvec3(((false) && true), true, true))), true && (_GLF_IDENTITY(((false) && true), ! (! (((false) && true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, true, true)), ! (! (bool(bvec4((false), true, true, true)))))), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false)))))), ! (! _GLF_IDENTITY(((false) && true), true && (_GLF_IDENTITY(((false) && true), ! (! (((false) && true))))))))) || false)))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false)))))), ! (! _GLF_IDENTITY(((false) && true), true && (_GLF_IDENTITY(((false) && true), ! (! (((false) && true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false)))))), ! (! _GLF_IDENTITY(((false) && true), true && (_GLF_IDENTITY(((false) && true), ! (! (((false) && true))))))))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false)))))), ! (! _GLF_IDENTITY(((false) && true), true && (_GLF_IDENTITY(((false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), true && (! (_GLF_IDENTITY(true, true && (true)))))))), ! (! (((false) && true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false)))))), ! (! _GLF_IDENTITY(((false) && true), true && (_GLF_IDENTITY(((false) && true), ! (! (((false) && true))))))))) || false))))), true, true, false))))))), true && (! ((_GLF_IDENTITY(_GLF_IDENTITY((false) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), false))), ! _GLF_IDENTITY((! ((false) && true)), ((! ((false) && true))) || false))))))), false || ((_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), true)))), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false)))))), ! (! _GLF_IDENTITY(((false) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(((false) && true), ! (! (((false) && true)))), (_GLF_IDENTITY(((false) && true), ! (! _GLF_IDENTITY((((false) && true)), ((((false) && true))) || false)))) || false))))))), true && (! ((_GLF_IDENTITY(_GLF_IDENTITY((false) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), false))), ! (! ((false) && true)))))))))), bool(bvec4(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), true && (_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))))) && true, false || (_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true)), bool(bvec3((false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false))), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false)))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((false), false || ((false))) && true), true && (_GLF_IDENTITY(((false) && true), ! (! (((false) && true)))))))))), true && (! ((_GLF_IDENTITY(_GLF_IDENTITY((false) && _GLF_IDENTITY(true, true && (true)), bool(bvec3((false) && true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! _GLF_IDENTITY((! (! (! (false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (! (! (false)))), ((! (! (! (false))))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((! (! (! (false)))), ((! (! (! (false))))) || false), false, true), false))))))), false))), ! (! ((false) && true)))))))), false, false, false)))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true)))), true, true, _GLF_IDENTITY(false, (false) && true)))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false)))))), ! (! _GLF_IDENTITY(((false) && true), true && (_GLF_IDENTITY(((false) && true), ! (! (((false) && true)))))))))), true && (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))))), false))), ! (! ((false) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), false))), ! (! ((false) && true))))))))))), bool(bvec4(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) && true, bool(bvec3((false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), ! (! (bool(bvec4(true, false, true, true)))))), _GLF_IDENTITY(false, ! (! (false))), false)))))), ! (! _GLF_IDENTITY(((false) && true), true && (_GLF_IDENTITY(((false) && true), ! (! (((false) && true)))))))))), true && (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY((false) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), true, false, false))) || false)), ! (! (! (! (false)))))), false))), ! (! ((false) && true))))), (((_GLF_IDENTITY(_GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec3((false) && true, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), true, false, false))) || false)), ! (! (! (! (false)))))), false)), (bool(bvec3((false) && true, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), true, false, false))) || false)), ! (! (! (! (false)))))), false))) && true)), ! (! ((false) && true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, false, _GLF_IDENTITY(false, ! (! (false))))))))))))))) && true)))))) && _GLF_IDENTITY(true, bool(bool(true)))), _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))), ! (! ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))))) && true, bool(bvec3(_GLF_IDENTITY((false) && true, ((false) && true) && true), _GLF_IDENTITY(false, ! (! (false))), false))), ! (! ((false) && true))))))), true && ((_GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))) && true, bool(bvec3((false) && true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false))))), false))), ! (! ((false) && true))))))))), bool(bvec4(_GLF_IDENTITY(false || (_GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))), false)), ! (! (_GLF_IDENTITY(bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false) && true, bool(bool((false) && true))), _GLF_IDENTITY(false, ! (! (false))), false)), (bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))), false))) || false)) || false))))), _GLF_IDENTITY(! (! ((false) && true)), (! (! ((false) && true))) && true)))))), (_GLF_IDENTITY(false || (_GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))), false)), ! (! (_GLF_IDENTITY(bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false) && true, bool(bool((false) && true))), _GLF_IDENTITY(false, ! (! (false))), false)), (bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false))) || false)) || false))))), _GLF_IDENTITY(! (! ((false) && true)), (! (! ((false) && true))) && true)))))), (false || (_GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))), false)), ! (! (_GLF_IDENTITY(bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false) && true, ! (! ((false) && _GLF_IDENTITY(true, (true) || false)))), bool(bool(_GLF_IDENTITY((false) && true, ! (! ((false) && true)))))), _GLF_IDENTITY(false, ! (! (false))), false)), (bool(bvec3((false) && true, _GLF_IDENTITY(false, ! (! (false))), false))) || false)) || false))))), _GLF_IDENTITY(! (! ((false) && true)), (! (! ((false) && true))) && true))))))) || false)) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) || false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ! _GLF_IDENTITY((! (_GLF_IDENTITY((false) && true, bool(bvec3((false) && true, true, true))))), _GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) && true, _GLF_IDENTITY(bool(bvec3((false) && true, true, true)), bool(_GLF_IDENTITY(bvec3(bool(bvec3((false) && true, true, true)), false, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bvec3((false) && true, true, true)), false, true)), bvec3(bvec3(bvec3(bvec3(bool(bvec3((false) && true, true, true)), false, true)))))), bvec3(bvec3(bvec3(bvec3(bvec3(bool(bvec3((false) && true, true, true)), false, true))))))))))))) && true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) && true, bool(bvec3((false) && true, true, true)))))) && true, ! (! (((! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) && true, bool(bvec3((_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true, true, true)))))) && true))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) && true, bool(bvec3((false) && true, true, true)))))) && true, ! (! (((! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) && true, bool(bvec3((_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true, true, true)))))) && true))))), bool(bool((! (_GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) && true, bool(bvec3((false) && true, true, true)))))) && true, ! (! (((! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) && true, bool(bvec3((_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true, true, true)))))) && true))))))))) || false))))) && true), ! (! (_GLF_IDENTITY((false) && true, ! (! _GLF_IDENTITY(((false) && true), false || ((_GLF_IDENTITY((false) && true, ((false) && true) && true))))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)), false)))) && true, ! _GLF_IDENTITY((! ((false) && true)), true && ((! ((false) && true))))))))))) && _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, true, true)))), ! (! (bool(_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, true, true))))))))))), true), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-6.7 * 7472.8381))), float(injectionSwitch.y), bool(true))), true, true), false)))))))))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, true && (false))))), ! (! ((! (! (_GLF_IDENTITY(false, true && (false))))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))), true, true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}
