#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_36 {
 ivec3 _f0;
 ivec3 _f1;
 int _f2;
 mat3x2 _f3;
 ivec2 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_35 {
 ivec2 _f0;
 mat4x3 _f1;
 bvec4 _f2;
 bvec2 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_34 {
 int _f0;
 ivec2 _f1;
 uvec4 _f2;
 mat3x4 _f3;
 ivec4 _f4;
 mat3x4 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_33 {
 mat3x2 _f0;
 bool _f1;
 ivec3 _f2;
 vec4 _f3;
 vec3 _f4;
 bvec2 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_32 {
 mat2x4 _f0;
} ;

struct _GLF_struct_37 {
 _GLF_struct_32 _f0;
 mat3 _f1;
 mat2 _f2;
 _GLF_struct_33 _f3;
 _GLF_struct_34 _f4;
 _GLF_struct_35 _f5;
 _GLF_struct_36 _f6;
} ;

struct _GLF_struct_30 {
 vec4 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_29 {
 mat4x3 _f0;
 mat4x2 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_28 {
 mat4 _f0;
 uvec2 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_27 {
 bvec3 _f0;
 bool _f1;
 vec2 _f2;
 uvec2 _f3;
 mat2x3 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_31 {
 _GLF_struct_27 _f0;
 _GLF_struct_28 _f1;
 mat4x3 _f2;
 bvec2 _f3;
 _GLF_struct_29 _f4;
 vec3 _f5;
 _GLF_struct_30 _f6;
} ;

struct _GLF_struct_25 {
 mat2 _f0;
 mat3x4 _f1;
 ivec3 _f2;
 mat2x4 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_26 {
 _GLF_struct_25 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_38 {
 _GLF_struct_26 _f0;
 uint read;
 _GLF_struct_31 _f1;
 mat3 _f2;
 _GLF_struct_37 _f3;
 mat2 _f4;
 vec3 _f5;
 float _f6;
} ;

struct _GLF_struct_23 {
 vec2 _f0;
} ;

struct _GLF_struct_21 {
 mat4x2 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_20 {
 mat4x3 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_19 {
 vec4 _f0;
 uvec2 _f1;
 mat2 _f2;
 float _f3;
 float _f4;
} ;

struct _GLF_struct_22 {
 mat4x3 _f0;
 mat4 _f1;
 float _f2;
 int _f3;
 _GLF_struct_19 _f4;
 _GLF_struct_20 _f5;
 _GLF_struct_21 _f6;
} ;

struct _GLF_struct_17 {
 mat3x2 _f0;
} ;

struct _GLF_struct_16 {
 bvec3 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_18 {
 _GLF_struct_16 _f0;
 mat3x4 _f1;
 _GLF_struct_17 _f2;
} ;

struct _GLF_struct_24 {
 mat3x2 _f0;
 _GLF_struct_18 _f1;
 mat3 _f2;
 ivec3 _f3;
 bool _f4;
 _GLF_struct_22 _f5;
 _GLF_struct_23 _f6;
 uvec4 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base;
} ;

struct _GLF_struct_15 {
 mat2 _f0;
 mat4 _f1;
 uint workgroup_base;
} ;

struct _GLF_struct_14 {
 uint subgroup_id;
 mat2 _f0;
} ;

struct _GLF_struct_12 {
 uint _f0;
 mat4 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_10 {
 bvec4 _f0;
 mat3 _f1;
 mat3x2 _f2;
 bool _f3;
 uvec2 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_9 {
 ivec2 _f0;
 mat3 _f1;
 bool _f2;
} ;

struct _GLF_struct_8 {
 uint _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_7 {
 ivec3 _f0;
 bvec4 _f1;
 int _f2;
 float _f3;
 ivec2 _f4;
 bvec3 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_11 {
 _GLF_struct_7 _f0;
 vec4 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_9 _f3;
 uint workgroup_id;
 _GLF_struct_10 _f4;
} ;

struct _GLF_struct_13 {
 _GLF_struct_11 _f0;
 mat4 _f1;
 _GLF_struct_12 _f2;
} ;

struct _GLF_struct_4 {
 vec3 _f0;
 bvec2 _f1;
 mat4 _f2;
 int _f3;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
} ;

struct _GLF_struct_2 {
 ivec3 _f0;
 mat2x3 _f1;
 uint _f2;
} ;

struct _GLF_struct_1 {
 uvec4 _f0;
 int _f1;
 mat3x2 _f2;
 bool _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_0 {
 vec2 _f0;
 vec2 _f1;
 mat3 _f2;
 ivec2 _f3;
 bool _f4;
 mat3x2 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_3 {
 ivec2 _f0;
 _GLF_struct_0 _f1;
 vec4 _f2;
 _GLF_struct_1 _f3;
 mat3 _f4;
 _GLF_struct_2 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_6 {
 _GLF_struct_3 _f0;
 mat2x3 _f1;
 _GLF_struct_5 _f2;
 uint virtual_gid;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  barrier();
 uvec2 GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_basesubgroup_idworkgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_24 _GLF_struct_replacement_24;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, sqrt(1.0), 1.0, cos(0.0), log(1.0), 1.0, 0.0, 0.0, 0.0))), vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, sqrt(1.0), 1.0, cos(0.0), log(1.0), 1.0, 0.0, 0.0, 0.0))), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, sqrt(1.0), 1.0, cos(0.0), log(1.0), 1.0, 0.0, 0.0, 0.0))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, sqrt(1.0), 1.0, cos(0.0), log(1.0), 1.0, 0.0, 0.0, 0.0))))[1]), vec2(_GLF_FUZZED(3874.9717), _GLF_FUZZED(6.2)), bvec2(false, false))), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, tan(0.0), 1.0, 1.0)))) - sqrt(vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, sqrt(1.0), 1.0, cos(0.0), log(1.0), 1.0, 0.0, 0.0, 0.0)))) - sqrt(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, sqrt(1.0), 1.0, cos(0.0), log(1.0), 1.0, 0.0, 0.0, 0.0)))) - sqrt(vec2(0.0, 0.0))))).x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(gl_SubgroupID, mat2(1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-519.586 * 4.9))), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_basesubgroup_idworkgroup_base.z = _GLF_struct_replacement_14.subgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_replacement_24.GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.x = GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_basesubgroup_idworkgroup_base.z;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (! (true))))), (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))) && true))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, exp(0.0), 1.0), mat2(mat2x3(mat2(injectionSwitch.x, 1.0, exp(0.0), 1.0)))))) > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, 1.0, exp(0.0), 1.0), mat2(mat2x3(mat2(injectionSwitch.x, 1.0, exp(0.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))) / 1.0))))))) > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / 1.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0)), (true ? float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / 1.0), 1.0, 0.0)) : _GLF_FUZZED(-3170.5618)))), float(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0), mat4x3(_GLF_IDENTITY(mat4x3(mat4x3(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), (mat4x3(mat4x3(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))) * mat4(1.0))))), mix(float(_GLF_FUZZED(-4.4)), float(float(_GLF_IDENTITY(mat4x3(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0), mat4x3(_GLF_IDENTITY(mat4x3(mat4x3(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), (mat4x3(mat4x3(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))) * mat4(1.0)))))), bool(true)))), (_GLF_IDENTITY(1.0, 1.0 * (1.0))) * _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), exp(0.0), 1.0), _GLF_IDENTITY(mat2(mat2x3(mat2(injectionSwitch.x, 1.0, exp(0.0), 1.0))), transpose(transpose(mat2(mat2x3(mat2(injectionSwitch.x, 1.0, exp(0.0), 1.0))))))))) > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false))))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false))))), false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((209.417 + 3.1))), vec2(_GLF_FUZZED(2627.0779), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))), false || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) + 0)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) + 0)), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) + 0)), bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) + 0)), false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, 0 | (0))))) + 0)), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) + 0)), bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) + 0)), false))))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) + 0)), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) + 0)), bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) + 0)), false)))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) + 0)))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) + 0)), bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) + 0)), false))))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) + 0)), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) + 0)), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) + 0)), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) + 0)))), false)))))) && true)) && true))))), true && (true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) + 0)), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) + 0)), bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) + 0)), false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), (_GLF_IDENTITY(0, (0) + 0)) * 1)), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) + 0)), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) + 0)), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) + 0)))), false))))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) + 0)), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) + 0)), bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), (_GLF_IDENTITY(0, (0) + 0)) << 0)), false)))))) && true)))))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0))).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7.0, -7171.4225)) : injectionSwitch)))).y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   _GLF_struct_replacement_24.GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.z = subgroup_size;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (false))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x = subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_replacement_24.GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.y = GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), true && (true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), true && (true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-52.68), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-6.7 * -2.2))), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-4.8 + 98.32))), vec2(_GLF_FUZZED(-78.25), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-324.713)), float((injectionSwitch)[1]), bool(true)))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-52.68), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(((injectionSwitch))[0], max(((injectionSwitch))[0], _GLF_IDENTITY(((injectionSwitch))[0], mix(float(((injectionSwitch))[0]), float(_GLF_FUZZED(69.33)), bool(false))))), _GLF_FUZZED(vec2(-55.96, -768.680).t)), vec2(_GLF_FUZZED((-2.7 / -3.4)), ((injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))[0], _GLF_FUZZED((-6.7 * -2.2))), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true)), false || (bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-52.68), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((_GLF_IDENTITY(-6.7 * -2.2, (_GLF_IDENTITY(-6.7 * -2.2, (false ? _GLF_FUZZED(vec3(7.1, 90.93, -31.03).r) : -6.7 * -2.2))) - abs(0.0))))), bvec2(true, false))).x > injectionSwitch.y)), true))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-52.68), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), vec2(mat3x2((injectionSwitch), 0.0, 0.0, 1.0, 0.0))) : _GLF_FUZZED(injectionSwitch)))[0], _GLF_FUZZED((-6.7 * -2.2))), bvec2(true, false))).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-52.68), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-6.7 * -2.2))), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true)), false || (bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-52.68), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((_GLF_IDENTITY(-6.7 * -2.2, (_GLF_IDENTITY(-6.7 * -2.2, (false ? _GLF_FUZZED(vec3(7.1, 90.93, -31.03).r) : -6.7 * -2.2))) - abs(0.0))))), bvec2(true, false))).x > injectionSwitch.y)), true))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-52.68), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-6.7 * -2.2))), bvec2(true, false))).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-52.68), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-6.7 * -2.2))), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true)), false || (bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-52.68), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((_GLF_IDENTITY(-6.7 * -2.2, (_GLF_IDENTITY(-6.7 * -2.2, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec3(7.1, 90.93, -31.03).r) : -6.7 * -2.2, min(false ? _GLF_FUZZED(vec3(7.1, 90.93, -31.03).r) : -6.7 * -2.2, false ? _GLF_FUZZED(vec3(7.1, 90.93, -31.03).r) : -6.7 * -2.2))))) - abs(0.0))))), bvec2(true, false))).x > injectionSwitch.y)), true))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-52.68), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-6.7 * -2.2))), bvec2(true, false))).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-52.68), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-6.7 * -2.2))), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true)), false || (bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-52.68), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((_GLF_IDENTITY(-6.7 * -2.2, (_GLF_IDENTITY(-6.7 * -2.2, (false ? _GLF_FUZZED(vec3(7.1, 90.93, -31.03).r) : -6.7 * -2.2))) - abs(0.0))))), bvec2(true, false))).x > injectionSwitch.y)), true))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false))))), true, false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(false), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_DEAD(false), false))), true, true))), true, true)))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), false), false), false)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), false), false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), false), false), false)), false))), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), false), false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), false), false), false)), false))), true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), false), false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), false), false), false)), false))), true)))))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, exp(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(exp(0.0)))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), (true ? vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(injectionSwitch))))[1])).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, exp(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(exp(0.0)))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), (true ? vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) : _GLF_FUZZED(injectionSwitch))))[1])).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, (injectionSwitch.x) + _GLF_IDENTITY(dot(vec4(tan(0.0), 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(tan(0.0), 0.0, 1.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.5) : 0.0)), 1.0)))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0)), (float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0))) / 1.0))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(76.55)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(_GLF_struct_11(_GLF_struct_7(ivec3(1), bvec4(true), _GLF_IDENTITY(1, max(1, 1)), 1.0, _GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), (ivec2(1)) - ivec2(0, 0))) / ivec2(1, 1)), bvec3(true), mat2x4(1.0)), vec4(1.0), _GLF_struct_8(1u, ivec3(1)), _GLF_struct_9(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(26765)))) + 0)), _GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0)))), _GLF_IDENTITY(true, ! (! (true)))), gl_WorkGroupID.x, _GLF_struct_10(bvec4(true), mat3(1.0), mat3x2(1.0), true, uvec2(1u), mat4x2(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(reflect(-83.18, _GLF_IDENTITY(8231.4040, float(mat3x2(8231.4040, sin(0.0), 1.0, 0.0, 1.0, 0.0)))))))))), mat4(1.0), _GLF_struct_12(1u, mat4(1.0), uvec3(1u)));
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.y = _GLF_struct_replacement_13._f0.workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, false || (false))), ! (! (true && (_GLF_IDENTITY(false, false || (false)))))))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(10.26)), bvec2(true, false))), injectionSwitch)).y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false))))))))
  barrier();
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(mat2(1.0), mat4(1.0), workgroup_size * GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.y);
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_basesubgroup_idworkgroup_base.w = _GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_base, 0u | (_GLF_struct_replacement_15.workgroup_base));
 _GLF_struct_replacement_24.GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.w = GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_basesubgroup_idworkgroup_base.w;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2.9, 5.2)))).y)), true, false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(_GLF_struct_replacement_24.GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.x, max(_GLF_struct_replacement_24.GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.x, _GLF_struct_replacement_24.GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.x)) * _GLF_struct_replacement_24.GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.z;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_basesubgroup_idworkgroup_base.y = subgroup_base;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_3(_GLF_IDENTITY(ivec2(1), ivec2(0, 0) | (_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1)))))), _GLF_struct_0(_GLF_IDENTITY(vec2(1.0), clamp(_GLF_IDENTITY(vec2(1.0), min(vec2(1.0), vec2(1.0))), vec2(1.0), vec2(1.0))), _GLF_IDENTITY(vec2(1.0), mix(vec2(_GLF_IDENTITY((vec2(1.0))[0], min((vec2(1.0))[0], (vec2(1.0))[0])), (vec2(1.0))[1]), vec2(_GLF_FUZZED(-7478.4649), _GLF_FUZZED(float(ivec4(-91274, -5741, -96352, 49558).w))), bvec2(false, false))), mat3(1.0), ivec2(1), true, mat3x2(1.0), _GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(mod(vec3(497.401, 41.76, -70.20), vec3(1.0, 4072.8238, 3847.7822))), vec3(_GLF_IDENTITY(mat3x2(_GLF_FUZZED(mod(vec3(497.401, 41.76, -70.20), vec3(1.0, 4072.8238, 3847.7822))), 0.0, 1.0, 0.0), (mat3x2(_GLF_FUZZED(mod(vec3(497.401, 41.76, -70.20), vec3(1.0, 4072.8238, 3847.7822))), 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * _GLF_IDENTITY(1.0, 0.0 + (1.0)), ((0.0) * _GLF_IDENTITY(1.0, 0.0 + (1.0))) / 1.0)))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))))))) : _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(_GLF_IDENTITY(vec3(1.0), max(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(false))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec2(1.0, sqrt(1.0)))), (false ? _GLF_FUZZED(-7.2) : _GLF_IDENTITY(1.0, float(vec2(1.0, sqrt(1.0))))))), bool(true)))), vec3(1.0))), vec3(1.0))), vec3(vec3(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(_GLF_IDENTITY(vec3(1.0), max(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(false))), float(1.0), bool(true)))), vec3(1.0))), vec3(1.0))), min(_GLF_IDENTITY(vec3(1.0), max(_GLF_IDENTITY(vec3(1.0), max(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(false))), float(1.0), bool(true)))), vec3(1.0))), vec3(1.0))), _GLF_IDENTITY(vec3(1.0), max(_GLF_IDENTITY(vec3(1.0), max(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(float(false)), mix(float(_GLF_FUZZED(3.5)), float(_GLF_IDENTITY(_GLF_FUZZED(float(false)), clamp(_GLF_FUZZED(float(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false, true, false))))), _GLF_FUZZED(float(false)), _GLF_FUZZED(float(false))))), bool(true)))), float(1.0), bool(true)))), vec3(1.0))), vec3(1.0))))))))), (false ? _GLF_FUZZED((vec3(-6.0, -932.516, 8410.9027) / vec3(5124.4324, -50.06, -624.065))) : (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(mod(vec3(497.401, 41.76, -70.20), vec3(1.0, 4072.8238, 3847.7822)), (mod(vec3(497.401, 41.76, -70.20), vec3(1.0, 4072.8238, 3847.7822))) * mat3(1.0))), vec3(_GLF_IDENTITY(mat3x2(_GLF_FUZZED(mod(vec3(497.401, 41.76, -70.20), vec3(1.0, 4072.8238, 3847.7822))), 0.0, 1.0, 0.0), (mat3x2(_GLF_FUZZED(mod(vec3(497.401, 41.76, -70.20), vec3(1.0, 4072.8238, 3847.7822))), 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) + 0.0, min((0.0) + 0.0, _GLF_IDENTITY((0.0) + 0.0, 0.0 + (_GLF_IDENTITY((0.0) + 0.0, min((0.0) + 0.0, (0.0) + 0.0))))))))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) : _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(_GLF_IDENTITY(vec3(1.0), max(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(false))), float(1.0), bool(true)))), (vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(false))), float(1.0), bool(true))))) - abs(vec3(0.0, 0.0, 0.0))), vec3(1.0))), vec3(1.0))), vec3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(_GLF_IDENTITY(vec3(1.0), max(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(-248.207)), (float(_GLF_FUZZED(-248.207))) - 0.0), bool(false))), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (true ? _GLF_IDENTITY(vec2(0.0, 1.0), clamp(vec2(0.0, 1.0), vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), mat2(1.0) * (vec2(0.0, 1.0))))) : _GLF_FUZZED(injectionSwitch)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)))), max(float(mat3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-248.207)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), clamp(_GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), vec2(0.0, 1.0))), vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(mat2(vec2(0.0, 1.0), 1.0, 1.0))))))), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))), 1.0, length(vec3(0.0, 0.0, 0.0)))), float(mat3(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), clamp(_GLF_IDENTITY(float(1.0), (_GLF_IDENTITY(float(1.0), (float(1.0)) / 1.0)) - 0.0), _GLF_IDENTITY(float(1.0), max(float(1.0), _GLF_IDENTITY(float(1.0), (float(1.0)) / 1.0))), _GLF_IDENTITY(float(1.0), clamp(float(1.0), float(1.0), float(1.0))))), float(_GLF_FUZZED(-248.207)), bool(false))), 0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), max(length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0))))))))), mix(float(_GLF_FUZZED(float(_GLF_IDENTITY(false, (false) || false)))), float(1.0), bool(true)))), vec3(1.0))), vec3(1.0))), min(_GLF_IDENTITY(vec3(1.0), max(_GLF_IDENTITY(vec3(1.0), max(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(false))), float(1.0), bool(true)))), vec3(1.0))), vec3(1.0))), _GLF_IDENTITY(vec3(1.0), max(_GLF_IDENTITY(vec3(1.0), max(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(false))), float(1.0), bool(true))), mix(float(_GLF_FUZZED(4.5)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(false))), float(1.0), bool(true))), (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(false))), float(1.0), bool(true)))) / 1.0)), bool(true)))), vec3(1.0))), vec3(1.0)))))), vec3(_GLF_IDENTITY(vec4(vec3(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(_GLF_IDENTITY(vec3(1.0), max(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(-248.207)), (float(_GLF_FUZZED(-248.207))) - 0.0), bool(false))), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (true ? _GLF_IDENTITY(vec2(0.0, 1.0), clamp(vec2(0.0, 1.0), vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), mat2(1.0) * (vec2(0.0, 1.0))))) : _GLF_FUZZED(injectionSwitch)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)))), max(float(mat3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-248.207)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), clamp(_GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), vec2(0.0, 1.0))), vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(mat2(vec2(0.0, 1.0), 1.0, 1.0))))))), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))), 1.0, length(vec3(0.0, 0.0, 0.0)))), float(mat3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-248.207)), bool(false))), 0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, length(vec3(0.0, 0.0, 0.0))))))), mix(float(_GLF_FUZZED(float(_GLF_IDENTITY(false, (false) || false)))), float(1.0), bool(true)))), vec3(1.0))), vec3(1.0))), min(_GLF_IDENTITY(vec3(1.0), max(_GLF_IDENTITY(vec3(1.0), max(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(false))), float(1.0), bool(true)))), vec3(1.0))), vec3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(floor(58.00))))))), _GLF_IDENTITY(vec3(1.0), max(_GLF_IDENTITY(vec3(1.0), max(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(false))), float(1.0), bool(true))), mix(float(_GLF_FUZZED(4.5)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(false))), float(1.0), bool(true))), (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(false))), float(1.0), bool(true)))) / 1.0)), bool(true)))), vec3(1.0))), vec3(1.0)))))), determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), (vec4(vec3(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(_GLF_IDENTITY(vec3(1.0), max(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(-248.207)), (float(_GLF_FUZZED(-248.207))) - 0.0), bool(false))), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (true ? _GLF_IDENTITY(vec2(0.0, 1.0), clamp(vec2(0.0, 1.0), vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), mat2(1.0) * (vec2(0.0, 1.0))))) : _GLF_FUZZED(injectionSwitch)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)))), max(float(mat3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-248.207)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0)), 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), clamp(_GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), vec2(0.0, 1.0))), vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(mat2(vec2(0.0, 1.0), 1.0, 1.0))))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), (_GLF_IDENTITY(float(mat2x3(0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), min(_GLF_IDENTITY(float(mat2x3(0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), (float(mat2x3(0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))) + 0.0), float(mat2x3(0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))))) - 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0)))), float(mat3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-248.207)), bool(false))), 0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, length(vec3(0.0, 0.0, 0.0))))))), mix(float(_GLF_FUZZED(float(_GLF_IDENTITY(false, (false) || false)))), float(1.0), bool(true)))), vec3(1.0))), vec3(1.0))), min(_GLF_IDENTITY(vec3(1.0), max(_GLF_IDENTITY(vec3(1.0), max(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(false))), float(1.0), bool(true)))), vec3(1.0))), vec3(1.0))), _GLF_IDENTITY(vec3(1.0), max(_GLF_IDENTITY(vec3(1.0), max(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(false))), float(1.0), bool(true))), mix(float(_GLF_FUZZED(4.5)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(false))), float(1.0), bool(true))), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(float(false))), float(1.0), bool(true)), min(_GLF_IDENTITY(mix(float(_GLF_FUZZED(float(false))), float(1.0), bool(true)), min(mix(float(_GLF_FUZZED(float(false))), float(1.0), bool(true)), mix(float(_GLF_FUZZED(float(false))), float(1.0), bool(true)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(float(false))), float(1.0), bool(true)), (true ? mix(float(_GLF_FUZZED(float(false))), float(1.0), bool(true)) : _GLF_FUZZED(0.7))))))) / 1.0)), bool(true)))), vec3(1.0))), vec3(1.0)))))), determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))))))))))), vec4(1.0), _GLF_struct_1(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(_GLF_struct_replacement_15.workgroup_base))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(_GLF_struct_replacement_15.workgroup_base))), 0u | (_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) * 1u) : _GLF_FUZZED(_GLF_struct_replacement_15.workgroup_base)))))) | 0u)), 1, mat3x2(1.0), true, bvec2(true)), _GLF_IDENTITY(mat3(1.0), _GLF_IDENTITY(mat3(mat3(mat3(1.0))), (mat3(mat3(mat3(1.0)))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), _GLF_struct_2(ivec3(1), mat2x3(1.0), 1u), bvec3(true)), mat2x3(1.0), _GLF_struct_5(_GLF_struct_4(vec3(1.0), bvec2(true), mat4(1.0), 1)), _GLF_struct_replacement_24.GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.w + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_basesubgroup_idworkgroup_base.y + _GLF_struct_replacement_24.GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.y);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_struct_replacement_24.GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.w + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_basesubgroup_idworkgroup_base.y + ((_GLF_IDENTITY(_GLF_struct_replacement_24.GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base, ~ (~ (_GLF_struct_replacement_24.GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base))).y + 1) % _GLF_struct_replacement_24.GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.z);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_basesubgroup_idworkgroup_base.x = next_virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(4369.3733), _GLF_FUZZED(6.4)), bvec2(false, false))).x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false))))), false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))), bool(bvec3(bool(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))), true, true)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_38 _GLF_struct_replacement_38 = _GLF_struct_38(_GLF_struct_26(_GLF_struct_25(mat2(1.0), mat3x4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(624.612) : _GLF_IDENTITY(1.0, min(1.0, 1.0))))), ivec3(1), mat2x4(1.0), mat4(1.0)), mat3(1.0)), 0, _GLF_struct_31(_GLF_struct_27(bvec3(true), true, vec2(1.0), uvec2(1u), mat2x3(1.0), vec4(1.0)), _GLF_struct_28(mat4(1.0), uvec2(1u), mat3x4(1.0)), mat4x3(1.0), bvec2(true), _GLF_struct_29(mat4x3(1.0), mat4x2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), uvec4(1u), uvec4(1u))), _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | (uvec4(1u))))), uvec4(1u))), (uvec4(1u)) / uvec4(1u, 1u, 1u, 1u)), (true ? _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | (uvec4(1u))) : _GLF_FUZZED(uvec4(31074u, 190138u, 146892u, 171780u))))), vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.5)), float(1.0), bool(true)))), _GLF_struct_30(vec4(1.0), uvec4(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) - 0u)))))), mat3(1.0), _GLF_struct_37(_GLF_struct_32(mat2x4(1.0)), mat3(1.0), mat2(1.0), _GLF_struct_33(mat3x2(1.0), true, ivec3(1), vec4(1.0), vec3(1.0), bvec2(true), mat4(1.0)), _GLF_struct_34(1, ivec2(1), uvec4(_GLF_IDENTITY(1u, (1u) ^ 0u)), mat3x4(1.0), _GLF_IDENTITY(ivec4(1), _GLF_IDENTITY(~ (~ (ivec4(1))), ivec4(0, 0, 0, 0) + (~ (~ (ivec4(1)))))), mat3x4(1.0), vec4(1.0)), _GLF_struct_35(_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY((ivec2(1)) << ivec2(0, 0), ((ivec2(1)) << ivec2(0, 0)) ^ ((ivec2(-33863, -24096) % _GLF_IDENTITY(-16081, (-16081) | 0)) & ivec2(0, 0)))), mat4x3(1.0), bvec4(true), _GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), true))), mat3x4(1.0)), _GLF_struct_36(ivec3(1), ivec3(1), 1, mat3x2(1.0), ivec2(1), uvec2(1u))), mat2(1.0), vec3(1.0), 1.0);
 atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_basesubgroup_idworkgroup_base.x], uint(1), 4, 64, 4);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if((_GLF_struct_replacement_24.GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.y % _GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! _GLF_IDENTITY((! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || ((! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) ? 2 : _GLF_FUZZED(-51770)))) == 0)
    {
     if(_GLF_DEAD(false))
      barrier();
     subgroupAll(false);
     _GLF_struct_replacement_38.read = atomicLoad(buf[_GLF_struct_replacement_6.virtual_gid], 4, 64, 2);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     subgroupAll(false);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     _GLF_IDENTITY(_GLF_struct_replacement_38.read = atomicLoad(_GLF_IDENTITY(buf[_GLF_struct_replacement_6.virtual_gid], 0u ^ (buf[_GLF_struct_replacement_6.virtual_gid])), 4, 64, 2), (_GLF_struct_replacement_38.read = atomicLoad(_GLF_IDENTITY(buf[_GLF_struct_replacement_6.virtual_gid], 0u ^ (buf[_GLF_struct_replacement_6.virtual_gid])), 4, 64, 2)) | 0u);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec2(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))))))), true)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), (true && (_GLF_DEAD(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)), ! (! (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), false, false, true))))))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 0.0, length(0.0), exp(0.0), 0.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, 0.0)))))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-33.11) : injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 atomicStore(checker[_GLF_struct_replacement_6.virtual_gid], _GLF_struct_replacement_38.read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
