#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, bool(bvec2(false, false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
    barrier();
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), false, true)), bool(bvec4(bool(bvec3(bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true, false)), false, true)), false, true, false)))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))) && true, ! (! ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), max(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))), min(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), max(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), max(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))))))) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))) && true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
        return;
       barrier();
      }
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, sin(0.0))), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, sin(0.0))), mix(vec2((vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, sin(0.0))))[0], _GLF_FUZZED(-7.2)), vec2(_GLF_FUZZED(177.318), (vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED((vec4(263.160, 29.33, 3.2, -7631.6802) * mat2x4(-565.253, -4.4, 905.603, -35.75, -1276.2119, -8863.8600, 5.1, 6245.4041))))), 0.0, 0.0, 1.0, sin(0.0))))[1]), bvec2(false, true)))) * vec2(1.0, 1.0))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, int(ivec3(0, 1, 0)))], injectionSwitch[1])).y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true && (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec2(-457.117, 487.698).y)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), false || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))), true, false), false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-8463.4086), max(_GLF_IDENTITY(_GLF_FUZZED(-8463.4086), clamp(_GLF_FUZZED(-8463.4086), _GLF_FUZZED(-8463.4086), _GLF_FUZZED(-8463.4086))), _GLF_FUZZED(-8463.4086)))), bool(false))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), gl_WorkGroupID, gl_WorkGroupID))) - uvec3(0u, 0u, 0u)).x, 0u, 1u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))) / 1u))) / 1u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && true)), false, true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((false), bool(bvec3((false), false, false))), true))))))))), bool(bvec2(! (false), false)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true))))))))), bool(bvec2(! (false), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true))))))))), bool(bvec2(! (false), false))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true))))))))), bool(bvec2(! (false), false)))) || false)))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && true)), false, true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((false), bool(bvec3((false), false, false))), true))))))))), bool(bvec2(! (false), false)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true))))))))), bool(bvec2(! (false), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true))))))))), bool(bvec2(! (false), false))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true))))))))), bool(bvec2(! (false), false)))) || false))))))))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && true)), false, true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((false), bool(bvec3((false), false, false))), true)))), bvec2(bvec4(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((false), bool(bvec3((false), false, false))), true)))), false, true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((false), bool(bvec3((false), false, false))), true)))), bvec2(bvec4(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((false), bool(bvec3((false), false, false))), true)))), false, true))))))))))), bool(bvec2(! (false), false)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true))))))))), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec4(bvec2((false), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec2(bvec2(bvec2((false), true)))))))))) || false)))), bool(bvec2(! (false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true))))))))), bool(bvec2(! (false), false))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true))))))))), bool(bvec2(! (false), false)))) || false)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true))))))))), bool(bvec2(! (false), false))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true))))))))), bool(bvec2(! (false), false)))) || false)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true))))))))), bool(bvec2(! (false), false))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true))))))))), bool(bvec2(! (false), false)))) || false)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true))))))))), bool(bvec2(! (false), false))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true))))))))), bool(bvec2(! (false), false)))) || false)))), false, false)))))))))))))))))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, min(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) | 0u), workgroup_base + subgroup_base + subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec4((false) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || (_GLF_DEAD(false))))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) / 1u) % subgroup_size), max(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) / 1u) % subgroup_size), 0u + ((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) / 1u) % subgroup_size))), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) / 1u) % subgroup_size)));
 uint read = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ 0, ~ (~ ((0) ^ 0))))) - (_GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(4), int(4))), (_GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (true ? 0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, (4) >> 0)))), int(4)) : _GLF_FUZZED(68578)))), max((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | 0)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(4), int(4)) : _GLF_FUZZED(bitfieldReverse((uvec2(111860u, 8565u) , 24669))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(4), int(4)) : _GLF_FUZZED(bitfieldReverse((uvec2(111860u, 8565u) , 24669)))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (0 << _GLF_IDENTITY(int(4), int(4)))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), ~ (~ _GLF_IDENTITY((0 << _GLF_IDENTITY(int(4), int(4))), max((0 << _GLF_IDENTITY(int(4), int(4))), (0 << _GLF_IDENTITY(int(4), int(4))))))), min(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), ~ (~ _GLF_IDENTITY((0 << _GLF_IDENTITY(int(4), int(4))), max((0 << _GLF_IDENTITY(int(4), int(4))), (0 << _GLF_IDENTITY(int(4), int(4))))))), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), ~ (~ _GLF_IDENTITY((0 << _GLF_IDENTITY(int(4), int(4))), max((0 << _GLF_IDENTITY(int(4), int(4))), (0 << _GLF_IDENTITY(int(4), int(4)))))))))))), int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), max(min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x)))))) ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(4)))))), (true ? _GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(ivec3(int(4), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5))))), 1))), int(4))) | (0 << _GLF_IDENTITY(int(4), int(4)))) : _GLF_FUZZED(_GLF_IDENTITY(51513, (51513) >> 0))))), (_GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) ^ 0), 0)) << _GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))), int(_GLF_IDENTITY(4, (4) | 0)))), max(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), min(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), ~ (4)))), 0 ^ (~ (_GLF_IDENTITY(~ (4), min(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), ~ (4)))))))), int(4))), clamp((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), min(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), ~ (4)))), 0 ^ (~ (_GLF_IDENTITY(~ (4), min(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), ~ (4)))))))), int(4))), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), min(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), ~ (4)))), 0 ^ (~ (_GLF_IDENTITY(~ (4), min(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), ~ (4)))))))), int(4))), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), min(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), ~ (4)))), 0 ^ (~ (_GLF_IDENTITY(~ (4), min(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), ~ (4)))))))), int(4))))), (0 << _GLF_IDENTITY(int(4), int(4)))))) | ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | 0), int(4))))))) & -93018));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0))), (false ? _GLF_FUZZED(vec2(8.9, -6.6)) : injectionSwitch))) - vec2(0.0, 0.0)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0), mat4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(float(subgroup_id)) : injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0), _GLF_IDENTITY((true ? mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, cos(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(-7.1, 3.7, 8270.7061, _GLF_IDENTITY(-8.7, float(mat2x4(-8.7, length(_GLF_ZERO(0.0, injectionSwitch.x)), determinant(mat2(0.0, 0.0, tan(0.0), 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0))), -84.45, 3.4, -6486.8557, -67.62, -66.84, -5.6, 37.34, -5.6, -5.6, -4285.7259, -812.190, -3760.4135))), ((true ? mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, cos(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(-7.1, 3.7, 8270.7061, _GLF_IDENTITY(-8.7, float(mat2x4(-8.7, length(_GLF_ZERO(0.0, injectionSwitch.x)), determinant(mat2(0.0, 0.0, tan(0.0), 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0))), -84.45, 3.4, -6486.8557, -67.62, -66.84, -5.6, 37.34, -5.6, -5.6, -4285.7259, -812.190, -3760.4135)))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), (false ? _GLF_FUZZED(vec2(8.9, -6.6)) : injectionSwitch))) - vec2(0.0, 0.0)).y))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), ! (! (bool(bvec4(true, false, true, false)))))) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0))), (false ? _GLF_FUZZED(vec2(8.9, -6.6)) : injectionSwitch))) - vec2(0.0, 0.0)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0), mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0), (true ? mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(-7.1, 3.7, 8270.7061, -8.7, -84.45, 3.4, -6486.8557, -67.62, -66.84, -5.6, 37.34, -5.6, -5.6, -4285.7259, -812.190, -3760.4135)))))), (_GLF_IDENTITY(mat4(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(tan(8.8)))), 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0), mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(mat4(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0), (true ? mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, cos(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), 0.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(-7.1, 3.7, 8270.7061, -8.7, -84.45, 3.4, -6486.8557, -67.62, -66.84, -5.6, 37.34, -5.6, -5.6, -4285.7259, -812.190, -3760.4135))))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(vec2(8.9, _GLF_IDENTITY(-6.6, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(-6.6, float(mat4x3(-6.6, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0))), 1.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y) * (float(vec3(_GLF_IDENTITY(-6.6, float(mat4x3(-6.6, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0))), 1.0, 0.0))))))) : injectionSwitch))) - vec2(0.0, 0.0)).y))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0))), (false ? _GLF_FUZZED(vec2(8.9, -6.6)) : injectionSwitch))) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0))), (false ? _GLF_FUZZED(vec2(8.9, -6.6)) : injectionSwitch))) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0))), (false ? _GLF_FUZZED(vec2(8.9, -6.6)) : injectionSwitch))) - vec2(0.0, 0.0)).y) - 0.0), 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, exp(0.0), 0.0)), min(float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0))), (false ? _GLF_FUZZED(vec2(8.9, -6.6)) : injectionSwitch))) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0))), (false ? _GLF_FUZZED(vec2(8.9, -6.6)) : injectionSwitch))) - vec2(0.0, 0.0)).y) - 0.0), 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, exp(0.0), 0.0)), float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0))), (false ? _GLF_FUZZED(vec2(8.9, -6.6)) : injectionSwitch))) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0))), (false ? _GLF_FUZZED(vec2(8.9, -6.6)) : injectionSwitch))) - vec2(0.0, 0.0)).y) - 0.0), 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, exp(0.0), 0.0))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0), mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0), (true ? mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(-7.1, 3.7, 8270.7061, -8.7, -84.45, 3.4, -6486.8557, -67.62, -66.84, -5.6, 37.34, -5.6, -5.6, -4285.7259, -812.190, -3760.4135)))))))), (false ? _GLF_FUZZED(vec2(8.9, -6.6)) : injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0), mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0), (true ? mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(-7.1, 3.7, 8270.7061, -8.7, -84.45, 3.4, -6486.8557, -67.62, -66.84, -5.6, 37.34, -5.6, -5.6, -4285.7259, -812.190, -3760.4135)))))))), (false ? _GLF_FUZZED(vec2(8.9, -6.6)) : injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0), mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0), (true ? mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(-7.1, 3.7, 8270.7061, -8.7, -84.45, 3.4, -6486.8557, -67.62, -66.84, -5.6, 37.34, -5.6, -5.6, -4285.7259, -812.190, -3760.4135)))))))), (false ? _GLF_FUZZED(vec2(8.9, -6.6)) : injectionSwitch))))) - vec2(0.0, 0.0)).y)))) && true))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).x > injectionSwitch.y, true, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true)))), ! (! _GLF_IDENTITY((bool(bvec2(false, true))), true && (_GLF_IDENTITY((bool(bvec2(false, true))), ((bool(bvec2(false, true)))) && true))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(-7050), (false ? _GLF_FUZZED(-42038) : _GLF_FUZZED(-7050))) : 1))), _GLF_IDENTITY((uint(1)), (true ? (uint(1)) : _GLF_FUZZED(subgroup_local_id))) | (uint(1))), 4, 64, 4);
 if((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, int(int(2))), 2)), ~ (~ _GLF_IDENTITY((2), min((2), (2))))), _GLF_IDENTITY((_GLF_IDENTITY(2, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((2), ~ (~ ((2))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (2)), 0 | ((~ (2)))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (2)), 0 | ((~ (2)))), max(_GLF_IDENTITY((~ (2)), 0 | ((~ (2)))), _GLF_IDENTITY((~ (2)), 0 | ((~ (2))))))) | (_GLF_IDENTITY((~ (2)), 0 | ((~ (2)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (2)), 0 | ((~ (2)))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (2)), 0 | ((~ (2)))), max(_GLF_IDENTITY((~ (2)), 0 | ((~ (2)))), _GLF_IDENTITY((~ (2)), 0 | ((~ (2))))))) | (_GLF_IDENTITY((~ (2)), 0 | ((~ (2)))))), max(_GLF_IDENTITY(_GLF_IDENTITY((~ (2)), 0 | ((~ (2)))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (2)), 0 | ((~ (2)))), max(_GLF_IDENTITY((~ (2)), 0 | ((~ (2)))), _GLF_IDENTITY((~ (2)), 0 | ((~ (2))))))) | (_GLF_IDENTITY((~ (2)), 0 | ((~ (2)))))), _GLF_IDENTITY(_GLF_IDENTITY((~ (2)), 0 | ((~ (2)))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (2)), 0 | ((~ (2)))), max(_GLF_IDENTITY((~ (2)), 0 | ((~ (2)))), _GLF_IDENTITY((~ (2)), 0 | ((~ (2))))))) | (_GLF_IDENTITY((~ (2)), 0 | ((~ (2)))))))))))) * 1))) - 0, min(_GLF_IDENTITY((_GLF_IDENTITY(2, ~ _GLF_IDENTITY((~ (2)), (_GLF_IDENTITY(_GLF_IDENTITY((~ (2)), 0 | ((~ (2)))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (2)), 0 | ((~ (2)))), max(_GLF_IDENTITY(_GLF_IDENTITY((~ (2)), 0 | ((~ (2)))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (2)), 0 | ((~ (2)))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (2)), 0 | ((~ (2)))), 0 ^ (_GLF_IDENTITY((~ (2)), 0 | ((~ (2))))))) << (0 | 0))) | (_GLF_IDENTITY((~ (2)), 0 | ((~ (2)))))), _GLF_IDENTITY((~ (2)), 0 | ((~ (2))))))) | (_GLF_IDENTITY((~ (2)), 0 | ((~ (2))))))) * 1))) - 0, int(int((_GLF_IDENTITY(2, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | 0)) ^ (0 >> _GLF_IDENTITY(int(4), int(4)))))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (2)), 0 | ((~ (2)))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (2)), 0 | ((~ (2)))), max(_GLF_IDENTITY((~ _GLF_IDENTITY((2), 0 + ((2)))), 0 | ((~ (2)))), _GLF_IDENTITY((~ (2)), 0 | ((~ (2))))))) | (_GLF_IDENTITY(_GLF_IDENTITY((~ (2)), 0 | ((~ (2)))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (2)), 0 | ((~ (2)))), (_GLF_IDENTITY((~ (2)), 0 | ((~ (2))))) | 0)) >> (0 >> _GLF_IDENTITY(int(2), int(2))))))) * 1))) - 0))), (_GLF_IDENTITY(2, ~ _GLF_IDENTITY((~ (2)), (_GLF_IDENTITY(_GLF_IDENTITY((~ (2)), 0 | ((~ (2)))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (2)), 0 | ((~ (2)))), max(_GLF_IDENTITY((~ (2)), 0 | ((~ (2)))), _GLF_IDENTITY((~ (2)), 0 | ((~ (2))))))) | (_GLF_IDENTITY((~ (2)), 0 | ((~ (2))))))) * 1))) - 0)))) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false)))))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), bool(bvec3(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), false, true))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, log(1.0), determinant(mat2(1.0, round(length(normalize(1.0))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0)))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   _GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y)) ? _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])), (true ? buf[virtual_gid] : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), max(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(buf[virtual_gid], (true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_size))))), uint(uvec3(~ (~ (_GLF_IDENTITY(buf[virtual_gid], (true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_size))))), 1u, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(buf[virtual_gid], (true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_size))))), uint(uvec3(~ (~ (_GLF_IDENTITY(buf[virtual_gid], (true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_size))))), 1u, 0u))), 0u ^ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(buf[virtual_gid], (true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_size))))), uint(uvec3(~ (~ (_GLF_IDENTITY(buf[virtual_gid], (true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_size))))), 1u, 0u))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(buf[virtual_gid], (true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_size))))), uint(uvec3(~ (~ (_GLF_IDENTITY(buf[virtual_gid], (true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_size))))), 1u, 0u))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(buf[virtual_gid], (true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_size))))), uint(uvec3(~ (~ (_GLF_IDENTITY(buf[virtual_gid], (true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_size))))), 1u, 0u))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(buf[virtual_gid], (true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_size))))), (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(buf[virtual_gid], (true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_size))))), ((~ (_GLF_IDENTITY(buf[virtual_gid], (true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_size)))))) ^ 0u)) >> 0u)))) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(4, min(4, 4)), 64, _GLF_IDENTITY(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, _GLF_IDENTITY(0, ~ (~ (0))) | (2)), 2, _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (2))) >> 0))), (true ? 2 : _GLF_FUZZED(-39810)))), (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))) ? _GLF_IDENTITY(_GLF_FUZZED(read), (_GLF_IDENTITY(_GLF_FUZZED(read), min(_GLF_FUZZED(read), _GLF_FUZZED(read)))) >> 0u) : read = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(mat2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 0.0, 1.0, 1.0)))), 0.0))), clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat2x4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(588.764)), bool(false)))), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(buf[virtual_gid], (true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_size))))), (~ (~ (_GLF_IDENTITY(buf[virtual_gid], (true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_size)))))) | (~ (~ (_GLF_IDENTITY(buf[virtual_gid], (true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_size)))))))) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(4, min(4, 4)), 64, 2), ~ (~ (atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED(4.1), _GLF_FUZZED((false ? -62.11 : -4158.1558))), vec2(_GLF_IDENTITY((vec2(0.0, 1.0))[0], ((vec2(0.0, 1.0))[0]) / 1.0), (vec2(0.0, 1.0))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), float(mat2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-66.04) : 0.0)), 0.0)), 1.0, 1.0)))), 0.0))), clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat2x4(injectionSwitch.x, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, float(float(1.0))))), 0.0, 0.0, 1.0))), float(_GLF_FUZZED(588.764)), bool(false)))), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(buf[virtual_gid], (true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_size))))), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(buf[virtual_gid], (true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_size))))), max(~ (~ (_GLF_IDENTITY(buf[virtual_gid], (true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_size))))), ~ (~ (_GLF_IDENTITY(buf[virtual_gid], (true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_size))))))), ~ (~ (_GLF_IDENTITY(buf[virtual_gid], (true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_size))))), ~ (~ (_GLF_IDENTITY(buf[virtual_gid], (true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_size))))))), (~ (~ (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_size)), uint(_GLF_IDENTITY(uint((true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_size))), (true ? uint((true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_size))) : _GLF_FUZZED(next_virtual_gid))))))))) | (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(buf[virtual_gid], (true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_size))))), (~ (~ (_GLF_IDENTITY(buf[virtual_gid], (true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_size)))))) - 0u)))) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) | (4)))), 4)), 64, 2)))))), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 1u))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 1u))), (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 1u)))) | (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 1u))))))))), uint(1u)), uint(uint(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), uint(uvec3(_GLF_IDENTITY(uint(1u), uint(1u)), 1u, 1u))))))) | (read = atomicLoad(buf[virtual_gid], 4, 64, 2)));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 else
  {
   subgroupAll(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.9), _GLF_FUZZED((- 9.6))), bvec2(false, false))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   _GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u))))) | (buf[virtual_gid])), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), 4, 4)), 64, 2), ~ (_GLF_IDENTITY(~ (read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))) >> 0u)) | _GLF_IDENTITY((buf[virtual_gid]), (true ? (buf[virtual_gid]) : _GLF_FUZZED(workgroup_id)))), 4, 64, 2)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(~ (read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u)) | (buf[virtual_gid])), 4, 64, 2)), ~ (~ (~ (read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u)) | (buf[virtual_gid])), _GLF_IDENTITY(4, (4) - int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))))))))), (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), ~ (~ (uint(4u)))))) + (_GLF_IDENTITY(read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid]))) + 0u), (buf[virtual_gid]) >> _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u))))) | (buf[virtual_gid])), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(int(4)))) * 1)))), ((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(int(4)))) * 1))))) | ((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(int(4)))) * 1)))))) ^ 0), 4, 4)), 64, 2), ~ (_GLF_IDENTITY(~ (read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (0u | 0u) ^ (buf[virtual_gid])), (_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))) >> 0u)), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (0u | 0u) ^ (buf[virtual_gid])), (_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))) >> 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (0u | 0u) ^ (buf[virtual_gid])), (_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))) >> 0u))) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (0u | 0u) ^ (buf[virtual_gid])), (_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))) >> 0u)), max((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (0u | 0u) ^ (buf[virtual_gid])), (_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (0u | 0u) ^ (buf[virtual_gid])), (_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))) >> 0u)))))) | _GLF_IDENTITY((buf[virtual_gid]), (true ? (buf[virtual_gid]) : _GLF_FUZZED(workgroup_id)))), 4, 64, 2)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(~ (read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u)), min((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u)), (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u)))) | (buf[virtual_gid])), 4, 64, 2)), ~ (~ (~ (read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u)) | (buf[virtual_gid])), (_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u)) | (buf[virtual_gid]))) | (_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u)) | (buf[virtual_gid])))), _GLF_IDENTITY(4, (4) - int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))))))))));
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_DEAD(false)))))), false, true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mat2(1.0) * (injectionSwitch)), injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
}
