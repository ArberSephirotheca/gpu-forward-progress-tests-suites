#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(exp2(703.279)) : injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-10.31) : injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-10.31) : injectionSwitch.x)) > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))) / 1u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), true, false))), ! (! (! (bool(bvec3(_GLF_DEAD(false), true, false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8080.4475), _GLF_IDENTITY((injectionSwitch)[1], float(vec3((injectionSwitch)[1], 0.0, 0.0)))), vec2((injectionSwitch)[0], _GLF_FUZZED(88.61)), bvec2(true, false))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 do
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, int(int(4))));
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
   if(_GLF_DEAD(false))
    break;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + abs(0.0)), bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + abs(0.0)))))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.5), _GLF_IDENTITY(_GLF_FUZZED(4.2), (_GLF_FUZZED(4.2)) * 1.0)), bvec2(false, false))), injectionSwitch)).y, (injectionSwitch.y) + _GLF_IDENTITY(abs(0.0), mix(float(abs(0.0)), float(_GLF_FUZZED((26.02 / 8730.3951))), bool(false)))))) || false))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0 ^ (_GLF_IDENTITY(0, clamp(0, 0, 0))))))), min(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0))))), min(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, ~ (~ (0))), 0))))), _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0))))), min(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))), min(~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))), (false ? _GLF_FUZZED(86315) : ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0))))))))), min(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), (~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) ^ 0)), (false ? _GLF_FUZZED(-12961) : (_GLF_IDENTITY(0, (0) ^ 0))))) - 0)) * 1))), _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) / 1), (false ? _GLF_FUZZED(66227) : _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) / 1)))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) / 1)))))))), _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0))))), min(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))), min(~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))), (false ? _GLF_FUZZED(86315) : ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0))))))))), min(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), (~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) ^ 0)), (false ? _GLF_FUZZED(-12961) : (_GLF_IDENTITY(0, (0) ^ 0))))) - 0)) * 1))), _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) / 1), (false ? _GLF_FUZZED(66227) : _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) / 1)))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) / 1)))))))), _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0))))))))))) ^ 0) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0 ^ (_GLF_IDENTITY(0, clamp(0, 0, 0))))))), min(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0))))), min(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, ~ (~ (0))), 0))))), _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0))))), min(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))), min(~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))), (false ? _GLF_FUZZED(86315) : ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0))))))))), min(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), (~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) ^ 0)), (false ? _GLF_FUZZED(-12961) : (_GLF_IDENTITY(0, (0) ^ 0))))) - 0)) * 1))), _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) / 1), (false ? _GLF_FUZZED(66227) : _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) / 1)))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) / 1)))))))), _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0))))), min(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))), min(~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))), (false ? _GLF_FUZZED(86315) : ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0))))))))), min(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), (~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) ^ 0)), (false ? _GLF_FUZZED(-12961) : (_GLF_IDENTITY(0, (0) ^ 0))))) - 0)) * 1))), _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) / 1), (false ? _GLF_FUZZED(66227) : _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) / 1)))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) / 1)))))))), _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0))))))))))) ^ 0) - 0)) ^ 0)) << 0));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(read) : subgroup_size)), max(subgroup_size, subgroup_size)))), _GLF_IDENTITY(false, true && (false)) || (subgroup_local_id + 1 < subgroup_size)))), ! _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-20777) : 1)), 1)) < subgroup_size, false || (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(true, (true) || false) ? ~ _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(~ (subgroup_size), (true ? ~ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) << (0u & 60337u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))), 0u + ((subgroup_size)))) | 0u)) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) : _GLF_FUZZED(workgroup_id)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(true, (true) || false) ? ~ _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(~ (subgroup_size), (true ? ~ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) << (0u & 60337u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))), 0u + ((subgroup_size)))) | 0u)) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) : _GLF_FUZZED(workgroup_id)))) << 0u)) | 0u)), min((_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (true ? ~ (subgroup_size) : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(~ (subgroup_size), (true ? ~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u)) / ((_GLF_IDENTITY(1u, 0u ^ (1u)) << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u)) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u)) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u)) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) << 0u), _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u)) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u)) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), clamp(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u)) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u)) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u)) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))))), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u)) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), _GLF_IDENTITY(uint(3u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) | 0u)) - 0u) : _GLF_FUZZED(workgroup_id)))) << 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (true ? ~ (subgroup_size) : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(~ (subgroup_size), (true ? ~ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u)) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) << _GLF_IDENTITY(0u, 0u | (0u)))), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) : _GLF_FUZZED(workgroup_id)))) << 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (true ? ~ (subgroup_size) : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(~ (subgroup_size), (true ? ~ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u)) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) << _GLF_IDENTITY(0u, 0u | (0u)))), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) : _GLF_FUZZED(workgroup_id)))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (true ? ~ (subgroup_size) : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(~ (subgroup_size), (true ? ~ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u)) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) << _GLF_IDENTITY(0u, 0u | (0u)))), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) : _GLF_FUZZED(workgroup_id)))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (true ? ~ (subgroup_size) : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(~ (subgroup_size), (true ? ~ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u)) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) << _GLF_IDENTITY(0u, 0u | (0u)))), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) : _GLF_FUZZED(workgroup_id)))) << 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (true ? ~ (subgroup_size) : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(~ (subgroup_size), (true ? ~ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u)) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) << _GLF_IDENTITY(0u, 0u | (0u)))), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) : _GLF_FUZZED(workgroup_id)))) << 0u))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (true ? ~ (subgroup_size) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) >> 0u)))), (_GLF_IDENTITY(~ (subgroup_size), (true ? ~ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u), clamp(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u), _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u), _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u), clamp(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u), _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u), _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u), clamp(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u), _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u), _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u), clamp(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u), _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u), _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u), clamp(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u), _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u), _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u), clamp(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u), _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u), _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u)))))))))) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(_GLF_IDENTITY(3u, (3u) / 1u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u)))) : _GLF_FUZZED(workgroup_id)))) << 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (true ? ~ (subgroup_size) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(true, (true) || false) ? ~ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), max(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))))))) | 0u)) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) : _GLF_FUZZED(workgroup_id)))) << 0u, uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(true, (true) || false) ? ~ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), max(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))))))) | 0u)) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) : _GLF_FUZZED(workgroup_id)))) << 0u, 1u, 1u), min(uvec3((_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(true, (true) || false) ? ~ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), max(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))))))) | 0u)) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) : _GLF_FUZZED(workgroup_id)))) << 0u, 1u, 1u), uvec3((_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(true, (true) || false) ? ~ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), max(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))))))) | 0u)) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) : _GLF_FUZZED(workgroup_id)))) << 0u, 1u, 1u)))))))))))))))))), true && ((! (bool(bool(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(true, (true) || false) ? ~ _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(~ (subgroup_size), (true ? ~ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) << (0u & 60337u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)) ^ 0u), 1u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)) ^ 0u), 1u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)) ^ 0u), 1u))) << 0u)) | 0u))), 0u + ((subgroup_size)))) | 0u)) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)), uint(uvec4(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u | ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))) : _GLF_FUZZED(workgroup_id)))) << 0u)), min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (true ? ~ (subgroup_size) : _GLF_FUZZED(workgroup_id))), uint(uint(_GLF_IDENTITY(~ (subgroup_size), (true ? ~ (subgroup_size) : _GLF_FUZZED(workgroup_id)))))), (_GLF_IDENTITY(~ (subgroup_size), (true ? ~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u)) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u)) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u)) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) | 0u)) - 0u, uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u)) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u)) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) | 0u)) - 0u), max(uint((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u)) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u)) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) | 0u)) - 0u), _GLF_IDENTITY(uint((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u)) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u)) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) | 0u)) - 0u), min(uint((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u)) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u)) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) | 0u)) - 0u), uint((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u)) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u)) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) | 0u)) - 0u)))))))) : _GLF_FUZZED(workgroup_id)))) << 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (true ? ~ (subgroup_size) : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(~ (subgroup_size), (true ? ~ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))), (true ? (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) : _GLF_FUZZED(read))) | 0u)) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) << _GLF_IDENTITY(0u, 0u | (0u)))), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) : _GLF_FUZZED(workgroup_id)))) << 0u)), max((_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (true ? ~ (subgroup_size) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) >> 0u)))), (_GLF_IDENTITY(~ (subgroup_size), (true ? ~ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(subgroup_size)))) ^ 0u), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + (_GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 1u)))))) | 0u), clamp(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u), _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u), _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | 0u)))))) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(_GLF_IDENTITY(3u, (3u) / 1u)))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) : _GLF_FUZZED(workgroup_id)))) << 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (true ? ~ (subgroup_size) : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) * 1u), (_GLF_IDENTITY(true, (true) || false) ? ~ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), max(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(0u + ((subgroup_size)), (0u + ((subgroup_size))) | (0u + ((subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), (_GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size)))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))), 0u + ((subgroup_size)))))))) | 0u)) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) : _GLF_FUZZED(workgroup_id)))) << 0u))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))], read, 4, 64, 4);
   subgroupAll(false);
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, false || (true)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4.0)), vec2(_GLF_FUZZED(-77.26), (injectionSwitch)[1]), bvec2(false, true)))) - vec2(0.0, 0.0)).y))))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (0u | 0u) ^ (read)), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) ^ 0), clamp(_GLF_IDENTITY(64, max(64, 64)), _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) - 0), 64)), (_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) - 0), 64))) ^ 0), 64)), 4);
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}
