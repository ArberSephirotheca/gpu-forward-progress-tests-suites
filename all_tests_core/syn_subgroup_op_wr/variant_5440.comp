#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_22 {
 vec3 _f0;
 ivec3 _f1;
 int _f2;
 ivec3 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_21 {
 mat4x2 _f0;
} ;

struct _GLF_struct_20 {
 uvec3 _f0;
 ivec2 _f1;
 float _f2;
 bvec2 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_23 {
 _GLF_struct_20 _f0;
 bvec4 _f1;
 _GLF_struct_21 _f2;
 _GLF_struct_22 _f3;
 mat3x4 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_18 {
 float _f0;
 mat2 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_17 {
 uvec3 _f0;
 uvec2 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_16 {
 bvec4 _f0;
} ;

struct _GLF_struct_15 {
 mat3x2 _f0;
} ;

struct _GLF_struct_19 {
 mat2x4 _f0;
 _GLF_struct_15 _f1;
 uvec4 _f2;
 _GLF_struct_16 _f3;
 _GLF_struct_17 _f4;
 _GLF_struct_18 _f5;
 uint workgroup_size;
} ;

struct _GLF_struct_13 {
 ivec4 _f0;
 mat3x4 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_12 {
 bvec4 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_14 {
 float _f0;
 bvec2 _f1;
 uint _f2;
 _GLF_struct_12 _f3;
 mat3x2 _f4;
 _GLF_struct_13 _f5;
 float _f6;
} ;

struct _GLF_struct_24 {
 _GLF_struct_14 _f0;
 float _f1;
 uvec4 _f2;
 mat3x2 _f3;
 _GLF_struct_19 _f4;
 _GLF_struct_23 _f5;
} ;

struct _GLF_struct_9 {
 uint _f0;
 mat2 _f1;
 vec4 _f2;
 vec4 _f3;
 mat2x4 _f4;
 vec4 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_8 {
 uint _f0;
 mat3x4 _f1;
 uint _f2;
 uvec4 _f3;
 uint _f4;
 mat2x3 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_10 {
 _GLF_struct_8 _f0;
 _GLF_struct_9 _f1;
 float _f2;
 uvec2 _f3;
 uint subgroup_local_id;
} ;

struct _GLF_struct_6 {
 uint _f0;
 mat4 _f1;
 mat3 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_5 {
 ivec3 _f0;
 vec4 _f1;
 bvec3 _f2;
 vec4 _f3;
 int _f4;
} ;

struct _GLF_struct_4 {
 uvec2 _f0;
 ivec4 _f1;
 vec3 _f2;
 bool _f3;
 mat2x4 _f4;
 bool _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_7 {
 mat4x2 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_6 _f3;
 mat2x3 _f4;
 int _f5;
 int _f6;
} ;

struct _GLF_struct_2 {
 bool _f0;
 int _f1;
 uvec4 _f2;
 mat4x3 _f3;
 bvec2 _f4;
 mat2x3 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_1 {
 bvec4 _f0;
 mat4x3 _f1;
 mat4x2 _f2;
 uvec2 _f3;
 mat3x2 _f4;
 float _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
 bvec4 _f1;
 ivec4 _f2;
 mat4x3 _f3;
 vec4 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
} ;

struct _GLF_struct_11 {
 _GLF_struct_3 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_10 _f2;
 uvec2 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, true))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8869.9885)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), bool(true)))))))))) || false)))
  barrier();
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_3(_GLF_struct_0(bvec2(true), bvec4(true), ivec4(1), mat4x3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)) ? _GLF_FUZZED(_GLF_IDENTITY(-8.8, (true ? -8.8 : _GLF_FUZZED(-579.353)))) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-67.63))))) ? _GLF_FUZZED(409.095) : 1.0))), vec4(1.0), vec2(1.0)), _GLF_struct_1(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), ! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))))))), mat4x3(1.0), mat4x2(1.0), uvec2(1u), mat3x2(1.0), 1.0, ivec4(1)), _GLF_struct_2(true, 1, uvec4(1u), mat4x3(1.0), bvec2(true), mat2x3(1.0), ivec4(1))), _GLF_struct_7(mat4x2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0))), _GLF_struct_4(uvec2(1u), ivec4(1), vec3(1.0), true, mat2x4(1.0), true, ivec2(1)), _GLF_struct_5(ivec3(1), vec4(1.0), bvec3(true), vec4(1.0), 1), _GLF_struct_6(1u, mat4(1.0), mat3(1.0), uvec3(1u)), mat2x3(1.0), 1, _GLF_IDENTITY(1, (-62118 & 0) ^ (_GLF_IDENTITY(1, 0 + (1))))), _GLF_struct_10(_GLF_struct_8(1u, mat3x4(1.0), 1u, uvec4(1u), 1u, mat2x3(1.0), vec3(1.0)), _GLF_struct_9(_GLF_IDENTITY(1u, min(1u, 1u)), mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), float(mat3x4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 1.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0)))), vec4(1.0), vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-3.6), mix(float(_GLF_FUZZED(786.270)), float(_GLF_IDENTITY(_GLF_FUZZED(-3.6), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(-3.6) : _GLF_FUZZED(-0.3)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true)))), mat2x4(1.0), vec4(1.0), ivec4(1)), 1.0, uvec2(1u), gl_SubgroupInvocationID), uvec2(1u));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))) || false)))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 _GLF_struct_24 _GLF_struct_replacement_24 = _GLF_struct_24(_GLF_struct_14(1.0, bvec2(true), 1u, _GLF_struct_12(bvec4(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(uvec4(1u), (uvec4(_GLF_IDENTITY(1u, ~ (~ (1u))))) * uvec4(1u, _GLF_IDENTITY(1u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) | (1u)), 1u, 1u))), mat3x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))), max(_GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))), mix(float(_GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))), (true ? (_GLF_IDENTITY(1.0, min(1.0, 1.0))) : _GLF_FUZZED(2.0)))), float(_GLF_FUZZED(-652.618)), bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))), (true ? (_GLF_IDENTITY(1.0, min(1.0, 1.0))) : _GLF_FUZZED(-4169.0292))))) / sqrt(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)) : _GLF_FUZZED(sqrt(-1.6)))), (1.0) / _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0)), 1.0), mix(float(_GLF_FUZZED(8.3)), float(clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_IDENTITY(max(_GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))), mix(float(_GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))), (true ? (_GLF_IDENTITY(1.0, min(1.0, 1.0))) : _GLF_FUZZED(2.0)))), float(_GLF_FUZZED(-652.618)), bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))), (true ? (_GLF_IDENTITY(1.0, min(1.0, 1.0))) : _GLF_FUZZED(-4169.0292)))), _GLF_IDENTITY(float(mat3x4(max(_GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))), mix(float(_GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))), (true ? (_GLF_IDENTITY(1.0, min(1.0, 1.0))) : _GLF_FUZZED(2.0)))), float(_GLF_FUZZED(-652.618)), bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))), (true ? (_GLF_IDENTITY(1.0, min(1.0, 1.0))) : _GLF_FUZZED(-4169.0292)))), 1.0, abs(1.0), 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), length(sqrt(vec2(0.0, 0.0))), tan(0.0), 1.0, 1.0, 0.0)), (false ? _GLF_FUZZED(62.79) : float(mat3x4(max(_GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))), mix(float(_GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))), (true ? (_GLF_IDENTITY(1.0, min(1.0, 1.0))) : _GLF_FUZZED(2.0)))), float(_GLF_FUZZED(-652.618)), bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))), (true ? (_GLF_IDENTITY(1.0, min(1.0, 1.0))) : _GLF_FUZZED(-4169.0292)))), 1.0, abs(1.0), 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), length(sqrt(vec2(0.0, 0.0))), tan(0.0), 1.0, 1.0, 0.0)))))) / sqrt(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)) : _GLF_FUZZED(sqrt(-1.6)))), (1.0) / 1.0), 1.0)), bool(true))))), _GLF_struct_13(ivec4(1), mat3x4(1.0), bvec3(true)), 1.0), 1.0, uvec4(1u), mat3x2(1.0), _GLF_struct_19(mat2x4(1.0), _GLF_struct_15(mat3x2(1.0)), uvec4(1u), _GLF_struct_16(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(true, false, true), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(true, false, true), true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(true, false, true), true)))))))), bvec3(bvec4(bvec3(bvec4(bvec3(true, _GLF_IDENTITY(false, ! (! (false))), true), true)), true)))))), (true) && true))), _GLF_struct_17(uvec3(1u), uvec2(1u), mat3(1.0)), _GLF_struct_18(1.0, mat2(1.0), mat2x4(1.0)), gl_WorkGroupSize.x), _GLF_struct_23(_GLF_struct_20(uvec3(1u), ivec2(1), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec4(bvec3(bvec2(true), false), false))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false))))))))), mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(29.36)), bool(false)), (_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(29.36)), bool(false)), max(mix(float(1.0), float(_GLF_FUZZED(29.36)), bool(false)), mix(float(1.0), float(_GLF_FUZZED(29.36)), bool(false))))) / determinant(mat2(1.0, 0.0, 1.0, 1.0)))))))), bvec4(true), _GLF_struct_21(mat4x2(1.0)), _GLF_struct_22(vec3(1.0), ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, int(ivec3(1, 0, 0))), 1, 0)), clamp(int(ivec3(_GLF_IDENTITY(1, int(ivec3(1, 0, 0))), 1, 0)), int(ivec3(_GLF_IDENTITY(1, int(ivec3(1, 0, 0))), 1, 0)), int(ivec3(_GLF_IDENTITY(1, int(ivec3(1, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) + 0)) | 0)))), 1, 0)))))), 1, ivec3(1), mat2(1.0)), mat3x4(1.0), uvec3(1u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(~ (~ (gl_WorkGroupID.x)), min(~ (~ (gl_WorkGroupID.x)), ~ (~ (gl_WorkGroupID.x))))))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(~ (~ (gl_WorkGroupID.x)), min(~ (~ (gl_WorkGroupID.x)), ~ (~ (gl_WorkGroupID.x))))))), 0u + (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(~ (~ (gl_WorkGroupID.x)), min(~ (~ (gl_WorkGroupID.x)), ~ (~ (gl_WorkGroupID.x))))))))))));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_struct_replacement_24._f4.workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) * subgroup_size), max((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (false ? _GLF_FUZZED(subgroup_size) : workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))) | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))), (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) >> 0u), subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), max(subgroup_id, subgroup_id)))) * subgroup_size)))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) * subgroup_size), max((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (false ? _GLF_FUZZED(subgroup_size) : workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))) | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))), (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) >> 0u), subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), max(subgroup_id, subgroup_id)))) * subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) * subgroup_size), max((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (false ? _GLF_FUZZED(subgroup_size) : workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))) | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))), (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) >> 0u), subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), max(subgroup_id, subgroup_id)))) * subgroup_size)))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) * subgroup_size), max((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (false ? _GLF_FUZZED(subgroup_size) : workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))) | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))), (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) >> 0u), subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), max(subgroup_id, subgroup_id)))) * subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) * subgroup_size), max((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (false ? _GLF_FUZZED(subgroup_size) : workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))) | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))), (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) >> 0u), subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), max(subgroup_id, subgroup_id)))) * subgroup_size))))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) * subgroup_size), max((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (false ? _GLF_FUZZED(subgroup_size) : workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))) | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))), (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) >> 0u), subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), max(subgroup_id, subgroup_id)))) * subgroup_size)))))), 1u, 0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) * subgroup_size), max((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (false ? _GLF_FUZZED(subgroup_size) : workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))) | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))), (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) >> 0u), subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), max(subgroup_id, subgroup_id)))) * subgroup_size)))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) * subgroup_size), max((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (false ? _GLF_FUZZED(subgroup_size) : workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))) | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))), (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) >> 0u), subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), max(subgroup_id, subgroup_id)))) * subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) * subgroup_size), max((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (false ? _GLF_FUZZED(subgroup_size) : workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))) | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))), (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) >> 0u), subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), max(subgroup_id, subgroup_id)))) * subgroup_size)))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) * subgroup_size), max((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (false ? _GLF_FUZZED(subgroup_size) : workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))) | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))), (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) >> 0u), subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), max(subgroup_id, subgroup_id)))) * subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) * subgroup_size), max((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (false ? _GLF_FUZZED(subgroup_size) : workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))) | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))), (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) >> 0u), subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), max(subgroup_id, subgroup_id)))) * subgroup_size))))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) * subgroup_size), max((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (false ? _GLF_FUZZED(subgroup_size) : workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))) | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))), (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) >> 0u), subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), max(subgroup_id, subgroup_id)))) * subgroup_size)))))), 1u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) * subgroup_size), max((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (false ? _GLF_FUZZED(subgroup_size) : workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))) | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))), (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) >> 0u), subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), max(subgroup_id, subgroup_id)))) * subgroup_size)))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) * subgroup_size), max((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (false ? _GLF_FUZZED(subgroup_size) : workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))) | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))), (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) >> 0u), subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), max(subgroup_id, subgroup_id)))) * subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) * subgroup_size), max((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (false ? _GLF_FUZZED(subgroup_size) : workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))) | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))), (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) >> 0u), subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), max(subgroup_id, subgroup_id)))) * subgroup_size)))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) * subgroup_size), max((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (false ? _GLF_FUZZED(subgroup_size) : workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))) | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))), (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) >> 0u), subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), max(subgroup_id, subgroup_id)))) * subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) * subgroup_size), max((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (false ? _GLF_FUZZED(subgroup_size) : workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))) | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))), (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) >> 0u), subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), max(subgroup_id, subgroup_id)))) * subgroup_size))))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) * subgroup_size), max((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (false ? _GLF_FUZZED(subgroup_size) : workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))) | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))), (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) >> 0u), subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), max(subgroup_id, subgroup_id)))) * subgroup_size)))))), 1u, 0u))))))) + _GLF_struct_replacement_11._f2.subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_11._f2.subgroup_local_id + 1, 0u | (_GLF_struct_replacement_11._f2.subgroup_local_id + 1))) % subgroup_size, _GLF_IDENTITY(((_GLF_struct_replacement_11._f2.subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(((_GLF_struct_replacement_11._f2.subgroup_local_id + 1) % subgroup_size), (((_GLF_struct_replacement_11._f2.subgroup_local_id + 1) % subgroup_size)) >> 0u)) ^ 0u) / 1u), ((_GLF_struct_replacement_11._f2.subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) + 0u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) >> 0)))))), min(4, 4)), 4)), _GLF_IDENTITY(64, int(ivec2(64, _GLF_IDENTITY(1, max(1, 1))))), 4);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_struct_replacement_11._f2.subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, ~ (~ (64))), 4);
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), ((~ (4))) << 0)));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       barrier();
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(954.852) : injectionSwitch.x)), injectionSwitch.x)) : _GLF_IDENTITY(_GLF_FUZZED(3.4), float(float(_GLF_FUZZED(3.4)))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6.5) : injectionSwitch.y)))) : _GLF_FUZZED(determinant(mat3(8.6, -200.888, -990.703, -8.3, -8.6, 760.459, 74.31, 72.95, -9.5))))), mix(float(_GLF_FUZZED(float(49774u))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(determinant(mat3(8.6, -200.888, -990.703, -8.3, -8.6, 760.459, 74.31, 72.95, -9.5))))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(determinant(mat3(8.6, -200.888, -990.703, -8.3, -8.6, 760.459, 74.31, 72.95, -9.5))))), 1.0, 1.0, 1.0, 0.0, 1.0), (mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(determinant(mat3(8.6, -200.888, -990.703, -8.3, -8.6, 760.459, 74.31, 72.95, -9.5))))), min(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(determinant(mat3(8.6, -200.888, -990.703, -8.3, -8.6, 760.459, 74.31, 72.95, -9.5))))), _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(determinant(mat3(8.6, -200.888, -990.703, -8.3, -8.6, 760.459, 74.31, 72.95, -9.5))))))), 1.0, 1.0, 1.0, 0.0, 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), bool(true)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))) - _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(7.0), _GLF_FUZZED(7701.7823)), vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), bvec2(true, true)))).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))) - vec2(0.0, 0.0), min((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), (injectionSwitch) * mat2(1.0)), injectionSwitch))) - vec2(0.0, 0.0), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))) - vec2(0.0, 0.0)))).x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(36.38)), float(_GLF_IDENTITY(1.0, (1.0) + 0.0)), bool(true))))), injectionSwitch))) - vec2(0.0, 0.0)).x), (max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch), vec2(_GLF_IDENTITY(mat2x3(clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch), abs(0.0), 0.0, 0.0, determinant(mat2(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0))), (mat2x3(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch), abs(0.0), 0.0, 0.0, determinant(mat2(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0)))) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))) - vec2(0.0, 0.0)).x)) / 1.0))), float(_GLF_IDENTITY(_GLF_FUZZED(93.83), clamp(_GLF_FUZZED(93.83), _GLF_FUZZED(93.83), _GLF_FUZZED(93.83)))), bool(false))) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
