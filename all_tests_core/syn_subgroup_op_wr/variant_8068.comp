#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(5.9))) > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(5.9))) > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(5.9))) > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))), bool(bvec4(! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(5.9))) > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))), true, false, true)))), ! (! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(5.9))) > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))), bool(bvec4(! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(5.9))) > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))), true, false, true))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.5), _GLF_FUZZED(-430.672)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(-713.321), _GLF_FUZZED(-9.8)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true)))).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(1.0))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))), false))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(false, (false) || false))), (! (false || (_GLF_IDENTITY(false, (false) || false)))) && true))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), (false || (injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || false) || false), false || (_GLF_IDENTITY(false, (false) || false)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || false) || false), false || (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true)))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), true, false, false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (false)), false), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(126357u, _GLF_IDENTITY(163072u, (163072u) << 0u), 71161u)) : gl_NumWorkGroups)).x, 0u ^ (gl_NumWorkGroups.x))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(126357u, _GLF_IDENTITY(163072u, (_GLF_IDENTITY(163072u, 0u ^ (_GLF_IDENTITY(163072u, max(163072u, 163072u))))) << 0u), 71161u)) : gl_NumWorkGroups)).x, 0u ^ (gl_NumWorkGroups.x)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-121.975 / -7.3)), _GLF_FUZZED(6379.1393)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(_GLF_IDENTITY(16.84, mix(float(16.84), float(_GLF_FUZZED(3.2)), bool(false))))), float((injectionSwitch)[0]), bool(true))))), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2418.2753, 625.594)) : injectionSwitch)).y)))), bool(bvec4(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, true, false)), ! (! (bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, true, false)))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0))))))) | (_GLF_IDENTITY(1, 0 | (1)))), (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))])), injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-3.6, -80.58)) : injectionSwitch)).x > injectionSwitch.y), false, false, true))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false)))))))), bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))), false, false))))))))))))), true, false)), bool(bvec4(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(vec2(-568.532, -7629.7869)))))).y)), (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(step(injectionSwitch, injectionSwitch)))), mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(vec2(-568.532, -7629.7869)))))).y))) && true)))))), true, false)), false, false, true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(false)) || _GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(_GLF_IDENTITY(bool(false), (bool(false)) || false), true)))) && true))))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), true)))))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, _GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), ! (! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))), false, true), true)))))), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)))))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)))))), false)), false)))))))), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true))))))), ! (! (bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true))))))), ! (! (bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true))))))))))), ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true))))))), ! (! (bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)))))))))))) && true)))))))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)))))), false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)))))), false)))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)))))), false)))), false)))))))))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true))))))), ! (! (bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)))))))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)))))))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true))))))), ! (! (bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)))))))))))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), (bool(false)) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))), false, true), true))))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), bool(_GLF_IDENTITY(bvec2(! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), false), bvec2(bvec4(bvec2(! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), false), false, true)))))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), (_GLF_IDENTITY((bool(false)), bool(bvec4((bool(false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true))))))), ! (! (bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), true && ((bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), (bool(false)) || false)))), false, true), true)))))))))))))))), false, true))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)))))))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true))))))), ! (! (bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)))))))))))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), (bool(false)) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))), false, true), true))))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), bool(_GLF_IDENTITY(bvec2(! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), false), bvec2(bvec4(bvec2(! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), false), false, true)))))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), (_GLF_IDENTITY((bool(false)), bool(bvec4((bool(false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true))))))), ! (! (bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), true && ((bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), (bool(false)) || false)))), false, true), true)))))))))))))))), false, true)))))) || false))), false || ((_GLF_IDENTITY(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)))))), false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)))))), false)))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)))))), false)))), false)))))))))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true))))))), ! (! (bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)))))))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)))))))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true))))))), ! (! (bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)))))))))))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), (bool(false)) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))), false, true), true))))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), bool(_GLF_IDENTITY(bvec2(! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), false), bvec2(bvec4(bvec2(! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), false), false, true)))))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), (_GLF_IDENTITY((bool(false)), bool(bvec4((bool(false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true))))))), ! (! (bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), true && ((bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), (bool(false)) || false)))), false, true), true)))))))))))))))), false, true))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)))))))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true))))))), ! (! (bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)))))))))))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), (bool(false)) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))), false, true), true))))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), bool(_GLF_IDENTITY(bvec2(! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), false), bvec2(bvec4(bvec2(! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), false), false, true)))))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), (_GLF_IDENTITY((bool(false)), bool(bvec4((bool(false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true))))))), ! (! (bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), true && ((bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), (bool(false)) || false)))), false, true), true)))))))))))))))), false, true)))))) || false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), false || (bool(bvec4(false, true, false, false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.2)), float(injectionSwitch.y), bool(true)))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(5591.6151, -6.3)))).y))))))), bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec4(_GLF_DEAD(false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true))), false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4424.4648)), vec2(_GLF_FUZZED(540.603), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-869.651))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))) | 0u) | (subgroup_local_id + 1)), (subgroup_local_id + 1) >> 0u)) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) % subgroup_size)) * 1u), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), max(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | (((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), subgroup_local_id)) + 1) % subgroup_size))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | (((subgroup_local_id + 1) % subgroup_size))))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | (((subgroup_local_id + 1) % subgroup_size)))))) << (1u ^ 1u)), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | (((subgroup_local_id + 1) % subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | (((subgroup_local_id + 1) % subgroup_size))))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | (((subgroup_local_id + 1) % subgroup_size)))))) << 0u))), workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) | (subgroup_local_id + 1))) % subgroup_size)))) | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id)))) | (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u ^ 0u)))) + 1))) % subgroup_size), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))), 0u ^ ((subgroup_local_id + 1))) % subgroup_size), ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))))), 0u | (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))))) % subgroup_size)) - 0u)), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % subgroup_size), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), 0u ^ ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))) | (subgroup_local_id + 1))))) % subgroup_size)) - 0u)), max(~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((workgroup_size / num_workgroup)) : subgroup_local_id)) + 1))) % subgroup_size), ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % subgroup_size, 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), 0u ^ ((subgroup_local_id + 1))) % subgroup_size))), max((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % subgroup_size, 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), 0u ^ ((subgroup_local_id + 1))) % subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % subgroup_size, 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), 0u ^ ((subgroup_local_id + 1))) % subgroup_size))))) | (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % subgroup_size)))) - 0u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ ((subgroup_local_id + 1)), uint(uvec2(0u ^ ((subgroup_local_id + 1)), 0u)))) % subgroup_size), 0u + ((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ ((subgroup_local_id + 1)), uint(uvec2(0u ^ ((subgroup_local_id + 1)), 0u)))) % subgroup_size))), ((_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % subgroup_size)) - 0u)))), ~ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(subgroup_local_id), min(uint(subgroup_local_id), _GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id))))))) + 1), _GLF_IDENTITY(0u ^ ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), 0u + ((subgroup_local_id + 1))) / 1u))), (true ? 0u ^ ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), 0u + ((subgroup_local_id + 1))) / 1u))) : _GLF_FUZZED(subgroup_local_id)))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), ~ (~ (subgroup_size)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ ((subgroup_local_id + 1)), (_GLF_IDENTITY(0u ^ ((subgroup_local_id + 1)), 0u ^ (0u ^ ((subgroup_local_id + 1))))) | (0u ^ ((subgroup_local_id + 1)))), min(0u ^ ((subgroup_local_id + 1)), 0u ^ ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u)))))) % subgroup_size), min((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ ((subgroup_local_id + 1)), min(0u ^ _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))))) + 1)), clamp(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))))) + 1)), ((_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))))) + 1)), ((_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))))) + 1)))), 0u ^ ((subgroup_local_id + 1))))) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ ((subgroup_local_id + 1)), min(0u ^ ((subgroup_local_id + 1)), 0u ^ ((subgroup_local_id + 1))))) % subgroup_size)))) - 0u, _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ ((subgroup_local_id + 1)), min(0u ^ ((subgroup_local_id + 1)), 0u ^ ((subgroup_local_id + 1))))) % subgroup_size), min((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ ((subgroup_local_id + 1)), min(0u ^ ((subgroup_local_id + 1)), 0u ^ ((subgroup_local_id + 1))))) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ ((subgroup_local_id + 1)), min(0u ^ ((subgroup_local_id + 1)), 0u ^ ((subgroup_local_id + 1))))) % subgroup_size)))) - 0u, 1u, (1u ^ uint(_GLF_ONE(1.0, injectionSwitch.y))), 1u)), (_GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ ((subgroup_local_id + 1)), min(0u ^ ((subgroup_local_id + 1)), 0u ^ ((subgroup_local_id + 1))))) % subgroup_size), min((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ ((subgroup_local_id + 1)), min(0u ^ ((subgroup_local_id + 1)), 0u ^ ((subgroup_local_id + 1))))) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ ((subgroup_local_id + 1)), min(0u ^ ((subgroup_local_id + 1)), 0u ^ ((subgroup_local_id + 1))))) % subgroup_size)))) - 0u, 1u, (1u ^ uint(_GLF_ONE(1.0, injectionSwitch.y))), 1u)), _GLF_IDENTITY(0u ^ (uint(uvec4((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ ((subgroup_local_id + 1)), min(0u ^ ((subgroup_local_id + 1)), 0u ^ ((subgroup_local_id + 1))))) % subgroup_size), min((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ ((subgroup_local_id + 1)), min(0u ^ ((subgroup_local_id + 1)), 0u ^ ((subgroup_local_id + 1))))) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ ((subgroup_local_id + 1)), min(0u ^ ((subgroup_local_id + 1)), 0u ^ ((subgroup_local_id + 1))))) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ ((subgroup_local_id + 1)), min(0u ^ ((subgroup_local_id + 1)), 0u ^ ((subgroup_local_id + 1))))) % subgroup_size)) << 0u)))) - 0u, 1u, (1u ^ uint(_GLF_ONE(1.0, injectionSwitch.y))), 1u))), (0u ^ 0u) + (_GLF_IDENTITY(0u ^ (uint(uvec4((_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1), _GLF_IDENTITY(0u ^ ((subgroup_local_id + 1)), min(0u ^ ((subgroup_local_id + 1)), 0u ^ ((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) | (~ (subgroup_local_id))))) + 1))))) % subgroup_size), min((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ ((subgroup_local_id + 1)), min(0u ^ ((subgroup_local_id + 1)), 0u ^ ((subgroup_local_id + 1))))) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ ((subgroup_local_id + 1)), min(_GLF_IDENTITY(0u ^ ((subgroup_local_id + 1)), (0u ^ ((subgroup_local_id + 1))) * 1u), 0u ^ ((subgroup_local_id + 1)))), min(0u ^ ((subgroup_local_id + 1)), 0u ^ ((subgroup_local_id + 1))))) % subgroup_size)))) - 0u, 1u, (1u ^ uint(_GLF_ONE(1.0, injectionSwitch.y))), 1u))), (0u ^ (uint(uvec4((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ ((subgroup_local_id + 1)), min(0u ^ ((subgroup_local_id + 1)), 0u ^ ((subgroup_local_id + 1))))) % subgroup_size), min((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ ((subgroup_local_id + 1)), min(0u ^ ((subgroup_local_id + 1)), 0u ^ ((subgroup_local_id + 1))))) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ ((subgroup_local_id + 1)), min(0u ^ ((subgroup_local_id + 1)), 0u ^ ((subgroup_local_id + 1))))) % subgroup_size)))) - 0u, 1u, (1u ^ uint(_GLF_ONE(1.0, injectionSwitch.y))), 1u)))) | (0u ^ (uint(uvec4((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ ((subgroup_local_id + 1)), min(0u ^ ((subgroup_local_id + 1)), 0u ^ ((subgroup_local_id + 1))))) % subgroup_size), min((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ ((subgroup_local_id + 1)), min(0u ^ ((subgroup_local_id + 1)), 0u ^ ((subgroup_local_id + 1))))) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ ((subgroup_local_id + 1)), min(0u ^ ((subgroup_local_id + 1)), 0u ^ ((subgroup_local_id + 1))))) % subgroup_size)))) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 1u))), 0u))) - (0u << _GLF_IDENTITY(uint(7u), uint(7u)))), 1u, (_GLF_IDENTITY(1u ^ uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u | (1u ^ uint(_GLF_ONE(1.0, injectionSwitch.y))))), 1u))))))))) | (uint(uvec4((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ ((subgroup_local_id + 1)), (true ? 0u ^ ((subgroup_local_id + 1)) : _GLF_FUZZED(num_workgroup))), min(0u ^ ((subgroup_local_id + 1)), 0u ^ ((subgroup_local_id + 1))))) % subgroup_size), min((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ ((subgroup_local_id + 1)), min(0u ^ ((subgroup_local_id + 1)), 0u ^ ((subgroup_local_id + 1))))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ ((subgroup_local_id + 1)), min(0u ^ ((subgroup_local_id + 1)), 0u ^ ((subgroup_local_id + 1))))), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ ((subgroup_local_id + 1)), min(0u ^ ((subgroup_local_id + 1)), 0u ^ ((subgroup_local_id + _GLF_IDENTITY(1, (1) | 0))))))))) % subgroup_size)))) - 0u, 1u, (1u ^ uint(_GLF_ONE(1.0, injectionSwitch.y))), 1u))))))), ~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % subgroup_size), ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))), uint(uvec2(_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(workgroup_size)), ((true ? subgroup_size : _GLF_FUZZED(workgroup_size))) | ((true ? subgroup_size : _GLF_FUZZED(workgroup_size))))))) - 0u))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, int(ivec4(1, 0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.8), _GLF_FUZZED(791.757)), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1]), max(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1]), (vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1])) * mat2(1.0)))), bvec2(true, true))).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.8), _GLF_FUZZED(791.757)), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1]), max(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1]), (vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x4(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0)) - 0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))))), (injectionSwitch)[0])), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1])) * mat2(1.0)))), bvec2(true, true))).y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), false, false, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || (false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, min(64, 64)))), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(47.26)), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-103.305)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(54.62)), bool(false))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0), (true ? mat3x4(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(54.62)), bool(false))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat3x4(-9150.4866, 92.32, -4.4, -3043.0598, -31.96, -8079.2972, 28.57, -6.4, 7.9, 4.4, -1.5, 17.92))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), false, false, false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, true)), ! (! (bool(bvec4(_GLF_DEAD(false), true, true, true))))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3664.2040)), bool(false))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, tan(0.0), _GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, sin(0.0), 0.0)))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
