#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bool(_GLF_IDENTITY(true && (false), true && (true && (false))))))), ! (! (_GLF_IDENTITY(false, true && (false)))))), true && _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))), false || ((! (_GLF_IDENTITY(false, true && (false))))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bool(_GLF_IDENTITY(true && (false), true && (true && (false))))))), ! (! (_GLF_IDENTITY(false, true && (false)))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bool(_GLF_IDENTITY(true && (false), true && (true && (false))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && true))))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bool(_GLF_IDENTITY(true && (false), true && (true && (false))))))), ! (! (_GLF_IDENTITY(false, true && (false)))))))) || false))), true && _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))), false || _GLF_IDENTITY(((! (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(((! (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(((! (_GLF_IDENTITY(false, true && (false))))), bool(bool(((! (_GLF_IDENTITY(false, true && (false))))))))) && true)) && true)))))) || false), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))), true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))), true)), true)))), false || (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))))), false || (bool(bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))))))))), true && (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || _GLF_IDENTITY(((false)), ! (! (((false)))))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), false || ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))))), false || (bool(bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))))))))), true && (! (_GLF_IDENTITY(false, true && (false)))))))), true && ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || _GLF_IDENTITY(((false)), ! (! (((false)))))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))))), false || (bool(bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))))))))), true && (! (_GLF_IDENTITY(false, true && (false)))))))))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && (false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))))), (bool(bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))))))) || false), ! (! (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))))), (bool(bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))))))) || false))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), bool(bool(_GLF_IDENTITY(false || ((false)), bool(bvec3(_GLF_IDENTITY(false || ((false)), bool(bool(false || ((false))))), false, false))))))), _GLF_IDENTITY(bool(bvec4(true && _GLF_IDENTITY((false), false || ((false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), bool(bvec2(bool(bvec4(true && _GLF_IDENTITY((false), false || ((false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), false)))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true))) && _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false))))))))))))))), false || _GLF_IDENTITY((bool(bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((false))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((false)))) || false)))))), ((bool(bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(false || ((false)), ! (_GLF_IDENTITY(! (false || ((false))), _GLF_IDENTITY(bool(bvec4(! (false || ((false))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4(! (false || ((false))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))) || false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)))))))), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), false || (! (injectionSwitch.x < injectionSwitch.y))))))), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))), _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, true)))), ! (! ((_GLF_IDENTITY(true, bool(bvec2(true, true))))))))) && (_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), ! (! (_GLF_IDENTITY((false), false || ((false)))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))), true && (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))))))) && true)))))), false || (bool(bool((_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && _GLF_IDENTITY((false), false || ((false)))))))))), _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, true && (true)), true, true))) && (! (_GLF_IDENTITY(false, true && (false)))))))), bool(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, _GLF_IDENTITY(((true) || false) || false, (_GLF_IDENTITY(((true) || false) || false, ! (! (((true) || false) || false)))) && true))) && _GLF_IDENTITY((false), false || ((false))))))), false || (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && _GLF_IDENTITY((false), false || ((false))), (true && _GLF_IDENTITY((false), false || ((false)))) && true), (true && _GLF_IDENTITY((false), false || ((false)))) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((false), false || ((false)))))), (bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))))) || false)), true && (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! (! (_GLF_IDENTITY(false || ((false)), bool(bool(false || ((false)))))))))))), _GLF_IDENTITY((bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))))) || false, true && ((bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))))) || false))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))))), (bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))))) || false)), true && (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))))), (bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), false || ((false))))))) || false))))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))))), (bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))))) || false)), true && (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), false || (_GLF_IDENTITY((false), false || ((false)))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))), true && ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))))))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))), true && ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))))))), false || (bool(! (_GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))), true && ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))))))))))))))) || false, false || (_GLF_IDENTITY((bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))))) || false, ((bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))))) || false) || false)))))))), true)))) || false)))))), true && (! (_GLF_IDENTITY(false, true && (false)))))))), false))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))))), false || (bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))))))), false || (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))), ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))))) || false)))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))))))), ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))))), false || (bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))))))), false || (bool(bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))))) || false))), bool(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || _GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), (((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))))), false || (bool(bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))))))))), true && (! (_GLF_IDENTITY(false, true && (false)))))))), false)))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) && (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))))), false || (_GLF_IDENTITY(bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))))), bool(bvec4(bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))))), false, true, false)))))), false || (bool(bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) || false)), true && (false))))))))), ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), false || ((false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))))), false || (bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))))))), true)), (bool(bvec2(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))))), false || (bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))))))), true))) && true)), false || (bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))))))), false || (bool(bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(false || _GLF_IDENTITY(((_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(((_GLF_IDENTITY(false, ! (! (false))))), ! (! (((_GLF_IDENTITY(false, ! (! (false))))))))) || false), bool(bvec4(false || ((_GLF_IDENTITY(false, ! (! (false))))), false, false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))))) || false))), bool(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || _GLF_IDENTITY(((false)), ((_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, false)))))) || false)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))))), false || (bool(bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))))))))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false))))))))))), false)))))))))))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! _GLF_IDENTITY((! (false || (false))), false || ((! (false || (false))))))), (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, (0u & _GLF_IDENTITY(127896u, ~ (~ _GLF_IDENTITY((127896u), (false ? _GLF_FUZZED(subgroup_size) : (127896u)))))))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, (_GLF_IDENTITY(0u, 0u | (0u)) & 127896u)), (true ? uvec4(gl_NumWorkGroups, (_GLF_IDENTITY(0u, 0u | (0u)) & _GLF_IDENTITY(127896u, uint(uint(127896u))))) : _GLF_FUZZED(uvec4(177944u, 52606u, 77685u, _GLF_IDENTITY(26081u, (false ? _GLF_FUZZED(subgroup_local_id) : 26081u)))))), (true ? uvec4(gl_NumWorkGroups, (_GLF_IDENTITY(0u, 0u | (0u)) & 127896u)) : _GLF_FUZZED(uvec4(143632u, 185807u, 180186u, 24985u)))))) - uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, (0u & _GLF_IDENTITY(127896u, ~ (~ _GLF_IDENTITY((127896u), (false ? _GLF_FUZZED(subgroup_size) : (127896u)))))))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, (_GLF_IDENTITY(0u, 0u | (0u)) & 127896u)), (true ? uvec4(gl_NumWorkGroups, (_GLF_IDENTITY(0u, 0u | (0u)) & _GLF_IDENTITY(127896u, uint(uint(127896u))))) : _GLF_FUZZED(uvec4(177944u, 52606u, 77685u, _GLF_IDENTITY(26081u, (false ? _GLF_FUZZED(subgroup_local_id) : 26081u)))))), (true ? uvec4(gl_NumWorkGroups, (_GLF_IDENTITY(0u, 0u | (0u)) & 127896u)) : _GLF_FUZZED(uvec4(143632u, 185807u, 180186u, 24985u)))))) - uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, (0u & _GLF_IDENTITY(127896u, ~ (~ _GLF_IDENTITY((127896u), (false ? _GLF_FUZZED(subgroup_size) : (127896u)))))))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, (_GLF_IDENTITY(0u, 0u | (0u)) & 127896u)), (true ? uvec4(gl_NumWorkGroups, (_GLF_IDENTITY(0u, 0u | (0u)) & _GLF_IDENTITY(127896u, uint(uint(127896u))))) : _GLF_FUZZED(uvec4(177944u, 52606u, 77685u, _GLF_IDENTITY(26081u, (false ? _GLF_FUZZED(subgroup_local_id) : 26081u)))))), (true ? uvec4(gl_NumWorkGroups, (_GLF_IDENTITY(0u, 0u | (0u)) & 127896u)) : _GLF_FUZZED(uvec4(143632u, 185807u, 180186u, 24985u)))))) - uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, (0u & _GLF_IDENTITY(127896u, ~ (~ _GLF_IDENTITY((127896u), (false ? _GLF_FUZZED(subgroup_size) : (127896u)))))))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, (_GLF_IDENTITY(0u, 0u | (0u)) & 127896u)), (true ? uvec4(gl_NumWorkGroups, (_GLF_IDENTITY(0u, 0u | (0u)) & _GLF_IDENTITY(127896u, uint(uint(127896u))))) : _GLF_FUZZED(uvec4(177944u, 52606u, 77685u, _GLF_IDENTITY(26081u, (false ? _GLF_FUZZED(subgroup_local_id) : 26081u)))))), (true ? uvec4(gl_NumWorkGroups, (_GLF_IDENTITY(0u, 0u | (0u)) & 127896u)) : _GLF_FUZZED(uvec4(143632u, 185807u, 180186u, 24985u)))))) - uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u)))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), false)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bool((false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(_GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false)))))))), true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 1.0)), mix(float(float(mat2x4(injectionSwitch.x, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 1.0))), float(_GLF_FUZZED(2606.7740)), bool(false)))))) > injectionSwitch.y)) && true))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 1.0)), mix(float(float(mat2x4(injectionSwitch.x, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 1.0))), float(_GLF_FUZZED(2606.7740)), bool(false)))))) > injectionSwitch.y)) && true))), false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 1.0)), mix(float(float(mat2x4(injectionSwitch.x, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 1.0))), float(_GLF_FUZZED(2606.7740)), bool(false)))))) > injectionSwitch.y)) && true))), false, false, false))), false || (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 1.0)), mix(float(float(mat2x4(injectionSwitch.x, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 1.0))), float(_GLF_FUZZED(2606.7740)), bool(false)))))) > injectionSwitch.y)) && true))), false, false, false)))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-36.55, -387.573)) : injectionSwitch), ((false ? _GLF_FUZZED(vec2(-36.55, -387.573)) : injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))))).y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7040.7346)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, clamp(workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, 0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, min(2u, 2u))) << 0u)), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))) + subgroup_local_id))))), workgroup_base + subgroup_base + subgroup_local_id)), 1u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), 0u | (~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, max(_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_base))), workgroup_base + subgroup_base))))))) + subgroup_local_id, _GLF_IDENTITY(1u, (1u) * (0u ^ ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))), clamp(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(workgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), (uint(uvec3(workgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))) | _GLF_IDENTITY((uint(uvec3(workgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))), 0u ^ (_GLF_IDENTITY((uint(uvec3(workgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))), min(_GLF_IDENTITY((uint(uvec3(workgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))), ((uint(uvec3(workgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)))) / 1u), (uint(uvec3(workgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))))))) + subgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), 0u | (~ (~ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, uint(uint(0u))), 0u, 0u))))))) + subgroup_local_id, _GLF_IDENTITY(1u, (1u) * _GLF_IDENTITY((0u ^ ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 1u * (_GLF_IDENTITY(uint(3u), ~ (_GLF_IDENTITY(~ (uint(3u)), clamp(~ (uint(3u)), ~ (uint(3u)), ~ (uint(3u)))))))), uint(3u)))), ((0u ^ ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) | 0u)))), uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), 0u | (~ (~ (workgroup_base + subgroup_base))))) + subgroup_local_id, _GLF_IDENTITY(1u, (1u) * (0u ^ ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))), uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), 0u | (~ (~ (workgroup_base + subgroup_base))))) + subgroup_local_id, _GLF_IDENTITY(1u, (1u) * (0u ^ ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) | (_GLF_IDENTITY(uint(3u), uint(3u))))))))))), clamp(uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), 0u | (~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u)))))) + subgroup_local_id, _GLF_IDENTITY(1u, (1u) * (0u ^ ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))), uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), 0u | (~ (~ _GLF_IDENTITY((workgroup_base + subgroup_base), 0u | (_GLF_IDENTITY((workgroup_base + subgroup_base), (false ? _GLF_FUZZED(subgroup_size) : (workgroup_base + subgroup_base))))))))) + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ ((0u | 0u) | (0u | 0u))), (1u) * (0u ^ ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))), uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), 0u | (~ (~ (workgroup_base + subgroup_base))))) + subgroup_local_id, _GLF_IDENTITY(1u, (1u) * (0u ^ ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))), uint(uvec2(workgroup_base + subgroup_base + subgroup_local_id, 1u)), uint(uvec2(workgroup_base + subgroup_base + subgroup_local_id, 1u))), clamp(clamp(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, workgroup_base + subgroup_base)))), 0u | (~ (~ (workgroup_base + subgroup_base))))) + subgroup_local_id, _GLF_IDENTITY(1u, (1u) * (0u ^ ((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(3u)), (1u << _GLF_IDENTITY(uint(3u), uint(3u))) - (_GLF_IDENTITY(0u, ~ (~ (0u))) << _GLF_IDENTITY(uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))), clamp(uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), 0u | (~ (~ (workgroup_base + subgroup_base))))) + subgroup_local_id, _GLF_IDENTITY(1u, (1u) * (0u ^ ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)), workgroup_base + subgroup_base)), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), ~ (~ ((~ (workgroup_base + subgroup_base))))), 0u | (~ (~ (workgroup_base + subgroup_base))))) + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (1u) * (0u ^ ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), 0u | (~ (~ (workgroup_base + subgroup_base)))), 0u ^ (_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), 0u | (~ (~ (workgroup_base + subgroup_base))))))) + subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), 0u | (~ (workgroup_base))))) + subgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), _GLF_IDENTITY(0u | (~ (~ (workgroup_base + subgroup_base))), clamp(0u | (~ (~ (workgroup_base + subgroup_base))), 0u | (~ (~ (workgroup_base + subgroup_base))), _GLF_IDENTITY(0u | (~ (~ (workgroup_base + subgroup_base))), (false ? _GLF_FUZZED(subgroup_size) : 0u | (~ (~ (workgroup_base + subgroup_base))))))))) + subgroup_local_id, clamp(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), (_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), (~ (~ (workgroup_base + subgroup_base))) + 0u)) | 0u), 0u | (~ (~ (workgroup_base + subgroup_base))))) + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), 0u | (~ (~ (workgroup_base + subgroup_base))))) + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), 0u | (~ (~ (workgroup_base + subgroup_base))))) + subgroup_local_id)), (true ? _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), (false ? _GLF_FUZZED(workgroup_id) : ~ (workgroup_base + subgroup_base)))), 0u | (~ (~ (workgroup_base + subgroup_base))))) + subgroup_local_id : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), 0u | (~ (~ (workgroup_base + subgroup_base)))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), 0u | (_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), (~ (~ (workgroup_base + subgroup_base))) ^ 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), 0u | (~ (~ (workgroup_base + subgroup_base)))), (_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), 0u | (~ (~ (workgroup_base + subgroup_base))))) * 1u), _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), 0u | (~ (~ (workgroup_base + subgroup_base)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))) + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), 0u | (~ (~ (workgroup_base + subgroup_base))))) + subgroup_local_id)), _GLF_IDENTITY(1u, (1u) * (0u ^ ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))), uint(uvec2(workgroup_base + subgroup_base + subgroup_local_id, 1u)), uint(uvec2(workgroup_base + subgroup_base + subgroup_local_id, 1u))), clamp(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), 0u | (~ (~ (workgroup_base + subgroup_base))))) + subgroup_local_id, _GLF_IDENTITY(1u, (1u) * (0u ^ ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))), clamp(uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), 0u | (~ (~ (workgroup_base + subgroup_base)))), 0u | (_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), 0u | (~ (~ (workgroup_base + subgroup_base))))))) + subgroup_local_id, _GLF_IDENTITY(1u, (1u) * (0u ^ ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))), uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), 0u | (~ (~ (workgroup_base + subgroup_base))))) + subgroup_local_id, _GLF_IDENTITY(1u, (1u) * (0u ^ ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))), uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), 0u | (~ (~ (workgroup_base + subgroup_base))))) + subgroup_local_id, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) * (0u ^ ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))), uint(uvec2(workgroup_base + subgroup_base + subgroup_local_id, 1u)), uint(uvec2(workgroup_base + subgroup_base + subgroup_local_id, 1u))), clamp(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)) - 0u) + subgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), 0u | (~ (~ (workgroup_base + subgroup_base))))) + subgroup_local_id, _GLF_IDENTITY(1u, (1u) * (0u ^ ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))), clamp(uint(uvec2(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), 0u | (~ (~ (workgroup_base + subgroup_base))))) + subgroup_local_id, _GLF_IDENTITY(1u, (1u) * (0u ^ ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))), uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), 0u | (~ (~ (workgroup_base + subgroup_base))))) + subgroup_local_id, _GLF_IDENTITY(1u, (1u) * (0u ^ ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))), uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), 0u | (~ (~ _GLF_IDENTITY((workgroup_base + subgroup_base), ~ (~ ((workgroup_base + subgroup_base)))))))) + subgroup_local_id, _GLF_IDENTITY(1u, (1u) * (0u ^ ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))), uint(uvec2(workgroup_base + subgroup_base + subgroup_local_id, 1u)), uint(uvec2(workgroup_base + subgroup_base + subgroup_local_id, 1u)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u | (((subgroup_local_id + 1) % subgroup_size)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = 0;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, false, true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))), bool(bool(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, false, true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))))))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))) || false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))), bool(bvec3(false, false, true)))), false))), true), false, true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)), ! (! (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))) && true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0))))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, int(ivec3(1, 1, 1)))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))) && true)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 0.0, 1.0, sin(sqrt(0.0)), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0))), (true ? mat2x4(injectionSwitch.x, 0.0, 1.0, sin(sqrt(0.0)), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.8)), float(1.0), bool(true))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0))) : _GLF_FUZZED(mat2x4(-5.1, -6.9, -0.1, 63.05, -3461.8298, 8982.2958, 212.050, _GLF_IDENTITY(9904.8874, clamp(9904.8874, 9904.8874, 9904.8874)))))))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false))))))) || false), false || ((injectionSwitch.x > injectionSwitch.y)))) || false))))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), sin(sqrt(0.0)), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0))), (true ? mat2x4(injectionSwitch.x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, sin(_GLF_IDENTITY(sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY((0.0) / cos(0.0), (false ? _GLF_FUZZED(198.415) : (0.0) / cos(0.0))))), (_GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, (0.0) / cos(0.0))), 1.0 * (sqrt(_GLF_IDENTITY(0.0, (0.0) / cos(_GLF_IDENTITY(0.0, (0.0) / 1.0))))))) * abs(_GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.8)), float(1.0), bool(true))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.7))), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0))) : _GLF_FUZZED(mat2x4(-5.1, -6.9, -0.1, 63.05, -3461.8298, 8982.2958, 212.050, 9904.8874)))))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), bool(bvec4(bool(bool(_GLF_IDENTITY(false, (false) && true))), true, true, true)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), sin(sqrt(0.0)), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0))), (true ? mat2x4(injectionSwitch.x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, sin(_GLF_IDENTITY(sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY((0.0) / cos(0.0), (false ? _GLF_FUZZED(198.415) : (0.0) / cos(0.0))))), (_GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, (0.0) / cos(0.0))), 1.0 * (sqrt(_GLF_IDENTITY(0.0, (0.0) / cos(_GLF_IDENTITY(0.0, (0.0) / 1.0))))))) * abs(_GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.8)), float(1.0), bool(true))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.7))), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0))) : _GLF_FUZZED(mat2x4(-5.1, -6.9, -0.1, 63.05, -3461.8298, 8982.2958, 212.050, 9904.8874)))))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), bool(bvec4(bool(bool(_GLF_IDENTITY(false, (false) && true))), true, true, true)))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), sin(sqrt(0.0)), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0))), (true ? mat2x4(injectionSwitch.x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, sin(_GLF_IDENTITY(sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY((0.0) / cos(0.0), (false ? _GLF_FUZZED(198.415) : (0.0) / cos(0.0))))), (_GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, (0.0) / cos(0.0))), 1.0 * (sqrt(_GLF_IDENTITY(0.0, (0.0) / cos(_GLF_IDENTITY(0.0, (0.0) / 1.0))))))) * abs(_GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.8)), float(1.0), bool(true))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.7))), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0))) : _GLF_FUZZED(mat2x4(-5.1, -6.9, -0.1, 63.05, -3461.8298, 8982.2958, 212.050, 9904.8874)))))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), bool(bvec4(bool(bool(_GLF_IDENTITY(false, (false) && true))), true, true, true)))))))))), false), bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), sin(sqrt(0.0)), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0))), (true ? mat2x4(injectionSwitch.x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, sin(_GLF_IDENTITY(sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY((0.0) / cos(0.0), (false ? _GLF_FUZZED(198.415) : (0.0) / cos(0.0))))), (_GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, (0.0) / cos(0.0))), 1.0 * (sqrt(_GLF_IDENTITY(0.0, (0.0) / cos(_GLF_IDENTITY(0.0, (0.0) / 1.0))))))) * abs(_GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.8)), float(1.0), bool(true))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.7))), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0))) : _GLF_FUZZED(mat2x4(-5.1, -6.9, -0.1, 63.05, -3461.8298, 8982.2958, 212.050, 9904.8874)))))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), bool(bvec4(bool(bool(_GLF_IDENTITY(false, (false) && true))), true, true, true)))))))))), false))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), sin(sqrt(0.0)), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0))), (true ? mat2x4(injectionSwitch.x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, sin(_GLF_IDENTITY(sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY((0.0) / cos(0.0), (false ? _GLF_FUZZED(198.415) : (0.0) / cos(0.0))))), (_GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, (0.0) / cos(0.0))), 1.0 * (sqrt(_GLF_IDENTITY(0.0, (0.0) / cos(_GLF_IDENTITY(0.0, (0.0) / 1.0))))))) * abs(_GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.8)), float(1.0), bool(true))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.7))), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0))) : _GLF_FUZZED(mat2x4(-5.1, -6.9, -0.1, 63.05, -3461.8298, 8982.2958, 212.050, 9904.8874)))))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), bool(bvec4(bool(bool(_GLF_IDENTITY(false, (false) && true))), true, true, true)))))))))), false), bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), sin(sqrt(0.0)), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0))), (true ? mat2x4(injectionSwitch.x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, sin(_GLF_IDENTITY(sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY((0.0) / cos(0.0), (false ? _GLF_FUZZED(198.415) : (0.0) / cos(0.0))))), (_GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, (0.0) / cos(0.0))), 1.0 * (sqrt(_GLF_IDENTITY(0.0, (0.0) / cos(_GLF_IDENTITY(0.0, (0.0) / 1.0))))))) * abs(_GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.8)), float(1.0), bool(true))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.7))), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0))) : _GLF_FUZZED(mat2x4(-5.1, -6.9, -0.1, 63.05, -3461.8298, 8982.2958, 212.050, 9904.8874)))))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), bool(bvec4(bool(bool(_GLF_IDENTITY(false, (false) && true))), true, true, true)))))))))), false))))), true, false))))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), vec2(mat2x3(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), _GLF_IDENTITY(1.0, log(1.0) + (_GLF_IDENTITY(1.0, (1.0) * 1.0))), 0.0, abs(1.0), 0.0)))) - vec2(0.0, 0.0))[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(2.2, float(mat4x2(2.2, determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 0.0)))), _GLF_FUZZED(-5.2)), _GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED((-9300.6263 - 1.6)))) > injectionSwitch.y)))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), true), bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), true))))))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), true)))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x)), mix(float(_GLF_FUZZED(float(-90566))), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x))), bool(true))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))), _GLF_IDENTITY((true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), ! (_GLF_IDENTITY(! ((true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))), false || (! ((true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, sqrt(1.0), 1.0)), (vec2(mat2(injectionSwitch, sqrt(1.0), 1.0))) - vec2(0.0, 0.0))), vec2(mat2x4(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, sqrt(1.0), 1.0)), (vec2(mat2(injectionSwitch, sqrt(1.0), 1.0))) - vec2(0.0, 0.0))), 0.0, length(abs(vec3(0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0))), (true ? _GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, sqrt(1.0), 1.0)), (vec2(_GLF_IDENTITY(mat2(injectionSwitch, sqrt(1.0), 1.0), mat2(1.0) * (mat2(injectionSwitch, sqrt(1.0), 1.0))))) - vec2(0.0, 0.0))), vec2(mat2x4(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, sqrt(1.0), 1.0)), (vec2(mat2(injectionSwitch, sqrt(1.0), 1.0))) - vec2(0.0, 0.0))), 0.0, length(abs(vec3(0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0))) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(float(-37608))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, (_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))) - 0.0) + 0.0))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) && true)), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))) && true)), false)), (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) && true)), false))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if((subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) - 0) | _GLF_IDENTITY((2), min((2), _GLF_IDENTITY((2), ((2)) | ((2))))))) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), _GLF_IDENTITY(true, ! (! (true))), true, false)), _GLF_IDENTITY(true && (bool(bvec4(false, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec4((! (true)), false, false, false)))), true, false))), (true && (bool(bvec4(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))), (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))) && true))), _GLF_IDENTITY(true, _GLF_IDENTITY((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || ((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), false)))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), _GLF_IDENTITY(true, ! (! (true))), true, false)), _GLF_IDENTITY(true && (bool(bvec4(false, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec4((! (true)), false, false, false)))), true, false))), (true && (bool(bvec4(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))), (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))) && true))), _GLF_IDENTITY(true, _GLF_IDENTITY((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || ((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), false)))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), _GLF_IDENTITY(true, ! (! (true))), true, false)), _GLF_IDENTITY(true && (bool(bvec4(false, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec4((! (true)), false, false, false)))), true, false))), (true && (bool(bvec4(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))), (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))) && true))), _GLF_IDENTITY(true, _GLF_IDENTITY((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || ((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), false)))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), _GLF_IDENTITY(true, ! (! (true))), true, false)), _GLF_IDENTITY(true && (bool(bvec4(false, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec4((! (true)), false, false, false)))), true, false))), (true && (bool(bvec4(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))), (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))) && true))), _GLF_IDENTITY(true, _GLF_IDENTITY((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || ((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), false)))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4((! (false)), false, false, true)), (_GLF_IDENTITY(bool(bvec4((! (false)), false, false, true)), (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! (false), ! (! (! (false))))), false, false, true)), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bvec4((! (false)), false, false, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4((! (false)), false, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4((! (false)), false, false, true))))), ! (! (! (_GLF_IDENTITY(bool(bvec4((! (false)), false, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4((! (false)), false, false, true))))))))))), (false || (bool(bvec4((! (false)), false, false, true)))) && true))) || false)) && true))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4((! _GLF_IDENTITY((false), ! (! ((false))))), false, false, true)), (_GLF_IDENTITY(bool(bvec4((! (false)), false, false, true)), (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false))))))), false, false, true)), false || (bool(bvec4((! (false)), false, false, true))))) || false)) && true))), true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (false)), false || ((! (false)))), true, true)), (bool(bvec3(_GLF_IDENTITY((! (false)), false || ((! (false)))), true, true))) || false)), false, false, true)), (_GLF_IDENTITY(bool(bvec4((! (false)), false, false, true)), (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! (false), ! (! (! (false))))), false, false, true)), false || (_GLF_IDENTITY(bool(bvec4((! (false)), false, false, true)), ! (! (bool(bvec4((! (false)), false, false, true)))))))) || false)) && true)), ! (! (false || _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (false)), false || ((! (false)))), true, true)), (bool(bvec3(_GLF_IDENTITY((! (false)), false || ((! (false)))), true, _GLF_IDENTITY(true, ! (! (true)))))) || false)), false, false, true)), (_GLF_IDENTITY(bool(bvec4((! (false)), false, false, true)), (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! (false), ! (! (! (false))))), false, false, true)), false || (bool(bvec4((! (false)), false, false, true))))) || false)) && true))))))))))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(false);
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))).y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), ! (! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(ceil(158.527)) : _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) >> 0u);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y)), true, true, _GLF_IDENTITY(false, true && (false)))))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), clamp(float(mat2x4(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-69.35))), 1.0, 1.0)), 1.0, 1.0)), float(mat2x4(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat2x4(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))) > injectionSwitch.y))))), true && (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) || false))), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), clamp(float(mat2x4(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-69.35))), 1.0, 1.0)), 1.0, 1.0)), float(mat2x4(injectionSwitch.x, round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-269.858))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-7455.7088) : 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-33.50)), bool(false))))))), 1.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat2x4(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))) > injectionSwitch.y))))), true && (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) || false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec4(true && (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))
  barrier();
}
