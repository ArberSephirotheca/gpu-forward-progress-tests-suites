#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_12 {
 uvec2 _f0;
 int _f1;
 bvec2 _f2;
 bvec2 _f3;
 mat2 _f4;
 vec2 _f5;
 bool _f6;
} ;

struct _GLF_struct_13 {
 _GLF_struct_12 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_10 {
 uint _f0;
 mat4 _f1;
 vec4 _f2;
 ivec3 _f3;
 uvec4 _f4;
 uint _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_9 {
 vec2 _f0;
 uvec4 _f1;
 mat4x2 _f2;
 mat3 _f3;
 ivec4 _f4;
 bool _f5;
} ;

struct _GLF_struct_8 {
 vec3 _f0;
} ;

struct _GLF_struct_7 {
 float _f0;
 mat2x4 _f1;
 mat3x2 _f2;
 ivec3 _f3;
 ivec4 _f4;
 bvec2 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_11 {
 uint _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_9 _f3;
 mat4x2 _f4;
 mat4 _f5;
 _GLF_struct_10 _f6;
} ;

struct _GLF_struct_5 {
 bvec3 _f0;
 bool _f1;
 float _f2;
} ;

struct _GLF_struct_6 {
 ivec4 _f0;
 _GLF_struct_5 _f1;
 uvec2 _f2;
 vec4 _f3;
 mat3 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_14 {
 _GLF_struct_6 _f0;
 _GLF_struct_11 _f1;
 bvec4 _f2;
 uint workgroup_id;
 _GLF_struct_13 _f3;
 mat4x3 _f4;
 bool _f5;
} ;

struct _GLF_struct_2 {
 uint _f0;
 int _f1;
 ivec4 _f2;
 bvec2 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_3 {
 uint workgroup_size;
 _GLF_struct_2 _f0;
} ;

struct _GLF_struct_0 {
 mat4x2 _f0;
 uint _f1;
 mat3x2 _f2;
 ivec2 _f3;
 bool _f4;
 uvec4 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
 _GLF_struct_0 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_4 {
 _GLF_struct_1 _f0;
 _GLF_struct_3 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = ((_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), _GLF_IDENTITY((~ (0)), (_GLF_IDENTITY((~ (0)), ~ (~ ((~ (0)))))) / 1)))), 0 ^ (_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0)))))))))), _GLF_IDENTITY(int(0), _GLF_IDENTITY(min(int(0), int(0)), (_GLF_IDENTITY(min(int(0), int(0)), (min(int(0), int(0))) / 1)) / (1 & 1))))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (0) | (0))))) << _GLF_IDENTITY(int(0), int(0)), clamp(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0))))), 0 ^ (_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0)))))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(0, max(0, 0))), min(int(0), int(0))))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (0) | (0))))) << _GLF_IDENTITY(int(0), int(0)), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((0), ((0)) / 1)), clamp((~ (0)), (~ (0)), (~ (0))))), 0 ^ (_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0)))))))))), _GLF_IDENTITY(int(0), min(int(0), int(0))))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (0) | (0))))) << _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0))))), 0 ^ (_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0)))))))))), _GLF_IDENTITY(int(0), min(int(0), int(0))))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (0) | (0))))), _GLF_IDENTITY(0, min(0, 0)) | (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0))))), 0 ^ (_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0)))))))))), _GLF_IDENTITY(int(0), min(int(0), int(0))))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (0) | (0))))), (true ? ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0))))), 0 ^ (_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0)))))))))), _GLF_IDENTITY(int(0), min(int(0), int(0))))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (0) | (0))))) : _GLF_FUZZED(12684))))) << _GLF_IDENTITY(int(0), int(0))))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (-83325 & 0)); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false, true, true)))))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < injectionSwitch.y)), true, true)))))
          return;
        }
       else
        {
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
    }
   for(int _injected_loop_counter = ((36786 - -39117) & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 0 | (_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))))))); _injected_loop_counter ++)
    {
     do
      {
       for(int _injected_loop_counter = (((_GLF_IDENTITY(1 | 0, int(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) | (_GLF_IDENTITY(1, max(1, 1)))) | 0, 0)))) << _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, 0 ^ (0)), 1, 0)))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), 0 ^ (~ (0)))))), int(0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(max(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1))), _injected_loop_counter), (_GLF_IDENTITY(max(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1))), _injected_loop_counter), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(max(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1))), _injected_loop_counter), (true ? max(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1))), _injected_loop_counter) : _GLF_FUZZED(_injected_loop_counter)))))) | (max(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1))), _injected_loop_counter)))) > 0); _injected_loop_counter --)
        {
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false, true, false)))))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      break;
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_1(mat3x2(1.0), _GLF_struct_0(mat4x2(1.0), 1u, mat3x2(1.0), ivec2(1), true, uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) | (1u))), bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false))), mat3(1.0)), _GLF_struct_3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(125979u, 50391u, _GLF_IDENTITY(124418u, (124418u) | 0u))))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(125979u, 50391u, _GLF_IDENTITY(124418u, (_GLF_IDENTITY(124418u, (_GLF_IDENTITY(true ? _GLF_IDENTITY(124418u, min(124418u, 124418u)) : _GLF_FUZZED(46423u), (_GLF_IDENTITY(true ? _GLF_IDENTITY(124418u, min(124418u, 124418u)) : _GLF_FUZZED(46423u), (true ? _GLF_IDENTITY(124418u, min(124418u, 124418u)) : _GLF_FUZZED(46423u)) >> 0u)) >> 0u)))) | (124418u))))))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(_GLF_IDENTITY(uvec3(125979u, 50391u, 124418u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(125979u, 50391u, 124418u)), uvec3(uvec3((uvec3(125979u, 50391u, 124418u))))) ^ uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4((uvec3(125979u, 50391u, 124418u)) ^ uvec3(0u, 0u, 0u), 0u), (uvec4((uvec3(125979u, 50391u, 124418u)) ^ uvec3(0u, 0u, 0u), 0u)) - (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(5u), uvec4(5u))))), (false ? _GLF_FUZZED(uvec3(98984u, 90969u, 150880u)) : uvec3(uvec4((uvec3(125979u, 50391u, 124418u)) ^ uvec3(0u, 0u, 0u), 0u))))))))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(125979u, 50391u, _GLF_IDENTITY(124418u, (_GLF_IDENTITY(124418u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(124418u, (124418u) - 0u), 1u), (uvec2(_GLF_IDENTITY(124418u, (124418u) - 0u), 1u)) | (uvec2(_GLF_IDENTITY(124418u, (124418u) - 0u), 1u)))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(124418u, (124418u) - 0u), 1u), (uvec2(_GLF_IDENTITY(124418u, (124418u) - 0u), 1u)) | (uvec2(_GLF_IDENTITY(124418u, (124418u) - 0u), 1u)))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(124418u, (124418u) - 0u), 1u), (uvec2(_GLF_IDENTITY(124418u, (124418u) - 0u), 1u)) | (uvec2(_GLF_IDENTITY(124418u, (124418u) - 0u), 1u)))))))) | (124418u)))), uvec3(uvec3(true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(_GLF_IDENTITY(125979u, (125979u) / 1u), 50391u, _GLF_IDENTITY(124418u, (124418u) | (124418u)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(_GLF_IDENTITY(uvec3(125979u, 50391u, 124418u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(125979u, 50391u, 124418u)), uvec3(uvec3((uvec3(125979u, 50391u, 124418u))))) ^ uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4((uvec3(125979u, 50391u, 124418u)) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uint(0u)))), 0u), (uvec4((uvec3(125979u, 50391u, 124418u)) ^ uvec3(0u, 0u, 0u), 0u)) - (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(5u), uvec4(5u))))), (false ? _GLF_FUZZED(uvec3(98984u, 90969u, 150880u)) : uvec3(uvec4((uvec3(125979u, 50391u, 124418u)) ^ uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u), 0u))))))))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(125979u, 50391u, _GLF_IDENTITY(124418u, (_GLF_IDENTITY(124418u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(124418u, (124418u) - 0u), 1u), (uvec2(_GLF_IDENTITY(124418u, (124418u) - 0u), 1u)) | (uvec2(_GLF_IDENTITY(124418u, (124418u) - 0u), 1u)))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(124418u, (124418u) - 0u), 1u), (uvec2(_GLF_IDENTITY(124418u, (124418u) - 0u), 1u)) | (uvec2(_GLF_IDENTITY(124418u, (124418u) - 0u), 1u)))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(124418u, (124418u) - 0u), 1u), (uvec2(_GLF_IDENTITY(124418u, (124418u) - 0u), 1u)) | (uvec2(_GLF_IDENTITY(124418u, (124418u) - 0u), 1u)))))))) | (124418u)))), uvec3(uvec3(true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(_GLF_IDENTITY(125979u, _GLF_IDENTITY((125979u), ((125979u)) - 0u) / 1u), 50391u, _GLF_IDENTITY(124418u, (124418u) | (124418u))))))))))))) * uvec3(1u, 1u, 1u)).x) << 0u), _GLF_struct_2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), (1u) | 0u)) | (1u)), 1, ivec4(1), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec2(true, false)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(true), true)), false, true)))), bvec4(true))));
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_struct_6(ivec4(1), _GLF_struct_5(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true, 1.0), uvec2(1u), _GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) + vec4(0.0, 0.0, 0.0, 0.0))) * mat4(_GLF_ONE(1.0, injectionSwitch.y))), mat3(1.0), mat3x2(1.0)), _GLF_struct_11(1u, _GLF_struct_7(1.0, mat2x4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mat3x2(1.0), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec2(1, 0))), 1))) | _GLF_IDENTITY((1), 0 | ((1))), max((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec2(1, 0))), 1))) | (1), _GLF_IDENTITY((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec2(1, 0))), 1))) | (1), ((_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(58619) : 1)), int(_GLF_IDENTITY(ivec2(1, 0), clamp(_GLF_IDENTITY(ivec2(1, 0), (false ? _GLF_FUZZED(ivec2(95701, 50947)) : ivec2(1, 0))), ivec2(1, 0), ivec2(1, 0))))), 1))) | (1)) + 0))))), (ivec3(1)) >> ivec3(0, 0, 0)), ivec4(1), bvec2(true), mat4x2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-909.089), float(mat3x4(_GLF_IDENTITY(_GLF_FUZZED(-909.089), (true ? _GLF_FUZZED(-909.089) : _GLF_FUZZED(-3.5))), 1.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), float(1.0), bool(true))))), _GLF_struct_8(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0), 1.0)), 1.0))) / 1.0), float(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x4(1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))), _GLF_IDENTITY((_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9244.8177)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true))))), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0)), 1.0, 0.0, 0.0)) + (max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), mix(float(_GLF_FUZZED(1.1)), float(float(float(1.0))), bool(true))))) - 0.0)))))) / 1.0, max((_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), float(mat4(_GLF_IDENTITY(max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), (max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)) / 1.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), cos(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), exp(0.0), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 0.0)) + (max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))) / _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 1.0, 1.0, 1.0, cos(0.0), length(sqrt(vec3(0.0, 0.0, 0.0)))), transpose(transpose(mat3x2(1.0, 1.0, 1.0, 1.0, cos(0.0), length(sqrt(vec3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(59258))), float(0.0), bool(true))), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0))))))))), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), clamp(min(1.0, 1.0), _GLF_IDENTITY(min(1.0, 1.0), (false ? _GLF_FUZZED(28.45) : min(1.0, 1.0))), min(1.0, 1.0)))), 1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(227.654)), bool(false))), 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(sqrt(0.0), min(sqrt(_GLF_IDENTITY(0.0, 0.0 + (0.0))), sqrt(0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(sqrt(0.0), min(sqrt(_GLF_IDENTITY(0.0, 0.0 + (0.0))), sqrt(0.0))), max(_GLF_IDENTITY(sqrt(0.0), min(sqrt(_GLF_IDENTITY(0.0, 0.0 + (0.0))), sqrt(0.0))), _GLF_IDENTITY(sqrt(0.0), min(sqrt(_GLF_IDENTITY(0.0, 0.0 + (0.0))), sqrt(0.0))))), _GLF_IDENTITY(sqrt(0.0), min(sqrt(_GLF_IDENTITY(0.0, 0.0 + (0.0))), sqrt(0.0))))), 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 0.0)) + (max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))))) / 1.0)))))))), _GLF_struct_9(vec2(1.0), uvec4(1u), mat4x2(1.0), mat3(1.0), ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) - 0)))) - 0, ((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) - 0)))) - 0) + 0))), true), mat4x2(1.0), mat4(1.0), _GLF_struct_10(1u, _GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0)))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(44.33)), bool(false)))), transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat4(1.0)), (transpose(mat4(1.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(transpose(mat4(1.0)), (transpose(mat4(1.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9817.7449)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), (transpose(_GLF_IDENTITY(mat4(1.0), transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat4(1.0)), (transpose(mat4(1.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(transpose(mat4(1.0)), (transpose(mat4(1.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(-993.261), (_GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), (true ? vec4(1.0) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec4(2345.1113, -6739.7728, -44.46, -7.3)), clamp(_GLF_FUZZED(vec4(2345.1113, -6739.7728, -44.46, -7.3)), _GLF_FUZZED(_GLF_IDENTITY(vec4(2345.1113, -6739.7728, -44.46, -7.3), mat4(1.0) * (vec4(2345.1113, _GLF_IDENTITY(-6739.7728, (true ? -6739.7728 : _GLF_FUZZED(-1544.6259))), -44.46, -7.3)))), _GLF_FUZZED(vec4(2345.1113, -6739.7728, -44.46, -7.3)))), (_GLF_IDENTITY(_GLF_FUZZED(vec4(2345.1113, -6739.7728, -44.46, -7.3)), clamp(_GLF_FUZZED(vec4(2345.1113, -6739.7728, -44.46, -7.3)), _GLF_FUZZED(_GLF_IDENTITY(vec4(2345.1113, -6739.7728, -44.46, -7.3), mat4(1.0) * (vec4(2345.1113, _GLF_IDENTITY(-6739.7728, (true ? -6739.7728 : _GLF_FUZZED(-1544.6259))), -44.46, -7.3)))), _GLF_FUZZED(vec4(2345.1113, -6739.7728, -44.46, -7.3))))) * mat4(1.0))))) - vec4(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) - _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-52.91) : 0.0))), 0.0, 0.0)))[1], (vec4(1.0))[2], _GLF_FUZZED(4884.5276)), vec4(_GLF_IDENTITY(_GLF_IDENTITY((vec4(1.0)), clamp((vec4(1.0)), (vec4(1.0)), _GLF_IDENTITY((vec4(1.0)), _GLF_IDENTITY(((vec4(1.0))) * mat4(_GLF_ONE(1.0, injectionSwitch.y)), vec4(1.0, 1.0, 1.0, 1.0) * (((vec4(1.0))) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))))), max((vec4(1.0)), _GLF_IDENTITY(_GLF_IDENTITY((vec4(1.0)), ((vec4(1.0))) / vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(vec4(mat4((vec4(1.0)), tan(0.0), _GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), (vec4(mat4((vec4(1.0)), tan(0.0), _GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(56.86)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 1.0, 1.0, 1.0))) / vec4(1.0, 1.0, 1.0, 1.0)))))[0], _GLF_FUZZED(_GLF_IDENTITY(vec4(-277.885, 54.93, 389.122, 12.30).p, float(mat3(vec4(-277.885, 54.93, 389.122, 12.30).p, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)))), _GLF_IDENTITY(_GLF_FUZZED(38.26), min(_GLF_FUZZED(38.26), _GLF_IDENTITY(_GLF_FUZZED(38.26), (false ? _GLF_FUZZED(_GLF_IDENTITY(7945.8702, _GLF_IDENTITY(float(mat4(7945.8702, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(1.0))), 1.0, 0.0, sqrt(0.0), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0))), float(mat2x4(_GLF_IDENTITY(float(mat4(7945.8702, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(1.0))), 1.0, 0.0, sqrt(0.0), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0))), mix(float(float(mat4(7945.8702, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(1.0))), 1.0, 0.0, sqrt(0.0), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0)))), float(_GLF_FUZZED(-2.4)), bool(false))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))))) : _GLF_FUZZED(38.26))))), (vec4(1.0))[3]), bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), min((_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(atan(-3.3)) : injectionSwitch.x))), (injectionSwitch.x))) - 0.0), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), 0.0)), (true ? vec2(mat4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-118.593)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0), vec3(1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-237.198)), float(0.0), bool(true))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), 0.0)) : _GLF_FUZZED(vec2(-9.2, 9863.5692))))).x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(faceforward(_GLF_IDENTITY(atanh(3.6), (atanh(3.6)) / determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))), 2.1, 8.7)) : _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, round(length(normalize(1.0))), 1.0))).x), (max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, round(length(normalize(1.0))), 1.0))).x)) - 0.0)))))) > injectionSwitch.y)), true))), ivec3(_GLF_IDENTITY(1, max(1, 1))), uvec4(_GLF_IDENTITY(1u, (1u) | (1u))), 1u, mat4x2(1.0))), bvec4(_GLF_IDENTITY(true, false || (true))), gl_WorkGroupID.x, _GLF_struct_13(_GLF_struct_12(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), 1u * (_GLF_IDENTITY((1u), ((1u)) | ((1u))))) * 1u))), (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), 1u * (_GLF_IDENTITY((1u), ((1u)) | ((1u))))) * 1u)))) - 0u)), 1, bvec2(true), bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), false || (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), false || (! (true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (true))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), false || (! (true)))))))) && true)))))) || _GLF_IDENTITY(false, (false) || false))), mat2(1.0), vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), true), mat3(1.0)), mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, ! (! (true))) ? 0.0 : _GLF_FUZZED(2.4))), 0.0, 0.0))), _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(4.7)), min((true ? 1.0 : _GLF_FUZZED(4.7)), _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(4.7)), (true ? (true ? 1.0 : _GLF_FUZZED(4.7)) : _GLF_FUZZED(cosh(-7.8)))))))), true);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(cos(vec2(0.0, 0.0)), max(_GLF_IDENTITY(cos(vec2(0.0, 0.0)), vec2(mat3x4(cos(vec2(0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (0.0)))), dot(vec3(_GLF_IDENTITY(1.0, (1.0) / cos(0.0)), 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))), cos(vec2(0.0, 0.0))))).y)), _GLF_IDENTITY(false, (false) && true) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / _GLF_IDENTITY(cos(vec2(0.0, 0.0)), max(_GLF_IDENTITY(cos(vec2(0.0, 0.0)), vec2(mat3x4(cos(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))), cos(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-89.45)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), max((injectionSwitch) / _GLF_IDENTITY(cos(vec2(0.0, 0.0)), max(_GLF_IDENTITY(cos(vec2(0.0, 0.0)), vec2(mat3x4(cos(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))), cos(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-89.45)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (injectionSwitch) / _GLF_IDENTITY(cos(vec2(0.0, 0.0)), max(_GLF_IDENTITY(cos(vec2(0.0, 0.0)), vec2(mat3x4(cos(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))), cos(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-89.45)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))).y))))))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_struct_replacement_4._f1.workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4._f1.workgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_4._f1.workgroup_size), clamp((_GLF_struct_replacement_4._f1.workgroup_size), (_GLF_struct_replacement_4._f1.workgroup_size), (_GLF_struct_replacement_4._f1.workgroup_size))) / 1u), (_GLF_struct_replacement_4._f1.workgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4._f1.workgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_4._f1.workgroup_size, 1u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (0u) >> 0u) ^ (0u))), (uvec4(_GLF_struct_replacement_4._f1.workgroup_size, 1u, 0u, 0u)) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))))), (uint(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_4._f1.workgroup_size, 1u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (0u) >> 0u) ^ (0u))), (uvec4(_GLF_struct_replacement_4._f1.workgroup_size, 1u, 0u, 0u)) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))))))) << 0u)), ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_4._f1.workgroup_size, uint(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_4._f1.workgroup_size, 1u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (0u) >> 0u) ^ (0u))), (uvec4(_GLF_struct_replacement_4._f1.workgroup_size, 1u, 0u, 0u)) << uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (true ? 0u : _GLF_FUZZED(subgroup_size))))))))))))) / 1u) * _GLF_struct_replacement_14.workgroup_id;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u | (subgroup_id * subgroup_size), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * subgroup_size), clamp(0u | _GLF_IDENTITY((subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size), min((subgroup_id * subgroup_size), (subgroup_id * subgroup_size)))) >> 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), 0u | (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | (~ (subgroup_size))))))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_size)))) >> (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), subgroup_id * subgroup_size)))))), _GLF_IDENTITY(0u | (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, clamp(_GLF_IDENTITY((subgroup_size) | 0u, ((subgroup_size) | 0u) | ((subgroup_size) | 0u)), (subgroup_size) | 0u, _GLF_IDENTITY((subgroup_size) | 0u, ~ (~ ((subgroup_size) | 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u | (subgroup_id * subgroup_size), (_GLF_IDENTITY(0u | (subgroup_id * subgroup_size), 1u * (0u | (subgroup_id * subgroup_size)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u | (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(0u | (subgroup_id * subgroup_size), _GLF_IDENTITY((0u | (subgroup_id * subgroup_size)), max((0u | (subgroup_id * subgroup_size)), (0u | (subgroup_id * subgroup_size)))) >> 0u)))) ^ 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)), 0u ^ (uint(uvec3(_GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_id * subgroup_size), ~ (~ (_GLF_IDENTITY((subgroup_id * subgroup_size), clamp((subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) / 1u), (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))))), clamp(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))) / 1u) | (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9.6)), float(injectionSwitch.y), bool(true))))) ? _GLF_FUZZED(num_workgroup) : subgroup_id)))) * subgroup_size, 0u, 1u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u)))))), (uvec4(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : subgroup_id)))) * subgroup_size, 0u, 1u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))))))) / uvec4(1u, 1u, 1u, 1u))), min(uint(uvec4(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u)))) - 0u) * subgroup_size, 0u, 1u, 0u)), uint(uvec4(subgroup_id * subgroup_size, 0u, 1u, 0u)))))), 0u | (subgroup_id * subgroup_size), 0u | (subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(3.8)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-853.733)), float(injectionSwitch.y), bool(true)))), bool(true))))), 0u))))))) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), (_GLF_IDENTITY(true ? _GLF_IDENTITY(0u, (0u) >> 0u) : _GLF_FUZZED(packSnorm4x8((vec4(2.3, -5.0, 8.6, -6.6) * mat4(1230.3085, -172.901, -5.7, 5.2, 266.191, -26.97, -9.1, -9853.9504, -9824.5039, 0.8, -31.53, 5.3, 0.0, 7174.7365, -1.7, 7504.8732)))), (true ? _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, (0u) ^ 0u)) : _GLF_FUZZED(packSnorm4x8((vec4(2.3, -5.0, 8.6, -6.6) * mat4(1230.3085, -172.901, -5.7, 5.2, 266.191, -26.97, -9.1, -9853.9504, -9824.5039, 0.8, -31.53, 5.3, 0.0, 7174.7365, -1.7, 7504.8732))))) - 0u)))) | (_GLF_IDENTITY(0u, (0u) ^ 0u))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), _GLF_IDENTITY((true ? _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))), _GLF_IDENTITY(0u, 1u * (0u)), _GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))))) : _GLF_FUZZED(packSnorm4x8((vec4(2.3, -5.0, 8.6, _GLF_IDENTITY(-6.6, (-6.6) - 0.0)) * mat4(1230.3085, -172.901, -5.7, 5.2, 266.191, -26.97, -9.1, -9853.9504, -9824.5039, 0.8, -31.53, 5.3, 0.0, 7174.7365, -1.7, 7504.8732))))), min((true ? _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))), _GLF_IDENTITY(0u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(num_workgroup) : 1u)) * (0u)), _GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))))) : _GLF_FUZZED(packSnorm4x8((vec4(2.3, -5.0, 8.6, _GLF_IDENTITY(-6.6, _GLF_IDENTITY((-6.6), (false ? _GLF_FUZZED(tan(6.1)) : _GLF_IDENTITY((-6.6), min((-6.6), (-6.6))))) - 0.0)) * mat4(1230.3085, -172.901, -5.7, 5.2, 266.191, -26.97, -9.1, -9853.9504, -9824.5039, 0.8, -31.53, 5.3, 0.0, 7174.7365, -1.7, 7504.8732))))), (true ? _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))), _GLF_IDENTITY(0u, 1u * _GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), _GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))))) : _GLF_FUZZED(packSnorm4x8((vec4(2.3, -5.0, 8.6, _GLF_IDENTITY(-6.6, (-6.6) - 0.0)) * mat4(1230.3085, -172.901, -5.7, 5.2, 266.191, -26.97, -9.1, -9853.9504, -9824.5039, 0.8, -31.53, 5.3, 0.0, 7174.7365, -1.7, 7504.8732))))))))) | (_GLF_IDENTITY(0u, (0u) ^ 0u)))) >> 0u));
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))) + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))) + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), clamp((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))) + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))) + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))) + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))) + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), 0u ^ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))) + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))) + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))));
 uint read = 0;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, 0 ^ (4)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || false)); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / 1))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(((-6.8 * -89.84) - -9.9))), bool(false)))) < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))) && true)))))
      {
       return;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(1.0, max(1.0, 1.0))) - 0.0))), injectionSwitch)).y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), injectionSwitch)).y), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), injectionSwitch)).y)) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
            return;
          }
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         return;
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, determinant(mat3(1.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, sin(0.0), sqrt(1.0))), abs(0.0), log(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, tan(0.0))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || false, ((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || false) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       return;
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) % _GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, max(2, 2)), _GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((2) * 1, min((2) * 1, _GLF_IDENTITY((2) * 1, clamp(_GLF_IDENTITY((2) * 1, ((2) * 1) - 0), (2) * 1, (2) * 1))))), (true ? _GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) / 1)))) * 1) : _GLF_FUZZED(-60947)))))) == 0)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
        {
         subgroupAll(false);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
        }
       do
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) ^ 0))
            {
             return;
            }
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))))
          continue;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (false) && true)));
       do
        {
         if(_GLF_DEAD(false))
          return;
         for(int _injected_loop_counter = (_GLF_IDENTITY((~ (35433 + -45374)) & 0, ((~ (35433 + -45374)) & 0) / (0 ^ 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid)), virtual_gid, virtual_gid))], _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), max(_GLF_IDENTITY(int(4), (int(4)) / int(_GLF_ONE(1.0, injectionSwitch.y))), int(4))))), 4)), 64, 2);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))));
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))))))), false || ((_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, false))))))), true))))))))) || false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
            break;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x < injectionSwitch.y))))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        return;
       subgroupAll(false);
       read = atomicLoad(buf[virtual_gid], 4, 64, 2);
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
    {
    }
   else
    {
     subgroupBarrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
  }
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, 1u, 1u)), min(uint(uvec3(virtual_gid, 1u, 1u)), uint(uvec3(virtual_gid, 1u, 1u))))))))) : _GLF_FUZZED(read))), min(virtual_gid, _GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(workgroup_base) : virtual_gid)))), _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))), (false ? _GLF_FUZZED(193525u) : clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))))), uint(uvec3(_GLF_IDENTITY(clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))), uint(uvec4(clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) | (virtual_gid), 0u + ((virtual_gid) | (virtual_gid))))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u, 0u))), 1u, 0u)))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))))) ^ 0u)))], read, 4, 64, 4);
}
