#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base;
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   do
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x = subgroup_id;
         do
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, ! (! (true))), true, false)))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false)))))))), (bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         barrier();
        }
      }
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
    {
     barrier();
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY((0 ^ 0), ((0 ^ 0)) | (0 << _GLF_IDENTITY(int(6), int(6)))), (_injected_loop_counter > (0 ^ 0)) && true)); _injected_loop_counter --)
    {
     GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y = workgroup_base;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), true && (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 uint virtual_gid = _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) ^ (uint(true) & 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x), (true ? (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) : _GLF_FUZZED(subgroup_id))) ^ (uint(true) & 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) ^ (uint(true) & 0u)), (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) ^ (uint(true) & 0u))) * 1u)) ^ 0u)))) * _GLF_IDENTITY(subgroup_size, 0u ^ _GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), uint(_GLF_IDENTITY(uvec2((subgroup_size), 1u), uvec2(uvec3(uvec2((subgroup_size), 1u), (1u & 1u)))))), (subgroup_size)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, uvec2(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base[0], GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base[1])).x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) ^ (uint(true) & 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) ^ (uint(true) & 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) ^ (uint(true) & 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base) << uvec2(0u, 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(uvec2(106156u, 173257u), clamp(uvec2(106156u, 173257u), _GLF_IDENTITY(uvec2(106156u, 173257u), uvec2(1u, 1u) * (uvec2(106156u, 173257u))), uvec2(106156u, 173257u)))) : _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base) << uvec2(0u, 0u)))).x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) ^ (uint(true) & 0u))) * 1u)) ^ 0u)))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(atomicOr(num_workgroup, workgroup_base)))), (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(atomicOr(num_workgroup, workgroup_base))))) >> (0u << _GLF_IDENTITY(uint(1u), uint(1u)))) ^ _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))))))) + subgroup_local_id, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) ^ (uint(true) & 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) ^ (uint(true) & 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) ^ (uint(true) & 0u)), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) ^ (uint(true) & 0u))), ~ (~ ((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) ^ (uint(true) & 0u)))))) * 1u)) ^ 0u)))) * _GLF_IDENTITY(subgroup_size, 0u ^ _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size)))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, uvec2(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base[0], GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base[1])).x, _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) ^ (uint(true) & 0u), ((GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) ^ (uint(true) & 0u)) >> 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) ^ (uint(true) & 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) ^ _GLF_IDENTITY((uint(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))) & 0u), (_GLF_IDENTITY((uint(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))) & 0u), ((uint(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))) & 0u)) | ((uint(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))) & 0u)))) | ((uint(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))) & 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base) << uvec2(0u, 0u)).x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) ^ (uint(true) & 0u))) * 1u)) ^ 0u)))), (false ? _GLF_FUZZED(uaddCarry(workgroup_id, subgroup_size, subgroup_local_id)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, uvec2(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base[0], GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base[1])).x, _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) ^ (uint(true) & 0u), ((GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) ^ (uint(true) & 0u)) >> 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) ^ (uint(true) & 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) ^ _GLF_IDENTITY((uint(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))) & 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (_GLF_IDENTITY(! (true), true && (! (true)))))), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (_GLF_IDENTITY(! (true), true && (! (true)))))), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (_GLF_IDENTITY(! (true), true && (! (true)))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (_GLF_IDENTITY(! (true), true && (! (true)))))))) : _GLF_FUZZED(subgroup_id))) & 0u), ((uint(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), true && (! (true)))))) & 0u)) | ((uint(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))) & 0u)))) | ((uint(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))) & 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base) << uvec2(0u, 0u)).x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) ^ (uint(true) & 0u))) * 1u)) ^ 0u)))))) * _GLF_IDENTITY(subgroup_size, 0u ^ _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size)))))), 1u * ((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, uvec2(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base[0], GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base[1])).x, _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) ^ (uint(true) & 0u), ((GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) ^ (uint(true) & 0u)) >> 0u)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) ^ (uint(true) & 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) ^ _GLF_IDENTITY((uint(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))) & 0u), _GLF_IDENTITY((_GLF_IDENTITY((uint(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))) & 0u), ((uint(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))) & 0u)) | ((uint(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))) & 0u)))) | ((uint(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))) & 0u)), 0u | ((_GLF_IDENTITY((uint(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))) & 0u), ((uint(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))) & 0u)) | ((uint(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))) & 0u)))) | ((uint(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))) & 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base) << uvec2(0u, 0u)), clamp(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base) << uvec2(0u, 0u)), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base) << uvec2(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base) << uvec2(0u, 0u)), clamp(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base) << uvec2(0u, 0u)), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base) << uvec2(0u, 0u)), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base) << uvec2(0u, 0u)))))).x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) ^ (uint(true) & 0u))) * 1u)) ^ 0u))), ~ (~ ((~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) ^ (uint(true) & 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) ^ _GLF_IDENTITY((uint(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))) & 0u), _GLF_IDENTITY((_GLF_IDENTITY((uint(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))) & 0u), ((uint(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))) & 0u)) | ((uint(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))) & 0u)))) | ((uint(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))) & 0u)), 0u | ((_GLF_IDENTITY((uint(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))) & 0u), ((uint(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))) & 0u)) | ((uint(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))) & 0u)))) | ((uint(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))) & 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base) << uvec2(0u, 0u)), clamp(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base) << uvec2(0u, 0u)), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base) << uvec2(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base) << uvec2(0u, 0u)), clamp(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base) << uvec2(0u, 0u)), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base) << uvec2(0u, 0u)), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base) << uvec2(0u, 0u)))))).x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) ^ (uint(true) & 0u))) * 1u)) ^ 0u))))))) * _GLF_IDENTITY(subgroup_size, 0u ^ _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))))))))) + subgroup_local_id) | (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x), max((GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x), _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x), min((GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x), (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x))))) ^ (uint(true) & 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) ^ (uint(true) & 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) ^ (uint(true) & 0u)), (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(true), min(_GLF_IDENTITY(uint(true), (uint(true)) | (uint(true))), uint(true))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(true), (uint(true)) >> 0u), clamp(uint(true), uint(true), uint(true))))) & 0u))) * 1u)) ^ 0u)))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u ^ _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))), max(_GLF_IDENTITY(0u ^ _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))), (0u ^ _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(0u ^ _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))), clamp(_GLF_IDENTITY(0u ^ _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))), 0u + (0u ^ _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))))), 0u ^ _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))), 0u ^ _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size)))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, uvec2(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base[0], (true ? GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base[0] : _GLF_FUZZED(uint(78817)))), GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base[1])).x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) ^ (uint(true) & 0u)), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, uvec2(uvec3(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, 0u))), uvec2(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) << 0)))], GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base[1])).x, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, clamp(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, max(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, max(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x)), GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x)), GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x))) ^ (uint(true) & 0u)) : _GLF_FUZZED(subgroup_size)), clamp((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, uvec2(uvec3(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, 0u))), uvec2(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) << 0)))], GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base[1])).x, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, clamp(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, max(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, max(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x)), GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x)), GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x))) ^ (uint(true) & 0u)) : _GLF_FUZZED(subgroup_size)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, uvec2(uvec3(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, 0u))), uvec2(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) << 0)))], GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base[1])).x, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, clamp(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, max(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, max(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x)), GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x)), GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x))) ^ (uint(true) & 0u)) : _GLF_FUZZED(subgroup_size)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, uvec2(uvec3(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, 0u))), uvec2(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) << 0)))], GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base[1])).x, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, clamp(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, max(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, max(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x)), GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x)), GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x))) ^ (uint(true) & 0u)) : _GLF_FUZZED(subgroup_size))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) ^ (_GLF_IDENTITY(uint(true) & 0u, clamp(_GLF_IDENTITY(uint(true) & 0u, ~ (~ (uint(true) & 0u))), uint(true) & 0u, _GLF_IDENTITY(uint(true) & 0u, min(uint(true) & 0u, uint(true) & 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) ^ (uint(true) & 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base) << uvec2(0u, 0u)).x, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) / 1u)) ^ (uint(true) & 0u))) * 1u)), min((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) ^ (uint(true) & 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base) << uvec2(0u, 0u)).x, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) / 1u)) ^ (uint(true) & 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base) << uvec2(0u, 0u)).x, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) / 1u)) ^ (uint(true) & 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base) << uvec2(0u, 0u)).x, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) / 1u)) ^ (uint(true) & 0u))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base) << uvec2(0u, 0u)).x, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) / 1u)) ^ (uint(true) & 0u))))) * 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) ^ (uint(true) & 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base) << uvec2(0u, 0u)).x, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) / 1u)) ^ (uint(true) & 0u))) * 1u)))) ^ 0u)))) * _GLF_IDENTITY(subgroup_size, 0u ^ _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))))))) + subgroup_local_id));
 uint next_virtual_gid = GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   else
    {
     atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (0u ^ 0u)), (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)) | 0u)], (buf[virtual_gid]) | (0u ^ 0u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true))))) && true)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(319.601) : _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-50.82), (_GLF_FUZZED(-50.82)) / 1.0)), bool(false))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6.8) : injectionSwitch.x)))))) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, exp(tan(0.0)), 1.0, sqrt(0.0), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9842.4769)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0), transpose(transpose(mat4(injectionSwitch.x, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, exp(tan(0.0)), 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(1380.6785), min(_GLF_FUZZED(1380.6785), _GLF_FUZZED(1380.6785)))), float(injectionSwitch.y), bool(true))))))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
        barrier();
      }
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   subgroupAll(false);
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), true, true, true)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   else
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8790.1375) : injectionSwitch.x)), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-23.14)), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).x), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), true && (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), false, true, true))))))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), true && (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), false, true, true))))))), true)), ! (! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), true && (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), false, true, true))))))), true)))))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
            barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) * vec2(1.0, 1.0))).x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, _GLF_IDENTITY(true, bool(bvec2(true, false)))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch.x))) + 0.0) > injectionSwitch.y))))
      barrier();
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       do
        {
         for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, 0 | (_GLF_IDENTITY(8, clamp(8, 8, 8))))) | 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, 0 | (8)), min(_GLF_IDENTITY(8, (8) + 0), 8)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, 0 | (8)), min(_GLF_IDENTITY(8, (8) + 0), 8)), max(_GLF_IDENTITY(_GLF_IDENTITY(8, 0 | (8)), min(_GLF_IDENTITY(8, (8) + 0), 8)), _GLF_IDENTITY(_GLF_IDENTITY(8, 0 | (8)), min(_GLF_IDENTITY(8, (8) + 0), 8))))) << 0), 8, _GLF_IDENTITY(8, (8) | _GLF_IDENTITY((8), int(ivec3(_GLF_IDENTITY((8), ((8)) << 0), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0))))))), (true ? int(8) : _GLF_FUZZED(13254))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(8, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, 0 | (8)), min(_GLF_IDENTITY(8, (8) + 0), 8)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, 0 | (8)), min(_GLF_IDENTITY(8, (8) + 0), 8)), max(_GLF_IDENTITY(_GLF_IDENTITY(8, 0 | (8)), min(_GLF_IDENTITY(8, (8) + 0), 8)), _GLF_IDENTITY(_GLF_IDENTITY(8, 0 | (8)), min(_GLF_IDENTITY(8, (8) + 0), 8))))) << 0), 8, _GLF_IDENTITY(8, (8) | _GLF_IDENTITY((8), int(ivec3(_GLF_IDENTITY((8), ((8)) << 0), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0))))))), (true ? int(8) : _GLF_FUZZED(13254))), _GLF_IDENTITY(int(_GLF_IDENTITY(8, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, 0 | (8)), min(_GLF_IDENTITY(8, (8) + 0), 8)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, 0 | (8)), min(_GLF_IDENTITY(8, (8) + 0), 8)), max(_GLF_IDENTITY(_GLF_IDENTITY(8, 0 | (8)), min(_GLF_IDENTITY(8, (8) + 0), 8)), _GLF_IDENTITY(_GLF_IDENTITY(8, 0 | (8)), min(_GLF_IDENTITY(8, (8) + 0), 8))))) << 0), 8, _GLF_IDENTITY(8, (8) | _GLF_IDENTITY((8), int(ivec3(_GLF_IDENTITY((8), ((8)) << 0), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0))))))), (true ? int(8) : _GLF_FUZZED(13254))), _GLF_IDENTITY(int(_GLF_IDENTITY(8, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, 0 | (8)), min(_GLF_IDENTITY(8, (8) + 0), 8)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, 0 | (8)), min(_GLF_IDENTITY(8, (8) + 0), 8)), max(_GLF_IDENTITY(_GLF_IDENTITY(8, 0 | (8)), min(_GLF_IDENTITY(8, (8) + 0), 8)), _GLF_IDENTITY(_GLF_IDENTITY(8, 0 | (8)), min(_GLF_IDENTITY(8, (8) + 0), 8))))) << 0), 8, _GLF_IDENTITY(8, (8) | _GLF_IDENTITY((8), int(ivec3(_GLF_IDENTITY((8), ((8)) << 0), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0))))))), (true ? int(8) : _GLF_FUZZED(13254))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1))))), 1, 0, 1)))) | (1))) >> 0)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), false || (_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))), ! (! (_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), false || (_injected_loop_counter > int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * _GLF_ONE(1.0, injectionSwitch.y))))))))), bool(bvec2(! (_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), false || (_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))))), false)))))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (((1 ^ 1) ^ 1) & 1)); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))))))))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   atomicStore(checker[_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))], read, _GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY(64, _GLF_IDENTITY(0 | (64), max(0 | _GLF_IDENTITY((64), _GLF_IDENTITY(((64)) ^ (_GLF_IDENTITY(0, clamp(0, 0, 0)) << _GLF_IDENTITY(int(2), int(2))), clamp(((64)) ^ (_GLF_IDENTITY(0, clamp(0, 0, 0)) << _GLF_IDENTITY(int(2), int(2))), ((64)) ^ (_GLF_IDENTITY(0, clamp(0, 0, 0)) << _GLF_IDENTITY(int(2), int(2))), ((64)) ^ (_GLF_IDENTITY(0, clamp(0, 0, 0)) << _GLF_IDENTITY(int(2), int(2)))))), 0 | (_GLF_IDENTITY(64, 0 + (_GLF_IDENTITY(64, 0 + (64)))))))), 4);
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_ONE(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(-6.4))), injectionSwitch.y))))));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               else
                {
                }
              }
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * 1.0)))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                        barrier();
                      }
                    }
                  }
                 barrier();
                }
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y : _GLF_FUZZED(vec4(4.5, 23.55, 2.9, -1.5).t)))))))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, clamp((0) - 0, _GLF_IDENTITY((0) - 0, max(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10825) : _GLF_IDENTITY((0), 0 | ((0))))))) - 0, (0) - 0)), (_GLF_IDENTITY(0, min(0, 0))) - 0))), _GLF_IDENTITY(0, _GLF_IDENTITY((0) / int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), ((0) / int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))) - 0)), _GLF_IDENTITY(0, (0) >> 0))) | int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), true && (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), (! (_GLF_IDENTITY((false), ((false)) && true))) || false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))))))))), bool(bvec3((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, abs(0.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, exp(0.0))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), true && (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), (! (_GLF_IDENTITY((false), ((false)) && true))) || false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))))))))), bool(bvec3((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, abs(0.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, exp(0.0))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), true, true)))))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)), true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))), ! (_GLF_IDENTITY(! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3(mat3x4(mat3(injectionSwitch, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0))))), vec2(vec4(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3(mat3x4(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), 1.0, 1.0))), _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3(mat3x4(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(vec2(vec4(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3(mat3x4(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), 1.0, 1.0)), (true ? vec2(vec4(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3(mat3x4(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), 1.0, 1.0)) : _GLF_FUZZED(vec2(-285.796, 49.17)))))), min(sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3(mat3x4(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(vec2(vec4(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3(mat3x4(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), 1.0, 1.0)), (true ? vec2(vec4(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3(mat3x4(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), 1.0, 1.0)) : _GLF_FUZZED(vec2(-285.796, 49.17)))))), sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3(mat3x4(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(vec2(vec4(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3(mat3x4(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), 1.0, 1.0)), (true ? vec2(vec4(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3(mat3x4(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), 1.0, 1.0)) : _GLF_FUZZED(vec2(-285.796, 49.17)))))))))).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3(mat3x4(mat3(injectionSwitch, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0))))), vec2(vec4(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3(mat3x4(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), 1.0, 1.0))), _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3(mat3x4(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(vec2(vec4(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3(mat3x4(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), 1.0, 1.0)), (true ? vec2(vec4(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3(mat3x4(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), 1.0, 1.0)) : _GLF_FUZZED(vec2(-285.796, 49.17)))))), min(sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3(mat3x4(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(vec2(vec4(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3(mat3x4(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), 1.0, 1.0)), (true ? vec2(vec4(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3(mat3x4(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), 1.0, 1.0)) : _GLF_FUZZED(vec2(-285.796, 49.17)))))), sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3(mat3x4(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(vec2(vec4(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3(mat3x4(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), 1.0, 1.0)), (true ? vec2(vec4(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3(mat3x4(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), 1.0, 1.0)) : _GLF_FUZZED(vec2(-285.796, 49.17)))))))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3(mat3x4(mat3(injectionSwitch, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0))))), vec2(vec4(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3(mat3x4(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), 1.0, 1.0))), _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3(mat3x4(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(vec2(vec4(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3(mat3x4(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), 1.0, 1.0)), (true ? vec2(vec4(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3(mat3x4(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), 1.0, 1.0)) : _GLF_FUZZED(vec2(-285.796, 49.17)))))), min(sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3(mat3x4(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(vec2(vec4(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3(mat3x4(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), 1.0, 1.0)), (true ? vec2(vec4(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3(mat3x4(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), 1.0, 1.0)) : _GLF_FUZZED(vec2(-285.796, 49.17)))))), sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3(mat3x4(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(vec2(vec4(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3(mat3x4(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), 1.0, 1.0)), (true ? vec2(vec4(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3(mat3x4(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), 1.0, 1.0)) : _GLF_FUZZED(vec2(-285.796, 49.17)))))))))).y)))))))), _GLF_IDENTITY((! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true), bvec2(bvec4(bvec2((! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true), false, false)))), (bool(_GLF_IDENTITY(bvec2((! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true), bvec2(bvec4(bvec2((! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true), false, false))))) || false)) || false))))), true && _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))) && true))))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))) && true)))))))))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           else
            {
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(true, ! (! (true))))))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _injected_loop_counter --)
          {
           do
            {
             do
              {
               barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
                barrier();
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true && (_GLF_DEAD(false))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = (1 & _GLF_IDENTITY((0 | ((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (true ? int(3) : _GLF_FUZZED(14223))), int(3)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (true ? int(3) : _GLF_FUZZED(14223))), int(3)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (true ? int(3) : _GLF_FUZZED(14223))), int(3)), int(_GLF_ZERO(0.0, injectionSwitch.x))))) >> 0))) >> _GLF_IDENTITY(int(3), int(3)))), clamp((_GLF_IDENTITY(0, max(0, 0)) | ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), (true ? int(3) : _GLF_FUZZED(14223))), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), int(3)))), (0 | ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), (true ? int(3) : _GLF_FUZZED(14223))), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), (0 | ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), (true ? int(3) : _GLF_FUZZED(14223))), int(3))) >> _GLF_IDENTITY(int(3), int(3))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 << _GLF_IDENTITY(int(5), int(5))) & (+ -290))); _injected_loop_counter --)
            {
             barrier();
            }
          }
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) || (true)), bool(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, false), true)), bvec2(bvec4(bvec2(bvec3(bvec2(true, false), true)), true, true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), 0 ^ (_GLF_IDENTITY(0, (0) << 0)))) | (0))], _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), 0 ^ (_GLF_IDENTITY(0, (0) << 0)))) | (0))], 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), (mat3(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), 0 ^ (_GLF_IDENTITY(0, (0) << 0)))) | (0))], 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (float(_GLF_IDENTITY(mat3(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), 0 ^ (_GLF_IDENTITY(0, (0) << 0)))) | (0))], 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), (mat3(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), 0 ^ (_GLF_IDENTITY(0, (0) << 0)))) | (0))], 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) + length(vec2(0.0, 0.0)))), injectionSwitch[_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) + 0), 1))])))).x > injectionSwitch.y)) || (true)), bool(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), false || (bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))))))))), false), true), bvec3(bvec4(bvec3(bvec2(true, false), true), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(true, false), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(true, false), true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec2(true, false), true), bvec3(bvec3(bvec3(bvec2(true, false), true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec2(true, false), true), bvec3(bvec3(bvec3(bvec2(true, false), true))))), true))))), false)))), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), true))), true))))))))));
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}
