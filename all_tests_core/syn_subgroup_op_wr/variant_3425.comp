#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0)))) : _GLF_FUZZED(injectionSwitch))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))
      return;
     barrier();
    }
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), true, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)) : _GLF_FUZZED(25.84))), float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0)))))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), true, false))), true))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(-15.69), _GLF_FUZZED((true ? _GLF_IDENTITY(6.5, (6.5) / 1.0) : (- 7.7)))), vec2(((injectionSwitch) / vec2(1.0, 1.0))[0], ((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(mat2x3(vec2(1.0, 1.0), 1.0, 1.0, log(1.0), 0.0)), (false ? _GLF_FUZZED(vec2(2.1, -7.3)) : vec2(mat2x3(vec2(1.0, 1.0), 1.0, 1.0, log(1.0), 0.0)))))) + abs(vec2(0.0, 0.0))))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(dot(mix(vec4(-473.757, 6.1, -50.65, -2795.6470), vec4(4727.2549, 52.89, 53.50, 64.50), 7061.0904), vec4(4626.4038, -9.3, _GLF_IDENTITY(-8.3, float(mat3(-8.3, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(tan(0.0), 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(tan(0.0), 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(437.855)), float(dot(vec4(tan(0.0), 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), bool(true)))), 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(-1.4, min(-1.4, -1.4))))) : 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float((108648u != 83826u)))), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) + vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, float(float(0.0))))).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, tan(0.0), 1.0))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), (false ? _GLF_FUZZED(vec2(88.60, 4.9)) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), injectionSwitch)).y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(29.40) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), (false ? _GLF_FUZZED(vec2(88.60, 4.9)) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), injectionSwitch)).y, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), (false ? _GLF_FUZZED(vec2(88.60, 4.9)) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), injectionSwitch)).y : _GLF_FUZZED(-0.2)))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))))))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), max(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID[1], (false ? _GLF_FUZZED(subgroup_local_id) : gl_WorkGroupID[1])), gl_WorkGroupID[2])), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) | uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID))) << uvec3(0u, 0u, 0u)))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(bvec4(bool(bool(false)), false, true, true))))))), false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(bvec4(bool(bool(false)), false, true, true))))))), false, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(bvec4(bool(bool(false)), false, true, true))))))), false, false))), false || (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(bvec4(bool(bool(false)), false, true, true))))))), false, false)))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(bvec4(bool(bool(false)), false, true, true))))))), false, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(bvec4(bool(bool(false)), false, true, true))))))), false, false))), false || (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(bvec4(bool(bool(false)), false, true, true))))))), false, false))))))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bvec4(bool(bool(false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(bool(bool(false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), bool(bvec4(bool(bool(false)), false, true, true))))))), false, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(bvec4(bool(bool(false)), false, true, true))))))), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(bvec4(bool(bool(false)), false, true, true))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(bvec4(bool(bool(false)), false, true, true))))))), false, false), true))), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(bvec4(bool(bool(false)), false, true, true))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(bvec4(bool(bool(false)), false, true, true))))))), false, false), true))), true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(bvec4(bool(bool(false)), false, true, true))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(bvec4(bool(bool(false)), false, true, true))))))), false, false), true))), true)))))))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(bvec4(bool(bool(false)), false, true, true))))))), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(bvec4(bool(bool(false)), false, true, true))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(bvec4(bool(bool(false)), false, true, true))))))), false, false), true))), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(bvec4(bool(bool(false)), false, true, true))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(bvec4(bool(bool(false)), false, true, true))))))), false, false), true))), true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(bvec4(bool(bool(false)), false, true, true))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(bvec4(bool(bool(false)), false, true, true))))))), false, false), true))), true))))))))))))), false || (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(bvec4(bool(bool(false)), false, true, true))))))), _GLF_IDENTITY(false, (false) || false), false))))))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-985.601) : injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-985.601) : injectionSwitch.x)) > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))))) && true)), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))))) && true))))) || false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), true && ((false))), false, true))), true, false))), true, true, _GLF_IDENTITY(false, bool(bool(false)))))))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false)))))))), true && (! (bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false))))))))))))), true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))), false, true))), ! (! (_GLF_IDENTITY(! (bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), true && (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))))), true && (_GLF_IDENTITY(! (bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_IDENTITY(true, bool(bvec2(true, false))))))))), (injectionSwitch.x < injectionSwitch.y)), false, true))), ! (! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), true && (! (bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true))))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (true) || false), false), true)))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), true))), true))))), true && (bool(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec4(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(float((injectionSwitch)[0])), mix(float(_GLF_FUZZED(-5.9)), float(float(float((injectionSwitch)[0]))), bool(true)))), _GLF_FUZZED(-9.5)), vec2(_GLF_FUZZED(6184.3588), (injectionSwitch)[1]), bvec2(false, true))).y), true, _GLF_IDENTITY(false, (false) || false)), true))))))))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1.1) : injectionSwitch.y))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, abs(1.0), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0), (mat3x4(injectionSwitch.x, abs(1.0), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)) * mat3(1.0)))) > injectionSwitch.y))))), bool(bool(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, abs(1.0), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0), (mat3x4(injectionSwitch.x, abs(1.0), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)) * mat3(1.0)))) > injectionSwitch.y)))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (true) || false), false), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (true) || false), false), true))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (true) || false), false), true))), true))))))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, false || (true)))), false), true))), true))))), true && (bool(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec4(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(float((injectionSwitch)[0])), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-5.9)), float(float(float((injectionSwitch)[0]))), bool(true)), max(mix(float(_GLF_FUZZED(-5.9)), float(float(float((injectionSwitch)[0]))), bool(true)), mix(float(_GLF_FUZZED(-5.9)), float(float(float((injectionSwitch)[0]))), bool(true)))))), _GLF_FUZZED(_GLF_IDENTITY(-9.5, max(-9.5, -9.5)))), vec2(_GLF_FUZZED(6184.3588), (injectionSwitch)[1]), bvec2(false, true))).y), _GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(false, (false) || false)), true))))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, true && (true)))) ? _GLF_IDENTITY(subgroup_id, (0u << _GLF_IDENTITY(uint(3u), uint(3u))) ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), uint(uvec3((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), 1u, 0u)))) : _GLF_FUZZED(workgroup_base))) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), uint(_GLF_IDENTITY(uvec2(subgroup_size, 1u), _GLF_IDENTITY(uvec2(uvec4(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) | 0u), 1u), ~ (~ (uvec2(subgroup_size, 1u)))), 1u, _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, (1u) + 0u))))), max(uvec2(uvec4(_GLF_IDENTITY(uvec2(subgroup_size, 1u), ~ (~ (uvec2(subgroup_size, 1u)))), 1u, 1u)), uvec2(uvec4(_GLF_IDENTITY(uvec2(subgroup_size, 1u), ~ (~ (uvec2(subgroup_size, 1u)))), 1u, 1u))))))), subgroup_size, subgroup_size)))), (_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (0u << _GLF_IDENTITY(uint(3u), uint(3u))) ^ (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))) : _GLF_FUZZED(workgroup_base))) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), subgroup_size, subgroup_size))))) / 1u);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(true, true, true))))), true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), false || (bool(bvec3(_GLF_DEAD(false), true, true)))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), false || (bool(bvec3(_GLF_DEAD(false), true, true))))))))), (! (! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), false || (bool(bvec3(_GLF_DEAD(false), true, true))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), false || (bool(bvec3(_GLF_DEAD(false), true, true))))), ((_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), false || (bool(bvec3(_GLF_DEAD(false), true, true)))))) && true)))))))) || false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true) && (false)), bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false))))), _GLF_IDENTITY(false, (false) && true) || (! (! (_GLF_IDENTITY(false, true && (false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), true, false)))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), true, false)))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! ((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED((smoothstep(0.1, -88.12, -6.1))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, sqrt(0.0), 1.0, 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(injectionSwitch, 0.0, sqrt(0.0), 1.0, 0.0)))), (vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, sqrt(0.0), 1.0, 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(injectionSwitch, 0.0, sqrt(0.0), 1.0, 0.0))))) * mat2(1.0))).y))))
    return;
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(! (! (bool(bvec4(false, false, false, true)))), _GLF_IDENTITY(bool(bvec2(! (! (bool(bvec4(false, false, false, true)))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(! (! (bool(bvec4(false, false, false, true)))), true)), true, true, false)), (bool(bvec4(bool(bvec2(! (! (bool(bvec4(false, false, false, true)))), true)), true, true, false))) && true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (0u & 65439u) | (workgroup_base + subgroup_base + subgroup_local_id));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), false, false, false)))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.1)), bvec2(true, false))), injectionSwitch)).x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_id) : subgroup_base)) + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, 0u | (0u))))) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u)))) >> 0u))) | (subgroup_local_id)) + 1, 0u | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0u, 0u | (0u)))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0u, 0u | (0u)))), uint(_GLF_IDENTITY(uvec4(~ (~ (_GLF_IDENTITY(0u, 0u | (0u)))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec4(~ (~ (_GLF_IDENTITY(0u, 0u | (0u)))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec4(~ (~ (_GLF_IDENTITY(0u, 0u | (0u)))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) >> 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0u, 0u | (0u)))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0u, 0u | (0u)))), uint(_GLF_IDENTITY(uvec4(~ (~ (_GLF_IDENTITY(0u, 0u | (0u)))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec4(~ (~ (_GLF_IDENTITY(0u, 0u | (0u)))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec4(~ (~ (_GLF_IDENTITY(0u, 0u | (0u)))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) >> 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0u, 0u | (0u)))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0u, 0u | (0u)))), uint(_GLF_IDENTITY(uvec4(~ (~ (_GLF_IDENTITY(0u, 0u | (0u)))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec4(~ (~ (_GLF_IDENTITY(0u, 0u | (0u)))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec4(~ (~ (_GLF_IDENTITY(0u, 0u | (0u)))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) >> 0u)))) << _GLF_IDENTITY(uint(2u), uint(2u))) | (subgroup_local_id)) + 1))) % subgroup_size), min(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u | _GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size))))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u)), 1u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), (uvec3(subgroup_local_id, 1u, 1u)) / uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) >> 0u), 1u, 1u))), clamp(false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), (uvec3(subgroup_local_id, 1u, 1u)) / uvec3(1u, 1u, 1u))), false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (1u))) * 1u)), (uvec3(subgroup_local_id, 1u, 1u)) / uvec3(1u, 1u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), (uvec3(subgroup_local_id, 1u, 1u)) / uvec3(1u, 1u, 1u))), 0u + (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), (uvec3(subgroup_local_id, 1u, 1u)) / uvec3(1u, 1u, 1u))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), (uvec3(subgroup_local_id, 1u, 1u)) / uvec3(1u, 1u, 1u))), 0u + (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), (uvec3(subgroup_local_id, 1u, 1u)) / uvec3(1u, 1u, 1u)))))) | (0u | 0u))))))) + _GLF_IDENTITY(1, _GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) - 0)), (int(8)) ^ 0), (true ? _GLF_IDENTITY(int(8), (int(8)) ^ 0) : _GLF_FUZZED(-78796))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) - 0)), (int(8)) ^ 0), (true ? _GLF_IDENTITY(int(8), (int(8)) ^ 0) : _GLF_FUZZED(-78796))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) - 0)), (int(8)) ^ 0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(8), (true ? int(8) : _GLF_FUZZED(-98692))), (int(8)) ^ 0) : _GLF_FUZZED(-78796))))))))))) | (1), ((_GLF_IDENTITY(0, (0) | (0)) << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(_GLF_IDENTITY(8, (8) >> 0)))) | 0) ^ 0))) | (1)) ^ 0))) % subgroup_size), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, 1u, 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), 1u, 1u), (uvec3(subgroup_local_id, 1u, _GLF_IDENTITY(1u, (1u) / 1u))) / uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), 1u, 1u), (uvec3(subgroup_local_id, 1u, _GLF_IDENTITY(1u, (1u) / 1u))) / uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(num_workgroup) : false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), 1u, 1u), (uvec3(subgroup_local_id, 1u, _GLF_IDENTITY(1u, (1u) / 1u))) / uvec3(1u, 1u, 1u)))))) | (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), 1u, 1u), (uvec3(subgroup_local_id, 1u, _GLF_IDENTITY(1u, (1u) / 1u))) / uvec3(1u, 1u, 1u))))), clamp(false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), (uvec3(subgroup_local_id, 1u, 1u)) / uvec3(1u, 1u, 1u))), false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), (uvec3(subgroup_local_id, 1u, 1u)) / uvec3(1u, 1u, 1u))), _GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), (uvec3(subgroup_local_id, 1u, 1u)) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(uvec3(uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec3(29722u, 113020u, 113924u)) : uvec3(uvec3(uvec3(1u, 1u, 1u)))))))), 0u + (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), (uvec3(subgroup_local_id, 1u, 1u)) / uvec3(1u, 1u, 1u)))))))))) + _GLF_IDENTITY(1, _GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) - 0)), (int(_GLF_IDENTITY(8, (8) / 1))) ^ 0), (_GLF_IDENTITY(true ? _GLF_IDENTITY(int(8), (int(8)) ^ 0) : _GLF_FUZZED(-78796), (true ? _GLF_IDENTITY(true ? _GLF_IDENTITY(int(8), (int(8)) ^ 0) : _GLF_FUZZED(-78796), (_GLF_IDENTITY(true ? _GLF_IDENTITY(int(8), (int(8)) ^ 0) : _GLF_FUZZED(-78796), int(int(true ? _GLF_IDENTITY(int(8), (int(8)) ^ 0) : _GLF_FUZZED(-78796))))) | (true ? _GLF_IDENTITY(int(8), (int(8)) ^ 0) : _GLF_FUZZED(-78796))) : _GLF_FUZZED(int(length(17.24))))))))) | (1), ((_GLF_IDENTITY(0, 0 ^ (0)) << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(bitfieldReverse(35888)) : 0))) ^ 0))) | (1)) ^ 0))) % subgroup_size)), ((((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, 1u, 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), 1u, 1u), (uvec3(subgroup_local_id, 1u, _GLF_IDENTITY(1u, (1u) / 1u))) / uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), 1u, 1u), (uvec3(subgroup_local_id, 1u, _GLF_IDENTITY(1u, (1u) / 1u))) / uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(num_workgroup) : false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), 1u, 1u), (uvec3(subgroup_local_id, 1u, _GLF_IDENTITY(1u, (1u) / 1u))) / uvec3(1u, 1u, 1u)))))) | (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), 1u, 1u), (uvec3(subgroup_local_id, 1u, _GLF_IDENTITY(1u, (1u) / 1u))) / uvec3(1u, 1u, 1u))))), clamp(false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), (uvec3(subgroup_local_id, 1u, 1u)) / uvec3(1u, 1u, 1u))), false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), (uvec3(subgroup_local_id, 1u, 1u)) / uvec3(1u, 1u, 1u))), _GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), (uvec3(subgroup_local_id, 1u, 1u)) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(uvec3(uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec3(29722u, 113020u, 113924u)) : uvec3(uvec3(uvec3(1u, 1u, 1u)))))))), 0u + (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), (uvec3(subgroup_local_id, 1u, 1u)) / uvec3(1u, 1u, 1u)))))))))) + _GLF_IDENTITY(1, _GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) - 0)), (int(_GLF_IDENTITY(8, (8) / 1))) ^ 0), (_GLF_IDENTITY(true ? _GLF_IDENTITY(int(8), (int(8)) ^ 0) : _GLF_FUZZED(-78796), (true ? _GLF_IDENTITY(true ? _GLF_IDENTITY(int(8), (int(8)) ^ 0) : _GLF_FUZZED(-78796), (_GLF_IDENTITY(true ? _GLF_IDENTITY(int(8), (int(8)) ^ 0) : _GLF_FUZZED(-78796), int(int(true ? _GLF_IDENTITY(int(8), (int(8)) ^ 0) : _GLF_FUZZED(-78796))))) | (true ? _GLF_IDENTITY(int(8), (int(8)) ^ 0) : _GLF_FUZZED(-78796))) : _GLF_FUZZED(int(length(17.24))))))))) | (1), ((_GLF_IDENTITY(0, 0 ^ (0)) << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(bitfieldReverse(35888)) : 0))) ^ 0))) | (1)) ^ 0))) % subgroup_size))) / 1u) | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, 1u, 1u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), (uvec3(subgroup_local_id, 1u, 1u)) / uvec3(1u, 1u, 1u))), clamp(false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), (uvec3(subgroup_local_id, 1u, 1u)) / uvec3(1u, 1u, 1u))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), uvec3(uvec3(uvec3(subgroup_local_id, 1u, 1u)))), (uvec3(subgroup_local_id, 1u, 1u)) / uvec3(1u, 1u, 1u))), _GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) ^ 0u) : uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), _GLF_IDENTITY((uvec3(subgroup_local_id, 1u, 1u)) / uvec3(1u, 1u, 1u), max((uvec3(subgroup_local_id, 1u, 1u)) / uvec3(1u, 1u, 1u), (uvec3(subgroup_local_id, 1u, 1u)) / uvec3(1u, 1u, 1u))))), 0u + (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), (uvec3(subgroup_local_id, 1u, 1u)) / uvec3(1u, 1u, 1u)))))))))) + _GLF_IDENTITY(1, _GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) - 0)), (int(8)) ^ 0), (true ? _GLF_IDENTITY(int(8), (int(8)) ^ 0) : _GLF_FUZZED(_GLF_IDENTITY(-78796, (-78796) + 0)))))) | (1), (_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 | (0))))) << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) | 0) ^ 0))), ~ (~ ((_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 | (0))))) << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) | 0) ^ 0)))))) | (1)) ^ 0))) % subgroup_size), 1u * (((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, 1u, 1u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), (uvec3(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) - 0u), 1u, 1u)) / uvec3(_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) | 0u), 1u))), 1u, 1u))), clamp(false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), (uvec3(subgroup_local_id, 1u, 1u)) / uvec3(1u, 1u, 1u))), false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), (uvec3(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(subgroup_local_id), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) * (uint(subgroup_local_id))))), 1u, 1u)) / uvec3(1u, 1u, 1u))), _GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), (uvec3(subgroup_local_id, 1u, 1u)) / uvec3(1u, 1u, 1u))), 0u + (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), (uvec3(subgroup_local_id, 1u, 1u)) / uvec3(1u, 1u, 1u)))))))))) + _GLF_IDENTITY(1, _GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) - 0)), (int(8)) ^ 0), (true ? _GLF_IDENTITY(int(8), (int(8)) ^ 0) : _GLF_FUZZED(-78796))))) | (1), ((0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) | 0) ^ 0))) | (1)) ^ 0))) % subgroup_size)))))));
 uint read = 0;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (~ (64)) >> 0))), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY((subgroup_local_id % 2) == 0, ! (! ((subgroup_local_id % 2) == 0))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).x < injectionSwitch.y))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      return;
    }
   read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], min(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) >> 0u, (_GLF_IDENTITY((virtual_gid) >> 0u, ~ (~ ((virtual_gid) >> 0u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))], _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(0u | (buf[virtual_gid]), (0u | (buf[virtual_gid])) | _GLF_IDENTITY(0u, 1u * (0u))))) | (buf[virtual_gid])))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, (1u) >> 0u))), 0u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (0u)))))), 1u * (uint(_GLF_IDENTITY(0u, (0u) - 0u)))), uint(0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (0u)))))), 1u * (uint(_GLF_IDENTITY(0u, (0u) - 0u)))), uint(0u))))))), 1u * (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(62111u) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), (1u & 1u) * _GLF_IDENTITY((virtual_gid), ((virtual_gid)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ~ (~ (virtual_gid)))], max(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(62111u) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), (1u & 1u) * _GLF_IDENTITY((virtual_gid), ((virtual_gid)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ~ (~ (virtual_gid)))], buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(62111u) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), (1u & 1u) * _GLF_IDENTITY((virtual_gid), ((virtual_gid)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ~ (~ (virtual_gid)))])), min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], uint(uvec2(buf[virtual_gid], _GLF_IDENTITY(1u, (0u | 0u) ^ (1u))))))), 1u, 0u, (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), uint(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), ((0u | 0u) & 50275u), 1u))))) << _GLF_IDENTITY(uint(0u), uint(0u))))), uint(uvec4(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(62111u) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), (1u & 1u) * _GLF_IDENTITY((virtual_gid), ((virtual_gid)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ~ (~ (virtual_gid)))], max(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(62111u) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), (1u & 1u) * _GLF_IDENTITY((virtual_gid), ((virtual_gid)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ~ (~ (virtual_gid)))], buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(62111u) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), (1u & 1u) * _GLF_IDENTITY((virtual_gid), ((virtual_gid)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ~ (~ (virtual_gid)))])), min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], uint(uvec2(buf[virtual_gid], _GLF_IDENTITY(1u, (0u | 0u) ^ (1u))))))), 1u, 0u, (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), uint(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), ((0u | 0u) & 50275u), 1u))))) << _GLF_IDENTITY(uint(0u), uint(0u))))), 0u, 0u, 0u))))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], min(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)], _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], 0u | (buf[virtual_gid]))) | (buf[virtual_gid])))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, (1u) >> 0u))), 0u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (0u))))), min(_GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (0u))))), _GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (0u)))))))), 1u * (uint(_GLF_IDENTITY(0u, (0u) - 0u)))), uint(0u)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), clamp(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (0u)))))), 1u * (uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u, 1u), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u, 1u)), clamp(~ (uvec4(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u, 1u)), ~ (uvec4(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u, 1u)), ~ (uvec4(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u, 1u))))))))))), uint(0u))))))), 1u * (uint(uvec4(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(virtual_gid) : virtual_gid)), (false ? _GLF_FUZZED(62111u) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), _GLF_IDENTITY((1u & 1u), ((1u & 1u)) << 0u) * (virtual_gid)))), ~ (~ (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)))))], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], uint(uvec2(buf[virtual_gid], _GLF_IDENTITY(1u, (0u | 0u) ^ (1u))))))), 1u, 0u, (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), uint(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), ((0u | 0u) & 50275u), 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), uint(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), ((0u | 0u) & 50275u), 1u)))) << 0u))) << _GLF_IDENTITY(uint(0u), uint(0u))))))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], min(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), (_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)) >> 0u)], _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], 0u | _GLF_IDENTITY((buf[virtual_gid]), ~ (~ (_GLF_IDENTITY((buf[virtual_gid]), max((buf[virtual_gid]), (buf[virtual_gid])))))))) | (buf[virtual_gid])))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, (1u) >> 0u))), 0u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (true ? uint(7u) : _GLF_FUZZED(179692u))))) ^ ((0u))) - _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (0u)))))), 1u * (uint(_GLF_IDENTITY(0u, (0u) - 0u)))), uint(_GLF_IDENTITY(0u, (0u) - 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (0u)))))), 1u * (uint(_GLF_IDENTITY(0u, (0u) - 0u)))), uint(0u))))))), 1u * (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(62111u) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), (1u & 1u) * (virtual_gid)))), ~ (~ (virtual_gid)))], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], uint(uvec2(buf[virtual_gid], _GLF_IDENTITY(1u, (0u | 0u) ^ (1u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(62111u) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), (1u & 1u) * (virtual_gid)))), ~ (~ (virtual_gid)))], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], uint(uvec2(buf[virtual_gid], _GLF_IDENTITY(1u, (0u | 0u) ^ (1u))))))), (_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(62111u) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), (1u & 1u) * (virtual_gid)))), ~ (~ (virtual_gid)))], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], uint(uvec2(buf[virtual_gid], _GLF_IDENTITY(1u, (0u | 0u) ^ (1u)))))))) << 0u)) - 0u), 1u, 0u, (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), uint(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), ((0u | _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) >> 0u), 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u)))) & 50275u), 1u))))) << _GLF_IDENTITY(uint(0u), uint(0u))))))))), 1u, 0u)))), (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], min(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)], _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], 0u | (buf[virtual_gid]))) | (buf[virtual_gid])))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (~ (1u)) : _GLF_FUZZED(uvec2(142607u, 40859u)[1])))), _GLF_IDENTITY(1u, (1u) >> 0u))), 0u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (0u)))))), 1u * (uint(_GLF_IDENTITY(0u, (0u) - 0u)))), uint(0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (0u)))))), 1u * (uint(_GLF_IDENTITY(0u, (0u) - 0u)))), uint(0u))))))), 1u * (uint(uvec4(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(62111u) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), (1u & 1u) * (virtual_gid)))), ~ (~ (virtual_gid)))], _GLF_IDENTITY(min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], uint(uvec2(buf[virtual_gid], _GLF_IDENTITY(1u, (0u | 0u) ^ (1u)))))), (min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], uint(uvec2(buf[virtual_gid], _GLF_IDENTITY(1u, (0u | 0u) ^ (1u))))))) * 1u)), 1u, 0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), uint(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), ((0u | 0u) & 50275u), 1u))))) << _GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), uint(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), ((0u | 0u) & 50275u), 1u))))) << _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), uint(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), ((0u | 0u) & 50275u), 1u))))) << _GLF_IDENTITY(uint(0u), uint(0u))))))))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], min(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(workgroup_id)))) >> 0u)], _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], 0u | (buf[virtual_gid]))) | (buf[virtual_gid])))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, (1u) >> 0u))), 0u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (0u)))))), 1u * (uint(_GLF_IDENTITY(0u, (0u) - 0u)))), uint(0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (0u)))))), 1u * (uint(_GLF_IDENTITY(0u, (0u) - 0u)))), uint(0u))))))), 1u * (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(62111u) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), (_GLF_IDENTITY(1u & 1u, (1u & 1u) | (1u & 1u))) * (virtual_gid)))), ~ (~ (virtual_gid)))], min(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(62111u) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), (_GLF_IDENTITY(1u & 1u, (1u & 1u) | (1u & 1u))) * (virtual_gid)))), ~ (~ (virtual_gid)))], buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(62111u) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), (_GLF_IDENTITY(1u & 1u, (1u & 1u) | (1u & 1u))) * (virtual_gid)))), ~ (~ (virtual_gid)))])), min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], uint(uvec2(buf[virtual_gid], _GLF_IDENTITY(1u, (0u | 0u) ^ (1u))))))), 1u, 0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), uint(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), ((0u | 0u) & 50275u), 1u)))), uint(uint(_GLF_IDENTITY(1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), uint(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), ((0u | 0u) & 50275u), 1u)))), (_GLF_IDENTITY(1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), uint(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), ((0u | 0u) & 50275u), 1u)))), (1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), uint(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), ((0u | 0u) & 50275u), 1u))))) | 0u)) * 1u))))) << _GLF_IDENTITY(uint(0u), uint(0u))))))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], min(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)], _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], buf[virtual_gid])), 0u | (buf[virtual_gid]))) | (buf[virtual_gid])))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | (_GLF_IDENTITY(~ (1u), clamp(~ (1u), ~ (1u), ~ (1u))))))), _GLF_IDENTITY(1u, (1u) >> 0u))), 0u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (0u)))))), _GLF_IDENTITY(1u * (uint(_GLF_IDENTITY(0u, (0u) - 0u))), (1u * (uint(_GLF_IDENTITY(0u, (0u) - 0u)))) | (1u * (uint(_GLF_IDENTITY(0u, (0u) - 0u)))))), uint(0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (0u)))))), 1u * (uint(_GLF_IDENTITY(0u, (0u) - 0u)))), uint(0u))))))), 1u * (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(62111u) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), (1u & 1u) * (virtual_gid)))), ~ (~ (virtual_gid)))], min(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), _GLF_IDENTITY(buf[virtual_gid], uint(uvec2(buf[virtual_gid], _GLF_IDENTITY(1u, (0u | 0u) ^ (1u))))))), 1u, 0u, (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), uint(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), ((0u | 0u) & 50275u), 1u))))) << _GLF_IDENTITY(uint(0u), uint(0u))))), clamp(uint(uvec4(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(62111u) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), (1u & 1u) * (virtual_gid)))), ~ (~ (virtual_gid)))], min(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), _GLF_IDENTITY(buf[virtual_gid], uint(uvec2(buf[virtual_gid], _GLF_IDENTITY(1u, (0u | 0u) ^ (1u))))))), 1u, 0u, (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), uint(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), ((0u | 0u) & 50275u), 1u))))) << _GLF_IDENTITY(uint(0u), uint(0u))))), uint(uvec4(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(62111u) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), (1u & 1u) * (virtual_gid)))), ~ (~ (virtual_gid)))], min(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), _GLF_IDENTITY(buf[virtual_gid], uint(uvec2(buf[virtual_gid], _GLF_IDENTITY(1u, (0u | 0u) ^ (1u))))))), 1u, 0u, (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), uint(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), ((0u | 0u) & 50275u), 1u))))) << _GLF_IDENTITY(uint(0u), uint(0u))))), uint(uvec4(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(62111u) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), (1u & 1u) * (virtual_gid)))), ~ (~ (virtual_gid)))], min(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), _GLF_IDENTITY(buf[virtual_gid], uint(uvec2(buf[virtual_gid], _GLF_IDENTITY(1u, (0u | 0u) ^ (1u))))))), 1u, 0u, (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), uint(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), ((0u | 0u) & 50275u), 1u))))) << _GLF_IDENTITY(uint(0u), uint(0u))))))))))), 1u, 0u))))) | 0u), 4, 64, _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-18365)))) - 0));
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), ! (! (true && (_GLF_DEAD(false)))))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! (true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(false))))))))))) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-9.5)), bool(false)))))))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), (false || (false)) && true), true && (_GLF_IDENTITY(false || (false), _GLF_IDENTITY((false || (false)) && true, ! (! ((false || (false)) && true))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
