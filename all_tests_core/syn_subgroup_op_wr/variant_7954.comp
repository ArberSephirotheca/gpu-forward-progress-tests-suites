#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, min(0, 0)), (_injected_loop_counter > 0) && _GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, _GLF_IDENTITY((_injected_loop_counter > 0) && _GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((_injected_loop_counter > 0) && _GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec2(bool(bvec3(false, true, false)), false)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec2(bool(bvec3(false, true, false)), false))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec2(bool(bvec3(false, true, false)), false)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec2(bool(bvec3(false, true, false)), false))))))), true, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec2(bool(bvec3(false, true, false)), false)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec2(bool(bvec3(false, true, false)), false))))))), true, true, false))))))))
    continue;
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))));
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(false, true && (false))) || false)))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true && (false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true && (false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec3(true && (false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true && (false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))), ! (! (bool(bool(_GLF_IDENTITY(bvec3(true && (false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true && (false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))))))))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, false)), true && (bool(bvec4(_GLF_DEAD(false), true, false, false))))), false, false, true))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || false)))
          {
           if(_GLF_DEAD(false))
            return;
           do
            {
             if(_GLF_DEAD(false))
              continue;
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), false)))))));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               return;
              }
            }
           for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, (0) | (0)) << _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) / 1))), (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) / 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) / _GLF_IDENTITY(1, clamp(1, 1, 1)))))))) || false); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                      {
                      }
                     else
                      {
                       return;
                      }
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
            }
          }
         else
          {
          }
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) | 0)), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(0 | (_GLF_IDENTITY(int(5), int(5))), _GLF_IDENTITY((false ? _GLF_FUZZED(-24759) : 0 | (_GLF_IDENTITY(int(5), int(5)))), ((false ? _GLF_FUZZED(-24759) : 0 | (_GLF_IDENTITY(int(5), int(5))))) + 0))), _GLF_IDENTITY(int(5), int(5))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(27378))) != ((0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (int(0))))) << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, max(2, 2))))))))); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1))) != _GLF_IDENTITY(((0 & _GLF_IDENTITY(42519, 0 ^ (42519))) ^ 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(0, ~ (~ (0))) & 42519) ^ 0), (((0 & _GLF_IDENTITY(42519, 0 + (42519))) ^ _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))))))) | 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(0, ~ (~ (0))) & 42519) ^ 0), (((0 & 42519) ^ 0)) | 0), _GLF_IDENTITY((_GLF_IDENTITY(((_GLF_IDENTITY(0, ~ (~ (0))) & 42519) ^ 0), (((0 & 42519) ^ 0)) | 0)) | (_GLF_IDENTITY(((_GLF_IDENTITY(0, ~ (~ (0))) & 42519) ^ 0), _GLF_IDENTITY((((0 & 42519) ^ 0)) | 0, ((((0 & 42519) ^ 0)) | 0) ^ 0))), (_GLF_IDENTITY((_GLF_IDENTITY(((_GLF_IDENTITY(0, ~ (~ (0))) & 42519) ^ 0), _GLF_IDENTITY((((0 & 42519) ^ 0)), int(int(_GLF_IDENTITY((((0 & 42519) ^ 0)), ((((0 & 42519) ^ 0))) + 0)))) | 0)) | (_GLF_IDENTITY(((_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 ^ (0))))) & 42519) ^ 0), _GLF_IDENTITY((((_GLF_IDENTITY(0 & 42519, ~ (~ (0 & 42519)))) ^ 0)) | 0, ((((0 & 42519) ^ 0)) | 0) ^ 0))), max((_GLF_IDENTITY(((_GLF_IDENTITY(0, ~ (~ (0))) & 42519) ^ 0), (((0 & 42519) ^ 0)) | 0)) | (_GLF_IDENTITY(((_GLF_IDENTITY(0, ~ (~ (0))) & _GLF_IDENTITY(42519, int(ivec4(42519, 0, 0, 0)))) ^ 0), _GLF_IDENTITY((((0 & 42519) ^ 0)) | 0, ((((0 & 42519) ^ 0)) | 0) ^ 0))), (_GLF_IDENTITY(((_GLF_IDENTITY(0, ~ (~ (0))) & 42519) ^ 0), (((0 & 42519) ^ 0)) | 0)) | (_GLF_IDENTITY(((_GLF_IDENTITY(0, ~ (~ (0))) & 42519) ^ 0), _GLF_IDENTITY((((0 & 42519) ^ 0)) | 0, ((((0 & 42519) ^ 0)) | 0) ^ 0)))))) | ((_GLF_IDENTITY(((_GLF_IDENTITY(0, ~ (~ (0))) & 42519) ^ 0), (((0 & 42519) ^ 0)) | 0)) | (_GLF_IDENTITY(((_GLF_IDENTITY(0, ~ (~ (0))) & 42519) ^ 0), _GLF_IDENTITY((((0 & 42519) ^ 0)) | 0, ((((0 & 42519) ^ 0)) | 0) ^ 0)))))), _GLF_IDENTITY(((_GLF_IDENTITY(0, ~ (~ (0))) & 42519) ^ 0), (((_GLF_IDENTITY(0 & 42519, int(ivec4(0 & 42519, 0, 0, 1)))) ^ 0)) | 0), _GLF_IDENTITY(((_GLF_IDENTITY(0, ~ (~ (0))) & _GLF_IDENTITY(42519, (true ? 42519 : _GLF_FUZZED(_injected_loop_counter)))) ^ 0), (((0 & _GLF_IDENTITY(_GLF_IDENTITY(42519, (42519) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(42519, (42519) ^ 0), ~ (~ (_GLF_IDENTITY(42519, (42519) ^ 0))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0)) | 0))))))); _injected_loop_counter --)
      {
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((0 | 1), ((0 | 1)) - 0)); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) && true) || false), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) || false), false))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) || false), false))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false), false))))), _GLF_IDENTITY(true, ! (! (true)))))))), true, true))), true))))), false, true, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))), injectionSwitch)).x : _GLF_FUZZED(_GLF_IDENTITY(abs(7693.3969), float(mat2x4(abs(7693.3969), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), clamp(true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))), injectionSwitch)).x : _GLF_FUZZED(_GLF_IDENTITY(abs(7693.3969), float(mat2x4(abs(7693.3969), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), _GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))), injectionSwitch)).x : _GLF_FUZZED(_GLF_IDENTITY(abs(7693.3969), float(mat2x4(abs(7693.3969), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), mix(float(true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))), injectionSwitch)).x : _GLF_FUZZED(_GLF_IDENTITY(abs(7693.3969), float(mat2x4(abs(7693.3969), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), float(_GLF_FUZZED(-326.994)), bool(false))), _GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))), injectionSwitch)).x : _GLF_FUZZED(_GLF_IDENTITY(abs(7693.3969), float(mat2x4(abs(7693.3969), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), mix(float(true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))), injectionSwitch)).x : _GLF_FUZZED(_GLF_IDENTITY(abs(7693.3969), float(mat2x4(abs(7693.3969), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), float(_GLF_FUZZED(9268.3362)), bool(false))))))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
        return;
      }
     else
      {
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-0.2) : injectionSwitch.y, (false ? _GLF_FUZZED(-0.2) : injectionSwitch.y) / 1.0))), injectionSwitch.y)), injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))))), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, false, false))))))))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec2(_injected_loop_counter != 1, false)))); _injected_loop_counter ++)
        {
         return;
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_injected_loop_counter)))), _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY((int(_GLF_IDENTITY(4, 1 * (4)))), max((int(4)), (int(4)))) - 0, (_GLF_IDENTITY((int(_GLF_IDENTITY(4, 1 * (4)))), max((int(4)), (int(4)))) - 0) >> 0))))); _injected_loop_counter ++)
      {
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))), uvec3(uvec3(gl_WorkGroupID))), _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u)))).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true))))), true && (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(102.349, 508.240)) : injectionSwitch)).x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(5.8, (5.8) / 1.0))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), injectionSwitch.x)))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) ^ 0u)), min((_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), _GLF_IDENTITY(min(uint(subgroup_id), uint(subgroup_id)), max(_GLF_IDENTITY(min(uint(subgroup_id), uint(subgroup_id)), min(min(uint(subgroup_id), uint(subgroup_id)), _GLF_IDENTITY(min(uint(subgroup_id), uint(subgroup_id)), (min(uint(subgroup_id), uint(subgroup_id))) - 0u))), min(uint(subgroup_id), uint(subgroup_id))))))) * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), clamp(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) >> 0u), (subgroup_id * subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) >> 0u))) | (subgroup_id)) * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))))))))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) | _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), min((subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size), ((subgroup_id * subgroup_size)) >> 0u), (subgroup_id * subgroup_size), (subgroup_id * subgroup_size))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_id * subgroup_size), min((subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size), ((subgroup_id * subgroup_size)) >> 0u), (subgroup_id * subgroup_size), (subgroup_id * subgroup_size))))), 0u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_id * subgroup_size), min((subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size), ((subgroup_id * subgroup_size)) >> 0u), (subgroup_id * subgroup_size), (subgroup_id * subgroup_size))))), 0u), clamp(uvec2(_GLF_IDENTITY((subgroup_id * subgroup_size), min((subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size), ((subgroup_id * subgroup_size)) >> 0u), (subgroup_id * subgroup_size), (subgroup_id * subgroup_size))))), 0u), uvec2(_GLF_IDENTITY((subgroup_id * subgroup_size), min((subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size), ((subgroup_id * subgroup_size)) >> 0u), (subgroup_id * subgroup_size), (subgroup_id * subgroup_size))))), 0u), uvec2(_GLF_IDENTITY((subgroup_id * subgroup_size), min((subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size), ((subgroup_id * subgroup_size)) >> 0u), (subgroup_id * subgroup_size), (subgroup_id * subgroup_size))))), 0u)))) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_id * subgroup_size), min((subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size), ((subgroup_id * subgroup_size)) >> 0u), (subgroup_id * subgroup_size), (subgroup_id * subgroup_size))))), 0u), max(uvec2(_GLF_IDENTITY((subgroup_id * subgroup_size), min((subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size), ((subgroup_id * subgroup_size)) >> 0u), (subgroup_id * subgroup_size), (subgroup_id * subgroup_size))))), 0u), uvec2(_GLF_IDENTITY((subgroup_id * subgroup_size), min((subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size), ((subgroup_id * subgroup_size)) >> 0u), (subgroup_id * subgroup_size), (subgroup_id * subgroup_size))))), 0u))))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_id * subgroup_size), min((subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size), ((subgroup_id * subgroup_size)) >> 0u), (subgroup_id * subgroup_size), (subgroup_id * subgroup_size))))), 0u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_id * subgroup_size), min((subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size), ((subgroup_id * subgroup_size)) >> 0u), (subgroup_id * subgroup_size), (subgroup_id * subgroup_size))))), 0u), clamp(uvec2(_GLF_IDENTITY((subgroup_id * subgroup_size), min((subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size), ((subgroup_id * subgroup_size)) >> 0u), (subgroup_id * subgroup_size), (subgroup_id * subgroup_size))))), 0u), uvec2(_GLF_IDENTITY((subgroup_id * subgroup_size), min((subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size), ((subgroup_id * subgroup_size)) >> 0u), (subgroup_id * subgroup_size), (subgroup_id * subgroup_size))))), 0u), uvec2(_GLF_IDENTITY((subgroup_id * subgroup_size), min((subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size), ((subgroup_id * subgroup_size)) >> 0u), (subgroup_id * subgroup_size), (subgroup_id * subgroup_size))))), 0u)))) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_id * subgroup_size), min((subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size), ((subgroup_id * subgroup_size)) >> 0u), (subgroup_id * subgroup_size), (subgroup_id * subgroup_size))))), 0u), max(uvec2(_GLF_IDENTITY((subgroup_id * subgroup_size), min((subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size), ((subgroup_id * subgroup_size)) >> 0u), (subgroup_id * subgroup_size), (subgroup_id * subgroup_size))))), 0u), uvec2(_GLF_IDENTITY((subgroup_id * subgroup_size), min((subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size), ((subgroup_id * subgroup_size)) >> 0u), (subgroup_id * subgroup_size), (subgroup_id * subgroup_size))))), 0u)))))) ^ uvec2(0u, 0u)))), (_GLF_IDENTITY((subgroup_id * subgroup_size), min((subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size), ((subgroup_id * subgroup_size)) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) >> 0u)), _GLF_IDENTITY((subgroup_id * subgroup_size), clamp((subgroup_id * subgroup_size), (subgroup_id * subgroup_size), (subgroup_id * subgroup_size))), (subgroup_id * subgroup_size)))))) - 0u), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.9) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6475.1081), _GLF_FUZZED(-53.22)), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[1], mix(float(_GLF_FUZZED(-860.231)), float((injectionSwitch)[1]), bool(true)))), bvec2(true, true))).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), 0.0, length(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0)), (_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.9) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), 0.0, length(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0)), mix(float(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(-2.9) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (true ? false ? _GLF_FUZZED(-2.9) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(328.416))))), 0.0, length(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0))), float(_GLF_FUZZED(-5336.8082)), bool(false)))) / 1.0)))))) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size)) * 1u), min(_GLF_IDENTITY((subgroup_id * subgroup_size), min((subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((subgroup_id * subgroup_size)) / 1u))), _GLF_IDENTITY((subgroup_id * subgroup_size), clamp(_GLF_IDENTITY((subgroup_id * subgroup_size), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * subgroup_size)) >> 0u), (subgroup_id * subgroup_size), (_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 1u))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))))))) / 1u)) | 0u)), min(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))) + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size)) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size)))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(167.816) : injectionSwitch.x)), injectionSwitch.x)))) | (subgroup_id * subgroup_size)))) + subgroup_local_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_id * subgroup_size)), _GLF_IDENTITY(min(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(8630.6484)), bool(false))), injectionSwitch[1])).x)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-5.5), (_GLF_IDENTITY(_GLF_FUZZED(-5.5), float(vec4(_GLF_FUZZED(-5.5), 0.0, 1.0, 0.0)))) + 0.0)), bool(false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, -6.5)))).x))), (false ? _GLF_FUZZED(-2.4) : _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-5.5), (_GLF_IDENTITY(_GLF_FUZZED(-5.5), float(vec4(_GLF_FUZZED(-5.5), 0.0, 1.0, 0.0)))) + 0.0)), bool(false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, -6.5)))).x))), float(_GLF_IDENTITY(float(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-5.5), (_GLF_IDENTITY(_GLF_FUZZED(-5.5), float(vec4(_GLF_FUZZED(-5.5), 0.0, 1.0, 0.0)))) + 0.0)), bool(false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, -6.5)))).x)))), mix(float(_GLF_FUZZED(8.5)), float(float(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-5.5), (_GLF_IDENTITY(_GLF_FUZZED(-5.5), float(vec4(_GLF_FUZZED(-5.5), 0.0, 1.0, 0.0)))) + 0.0)), bool(false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, -6.5)))).x))))), bool(true)))))))))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))))))), _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + 0u))) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), (_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u | 1u))) + 0u)))), subgroup_id * subgroup_size)))), subgroup_id * subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))) + _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) / (0u | 1u))) + 0u)))), _GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) : _GLF_FUZZED(5224u))) * subgroup_size)))), subgroup_id * subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY((0u | 1u), ~ (~ ((0u | 1u)))))) + 0u)))), subgroup_id * subgroup_size)))), subgroup_id * subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)))))))) >> 0u)) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_local_id))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u | 1u))) + 0u)))), subgroup_id * subgroup_size)))), subgroup_id * subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size))))))))) - (0u | (0u | 0u)))) / 1u)), ~ (_GLF_IDENTITY(~ (min(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.5)), bool(false))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), false)))), false || (bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), false))))))) ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, _GLF_IDENTITY(-6.5, clamp(-6.5, _GLF_IDENTITY(-6.5, mix(float(_GLF_IDENTITY(-6.5, (-6.5) - 0.0)), float(_GLF_FUZZED(8.1)), bool(false))), _GLF_IDENTITY(-6.5, max(-6.5, -6.5)))))))).x)))))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY((0u), 0u + ((0u))) | (0u))) - 0u))), (uint(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) - 0u)))) - _GLF_IDENTITY(0u, ~ (~ (0u))))))))))))))), _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)))))))) + 0u))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u | 1u))), ((subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u | 1u)))) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) + 0u)))), subgroup_id * subgroup_size)))), subgroup_id * subgroup_size)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(subgroup_id * subgroup_size))), min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size))))))) - (0u | (_GLF_IDENTITY(0u, (0u) + 0u) | 0u)))) / 1u))), min(_GLF_IDENTITY(~ (min(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, abs(0.0), _GLF_IDENTITY(dot(vec2(determinant(mat4(0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9.6)), bool(false))), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), vec2(0.0, _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(97.29))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), (true ? dot(vec2(0.0, 1.0), vec2(1.0, 0.0)) : _GLF_FUZZED(8387.2137)))), 0.0, 1.0, log(1.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, cos(0.0)), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, cos(0.0)), vec4(1.0, 1.0, 1.0, 0.0))), 1.0, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), (dot(vec2(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), vec2(0.0, 1.0))) * 1.0)))))[0], mix(float(_GLF_FUZZED(-4.0)), float(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, abs(0.0), _GLF_IDENTITY(dot(vec2(determinant(mat4(0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9.6)), bool(false))), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), vec2(0.0, _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(97.29))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), (true ? dot(vec2(0.0, 1.0), vec2(1.0, 0.0)) : _GLF_FUZZED(8387.2137)))), 0.0, 1.0, log(1.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, cos(0.0)), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, cos(0.0)), vec4(1.0, 1.0, 1.0, 0.0))), 1.0, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), (dot(vec2(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), vec2(0.0, 1.0))) * 1.0)))))[0]), bool(true))), injectionSwitch[_GLF_IDENTITY(1, (1) - 0)])).x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.5)), bool(false))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))) ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, -6.5)))).x)))))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | 0u), _GLF_IDENTITY(uint(0u), uint(0u))))) << 0u))))))))), _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, 0u))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(294.768)), bool(false))), round(length(normalize(1.0))))), float(mat3(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))).x), float(_GLF_FUZZED(294.768)), bool(false))), _GLF_IDENTITY(round(length(normalize(1.0))), (round(length(normalize(1.0)))) + 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 0u))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), (_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))) ^ 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))))))), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))))) * subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u | 1u))) + 0u)))), subgroup_id * subgroup_size)))), subgroup_id * subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u))) : _GLF_FUZZED(workgroup_size))) * subgroup_size))))))) - (0u | (0u | 0u)))) / 1u))), max(~ (min(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.5)), bool(false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, -6.5)))).x)))))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.5)), bool(false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, -6.5)))).x))))), ((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.5)), bool(false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, -6.5)))).x)))))) >> 0u)) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))))))) >> 0u)) / 1u)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(workgroup_id))), max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 0u))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) + 0u)) * subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_size)))) / 1u), _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u | 1u)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY((0u | 1u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY((0u | 1u), 0u | ((0u | 1u))))))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u | 1u))))) + 0u)))), subgroup_id * subgroup_size)))), _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u, ~ (~ (0u))) + (subgroup_id * subgroup_size))))))) - _GLF_IDENTITY((_GLF_IDENTITY(0u | (0u | 0u), (_GLF_IDENTITY(0u | (0u | 0u), clamp(0u | (0u | 0u), 0u | (0u | 0u), _GLF_IDENTITY(0u | (0u | 0u), 0u ^ (0u | (0u | 0u)))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec3((0u | (0u | 0u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))) / 1u))), ~ (min(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))[1] : _GLF_FUZZED(-38.66)))), float(_GLF_FUZZED(5.9)), bool(false))))).x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.5)), bool(false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, -6.5)))).x)))))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))))))), _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5096.0906)), bool(false))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0u), (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.5)), bool(false))), injectionSwitch.x))) + 0u))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), bool(bool(! (! (true))))))))) ? _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))) : _GLF_FUZZED(82101u)), ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), bool(bool(! (! (true))))))))) ? _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))) : _GLF_FUZZED(82101u))) + 0u)), min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) >> 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u | 1u))) + 0u)), min(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u | 1u))) + 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u | 1u))) + 0u)), (true ? ~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u | 1u))) + 0u)) : _GLF_FUZZED(num_workgroup))))))), subgroup_id * subgroup_size)))), subgroup_id * subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size))))))) - (0u | (0u | 0u)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u | 1u))) + 0u)))), _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u))))))), subgroup_id * subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size))))) << 0u)))) - (0u | (0u | 0u))), (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u | 1u))) + 0u)))), subgroup_id * subgroup_size)))), subgroup_id * subgroup_size), (clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * subgroup_size))))), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), 0u)) | 1u))) + 0u)))), subgroup_id * subgroup_size)))), subgroup_id * subgroup_size)) - 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size))))))) - (0u | (0u | 0u)))) ^ 0u))))) / 1u))))), ~ (min(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))) / 1u), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), 0.0, 0.0, sqrt(0.0), 1.0)), mix(float(_GLF_IDENTITY(float(mat4x2(0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), 0.0, 0.0, sqrt(0.0), 1.0)), (float(mat4x2(0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), 0.0, 0.0, sqrt(0.0), 1.0))) / 1.0)), float(_GLF_FUZZED((false ? -6579.7879 : 6258.4126))), bool(false)))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))))) | (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.5)), bool(false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, -6.5)))).x)))))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), uint(0u)))))))))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.5)), bool(false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, -6.5)))).x))), min(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.5)), bool(false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, -6.5)))).x))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.5)), bool(false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, -6.5)))).x)))))))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), clamp((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))))))))), 1u * (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))).x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u))), _GLF_IDENTITY(max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) | (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.5)), bool(false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, -6.5)))).x)))))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))))))))) ^ 0u), _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(63536u) : _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))), min(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), 0u + (_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u | 1u))) + 0u))), 0u ^ ((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u | 1u))) + 0u)))))), subgroup_id * subgroup_size)))), _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u + (subgroup_id * subgroup_size))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u | 1u))) + 0u))), 0u ^ ((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u | 1u))) + 0u)))))), subgroup_id * subgroup_size)))), _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u + (subgroup_id * subgroup_size)))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u | 1u))) + 0u))), 0u ^ ((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u | 1u))) + 0u)))))), subgroup_id * subgroup_size)))), _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u + (subgroup_id * subgroup_size))))))))) - (0u | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) >> 0u)))) | 0u) | 0u)))) / 1u)))))))) + subgroup_local_id, 0u ^ (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_id * subgroup_size)), _GLF_IDENTITY(min(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(8630.6484)), bool(false))), injectionSwitch[1])).x)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-5.5), (_GLF_IDENTITY(_GLF_FUZZED(-5.5), float(vec4(_GLF_FUZZED(-5.5), 0.0, 1.0, 0.0)))) + 0.0)), bool(false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, -6.5)))).x))), (false ? _GLF_FUZZED(-2.4) : _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-5.5), (_GLF_IDENTITY(_GLF_FUZZED(-5.5), float(vec4(_GLF_FUZZED(-5.5), 0.0, 1.0, 0.0)))) + 0.0)), bool(false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, -6.5)))).x))), float(_GLF_IDENTITY(float(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-5.5), (_GLF_IDENTITY(_GLF_FUZZED(-5.5), float(vec4(_GLF_FUZZED(-5.5), 0.0, 1.0, 0.0)))) + 0.0)), bool(false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, -6.5)))).x)))), mix(float(_GLF_FUZZED(8.5)), float(float(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-5.5), (_GLF_IDENTITY(_GLF_FUZZED(-5.5), float(vec4(_GLF_FUZZED(-5.5), 0.0, 1.0, 0.0)))) + 0.0)), bool(false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, -6.5)))).x))))), bool(true)))))))))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))))))), _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + 0u))) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), (_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u | 1u))) + 0u)))), subgroup_id * subgroup_size)))), subgroup_id * subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))) + _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) / (0u | 1u))) + 0u)))), _GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) : _GLF_FUZZED(5224u))) * subgroup_size)))), subgroup_id * subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY((0u | 1u), ~ (~ ((0u | 1u)))))) + 0u)))), subgroup_id * subgroup_size)))), subgroup_id * subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)))))))) >> 0u)) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_local_id))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u | 1u))) + 0u)))), subgroup_id * subgroup_size)))), subgroup_id * subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size))))))))) - (0u | (0u | 0u)))) / 1u)), ~ (_GLF_IDENTITY(~ (min(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.5)), bool(false))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), false)))), false || (bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), false))))))) ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, _GLF_IDENTITY(-6.5, clamp(-6.5, _GLF_IDENTITY(-6.5, mix(float(_GLF_IDENTITY(-6.5, (-6.5) - 0.0)), float(_GLF_FUZZED(8.1)), bool(false))), _GLF_IDENTITY(-6.5, max(-6.5, -6.5)))))))).x)))))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY((0u), 0u + ((0u))) | (0u))) - 0u))), (uint(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) - 0u)))) - _GLF_IDENTITY(0u, ~ (~ (0u))))))))))))))), _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)))))))) + 0u))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u | 1u))), ((subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u | 1u)))) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) + 0u)))), subgroup_id * subgroup_size)))), subgroup_id * subgroup_size)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(subgroup_id * subgroup_size))), min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size))))))) - (0u | (_GLF_IDENTITY(0u, (0u) + 0u) | 0u)))) / 1u))), min(_GLF_IDENTITY(~ (min(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, abs(0.0), _GLF_IDENTITY(dot(vec2(determinant(mat4(0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9.6)), bool(false))), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), vec2(0.0, _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(97.29))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), (true ? dot(vec2(0.0, 1.0), vec2(1.0, 0.0)) : _GLF_FUZZED(8387.2137)))), 0.0, 1.0, log(1.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, cos(0.0)), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, cos(0.0)), vec4(1.0, 1.0, 1.0, 0.0))), 1.0, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), (dot(vec2(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), vec2(0.0, 1.0))) * 1.0)))))[0], mix(float(_GLF_FUZZED(-4.0)), float(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, abs(0.0), _GLF_IDENTITY(dot(vec2(determinant(mat4(0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9.6)), bool(false))), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), vec2(0.0, _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(97.29))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), (true ? dot(vec2(0.0, 1.0), vec2(1.0, 0.0)) : _GLF_FUZZED(8387.2137)))), 0.0, 1.0, log(1.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, cos(0.0)), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, cos(0.0)), vec4(1.0, 1.0, 1.0, 0.0))), 1.0, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), (dot(vec2(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), vec2(0.0, 1.0))) * 1.0)))))[0]), bool(true))), injectionSwitch[_GLF_IDENTITY(1, (1) - 0)])).x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.5)), bool(false))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))) ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, -6.5)))).x)))))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | 0u), _GLF_IDENTITY(uint(0u), uint(0u))))) << 0u))))))))), _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, 0u))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(294.768)), bool(false))), round(length(normalize(1.0))))), float(mat3(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))).x), float(_GLF_FUZZED(294.768)), bool(false))), _GLF_IDENTITY(round(length(normalize(1.0))), (round(length(normalize(1.0)))) + 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 0u))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), (_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))) ^ 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))))))), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))))) * subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u | 1u))) + 0u)))), subgroup_id * subgroup_size)))), subgroup_id * subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u))) : _GLF_FUZZED(workgroup_size))) * subgroup_size))))))) - (0u | (0u | 0u)))) / 1u))), max(~ (min(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.5)), bool(false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, -6.5)))).x)))))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.5)), bool(false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, -6.5)))).x))))), ((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.5)), bool(false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, -6.5)))).x)))))) >> 0u)) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))))))) >> 0u)) / 1u)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(workgroup_id))), max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 0u))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) + 0u)) * subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_size)))) / 1u), _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u | 1u)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY((0u | 1u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY((0u | 1u), 0u | ((0u | 1u))))))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u | 1u))))) + 0u)))), subgroup_id * subgroup_size)))), _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u, ~ (~ (0u))) + (subgroup_id * subgroup_size))))))) - _GLF_IDENTITY((_GLF_IDENTITY(0u | (0u | 0u), (_GLF_IDENTITY(0u | (0u | 0u), clamp(0u | (0u | 0u), 0u | (0u | 0u), _GLF_IDENTITY(0u | (0u | 0u), 0u ^ (0u | (0u | 0u)))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec3((0u | (0u | 0u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))) / 1u))), ~ (min(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))[1] : _GLF_FUZZED(-38.66)))), float(_GLF_FUZZED(5.9)), bool(false))))).x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.5)), bool(false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, -6.5)))).x)))))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))))))), _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5096.0906)), bool(false))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0u), (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.5)), bool(false))), injectionSwitch.x))) + 0u))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), bool(bool(! (! (true))))))))) ? _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))) : _GLF_FUZZED(82101u)), ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), bool(bool(! (! (true))))))))) ? _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))) : _GLF_FUZZED(82101u))) + 0u)), min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) >> 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u | 1u))) + 0u)), min(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u | 1u))) + 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u | 1u))) + 0u)), (true ? ~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u | 1u))) + 0u)) : _GLF_FUZZED(num_workgroup))))))), subgroup_id * subgroup_size)))), subgroup_id * subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size))))))) - (0u | (0u | 0u)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u | 1u))) + 0u)))), _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u))))))), subgroup_id * subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size))))) << 0u)))) - (0u | (0u | 0u))), (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u | 1u))) + 0u)))), subgroup_id * subgroup_size)))), subgroup_id * subgroup_size), (clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * subgroup_size))))), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), 0u)) | 1u))) + 0u)))), subgroup_id * subgroup_size)))), subgroup_id * subgroup_size)) - 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size))))))) - (0u | (0u | 0u)))) ^ 0u))))) / 1u))))), ~ (min(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))) / 1u), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), 0.0, 0.0, sqrt(0.0), 1.0)), mix(float(_GLF_IDENTITY(float(mat4x2(0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), 0.0, 0.0, sqrt(0.0), 1.0)), (float(mat4x2(0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), 0.0, 0.0, sqrt(0.0), 1.0))) / 1.0)), float(_GLF_FUZZED((false ? -6579.7879 : 6258.4126))), bool(false)))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))))) | (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.5)), bool(false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, -6.5)))).x)))))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), uint(0u)))))))))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.5)), bool(false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, -6.5)))).x))), min(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.5)), bool(false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, -6.5)))).x))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.5)), bool(false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, -6.5)))).x)))))))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), clamp((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))))))))), 1u * (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))).x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u))), _GLF_IDENTITY(max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) | (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.5)), bool(false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, -6.5)))).x)))))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))))))))) ^ 0u), _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(63536u) : _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))), min(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), 0u + (_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u | 1u))) + 0u))), 0u ^ ((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u | 1u))) + 0u)))))), subgroup_id * subgroup_size)))), _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u + (subgroup_id * subgroup_size))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u | 1u))) + 0u))), 0u ^ ((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u | 1u))) + 0u)))))), subgroup_id * subgroup_size)))), _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u + (subgroup_id * subgroup_size)))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u | 1u))) + 0u))), 0u ^ ((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u | 1u))) + 0u)))))), subgroup_id * subgroup_size)))), _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u + (subgroup_id * subgroup_size))))))))) - (0u | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) >> 0u)))) | 0u) | 0u)))) / 1u)))))))) + subgroup_local_id))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3((! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))), true, false))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3((! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))), true, false))))), true))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = (0 & 33322); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8437.0044)), vec2(_GLF_FUZZED(754.986), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        continue;
       return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))))))
          {
           do
            {
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), log(1.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), sqrt(0.0), 1.0, abs(determinant(mat2(1.0, 0.0, 0.0, 1.0)))))).y))))
              break;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, (1) << 0), 0, 0, 1))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_local_id + 1), max(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), (subgroup_local_id + 1))), (~ (subgroup_local_id + 1)) / 1u)), ((_GLF_IDENTITY(~ (subgroup_local_id + 1), (~ _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | (1u ^ 1u))) / 1u))) >> _GLF_IDENTITY(0u, 0u + (0u))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))) * mat2(1.0), mix(vec2(_GLF_FUZZED(-88.49), ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], max(((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-5.2)), bvec2(true, false)))).x))) : _GLF_FUZZED(packSnorm2x16(_GLF_IDENTITY(vec2(-69.30, 7.9), vec2(vec3(vec2(-69.30, 7.9), 1.0)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))) * mat2(1.0), mix(vec2(_GLF_FUZZED(-88.49), ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], max(((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-5.2)), bvec2(true, false)))).x))) : _GLF_FUZZED(packSnorm2x16(_GLF_IDENTITY(vec2(-69.30, 7.9), vec2(vec3(vec2(-69.30, 7.9), 1.0)))))))))), (true ? (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))) * mat2(1.0), mix(vec2(_GLF_FUZZED(-88.49), ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], max(((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-5.2)), bvec2(true, false)))).x))) : _GLF_FUZZED(packSnorm2x16(_GLF_IDENTITY(vec2(-69.30, 7.9), vec2(vec3(vec2(-69.30, 7.9), 1.0)))))))))) : _GLF_FUZZED(subgroup_id)))) | 0u)))) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 0.0, 0.0))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(35685)))], injectionSwitch[1])).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
   else
    {
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) << 0u)) - 0u), _GLF_IDENTITY(4, ~ (~ (4))), 64, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) + 0))));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            continue;
           if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 0u, 1u))) : _GLF_FUZZED(32886u))), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)), (true ? _GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 0u, 1u))) : _GLF_FUZZED(32886u))) : _GLF_FUZZED(virtual_gid)), clamp(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : subgroup_size, ~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : subgroup_size, uint(uvec3(_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : false ? _GLF_FUZZED(workgroup_id) : subgroup_size)), 0u, 1u)))))))), (true ? _GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 0u, 1u))) : _GLF_FUZZED(32886u))) : _GLF_FUZZED(virtual_gid)), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)), (true ? _GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 0u, 1u))) : _GLF_FUZZED(32886u))) : _GLF_FUZZED(virtual_gid))) | ((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)), (true ? _GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 0u, 1u))) : _GLF_FUZZED(32886u))) : _GLF_FUZZED(virtual_gid)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)), (true ? _GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 0u, 1u))) : _GLF_FUZZED(32886u))) : _GLF_FUZZED(virtual_gid)), (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)), (true ? _GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 0u, 1u))) : _GLF_FUZZED(32886u))) : _GLF_FUZZED(virtual_gid))))), 1u, 0u, 1u))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   atomicStore(checker[virtual_gid], read, 4, 64, 4);
                  }
                 else
                  {
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-0.0, -3544.2413)))), injectionSwitch, injectionSwitch)).y))))
              {
               if(_GLF_DEAD(false))
                continue;
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             subgroupAll(false);
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              break;
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), _GLF_IDENTITY((_GLF_IDENTITY(bool(false), (bool(false)) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(false), (bool(false)) && true))), bool(bvec3(! ((_GLF_IDENTITY(bool(false), (bool(false)) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) && true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))), (bool(_GLF_IDENTITY(bool(false), (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))) && true))))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                  return;
                 break;
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
                  break;
                 return;
                }
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y))))
                  continue;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                }
               else
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    break;
                   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(read, ~ (~ (read)))), ((_GLF_IDENTITY(read, ~ (~ (read))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), 4, 64, 4);
                  }
                }
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              return;
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1)))))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
              {
               do
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))))
                  {
                   do
                    {
                     return;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 if(_GLF_DEAD(false))
                  continue;
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, false || (_injected_loop_counter < _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (int(1)) / 1)))))); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     subgroupAll(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))));
                    }
                   if(_GLF_DEAD(false))
                    break;
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
}
