#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_14 {
 float _f0;
 mat3x4 _f1;
 uvec4 _f2;
 uvec4 _f3;
 mat3 _f4;
 vec4 _f5;
 uint _f6;
} ;

struct _GLF_struct_13 {
 bvec2 _f0;
} ;

struct _GLF_struct_12 {
 mat4x3 _f0;
} ;

struct _GLF_struct_15 {
 mat2x4 _f0;
 mat4x3 _f1;
 uvec4 _f2;
 _GLF_struct_12 _f3;
 mat4x3 _f4;
 _GLF_struct_13 _f5;
 _GLF_struct_14 _f6;
} ;

struct _GLF_struct_10 {
 uvec3 _f0;
 vec3 _f1;
 mat3x2 _f2;
 uvec2 _f3;
 mat4x2 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_11 {
 mat4x3 _f0;
 _GLF_struct_10 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_8 {
 mat3x4 _f0;
 uvec4 _f1;
 ivec4 _f2;
 ivec3 _f3;
 float _f4;
 vec3 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_7 {
 mat3 _f0;
 bvec3 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_6 {
 uvec4 _f0;
 mat3x2 _f1;
 mat3x4 _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_9 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_8 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_4 {
 vec4 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
 vec4 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
 ivec3 _f1;
 mat2x3 _f2;
 mat3x2 _f3;
 mat4x2 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_1 {
 mat4x3 _f0;
 ivec2 _f1;
 mat3x2 _f2;
 bool _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_0 {
 mat3x2 _f0;
} ;

struct _GLF_struct_3 {
 mat3x4 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 mat4 _f4;
 bvec2 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_16 {
 _GLF_struct_3 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_9 _f2;
 _GLF_struct_11 _f3;
 uint _f4;
 _GLF_struct_15 _f5;
 uint workgroup_base;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(0, (0) * int(_GLF_ONE(1.0, injectionSwitch.y))) ^ 1)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), max(1.0 * (injectionSwitch.y), 1.0 * (injectionSwitch.y)))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4.0, -3726.0936)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, 0, 0))], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), true && (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec2(4.0, -3726.0936), (vec2(4.0, -3726.0936)) * vec2(1.0, 1.0)), (false ? _GLF_FUZZED(vec2(505.226, 4.8)) : vec2(4.0, -3726.0936)))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(bool((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false, true, false)), (bool(bvec4(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)))).x > injectionSwitch.y)), false, true, false))) || false))))))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), max(1.0 * (injectionSwitch.y), 1.0 * (injectionSwitch.y)))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), max(1.0 * (injectionSwitch.y), 1.0 * (injectionSwitch.y)))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), max(1.0 * (injectionSwitch.y), 1.0 * (injectionSwitch.y)))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), false, true, true)))) && true)), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- 3495.0676)), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-0.5)), bvec2(true, false))), (true ? injectionSwitch : _GLF_FUZZED(vec2(4.0, -3726.0936)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, 0, 0))], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), true && (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec2(4.0, -3726.0936), (vec2(4.0, -3726.0936)) * vec2(1.0, 1.0)), (false ? _GLF_FUZZED(vec2(505.226, 4.8)) : vec2(4.0, -3726.0936)))))), mix(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec2(4.0, -3726.0936), (vec2(4.0, -3726.0936)) * vec2(1.0, 1.0)), (false ? _GLF_FUZZED(vec2(505.226, 4.8)) : vec2(4.0, -3726.0936)))))))[0], (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec2(4.0, -3726.0936), (vec2(4.0, -3726.0936)) * vec2(1.0, 1.0)), (false ? _GLF_FUZZED(vec2(505.226, 4.8)) : vec2(4.0, -3726.0936)))))))[1]), vec2(_GLF_FUZZED(-1369.3155), _GLF_FUZZED(734.389)), bvec2(false, false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) / vec2(1.0, 1.0))))).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(bool((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false, true, false)), (bool(bvec4(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(vec4(clamp(injectionSwitch, injectionSwitch, injectionSwitch), sqrt(1.0), 1.0))))) - vec2(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, tan(0.0), 1.0, 0.0, 1.0), (mat2x3(injectionSwitch.y, 0.0, tan(0.0), 1.0, 0.0, 1.0)) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false))) || false)))))))) || false)), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(float(128852u))), mix(float(_GLF_IDENTITY(float(_GLF_FUZZED(float(128852u))), (float(_GLF_FUZZED(float(128852u)))) / 1.0)), _GLF_IDENTITY(float(_GLF_FUZZED(88.26)), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(88.26)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(8388.6954, mix(float(_GLF_IDENTITY(8388.6954, mix(float(_GLF_FUZZED(26.70)), float(8388.6954), bool(true)))), float(_GLF_FUZZED(-3091.6712)), bool(false))))), float(float(_GLF_FUZZED(88.26))), bool(true))), float(_GLF_FUZZED(88.26)), _GLF_IDENTITY(float(_GLF_FUZZED(88.26)), mix(float(_GLF_FUZZED(-966.493)), float(float(_GLF_FUZZED(88.26))), bool(true))))), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (bool(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) || false)))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))), min(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))), vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))))))).x)))) < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))) > injectionSwitch.y))), true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true)), (bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (false) && true), (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false)))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y)) && true)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, tan(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, tan(0.0)))), injectionSwitch)).x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, log(1.0), 0.0, 1.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0), mat3x4(mat4(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, log(1.0), 0.0, 1.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0)))))) > injectionSwitch.y)) && true)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, tan(0.0), length(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0)))))))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, true)))), true, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY(min(int(4), int(4)), int(int(min(int(4), int(4)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
    {
    }
   else
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), true, false, false))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(110.136)))), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, injectionSwitch.y))), true, false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, _GLF_IDENTITY(false, ! (! (false)))))))), true && (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, _GLF_IDENTITY(false, ! (! (false)))))))))))))), false, false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(((false)), false || (_GLF_IDENTITY(((false)), bool(bvec4(_GLF_IDENTITY(((false)), false || (((false)))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((_GLF_IDENTITY(-7.0 - -4787.6014, (_GLF_IDENTITY(-7.0 - -4787.6014, mix(float(-7.0 - _GLF_IDENTITY(-4787.6014, (-4787.6014) - _GLF_ZERO(0.0, injectionSwitch.x))), float(_GLF_FUZZED(369.348)), bool(false)))) + 0.0))), _GLF_FUZZED(42.25)), bvec2(false, false))).y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, _GLF_IDENTITY(abs(sqrt(_GLF_IDENTITY(0.0, 0.0 + (0.0)))), clamp(abs(sqrt(_GLF_IDENTITY(0.0, 0.0 + (0.0)))), abs(sqrt(_GLF_IDENTITY(0.0, 0.0 + (0.0)))), abs(sqrt(_GLF_IDENTITY(0.0, 0.0 + (0.0)))))), 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * vec2(1.0, 1.0)), clamp(vec2(0.0, 1.0), vec2(0.0, 1.0), vec2(0.0, 1.0))))), determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, sin(0.0), 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))))), (_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))))), min(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))))))) - 0.0), 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0 * (float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, 1.0, 1.0))), injectionSwitch.x)))), 1.0, abs(sqrt(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5572.9066)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 1.0, 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0, sin(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 1.0, 0.0, 1.0, 0.0), mat3x2(_GLF_IDENTITY(mat3(mat3x2(0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(mat3(-0.8, -56.37, 21.73, 11.93, 9.3, 0.5, 8.6, -2.8, 8175.0291)) : mat3(mat3x2(0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))))))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, _GLF_IDENTITY(abs(sqrt(_GLF_IDENTITY(0.0, 0.0 + (0.0)))), clamp(abs(sqrt(_GLF_IDENTITY(0.0, 0.0 + (0.0)))), abs(sqrt(_GLF_IDENTITY(0.0, 0.0 + (0.0)))), abs(sqrt(_GLF_IDENTITY(0.0, 0.0 + (0.0)))))), 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * vec2(1.0, 1.0)), clamp(vec2(0.0, 1.0), vec2(0.0, 1.0), vec2(0.0, 1.0))))), determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, sin(0.0), 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))))), (_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))))), min(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))))))) - 0.0), 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0 * (float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, 1.0, 1.0))), injectionSwitch.x)))), 1.0, abs(sqrt(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5572.9066)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 1.0, 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0, sin(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 1.0, 0.0, 1.0, 0.0), mat3x2(_GLF_IDENTITY(mat3(mat3x2(0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(mat3(-0.8, -56.37, 21.73, 11.93, 9.3, 0.5, 8.6, -2.8, 8175.0291)) : mat3(mat3x2(0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))))))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, _GLF_IDENTITY(abs(sqrt(_GLF_IDENTITY(0.0, 0.0 + (0.0)))), clamp(abs(sqrt(_GLF_IDENTITY(0.0, 0.0 + (0.0)))), abs(sqrt(_GLF_IDENTITY(0.0, 0.0 + (0.0)))), abs(sqrt(_GLF_IDENTITY(0.0, 0.0 + (0.0)))))), 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * vec2(1.0, 1.0)), clamp(vec2(0.0, 1.0), vec2(0.0, 1.0), vec2(0.0, 1.0))))), determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, sin(0.0), 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))))), (_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))))), min(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(5.6, 4.1)))).y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))) / 1.0)))))))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))))))) - 0.0), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((+ -4813.4483))), float(0.0), bool(true))))), 1.0, 1.0, 0.0, 0.0, 1.0)), clamp(_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, _GLF_IDENTITY(abs(sqrt(_GLF_IDENTITY(0.0, 0.0 + (0.0)))), clamp(abs(sqrt(_GLF_IDENTITY(0.0, 0.0 + (0.0)))), abs(sqrt(_GLF_IDENTITY(0.0, 0.0 + (0.0)))), abs(sqrt(_GLF_IDENTITY(0.0, 0.0 + (0.0)))))), 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * vec2(1.0, 1.0)), clamp(vec2(0.0, 1.0), vec2(0.0, 1.0), vec2(0.0, 1.0))))), determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, sin(0.0), 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))))), (_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))))), min(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(5.6, 4.1)))).y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))) / 1.0)))))))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))))))) - 0.0), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((+ -4813.4483))), float(0.0), bool(true))))), 1.0, 1.0, 0.0, 0.0, 1.0)), (float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, _GLF_IDENTITY(abs(sqrt(_GLF_IDENTITY(0.0, 0.0 + (0.0)))), clamp(abs(sqrt(_GLF_IDENTITY(0.0, 0.0 + (0.0)))), abs(sqrt(_GLF_IDENTITY(0.0, 0.0 + (0.0)))), abs(sqrt(_GLF_IDENTITY(0.0, 0.0 + (0.0)))))), 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * vec2(1.0, 1.0)), clamp(vec2(0.0, 1.0), vec2(0.0, 1.0), vec2(0.0, 1.0))))), determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, sin(0.0), 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))))), (_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))))), min(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(5.6, 4.1)))).y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))) / 1.0)))))))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))))))) - 0.0), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((+ -4813.4483))), float(0.0), bool(true))))), 1.0, 1.0, 0.0, 0.0, 1.0))) / 1.0), float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, _GLF_IDENTITY(abs(sqrt(_GLF_IDENTITY(0.0, 0.0 + (0.0)))), clamp(abs(sqrt(_GLF_IDENTITY(0.0, 0.0 + (0.0)))), abs(sqrt(_GLF_IDENTITY(0.0, 0.0 + (0.0)))), abs(sqrt(_GLF_IDENTITY(0.0, 0.0 + (0.0)))))), 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * vec2(1.0, 1.0)), clamp(vec2(0.0, 1.0), vec2(0.0, 1.0), vec2(0.0, 1.0))))), determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, sin(0.0), 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))))), (_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))))), min(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(5.6, 4.1)))).y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))) / 1.0)))))))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))))))) - 0.0), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((+ -4813.4483))), float(0.0), bool(true))))), 1.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, _GLF_IDENTITY(abs(sqrt(_GLF_IDENTITY(0.0, 0.0 + (0.0)))), clamp(abs(sqrt(_GLF_IDENTITY(0.0, 0.0 + (0.0)))), abs(sqrt(_GLF_IDENTITY(0.0, 0.0 + (0.0)))), abs(sqrt(_GLF_IDENTITY(0.0, 0.0 + (0.0)))))), 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * vec2(1.0, 1.0)), clamp(vec2(0.0, 1.0), vec2(0.0, 1.0), vec2(0.0, 1.0))))), determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, sin(0.0), 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))))), (_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))))), min(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(5.6, 4.1)))).y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))) / 1.0)))))))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))))))) - 0.0), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((+ -4813.4483))), float(0.0), bool(true))))), 1.0, 1.0, 0.0, 0.0, 1.0)))), 1.0 * (float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, 1.0, 1.0))), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, 1.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sin(0.0), 1.0), (false ? _GLF_FUZZED(mat3x4(mat2x3(-3.2, -69.84, 6954.9447, -0.6, 338.813, 7931.4210))) : mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, 1.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sin(0.0), 1.0))))), injectionSwitch.x)))), 1.0, abs(sqrt(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) - 0.0)), float(_GLF_FUZZED(-5572.9066)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))), 1.0, 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0, sin(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 1.0, 0.0, 1.0, 0.0), mat3x2(_GLF_IDENTITY(mat3(mat3x2(0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(mat3(-0.8, -56.37, 21.73, 11.93, 9.3, 0.5, 8.6, -2.8, 8175.0291)) : mat3(mat3x2(0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0))))))))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y))))))))))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(ivec3(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 1))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter))) < (_GLF_IDENTITY(1 | 1, min(_GLF_IDENTITY(1 | 1, (1 | 1) << 0), _GLF_IDENTITY(1 | 1, (1 | 1) - 0))))); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((subgroup_id , injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))) / ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) | (int(5))))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(93414)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   for(int _injected_loop_counter = (1 & 1); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_struct_3(mat3x4(1.0), _GLF_struct_0(mat3x2(1.0)), _GLF_struct_1(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(0.1) : 1.0)), min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0))))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, clamp(1, 1, 1))), ivec2(0, 0) | (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, clamp(1, 1, 1))), (ivec2(_GLF_IDENTITY(1, clamp(1, 1, 1)))) ^ ivec2(0, 0)))), mat3x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(true, false || (true)) && (bool(bvec2(false, true))))) ? _GLF_FUZZED(76.95) : 1.0)), 1.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(76.95) : 1.0)), 1.0), mix(float(min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(76.95) : 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(float(_GLF_FUZZED(-3.3)), (true ? float(_GLF_IDENTITY(_GLF_FUZZED(-3.3), min(_GLF_FUZZED(-3.3), _GLF_FUZZED(-3.3)))) : _GLF_FUZZED(_GLF_IDENTITY(log(-8.5), mix(float(log(-8.5)), float(_GLF_FUZZED(-22.10)), bool(false)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(false), (bool(false)) && true)) || false), (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), (bool(false)) && true)) || false)) && true)))) + 0.0))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(58.26)), bool(false))), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(58.26)), bool(false))), 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(58.26)), bool(false))), 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true)), ! (! (_GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-67.40), _GLF_FUZZED(-9.8)), bvec2(false, false))).x < injectionSwitch.y)), true))))), false, false))))))), mat2x3(1.0)), _GLF_struct_2(mat3x2(1.0), ivec3(1), mat2x3(1.0), mat3x2(1.0), mat4x2(1.0), bvec4(true)), mat4(1.0), bvec2(true), _GLF_IDENTITY(mat3(1.0), mat3(1.0) * (mat3(1.0)))), _GLF_struct_5(_GLF_struct_4(vec4(1.0), mat3x2(1.0)), _GLF_IDENTITY(vec4(1.0), vec4(mat3(vec4(1.0), 0.0, 0.0, _GLF_IDENTITY(cos(0.0), mix(_GLF_IDENTITY(float(cos(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, cos(0.0)))), 0.0, 0.0)))), (true ? float(cos(0.0)) : _GLF_FUZZED(-423.008))), _GLF_IDENTITY(float(_GLF_FUZZED(3609.0291)), (false ? _GLF_FUZZED(float(true)) : float(_GLF_FUZZED(3609.0291)))), bool(false))), _GLF_IDENTITY(0.0, determinant(mat2(1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0)) * (_GLF_IDENTITY(0.0, 1.0 * (0.0)))), 1.0))), mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_struct_9(_GLF_struct_6(uvec4(1u), mat3x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-375.348, min(-375.348, -375.348))), _GLF_FUZZED(6.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))) - vec2(0.0, 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0), _GLF_IDENTITY((mat3x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0)) * mat3(1.0), transpose(transpose((mat3x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0)) * mat3(1.0))))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), ! (! (injectionSwitch.x < injectionSwitch.y)))) && true))) ? _GLF_IDENTITY(1.0, float(mat2x4(1.0, tan(0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(exp2(9706.0835)) : _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))))) : _GLF_FUZZED(943.949)), min((_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-375.348, min(-375.348, -375.348))), _GLF_FUZZED(6.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))) - vec2(0.0, 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0), _GLF_IDENTITY((mat3x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0)) * mat3(1.0), transpose(transpose((mat3x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0)) * mat3(1.0))))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), ! (! (injectionSwitch.x < injectionSwitch.y)))) && true))) ? _GLF_IDENTITY(1.0, float(mat2x4(1.0, tan(0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(exp2(9706.0835)) : _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))))) : _GLF_FUZZED(943.949)), (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-375.348, min(-375.348, -375.348))), _GLF_FUZZED(6.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))) - vec2(0.0, 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0), _GLF_IDENTITY((mat3x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0)) * mat3(1.0), transpose(transpose((mat3x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0)) * mat3(1.0))))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), ! (! (injectionSwitch.x < injectionSwitch.y)))) && true))) ? _GLF_IDENTITY(1.0, float(mat2x4(1.0, tan(0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(exp2(9706.0835)) : _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))))) : _GLF_FUZZED(943.949)))), _GLF_IDENTITY(clamp((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x4(1.0, tan(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), (true ? _GLF_IDENTITY(1.0, float(mat2x4(1.0, tan(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(-2.2))) : _GLF_FUZZED(943.949)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)) ? _GLF_IDENTITY(1.0, float(mat2x4(1.0, tan(0.0), 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(abs(-6291.0749)) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7.7))))), 0.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(_GLF_IDENTITY(943.949, min(_GLF_IDENTITY(943.949, (943.949) - 0.0), 943.949)))), _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, false))))) ? _GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(false))), bool(false))), tan(0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3518.1569) : 1.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))) : _GLF_FUZZED(943.949)), min((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, false))))) ? _GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(false))), bool(false))), tan(0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3518.1569) : 1.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))) : _GLF_FUZZED(943.949)), _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, false))))) ? _GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(false))), bool(false))), tan(0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3518.1569) : 1.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))) : _GLF_FUZZED(943.949)), (_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, false))))) ? _GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(false))), bool(false))), tan(0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3518.1569) : 1.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))) : _GLF_FUZZED(943.949)), ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, false))))) ? _GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(false))), bool(false))), tan(0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3518.1569) : 1.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))) : _GLF_FUZZED(943.949))) / 1.0)) - 0.0)))), sin(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0))), 1.0)))) + (clamp((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, float(mat2x4(1.0, tan(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(943.949)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)) ? _GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, (1.0) / round(length(normalize(1.0)))), tan(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(943.949)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, false))))) ? _GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(false))), bool(false))), tan(0.0), _GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-3518.1569), (false ? _GLF_FUZZED(4.2) : _GLF_FUZZED(-3518.1569))) : 1.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))) : _GLF_FUZZED(943.949)))))))), mat3x4(1.0), uvec2(1u)), _GLF_struct_7(_GLF_IDENTITY(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(transpose(transpose(mat3(1.0))), (_GLF_IDENTITY(transpose(transpose(mat3(1.0))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(transpose(transpose(mat3(1.0))), mat3(mat3(_GLF_IDENTITY(transpose(transpose(mat3(1.0))), (false ? _GLF_FUZZED(mat3(-77.52, 5.4, -8.4, 8.9, -1194.0533, -748.916, -6.9, 6207.0448, 8956.6941)) : transpose(transpose(mat3(1.0))))))))), mat3(1.0) * (transpose(_GLF_IDENTITY(transpose(transpose(_GLF_IDENTITY(mat3(1.0), (false ? _GLF_FUZZED(mat3(773.259, -961.839, -6.9, -3510.0804, -89.70, -932.698, -90.92, 5.5, -69.75)) : mat3(1.0))))), mat3(mat3(transpose(transpose(mat3(1.0)))))))))))) + mat3(0.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) / 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7763.2484) : 0.0)), max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0))), (false ? _GLF_FUZZED(mat3(-6.1, -783.017, 7.2, -9.7, -4045.1365, _GLF_IDENTITY(-4046.1691, (_GLF_IDENTITY(-4046.1691, clamp(-4046.1691, -4046.1691, -4046.1691))) - abs(0.0)), 0.8, -7542.5186, 7.7)) : _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(transpose(transpose(mat3(1.0))), (_GLF_IDENTITY(transpose(transpose(_GLF_IDENTITY(mat3(1.0), mat3(1.0) * (mat3(1.0))))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(transpose(transpose(mat3(1.0))), mat3(mat3(transpose(transpose(mat3(1.0))))))), mat3(1.0) * (transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(transpose(mat3(1.0))), (true ? transpose(_GLF_IDENTITY(transpose(mat3(1.0)), transpose(transpose(_GLF_IDENTITY(transpose(mat3(1.0)), transpose(transpose(transpose(mat3(1.0))))))))) : _GLF_FUZZED(mat3(9.4, 1.4, 0.5, -617.356, 3.9, 4316.6269, -6859.7188, 7599.4253, -9.5)))), mat3(mat3(transpose(transpose(mat3(1.0)))))))))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0)), 0.0))))), _GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), true)))), false)))), mat4x2(1.0)), _GLF_struct_8(mat3x4(1.0), uvec4(1u), ivec4(1), ivec3(1), 1.0, vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))) ? _GLF_IDENTITY(_GLF_FUZZED(-79.01), clamp(_GLF_FUZZED(-79.01), _GLF_FUZZED(-79.01), _GLF_FUZZED(-79.01))) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), (true ? 1.0 : _GLF_FUZZED(-80.04)))))), ivec3(1)), uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(1u, (1u) | (1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), uint(uvec4((1u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u))) | (1u)), uint(_GLF_ONE(1.0, injectionSwitch.y))))) + 0u)))), _GLF_struct_11(mat4x3(_GLF_IDENTITY(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)) + (1.0))), _GLF_struct_10(uvec3(1u), vec3(1.0), mat3x2(1.0), uvec2(1u), mat4x2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, sin(0.0)), max(_GLF_IDENTITY(vec2(1.0, sin(0.0)), mix(vec2(_GLF_FUZZED(-30.95), _GLF_FUZZED(_GLF_IDENTITY(-8.0, (-8.0) - 0.0))), vec2((vec2(1.0, sin(0.0)))[0], (vec2(1.0, sin(0.0)))[1]), bvec2(true, true))), vec2(1.0, sin(0.0)))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0, sin(0.0))))))), mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, sin(0.0), 0.0)), float(mat3x2(_GLF_IDENTITY(float(vec3(1.0, sin(0.0), 0.0)), (float(vec3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), sin(0.0), 0.0))) - sqrt(0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) + mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1u, _GLF_struct_15(mat2x4(1.0), mat4x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(314.263) : 1.0))), uvec4(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY((true ? _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(1u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 0u), clamp(uvec3(1u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 0u), uvec3(1u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 0u), _GLF_IDENTITY(uvec3(1u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 0u), uvec3(uvec3(uvec3(1u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 0u))))))), (uint(uvec3(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))) | (uint(uvec3(1u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(907.492), clamp(_GLF_FUZZED(907.492), _GLF_FUZZED(907.492), _GLF_IDENTITY(_GLF_FUZZED(907.492), (_GLF_FUZZED(907.492)) * 1.0))) : injectionSwitch.y)))), 0u))))) : _GLF_FUZZED(workgroup_id)), ((true ? _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 0u)), (uint(uvec3(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))) | (uint(uvec3(1u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(907.492) : injectionSwitch.y)))), 0u))))) : _GLF_FUZZED(workgroup_id))) | ((true ? _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 0u)), (uint(uvec3(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))) | (uint(uvec3(1u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(907.492) : injectionSwitch.y)))), _GLF_IDENTITY(0u, (0u) ^ 0u)))))) : _GLF_FUZZED(workgroup_id)))))))), _GLF_struct_12(mat4x3(1.0)), mat4x3(1.0), _GLF_struct_13(bvec2(true)), _GLF_struct_14(1.0, mat3x4(1.0), uvec4(1u), uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, 0u)), (uint(uvec2(1u, 0u))) * 1u))) + (0u | 0u))), _GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(-52.01, -7201.9851, -22.62, 6.5, 6538.0522, -19.39, 461.798, 334.976, 97.51)))), vec4(1.0), _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) + 0u)) ^ 0u), 1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 1u))))))))), workgroup_size * workgroup_id);
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (1 ^ 0), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) != (1 ^ 0), bool(bvec2(_injected_loop_counter != (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | 0))))) ^ 0), true))))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_IDENTITY(_injected_loop_counter ++, 0 + (_injected_loop_counter ++)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_struct_replacement_16.workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_struct_replacement_16.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), (_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u)) * 1u) + (_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec4((subgroup_local_id + 1), 0u, 1u, 0u))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))), ((subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))))) << (45324u & 0u))));
 uint read = 0;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), clamp(_GLF_IDENTITY(0 | (1), (0 | (1)) | (0 | (1))), 0 | (1), 0 | (1)))), _GLF_IDENTITY(1, int(ivec2(1, 0)))))) >> 0)), 4, 64, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, max(4, 4)), 4)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(0, 0 + _GLF_IDENTITY((0), ((0)) | 0)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0) < ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, 0 ^ (2)))) + 0), _GLF_IDENTITY((_GLF_IDENTITY(int(2), (int(2)) + 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) + 0), 0 ^ (_GLF_IDENTITY(int(2), (int(2)) + 0)))), (_GLF_IDENTITY(int(2), (int(2)) + 0)))) * 1)), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (-31605 & 0) | _GLF_IDENTITY((2), min(_GLF_IDENTITY((2), clamp((2), (2), (2))), (2))))), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) + 0), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(max(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), (false ? _GLF_FUZZED(_injected_loop_counter) : ~ (2))))), 2), (max(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), (false ? _GLF_FUZZED(_injected_loop_counter) : ~ (2))))), 2)) ^ 0))), (int(2)) + _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0)))))) * 1)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(5), int(5))) | (2))), (int(2)) + 0), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 | (2))), (int(2)) + 0)) * 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(5), int(5))) | (2))), (int(2)) + 0), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 | (2))), (int(2)) + 0)) * 1)), (_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(5), int(5))) | (2))), (int(2)) + 0), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 | (2))), (int(2)) + 0)) * 1))) >> 0), _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(5), int(5))) | (2))), (int(2)) + 0), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 | (2))), (int(2)) + 0)) * 1)), _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(5), int(5))) | (2))), (int(2)) + 0), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 | (2))), (int(2)) + 0)) * 1)))), min(_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(5), int(5))) | (2))), (int(2)) + 0), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 | (2))), (int(2)) + 0)) * 1), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(5), int(5))) | (2))), (int(2)) + 0), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 | (2))), (int(2)) + 0)) * 1)))), _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(5), int(5))) | (2))), (int(2)) + 0), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 | (2))), _GLF_IDENTITY((int(2)), ((int(2))) - 0) + 0)) * 1)))), _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) + 0), (_GLF_IDENTITY(int(2), (int(2)) + _GLF_IDENTITY(0, (0 & -41258) ^ (0)))) * 1))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2))), ~ (~ (_GLF_IDENTITY(int(2), _GLF_IDENTITY(clamp(int(2), int(2), int(2)), min(clamp(int(2), int(2), int(2)), clamp(int(2), int(2), int(2)))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(2, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(2, 0 + (2)))), ((~ (_GLF_IDENTITY(2, 0 + (2))))) << 0))), (int(2)) << 0)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2))) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) | (1)), clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, int(ivec4(1, 0, 0, 0))))) | (1)), _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), int(int(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), clamp(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, (1) / 1)))))), ((_GLF_IDENTITY(1, (1) / 1))) | 0)))) | (1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (1) << 0))) | (1)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, bool(bool(_injected_loop_counter > 0)))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          barrier();
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)) && true); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           barrier();
          }
        }
      }
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)), true, false)))))))
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-15.62)), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-42.27)))), bool(true))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-89.35), _GLF_FUZZED(7.7)), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) * vec2(1.0, 1.0)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), 1.0)), (injectionSwitch) * vec2(1.0, 1.0)).y))))))
        barrier();
       for(int _injected_loop_counter = (-18651 & 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), ! (! (_GLF_IDENTITY(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)), max((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)), (1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))), true && (_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (0 | 0) ^ (7))))))))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false)))), false))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]))) - log(vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]))) - log(vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]))) - log(vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y)))))))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       read = atomicLoad(buf[virtual_gid], 4, 64, 2);
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), false))))))))));
        }
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = _GLF_IDENTITY(1, ~ (~ (1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec2(6.8, 6.8).s)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(true)))))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, true, true))))));
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   subgroupAll(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), true))), false || (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), true)))))) && true)) || false))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), true)))) && true))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! (bool(bvec2(_GLF_DEAD(false), true)))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! (bool(bvec2(_GLF_DEAD(false), true)))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(cosh(674.137))))))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)) > 0); _injected_loop_counter --)
    {
     _GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, 2), ~ (~ (read = atomicLoad(buf[virtual_gid], 4, 64, 2))));
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(89.51)), bool(false)))), float(_GLF_FUZZED(-8.9)), bool(false)))) && true)) || false))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(89.51)), bool(false)))), float(_GLF_FUZZED(-8.9)), bool(false)))) && true)) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(89.51)), bool(false)))), float(_GLF_FUZZED(-8.9)), bool(false)))) && true)) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupBarrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}
