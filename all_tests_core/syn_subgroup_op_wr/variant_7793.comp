#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_9 {
 mat3x2 _f0;
 uint _f1;
} ;

struct _GLF_struct_8 {
 ivec3 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_7 {
 mat2x4 _f0;
 vec3 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_6 {
 bvec2 _f0;
} ;

struct _GLF_struct_10 {
 uint workgroup_base;
 _GLF_struct_6 _f0;
 mat3x4 _f1;
 vec4 _f2;
 _GLF_struct_7 _f3;
 _GLF_struct_8 _f4;
 _GLF_struct_9 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_4 {
 ivec3 _f0;
} ;

struct _GLF_struct_3 {
 mat3x4 _f0;
 mat4 _f1;
 ivec2 _f2;
 bool _f3;
 mat3 _f4;
 mat4x2 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_5 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
 float _f1;
 uint _f2;
 ivec3 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_0 {
 uvec4 _f0;
 bool _f1;
} ;

struct _GLF_struct_2 {
 bool _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_11 {
 uvec4 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_10 _f3;
 int _f4;
 uvec4 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false)) && true, ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bool(! (false))))) && true)))), (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))) || false)) && true) || _GLF_IDENTITY(false, true && (false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (! (false)) && true))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u))), clamp(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))))), (gl_WorkGroupID) * uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), uint(_GLF_IDENTITY(uint(clamp(1u, 1u, 1u)), max(uint(clamp(1u, 1u, 1u)), uint(clamp(1u, 1u, 1u))))))), 1u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (1u) | 0u), (1u) ^ 0u), 1u)))), gl_WorkGroupID)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(uvec4(1u), _GLF_struct_2(_GLF_IDENTITY(true, (true) && true), _GLF_struct_0(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(uvec2(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u)))) | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u * (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), true), _GLF_struct_1(mat3x2(1.0), 1.0, 1u, ivec3(1), mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), uvec4(1u)), _GLF_struct_5(_GLF_struct_3(mat3x4(1.0), mat4(1.0), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (1) | 0))), (1) << 0)), true, _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), mix(float(_GLF_IDENTITY(1.0, (1.0) + 0.0)), float(_GLF_FUZZED(-64.80)), bool(false))))), _GLF_IDENTITY((_GLF_IDENTITY(true ? float(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(4.1)), bool(false)), (_GLF_IDENTITY(mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(4.1)), bool(false)), float(_GLF_IDENTITY(vec4(mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(4.1)), bool(false)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(4.1)), bool(false)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))))) / _GLF_IDENTITY(1.0, (1.0) - sin(0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), min(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), float(mat3(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), max(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), 1.0), 0.0 + (_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), 1.0), (true ? _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), 1.0), float(mat3x4(min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), 1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(9548.1893)))))))), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), min(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, length(0.0))), (true ? float(mat3(1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, length(0.0))) : _GLF_FUZZED(-272.062)))), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), min(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), max(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), (false ? _GLF_FUZZED(-6.3) : min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))))), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), 1.0))))) - 0.0), 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(85.30, 0.0 + (85.30)), (false ? _GLF_FUZZED(-81.03) : _GLF_IDENTITY(85.30, (85.30) / 1.0)))), 1.0 * (_GLF_IDENTITY(true ? float(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(4.1)), bool(false)), (mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(4.1)), bool(false))) / _GLF_IDENTITY(1.0, (1.0) - sin(0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), min(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), mix(float(_GLF_FUZZED(-9.3)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), 1.0), min(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), max(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(95.25)), bool(false)))))), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), 1.0)))), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), mix(float(_GLF_FUZZED((false ? 16.71 : 409.439))), float(_GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), _GLF_IDENTITY(max(1.0, 1.0), float(mat2x3(max(1.0, 1.0), 0.0, 0.0, 0.0, 0.0, 0.0)))))), bool(true)))), 1.0), min(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, length(0.0))), (true ? float(mat3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, length(0.0), 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)), min(float(mat3x2(0.0, length(0.0), 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)), float(mat3x2(0.0, length(0.0), 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)))))) / 1.0), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, length(0.0))) : _GLF_FUZZED(-272.062)))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(float(1.0))), clamp(1.0, 1.0, 1.0))))), min(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), max(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), 1.0))))) - 0.0), 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(85.30, 0.0 + (85.30)), (false ? _GLF_FUZZED(-81.03) : _GLF_IDENTITY(85.30, (85.30) / 1.0)))), (false ? _GLF_FUZZED(17.15) : true ? float(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(4.1)), bool(false)), (mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(4.1)), bool(false))) / _GLF_IDENTITY(1.0, (1.0) - sin(0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), min(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), min(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, cos(0.0), 0.0))))), 1.0), max(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), 1.0)))), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), min(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, length(0.0))), (true ? float(mat3(1.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, length(0.0))) : _GLF_FUZZED(-272.062)))), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), min(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), max(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), max(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))))), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), 1.0))))) - 0.0), 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(85.30, 0.0 + (85.30)), (false ? _GLF_FUZZED(-81.03) : _GLF_IDENTITY(85.30, (85.30) / 1.0))))))))), ((true ? float(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(4.1, (_GLF_IDENTITY(4.1, 1.0 * (_GLF_IDENTITY(4.1, (_GLF_IDENTITY(4.1, mix(float(_GLF_FUZZED((+ 2.6))), float(4.1), bool(true)))) / 1.0)))) - 0.0))), bool(false)), _GLF_IDENTITY((mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(4.1)), bool(false))) / 1.0, float(mat3x2((mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(4.1)), bool(false))) / 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), min(max(1.0, 1.0), max(1.0, 1.0)))), 1.0), min(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(85.30, _GLF_IDENTITY((false ? _GLF_FUZZED(-81.03) : 85.30), clamp(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-81.03) : 85.30, (true ? false ? _GLF_FUZZED(-81.03) : 85.30 : _GLF_FUZZED(-3233.8994)))), (false ? _GLF_FUZZED(-2.5) : (false ? _GLF_FUZZED(-81.03) : 85.30))), (false ? _GLF_FUZZED(-81.03) : 85.30), (false ? _GLF_FUZZED(-81.03) : 85.30))))))) + 0.0)))), (mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), _GLF_IDENTITY((true ? float(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(1.0), (float(1.0)) - 0.0), float(_GLF_FUZZED(4.1)), bool(false)), (mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED(4.1)), mix(float(_GLF_FUZZED(-47.10)), float(_GLF_IDENTITY(float(_GLF_FUZZED(4.1)), mix(float(_GLF_FUZZED(2643.0302)), float(float(_GLF_FUZZED(4.1))), bool(true)))), bool(true))), bool(false))) / 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), min(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(85.30, (false ? _GLF_IDENTITY(_GLF_FUZZED(-81.03), float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(-81.03), 1.0, cos(0.0), sin(0.0), 1.0, 0.0, 1.0, 0.0), (mat4x2(_GLF_FUZZED(-81.03), 1.0, cos(0.0), sin(0.0), 1.0, 0.0, 1.0, 0.0)) * mat4(1.0)))) : 85.30)))), ((true ? float(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(4.1)), bool(false)), (mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(4.1)), bool(false))) / 1.0), 0.0 + (_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(4.1)), bool(false)), (mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, cos(0.0), 0.0, 0.0, 0.0, sqrt(0.0), sin(0.0)), (mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, cos(0.0), 0.0, 0.0, 0.0, sqrt(0.0), sin(0.0))) * mat2(1.0))))), float(_GLF_FUZZED(4.1)), bool(false))) / 1.0)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), max(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), min(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(2323.1841))))))), 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(85.30, (false ? _GLF_IDENTITY(_GLF_FUZZED(-81.03), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-81.03, max(_GLF_IDENTITY(_GLF_IDENTITY(-81.03, _GLF_IDENTITY(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0))))), mix(float(_GLF_FUZZED(-6.9)), float(_GLF_IDENTITY(_GLF_IDENTITY(-81.03, _GLF_IDENTITY(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0))))), 1.0 * (_GLF_IDENTITY(-81.03, _GLF_IDENTITY(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)))))))), bool(true))), _GLF_IDENTITY(-81.03, _GLF_IDENTITY((-81.03) - sin(0.0), mix(float((-81.03) - sin(0.0)), float(_GLF_FUZZED(-1253.0837)), bool(false))))))) : _GLF_FUZZED(asinh(67.21))), min((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-81.03, max(_GLF_IDENTITY(_GLF_IDENTITY(-81.03, _GLF_IDENTITY(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0))))), mix(float(_GLF_FUZZED(-6.9)), float(_GLF_IDENTITY(_GLF_IDENTITY(-81.03, _GLF_IDENTITY(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0))))), 1.0 * (_GLF_IDENTITY(-81.03, _GLF_IDENTITY(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)))))))), bool(true))), _GLF_IDENTITY(-81.03, _GLF_IDENTITY((-81.03) - sin(0.0), mix(float((-81.03) - sin(0.0)), float(_GLF_FUZZED(-1253.0837)), bool(false))))))) : _GLF_FUZZED(asinh(67.21))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-81.03, max(_GLF_IDENTITY(_GLF_IDENTITY(-81.03, _GLF_IDENTITY(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0))))), mix(float(_GLF_FUZZED(-6.9)), float(_GLF_IDENTITY(_GLF_IDENTITY(-81.03, _GLF_IDENTITY(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0))))), 1.0 * (_GLF_IDENTITY(-81.03, _GLF_IDENTITY(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)))))))), bool(true))), _GLF_IDENTITY(-81.03, _GLF_IDENTITY((-81.03) - sin(0.0), mix(float((-81.03) - sin(0.0)), float(_GLF_FUZZED(-1253.0837)), bool(false))))))) : _GLF_FUZZED(asinh(67.21)))))) : 85.30))))) + 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(float(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), _GLF_IDENTITY((true ? float(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(1.0), (float(1.0)) - 0.0), float(_GLF_FUZZED(4.1)), bool(false)), (mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED(4.1)), mix(float(_GLF_FUZZED(-47.10)), float(_GLF_IDENTITY(float(_GLF_FUZZED(4.1)), mix(float(_GLF_FUZZED(2643.0302)), float(float(_GLF_FUZZED(4.1))), bool(true)))), bool(true))), bool(false))) / 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), min(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(85.30, (false ? _GLF_IDENTITY(_GLF_FUZZED(-81.03), float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(-81.03), 1.0, cos(0.0), sin(0.0), 1.0, 0.0, 1.0, 0.0), (mat4x2(_GLF_FUZZED(-81.03), 1.0, cos(0.0), sin(0.0), 1.0, 0.0, 1.0, 0.0)) * mat4(1.0)))) : 85.30)))), ((true ? float(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(4.1)), bool(false)), (mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(4.1)), bool(false))) / 1.0), 0.0 + (_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(4.1)), bool(false)), (mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, cos(0.0), 0.0, 0.0, 0.0, sqrt(0.0), sin(0.0)), (mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, cos(0.0), 0.0, 0.0, 0.0, sqrt(0.0), sin(0.0))) * mat2(1.0))))), float(_GLF_FUZZED(4.1)), bool(false))) / 1.0)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), max(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), min(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(2323.1841))))))), 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(85.30, (false ? _GLF_IDENTITY(_GLF_FUZZED(-81.03), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-81.03, max(_GLF_IDENTITY(_GLF_IDENTITY(-81.03, _GLF_IDENTITY(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0))))), mix(float(_GLF_FUZZED(-6.9)), float(_GLF_IDENTITY(_GLF_IDENTITY(-81.03, _GLF_IDENTITY(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0))))), 1.0 * (_GLF_IDENTITY(-81.03, _GLF_IDENTITY(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)))))))), bool(true))), _GLF_IDENTITY(-81.03, _GLF_IDENTITY((-81.03) - sin(0.0), mix(float((-81.03) - sin(0.0)), float(_GLF_FUZZED(-1253.0837)), bool(false))))))) : _GLF_FUZZED(asinh(67.21))), min((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-81.03, max(_GLF_IDENTITY(_GLF_IDENTITY(-81.03, _GLF_IDENTITY(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0))))), mix(float(_GLF_FUZZED(-6.9)), float(_GLF_IDENTITY(_GLF_IDENTITY(-81.03, _GLF_IDENTITY(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0))))), 1.0 * (_GLF_IDENTITY(-81.03, _GLF_IDENTITY(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)))))))), bool(true))), _GLF_IDENTITY(-81.03, _GLF_IDENTITY((-81.03) - sin(0.0), mix(float((-81.03) - sin(0.0)), float(_GLF_FUZZED(-1253.0837)), bool(false))))))) : _GLF_FUZZED(asinh(67.21))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-81.03, max(_GLF_IDENTITY(_GLF_IDENTITY(-81.03, _GLF_IDENTITY(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0))))), mix(float(_GLF_FUZZED(-6.9)), float(_GLF_IDENTITY(_GLF_IDENTITY(-81.03, _GLF_IDENTITY(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0))))), 1.0 * (_GLF_IDENTITY(-81.03, _GLF_IDENTITY(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)))))))), bool(true))), _GLF_IDENTITY(-81.03, _GLF_IDENTITY((-81.03) - sin(0.0), mix(float((-81.03) - sin(0.0)), float(_GLF_FUZZED(-1253.0837)), bool(false))))))) : _GLF_FUZZED(asinh(67.21)))))) : 85.30))))) + 0.0)), (_GLF_IDENTITY(float(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), _GLF_IDENTITY((true ? float(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(1.0), (float(1.0)) - 0.0), float(_GLF_FUZZED(4.1)), bool(false)), (mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED(4.1)), mix(float(_GLF_FUZZED(-47.10)), float(_GLF_IDENTITY(float(_GLF_FUZZED(4.1)), mix(float(_GLF_FUZZED(2643.0302)), float(float(_GLF_FUZZED(4.1))), bool(true)))), bool(true))), bool(false))) / 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), min(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(85.30, (false ? _GLF_IDENTITY(_GLF_FUZZED(-81.03), float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(-81.03), 1.0, cos(0.0), sin(0.0), 1.0, 0.0, 1.0, 0.0), (mat4x2(_GLF_FUZZED(-81.03), 1.0, cos(0.0), sin(0.0), 1.0, 0.0, 1.0, 0.0)) * mat4(1.0)))) : 85.30)))), ((true ? float(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(4.1)), bool(false)), (mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(4.1)), bool(false))) / 1.0), 0.0 + (_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(4.1)), bool(false)), (mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, cos(0.0), 0.0, 0.0, 0.0, sqrt(0.0), sin(0.0)), (mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, cos(0.0), 0.0, 0.0, 0.0, sqrt(0.0), sin(0.0))) * mat2(1.0))))), float(_GLF_FUZZED(4.1)), bool(false))) / 1.0)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), max(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), min(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(2323.1841))))))), 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(85.30, (false ? _GLF_IDENTITY(_GLF_FUZZED(-81.03), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-81.03, max(_GLF_IDENTITY(_GLF_IDENTITY(-81.03, _GLF_IDENTITY(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0))))), mix(float(_GLF_FUZZED(-6.9)), float(_GLF_IDENTITY(_GLF_IDENTITY(-81.03, _GLF_IDENTITY(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0))))), 1.0 * (_GLF_IDENTITY(-81.03, _GLF_IDENTITY(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)))))))), bool(true))), _GLF_IDENTITY(-81.03, _GLF_IDENTITY((-81.03) - sin(0.0), mix(float((-81.03) - sin(0.0)), float(_GLF_FUZZED(-1253.0837)), bool(false))))))) : _GLF_FUZZED(asinh(67.21))), min((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-81.03, max(_GLF_IDENTITY(_GLF_IDENTITY(-81.03, _GLF_IDENTITY(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0))))), mix(float(_GLF_FUZZED(-6.9)), float(_GLF_IDENTITY(_GLF_IDENTITY(-81.03, _GLF_IDENTITY(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0))))), 1.0 * (_GLF_IDENTITY(-81.03, _GLF_IDENTITY(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)))))))), bool(true))), _GLF_IDENTITY(-81.03, _GLF_IDENTITY((-81.03) - sin(0.0), mix(float((-81.03) - sin(0.0)), float(_GLF_FUZZED(-1253.0837)), bool(false))))))) : _GLF_FUZZED(asinh(67.21))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-81.03, max(_GLF_IDENTITY(_GLF_IDENTITY(-81.03, _GLF_IDENTITY(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0))))), mix(float(_GLF_FUZZED(-6.9)), float(_GLF_IDENTITY(_GLF_IDENTITY(-81.03, _GLF_IDENTITY(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0))))), 1.0 * (_GLF_IDENTITY(-81.03, _GLF_IDENTITY(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)))))))), bool(true))), _GLF_IDENTITY(-81.03, _GLF_IDENTITY((-81.03) - sin(0.0), mix(float((-81.03) - sin(0.0)), float(_GLF_FUZZED(-1253.0837)), bool(false))))))) : _GLF_FUZZED(asinh(67.21)))))) : 85.30))))) + 0.0))) - tan(0.0)), _GLF_IDENTITY(float(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), _GLF_IDENTITY((true ? float(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(1.0), (float(1.0)) - 0.0), float(_GLF_FUZZED(4.1)), bool(false)), (mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED(4.1)), mix(float(_GLF_FUZZED(-47.10)), float(_GLF_IDENTITY(float(_GLF_FUZZED(4.1)), mix(float(_GLF_FUZZED(2643.0302)), float(float(_GLF_FUZZED(4.1))), bool(true)))), bool(true))), bool(false))) / 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), min(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(85.30, (false ? _GLF_IDENTITY(_GLF_FUZZED(-81.03), float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(-81.03), 1.0, cos(0.0), sin(0.0), 1.0, 0.0, 1.0, 0.0), (mat4x2(_GLF_FUZZED(-81.03), 1.0, cos(0.0), sin(0.0), 1.0, 0.0, 1.0, 0.0)) * mat4(1.0)))) : 85.30)))), ((true ? float(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(4.1)), bool(false)), (mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(4.1)), bool(false))) / 1.0), 0.0 + (_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(4.1)), bool(false)), (mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, cos(0.0), 0.0, 0.0, 0.0, sqrt(0.0), sin(0.0)), (mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, cos(0.0), 0.0, 0.0, 0.0, sqrt(0.0), sin(0.0))) * mat2(1.0))))), float(_GLF_FUZZED(4.1)), bool(false))) / 1.0)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), max(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), min(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(2323.1841))))))), 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(85.30, (false ? _GLF_IDENTITY(_GLF_FUZZED(-81.03), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-81.03, max(_GLF_IDENTITY(_GLF_IDENTITY(-81.03, _GLF_IDENTITY(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0))))), mix(float(_GLF_FUZZED(-6.9)), float(_GLF_IDENTITY(_GLF_IDENTITY(-81.03, _GLF_IDENTITY(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0))))), 1.0 * (_GLF_IDENTITY(-81.03, _GLF_IDENTITY(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)))))))), bool(true))), _GLF_IDENTITY(-81.03, _GLF_IDENTITY((-81.03) - sin(0.0), mix(float((-81.03) - sin(0.0)), float(_GLF_FUZZED(-1253.0837)), bool(false))))))) : _GLF_FUZZED(asinh(67.21))), min((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-81.03, max(_GLF_IDENTITY(_GLF_IDENTITY(-81.03, _GLF_IDENTITY(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0))))), mix(float(_GLF_FUZZED(-6.9)), float(_GLF_IDENTITY(_GLF_IDENTITY(-81.03, _GLF_IDENTITY(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0))))), 1.0 * (_GLF_IDENTITY(-81.03, _GLF_IDENTITY(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)))))))), bool(true))), _GLF_IDENTITY(-81.03, _GLF_IDENTITY((-81.03) - sin(0.0), mix(float((-81.03) - sin(0.0)), float(_GLF_FUZZED(-1253.0837)), bool(false))))))) : _GLF_FUZZED(asinh(67.21))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-81.03, max(_GLF_IDENTITY(_GLF_IDENTITY(-81.03, _GLF_IDENTITY(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0))))), mix(float(_GLF_FUZZED(-6.9)), float(_GLF_IDENTITY(_GLF_IDENTITY(-81.03, _GLF_IDENTITY(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0))))), 1.0 * (_GLF_IDENTITY(-81.03, _GLF_IDENTITY(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(-81.03, 0.0, 1.0, 0.0, 0.0, 1.0)))))))), bool(true))), _GLF_IDENTITY(-81.03, _GLF_IDENTITY((-81.03) - sin(0.0), mix(float((-81.03) - sin(0.0)), float(_GLF_FUZZED(-1253.0837)), bool(false))))))) : _GLF_FUZZED(asinh(67.21)))))) : 85.30))))) + 0.0))))))) - mat3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(864.256)), bool(false))) : _GLF_FUZZED(sinh(inversesqrt(7522.5469)))), min(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(864.256)), bool(false))) : _GLF_FUZZED(sinh(inversesqrt(7522.5469)))), max((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(float(47860u))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(864.256)), bool(false))) : _GLF_FUZZED(sinh(inversesqrt(7522.5469)))), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(864.256)), bool(false))) : _GLF_FUZZED(sinh(inversesqrt(7522.5469)))))), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(864.256)), bool(false))) : _GLF_IDENTITY(_GLF_FUZZED(sinh(inversesqrt(7522.5469))), mix(float(_GLF_FUZZED(-7.0)), float(_GLF_FUZZED(sinh(inversesqrt(7522.5469)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ((true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(864.256)), bool(false))) : _GLF_IDENTITY(_GLF_FUZZED(sinh(inversesqrt(7522.5469))), mix(float(_GLF_FUZZED(-7.0)), float(_GLF_FUZZED(sinh(inversesqrt(7522.5469)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / _GLF_ONE(1.0, injectionSwitch.y))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), mat4x2(1.0), ivec4(1)), _GLF_struct_4(ivec3(1)), mat2x4(1.0)), _GLF_struct_10(workgroup_size * workgroup_id, _GLF_struct_6(bvec2(true)), mat3x4(1.0), vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-2.5, 5.6).y) : _GLF_IDENTITY(1.0, _GLF_ZERO(0.0, injectionSwitch.x) + (1.0)), (false ? _GLF_FUZZED(length(vec2(51.56, -5.4))) : false ? _GLF_FUZZED(vec2(-2.5, 5.6).y) : _GLF_IDENTITY(1.0, _GLF_ZERO(0.0, injectionSwitch.x) + _GLF_IDENTITY((1.0), min((_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.4)))), (1.0))))))))), _GLF_struct_7(mat2x4(1.0), vec3(1.0), mat2(1.0)), _GLF_struct_8(ivec3(1), vec4(_GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), clamp(max(1.0, 1.0), max(1.0, 1.0), _GLF_IDENTITY(max(1.0, 1.0), (false ? _GLF_FUZZED(4.4) : max(1.0, 1.0))))))), (_GLF_IDENTITY(0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), clamp(max(1.0, 1.0), max(1.0, 1.0), _GLF_IDENTITY(max(1.0, 1.0), (false ? _GLF_FUZZED(4.4) : max(1.0, 1.0))))))), max(0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), clamp(max(1.0, 1.0), max(1.0, 1.0), _GLF_IDENTITY(max(1.0, 1.0), (false ? _GLF_FUZZED(4.4) : max(1.0, 1.0))))))), _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), clamp(max(1.0, 1.0), max(1.0, 1.0), _GLF_IDENTITY(max(1.0, 1.0), (false ? _GLF_FUZZED(4.4) : max(1.0, 1.0))))))), float(float(0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), clamp(max(1.0, 1.0), max(1.0, 1.0), _GLF_IDENTITY(max(1.0, 1.0), (false ? _GLF_FUZZED(4.4) : max(1.0, 1.0))))))))))))) - 0.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(sqrt(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(sqrt(_GLF_ONE(1.0, injectionSwitch.y)), clamp(_GLF_IDENTITY(sqrt(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(sqrt(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - sqrt(0.0))) / 1.0), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-397.209))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-0.9) : float(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(true))), bool(false))), 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 1.0))))), abs(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.0))), length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), clamp(float(mat4x3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.0))), length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.0))), length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), (true ? float(mat4x3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.0))), length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)) : _GLF_FUZZED(596.012))), float(mat4x3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.0))), length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-0.9) : float(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 1.0))))), abs(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), (mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) / 1.0))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))), 0.0, 1.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-0.9) : float(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 1.0))))), abs(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))))))))), float(_GLF_FUZZED(-17.05)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(sqrt(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(sqrt(_GLF_ONE(1.0, injectionSwitch.y)), float(mat3x4(sqrt(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))) * 1.0, min((_GLF_IDENTITY(sqrt(_GLF_ONE(1.0, injectionSwitch.y)), float(mat3x4(sqrt(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))) * 1.0, (_GLF_IDENTITY(sqrt(_GLF_ONE(1.0, injectionSwitch.y)), float(mat3x4(sqrt(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))) * 1.0))), 1.0 * (_GLF_IDENTITY(sqrt(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(sqrt(_GLF_ONE(1.0, injectionSwitch.y)), float(mat3x4(sqrt(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))) * 1.0))), sqrt(_GLF_ONE(1.0, injectionSwitch.y))))) * 1.0), 0.0, 1.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat2x3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2x3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0))))))))), 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, sin(0.0), 1.0))), length(vec3(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), (_GLF_IDENTITY((0.0), ((0.0)) + 0.0)) / 1.0) / 1.0), 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), (false || (true)) && true)) ? 0.0 : _GLF_FUZZED(floor(-768.782)))), 1.0, 1.0, exp(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0, determinant(mat4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.8)), _GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))), 1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))) ? _GLF_FUZZED(3.5) : 1.0)), max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))) ? _GLF_FUZZED(3.5) : 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))) ? _GLF_FUZZED(3.5) : 1.0)), clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))) ? _GLF_FUZZED(3.5) : 1.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))) ? _GLF_FUZZED(3.5) : 1.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))) ? _GLF_FUZZED(3.5) : 1.0)))))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(-6.5), (_GLF_IDENTITY(_GLF_FUZZED(-6.5), (_GLF_FUZZED(-6.5)) / sqrt(1.0))) / 1.0) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), abs(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(vec4(vec4(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), 0.0, 1.0)), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)))))), _GLF_IDENTITY(vec4(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(vec4(vec4(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), 0.0, 1.0)), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(vec4(0.0, 0.0, 0.0, 1.0)))), vec4(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(vec4(vec4(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), 0.0, 1.0)), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(vec4(0.0, 0.0, 0.0, 1.0)))), vec4(mat3x2(_GLF_IDENTITY(vec4(vec4(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), 0.0, 1.0)), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(vec4(0.0, 0.0, 0.0, 1.0)))), 1.0, 1.0))))), 1.0, 0.0)), (false ? _GLF_FUZZED(vec4(-340.872, 46.19, 1.7, -4027.4943)) : vec4(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(vec4(vec4(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), 0.0, 1.0)), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0) + (_GLF_IDENTITY(vec4(vec4(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), 0.0, 1.0)), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(vec4(0.0, 0.0, 0.0, 1.0)))))), 1.0, 0.0))))))), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), mat4(1.0) * (vec4(0.0, 0.0, 0.0, 1.0)))) - sin(log(vec4(1.0, 1.0, 1.0, 1.0))))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(91.87)), bool(false))), 1.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), 0.0)), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((+ 6.9))), float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-70.74)), _GLF_IDENTITY(float(0.0), (false ? _GLF_FUZZED(-3.3) : float(0.0))), bool(true)))), bool(true))))), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(-24.42) : 1.0), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-24.42) : 1.0), ((false ? _GLF_FUZZED(-24.42) : 1.0)) + 0.0), (false ? _GLF_FUZZED(-24.42) : 1.0)))), 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + sqrt(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), 0.0), vec4(0.0, 0.0, 0.0, 1.0))), determinant(mat4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, log(1.0), 0.0))), 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0)), min(float(mat2x4(1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0)), float(mat2x4(1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0))))), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(-5.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0), clamp(vec3(1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, (0.0) / 1.0))), clamp(0.0, 0.0, 0.0)), 0.0)), 0.0), vec3(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), vec3(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, sqrt(1.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(-9924.8391))))), 0.0, 0.0, 0.0, 1.0))))))), _GLF_struct_9(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.1)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0))), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0))), 0.0)), min(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0))), 0.0)), (float(vec2(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0))), 0.0))) + 0.0), float(vec2(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0))), 0.0))))) / cos(0.0)))), bool(true))), mix(float(_GLF_FUZZED(-123.722)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.1)), float(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.5) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-566.352)), float(1.0), bool(true))))), float(mat3x4(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0))), 0.0), mix(vec2((vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.5) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-566.352)), float(1.0), bool(true))))), float(mat3x4(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0))), 0.0))[0], _GLF_IDENTITY((vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.5) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-566.352)), float(1.0), bool(true))))), float(mat3x4(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0))), 0.0))[1], float(mat3x4((vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.5) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-566.352)), float(1.0), bool(true))))), float(mat3x4(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0))), 0.0))[1], 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0)))), vec2(_GLF_FUZZED(-3.4), _GLF_FUZZED(-4.2)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), bool(true)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(1u, 0u ^ (1u))), _GLF_IDENTITY(ivec4(1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), max(ivec4(1), ivec4(1))), (_GLF_IDENTITY(ivec4(1), max(ivec4(1), ivec4(1)))) >> ivec4(0, 0, 0, 0)), ivec4(1), _GLF_IDENTITY(ivec4(1), (ivec4(1)) << ivec4(0, 0, 0, 0))))), 1, _GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) - 0u), 1u))), max(uvec4(1u), uvec4(_GLF_IDENTITY(1u, 0u + (1u))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(vec2(1429.2645, 35.92)))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false)))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false))))))))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), ! (! ((false)))), true, false, false)), (bool(bvec4(_GLF_IDENTITY((false), ! (! ((false)))), true, false, false))) || false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), ! (! ((false)))), true, false, false)), (bool(bvec4(_GLF_IDENTITY((false), ! (! ((false)))), true, false, false))) || false)), true && (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), ! (! ((false)))), true, false, false)), (bool(bvec4(_GLF_IDENTITY((false), ! (! ((false)))), true, false, false))) || false)))), false, false))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, false, true)), false)))))), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false), bvec2(bvec3(bvec2(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false), true))))))), false, false, true)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, sqrt(1.0) * (injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0))), 1.0, 0.0, length(vec4(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0))), 0.0, 0.0)), 1.0)), max(float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)), float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0 * (length(vec4(0.0, 0.0, 0.0, 0.0)))), 1.0)))))) - 0.0), mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(-1.3, clamp(-1.3, -1.3, -1.3))) : injectionSwitch.y), max(_GLF_IDENTITY((false ? _GLF_FUZZED(-1.3) : injectionSwitch.y), clamp((false ? _GLF_FUZZED(-1.3) : injectionSwitch.y), (false ? _GLF_FUZZED(-1.3) : injectionSwitch.y), (false ? _GLF_FUZZED(-1.3) : injectionSwitch.y))), (false ? _GLF_FUZZED(-1.3) : injectionSwitch.y))))), float(_GLF_FUZZED(27.92)), bool(false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false, true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))) && true)))) || false)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false, true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))) && true)))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), bool(bvec4(false, false, true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))).x, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))).x)) > injectionSwitch.y))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, true, true)), bvec3(bvec4(bvec3(bvec3(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (true), false), bvec2(bvec2(bvec2(! (true), false))))), ! (! (bool(_GLF_IDENTITY(bvec2(! (true), false), bvec2(bvec2(bvec2(! (true), false))))))))))))), true)), false)))))), true && (bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, true, true)), bvec3(bvec4(bvec3(bvec3(true, true, true)), false))))))))) && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false, bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false, bool(bvec3(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))).x > injectionSwitch.y))))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), false)), (bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), true, false))) && true))))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.7), _GLF_FUZZED(3.1)), vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-19.64) : (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch))).y))))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), true)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), true)))))))))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))).x > injectionSwitch.y))))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) || false), true, false, false)), _GLF_IDENTITY(bool(bool(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) || false), true, false, false)))), ! (! (bool(bool(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) || false), true, false, false))))))))), bool(bvec4(false, false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) || false), true, false, false)), _GLF_IDENTITY(bool(bool(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) || false), true, false, false)))), ! (! (bool(bool(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) || false), true, false, false))))))))), bool(bvec4(false, false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) || false), true, false, false)), _GLF_IDENTITY(bool(bool(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) || false), true, false, false)))), ! (! (bool(bool(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) || false), true, false, false))))))))), bool(bvec4(false, false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) || false), true, false, false)), _GLF_IDENTITY(bool(bool(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) || false), true, false, false)))), ! (! (bool(bool(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) || false), true, false, false))))))))), bool(bvec4(false, false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) || false), true, false, false)), _GLF_IDENTITY(bool(bool(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) || false), true, false, false)))), ! (! (bool(bool(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) || false), true, false, false))))))))), bool(bvec4(false, false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))) && true)))) || false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_size));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(787.181) : injectionSwitch.x))) + 0.0) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(acos(injectionSwitch)) : injectionSwitch)).y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7.8) : injectionSwitch.x)))))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(754.642)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7.0)))), bool(true))), float(mat4x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base, clamp(_GLF_struct_replacement_11._f3.workgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base, (true ? _GLF_struct_replacement_11._f3.workgroup_base : _GLF_FUZZED(workgroup_id))), _GLF_struct_replacement_11._f3.workgroup_base)) + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base, (false ? _GLF_FUZZED(subgroup_id) : _GLF_struct_replacement_11._f3.workgroup_base)), uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base, (false ? _GLF_FUZZED(subgroup_id) : _GLF_struct_replacement_11._f3.workgroup_base)), 0u))) + subgroup_base))))) + subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base, min(_GLF_struct_replacement_11._f3.workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec3(_GLF_IDENTITY(subgroup_base, 0u + (subgroup_base)), 1u, 0u))), _GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base, (false ? _GLF_FUZZED(subgroup_id) : _GLF_struct_replacement_11._f3.workgroup_base)) + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(105565u) : _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))))))))) + subgroup_local_id) ^ 0u);
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base, min(_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base, _GLF_struct_replacement_11._f3.workgroup_base + subgroup_base)) + ((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(float(1.0))))), 0.0, 1.0, _GLF_IDENTITY(cos(0.0), clamp(_GLF_IDENTITY(cos(0.0), mix(float(cos(0.0)), float(_GLF_FUZZED(-116.848)), bool(false))), cos(0.0), _GLF_IDENTITY(cos(0.0), min(cos(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8.8) : 0.0))), cos(0.0))))), abs(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0))))), exp(0.0), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))).y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read = 0;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false)))) || false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (64) / 1), _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), clamp(_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, 0 | (4)))), 4, 4))) | (4)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     barrier();
    }
   read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), max(atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) + 0u)));
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-62.60, -2467.3485))))) - vec2(0.0, 0.0)).x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)))) && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), ! (! ((false)))))), bool(bool((! (_GLF_IDENTITY((false), ! (! ((false))))))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), _GLF_IDENTITY((bool(bvec4(false, false, true, true))) || false, ((bool(bvec4(false, false, true, true))) || false) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true)))), true)))), (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true)))), true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true)))), true)))), (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true)))), true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true)))), true)))), (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true)))), true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true, false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(71.92), _GLF_FUZZED(float(-73156))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch)).y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   _GLF_IDENTITY(read = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, 0u | (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 1u)))) * 1u))), virtual_gid)), (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), max(virtual_gid, virtual_gid)) : _GLF_FUZZED(workgroup_size)))], _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, 0 ^ (4))) ^ (-87052 & 0), clamp((_GLF_IDENTITY(4, 0 ^ (4))) ^ (-87052 & 0), _GLF_IDENTITY((_GLF_IDENTITY(4, 0 ^ (4))) ^ (-87052 & 0), ((_GLF_IDENTITY(4, 0 ^ (4))) ^ (-87052 & 0)) - 0), (_GLF_IDENTITY(4, 0 ^ (4))) ^ (-87052 & 0)))), 64, 2), 0u | (_GLF_IDENTITY(read = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, 0u | _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 1u)))) * 1u)), ((_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 1u)))) * 1u))) | ((_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 1u)))) * 1u))))), virtual_gid)), (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), max(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(num_workgroup))), virtual_gid)) : _GLF_FUZZED(workgroup_size)))], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 ^ (4))) ^ (-87052 & 0)), 64, 2), ~ (~ (read = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, 0u | (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 1u)))) * 1u))), virtual_gid)), (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && true) && true) ? _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) / 1u)), max(virtual_gid, virtual_gid)) : _GLF_FUZZED(workgroup_size)))], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 ^ (4))) ^ (-87052 & 0)), 64, 2))))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))) && true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(virtual_gid, _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(clamp(virtual_gid, virtual_gid, virtual_gid), (_GLF_IDENTITY(clamp(virtual_gid, virtual_gid, virtual_gid), (_GLF_IDENTITY(clamp(virtual_gid, virtual_gid, virtual_gid), clamp(clamp(virtual_gid, virtual_gid, virtual_gid), clamp(virtual_gid, virtual_gid, virtual_gid), clamp(virtual_gid, virtual_gid, virtual_gid)))) | (_GLF_IDENTITY(clamp(virtual_gid, virtual_gid, virtual_gid), min(clamp(virtual_gid, virtual_gid, virtual_gid), clamp(virtual_gid, virtual_gid, virtual_gid)))))) | (clamp(virtual_gid, virtual_gid, virtual_gid))))), min(_GLF_IDENTITY(max(virtual_gid, _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), 0u | (max(virtual_gid, _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))))), max(virtual_gid, _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)))))), _GLF_IDENTITY((false ? _GLF_FUZZED(133908u) : virtual_gid), ((false ? _GLF_FUZZED(133908u) : virtual_gid)) - 0u)) : _GLF_IDENTITY(_GLF_FUZZED(atomicExchange(read, _GLF_IDENTITY(subgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_local_id)))) << 0u), subgroup_base)))), (_GLF_FUZZED(atomicExchange(read, _GLF_IDENTITY(subgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_local_id)))) << 0u), subgroup_base))))) >> 0u)))], _GLF_IDENTITY(read, 0u + (read)), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, log(1.0), 1.0, 1.0, 1.0, 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(0.0, log(1.0), 1.0, 1.0, 1.0, 0.0))))), 1.0, cos(_GLF_IDENTITY(0.0, (0.0) / determinant(mat3(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0)))), 1.0), mat2(_GLF_IDENTITY(mat4x2(mat2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, log(1.0), 1.0, 1.0, 1.0, 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(0.0, log(1.0), 1.0, 1.0, 1.0, 0.0))))), 1.0, cos(0.0), 1.0)), transpose(transpose(mat4x2(mat2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, log(1.0), 1.0, 1.0, 1.0, 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(0.0, log(1.0), 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), (true ? mat2(1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2(3.2, -863.420, 672.012, 9.6)))))), 1.0, 0.0))))), 1.0, cos(0.0), 1.0))))))))), 0.0)).y))), false || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(9.1))) > injectionSwitch.y), true, _GLF_IDENTITY(false, bool(bvec2(false, false))), true)), bool(bool(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(false, bool(bvec2(false, false))), true))))), _GLF_IDENTITY(bool(bvec3(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)), true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))), ! (! (bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(bool((injectionSwitch.x > injectionSwitch.y)), true, true)))), true && (bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(bool((injectionSwitch.x > injectionSwitch.y)), true, true))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) || false), true, true)))), true && (bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1.0) : injectionSwitch.y)))), bool(bvec3(bool((injectionSwitch.x > injectionSwitch.y)), true, true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)), true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), false))))))))), ((! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), false)))))))))) && true))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
}
