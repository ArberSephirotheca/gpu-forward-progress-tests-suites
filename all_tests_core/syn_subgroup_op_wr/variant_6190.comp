#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))) || false), (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false)))) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false)) && true)))))
      return;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY(1 ^ 0, clamp(1 ^ 0, 1 ^ 0, 1 ^ 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))))), false))) || false)), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec3(bool(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(bool(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false)))))))), true && (bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), (bool(false)) && true)))), true && (bool(_GLF_IDENTITY(bool(false), true && (bool(_GLF_IDENTITY(false, (false) || false)))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false))))))))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(53.63, -94.05).g), _GLF_FUZZED(19.10)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)))))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))))), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)), (float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0))) * 1.0))))) || false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (true ? injectionSwitch.y : _GLF_FUZZED(-8577.1012))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (true ? injectionSwitch.y : _GLF_FUZZED(-8577.1012))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) || false))))
      barrier();
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(mix(54.09, 66.26, -4362.6579))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y) || false)), ! (! (bool(bool((injectionSwitch.x > injectionSwitch.y) || false))))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), (_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), false || (bool(false)))))) || false))))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), false || (bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))) || false), false || _GLF_IDENTITY((bool(bool(false))), ! (! ((bool(bool(false)))))))) || false)))))), bool(bool(bool(bool(false))))), true, true))))))) || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)) && _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true)))), ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))))) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))), _GLF_IDENTITY(true, (true) || false), true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), (_GLF_IDENTITY(bool(false), (bool(false)) || false)) || false))))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))), true, true))))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))), true, true))))))))))), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(bool(false))))), (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))) || false)))), bool(bool(bool(bool(false))))), true, true))))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(bool(bool(false))))), true, true)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))) || false), bool(bool(bool(bool(false))))), true, true)))), ! (! (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))) || false), bool(bool(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))))), true, true)))), (! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))) || false), bool(bool(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))))), true, _GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))))))) && _GLF_IDENTITY(true, bool(bvec3(true, true, true))))))), true && (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))) || false), bool(bool(bool(bool(false))))), true, true)))), ! (! (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), (_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), ! (! ((_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))))) || false) || _GLF_IDENTITY(false, false || (false))), bool(bool(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))))), true, true)))), (! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))) || false), bool(bool(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))))), true, _GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))))))) && _GLF_IDENTITY(true, bool(bvec3(true, true, true)))))))))))) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-0.7) : injectionSwitch.y, (false ? _GLF_FUZZED(-0.7) : injectionSwitch.y) - 0.0))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0))).y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))), true, true, false)))) && true))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(vec4(-594.066, -9718.2318, -6847.4823, -517.650).g), _GLF_FUZZED(879.732)), bvec2(false, false))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bvec4(bool(bvec2(_GLF_DEAD(false), false)), true, true, true)))))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false))))))))))), false || ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false))))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false))))))))))), false || ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false))))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false))))))))))), false || ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false))))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false))))))))))), false || ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false))))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false, false)))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false))))))))))), false || ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false))))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false))))))))))), false || ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false))))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false))))))))))), false || ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(injectionSwitch.y), bool(true))), true, false), false))))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false, false))))))))) && _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), true && ((false))))))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) / int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), max(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(0.0, 0.0))).y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), max(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), max(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((injectionSwitch)) : injectionSwitch)).y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, injectionSwitch.y, injectionSwitch.y)))) + abs(0.0)), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), transpose(transpose(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, injectionSwitch.y, injectionSwitch.y))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)))), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), clamp(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), (false ? _GLF_FUZZED(536.108) : _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), mix(float(length(normalize(vec3(1.0, 1.0, 1.0)))), float(_GLF_FUZZED(-60.52)), bool(false)))), 1.0, 0.0), (mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0))))))))))), int(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-54665)))))), ((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, min(2, 2))))) >> 0), _GLF_IDENTITY((2), 0 | (_GLF_IDENTITY((2), ((2)) >> (0 >> _GLF_IDENTITY(int(5), int(5)))))) | 0))), ~ (_GLF_IDENTITY(~ (2), ~ _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, (2) | 0), 1, 0))), (2) >> 0), _GLF_IDENTITY(2, max(2, 2)), 2))))), ((~ (~ (2)))) - 0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), (_GLF_IDENTITY(~ (2), min(~ (2), ~ (2)))) / 1))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(bitCount(121476u))))), ~ (~ (~ (2))))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(bitCount(121476u))))), ~ (~ (~ (2)))))) ^ 0)), _GLF_IDENTITY(2, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (2), _GLF_IDENTITY(~ (~ (~ (2))), (~ (~ (~ (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(28098) : _GLF_IDENTITY(2, _GLF_IDENTITY((2) / 1, (_GLF_IDENTITY((2) / 1, int(ivec2((2) / 1, (0 | 0))))) / 1)))))))) | (~ (~ (~ (2))))))), int(_GLF_IDENTITY(int((_GLF_IDENTITY(~ (2), _GLF_IDENTITY(~ (~ (~ (2))), (~ (~ (~ (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(28098) : _GLF_IDENTITY(2, _GLF_IDENTITY((2) / 1, (_GLF_IDENTITY((2) / 1, int(ivec2((2) / 1, (0 | 0))))) / 1)))))))) | (~ (~ (~ (2)))))))), 0 | (int((_GLF_IDENTITY(~ (2), _GLF_IDENTITY(~ (~ (~ (2))), (~ (~ (~ (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(28098) : _GLF_IDENTITY(2, _GLF_IDENTITY((2) / 1, (_GLF_IDENTITY((2) / 1, int(ivec2((2) / 1, (0 | 0))))) / 1)))))))) | (~ (~ (~ (2)))))))))))))))), int(_GLF_IDENTITY(2, _GLF_IDENTITY((false ? _GLF_FUZZED(74521) : 2), ((false ? _GLF_FUZZED(74521) : 2)) | 0)))))) >> 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (false ? _GLF_FUZZED(_injected_loop_counter) : 3))) << (-57346 & 0))), int(3))) * _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-66119) : 1)))))) >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(3, (3) | (_GLF_IDENTITY(3, (_GLF_IDENTITY(3, clamp(3, 3, 3))) << 0)))), max(~ (_GLF_IDENTITY(3, (3) | _GLF_IDENTITY((_GLF_IDENTITY(3, (3) << _GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), ~ (_GLF_IDENTITY(~ (max(0, 0)), clamp(~ (max(0, 0)), ~ (max(0, 0)), ~ (max(0, 0))))))))), ((_GLF_IDENTITY(3, (3) << _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))), max(0, 0))))) | ((_GLF_IDENTITY(3, (3) << _GLF_IDENTITY(0, max(0, 0)))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(3, _GLF_IDENTITY((3), ((3)) / 1) | (_GLF_IDENTITY(3, (3) << 0)))), (~ (_GLF_IDENTITY(3, (3) | _GLF_IDENTITY((_GLF_IDENTITY(3, (3) << 0)), ((_GLF_IDENTITY(3, (3) << 0))) - (0 << _GLF_IDENTITY(int(3), int(3))))))) | 0)))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(3, _GLF_IDENTITY((3) | (_GLF_IDENTITY(3, (3) << 0)), (false ? _GLF_FUZZED(83664) : _GLF_IDENTITY((3) | (_GLF_IDENTITY(3, (3) << 0)), _GLF_IDENTITY(((3) | (_GLF_IDENTITY(3, (3) << 0))) | ((3) | (_GLF_IDENTITY(3, (3) << 0))), (false ? _GLF_FUZZED(bitfieldInsert(_injected_loop_counter, _injected_loop_counter, -94789, 59953)) : ((3) | (_GLF_IDENTITY(3, (3) << 0))) | ((3) | (_GLF_IDENTITY(3, (3) << 0))))))))), (_GLF_IDENTITY(3, _GLF_IDENTITY((3) | (_GLF_IDENTITY(3, (3) << 0)), (false ? _GLF_FUZZED(83664) : _GLF_IDENTITY((3) | (_GLF_IDENTITY(3, (3) << 0)), _GLF_IDENTITY(((3) | (_GLF_IDENTITY(3, (3) << 0))) | ((3) | (_GLF_IDENTITY(3, (3) << 0))), (false ? _GLF_FUZZED(bitfieldInsert(_injected_loop_counter, _injected_loop_counter, -94789, 59953)) : ((3) | (_GLF_IDENTITY(3, (3) << 0))) | ((3) | (_GLF_IDENTITY(3, (3) << 0)))))))))) << 0)), max(~ (_GLF_IDENTITY(3, (3) | (_GLF_IDENTITY(3, (3) << 0)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | (_GLF_IDENTITY(3, min(3, 3)))), (3) | _GLF_IDENTITY((_GLF_IDENTITY(3, (3) << 0)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, 0 | (3)), 3)), (3) << 0)), ((_GLF_IDENTITY(3, (3) << 0))) - 0), (_GLF_IDENTITY(3, (3) << 0)), (_GLF_IDENTITY(3, (3) << 0)))))), (~ (_GLF_IDENTITY(3, (_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(3, (3) | 0)), clamp(~ (_GLF_IDENTITY(3, (3) | 0)), ~ (_GLF_IDENTITY(3, (3) | 0)), ~ (_GLF_IDENTITY(3, (3) | 0))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(3, (3) / (1 & 1)), (3) << 0))))) | 0))))) / _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec2(1, 0))), 1))))))))))); _GLF_IDENTITY(_injected_loop_counter ++, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_injected_loop_counter ++)))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))
        {
         return;
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       continue;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), (bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) && true)), false || (! (_GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), (bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) && true))))))))))
      return;
     if(_GLF_DEAD(false))
      continue;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(ivec2(8265, -1966)[1]))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      break;
    }
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))) * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)) | (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id) ^ 0u, (35547u & (0u ^ 0u)) + ((subgroup_id) ^ 0u)), ((subgroup_id) ^ 0u) / 1u))) / 1u) * subgroup_size), 0u | (_GLF_IDENTITY(0u, min(0u, 0u)) | (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) * 1u) ^ 0u, (_GLF_IDENTITY((subgroup_id) ^ _GLF_IDENTITY(0u, (0u) - 0u), ((subgroup_id) ^ _GLF_IDENTITY(0u, (0u) - 0u)) - 0u)) / 1u))) / 1u) * subgroup_size))))))) - _GLF_IDENTITY(0u, (0u) | (0u))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8.5)), bool(false))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), max(_GLF_IDENTITY(uint(uint(subgroup_local_id)), 0u | (_GLF_IDENTITY(uint(uint(subgroup_local_id)), (uint(uint(subgroup_local_id))) + 0u))), uint(uint(subgroup_local_id)))))) - (0u << _GLF_IDENTITY(uint(8u), uint(8u)))) + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(clamp(-82767, -81445, 71366)) : _GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, ~ (~ (0)))))), 1))) % _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | 0u)), 0u + ((~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | 0u))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, max(1, 1))))), clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(47317) : 1), ~ (~ (_GLF_IDENTITY((false ? _GLF_FUZZED(47317) : 1), clamp((false ? _GLF_FUZZED(47317) : 1), (false ? _GLF_FUZZED(47317) : 1), (false ? _GLF_FUZZED(47317) : 1))))))), 1))), (uint(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(47317) : _GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(false ? _GLF_FUZZED(47317) : _GLF_IDENTITY(1, (1) | (1)), clamp(false ? _GLF_FUZZED(47317) : _GLF_IDENTITY(1, (1) | (1)), false ? _GLF_FUZZED(47317) : _GLF_IDENTITY(1, (1) | (1)), false ? _GLF_FUZZED(47317) : _GLF_IDENTITY(1, (1) | (1))))) | 0)), ((_GLF_IDENTITY(false ? _GLF_FUZZED(47317) : _GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(false ? _GLF_FUZZED(47317) : _GLF_IDENTITY(1, (1) | (1)), clamp(false ? _GLF_FUZZED(47317) : _GLF_IDENTITY(1, (1) | (1)), false ? _GLF_FUZZED(47317) : _GLF_IDENTITY(1, (1) | (1)), false ? _GLF_FUZZED(47317) : _GLF_IDENTITY(1, (1) | (1))))) | 0))) >> 0)), 1)))) ^ (0u ^ 0u)), _GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, ~ (~ (64))), 64)), (_GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), min(~ (64), _GLF_IDENTITY(_GLF_IDENTITY(~ (64), int(ivec3(_GLF_IDENTITY(~ (64), (~ (64)) * ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))), ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1))), (0 & -41169)))), (_GLF_IDENTITY(~ (64), min(~ (64), ~ (64)))) ^ 0))))), 64)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, _GLF_IDENTITY(~ (~ (64)), (false ? _GLF_FUZZED(-27851) : _GLF_IDENTITY(~ (~ (64)), 0 ^ (_GLF_IDENTITY(~ (~ (64)), (false ? _GLF_FUZZED(35276) : ~ (~ (64))))))))), 64)))), clamp(int(int(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), max(_GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), (_GLF_IDENTITY(64, ~ (~ (64)))) / 1))), 64)))), int(int(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, ~ (~ (64))), 64)))), int(int(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (64)), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, clamp(64, 64, 64)))))), max((~ (64)), (~ (64)))), (~ (64))))), 64)))))))) | (_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, ~ (~ (64))), 64))))) ^ _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-77948)))), 4);
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true)) && true))
    barrier();
  }
 else
  {
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) - (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : (virtual_gid) - (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))))], (false ? _GLF_FUZZED(subgroup_local_id) : buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)])), 4, _GLF_IDENTITY(64, (64) | 0), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   do
    {
     if(subgroup_local_id + 1 < subgroup_size)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         continue;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         continue;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         continue;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        break;
       atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (4)))), (false ? _GLF_FUZZED(-53892) : (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4)))))))) >> (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(7), int(7))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (4)))), (false ? _GLF_FUZZED(-53892) : (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4)))))))) >> (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(7), int(7)))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (4)))), (false ? _GLF_FUZZED(-53892) : (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4)))))))) >> (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(7), int(7))))) << 0)))), 64, 4);
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                }
               else
                {
                }
              }
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))) || false), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))) || false)) || false))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
          break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7940.8733))) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          continue;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(509.833) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(509.833) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), true, true, false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         continue;
         if(_GLF_DEAD(false))
          barrier();
        }
       subgroupAll(false);
       if(_GLF_DEAD(false))
        break;
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true)) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true)), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true))))) && true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read, 0u | (read))), ~ (~ (~ (_GLF_IDENTITY(read, 0u | (read)))))))), 4, _GLF_IDENTITY(64, 0 + _GLF_IDENTITY((64), ~ (~ (_GLF_IDENTITY((64), min((64), (64))))))), 4);
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-2.8, -8433.5130))))) * vec2(1.0, 1.0)))).y, mix(float(_GLF_FUZZED(-3258.2583)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       subgroupAll(true);
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       break;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(log(vec2(1.0, 1.0)))).y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(log(vec2(1.0, 1.0)))).y)), false, true)))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, false, false)))) || false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) || false)))))
        barrier();
       return;
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
}
