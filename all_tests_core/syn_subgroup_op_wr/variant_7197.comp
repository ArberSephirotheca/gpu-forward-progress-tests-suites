#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_2 {
 mat4x3 _f0;
 bvec4 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 mat4x3 _f1;
 bvec2 _f2;
 vec2 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_0 {
 uint workgroup_size;
 float _f0;
 mat3x2 _f1;
 mat2 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_1 {
 ivec4 _f0;
 _GLF_struct_0 _f1;
} ;

struct _GLF_struct_4 {
 mat4x2 _f0;
 vec3 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_3 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.7), _GLF_FUZZED(108.143)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), ivec4(0, 0, 0, 0) ^ (ivec4(1, 0, 0, 0)))), min(int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), ivec4(0, 0, 0, 0) ^ (ivec4(1, 0, 0, 0)))), int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), ivec4(0, 0, 0, 0) ^ (ivec4(1, 0, 0, 0)))))))))]), bvec2(true, true))).y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.7), _GLF_FUZZED(108.143)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), ivec4(0, 0, 0, 0) ^ (ivec4(1, 0, 0, 0)))), min(int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), ivec4(0, 0, 0, 0) ^ (ivec4(1, 0, 0, 0)))), int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), ivec4(0, 0, 0, 0) ^ (ivec4(1, 0, 0, 0)))))))))]), bvec2(true, true))).y)), true && (! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.7), _GLF_FUZZED(108.143)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), ivec4(0, 0, 0, 0) ^ (ivec4(1, 0, 0, 0)))), min(int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), ivec4(0, 0, 0, 0) ^ (ivec4(1, 0, 0, 0)))), int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), ivec4(0, 0, 0, 0) ^ (ivec4(1, 0, 0, 0)))))))))]), bvec2(true, true))).y)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), float(_GLF_FUZZED(3.4)), bool(false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(824.630))) < injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, true, false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9538.5862), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.1)), bvec2(true, false))).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9538.5862), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.1)), bvec2(true, false))).y))) || false)))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(4392.6959))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false, true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))) || false))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), false, false))))), (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bool((false)))), ! (! (! (false)))), true, false, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(mat4x2(1.0), _GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY((vec3(1.0)) * _GLF_IDENTITY(mat3(1.0), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.4)), float(injectionSwitch.y), bool(true))), round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.4)), float(injectionSwitch.y), bool(true))), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.4)), float(injectionSwitch.y), bool(true))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, 1.0), (mat4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.4)), float(injectionSwitch.y), bool(true))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)) * mat4(1.0)))))), injectionSwitch.y)))) ? _GLF_FUZZED((+ mat3(-0.2, _GLF_IDENTITY(9796.5027, _GLF_IDENTITY(0.0, (0.0) * 1.0) + (9796.5027)), 756.294, -84.76, -1.2, 991.340, -2.3, 8576.8019, -0.8))) : _GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0)))))), mix(vec3(_GLF_FUZZED(-5852.5258), ((vec3(1.0)) * _GLF_IDENTITY(mat3(1.0), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.8, -8.5))))) * vec2(1.0, 1.0)).y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.8, -8.5))))) * vec2(1.0, 1.0)).y), false), _GLF_IDENTITY(bvec2(bvec3(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.8, -8.5))))) * vec2(1.0, 1.0)).y), false), true)), bvec2(bvec2(bvec2(bvec3(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.8, -8.5))))) * vec2(1.0, 1.0)).y), false), true))))))))) ? _GLF_FUZZED((+ mat3(-0.2, 9796.5027, 756.294, -84.76, -1.2, 991.340, -2.3, 8576.8019, -0.8))) : _GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0)))))))[1], ((vec3(1.0)) * _GLF_IDENTITY(mat3(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((_GLF_IDENTITY(+ mat3(-0.2, 9796.5027, 756.294, -84.76, -1.2, 991.340, -2.3, 8576.8019, -0.8), (false ? _GLF_FUZZED((_GLF_IDENTITY(+ mat3(426.065, -1.7, 7547.5608, -5.4, -73.93, -25.32, -0.3, 0.4, 9.9), (+ mat3(426.065, -1.7, 7547.5608, -5.4, -73.93, -25.32, -0.3, 0.4, 9.9)) / mat3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) : + mat3(-0.2, 9796.5027, 756.294, -84.76, _GLF_IDENTITY(-1.2, min(-1.2, -1.2)), 991.340, -2.3, 8576.8019, -0.8))))) : _GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0)))))))[2]), vec3(((vec3(1.0)) * _GLF_IDENTITY(mat3(1.0), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED((+ mat3(-0.2, 9796.5027, _GLF_IDENTITY(756.294, mix(float(_GLF_FUZZED(8294.9932)), float(756.294), bool(true))), -84.76, -1.2, 991.340, -2.3, 8576.8019, -0.8))) : _GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(_GLF_IDENTITY(1.0, float(mat3(1.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))))))[0], _GLF_FUZZED(float(uvec2(62347u, 149603u).r)), _GLF_FUZZED(65.25)), _GLF_IDENTITY(bvec3(true, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, false, false)), bvec3(bvec3(bvec3(bvec3(true, false, false)))))))))), _GLF_struct_1(ivec4(1), _GLF_struct_0(gl_WorkGroupSize.x, 1.0, mat3x2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-2.3, 6175.3708, 84.46, 7.3)))), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(_GLF_IDENTITY(-2.3, clamp(_GLF_IDENTITY(-2.3, (false ? _GLF_FUZZED(-47.15) : -2.3)), _GLF_IDENTITY(-2.3, mix(float(_GLF_FUZZED(2.6)), float(-2.3), bool(true))), -2.3)), 6175.3708, 84.46, 7.3))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(true ? mat2(1.0) : _GLF_FUZZED(mat2(-2.3, 6175.3708, 84.46, 7.3)), mat2(mat4(_GLF_IDENTITY(true ? mat2(1.0) : _GLF_FUZZED(mat2(-2.3, 6175.3708, 84.46, 7.3)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(786.005, -188.492, 415.502, -9.1)) : true ? mat2(1.0) : _GLF_FUZZED(mat2(-2.3, 6175.3708, 84.46, 7.3))))))))), (false ? _GLF_FUZZED((+ mat2(0.6, 1081.7703, 174.496, 82.81))) : _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-2.3, 6175.3708, 84.46, 7.3)))), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-2.3, 6175.3708, 84.46, 7.3))))))))), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-2.3, 6175.3708, 84.46, 7.3)))))))) - mat2(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(0.1)), (_GLF_IDENTITY(float(_GLF_FUZZED(0.1)), min(float(_GLF_FUZZED(0.1)), float(_GLF_FUZZED(0.1))))) - 0.0), float(0.0), bool(true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7224.6723) : mix(float(_GLF_FUZZED(0.1)), float(0.0), bool(true))))), 0.0)), ivec4(1))), _GLF_struct_3(_GLF_struct_2(mat4x3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), (1.0) - _GLF_IDENTITY(0.0, float(float(0.0))))))), bvec4(true), _GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4x2(3.5, -260.878, -2.9, -95.60, 5.3, 3714.7227, -4284.5975, 7457.2915)) : mat4x2(1.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, 0.0))))), 1.0))) * (mat2(1.0)))), mat4x3(1.0), bvec2(true), vec2(1.0), _GLF_IDENTITY(uvec4(1u), clamp(_GLF_IDENTITY(uvec4(1u), min(uvec4(1u), _GLF_IDENTITY(uvec4(1u), uvec4(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u) | (uvec4(1u))))), _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | (uvec4(1u))), uvec4(1u)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0)))) * mat2(1.0)).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, true, false, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) || false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_DEAD(false)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), ! (! (bool(injectionSwitch.x < injectionSwitch.y))))))))))) && (_GLF_DEAD(false)), false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false))), false)))))))))
        barrier();
      }
    }
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.1, 6360.8596)))).x < injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))), true)))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))) < injectionSwitch.y)), true, true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))), true)))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))) < injectionSwitch.y)), true, true)))), true, false)), bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))), true)))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))) < injectionSwitch.y)), true, true)))), true, false)))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), true && (bool(bvec2(_GLF_DEAD(false), true))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), true && (! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))))), true))))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0)) - log(1.0))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), (vec2(vec4(injectionSwitch, 1.0, 1.0))) - vec2(0.0, 0.0))).y), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-877.130), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(79.44)), bvec2(true, false))))[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(839.330), _GLF_IDENTITY(_GLF_FUZZED(-9.7), float(_GLF_IDENTITY(mat4x3(_GLF_FUZZED(-9.7), 0.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), mat4x3(_GLF_IDENTITY(mat4x3(mat4x3(_GLF_FUZZED(-9.7), 0.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), transpose(transpose(mat4x3(mat4x3(_GLF_FUZZED(-9.7), 0.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))))))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), 0.0, 0.0))).y), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(839.330), _GLF_FUZZED(-9.7)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), 0.0, 0.0))).y), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(839.330), _GLF_FUZZED(-9.7)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), 0.0, 0.0))).y), false, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(839.330), max(_GLF_IDENTITY(_GLF_FUZZED(839.330), (_GLF_FUZZED(839.330)) * 1.0), _GLF_FUZZED(839.330))), _GLF_FUZZED(-9.7)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), 0.0, 0.0))).y), false, false)))), true))), false))), bvec3(bvec4(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(839.330), _GLF_FUZZED(-9.7)), bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false))) || false)), false)), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(839.330), _GLF_FUZZED(-9.7)), bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false)), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false))) || false, false || ((bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false))) || false)))), false))) + vec2(0.0, 0.0))), 0.0, 0.0))).y), false, false), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-877.130), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(79.44)), bvec2(true, false))))[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(839.330), _GLF_IDENTITY(_GLF_FUZZED(-9.7), float(_GLF_IDENTITY(mat4x3(_GLF_FUZZED(-9.7), 0.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), mat4x3(_GLF_IDENTITY(mat4x3(mat4x3(_GLF_FUZZED(-9.7), 0.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), transpose(transpose(mat4x3(mat4x3(_GLF_FUZZED(-9.7), 0.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))))))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), 0.0, 0.0))).y), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(839.330), _GLF_FUZZED(-9.7)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), 0.0, 0.0))).y), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(839.330), _GLF_FUZZED(-9.7)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), 0.0, 0.0))).y), false, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(839.330), max(_GLF_IDENTITY(_GLF_FUZZED(839.330), (_GLF_FUZZED(839.330)) * 1.0), _GLF_FUZZED(839.330))), _GLF_FUZZED(-9.7)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), 0.0, 0.0))).y), false, false)))), true))), false))), bvec3(bvec4(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(839.330), _GLF_FUZZED(-9.7)), bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false))) || false)), false)), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(839.330), _GLF_FUZZED(-9.7)), bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false)), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false))) || false, false || ((bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false))) || false)))), false))) + vec2(0.0, 0.0))), 0.0, 0.0))).y), false, false), true)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-877.130), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(79.44)), bvec2(true, false))))[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(839.330), _GLF_IDENTITY(_GLF_FUZZED(-9.7), float(_GLF_IDENTITY(mat4x3(_GLF_FUZZED(-9.7), 0.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), mat4x3(_GLF_IDENTITY(mat4x3(mat4x3(_GLF_FUZZED(-9.7), 0.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), transpose(transpose(mat4x3(mat4x3(_GLF_FUZZED(-9.7), 0.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))))))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), 0.0, 0.0))).y), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(839.330), _GLF_FUZZED(-9.7)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), 0.0, 0.0))).y), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(839.330), _GLF_FUZZED(-9.7)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), 0.0, 0.0))).y), false, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(839.330), max(_GLF_IDENTITY(_GLF_FUZZED(839.330), (_GLF_FUZZED(839.330)) * 1.0), _GLF_FUZZED(839.330))), _GLF_FUZZED(-9.7)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), 0.0, 0.0))).y), false, false)))), true))), false))), bvec3(bvec4(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(839.330), _GLF_FUZZED(-9.7)), bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false))) || false)), false)), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(839.330), _GLF_FUZZED(-9.7)), bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false)), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false))) || false, false || ((bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false))) || false)))), false))) + vec2(0.0, 0.0))), 0.0, 0.0))).y), false, false), true))))) || false)) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   else
    {
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u)))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / ((_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) - 0u), _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) | (1u)))), 1u)) : _GLF_FUZZED(num_workgroup)))), (uvec3(1u, 1u, _GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, (1u) << 0u))))) | (_GLF_IDENTITY(uvec3(1u, 1u, 1u), _GLF_IDENTITY((uvec3(1u, 1u, 1u)), max((uvec3(1u, 1u, 1u)), (uvec3(1u, 1u, 1u)))) | (uvec3(1u, 1u, 1u))))) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u))))) - uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), uint(_GLF_IDENTITY(uvec2((0u), 0u), (uvec2((0u), 0u)) | uvec2(0u, 0u)))))) << 0u)) / 1u), 0u)).x;
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_struct_replacement_4._f2._f1.workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), subgroup_id)) * subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), subgroup_id * subgroup_size, subgroup_id * subgroup_size), (clamp(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), ~ (~ (subgroup_id * subgroup_size))), subgroup_id * subgroup_size, subgroup_id * subgroup_size)) - 0u)), _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true) ? _GLF_FUZZED(subgroup_id) : subgroup_id * subgroup_size), (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : subgroup_id * subgroup_size), _GLF_IDENTITY(1u, max(1u, 1u)) * (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))), ((false ? _GLF_FUZZED(subgroup_id) : subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), min(_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))))) - 0u))) + 0u)))) >> 0u))) / 1u) + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) - 0u) | (subgroup_local_id));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))) && true)), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && _GLF_IDENTITY(true, (true) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))) && true)))
    barrier();
   barrier();
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, true, false, false))))) && true))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(false, ! (! (false))), false)), (_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, true, false, false))))) && true))))))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)) << _GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(1, clamp(1, 1, 1)) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, max(2, 2))) | (2))), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED((+ _injected_loop_counter)) : int(2))))) / 1), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) - 0)), (false ? _GLF_FUZZED(29264) : _GLF_IDENTITY(int(2), int(2))))) | _GLF_IDENTITY(0, min(0, 0)))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(ivec2(int(2), 0)))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))))))))), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0))).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0))).y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))))))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, 0.0))), sqrt(0.0))), vec2(_GLF_IDENTITY(mat3(vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.7) : _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0, 1.0, 1.0, 0.0, sqrt(0.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))).x, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)), (bool(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
              barrier();
            }
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
        barrier();
      }
    }
  }
 else
  {
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) : _GLF_FUZZED(162228u))), min(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) : _GLF_FUZZED(162228u))), _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) : _GLF_FUZZED(162228u))))), 0u | (subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) : _GLF_FUZZED(162228u))))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), uint(uvec2(clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)))), workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size), 1u))), 0u ^ (clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size, workgroup_base + subgroup_id * subgroup_size)))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u), (_GLF_IDENTITY(0u, (0u) * 1u)) ^ 0u)) | _GLF_IDENTITY(0u, (0u) << (0u ^ 0u)))));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ((true)) && true)))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  barrier();
 do
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(-17879) : int(1))))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, min(4, 4)))), clamp(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, min(4, 4)))), _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, min(4, 4)))), _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, min(4, 4)))))), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-39.15), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(-39.15), clamp(_GLF_FUZZED(-39.15), _GLF_FUZZED(-39.15), _GLF_FUZZED(-39.15))) : _GLF_FUZZED(7.2))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1.2)), bvec2(true, false)))) - vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3523.7189)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(true)))), _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x))).y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (_GLF_IDENTITY(! ((true) && true), ! (! (! ((true) && true))))))) && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), bool(bool((_GLF_DEAD(false)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) && true)) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bvec3(bool(bvec3(true, false, false)), true, true))))))))))) || false), (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) && true)) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false)))))))))) || false)) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))))))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
      }
     for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.1) : injectionSwitch.y))))))
    barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 do
  {
   if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), clamp(~ (~ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), ~ (~ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), uint(uvec2(~ (~ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), 0u))))))) ^ 0u)), min((_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), clamp((~ (subgroup_size)), (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u)), (~ (subgroup_size)))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(96916u))), subgroup_size)), ~ (~ (subgroup_size)))), max((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), 1u * ((~ (subgroup_size)))))))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) << _GLF_IDENTITY(0u, (0u) - 0u), (false ? _GLF_FUZZED((bvec4(true, false, true, false) , workgroup_base)) : (subgroup_size) << _GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, (0u) / 1u))))), _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), ~ (~ (subgroup_size))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(vec4(max(injectionSwitch, injectionSwitch), 1.0, 0.0)), vec2(vec2(vec2(vec4(max(injectionSwitch, injectionSwitch), 1.0, 0.0))))))))), exp(log(1.0))), (true ? _GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), exp(log(1.0))), clamp(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), exp(log(1.0))), vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), exp(log(_GLF_IDENTITY(1.0, (1.0) / 1.0)))), vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), exp(log(1.0))))) : _GLF_FUZZED(vec3(-644.865, 8997.3194, -3.7)))))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), true, true, false))))))
            barrier();
          }
        }
       else
        {
         atomicStore(checker[virtual_gid], read, 4, 64, 4);
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     subgroupAll(false);
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(2), int(2)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) | (_GLF_IDENTITY(0, ~ (~ (0)))))), (int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), 1 * (_GLF_IDENTITY((0), (_GLF_IDENTITY((0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(atomicMin(_injected_loop_counter, atomicMax(_injected_loop_counter, -91037))) : (0)))) >> 0)))))) | (0)))) | _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) | (0))), clamp(int(_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(_GLF_IDENTITY(~ (0), (~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))), ((_GLF_IDENTITY(0, (0) | (0)))) | ((_GLF_IDENTITY(0, (0) | (0)))))) / 1), ~ (0), ~ (0)))))) | (0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) - 0)), ((_GLF_IDENTITY(0, (0) - 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) - 0)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) - 0)), int(ivec2((_GLF_IDENTITY(0, (0) - 0)), 0))), 1)), 0 ^ (int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) - _GLF_IDENTITY(0, max(0, 0)))), int(ivec2((_GLF_IDENTITY(0, (0) - 0)), 0))), 1))))))), clamp(_GLF_IDENTITY(~ (0), (~ (0)) / 1), ~ (0), _GLF_IDENTITY(~ (0), 0 ^ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 1)))))))))) | (0))), ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(4))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) / 1))) * ((_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), _GLF_IDENTITY(clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((0), (true ? _GLF_IDENTITY((0), max(_GLF_IDENTITY((0), ((0)) ^ 0), (0))) : _GLF_FUZZED(58217))), (~ (0)) / 1), ~ (0), ~ (0)), max(clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((0), (true ? _GLF_IDENTITY((0), max(_GLF_IDENTITY((0), ((0)) ^ 0), (0))) : _GLF_FUZZED(58217))), (~ (0)) / 1), ~ (0), ~ (0)), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((0), (true ? _GLF_IDENTITY((0), max(_GLF_IDENTITY((0), ((0)) ^ 0), (0))) : _GLF_FUZZED(58217))), (~ (0)) / 1), ~ (0), ~ (0)))))))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) / 1)))))), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), ~ (0))))), ~ _GLF_IDENTITY((~ (0)), int(int(_GLF_IDENTITY((~ (0)), 0 + ((~ (0))))))))) | (0))), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), max(0, 0)))))) | (0)))))), 0 | ((_GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) | (0))), clamp(int(_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(_GLF_IDENTITY(~ (0), (~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))), ((_GLF_IDENTITY(0, (0) | (0)))) | ((_GLF_IDENTITY(0, (0) | (0)))))) / 1), ~ (0), ~ (0)))))) | (0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) - 0)), ((_GLF_IDENTITY(0, (0) - 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) - 0)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) - 0)), int(ivec2((_GLF_IDENTITY(0, (0) - 0)), 0))), 1)), 0 ^ (int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) - _GLF_IDENTITY(0, max(0, 0)))), int(ivec2((_GLF_IDENTITY(0, (0) - 0)), 0))), 1))))))), clamp(_GLF_IDENTITY(~ (0), (~ (0)) / 1), ~ (0), _GLF_IDENTITY(~ (0), 0 ^ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 1)))))))))) | (0))), ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(4))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) / 1))) * ((_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), _GLF_IDENTITY(clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((0), (true ? _GLF_IDENTITY((0), max(_GLF_IDENTITY((0), ((0)) ^ 0), (0))) : _GLF_FUZZED(58217))), (~ (0)) / 1), ~ (0), ~ (0)), max(clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((0), (true ? _GLF_IDENTITY((0), max(_GLF_IDENTITY((0), ((0)) ^ 0), (0))) : _GLF_FUZZED(58217))), (~ (0)) / 1), ~ (0), ~ (0)), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((0), (true ? _GLF_IDENTITY((0), max(_GLF_IDENTITY((0), ((0)) ^ 0), (0))) : _GLF_FUZZED(58217))), (~ (0)) / 1), ~ (0), ~ (0)))))))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) / 1)))))), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), ~ (0))))), ~ _GLF_IDENTITY((~ (0)), int(int(_GLF_IDENTITY((~ (0)), 0 + ((~ (0))))))))) | (0))), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), max(0, 0)))))) | (0))))))))), int(0))), _GLF_IDENTITY((((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(0), int(0)), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(0), int(0))) + 0)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) ^ 0))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), _GLF_IDENTITY(((0)), (((0))) << (0 >> _GLF_IDENTITY(int(0), int(0)))) | ((0)))))), int(int(_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), _GLF_IDENTITY(((0)), ((_GLF_IDENTITY((0), (false ? _GLF_FUZZED(60646) : (0))))) << (0 >> _GLF_IDENTITY(int(0), int(0)))) | ((0)))))), ((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), _GLF_IDENTITY(((0)), (((0))) << (0 >> _GLF_IDENTITY(int(0), int(0)))) | ((0))))))) ^ (0 << _GLF_IDENTITY(int(8), int(8))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (0)))), ((0)) | ((0)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | ((0))), (_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | ((0))), ((0)) | ((0)))) + (-5480 & 0)))), ~ (~ (_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | ((0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | ((0))), _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, ~ (~ (0))))) | _GLF_IDENTITY((_GLF_IDENTITY((0), _GLF_IDENTITY(((0)) | ((0)), ~ (~ (_GLF_IDENTITY(((0)) | ((0)), max(_GLF_IDENTITY(((0)) | ((0)), (((0)) | ((0))) - 0), ((0)) | ((0))))))))), (_GLF_IDENTITY((_GLF_IDENTITY((0), _GLF_IDENTITY(((0)) | ((0)), ~ (~ (_GLF_IDENTITY(((0)) | ((0)), max(_GLF_IDENTITY(((0)) | ((0)), (((0)) | ((0))) - 0), ((0)) | ((0))))))))), max(_GLF_IDENTITY((_GLF_IDENTITY((0), _GLF_IDENTITY(((0)) | ((0)), ~ (~ (_GLF_IDENTITY(((0)) | ((0)), max(_GLF_IDENTITY(((0)) | ((0)), (((0)) | ((0))) - 0), ((0)) | ((0))))))))), ((_GLF_IDENTITY((0), _GLF_IDENTITY(((0)) | ((0)), ~ (~ (_GLF_IDENTITY(((0)) | ((0)), max(_GLF_IDENTITY(((0)) | ((0)), (((0)) | ((0))) - 0), ((0)) | ((0)))))))))) | ((_GLF_IDENTITY((0), _GLF_IDENTITY(((0)) | ((0)), ~ (~ (_GLF_IDENTITY(((0)) | ((0)), max(_GLF_IDENTITY(((0)) | ((0)), (((0)) | ((0))) - 0), ((0)) | ((0))))))))))), (_GLF_IDENTITY((0), _GLF_IDENTITY(((0)) | ((0)), ~ (~ (_GLF_IDENTITY(((0)) | ((0)), max(_GLF_IDENTITY(((0)) | ((0)), (((0)) | ((0))) - 0), ((0)) | ((0)))))))))))) / 1)), ((0)) | ((0)))) + (-5480 & 0))))))))) - 0), _GLF_IDENTITY((_GLF_IDENTITY(0, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((0), ((_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), 0 | (~ (0))))))) | ((0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-62749) : ~ _GLF_IDENTITY((0), ((0)) | ((0)))))), min((_GLF_IDENTITY(~ _GLF_IDENTITY((0), ((_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), 0 | (~ (0))))))) | ((0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-62749) : ~ _GLF_IDENTITY((0), ((0)) | ((0)))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((0), ((_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), 0 | (~ (0))))))) | ((0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-62749) : ~ _GLF_IDENTITY((0), ((0)) | ((0)))))))))), clamp((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) | _GLF_IDENTITY(((0)), int(ivec3(_GLF_IDENTITY(((0)), clamp(((0)), ((0)), ((0)))), 1, 1))))))), (_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), min(_GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY(0, (0) | (0)))))) | ((0)))))), (_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))) | (0))), ((0)) | ((0)))))))))) | (0))), _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (0)))), (int(_GLF_IDENTITY(0, ~ (~ (0))))) >> 0)))) - 0, (_GLF_IDENTITY((((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY((int(0)) + 0, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), clamp(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), clamp(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0), int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))), int(_GLF_ONE(1.0, injectionSwitch.y)))) * ((int(0)) + 0)), (_GLF_IDENTITY((int(0)) + 0, int(_GLF_ONE(1.0, injectionSwitch.y)) * ((int(0)) + 0))) >> 0)))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) | _GLF_IDENTITY((_GLF_IDENTITY((0), (_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), (false ? _GLF_FUZZED(_injected_loop_counter) : (0)))))) ^ 0)), (true ? (_GLF_IDENTITY((0), ((0)) ^ 0)) : _GLF_FUZZED(77708))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * 1)) - 0)))), min(0, 0))), ((_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), 0)))) | ((0)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) | ((0))))), _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) | ((0)))))) - 0, 0 + ((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), _GLF_IDENTITY(((0)), (((0))) * 1) | ((0)))))) - 0))))) - 0), _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | ((0))), max(_GLF_IDENTITY((0), ((0)) | _GLF_IDENTITY(((0)), (_GLF_IDENTITY(((0)), max(((0)), ((0))))) >> 0)), _GLF_IDENTITY((0), ((0)) | ((0)))))))), clamp((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) | ((0)))))), (_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) | ((0)))))), (_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), ((_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) - 0) : _GLF_FUZZED(_injected_loop_counter))))) + (0 | 0)))), _GLF_IDENTITY((_GLF_IDENTITY((0), ((0)) | ((0)))) | (_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), min((0), (0))))), int(ivec2(_GLF_IDENTITY((0), ((0)) | ((0))), 0)))), int(ivec3(_GLF_IDENTITY((_GLF_IDENTITY((0), ((0)) | ((0)))) | (_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), min((0), (0))))), int(ivec2(_GLF_IDENTITY((0), ((0)) | ((0))), 0)))), ((_GLF_IDENTITY((0), ((0)) | ((0)))) | (_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), min((0), (0))))), int(ivec2(_GLF_IDENTITY((0), ((0)) | ((0))), 0))))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))))))))))) | (0), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) | _GLF_IDENTITY((_GLF_IDENTITY((0), (_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), (false ? _GLF_FUZZED(_injected_loop_counter) : (0)))))) ^ 0)), (true ? (_GLF_IDENTITY((0), ((0)) ^ 0)) : _GLF_FUZZED(77708))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * 1)) - 0)))), min(0, 0))), ((_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), 0)))) | ((0)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) | ((0))))), _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) | ((0)))))) - 0, 0 + ((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), _GLF_IDENTITY(((0)), (((0))) * 1) | ((0)))))) - 0))))) - 0), _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | ((0))), max(_GLF_IDENTITY((0), ((0)) | _GLF_IDENTITY(((0)), (_GLF_IDENTITY(((0)), max(((0)), ((0))))) >> 0)), _GLF_IDENTITY((0), ((0)) | ((0)))))))), clamp((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) | ((0)))))), (_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) | ((0)))))), (_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), ((_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) - 0) : _GLF_FUZZED(_injected_loop_counter))))) + (0 | 0)))), _GLF_IDENTITY((_GLF_IDENTITY((0), ((0)) | ((0)))) | (_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), min((0), (0))))), int(ivec2(_GLF_IDENTITY((0), ((0)) | ((0))), 0)))), int(ivec3(_GLF_IDENTITY((_GLF_IDENTITY((0), ((0)) | ((0)))) | (_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), min((0), (0))))), int(ivec2(_GLF_IDENTITY((0), ((0)) | ((0))), 0)))), ((_GLF_IDENTITY((0), ((0)) | ((0)))) | (_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), min((0), (0))))), int(ivec2(_GLF_IDENTITY((0), ((0)) | ((0))), 0))))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))))))))))) | (0), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) | _GLF_IDENTITY((_GLF_IDENTITY((0), (_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), (false ? _GLF_FUZZED(_injected_loop_counter) : (0)))))) ^ 0)), (true ? (_GLF_IDENTITY((0), ((0)) ^ 0)) : _GLF_FUZZED(77708))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * 1)) - 0)))), min(0, 0))), ((_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), 0)))) | ((0)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) | ((0))))), _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) | ((0)))))) - 0, 0 + ((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), _GLF_IDENTITY(((0)), (((0))) * 1) | ((0)))))) - 0))))) - 0), _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | ((0))), max(_GLF_IDENTITY((0), ((0)) | _GLF_IDENTITY(((0)), (_GLF_IDENTITY(((0)), max(((0)), ((0))))) >> 0)), _GLF_IDENTITY((0), ((0)) | ((0)))))))), clamp((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) | ((0)))))), (_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) | ((0)))))), (_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), ((_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) - 0) : _GLF_FUZZED(_injected_loop_counter))))) + (0 | 0)))), _GLF_IDENTITY((_GLF_IDENTITY((0), ((0)) | ((0)))) | (_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), min((0), (0))))), int(ivec2(_GLF_IDENTITY((0), ((0)) | ((0))), 0)))), int(ivec3(_GLF_IDENTITY((_GLF_IDENTITY((0), ((0)) | ((0)))) | (_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), min((0), (0))))), int(ivec2(_GLF_IDENTITY((0), ((0)) | ((0))), 0)))), ((_GLF_IDENTITY((0), ((0)) | ((0)))) | (_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), min((0), (0))))), int(ivec2(_GLF_IDENTITY((0), ((0)) | ((0))), 0))))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))))))))))) | (0))))) | (_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) | _GLF_IDENTITY((_GLF_IDENTITY((0), (_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), (false ? _GLF_FUZZED(_injected_loop_counter) : (0)))))) ^ 0)), (true ? (_GLF_IDENTITY((0), ((0)) ^ 0)) : _GLF_FUZZED(77708))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * 1)) - 0)))), min(0, 0))), ((_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), 0)))) | ((0)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) | ((0))))), _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) | ((0)))))) - 0, 0 + ((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), _GLF_IDENTITY(((0)), (((0))) * 1) | ((0)))))) - 0))))) - 0), _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | ((0))), max(_GLF_IDENTITY((0), ((0)) | _GLF_IDENTITY(((0)), (_GLF_IDENTITY(((0)), max(((0)), ((0))))) >> 0)), _GLF_IDENTITY((0), ((0)) | ((0)))))))), clamp((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) | ((0)))))), (_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) | ((0)))))), (_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), ((_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) - 0) : _GLF_FUZZED(_injected_loop_counter))))) + (0 | 0)))), _GLF_IDENTITY((_GLF_IDENTITY((0), ((0)) | ((0)))) | (_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), min((0), (0))))), int(ivec2(_GLF_IDENTITY((0), ((0)) | ((0))), 0)))), int(ivec3(_GLF_IDENTITY((_GLF_IDENTITY((0), ((0)) | ((0)))) | (_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), min((0), (0))))), int(ivec2(_GLF_IDENTITY((0), ((0)) | ((0))), 0)))), ((_GLF_IDENTITY((0), ((0)) | ((0)))) | (_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), min((0), (0))))), int(ivec2(_GLF_IDENTITY((0), ((0)) | ((0))), 0))))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))))))))))) | (0))))), _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (0)))), (int(_GLF_IDENTITY(0, ~ (~ (0))))) - 0)))), ((((int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) / 1.0), injectionSwitch.y)) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY((int(0)) + 0, int(_GLF_ONE(1.0, injectionSwitch.y)) * ((int(0)) + 0)), (_GLF_IDENTITY((int(0)) + 0, int(_GLF_ONE(1.0, injectionSwitch.y)) * ((int(0)) + 0))) >> 0)))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), (~ (~ (0))) / 1)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0), ((0)) | _GLF_IDENTITY((_GLF_IDENTITY((0), ((0)) ^ 0)), (true ? (_GLF_IDENTITY((0), ((0)) ^ 0)) : _GLF_FUZZED(77708)))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(~ _GLF_IDENTITY((0), ((0)) | _GLF_IDENTITY((_GLF_IDENTITY((0), ((0)) ^ 0)), (true ? (_GLF_IDENTITY((0), ((0)) ^ 0)) : _GLF_FUZZED(77708)))), ~ (~ (~ _GLF_IDENTITY((0), ((0)) | _GLF_IDENTITY((_GLF_IDENTITY((0), ((0)) ^ 0)), (true ? (_GLF_IDENTITY((0), ((0)) ^ 0)) : _GLF_FUZZED(77708))))))), 0, 1), _GLF_IDENTITY(ivec3(ivec3(ivec3(_GLF_IDENTITY(~ _GLF_IDENTITY((0), ((0)) | _GLF_IDENTITY((_GLF_IDENTITY((0), ((0)) ^ 0)), (true ? (_GLF_IDENTITY((0), ((0)) ^ 0)) : _GLF_FUZZED(77708)))), ~ (~ (~ _GLF_IDENTITY((0), ((0)) | _GLF_IDENTITY((_GLF_IDENTITY((0), ((0)) ^ 0)), (true ? (_GLF_IDENTITY((0), ((0)) ^ 0)) : _GLF_FUZZED(77708))))))), 0, 1))), ~ (~ (ivec3(ivec3(ivec3(_GLF_IDENTITY(~ _GLF_IDENTITY((0), ((0)) | _GLF_IDENTITY((_GLF_IDENTITY((0), ((0)) ^ 0)), (true ? (_GLF_IDENTITY((0), ((0)) ^ 0)) : _GLF_FUZZED(77708)))), ~ (~ (~ _GLF_IDENTITY((0), ((0)) | _GLF_IDENTITY((_GLF_IDENTITY((0), ((0)) ^ 0)), (true ? (_GLF_IDENTITY((0), ((0)) ^ 0)) : _GLF_FUZZED(77708))))))), 0, 1)))))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, min(0, 0))), ((_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), 0)))) | ((0)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) | ((0))))), _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((_GLF_IDENTITY(0, (0) - 0))) | ((0)))))) - 0, 0 + ((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) | ((0)))))) - 0))))) - 0), _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | ((0))), max(_GLF_IDENTITY((0), ((0)) | ((0))), _GLF_IDENTITY((0), ((0)) | ((0)))))))), clamp((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) | ((0)))))), (_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) | ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(int(uint(true))) : _GLF_IDENTITY(0, 0 ^ (0)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), ((0)) + (0 | 0)))), (_GLF_IDENTITY((0), ((0)) | ((0)))) | (_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), min((0), (0))))), int(ivec2(_GLF_IDENTITY((0), ((0)) | ((0))), 0))))))), (_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), ((0)) + (0 | 0)))), (_GLF_IDENTITY((0), ((0)) | ((0)))) | (_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), min((0), (0))))), int(ivec2(_GLF_IDENTITY((0), ((0)) | ((0))), 0)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), ((0)) + (0 | 0)))), (_GLF_IDENTITY((0), ((0)) | ((0)))) | (_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), min((0), (0))))), int(ivec2(_GLF_IDENTITY((0), ((0)) | ((0))), 0))))))), (_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), ((0)) + (0 | 0)))), (_GLF_IDENTITY((0), ((0)) | ((0)))) | (_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), min((0), (0))))), int(ivec2(_GLF_IDENTITY((0), ((0)) | ((0))), 0)))))))) ^ 0)))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0), ((0)) | _GLF_IDENTITY((_GLF_IDENTITY((0), ((0)) ^ 0)), (true ? (_GLF_IDENTITY((0), ((0)) ^ 0)) : _GLF_FUZZED(77708)))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(~ _GLF_IDENTITY((0), ((0)) | _GLF_IDENTITY((_GLF_IDENTITY((0), ((0)) ^ 0)), (true ? (_GLF_IDENTITY((0), ((0)) ^ 0)) : _GLF_FUZZED(77708)))), ~ (~ (~ _GLF_IDENTITY((0), ((0)) | _GLF_IDENTITY((_GLF_IDENTITY((0), ((0)) ^ 0)), (true ? (_GLF_IDENTITY((0), ((0)) ^ 0)) : _GLF_FUZZED(77708))))))), 0, 1), _GLF_IDENTITY(ivec3(ivec3(ivec3(_GLF_IDENTITY(~ _GLF_IDENTITY((0), ((0)) | _GLF_IDENTITY((_GLF_IDENTITY((0), ((0)) ^ 0)), (true ? (_GLF_IDENTITY((0), ((0)) ^ 0)) : _GLF_FUZZED(77708)))), ~ (~ (~ _GLF_IDENTITY((0), ((0)) | _GLF_IDENTITY((_GLF_IDENTITY((0), ((0)) ^ 0)), (true ? (_GLF_IDENTITY((0), ((0)) ^ 0)) : _GLF_FUZZED(77708))))))), 0, 1))), ~ (~ (ivec3(ivec3(ivec3(_GLF_IDENTITY(~ _GLF_IDENTITY((0), ((0)) | _GLF_IDENTITY((_GLF_IDENTITY((0), ((0)) ^ 0)), (true ? (_GLF_IDENTITY((0), ((0)) ^ 0)) : _GLF_FUZZED(77708)))), ~ (~ (~ _GLF_IDENTITY((0), ((0)) | _GLF_IDENTITY((_GLF_IDENTITY((0), ((0)) ^ 0)), (true ? (_GLF_IDENTITY((0), ((0)) ^ 0)) : _GLF_FUZZED(77708))))))), 0, 1)))))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, min(0, 0))), ((_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), 0)))) | ((0)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) | ((0))))), _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((_GLF_IDENTITY(0, (0) - 0))) | ((0)))))) - 0, 0 + ((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) | ((0)))))) - 0))))) - 0), _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | ((0))), max(_GLF_IDENTITY((0), ((0)) | ((0))), _GLF_IDENTITY((0), ((0)) | ((0)))))))), clamp((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) | ((0)))))), (_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) | ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(int(uint(true))) : _GLF_IDENTITY(0, 0 ^ (0)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), ((0)) + (0 | 0)))), (_GLF_IDENTITY((0), ((0)) | ((0)))) | (_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), min((0), (0))))), int(ivec2(_GLF_IDENTITY((0), ((0)) | ((0))), 0))))))), (_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), ((0)) + (0 | 0)))), (_GLF_IDENTITY((0), ((0)) | ((0)))) | (_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), min((0), (0))))), int(ivec2(_GLF_IDENTITY((0), ((0)) | ((0))), 0)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), ((0)) + (0 | 0)))), (_GLF_IDENTITY((0), ((0)) | ((0)))) | (_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), min((0), (0))))), int(ivec2(_GLF_IDENTITY((0), ((0)) | ((0))), 0))))))), (_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), ((0)) + (0 | 0)))), (_GLF_IDENTITY((0), ((0)) | ((0)))) | (_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), min((0), (0))))), int(ivec2(_GLF_IDENTITY((0), ((0)) | ((0))), 0)))))))) ^ 0)))))))), _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0), ((0)) | _GLF_IDENTITY((_GLF_IDENTITY((0), ((0)) ^ 0)), (true ? (_GLF_IDENTITY((0), ((0)) ^ 0)) : _GLF_FUZZED(77708)))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(~ _GLF_IDENTITY((0), ((0)) | _GLF_IDENTITY((_GLF_IDENTITY((0), ((0)) ^ 0)), (true ? (_GLF_IDENTITY((0), ((0)) ^ 0)) : _GLF_FUZZED(77708)))), ~ (~ (~ _GLF_IDENTITY((0), ((0)) | _GLF_IDENTITY((_GLF_IDENTITY((0), ((0)) ^ 0)), (true ? (_GLF_IDENTITY((0), ((0)) ^ 0)) : _GLF_FUZZED(77708))))))), 0, 1), _GLF_IDENTITY(ivec3(ivec3(ivec3(_GLF_IDENTITY(~ _GLF_IDENTITY((0), ((0)) | _GLF_IDENTITY((_GLF_IDENTITY((0), ((0)) ^ 0)), (true ? (_GLF_IDENTITY((0), ((0)) ^ 0)) : _GLF_FUZZED(77708)))), ~ (~ (~ _GLF_IDENTITY((0), ((0)) | _GLF_IDENTITY((_GLF_IDENTITY((0), ((0)) ^ 0)), (true ? (_GLF_IDENTITY((0), ((0)) ^ 0)) : _GLF_FUZZED(77708))))))), 0, 1))), ~ (~ (ivec3(ivec3(ivec3(_GLF_IDENTITY(~ _GLF_IDENTITY((0), ((0)) | _GLF_IDENTITY((_GLF_IDENTITY((0), ((0)) ^ 0)), (true ? (_GLF_IDENTITY((0), ((0)) ^ 0)) : _GLF_FUZZED(77708)))), ~ (~ (~ _GLF_IDENTITY((0), ((0)) | _GLF_IDENTITY((_GLF_IDENTITY((0), ((0)) ^ 0)), (true ? (_GLF_IDENTITY((0), ((0)) ^ 0)) : _GLF_FUZZED(77708))))))), 0, 1)))))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, min(0, 0))), ((_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), 0)))) | ((0)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) | ((0))))), _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((_GLF_IDENTITY(0, (0) - 0))) | ((0)))))) - 0, 0 + ((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) | ((0)))))) - 0))))) - 0), _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | ((0))), max(_GLF_IDENTITY((0), ((0)) | ((0))), _GLF_IDENTITY((0), ((0)) | ((0)))))))), clamp((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) | ((0)))))), (_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) | ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(int(uint(true))) : _GLF_IDENTITY(0, 0 ^ (0)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), ((0)) + (0 | 0)))), (_GLF_IDENTITY((0), ((0)) | ((0)))) | (_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), min((0), (0))))), int(ivec2(_GLF_IDENTITY((0), ((0)) | ((0))), 0))))))), (_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), ((0)) + (0 | 0)))), (_GLF_IDENTITY((0), ((0)) | ((0)))) | (_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), min((0), (0))))), int(ivec2(_GLF_IDENTITY((0), ((0)) | ((0))), 0)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), ((0)) + (0 | 0)))), (_GLF_IDENTITY((0), ((0)) | ((0)))) | (_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), min((0), (0))))), int(ivec2(_GLF_IDENTITY((0), ((0)) | ((0))), 0))))))), (_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), ((0)) + (0 | 0)))), (_GLF_IDENTITY((0), ((0)) | ((0)))) | (_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), min((0), (0))))), int(ivec2(_GLF_IDENTITY((0), ((0)) | ((0))), 0)))))))) ^ 0)))))))), _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0), ((0)) | _GLF_IDENTITY((_GLF_IDENTITY((0), ((0)) ^ 0)), (true ? (_GLF_IDENTITY((0), ((0)) ^ 0)) : _GLF_FUZZED(77708)))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(~ _GLF_IDENTITY((0), ((0)) | _GLF_IDENTITY((_GLF_IDENTITY((0), ((0)) ^ 0)), (true ? (_GLF_IDENTITY((0), ((0)) ^ 0)) : _GLF_FUZZED(77708)))), ~ (~ (~ _GLF_IDENTITY((0), ((0)) | _GLF_IDENTITY((_GLF_IDENTITY((0), ((0)) ^ 0)), (true ? (_GLF_IDENTITY((0), ((0)) ^ 0)) : _GLF_FUZZED(77708))))))), 0, 1), _GLF_IDENTITY(ivec3(ivec3(ivec3(_GLF_IDENTITY(~ _GLF_IDENTITY((0), ((0)) | _GLF_IDENTITY((_GLF_IDENTITY((0), ((0)) ^ 0)), (true ? (_GLF_IDENTITY((0), ((0)) ^ 0)) : _GLF_FUZZED(77708)))), ~ (~ (~ _GLF_IDENTITY((0), ((0)) | _GLF_IDENTITY((_GLF_IDENTITY((0), ((0)) ^ 0)), (true ? (_GLF_IDENTITY((0), ((0)) ^ 0)) : _GLF_FUZZED(77708))))))), 0, 1))), ~ (~ (ivec3(ivec3(ivec3(_GLF_IDENTITY(~ _GLF_IDENTITY((0), ((0)) | _GLF_IDENTITY((_GLF_IDENTITY((0), ((0)) ^ 0)), (true ? (_GLF_IDENTITY((0), ((0)) ^ 0)) : _GLF_FUZZED(77708)))), ~ (~ (~ _GLF_IDENTITY((0), ((0)) | _GLF_IDENTITY((_GLF_IDENTITY((0), ((0)) ^ 0)), (true ? (_GLF_IDENTITY((0), ((0)) ^ 0)) : _GLF_FUZZED(77708))))))), 0, 1)))))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, min(0, 0))), ((_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), 0)))) | ((0)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) | ((0))))), _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((_GLF_IDENTITY(0, (0) - 0))) | ((0)))))) - 0, 0 + ((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) | ((0)))))) - 0))))) - 0), _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | ((0))), max(_GLF_IDENTITY((0), ((0)) | ((0))), _GLF_IDENTITY((0), ((0)) | ((0)))))))), clamp((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) | ((0)))))), (_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) | ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(int(uint(true))) : _GLF_IDENTITY(0, 0 ^ (0)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), ((0)) + (0 | 0)))), (_GLF_IDENTITY((0), ((0)) | ((0)))) | (_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), min((0), (0))))), int(ivec2(_GLF_IDENTITY((0), ((0)) | ((0))), 0))))))), (_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), ((0)) + (0 | 0)))), (_GLF_IDENTITY((0), ((0)) | ((0)))) | (_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), min((0), (0))))), int(ivec2(_GLF_IDENTITY((0), ((0)) | ((0))), 0)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), ((0)) + (0 | 0)))), (_GLF_IDENTITY((0), ((0)) | ((0)))) | (_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), min((0), (0))))), int(ivec2(_GLF_IDENTITY((0), ((0)) | ((0))), 0))))))), (_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), ((0)) + (0 | 0)))), (_GLF_IDENTITY((0), ((0)) | ((0)))) | (_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), min((0), (0))))), int(ivec2(_GLF_IDENTITY((0), ((0)) | ((0))), 0)))))))) ^ 0)))))))))) | _GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) ^ 0)), ~ (_GLF_IDENTITY(~ ((0)), (_GLF_IDENTITY(~ ((0)), (~ ((0))) / 1)) ^ 0))))), int(_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), min((~ (0)), (~ (0)))))))))) - (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(1), int(1)))), min(int(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), int(1)))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(int(1), int(1))))))))))) - 0) / 1))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | 0)))), (_GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY((_injected_loop_counter ++) | 0, ((_injected_loop_counter ++) | _GLF_IDENTITY(0, clamp(0, 0, 0))) / 1)))))) >> 0))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) ^ 0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((virtual_gid) ^ 0u, min((virtual_gid) ^ 0u, (virtual_gid) ^ 0u))), (~ (_GLF_IDENTITY((virtual_gid) ^ 0u, min((virtual_gid) ^ 0u, (virtual_gid) ^ 0u)))) << 0u)))), uint(uvec4(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), 0u, (1u ^ 0u), 0u)))], read, _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 1, 0)), (0 << _GLF_IDENTITY(int(2), int(2))) | (int(ivec3(4, 1, _GLF_IDENTITY(0, 0 | (0))))))), 64, _GLF_IDENTITY(4, max(4, 4)));
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-258.288, 908.831)) : injectionSwitch)).x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), false)))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false)))))))
                barrier();
              }
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), true && ((false))), true, false, false)), (bool(bvec4(_GLF_IDENTITY((false), true && ((false))), true, false, false))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (false), ! (! (_GLF_IDENTITY(false, ! (! (false))) || (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec4(bvec2(! (false), false), false, true))))))), false))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), false)))))) || (false))) && true)) && true)))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(4), int(4)))), (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(4), int(4))))) && true); _injected_loop_counter --)
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     subgroupAll(true);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), false || (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
}
