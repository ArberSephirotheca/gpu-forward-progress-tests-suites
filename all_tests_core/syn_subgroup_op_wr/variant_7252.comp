#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true && (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true && (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-2.0)), float((injectionSwitch)[0]), bool(true))), (injectionSwitch)[1]), vec2(_GLF_FUZZED((+ -670.879)), _GLF_FUZZED(-1.4)), bvec2(false, false))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, exp(0.0), 0.0, 1.0), mat3(mat4(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0)))))), injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), true)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))), false, false, true))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, false || (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(0u), uint(0u))) | (gl_WorkGroupID.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-0.0 + 1.7))), bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))) > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) % subgroup_size), ~ (_GLF_IDENTITY(~ (workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) % subgroup_size)), (~ (workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))), ((subgroup_local_id + 1)) | 0u) % subgroup_size))) + 0u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 1.0, exp(0.0)))), _GLF_IDENTITY((injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), clamp((injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0)))) / vec2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-17.32) : 1.0)) : _GLF_FUZZED(8562.4106))), 1.0)).x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), 1.0)))) / vec2(1.0, 1.0)).x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), 1.0)))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), 0u + (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) - 0u, uint(uvec4((uint(1)) - 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u)))))), 4, 64, 4);
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) >> 0), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, clamp(_GLF_IDENTITY((4) >> 0, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) * ((_GLF_IDENTITY(4, (4) / 1)) >> 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4) >> 0, ~ (_GLF_IDENTITY(~ ((4) >> 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ _GLF_IDENTITY(((4) >> 0), (_GLF_IDENTITY(((4) >> 0), (((4) >> 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0), ~ ((4) >> 0)))), (false ? _GLF_FUZZED(4874) : _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ _GLF_IDENTITY(((4) >> 0), int(ivec2(((4) >> 0), 1))), ~ ((4) >> 0)))), clamp(~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), ~ ((4) >> 0)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((4) >> 0, max((4) >> 0, (4) >> 0))), min(~ ((4) >> 0), ~ ((4) >> 0)))), ~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ (_GLF_IDENTITY((4) >> 0, ((4) >> _GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) + 0)), ~ ((4) >> 0)))))))))))), (_GLF_IDENTITY((4) >> 0, ~ (_GLF_IDENTITY(~ ((4) >> 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((4) >> _GLF_IDENTITY(0, min(0, 0))), min(~ (_GLF_IDENTITY((4), ((4)) ^ 0) >> 0), ~ ((4) >> 0)))), _GLF_IDENTITY((false ? _GLF_FUZZED(4874) : _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ (_GLF_IDENTITY((4), ((4)) / 1) >> 0)) | (~ ((4) >> 0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(47765) : (_GLF_IDENTITY(~ ((4) >> 0), min(~ (_GLF_IDENTITY((4) >> 0, (_GLF_IDENTITY((4) >> 0, ~ (~ (_GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0))))) | 0)), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(47765) : (_GLF_IDENTITY(~ _GLF_IDENTITY(((4) >> 0), (((4) >> 0)) | (0 >> _GLF_IDENTITY(int(1), int(1)))), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))))), max(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0))))), 0 ^ (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(47765) : (_GLF_IDENTITY(~ ((4) >> 0), min(~ _GLF_IDENTITY(((4) >> 0), min(((4) >> 0), ((4) >> 0))), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))))), _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(47765) : (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))))), 0 ^ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(47765) : (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0))))))))))))) * 1), clamp(~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), ~ _GLF_IDENTITY(((4) >> 0), 0 ^ (((_GLF_IDENTITY(4, (4) ^ 0)) >> 0)))))), ~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), ~ ((4) >> 0)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((4) >> 0), clamp(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), int(ivec2(_GLF_IDENTITY(~ ((4) >> 0), max(~ ((4) >> 0), ~ ((4) >> 0))), 1))), ~ ((4) >> 0))), min(~ ((4) >> 0), ~ ((4) >> 0))))))), clamp((false ? _GLF_FUZZED(4874) : _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(47765) : (_GLF_IDENTITY(~ ((4) >> 0), min(~ (_GLF_IDENTITY((4), 1 * (_GLF_IDENTITY((4), ((4)) ^ 0))) >> 0), _GLF_IDENTITY(~ ((4) >> _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, (0) - 0)))), (~ (_GLF_IDENTITY((4), ((4)) - 0) >> 0)) | (~ ((4) >> 0)))))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, (4) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(~ ((4) >> 0), 0 ^ (_GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) / 1))), (~ ((4) >> 0)) | (~ ((4) >> 0)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) ? _GLF_FUZZED(47765) : (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))))), max(~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(47765) : (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))), int(ivec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(47765) : (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))), (true ? _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(47765) : (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))) : _GLF_FUZZED(74915))), 1, 0, 1))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(47765) : (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0))))))))))) * 1), clamp(~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), ~ _GLF_IDENTITY(((4) >> 0), 0 ^ (((4) >> 0)))))), ~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), ~ _GLF_IDENTITY(((4) >> 0), ~ (~ (_GLF_IDENTITY(((4) >> 0), (((4) >> 0)) | (((4) >> 0))))))))), ~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), ~ ((4) >> 0))))))), (false ? _GLF_FUZZED(4874) : _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, ~ (~ (4)))) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(47765) : (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(47765) : (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) | (4))) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))))), max(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((4), ~ (~ ((4)))) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ (_GLF_IDENTITY((4), (_GLF_IDENTITY((4), max((4), (4)))) / 1) >> 0)) | (~ ((4) >> 0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(47765) : (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((4) >> 0), min(~ (_GLF_IDENTITY((4), max((4), _GLF_IDENTITY((4), min((4), _GLF_IDENTITY((4), min((4), (4))))))) >> 0), _GLF_IDENTITY(~ ((4) >> 0), _GLF_IDENTITY((~ _GLF_IDENTITY(((4) >> 0), (((4) >> 0)) << (0 << _GLF_IDENTITY(int(7), int(7))))), clamp((~ _GLF_IDENTITY(((4) >> 0), (((4) >> 0)) << (0 << _GLF_IDENTITY(int(7), int(7))))), (~ _GLF_IDENTITY(((4) >> 0), (((4) >> 0)) << (0 << _GLF_IDENTITY(int(7), int(7))))), (~ _GLF_IDENTITY(((4) >> 0), (((4) >> 0)) << (0 << _GLF_IDENTITY(int(7), int(7))))))) | (~ ((4) >> 0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(47765) : (_GLF_IDENTITY(~ ((4) >> 0), min(_GLF_IDENTITY(~ ((4) >> 0), ~ (~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), ~ ((4) >> 0)))))), _GLF_IDENTITY(~ (_GLF_IDENTITY((4), max((4), _GLF_IDENTITY((4), int(int((4)))))) >> 0), _GLF_IDENTITY((~ (_GLF_IDENTITY((4) >> 0, int(_GLF_IDENTITY(int((4) >> 0), (_GLF_IDENTITY(int((4) >> 0), (false ? _GLF_FUZZED(79716) : int((4) >> 0)))) | (int((4) >> 0))))))), ((~ (_GLF_IDENTITY((4) >> 0, int(_GLF_IDENTITY(int((4) >> 0), (_GLF_IDENTITY(int((4) >> 0), (false ? _GLF_FUZZED(79716) : int((4) >> 0)))) | (int((4) >> 0)))))))) / 1) | (~ ((4) >> 0))))))))))) * 1), clamp(~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), ~ _GLF_IDENTITY(((4) >> 0), 0 ^ ((_GLF_IDENTITY((4) >> 0, (_GLF_IDENTITY((4) >> 0, ((4) >> 0) | 0)) << 0))))))), ~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), ~ ((4) >> 0)))), ~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), ~ ((4) >> 0))))))), _GLF_IDENTITY((false ? _GLF_FUZZED(4874) : _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ _GLF_IDENTITY(((4) >> 0), (false ? _GLF_FUZZED(-64566) : ((4) >> 0))), (~ ((4) >> 0)) | (~ ((4) >> 0)))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0)), min(vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0)), vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0))))))).x > injectionSwitch.y)) ? _GLF_FUZZED(47765) : (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | _GLF_IDENTITY((~ ((4) >> 0)), 0 ^ ((~ ((4) >> 0)))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(47765, (_GLF_IDENTITY(47765, min(47765, 47765))) ^ 0)) : (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ (_GLF_IDENTITY((4), ((4)) | ((4))) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))))), max(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(47765) : (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))))), min(~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(47765) : (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(47765) : (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(47765) : (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0))))))))))) * 1), _GLF_IDENTITY(clamp(~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), ~ _GLF_IDENTITY(((4) >> 0), 0 ^ (((4) >> 0)))))), ~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), ~ ((4) >> 0)))), ~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), ~ ((4) >> 0))))), clamp(clamp(~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), ~ _GLF_IDENTITY(((4) >> 0), 0 ^ (((4) >> 0)))))), ~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), ~ ((4) >> 0)))), ~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), ~ ((4) >> 0))))), clamp(~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), ~ _GLF_IDENTITY(((4) >> 0), 0 ^ (((4) >> 0)))))), ~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), ~ ((4) >> 0)))), ~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), ~ ((4) >> 0))))), _GLF_IDENTITY(clamp(~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), ~ _GLF_IDENTITY(((4) >> 0), 0 ^ (((4) >> 0)))))), ~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), ~ ((4) >> 0)))), ~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), ~ ((4) >> 0))))), max(clamp(~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), ~ _GLF_IDENTITY(((4) >> 0), 0 ^ (((4) >> 0)))))), ~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), ~ ((4) >> 0)))), ~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), ~ ((4) >> 0))))), clamp(~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), ~ _GLF_IDENTITY(((4) >> 0), 0 ^ (((4) >> 0)))))), ~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), ~ ((4) >> 0)))), ~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), ~ ((4) >> 0))))))))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(4874) : _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(47765) : (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(47765) : (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))))), max(~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((4) >> 0), min(~ (_GLF_IDENTITY((4), ((4)) << 0) >> 0), _GLF_IDENTITY(~ (_GLF_IDENTITY((4) >> 0, ~ (~ (_GLF_IDENTITY((4) >> 0, min((4) >> 0, (4) >> 0)))))), (~ (_GLF_IDENTITY((4) >> 0, ((4) >> 0) | ((4) >> 0)))) | (~ ((4) >> 0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(47765) : (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (_GLF_IDENTITY(~ ((4) >> 0), max(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), 0 | (~ ((4) >> 0)))))) | (~ (_GLF_IDENTITY((4) >> 0, (_GLF_IDENTITY((4) >> 0, (false ? _GLF_FUZZED(-10362) : (4) >> 0))) | 0))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(47765) : (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), _GLF_IDENTITY((~ ((4) >> 0)) | (~ ((4) >> 0)), ((~ ((4) >> 0)) | (~ ((4) >> 0))) | ((~ ((4) >> 0)) | (~ ((4) >> 0))))))))))))) * 1), clamp(~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), ~ _GLF_IDENTITY(_GLF_IDENTITY(((4) >> 0), (((4) >> 0)) >> 0), 0 ^ (((4) >> 0)))))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((4) >> 0), (((4) >> 0)) ^ 0), min(~ ((_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 1, 0, 1), min(ivec4(4, 1, 0, 1), ivec4(4, 1, 0, 1)))))) >> 0), ~ ((4) >> 0)))), ~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), ~ ((4) >> 0))))))), (1 ^ 1) ^ ((false ? _GLF_FUZZED(4874) : _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(47765) : (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(47765) : (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))))), max(~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((4) >> 0), min(~ (_GLF_IDENTITY((4), ((4)) << 0) >> 0), _GLF_IDENTITY(~ (_GLF_IDENTITY((4) >> 0, ~ (~ (_GLF_IDENTITY((4) >> 0, min((4) >> 0, (4) >> 0)))))), (~ (_GLF_IDENTITY((4) >> 0, ((4) >> 0) | ((4) >> 0)))) | (~ ((4) >> 0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(47765) : (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (_GLF_IDENTITY(~ ((4) >> 0), max(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), 0 | (~ ((4) >> 0)))))) | (~ (_GLF_IDENTITY((4) >> 0, (_GLF_IDENTITY((4) >> 0, (false ? _GLF_FUZZED(-10362) : (4) >> 0))) | 0))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(47765) : (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), _GLF_IDENTITY((~ ((4) >> 0)) | (~ ((4) >> 0)), ((~ ((4) >> 0)) | (~ ((4) >> 0))) | ((~ ((4) >> 0)) | (~ ((4) >> 0))))))))))))) * 1), clamp(~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), ~ _GLF_IDENTITY(_GLF_IDENTITY(((4) >> 0), (((4) >> 0)) >> 0), 0 ^ (((4) >> 0)))))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((4) >> 0), (((4) >> 0)) ^ 0), min(~ ((_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 1, 0, 1), min(ivec4(4, 1, 0, 1), ivec4(4, 1, 0, 1)))))) >> 0), ~ ((4) >> 0)))), ~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), ~ ((4) >> 0)))))))))) | (_GLF_IDENTITY((false ? _GLF_FUZZED(4874) : _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(47765) : (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, min(4, 4))) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(47765) : (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) - 0), 4))) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))))), max(~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(47765) : (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), ~ ((4) >> 0))), _GLF_IDENTITY((~ ((4) >> 0)) | (~ ((4) >> 0)), max(_GLF_IDENTITY((~ ((4) >> 0)) | (~ ((4) >> 0)), clamp((~ ((4) >> 0)) | (~ ((4) >> 0)), (~ ((4) >> 0)) | (~ ((4) >> 0)), (~ ((4) >> 0)) | (~ ((4) >> 0)))), (~ ((4) >> 0)) | (~ ((4) >> 0)))))))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(47765) : (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ _GLF_IDENTITY(((4) >> 0), (true ? ((4) >> 0) : _GLF_FUZZED(-76121))))))))))))) * 1), clamp(~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((_GLF_IDENTITY(4, int(int(4)))) >> 0), ~ _GLF_IDENTITY(((4) >> 0), 0 ^ (((4) >> 0)))))), ~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), ~ ((4) >> 0)))), ~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), ~ ((4) >> 0))))))), ((false ? _GLF_FUZZED(4874) : _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((4) >> 0), min(~ _GLF_IDENTITY(((4) >> 0), (_GLF_IDENTITY(((4) >> 0), (((4) >> 0)) << 0)) | (((4) >> 0))), _GLF_IDENTITY(~ ((4) >> 0), (~ (_GLF_IDENTITY((4) >> 0, ((4) >> 0) | 0))) | (~ ((4) >> 0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(47765) : (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((_GLF_IDENTITY(4, (4) / 1)) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((4), ((4)) - 0) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(47765) : (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-84487))))))))))), max(~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((4) >> 0), min(_GLF_IDENTITY(~ ((4) >> 0), int(ivec4(~ ((4) >> 0), (0 << _GLF_IDENTITY(int(0), int(0))), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 0))), _GLF_IDENTITY(~ ((4) >> 0), (~ (_GLF_IDENTITY((4), ((4)) | (_GLF_IDENTITY((4), ~ (~ ((4)))))) >> 0)) | (~ ((4) >> 0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(47765) : (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) | (~ ((4) >> 0)))))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((4) >> 0), min(_GLF_IDENTITY(~ ((4) >> 0), int(ivec4(_GLF_IDENTITY(~ ((4) >> 0), clamp(~ ((4) >> 0), ~ ((4) >> 0), ~ ((4) >> 0))), 1, 1, 1))), _GLF_IDENTITY(~ ((4) >> 0), (_GLF_IDENTITY(~ ((4) >> 0), (~ ((4) >> 0)) ^ 0)) | (~ ((4) >> 0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(47765) : (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(~ ((4) >> 0), 0 ^ (~ ((4) >> 0))), (~ ((4) >> 0)) | (~ ((_GLF_IDENTITY(4, min(4, 4))) >> 0))))))))))) * _GLF_IDENTITY(1, clamp(1, 1, 1))), clamp(~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), ~ _GLF_IDENTITY(((4) >> 0), 0 ^ (((4) >> 0)))))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((4) >> 0), (_GLF_IDENTITY(((4) >> 0), (false ? _GLF_FUZZED(75396) : ((4) >> 0)))) ^ 0), min(~ ((4) >> 0), ~ ((4) >> 0)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((4), (_GLF_IDENTITY((4), ((4)) | ((4)))) - 0) >> 0), min(~ ((4) >> 0), ~ ((4) >> 0)))))))) >> 0))))))))))) - _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) & _GLF_IDENTITY(85063, max(85063, _GLF_IDENTITY(85063, (_GLF_IDENTITY(85063, (85063) | 0)) - 0)))), ((int(_GLF_ZERO(0.0, injectionSwitch.x)) & _GLF_IDENTITY(85063, max(85063, _GLF_IDENTITY(85063, (_GLF_IDENTITY(85063, (85063) | 0)) - 0))))) * 1)), ((_GLF_IDENTITY(4, (0 & 29806) + (4))) >> _GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-84158) : 0))) << 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) >> 0)) ^ 0)) >> 0))), 64, _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, clamp(4, 4, 4)))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec2(bvec2(bvec2(false, false)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false || (_GLF_DEAD(false))))
    barrier();
   subgroupAll(true);
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true)))) && true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), true && (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), (bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))) || false)))), bool(bvec3(bool(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), bool(bvec2(bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), true)))), true, true))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(abs(1.0), 0.0, 0.0, 1.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), dot(vec4(abs(1.0), 0.0, 0.0, 1.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, sqrt(0.0), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, sqrt(0.0), 1.0))), 1.0, 1.0)), mix(float(_GLF_FUZZED(-9860.2740)), float(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(abs(1.0), 0.0, 0.0, 1.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), dot(vec4(abs(1.0), 0.0, 0.0, 1.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, sqrt(0.0), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, sqrt(0.0), 1.0))), 1.0, 1.0))), bool(true)))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), (injectionSwitch))), (injectionSwitch)))) / _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))))) - vec2(0.0, 0.0))[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))))))))), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))))))))) + vec2(0.0, 0.0))[1]), vec2(_GLF_FUZZED(float(144277u)), _GLF_FUZZED(918.448)), bvec2(false, false))).y, float(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(6642.8142)), vec2(_GLF_FUZZED(2.1), (vec2(0.0, 0.0))[1]), bvec2(false, true))))), (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1526.1580), _GLF_FUZZED(1.2)), bvec2(false, false))), sqrt(1.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, sqrt(0.0), 1.0, 0.0, 0.0)))) + vec2(0.0, 0.0)))[1]), vec2(_GLF_FUZZED(float(144277u)), _GLF_FUZZED(918.448)), bvec2(false, false))).y, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), (true ? float(float(0.0)) : _GLF_FUZZED(7425.2136)))), sin(0.0))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))) || false))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))), false, false, false))))), true && (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))), false, false, false)))))))))))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), true))), true, false)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), true))), true, false)), true)))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), true))), true, false)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), _GLF_IDENTITY(bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), true)), bvec2(bvec3(bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), true)), true))), true)))), true))), true, false)), true))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
