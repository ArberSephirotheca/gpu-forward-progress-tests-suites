#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_9 {
 bvec4 _f0;
 int _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_8 {
 bvec4 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_7 {
 mat4x3 _f0;
} ;

struct _GLF_struct_10 {
 bvec2 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_9 _f3;
 ivec4 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_5 {
 mat4x3 _f0;
 mat2x3 _f1;
 mat4 _f2;
 vec2 _f3;
 uvec2 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_4 {
 int _f0;
 vec3 _f1;
 mat3x4 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_6 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_2 {
 bvec4 _f0;
 uvec4 _f1;
 float _f2;
 bool _f3;
 bvec2 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_1 {
 vec3 _f0;
 mat4x2 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_0 {
 mat2x4 _f0;
 bvec2 _f1;
 bvec4 _f2;
 mat4x3 _f3;
 bvec4 _f4;
 uvec3 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 mat4x2 _f2;
 mat4x3 _f3;
 _GLF_struct_2 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_11 {
 mat4x3 _f0;
 mat3x4 _f1;
 uint workgroup_id;
 mat2 _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_6 _f4;
 _GLF_struct_10 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), bool(bool(! (! (! (false)))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false) && (_GLF_IDENTITY(! (false), true && (! (false))))), false))), false || (! (false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-24821))), float(injectionSwitch.x), bool(true))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-24821))), _GLF_IDENTITY(float(injectionSwitch.x), min(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(-2946.6159)))) + 0.0), float(injectionSwitch.x))), bool(true)))) / cos(0.0)), injectionSwitch.x), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-24821))), float(injectionSwitch.x), bool(true))), injectionSwitch.x) : _GLF_FUZZED(-9.9)))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-24821))), float(injectionSwitch.x), bool(true))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-24821))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), min(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(-2946.6159)))) + 0.0), float(injectionSwitch.x))), bool(true)))) / cos(0.0)), injectionSwitch.x), (_GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-24821))), float(injectionSwitch.x), bool(true))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-24821))), _GLF_IDENTITY(float(injectionSwitch.x), min(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(-2946.6159)))) + 0.0), float(injectionSwitch.x))), bool(true)))) / cos(0.0)), injectionSwitch.x), clamp(clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-24821))), float(injectionSwitch.x), bool(true))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-24821))), _GLF_IDENTITY(float(injectionSwitch.x), min(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(-2946.6159)))) + 0.0), float(injectionSwitch.x))), bool(true)))) / cos(0.0)), injectionSwitch.x), clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-24821))), float(injectionSwitch.x), bool(true))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-24821))), _GLF_IDENTITY(float(injectionSwitch.x), min(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(-2946.6159)))) + 0.0), float(injectionSwitch.x))), bool(true)))) / cos(0.0)), injectionSwitch.x), clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-24821))), float(injectionSwitch.x), bool(true))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-24821))), _GLF_IDENTITY(float(injectionSwitch.x), min(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(-2946.6159)))) + 0.0), float(injectionSwitch.x))), bool(true)))) / cos(0.0)), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-24821))), float(injectionSwitch.x), bool(true))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-24821))), _GLF_IDENTITY(float(injectionSwitch.x), min(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(-2946.6159)))) + 0.0), float(injectionSwitch.x))), bool(true)))) / cos(0.0)))), injectionSwitch.x)))) - 0.0), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-24821))), float(injectionSwitch.x), bool(true))), injectionSwitch.x) : _GLF_FUZZED(-9.9), mix(float(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-24821))), float(injectionSwitch.x), bool(true))), injectionSwitch.x) : _GLF_FUZZED(-9.9), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-24821))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), true && (_GLF_IDENTITY(bool(true), true && (bool(true))))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) : _GLF_FUZZED(-9.9), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-24821))), float(injectionSwitch.x), bool(true))), injectionSwitch.x) : _GLF_FUZZED(-9.9)))), float(_GLF_FUZZED(52.02)), bool(false)))))) > injectionSwitch.y)))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.6), _GLF_FUZZED(253.134)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y), bool(bool(! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0)), max(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0)), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0))))), injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, 1.0, 0.0, 1.0)), (true ? _GLF_IDENTITY(float(vec4(injectionSwitch.x, 1.0, 0.0, 1.0)), min(float(vec4(injectionSwitch.x, 1.0, 0.0, 1.0)), float(vec4(injectionSwitch.x, 1.0, 0.0, 1.0)))) : _GLF_IDENTITY(_GLF_FUZZED(6787.3126), max(_GLF_FUZZED(6787.3126), _GLF_FUZZED(6787.3126)))))), abs(1.0), 1.0, 0.0, abs(_GLF_IDENTITY(abs(1.0), mix(float(_GLF_FUZZED(2.9)), float(_GLF_IDENTITY(abs(1.0), float(mat3x4(abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0)))), bool(true)))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0))), 1.0, 0.0))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), min(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), (determinant(mat2(1.0, 0.0, 1.0, 1.0))) / 1.0)) - 0.0))), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), 0.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0)), max(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0)), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0))))), injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, 1.0, 0.0, 1.0)), (true ? _GLF_IDENTITY(float(vec4(injectionSwitch.x, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0)), min(float(vec4(injectionSwitch.x, 1.0, 0.0, 1.0)), float(vec4(injectionSwitch.x, 1.0, 0.0, 1.0)))) : _GLF_IDENTITY(_GLF_FUZZED(6787.3126), max(_GLF_FUZZED(6787.3126), _GLF_FUZZED(6787.3126)))))), abs(1.0), 1.0, 0.0, abs(_GLF_IDENTITY(abs(1.0), mix(float(_GLF_FUZZED(2.9)), float(_GLF_IDENTITY(abs(1.0), float(mat3x4(abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0)))), bool(true)))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0))), 1.0, 0.0))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0))[0], _GLF_FUZZED(-9.1)), vec2(_GLF_FUZZED(3796.0145), (injectionSwitch)[1]), bvec2(false, true))), (injectionSwitch) * mat2(1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 1.0)))))) - 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3727.7686))))), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0)), max(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0)), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0))))), injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, 1.0, 0.0, 1.0)), (true ? _GLF_IDENTITY(float(vec4(injectionSwitch.x, 1.0, 0.0, 1.0)), min(float(vec4(injectionSwitch.x, 1.0, 0.0, 1.0)), float(vec4(injectionSwitch.x, 1.0, 0.0, 1.0)))) : _GLF_IDENTITY(_GLF_FUZZED(6787.3126), max(_GLF_FUZZED(6787.3126), _GLF_FUZZED(6787.3126)))))), abs(1.0), 1.0, 0.0, abs(_GLF_IDENTITY(_GLF_IDENTITY(abs(1.0), (_GLF_IDENTITY(abs(1.0), (_GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(78.89) : abs(1.0)))) + 0.0)) * 1.0), mix(float(_GLF_FUZZED(2.9)), float(_GLF_IDENTITY(_GLF_IDENTITY(abs(1.0), mix(float(_GLF_FUZZED(-2.4)), float(abs(1.0)), bool(true))), float(mat3x4(abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0)))), bool(true)))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0))), 1.0, 0.0))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).y)), ! (! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))), false))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_DEAD(false))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec3((! (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3((! (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), true && ((! (_GLF_DEAD(false))))), true), true, true)))))), false, true, false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))), true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), _GLF_IDENTITY(vec2(vec2((vec2(1.0, 1.0)) * mat2(1.0))), max(vec2(vec2((vec2(1.0, 1.0)) * mat2(1.0))), vec2(vec2((vec2(1.0, 1.0)) * mat2(1.0))))))) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, (false) || false)))), ! (_GLF_IDENTITY(! (bool(bool(bool(_GLF_IDENTITY(false, (false) || false))))), bool(bvec4(_GLF_IDENTITY(! (bool(bool(bool(_GLF_IDENTITY(false, (false) || false))))), false || (! (bool(bool(bool(_GLF_IDENTITY(false, (false) || false))))))), true, true, true))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), bool(bool(bool(_GLF_IDENTITY(false, (false) || false)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-182.003 + 9.5))), bool(false)))) || false)))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(mat4x3(1.0), mat3x4(1.0), _GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(194929u, 156051u, 18008u)))).x, mat2(1.0), _GLF_struct_3(_GLF_struct_0(mat2x4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(true)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true)))))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec4(bvec2(bvec2(bvec2(true))), _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, bool(bvec2(false, false))))))))), false)))), bvec4(true), mat4x3(1.0), bvec4(true), uvec3(1u), bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (_GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY(! (! (bool(bvec2(true, true)))), bool(bvec3(! (! _GLF_IDENTITY((bool(bvec2(true, true))), ! (! ((bool(bvec2(true, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (_GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY(! (! (bool(bvec2(true, true)))), bool(bvec3(! (! _GLF_IDENTITY((bool(bvec2(true, true))), ! (! ((bool(bvec2(true, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), (_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (_GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY(! (! (bool(bvec2(true, true)))), bool(bvec3(! (! _GLF_IDENTITY((bool(bvec2(true, true))), ! (! ((bool(bvec2(true, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))) || false))))), (! (bool(bvec2(true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (_GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY(! (! (bool(bvec2(true, true)))), bool(bvec3(! (! _GLF_IDENTITY((bool(bvec2(true, true))), ! (! ((bool(bvec2(true, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (_GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY(! (! (bool(bvec2(true, true)))), bool(bvec3(! (! _GLF_IDENTITY((bool(bvec2(true, true))), ! (! ((bool(bvec2(true, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), (_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (_GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY(! (! (bool(bvec2(true, true)))), bool(bvec3(! (! _GLF_IDENTITY((bool(bvec2(true, true))), ! (! ((bool(bvec2(true, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))) || false))))), (! (bool(bvec2(true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), bool(bvec4(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true))))))), (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(true, true), false)), true, false))))), true && (_GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec2(bool(bvec2(true, true)), true))))))))))) && true)))))), false, false, true))))), _GLF_struct_1(vec3(1.0), mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-904.042), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-904.042), max(_GLF_FUZZED(-904.042), _GLF_FUZZED(-904.042))), (_GLF_IDENTITY(_GLF_FUZZED(-904.042), max(_GLF_FUZZED(-904.042), _GLF_FUZZED(-904.042)))) - length(vec2(0.0, 0.0))), _GLF_IDENTITY(_GLF_FUZZED(-904.042), float(mat4(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-904.042, (_GLF_IDENTITY(-904.042, clamp(-904.042, _GLF_IDENTITY(-904.042, (-904.042) + 0.0), -904.042))) / 1.0)), max(_GLF_FUZZED(-904.042), _GLF_FUZZED(-904.042))), 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((5.8 + 3.1))), bool(false))))), 1.0, 1.0, 0.0, 0.0, cos(0.0), sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), (false ? _GLF_FUZZED(log2(77.82)) : _GLF_FUZZED(-904.042)))), bool(false))), max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-904.042), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-904.042), max(_GLF_FUZZED(-904.042), _GLF_FUZZED(-904.042))), (_GLF_IDENTITY(_GLF_FUZZED(-904.042), max(_GLF_FUZZED(-904.042), _GLF_FUZZED(-904.042)))) - length(vec2(0.0, 0.0))), _GLF_IDENTITY(_GLF_FUZZED(-904.042), float(mat4(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-904.042, (_GLF_IDENTITY(-904.042, clamp(-904.042, _GLF_IDENTITY(-904.042, (-904.042) + 0.0), -904.042))) / 1.0)), max(_GLF_FUZZED(-904.042), _GLF_FUZZED(-904.042))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), (false ? _GLF_FUZZED(log2(77.82)) : _GLF_FUZZED(-904.042)))), bool(false))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-904.042), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-904.042), max(_GLF_FUZZED(-904.042), _GLF_FUZZED(-904.042))), (_GLF_IDENTITY(_GLF_FUZZED(-904.042), _GLF_IDENTITY(max(_GLF_FUZZED(-904.042), _GLF_FUZZED(-904.042)), mix(float(_GLF_FUZZED(vec4(-655.828, 8422.5856, -4095.1632, 392.313).qstp.w)), float(_GLF_IDENTITY(max(_GLF_FUZZED(-904.042), _GLF_FUZZED(-904.042)), _GLF_IDENTITY(float(vec3(max(_GLF_FUZZED(-904.042), _GLF_FUZZED(-904.042)), 1.0, 0.0)), (false ? _GLF_FUZZED(-18.25) : float(vec3(max(_GLF_FUZZED(-904.042), _GLF_FUZZED(-904.042)), 1.0, 0.0)))))), bool(true))))) - length(vec2(0.0, 0.0))), _GLF_IDENTITY(_GLF_FUZZED(-904.042), float(mat4(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-904.042, (_GLF_IDENTITY(-904.042, clamp(-904.042, _GLF_IDENTITY(-904.042, (-904.042) + 0.0), -904.042))) / 1.0)), max(_GLF_FUZZED(-904.042), _GLF_FUZZED(-904.042))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), (false ? _GLF_FUZZED(log2(77.82)) : _GLF_FUZZED(-904.042)))), bool(false)))))), bvec3(true)), mat4x2(1.0), mat4x3(_GLF_IDENTITY(1.0, float(float(1.0)))), _GLF_struct_2(bvec4(true), uvec4(1u), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.7)), bool(false)))), mix(float(0.0 + (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.7)), bool(false))))), float(_GLF_FUZZED(5498.8605)), bool(false))))) / _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED((+ -727.946))), bool(false)), mix(float(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED((+ -727.946))), bool(false)), mix(_GLF_IDENTITY(float(mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED((+ -727.946))), max(float(_GLF_FUZZED((+ -727.946))), _GLF_IDENTITY(float(_GLF_FUZZED((+ -727.946))), clamp(_GLF_IDENTITY(float(_GLF_FUZZED((+ -727.946))), (float(_GLF_FUZZED((+ -727.946)))) - 0.0), float(_GLF_IDENTITY(_GLF_FUZZED((+ -727.946)), (_GLF_FUZZED((+ _GLF_IDENTITY(-727.946, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(-727.946, clamp(-727.946, -727.946, -727.946))))))) / 1.0)), float(_GLF_FUZZED((+ -727.946))))))), bool(false))), round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(_GLF_IDENTITY(float(mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED((+ -727.946))), max(float(_GLF_FUZZED((+ -727.946))), _GLF_IDENTITY(float(_GLF_FUZZED((+ -727.946))), clamp(_GLF_IDENTITY(float(_GLF_FUZZED((+ -727.946))), (float(_GLF_FUZZED((+ -727.946)))) - 0.0), float(_GLF_IDENTITY(_GLF_FUZZED((+ -727.946)), (_GLF_FUZZED((+ -727.946))) / 1.0)), _GLF_IDENTITY(float(_GLF_FUZZED((+ -727.946))), min(_GLF_IDENTITY(float(_GLF_FUZZED((+ -727.946))), mix(float(_GLF_FUZZED(-55.92)), float(float(_GLF_FUZZED((+ -727.946)))), bool(true))), float(_GLF_FUZZED((+ -727.946))))))))), bool(false))), clamp(float(mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED((+ -727.946))), max(float(_GLF_FUZZED((+ -727.946))), _GLF_IDENTITY(float(_GLF_FUZZED((+ -727.946))), clamp(_GLF_IDENTITY(float(_GLF_FUZZED((+ -727.946))), (float(_GLF_FUZZED((+ -727.946)))) - 0.0), float(_GLF_IDENTITY(_GLF_FUZZED((+ -727.946)), (_GLF_FUZZED((+ -727.946))) / 1.0)), _GLF_IDENTITY(float(_GLF_FUZZED((+ -727.946))), min(_GLF_IDENTITY(float(_GLF_FUZZED((+ -727.946))), mix(float(_GLF_FUZZED(-55.92)), float(float(_GLF_FUZZED((+ -727.946)))), bool(true))), float(_GLF_FUZZED((+ -727.946))))))))), bool(false))), float(mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED((+ -727.946))), max(float(_GLF_FUZZED((+ -727.946))), _GLF_IDENTITY(float(_GLF_FUZZED((+ -727.946))), clamp(_GLF_IDENTITY(float(_GLF_FUZZED((+ -727.946))), (float(_GLF_FUZZED((+ -727.946)))) - 0.0), float(_GLF_IDENTITY(_GLF_FUZZED((+ -727.946)), (_GLF_FUZZED((+ -727.946))) / 1.0)), _GLF_IDENTITY(float(_GLF_FUZZED((+ -727.946))), min(_GLF_IDENTITY(float(_GLF_FUZZED((+ -727.946))), mix(float(_GLF_FUZZED(-55.92)), float(float(_GLF_FUZZED((+ -727.946)))), bool(true))), float(_GLF_FUZZED((+ -727.946))))))))), bool(false))), _GLF_IDENTITY(float(mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED((+ -727.946))), max(float(_GLF_FUZZED((+ -727.946))), _GLF_IDENTITY(float(_GLF_FUZZED((+ -727.946))), clamp(_GLF_IDENTITY(float(_GLF_FUZZED((+ -727.946))), (float(_GLF_FUZZED((+ -727.946)))) - 0.0), float(_GLF_IDENTITY(_GLF_FUZZED((+ -727.946)), (_GLF_FUZZED((+ -727.946))) / 1.0)), _GLF_IDENTITY(float(_GLF_FUZZED((+ -727.946))), min(_GLF_IDENTITY(float(_GLF_FUZZED((+ -727.946))), mix(float(_GLF_FUZZED(-55.92)), float(float(_GLF_FUZZED((+ -727.946)))), bool(true))), float(_GLF_FUZZED((+ -727.946))))))))), bool(false))), max(float(mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED((+ -727.946))), max(float(_GLF_FUZZED((+ -727.946))), _GLF_IDENTITY(float(_GLF_FUZZED((+ -727.946))), clamp(_GLF_IDENTITY(float(_GLF_FUZZED((+ -727.946))), (float(_GLF_FUZZED((+ -727.946)))) - 0.0), float(_GLF_IDENTITY(_GLF_FUZZED((+ -727.946)), (_GLF_FUZZED((+ -727.946))) / 1.0)), _GLF_IDENTITY(float(_GLF_FUZZED((+ -727.946))), min(_GLF_IDENTITY(float(_GLF_FUZZED((+ -727.946))), mix(float(_GLF_FUZZED(-55.92)), float(float(_GLF_FUZZED((+ -727.946)))), bool(true))), float(_GLF_FUZZED((+ -727.946))))))))), bool(false))), float(mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED((+ -727.946))), max(float(_GLF_FUZZED((+ -727.946))), _GLF_IDENTITY(float(_GLF_FUZZED((+ -727.946))), clamp(_GLF_IDENTITY(float(_GLF_FUZZED((+ -727.946))), (float(_GLF_FUZZED((+ -727.946)))) - 0.0), float(_GLF_IDENTITY(_GLF_FUZZED((+ -727.946)), (_GLF_FUZZED((+ -727.946))) / 1.0)), _GLF_IDENTITY(float(_GLF_FUZZED((+ -727.946))), min(_GLF_IDENTITY(float(_GLF_FUZZED((+ -727.946))), mix(float(_GLF_FUZZED(-55.92)), float(float(_GLF_FUZZED((+ -727.946)))), bool(true))), float(_GLF_FUZZED((+ -727.946))))))))), bool(false))))))), mix(float(_GLF_FUZZED(6921.3483)), float(float(mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED((+ -727.946))), max(float(_GLF_FUZZED((+ -727.946))), _GLF_IDENTITY(float(_GLF_FUZZED((_GLF_IDENTITY(+ -727.946, (+ -727.946) - 0.0)))), clamp(_GLF_IDENTITY(float(_GLF_FUZZED((+ -727.946))), (float(_GLF_FUZZED((+ -727.946)))) - 0.0), float(_GLF_IDENTITY(_GLF_FUZZED((+ -727.946)), (_GLF_FUZZED((+ _GLF_IDENTITY(-727.946, min(_GLF_IDENTITY(-727.946, min(-727.946, -727.946)), -727.946))))) / 1.0)), float(_GLF_FUZZED((+ -727.946))))))), _GLF_IDENTITY(bool(false), (bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(true))))), float(_GLF_FUZZED(-4659.6082)), bool(false)))), float(_GLF_FUZZED(4.5)), bool(false))))), true, bvec2(true), bvec2(true)), uvec3(1u)), _GLF_struct_6(_GLF_struct_4(1, vec3(1.0), mat3x4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))), _GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), false))))))), _GLF_struct_5(mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), mat2x3(_GLF_IDENTITY(1.0, (1.0) - 0.0)), mat4(1.0), vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(uvec2(1u), uvec2(uvec3(uvec2(1u), 1u))), mat2x4(1.0)), mat2x3(1.0)), _GLF_struct_10(bvec2(true), _GLF_struct_7(mat4x3(1.0)), _GLF_struct_8(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))), ivec3(1)), _GLF_struct_9(bvec4(true), 1, uvec2(1u)), ivec4(_GLF_IDENTITY(1, (1) | (1))), ivec2(1)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec4(bool(_GLF_DEAD(false)), true, true, true))), true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-71.57 * vec4(-387.499, -9.6, -4.5, _GLF_IDENTITY(-6.8, 1.0 * (_GLF_IDENTITY(-6.8, mix(float(_GLF_FUZZED(-892.261)), float(-6.8), bool(true))))))).q)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-71.57 * vec4(-387.499, -9.6, -4.5, _GLF_IDENTITY(-6.8, 1.0 * (_GLF_IDENTITY(-6.8, mix(float(_GLF_FUZZED(-892.261)), float(-6.8), bool(true))))))).q)), float(injectionSwitch.y), bool(true))), true, _GLF_IDENTITY(false, (false) && true))), ! (! (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-71.57 * vec4(-387.499, -9.6, -4.5, _GLF_IDENTITY(-6.8, 1.0 * (_GLF_IDENTITY(-6.8, mix(float(_GLF_FUZZED(-892.261)), float(-6.8), bool(true))))))).q)), float(injectionSwitch.y), bool(true))), true, _GLF_IDENTITY(false, (false) && true)))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.0)), vec2(_GLF_FUZZED(-2959.7093), (injectionSwitch)[1]), bvec2(false, true))).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_11.workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))) + _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size + subgroup_local_id, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), ((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) ^ 0u), (~ _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u) + _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), ((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) ^ 0u)) >> 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(-51754, (-51754) | 0)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, true)), bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, true, true)), true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), true, true)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(! (false), true, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec4(bvec3(! (false), true, true), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec4(bvec3(! (false), true, true), true))))), false)))))), false || (! (bool(bvec3(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) && true)), false || (true && (false)))) || false)))))))), true, true))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (! (false)))) || false))), _GLF_IDENTITY(bool(bvec3(! (false), true, true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec3(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), true, true))), ! (! (! (bool(bvec3(! (false), true, true)))))), _GLF_IDENTITY(false || (! (bool(bvec3(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), true, _GLF_IDENTITY(true, (true) && true))))), ! (! (false || (! (bool(bvec3(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), true, _GLF_IDENTITY(true, (true) && true))))))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), _GLF_IDENTITY(true, bool(bvec2(true, true))), true)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))), ! (! (! (false)))), true, true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((bool(bvec3(! (false), true, true)))), ! (! (_GLF_IDENTITY(! ((bool(bvec3(! (false), true, true)))), ! (! (! ((_GLF_IDENTITY(bool(bvec3(! (false), true, true)), _GLF_IDENTITY(false || (bool(bvec3(! (false), true, true))), ! (_GLF_IDENTITY(! (false || (bool(bvec3(! (false), true, true)))), (! (false || (bool(bvec3(! (false), true, true))))) || false)))))))))))), bool(bvec2(_GLF_IDENTITY(! ((bool(bvec3(! (false), true, true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec3(! (false), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(! (false), true, true)))))), ! (! (! ((_GLF_IDENTITY(bool(bvec3(! (false), true, true)), false || (bool(bvec3(! (false), true, true)))))))))), false || (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec3(! (false), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(! (false), true, true)))))), ! (! (! ((_GLF_IDENTITY(bool(bvec3(! (false), true, true)), false || (bool(bvec3(! (false), true, true)))))))))))))), true))))), false || (! (bool(bvec3(! (false), true, true))))))))), bool(bool((_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(! (false), true, true)), ! (_GLF_IDENTITY(! (bool(bvec3(! (false), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, true)), ! (! (bool(bvec4(true, false, false, true))))))))), false || (_GLF_IDENTITY(! (bool(bvec3(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false)))))), true, true))), ! (! (_GLF_IDENTITY(! (bool(bvec3(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false)))))), true, true))), true && (_GLF_IDENTITY(! (bool(bvec3(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false)))))), true, true))), false || (! (bool(bvec3(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), false || (! ((false)))), bool(bvec3(_GLF_IDENTITY(! ((false)), false || (! ((false)))), true, false))))), true, true)))))))))))))), false || (_GLF_IDENTITY(bool(bvec3(! (false), true, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(! _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), false || ((false)))))), true, true)), _GLF_IDENTITY((bool(bvec3(! (false), true, true))), bool(bvec4((bool(bvec3(! (false), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), _GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)) && (false)) || (! (bool(bvec3(! (false), true, true))))))))))))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (true)))))), bool(bvec3(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((buf[virtual_gid]), ~ (~ ((buf[virtual_gid])))))) / 1u, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], 0u | (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])), (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) << (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), buf[virtual_gid]))), (_GLF_IDENTITY((buf[virtual_gid]), (false ? _GLF_FUZZED(virtual_gid) : (buf[virtual_gid])))) | ((buf[virtual_gid]))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]), (_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], uint(uint(buf[virtual_gid])))), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : (buf[virtual_gid]), (false ? _GLF_FUZZED(virtual_gid) : (buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))])) / 1u)), (false ? _GLF_FUZZED(5649u) : _GLF_IDENTITY((false ? _GLF_FUZZED(virtual_gid) : (buf[virtual_gid])), _GLF_IDENTITY(((false ? _GLF_FUZZED(virtual_gid) : (buf[virtual_gid]))), ((1u ^ 1u) & 21791u) | (((false ? _GLF_FUZZED(virtual_gid) : (buf[virtual_gid]))))) | ((false ? _GLF_FUZZED(virtual_gid) : (buf[virtual_gid])))))))) | ((buf[virtual_gid]))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]), (_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], uint(uint(buf[virtual_gid])))), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : (buf[virtual_gid]), (false ? _GLF_FUZZED(virtual_gid) : (buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))])) / 1u)), (false ? _GLF_FUZZED(5649u) : _GLF_IDENTITY((false ? _GLF_FUZZED(virtual_gid) : (buf[virtual_gid])), _GLF_IDENTITY(((false ? _GLF_FUZZED(virtual_gid) : (buf[virtual_gid]))), ((1u ^ 1u) & 21791u) | (((false ? _GLF_FUZZED(virtual_gid) : (buf[virtual_gid]))))) | ((false ? _GLF_FUZZED(virtual_gid) : (buf[virtual_gid])))))))) | ((buf[virtual_gid]))), (_GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]), (_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], uint(uint(buf[virtual_gid])))), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : (buf[virtual_gid]), (false ? _GLF_FUZZED(virtual_gid) : (buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))])) / 1u)), (false ? _GLF_FUZZED(5649u) : _GLF_IDENTITY((false ? _GLF_FUZZED(virtual_gid) : (buf[virtual_gid])), _GLF_IDENTITY(((false ? _GLF_FUZZED(virtual_gid) : (buf[virtual_gid]))), ((1u ^ 1u) & 21791u) | (((false ? _GLF_FUZZED(virtual_gid) : (buf[virtual_gid]))))) | ((false ? _GLF_FUZZED(virtual_gid) : (buf[virtual_gid])))))))) | ((buf[virtual_gid]))), (_GLF_IDENTITY((buf[virtual_gid]), (_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], uint(uint(buf[virtual_gid])))), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : (buf[virtual_gid]), (false ? _GLF_FUZZED(virtual_gid) : (buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))])) / 1u)), (false ? _GLF_FUZZED(5649u) : _GLF_IDENTITY((false ? _GLF_FUZZED(virtual_gid) : (buf[virtual_gid])), _GLF_IDENTITY(((false ? _GLF_FUZZED(virtual_gid) : (buf[virtual_gid]))), ((1u ^ 1u) & 21791u) | (((false ? _GLF_FUZZED(virtual_gid) : (buf[virtual_gid]))))) | ((false ? _GLF_FUZZED(virtual_gid) : (buf[virtual_gid])))))))) | ((buf[virtual_gid])))) | 0u)) ^ 0u))))))) / 1u) >> 0u)), _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0), clamp(ivec4(4, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0), _GLF_IDENTITY(ivec4(4, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0), ivec4(0, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), ~ (~ (0))), 0) | (ivec4(4, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)), 1, 0))), ivec4(4, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0))), 0.0)), mat2(1.0) * _GLF_IDENTITY((vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (1.0) / 1.0), 1.0)), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0))), 0.0))), vec2(mat4x3((vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0))), 0.0))), 1.0, 0.0, sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 1.0, sqrt(0.0), 1.0, sin(0.0)))))).x)), 1, 0))))), _GLF_IDENTITY(64, _GLF_IDENTITY(min(64, _GLF_IDENTITY(64, 0 | (64))), 0 | (min(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, max(64, 64)), 64)), 64)))), 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec3(_GLF_IDENTITY(false || (false), ! (! (false || (false)))), false, false))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), true))))) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), (bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))) || false))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.6)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))))))), true && (! (_GLF_IDENTITY(false, bool(bool(false)))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))), true && _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))))), true, true, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)), true && (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (164836u & 0u) | (read)), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 0), ivec2(0, 0) | (_GLF_IDENTITY(ivec2(64, 0), max(ivec2(64, 0), ivec2(64, 0))))))), int(ivec2(64, 0)))) | (64)), max(64, _GLF_IDENTITY(64, int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(92550) : _GLF_IDENTITY(64, clamp(64, 64, 64)))), (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(92550) : _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), (false ? _GLF_FUZZED(-59850) : _GLF_IDENTITY(64, clamp(64, 64, 64))))))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(92550) : _GLF_IDENTITY(64, clamp(64, 64, 64)))), (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(92550) : _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), (false ? _GLF_FUZZED(-59850) : _GLF_IDENTITY(64, clamp(64, 64, 64))))))) | 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(92550) : _GLF_IDENTITY(64, clamp(64, 64, 64)))), (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(92550) : _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), (false ? _GLF_FUZZED(-59850) : _GLF_IDENTITY(64, clamp(64, 64, 64))))))) | 0))))) << 0)))))), 4);
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true)), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true))) || false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true)), false, false))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x)) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(injectionSwitch.x, 1.0)), (float(vec2(injectionSwitch.x, 1.0))) / 1.0)) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6.9) : injectionSwitch.x)) < injectionSwitch.y)), false || (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))) || false))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9.2), _GLF_FUZZED(-2.0)), bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y)) || _GLF_IDENTITY(false, false || (false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     subgroupAll(true);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
