#version 460
struct _GLF_struct_15 {
 ivec2 _f0;
 mat4x2 _f1;
 bvec2 _f2;
 vec3 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_16 {
 _GLF_struct_15 _f0;
 uint _f1;
 int _f2;
 uint workgroup_base;
} ;

struct _GLF_struct_17 {
 _GLF_struct_16 _f0;
} ;

struct _GLF_struct_12 {
 uvec3 _f0;
 mat3x2 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_11 {
 uvec3 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_10 {
 uvec3 _f0;
 uvec4 _f1;
 bvec3 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_9 {
 bvec4 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_13 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
 ivec2 _f2;
 _GLF_struct_11 _f3;
 _GLF_struct_12 _f4;
 uint workgroup_id;
} ;

struct _GLF_struct_7 {
 bvec4 _f0;
} ;

struct _GLF_struct_8 {
 _GLF_struct_7 _f0;
} ;

struct _GLF_struct_14 {
 _GLF_struct_8 _f0;
 vec2 _f1;
 mat4x3 _f2;
 vec3 _f3;
 _GLF_struct_13 _f4;
} ;

struct _GLF_struct_4 {
 mat4 _f0;
 uint workgroup_size;
} ;

struct _GLF_struct_5 {
 uvec3 _f0;
 _GLF_struct_4 _f1;
 int _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_2 {
 vec3 _f0;
 bvec2 _f1;
 mat2x3 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
 ivec4 _f1;
 int _f2;
 float _f3;
} ;

struct _GLF_struct_0 {
 mat2x4 _f0;
 mat2x3 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_3 {
 mat2x4 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_6 {
 _GLF_struct_3 _f0;
 _GLF_struct_5 _f1;
 uvec3 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_3(mat2x4(1.0), _GLF_struct_0(mat2x4(1.0), mat2x3(1.0), mat4x3(1.0)), _GLF_struct_1(mat3x2(1.0), ivec4(1), 1, 1.0), _GLF_struct_2(vec3(1.0), bvec2(true), mat2x3(1.0), uvec3(1u)), mat4(1.0)), _GLF_struct_5(uvec3(1u), _GLF_struct_4(mat4(1.0), gl_WorkGroupSize.x), 1, bvec3(true)), uvec3(1u));
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_struct_8(_GLF_struct_7(bvec4(true))), vec2(1.0), mat4x3(1.0), vec3(1.0), _GLF_struct_13(_GLF_struct_9(bvec4(true), mat2(1.0)), _GLF_struct_10(uvec3(1u), uvec4(1u), bvec3(true), mat2(1.0)), ivec2(1), _GLF_struct_11(uvec3(1u), bvec3(true)), _GLF_struct_12(uvec3(1u), mat3x2(1.0), mat4(1.0)), gl_WorkGroupID.x));
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(_GLF_struct_16(_GLF_struct_15(ivec2(1), mat4x2(1.0), bvec2(true), vec3(1.0), mat3x4(1.0)), 1u, 1, _GLF_struct_replacement_6._f1._f1.workgroup_size * _GLF_struct_replacement_14._f4.workgroup_id));
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = _GLF_struct_replacement_17._f0.workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = _GLF_struct_replacement_17._f0.workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 uint read = 0;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if((subgroup_local_id % 2) == 0)
  {
   subgroupAll(false);
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
  }
 else
  {
   subgroupAll(false);
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
  }
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}
