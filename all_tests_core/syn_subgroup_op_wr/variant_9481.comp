#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_11 {
 mat4x2 _f0;
 mat2 _f1;
 ivec2 _f2;
 mat4x2 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_10 {
 mat2 _f0;
 ivec2 _f1;
 int _f2;
 mat4x2 _f3;
 bool _f4;
 bvec3 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_9 {
 ivec3 _f0;
 ivec4 _f1;
 mat2 _f2;
 mat3 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_12 {
 int _f0;
 mat4 _f1;
 _GLF_struct_9 _f2;
 _GLF_struct_10 _f3;
 uint next_virtual_gid;
 _GLF_struct_11 _f4;
} ;

struct _GLF_struct_13 {
 _GLF_struct_12 _f0;
} ;

struct _GLF_struct_6 {
 bvec2 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_5 {
 vec3 _f0;
 mat3x2 _f1;
 uvec2 _f2;
 bool _f3;
 vec3 _f4;
} ;

struct _GLF_struct_4 {
 uint _f0;
 mat4 _f1;
 ivec2 _f2;
 mat3 _f3;
 bvec3 _f4;
 float _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_3 {
 bvec2 _f0;
 uvec2 _f1;
 ivec3 _f2;
 bvec2 _f3;
 mat3x4 _f4;
 bool _f5;
} ;

struct _GLF_struct_7 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
 mat4x3 _f2;
 uint _f3;
 _GLF_struct_5 _f4;
 _GLF_struct_6 _f5;
 int _f6;
} ;

struct _GLF_struct_1 {
 ivec3 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
 int _f1;
} ;

struct _GLF_struct_0 {
 mat3x2 _f0;
} ;

struct _GLF_struct_8 {
 uint subgroup_local_id;
 bool _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_7 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(gl_SubgroupInvocationID, true, _GLF_struct_0(mat3x2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, determinant(mat4(1.0, 1.0, 1.0, determinant(mat2(_GLF_IDENTITY(1.0, sin(log(1.0)) + _GLF_IDENTITY((1.0), ((1.0)) + 0.0)), 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0, 1.0, abs(0.0), 0.0, 0.0, 1.0)) * (1.0)), 0.0 + (1.0)) : _GLF_FUZZED(1.0))))), _GLF_struct_2(_GLF_struct_1(ivec3(1), uvec3(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), ~ (~ (~ (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))))))))))))), 1), _GLF_struct_7(_GLF_struct_3(bvec2(true), uvec2(1u), ivec3(1), bvec2(true), mat3x4(1.0), true), _GLF_struct_4(1u, mat4(1.0), ivec2(1), mat3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), min(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(6151.8978)))))), bvec3(true), 1.0, uvec4(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | 0u), _GLF_IDENTITY(1u, 0u + (1u)))))), mat4x3(1.0), 1u, _GLF_struct_5(vec3(1.0), mat3x2(_GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.7)), float(1.0), bool(true))))), uvec2(1u), true, vec3(1.0)), _GLF_struct_6(bvec2(true), uvec4(1u)), 1));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))) || false, (_GLF_IDENTITY((false) || _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), true))), ! (! ((false) || _GLF_IDENTITY(false, (false) || false))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, determinant(mat3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0), mat2x3(mat4(mat2x3(injectionSwitch, determinant(mat3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0)))))).x < injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))) - uvec3(0u, 0u, 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))) - uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), clamp((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)))))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 0u))))), 1u, _GLF_IDENTITY(1u, min(1u, 1u))))))))) - uvec3(0u, 0u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))))), uvec3(0u, 0u, 0u) + ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))))))) - uvec3(0u, 0u, 0u)))).x : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_size))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))) - uvec3(0u, 0u, 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))) - uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), clamp((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)))))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 0u))))), 1u, _GLF_IDENTITY(1u, min(1u, 1u))))))))) - uvec3(0u, 0u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))))), uvec3(0u, 0u, 0u) + ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))))))) - uvec3(0u, 0u, 0u)))).x : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_size))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))) - uvec3(0u, 0u, 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))) - uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), clamp((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)))))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 0u))))), 1u, _GLF_IDENTITY(1u, min(1u, 1u))))))))) - uvec3(0u, 0u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))))), uvec3(0u, 0u, 0u) + ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))))))) - uvec3(0u, 0u, 0u)))).x : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_size)))) * 1u)) ^ 0u), uint(uvec2(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))) - uvec3(0u, 0u, 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))) - uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), clamp((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)))))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 0u))))), 1u, _GLF_IDENTITY(1u, min(1u, 1u))))))))) - uvec3(0u, 0u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))))), uvec3(0u, 0u, 0u) + ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))))))) - uvec3(0u, 0u, 0u)))).x : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_size))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))) - uvec3(0u, 0u, 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))) - uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), clamp((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)))))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 0u))))), 1u, _GLF_IDENTITY(1u, min(1u, 1u))))))))) - uvec3(0u, 0u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))))), uvec3(0u, 0u, 0u) + ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))))))) - uvec3(0u, 0u, 0u)))).x : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_size))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))) - uvec3(0u, 0u, 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))) - uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), clamp((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)))))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 0u))))), 1u, _GLF_IDENTITY(1u, min(1u, 1u))))))))) - uvec3(0u, 0u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))))), uvec3(0u, 0u, 0u) + ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))))))) - uvec3(0u, 0u, 0u)))).x : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_size)))) * 1u)) ^ 0u), 0u))), (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, min(num_workgroup, _GLF_IDENTITY(num_workgroup, 0u ^ (_GLF_IDENTITY(num_workgroup, 0u ^ (num_workgroup))))))) : true ? _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uint(1u))))).x : _GLF_FUZZED(subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ ((0u ^ 0u) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u | _GLF_IDENTITY((uint(4u)), (_GLF_IDENTITY((uint(4u)), (false ? _GLF_FUZZED(num_workgroup) : (uint(4u))))) | ((uint(4u)))))))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) >> 0u), _GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))), (_GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))) - uvec3(0u, 0u, 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))) - uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), clamp((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)))))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 0u))))), 1u, _GLF_IDENTITY(1u, min(1u, 1u))))))))) - uvec3(0u, 0u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))))), uvec3(0u, 0u, 0u) + ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))))))) - uvec3(0u, 0u, 0u)))).x : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_size))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), max((gl_WorkGroupSize), (gl_WorkGroupSize))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))) - uvec3(0u, 0u, 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))) - uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), clamp((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)))))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 0u))))), 1u, _GLF_IDENTITY(1u, min(1u, 1u))))))))) - uvec3(0u, 0u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))))), uvec3(0u, 0u, 0u) + ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), clamp(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, min(1u, 1u)))), ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))))))) - uvec3(0u, 0u, 0u)))).x : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_size))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))) - uvec3(0u, 0u, 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))) - uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), clamp((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)))))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 0u))))), 1u, _GLF_IDENTITY(1u, min(1u, 1u))))))))) - uvec3(0u, 0u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))))), uvec3(0u, 0u, 0u) + ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))))))) - uvec3(0u, 0u, 0u)))).x : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_size)))) * 1u)) ^ 0u), (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, min(num_workgroup, _GLF_IDENTITY(num_workgroup, 0u ^ (_GLF_IDENTITY(num_workgroup, 0u ^ (num_workgroup))))))) : true ? _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x : _GLF_FUZZED(subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ ((0u ^ 0u) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u | (uint(4u)))))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) >> 0u), _GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))), (true ? max(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, _GLF_IDENTITY(1u, min(1u, 1u))))) - uvec3(0u, 0u, 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, min(1u, 1u))))) - uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), clamp((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)))))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 0u))))), 1u, _GLF_IDENTITY(1u, min(1u, 1u))))))))) - uvec3(0u, 0u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(packHalf2x16((injectionSwitch + injectionSwitch))))))), ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))))), uvec3(0u, 0u, 0u) + ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))))))) - uvec3(0u, 0u, 0u)))).x : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_size))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))) - uvec3(0u, 0u, 0u), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))) - uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), clamp((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)))))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 0u))))), 1u, _GLF_IDENTITY(1u, min(1u, 1u))))))))) - uvec3(0u, 0u, 0u)))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), min(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, min(1u, 1u))))))) - uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), clamp((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)))))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 0u))))), 1u, _GLF_IDENTITY(1u, min(1u, 1u))))))))) - uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))), clamp(~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))), (~ (~ (_GLF_IDENTITY(1u, min(1u, 1u))))) - 0u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))), min(~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))), ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))))))))), uvec3(0u, 0u, 0u) + ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))))))) - uvec3(0u, 0u, 0u)))).x : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_size))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)))), min(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))))) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))) - uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), clamp((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), _GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)))))), (((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))))) >> uvec3(0u, 0u, 0u)) / uvec3(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0))), injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 0u))))), 1u, _GLF_IDENTITY(1u, min(1u, 1u))))))))) - uvec3(0u, 0u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))))), uvec3(0u, 0u, 0u) + ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), min(1u, 1u)), ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))))))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u))))))))))) / 1u))))))) - uvec3(0u, 0u, 0u)))).x : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_size)))) * 1u)) ^ 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, min(num_workgroup, _GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(0u, 0u | (0u)) ^ (_GLF_IDENTITY(num_workgroup, 0u ^ (num_workgroup))))))) : true ? _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x : _GLF_FUZZED(subgroup_size)), ((false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, min(num_workgroup, _GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(0u, 0u | (0u)) ^ (_GLF_IDENTITY(num_workgroup, 0u ^ (num_workgroup))))))) : true ? _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x : _GLF_FUZZED(subgroup_size))) + 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)))).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)) - 0u) ^ ((0u ^ 0u) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u | (uint(4u)))))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) >> 0u), _GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (gl_WorkGroupSize.x)), gl_WorkGroupSize.x)), gl_WorkGroupSize.x))))) : _GLF_FUZZED(subgroup_size)))) - 0u));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1179.4587)), vec2(_GLF_FUZZED(-4.0), (injectionSwitch)[1]), bvec2(false, true))), vec2(vec3(injectionSwitch, 1.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_struct_replacement_8.subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(_GLF_struct_12(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (1), max(0 ^ (1), _GLF_IDENTITY(0 ^ (1), (0 ^ (1)) - 0))))) * 1), mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_struct_9(_GLF_IDENTITY(ivec3(1), _GLF_IDENTITY((ivec3(1)), ivec3(_GLF_IDENTITY(ivec3((ivec3(1))), (ivec3((ivec3(1)))) << ivec3(0, 0, 0)))) | ivec3(0, 0, 0)), ivec4(1), mat2(1.0), mat3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(849.804)))), mat2x3(1.0)), _GLF_struct_10(mat2(1.0), ivec2(1), 1, mat4x2(1.0), true, bvec3(true), mat2x4(1.0)), _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base + ((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size), _GLF_struct_11(mat4x2(1.0), _GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))))), ivec2(1), mat4x2(_GLF_IDENTITY(1.0, float(mat4x3(1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))), _GLF_IDENTITY(determinant(_GLF_IDENTITY(mat4(0.0, 0.0, log(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(3.1)), float(1.0), bool(true)), clamp(mix(float(_GLF_FUZZED(3.1)), float(1.0), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(3.1)), float(1.0), bool(true)), float(vec3(mix(float(_GLF_FUZZED(3.1)), float(1.0), bool(true)), sin(0.0), 0.0))), mix(float(_GLF_FUZZED(3.1)), float(1.0), bool(true)))), (_GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(3.1)), (_GLF_IDENTITY(float(_GLF_FUZZED(3.1)), min(float(_GLF_FUZZED(3.1)), _GLF_IDENTITY(float(_GLF_FUZZED(3.1)), min(float(_GLF_FUZZED(3.1)), float(_GLF_FUZZED(3.1))))))) / 1.0), float(1.0), bool(_GLF_IDENTITY(true, (true) && true))), (mix(float(_GLF_IDENTITY(_GLF_FUZZED(3.1), min(_GLF_FUZZED(3.1), _GLF_FUZZED(3.1)))), float(1.0), bool(true))) - 0.0)) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), float(mat4x2(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 1.0, 1.0))), 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(39.86) : _GLF_IDENTITY(1.0, (1.0) - 0.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-7.9, 0.7, 6.3, 4470.9443, 5.0, -9.9, 745.484, -7.1, 8.8, 38.58, -279.738, -82.17, -1226.4926, -997.138, 1058.2104, 7.7)) : _GLF_IDENTITY(mat4(0.0, 0.0, log(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(3.1)), float(1.0), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(3.1), _GLF_IDENTITY(clamp(_GLF_FUZZED(3.1), _GLF_IDENTITY(_GLF_FUZZED(3.1), (true ? _GLF_FUZZED(3.1) : _GLF_FUZZED(-0.8))), _GLF_FUZZED(3.1)), min(clamp(_GLF_FUZZED(3.1), _GLF_IDENTITY(_GLF_FUZZED(3.1), (true ? _GLF_FUZZED(3.1) : _GLF_FUZZED(-0.8))), _GLF_FUZZED(3.1)), clamp(_GLF_FUZZED(3.1), _GLF_IDENTITY(_GLF_FUZZED(3.1), (true ? _GLF_FUZZED(3.1) : _GLF_FUZZED(-0.8))), _GLF_FUZZED(3.1)))))), float(1.0), bool(true)), (mix(float(_GLF_FUZZED(3.1)), float(1.0), bool(true))) - 0.0)) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0))), 0.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 1.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (true ? _GLF_IDENTITY(mat4(0.0, 0.0, log(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(3.1)), float(1.0), bool(true)), (_GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(3.1)), mix(float(_GLF_FUZZED(-3.8)), float(float(_GLF_FUZZED(3.1))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(1.0), bool(true)), (mix(float(_GLF_FUZZED(3.1)), float(1.0), bool(true))) - 0.0)) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0), vec2(1.0, 0.0))))), 1.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, exp(0.0) * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 0.0), transpose(transpose(mat4(0.0, 0.0, log(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(3.1)), float(1.0), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(true, true)))), ! (! (! (_GLF_IDENTITY(true, bool(bvec2(true, true))))))))))), (mix(float(_GLF_FUZZED(3.1)), float(1.0), bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))) * _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(3.1)), float(1.0), bool(true)), (mix(float(_GLF_FUZZED(3.1)), float(1.0), bool(true))) - 0.0)) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) - 0.0)), vec2(1.0, 0.0))))), 1.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))) : _GLF_FUZZED(mat4(-9411.7881, -8.4, -0.8, -1.7, 454.070, -9.0, -307.560, -6251.4250, 5.7, -6.1, 7.0, -8.2, 5488.6191, 3.9, -3.0, -5.3))))))), mix(float(_GLF_FUZZED(5.9)), float(determinant(_GLF_IDENTITY(mat4(0.0, 0.0, log(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(3.1)), float(1.0), bool(true)), clamp(mix(float(_GLF_FUZZED(3.1)), float(1.0), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(3.1)), float(1.0), bool(true)), float(vec3(mix(float(_GLF_FUZZED(3.1)), float(1.0), bool(true)), sin(0.0), 0.0))), mix(float(_GLF_FUZZED(3.1)), float(1.0), bool(true)))), (_GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(3.1)), (_GLF_IDENTITY(float(_GLF_FUZZED(3.1)), min(float(_GLF_FUZZED(3.1)), _GLF_IDENTITY(float(_GLF_FUZZED(3.1)), min(float(_GLF_FUZZED(3.1)), float(_GLF_FUZZED(3.1))))))) / 1.0), float(1.0), bool(_GLF_IDENTITY(true, (true) && true))), (mix(float(_GLF_IDENTITY(_GLF_FUZZED(3.1), min(_GLF_FUZZED(3.1), _GLF_FUZZED(3.1)))), float(1.0), bool(true))) - 0.0)) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), float(mat4x2(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 1.0, 1.0))), 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(39.86) : _GLF_IDENTITY(1.0, (1.0) - 0.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-7.9, 0.7, 6.3, 4470.9443, 5.0, -9.9, 745.484, -7.1, 8.8, 38.58, -279.738, -82.17, -1226.4926, -997.138, 1058.2104, 7.7)) : _GLF_IDENTITY(mat4(0.0, 0.0, log(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(3.1)), float(1.0), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(3.1), _GLF_IDENTITY(clamp(_GLF_FUZZED(3.1), _GLF_IDENTITY(_GLF_FUZZED(3.1), (true ? _GLF_FUZZED(3.1) : _GLF_FUZZED(-0.8))), _GLF_FUZZED(3.1)), min(clamp(_GLF_FUZZED(3.1), _GLF_IDENTITY(_GLF_FUZZED(3.1), (true ? _GLF_FUZZED(3.1) : _GLF_FUZZED(-0.8))), _GLF_FUZZED(3.1)), clamp(_GLF_FUZZED(3.1), _GLF_IDENTITY(_GLF_FUZZED(3.1), (true ? _GLF_FUZZED(3.1) : _GLF_FUZZED(-0.8))), _GLF_FUZZED(3.1)))))), float(1.0), bool(true)), (mix(float(_GLF_FUZZED(3.1)), float(1.0), bool(true))) - 0.0)) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0))), 0.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 1.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (true ? _GLF_IDENTITY(mat4(0.0, 0.0, log(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(3.1)), float(1.0), bool(true)), (_GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(3.1)), mix(float(_GLF_FUZZED(-3.8)), float(float(_GLF_FUZZED(3.1))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(1.0), bool(true)), (mix(float(_GLF_FUZZED(3.1)), float(1.0), bool(true))) - 0.0)) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0), vec2(1.0, 0.0))))), 1.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, exp(0.0) * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 0.0), transpose(transpose(mat4(0.0, 0.0, log(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(3.1)), float(1.0), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(true, true)))), ! (! (! (_GLF_IDENTITY(true, bool(bvec2(true, true))))))))))), (mix(float(_GLF_FUZZED(3.1)), float(1.0), bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))) * _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(3.1)), float(1.0), bool(true)), (mix(float(_GLF_FUZZED(3.1)), float(1.0), bool(true))) - 0.0)) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) - 0.0)), vec2(1.0, 0.0))))), 1.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))) : _GLF_FUZZED(mat4(-9411.7881, -8.4, -0.8, -1.7, 454.070, -9.0, -307.560, -6251.4250, 5.7, -6.1, 7.0, -8.2, 5488.6191, 3.9, -3.0, -5.3)))))))), bool(true))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), mix(float(_GLF_FUZZED(1173.1111)), float((0.0)), bool(true))) / 1.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)))), mat4(1.0))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read = 0;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[_GLF_struct_replacement_13._f0.next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (false)))), bool(bool(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bool((false))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY((false), bool(bool((false))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (! (_GLF_IDENTITY((false), bool(bool((false))))))), ((! (! (_GLF_IDENTITY((false), bool(bool((false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool((! (! (_GLF_IDENTITY((false), bool(bool((false)))))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY((! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool((false))))))), ((! (! (_GLF_IDENTITY((false), bool(bool((false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool((! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), bool(bool((false)))))))))))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, bool(bool(true)))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, true, true)))), false || (bool(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, true, true))))))))))) && true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(94.55)), bool(false)))), min(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))).y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), false, false))), true, true)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), false || _GLF_IDENTITY((bool(bvec3(false, true, true))), ! (! ((bool(bvec3(false, true, true)))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id % 2, _GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id % 2), 1u * ((_GLF_struct_replacement_8.subgroup_local_id % 2))) - 0u)) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(364.753) : injectionSwitch.y))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))), false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(386.248, -3438.2574)))).y, max(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(7.0, 9214.0739)) : injectionSwitch)).x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))), true)))), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(sin(0.0), (true ? sin(0.0) : _GLF_FUZZED(-62.86))), length(0.0), 0.0, 1.0, 1.0, 0.0))), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, sin(0.0), length(0.0), 0.0, 1.0, 1.0, 0.0))), cos(0.0), 0.0, 1.0, 1.0, 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, sin(0.0), length(0.0), 0.0, 1.0, 1.0, 0.0))), cos(0.0), 0.0, 1.0, 1.0, 0.0))))))), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), 1.0, exp(0.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), (mat2x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), 1.0, exp(0.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), round(length(normalize(vec4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0, 1.0, 1.0)))), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), true))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec4(4, 1, 0, 0))), _GLF_IDENTITY(0, min(0, 0)) | (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, min(4, 4)), 4, 4)))), _GLF_IDENTITY(4, _GLF_IDENTITY((4) << 0, (false ? _GLF_FUZZED(-62632) : _GLF_IDENTITY((4) << 0, min((4) << 0, (4) << 0))))))), 64, _GLF_IDENTITY(2, min(2, 2)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), (bool(bvec3(_GLF_DEAD(false), false, false))) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(int(_GLF_IDENTITY(4, min(4, 4)))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
}
