#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec4(uvec3(gl_WorkGroupSize), 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (uvec3(gl_WorkGroupSize))), max(_GLF_IDENTITY(~ (~ (uvec3(gl_WorkGroupSize))), max(~ (~ (uvec3(gl_WorkGroupSize))), ~ (~ (uvec3(gl_WorkGroupSize))))), ~ (~ (uvec3(gl_WorkGroupSize))))), (~ (~ (uvec3(gl_WorkGroupSize)))) * uvec3(1u, 1u, 1u))) << (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(2u), (uvec3(2u)) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(2u, ~ (_GLF_IDENTITY(~ (2u), (true ? ~ _GLF_IDENTITY((2u), max((2u), (2u))) : _GLF_FUZZED(num_workgroup)))))), (true ? uvec3(2u) : _GLF_FUZZED(uvec3(59851u, 85591u, 174660u)))))))))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) ^ 0u))) ^ (gl_WorkGroupSize.x)), 0u + (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - (0u | 0u))))), (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x)), 0u + (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x)))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ _GLF_IDENTITY((gl_WorkGroupSize.x), max((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x, 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), gl_WorkGroupSize.x))))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), gl_WorkGroupSize.x))))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), gl_WorkGroupSize.x)))))) << 0u)) + 0u) - 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 0u, 1u), _GLF_IDENTITY((true ? uvec3(0u, 0u, 1u) : _GLF_FUZZED(uvec3(65624u, 99778u, 27660u))), uvec3(0u, 0u, 0u) ^ ((true ? uvec3(0u, 0u, 1u) : _GLF_FUZZED(uvec3(65624u, 99778u, 27660u)))))))) + (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(0u ^ (gl_WorkGroupSize.x), min(0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (gl_WorkGroupSize.x))), _GLF_IDENTITY(0u ^ (gl_WorkGroupSize.x), (0u ^ (gl_WorkGroupSize.x)) | 0u))))), max(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(1u, 0u ^ (1u))), (true ? uvec3(0u, 0u, 1u) : _GLF_FUZZED(uvec3(65624u, 99778u, 27660u)))))) + (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(0u ^ (gl_WorkGroupSize.x), min(0u ^ (gl_WorkGroupSize.x), _GLF_IDENTITY(0u ^ (gl_WorkGroupSize.x), (0u ^ _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) << 0u)) | 0u))))), _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 0u, 1u), (true ? uvec3(0u, 0u, 1u) : _GLF_FUZZED(uvec3(65624u, 99778u, 27660u)))))) + (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)).x, _GLF_IDENTITY(0u ^ (gl_WorkGroupSize.x), min(0u ^ (gl_WorkGroupSize.x), _GLF_IDENTITY(0u ^ (gl_WorkGroupSize.x), (0u ^ (gl_WorkGroupSize.x)) | 0u)))))))))) : _GLF_FUZZED(189909u)))) << 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uint(gl_WorkGroupSize.x)))) / 1u))), 0u + (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x))))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (gl_WorkGroupSize.x), (0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))) << 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u ^ (gl_WorkGroupSize.x), (0u ^ (gl_WorkGroupSize.x)) << 0u) : _GLF_FUZZED(num_workgroup))))) / 1u), 0u + (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x))))) << 0u)), max(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(0u ^ (gl_WorkGroupSize.x), ~ (~ (0u ^ (gl_WorkGroupSize.x))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (gl_WorkGroupSize.x), (0u ^ (gl_WorkGroupSize.x)) << 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u ^ (gl_WorkGroupSize.x), (0u ^ (gl_WorkGroupSize.x)) << 0u) : _GLF_FUZZED(num_workgroup))))) / 1u), 0u + (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x))))) << 0u)), ((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (gl_WorkGroupSize.x), (0u ^ (gl_WorkGroupSize.x)) << 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))))), (0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u))) << 0u) : _GLF_FUZZED(num_workgroup))))) / 1u), 0u + (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x))))) << 0u))) >> 0u), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (gl_WorkGroupSize.x), (0u ^ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x)) << 0u), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), false, true, false)), false || (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), false, true, false)))))) ? _GLF_IDENTITY(0u ^ (gl_WorkGroupSize.x), (0u ^ (gl_WorkGroupSize.x)) << 0u) : _GLF_FUZZED(num_workgroup))))) / 1u), 0u + (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(0u ^ (gl_WorkGroupSize.x), uint(uvec2(0u ^ (gl_WorkGroupSize.x), 0u))))))) << 0u)))), _GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (gl_WorkGroupSize.x), (0u ^ (gl_WorkGroupSize.x)) | (0u ^ (gl_WorkGroupSize.x))), (0u ^ _GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) << 0u))) / 1u), 0u + (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x))))) << 0u))) | ((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(0u ^ (gl_WorkGroupSize.x), (0u ^ (gl_WorkGroupSize.x)) << 0u))) / 1u), 0u + (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x))))) << 0u))), (((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (gl_WorkGroupSize.x), (0u ^ (gl_WorkGroupSize.x)) | (0u ^ (gl_WorkGroupSize.x))), (0u ^ _GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) << 0u))) / 1u), 0u + (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x))))) << 0u))) | ((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(0u ^ (gl_WorkGroupSize.x), (0u ^ (gl_WorkGroupSize.x)) << 0u))) / 1u), 0u + (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x))))) << 0u)))) ^ (0u & (132011u - 46584u)))) ^ 0u)))), gl_WorkGroupSize.x, gl_WorkGroupSize.x));
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))).x, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ _GLF_IDENTITY((~ (gl_WorkGroupID)), max((~ (gl_WorkGroupID)), _GLF_IDENTITY((~ (gl_WorkGroupID)), ((~ (gl_WorkGroupID))) >> uvec3(0u, 0u, 0u))))).x, (true ? _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))).x : _GLF_FUZZED(subgroup_id)))));
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size)))) + (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (176754u & 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((0u | 0u), uint(_GLF_IDENTITY(uvec4((0u | 0u), 0u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) | (uvec4((0u | 0u), 0u, 1u, 1u))))))), (uint(uvec4(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size)))) + (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (176754u & 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u | 0u)))) << 0u)), max(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size)))) + (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (176754u & 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((0u | 0u), uint(_GLF_IDENTITY(uvec4((0u | 0u), 0u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) | (uvec4((0u | 0u), 0u, 1u, 1u))))))), (uint(uvec4(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size)))) + (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (176754u & 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u | 0u)))) << 0u)), _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size)))) + (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (176754u & 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((0u | 0u), uint(_GLF_IDENTITY(uvec4((0u | 0u), 0u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) | (uvec4((0u | 0u), 0u, 1u, 1u))))))), (uint(uvec4(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size)))) + (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (176754u & 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u | 0u)))) << 0u)))) * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / abs(vec2(1.0, 1.0))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / 1.0), (_GLF_IDENTITY(float(injectionSwitch.y), _GLF_IDENTITY((float(injectionSwitch.y)) / 1.0, ((float(injectionSwitch.y)) / 1.0) / 1.0))) + 0.0)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY((_GLF_IDENTITY(bool(true), false || (bool(true)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((bool(true))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! ((bool(true))), (! ((bool(true)))) && true))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! ((bool(true))), (! ((bool(true)))) && true))), bool(bvec2(! (! (_GLF_IDENTITY(! ((bool(true))), (! ((bool(true)))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true && ((_GLF_IDENTITY(! ((bool(true))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true))))))), (! ((bool(true)))) && true))), ! (! (! (! (_GLF_IDENTITY(! ((bool(true))), (! ((bool(true)))) && true))))))))))) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, true && (true)), true, false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, true && (true)), true, false)))), (false || (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))) && (true)), true, false))))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) && true), ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, true)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))))), true, false), false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), (! (! (! (_GLF_DEAD(false))))) || false))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))), true, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))))), false), false))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false), bool(bvec3(! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))), true && (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))))))), false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))), false, true, true)))), true, false), false))))), true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true), true, true, false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), uint(uvec4(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) / 1u), 0u, 0u, 1u))))))) * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) | 0u)) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) << 0u))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) | 0u)) * 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) | 0u)) * 1u)), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) | 0u)) * 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) | 0u)) * 1u))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) | 0u)) * 1u)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) | 0u)) * 1u))), (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) | 0u)) * 1u)))) | (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) | 0u)) * 1u))))))))))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), uint(uvec4(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) / 1u), 0u, 0u, 1u))))))) * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) | 0u)) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) << 0u))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) | 0u)) * 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) | 0u)) * 1u)), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) | 0u)) * 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) | 0u)) * 1u))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) | 0u)) * 1u)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) | 0u)) * 1u))), (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) | 0u)) * 1u)))) | (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) | 0u)) * 1u))))))))))) ^ 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), uint(uvec4(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) / 1u), 0u, 0u, 1u))))))) * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) | 0u)) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) << 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | _GLF_IDENTITY((subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size), min((subgroup_id * subgroup_size), (subgroup_id * subgroup_size)))) - 0u)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), ((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))) >> 0u))) | _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | (0u)) : _GLF_FUZZED(170650u))))) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u ^ (1u), (_GLF_IDENTITY(0u ^ (1u), (0u ^ (1u)) | (0u ^ (1u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0u))) / 1u)), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)) >> 0u), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) | 0u)) * 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(124273u) : subgroup_id * subgroup_size))))) | 0u)) * 1u)), min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) | 0u)) * 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))) | 0u)) * 1u))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ 0u)) | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))) * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) | 0u)) * 1u)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))))) * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) | 0u)) * 1u))), (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) | 0u)) * 1u)))) | (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), 1u * ((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))) << 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) | 0u)) * 1u))))))))))) ^ 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), max(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), min(_GLF_IDENTITY((workgroup_base), 0u ^ ((workgroup_base))), (workgroup_base))) | (_GLF_IDENTITY(34990u, max(34990u, _GLF_IDENTITY(34990u, uint(uvec2(34990u, 1u))))) & _GLF_IDENTITY(0u, ~ (~ (0u))))), workgroup_base)) + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))), max((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)), ~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) >> 0u, ((subgroup_local_id + 1) >> 0u) / 1u)))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) >> 0u, ((subgroup_local_id + 1) >> 0u) / 1u)))), uint(uint(((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) >> 0u, ((subgroup_local_id + 1) >> 0u) / 1u)))))))) << 0u))))), ~ (~ (uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)), ~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) >> 0u, ((subgroup_local_id + 1) >> 0u) / 1u)))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) >> 0u, ((subgroup_local_id + 1) >> 0u) / 1u)))), uint(uint(((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) >> 0u, ((subgroup_local_id + 1) >> 0u) / 1u)))))))) << 0u)))))))))), ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) >> _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), ((subgroup_local_id + 1) >> 0u) - (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), 0u | (_GLF_IDENTITY(uint(8u), uint(8u))))) << 0u)) | 0u)))))))), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) >> 0u, ((subgroup_local_id + 1) >> 0u) | ((subgroup_local_id + 1) >> 0u))))), (((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) >> 0u, max((subgroup_local_id + 1) >> 0u, (subgroup_local_id + 1) >> 0u)), _GLF_IDENTITY(((subgroup_local_id + 1) >> 0u) | ((subgroup_local_id + 1) >> 0u), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) * (((subgroup_local_id + 1) >> 0u) | ((subgroup_local_id + 1) >> 0u)))))))) | (((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) >> _GLF_IDENTITY(0u, 0u | (0u)), ((subgroup_local_id + 1) >> 0u) | ((subgroup_local_id + 1) >> 0u))))))))) ^ 0u), (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))), max((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> _GLF_IDENTITY(0u, ~ (~ (0u))))), uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)), ~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))))))))), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), int(_GLF_IDENTITY(int(_GLF_IDENTITY((1), ((1)) >> 0)), (int(_GLF_IDENTITY((1), ((1)) >> 0))) ^ 0)))), _GLF_IDENTITY((subgroup_local_id + 1) >> 0u, ((subgroup_local_id + 1) >> 0u) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))))))), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (1) | 0)) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) >> 0u, ((subgroup_local_id + 1) >> 0u) | ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)), subgroup_local_id, subgroup_local_id)))) + 1) >> 0u)))), (false ? _GLF_FUZZED((workgroup_size << 121876u)) : (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) >> 0u, ((subgroup_local_id + 1) >> 0u) | ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)), subgroup_local_id, subgroup_local_id)))) + 1) >> 0u))))))), ~ _GLF_IDENTITY((~ (((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) >> 0u, ((subgroup_local_id + 1) >> 0u) | ((subgroup_local_id + 1) >> 0u))))))), uint(uvec4(_GLF_IDENTITY((~ (((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) >> 0u, ((subgroup_local_id + 1) >> 0u) | ((subgroup_local_id + 1) >> 0u))))))), ((~ (((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) >> 0u, ((subgroup_local_id + 1) >> 0u) | ((subgroup_local_id + 1) >> 0u)))))))) * 1u), 0u, 0u, 0u)))), (((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) >> 0u, ((subgroup_local_id + 1) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) >> 0u)) | 0u), ((subgroup_local_id + 1) >> 0u) | _GLF_IDENTITY(((subgroup_local_id + 1) >> 0u), (((subgroup_local_id + 1) >> 0u)) << 0u)))))) | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) >> 0u, ((subgroup_local_id + 1) >> 0u) | ((subgroup_local_id + 1) >> 0u))))), min(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) >> 0u, ((subgroup_local_id + 1) >> 0u) | ((subgroup_local_id + 1) >> 0u))))), clamp(((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) >> 0u, ((subgroup_local_id + 1) >> 0u) | ((subgroup_local_id + 1) >> 0u))))), ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) >> 0u, ((subgroup_local_id + 1) >> 0u) | ((subgroup_local_id + 1) >> 0u))))), ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) >> 0u, ((subgroup_local_id + 1) >> 0u) | ((subgroup_local_id + 1) >> 0u))))))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) >> 0u, ((subgroup_local_id + 1) >> 0u) | ((subgroup_local_id + 1) >> 0u))))), 0u ^ (((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) >> 0u, ((subgroup_local_id + 1) >> 0u) | ((subgroup_local_id + 1) >> 0u))))))))))))) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, 0u + (0u)) | (0u)))) / 1u) % subgroup_size), uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) >> 0u))), max(((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0u) >> 0u))), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))))), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) >> _GLF_IDENTITY(0u, (0u) | 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(35973u) : subgroup_local_id)) + 1, (subgroup_local_id + 1) >> 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(35973u) : subgroup_local_id)) + 1, (subgroup_local_id + 1) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(35973u) : subgroup_local_id)) + 1, (subgroup_local_id + 1) >> 0u)) | 0u)))))))) ^ 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (0u ^ 0u) + (subgroup_local_id)), subgroup_local_id)) + 1), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) >> 0u, min((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) >> 0u, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) >> 0u))))), max(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (1u ^ 1u) | (subgroup_local_id)) + 1, (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) >> _GLF_IDENTITY(0u, (0u) | 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(35973u) : subgroup_local_id)) + 1, (subgroup_local_id + 1) >> 0u))))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) >> 0u))), max(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uint(0u)))) - 0u)))))), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> _GLF_IDENTITY(0u, (0u) | 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((false ? _GLF_FUZZED(35973u) : subgroup_local_id), 0u | ((false ? _GLF_FUZZED(35973u) : subgroup_local_id)))) + 1, (subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) >> 0u))))) ^ 0u), min(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) >> 0u))), max(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))))), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> _GLF_IDENTITY(0u, (0u) | 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(35973u) : subgroup_local_id)) + 1, (subgroup_local_id + 1) >> 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(clamp(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) >> 0u))), max(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))))), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> _GLF_IDENTITY(0u, (0u) | 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(35973u) : subgroup_local_id)) + 1, (subgroup_local_id + 1) >> 0u)))), (clamp(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) >> 0u))), max(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))))), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> _GLF_IDENTITY(0u, (0u) | 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(35973u) : subgroup_local_id)) + 1, (subgroup_local_id + 1) >> 0u))))) | 0u), 1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 42878u), 1u)), (false ? _GLF_FUZZED(workgroup_base) : uint(uvec4(_GLF_IDENTITY(clamp(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) >> 0u))), max(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))))), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> _GLF_IDENTITY(0u, (0u) | 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(35973u) : subgroup_local_id)) + 1, (subgroup_local_id + 1) >> 0u)))), (clamp(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) >> 0u))), max(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))))), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> _GLF_IDENTITY(0u, (0u) | 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(35973u) : subgroup_local_id)) + 1, (subgroup_local_id + 1) >> 0u))))) | 0u), 1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 42878u), 1u)))))) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) >> 0u))), max(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))))), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> _GLF_IDENTITY(0u, (0u) | 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(35973u) : subgroup_local_id)) + 1, (subgroup_local_id + 1) >> 0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) >> 0u))), max(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))))), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> _GLF_IDENTITY(0u, (0u) | 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(35973u) : subgroup_local_id)) + 1, (subgroup_local_id + 1) >> 0u))))), (false ? _GLF_FUZZED(51670u) : _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) >> 0u))), max(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))))), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> _GLF_IDENTITY(0u, (0u) | 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(35973u) : subgroup_local_id)) + 1, (subgroup_local_id + 1) >> 0u))))))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) >> 0u))), max(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))))), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> _GLF_IDENTITY(0u, (0u) | 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(35973u) : subgroup_local_id)) + 1, (subgroup_local_id + 1) >> 0u))))))) ^ 0u))))) % subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + (0u | 0u))), max((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), (subgroup_local_id + 1))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) >> 0u))), max(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))), (subgroup_local_id + 1) >> 0u))), (((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))), (subgroup_local_id + 1) >> 0u)))) - 0u), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) - 0u))), 0u | (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) - 0u))))))), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) ^ 0), 0), (ivec2(_GLF_IDENTITY(1, (1) ^ 0), 0)) | ivec2(0, 0))), min(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) ^ 0), 0), (ivec2(_GLF_IDENTITY(1, (1) ^ 0), 0)) | ivec2(0, 0))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) ^ 0), 0), (ivec2(_GLF_IDENTITY(1, (1) ^ 0), 0)) | ivec2(0, 0)))))), (subgroup_local_id + 1) >> _GLF_IDENTITY(0u, (0u) | 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(35973u) : subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) >> 0u))))) ^ 0u) % subgroup_size), (uint(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), (true ? ~ (subgroup_local_id + 1) : _GLF_FUZZED(subgroup_local_id))))), _GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) >> 0u))), max(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> _GLF_IDENTITY(0u, ~ (~ (0u)))))), ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) >> 0u))))), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> _GLF_IDENTITY(0u, (0u) | 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(35973u) : subgroup_local_id)) + 1, (subgroup_local_id + 1) >> 0u))))) ^ 0u) % subgroup_size)) ^ 0u)))))));
 uint read = 0;
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (1 ^ 1) ^ (64)), 4);
 if((subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((true ? 2 : _GLF_FUZZED(-37456)), ((true ? 2 : _GLF_FUZZED(-37456))) | (_GLF_IDENTITY((_GLF_IDENTITY(true ? 2 : _GLF_FUZZED(-37456), (true ? 2 : _GLF_FUZZED(-37456)) >> 0)), max((true ? _GLF_IDENTITY(2, (2) | (2)) : _GLF_FUZZED(-37456)), (true ? 2 : _GLF_FUZZED(-37456)))))), (_GLF_IDENTITY((true ? 2 : _GLF_FUZZED(-37456)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(2, min(_GLF_IDENTITY(2, ~ (~ (2))), _GLF_IDENTITY(2, int(ivec2(2, 1))))) : _GLF_FUZZED(-37456), int(_GLF_IDENTITY(ivec4(true ? _GLF_IDENTITY(2, min(_GLF_IDENTITY(2, ~ (~ (2))), _GLF_IDENTITY(2, int(ivec2(2, 1))))) : _GLF_FUZZED(-37456), 1, 0, 1), min(_GLF_IDENTITY(ivec4(true ? _GLF_IDENTITY(2, min(_GLF_IDENTITY(2, ~ (~ (2))), _GLF_IDENTITY(2, int(ivec2(2, 1))))) : _GLF_FUZZED(-37456), 1, 0, 1), max(ivec4(true ? _GLF_IDENTITY(2, min(_GLF_IDENTITY(2, ~ (~ (2))), _GLF_IDENTITY(2, int(ivec2(2, 1))))) : _GLF_FUZZED(-37456), 1, 0, 1), ivec4(true ? _GLF_IDENTITY(2, min(_GLF_IDENTITY(2, ~ (~ (2))), _GLF_IDENTITY(2, int(ivec2(2, 1))))) : _GLF_FUZZED(-37456), 1, 0, 1))), ivec4(true ? _GLF_IDENTITY(2, min(_GLF_IDENTITY(2, ~ (~ (2))), _GLF_IDENTITY(2, int(ivec2(2, 1))))) : _GLF_FUZZED(-37456), 1, 0, 1)))))), clamp((true ? 2 : _GLF_FUZZED(-37456)), _GLF_IDENTITY((true ? 2 : _GLF_FUZZED(-37456)), (true ? (true ? 2 : _GLF_FUZZED(-37456)) : _GLF_FUZZED(-22833))), (true ? 2 : _GLF_FUZZED(-37456)))), max((_GLF_IDENTITY(true, ! (! (true))) ? 2 : _GLF_FUZZED(-37456)), (_GLF_IDENTITY(true, ! (! (true))) ? 2 : _GLF_FUZZED(-37456))))) << 0)) ^ 0))) == _GLF_IDENTITY(0, min(0, 0)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), _GLF_IDENTITY(bool(bvec4(false, false, true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false), false)), true && (bool(bvec4(false, false, true, false))))), bool(bvec3((_GLF_IDENTITY(bool(bvec4(false, false, true, false)), true && (bool(bvec4(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))))), false, true))) && true))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   _GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, 2), ~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], 4, 64, 2)), (true ? ~ (read = atomicLoad(buf[virtual_gid], 4, 64, 2)) : _GLF_FUZZED(virtual_gid)))));
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))), false, false)))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))), true, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, true, false)), true, false, true))))))))) && true)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), _GLF_IDENTITY(false, (false) && true))), ! (! (bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), _GLF_IDENTITY(false, (false) && true)))))))) && true)))) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))) && true)))) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))), true && (_GLF_DEAD(false)))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), true, true)))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bool(bool(bool(true)))))))) || false)) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true && _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))) && true)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false)))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true, true, true)))) && true)) || false)) && _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true && _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))) && true)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false)))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true, true, true)))) && true)) || false)) && _GLF_IDENTITY(true, bool(bvec3(true, true, false)))))))), bool(bool(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true && _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))) && true)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false)))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true, true, true)))) && true)) || false)) && _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true && _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))) && true)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false)))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true, true, true)))) && true)) || false)) && _GLF_IDENTITY(true, bool(bvec3(true, true, false))))))))))))))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), (! ((_GLF_DEAD(false)))) || false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))) || false)) && true))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_DEAD(false))), (! ((_GLF_DEAD(false)))) || false)), ((_GLF_IDENTITY(! ((_GLF_DEAD(false))), (! ((_GLF_DEAD(false)))) || false))) && true), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), _GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) || false)), bool(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) || false)), true, false))) || false)), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_DEAD(false))), _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) || false), (_GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(bvec4(((_GLF_DEAD(false))), false, false, true)))) || false)) && true)))), bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false)), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false)), true, false), bvec3(bvec4(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false)), true, false), true)))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_DEAD(false))), _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) || false), (_GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(bvec4(((_GLF_DEAD(false))), false, false, true)))) || false)) && true)))), bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false)), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false)), true, false), bvec3(bvec4(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false)), true, false), true)))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), bool(bvec2((_GLF_IDENTITY(! ((_GLF_DEAD(false))), _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) || false), (_GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(bvec4(((_GLF_DEAD(false))), false, false, true)))) || false)) && true)))), bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false)), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false)), true, false), bvec3(bvec4(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false)), true, false), true)))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), true)))))))))))))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)) && (_GLF_DEAD(false))))) && true))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), (! ((_GLF_DEAD(false)))) || false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))) || false)) && true))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_DEAD(false))), (! ((_GLF_DEAD(false)))) || false)), ((_GLF_IDENTITY(! ((_GLF_DEAD(false))), (! ((_GLF_DEAD(false)))) || false))) && true), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), _GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) || false)), bool(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) || false)), true, false))) || false)), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_DEAD(false))), _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) || false), (_GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(bvec4(((_GLF_DEAD(false))), false, false, true)))) || false)) && true)))), bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false)), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false)), true, false), bvec3(bvec4(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false)), true, false), true)))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_DEAD(false))), _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) || false), (_GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(bvec4(((_GLF_DEAD(false))), false, false, true)))) || false)) && true)))), bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false)), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false)), true, false), bvec3(bvec4(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false)), true, false), true)))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), bool(bvec2((_GLF_IDENTITY(! ((_GLF_DEAD(false))), _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) || false), (_GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(bvec4(((_GLF_DEAD(false))), false, false, true)))) || false)) && true)))), bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false)), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false)), true, false), bvec3(bvec4(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false)), true, false), true)))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), true)))))))))))))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)) && (_GLF_DEAD(false))))) && true))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), (! ((_GLF_DEAD(false)))) || false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))) || false)) && true))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_DEAD(false))), (! ((_GLF_DEAD(false)))) || false)), ((_GLF_IDENTITY(! ((_GLF_DEAD(false))), (! ((_GLF_DEAD(false)))) || false))) && true), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), _GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) || false)), bool(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) || false)), true, false))) || false)), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_DEAD(false))), _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) || false), (_GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(bvec4(((_GLF_DEAD(false))), false, false, true)))) || false)) && true)))), bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false)), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false)), true, false), bvec3(bvec4(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false)), true, false), true)))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_DEAD(false))), _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) || false), (_GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(bvec4(((_GLF_DEAD(false))), false, false, true)))) || false)) && true)))), bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false)), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false)), true, false), bvec3(bvec4(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false)), true, false), true)))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), bool(bvec2((_GLF_IDENTITY(! ((_GLF_DEAD(false))), _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) || false), (_GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(bvec4(((_GLF_DEAD(false))), false, false, true)))) || false)) && true)))), bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false)), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false)), true, false), bvec3(bvec4(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false)), true, false), true)))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), true)))))))))))))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)) && (_GLF_DEAD(false))))) && true))))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), (! ((_GLF_DEAD(false)))) || false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))) || false)) && true))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_DEAD(false))), (! ((_GLF_DEAD(false)))) || false)), ((_GLF_IDENTITY(! ((_GLF_DEAD(false))), (! ((_GLF_DEAD(false)))) || false))) && true), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), _GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) || false)), bool(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) || false)), true, false))) || false)), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_DEAD(false))), _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) || false), (_GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(bvec4(((_GLF_DEAD(false))), false, false, true)))) || false)) && true)))), bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false)), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false)), true, false), bvec3(bvec4(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false)), true, false), true)))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_DEAD(false))), _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) || false), (_GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(bvec4(((_GLF_DEAD(false))), false, false, true)))) || false)) && true)))), bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false)), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false)), true, false), bvec3(bvec4(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false)), true, false), true)))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), bool(bvec2((_GLF_IDENTITY(! ((_GLF_DEAD(false))), _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) || false), (_GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(bvec4(((_GLF_DEAD(false))), false, false, true)))) || false)) && true)))), bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false)), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false)), true, false), bvec3(bvec4(bvec3((! _GLF_IDENTITY(((_GLF_DEAD(false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false)), true, false), true)))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), true)))))))))))))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)) && (_GLF_DEAD(false))))) && true)))))))) && true)))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   _GLF_IDENTITY(read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) | (_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)))) | (0u << _GLF_IDENTITY(uint(8u), uint(8u))))], 4, _GLF_IDENTITY(64, 1 * (_GLF_IDENTITY(64, max(64, 64)))), 2), (read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u), min(_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u), 0u ^ (_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)))))) | (virtual_gid))) | (0u << _GLF_IDENTITY(uint(8u), uint(8u))))], 4, 64, 2)) << 0u);
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))
  barrier();
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)))) : _GLF_FUZZED(workgroup_base)))], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}
