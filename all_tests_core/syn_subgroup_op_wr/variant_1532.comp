#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-46745)))], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], float(mat3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0) : _GLF_FUZZED(3.6))), log(1.0), determinant(mat3(0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))), injectionSwitch[1])))).x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
      break;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = (_GLF_IDENTITY(0, 0 | (0)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(-79450, clamp(-79450, -79450, _GLF_IDENTITY(_GLF_IDENTITY(-79450, (_GLF_IDENTITY(-79450, (-79450) / ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (0)))), int(0))) >> _GLF_IDENTITY(int(0), int(0))))) << 0), clamp(-79450, -79450, -79450)))) / 47538), int(ivec3((_GLF_IDENTITY(-79450, clamp(-79450, -79450, _GLF_IDENTITY(_GLF_IDENTITY(-79450, (_GLF_IDENTITY(-79450, (-79450) / ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (0)))), int(0))) >> _GLF_IDENTITY(int(0), int(0))))) << 0), clamp(-79450, -79450, -79450)))) / 47538), 1, 1)))))))), ((~ (_GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(-79450, clamp(-79450, -79450, _GLF_IDENTITY(_GLF_IDENTITY(-79450, (_GLF_IDENTITY(-79450, (-79450) / ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (0)))), int(0))) >> _GLF_IDENTITY(int(0), int(0))))) << 0), clamp(-79450, -79450, -79450)))) / 47538), int(ivec3((_GLF_IDENTITY(-79450, clamp(-79450, -79450, _GLF_IDENTITY(_GLF_IDENTITY(-79450, (_GLF_IDENTITY(-79450, (-79450) / ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (0)))), int(0))) >> _GLF_IDENTITY(int(0), int(0))))) << 0), clamp(-79450, -79450, -79450)))) / 47538), 1, 1))))))))) + (0 >> _GLF_IDENTITY(int(0), int(0)))), ~ (~ ((~ (_GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(-79450, max(-79450, -79450)), clamp(-79450, -79450, _GLF_IDENTITY(_GLF_IDENTITY(-79450, (_GLF_IDENTITY(-79450, (-79450) / ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), ~ (~ (_GLF_IDENTITY(int(0), int(0)))))) >> _GLF_IDENTITY(int(0), int(0))))) << 0), clamp(-79450, -79450, -79450)))) / 47538)))))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             do
              {
               do
                {
                 do
                  {
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_LOOP(false))));
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          break;
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        break;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint num_workgroup = gl_NumWorkGroups.x;
 do
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(((true)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.0)), bool(false))))), ! (_GLF_IDENTITY(! (((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (! (_GLF_IDENTITY(((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (((true)) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))))))))))))) || false)))
      {
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(334.331)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, log(round(length(normalize(1.0)))), 0.0))), mix(vec2(_GLF_FUZZED(5.6), _GLF_FUZZED(-1.2)), vec2((_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, log(round(length(normalize(1.0)))), 0.0))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, log(round(length(normalize(1.0)))), 0.0))))[1]), bvec2(true, true))).y)))), (mix(float(_GLF_FUZZED(334.331)), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), float(mat4(float(injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, round(length(normalize(1.0))), 1.0, 0.0, 1.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, log(round(length(normalize(1.0)))), 0.0))), mix(vec2(_GLF_FUZZED(5.6), _GLF_FUZZED(-1.2)), vec2((_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, log(round(length(normalize(1.0)))), 0.0))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, log(round(length(normalize(1.0)))), 0.0))))[1]), bvec2(true, true))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, log(round(length(normalize(1.0)))), 0.0))), mix(vec2(_GLF_FUZZED(5.6), _GLF_FUZZED(-1.2)), vec2((_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, log(round(length(normalize(1.0)))), 0.0))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, log(round(length(normalize(1.0)))), 0.0))))[1]), bvec2(true, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, log(round(length(normalize(1.0)))), 0.0))), mix(vec2(_GLF_FUZZED(5.6), _GLF_FUZZED(-1.2)), vec2((_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, log(round(length(normalize(1.0)))), 0.0))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, log(round(length(normalize(1.0)))), 0.0))))[1]), bvec2(true, true))))).y))))) / 1.0)))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))) || (injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, true && (false)) || (injectionSwitch.x > injectionSwitch.y))))))), false), true, true))))))))
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, true, true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, true))), false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, true, true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, true))), false)))))))))))), true, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                return;
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
              break;
            }
           else
            {
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false))))))))
            {
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                }
               else
                {
                 if(_GLF_DEAD(false))
                  return;
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, clamp(7, 7, 7)))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY((((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | 0), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1))))) | 1), min((((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | 0), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1))))) | 1), _GLF_IDENTITY((((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | 0), _GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(-90820) : _GLF_IDENTITY(int(1), 0 | (int(1))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1))))) | 1), clamp((((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | 0), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1))))) | 1), _GLF_IDENTITY((((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | 0), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1))))) | 1), ((((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | 0), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1))))) | 1)) * 1), (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | 0), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 + (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), (int(1)) + 0)))))), _GLF_IDENTITY(int(1), int(1))))) | _GLF_IDENTITY(1, min(1, 1))))))), max((((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(abs(79300)) : _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(91253)))))), (_GLF_IDENTITY(int(1), int(ivec2(int(1), 0)))) >> 0), int(1))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (1))), int(1))) | 1), (((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), clamp(int(1), _GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), ~ (~ (int(1)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), ~ (~ (int(1)))), int(ivec2(_GLF_IDENTITY(int(1), ~ (~ (int(1)))), 1)))) | (_GLF_IDENTITY(int(1), ~ (~ (int(1)))))))), int(1))))) >> _GLF_IDENTITY(int(1), int(1))) | 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false)))))
        return;
      }
    }
  }
 else
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 0.0))), injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y))))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (true ? _GLF_IDENTITY(int(2), (int(2)) | (int(2))) : _GLF_FUZZED(34604))))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            continue;
           return;
           if(_GLF_DEAD(false))
            continue;
          }
        }
       return;
       if(_GLF_DEAD(false))
        break;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(true, (true) && true)), false, true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true), false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), true, true))), false)))))))
        return;
      }
     if(_GLF_DEAD(false))
      break;
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), ! (! (bool(_GLF_WRAPPED_LOOP(false)))))), true && (bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), ! (! (bool(_GLF_WRAPPED_LOOP(false)))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), ! (! (bool(_GLF_WRAPPED_LOOP(false)))))), true && (bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))), ! (! (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))))))))))))))));
  }
 else
  {
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 1u * (workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), 0u, 0u)), _GLF_IDENTITY((true ? uint(uvec3(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), 0u, 0u)) : _GLF_FUZZED(num_workgroup)), max((true ? uint(uvec3(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), 0u, 0u)) : _GLF_FUZZED(num_workgroup)), (true ? uint(uvec3(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), 0u, 0u)) : _GLF_FUZZED(num_workgroup)))))) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(workgroup_size) : workgroup_base + subgroup_id * subgroup_size)))), workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size), min(_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 1u * (workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), 0u, 0u)), (true ? uint(uvec3(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), max(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), workgroup_base)))), 0u, 0u)) : _GLF_FUZZED(num_workgroup)))) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (false) || false) ? _GLF_FUZZED(workgroup_size) : workgroup_base + subgroup_id * subgroup_size)))), workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size), (min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 1u * (workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), 0u, 0u)), (true ? uint(uvec3(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), 0u, 0u)) : _GLF_FUZZED(num_workgroup)))) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(workgroup_size) : workgroup_base + subgroup_id * subgroup_size))), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 1u * (workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), 0u, 0u)), (true ? uint(uvec3(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), 0u, 0u)) : _GLF_FUZZED(num_workgroup)))) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(workgroup_size) : workgroup_base + subgroup_id * subgroup_size))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 1u * (workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), 0u, 0u)), (true ? uint(uvec3(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), 0u, 0u)) : _GLF_FUZZED(num_workgroup)))) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(workgroup_size) : workgroup_base + subgroup_id * subgroup_size))), (clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 1u * (workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), 0u, 0u)), (true ? uint(uvec3(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), 0u, 0u)) : _GLF_FUZZED(num_workgroup)))) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(workgroup_size) : workgroup_base + subgroup_id * subgroup_size)))) | (clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 1u * (workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), 0u, 0u)), (true ? uint(uvec3(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), 0u, 0u)) : _GLF_FUZZED(num_workgroup)))) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(workgroup_size) : workgroup_base + subgroup_id * subgroup_size)))))) * 1u), clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 1u * (workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), 0u, 0u)), (true ? uint(uvec3(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), 0u, 0u)) : _GLF_FUZZED(num_workgroup)))) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(workgroup_size) : workgroup_base + subgroup_id * subgroup_size)))))), workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)) - 0u), _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size, 1u * _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), 0u ^ ((workgroup_base + subgroup_id * subgroup_size)))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), min(min(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), max(min(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), min(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))))), 0u, 0u)), (true ? uint(uvec3(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), 0u, 0u)) : _GLF_FUZZED(num_workgroup)))) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base + subgroup_id * subgroup_size)))), workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size), (min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) - 0u) + subgroup_id * subgroup_size, 1u * (workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), 0u, 0u)), (true ? uint(uvec3(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), 0u, 0u)) : _GLF_FUZZED(num_workgroup)))) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(workgroup_size) : workgroup_base + subgroup_id * subgroup_size)))), workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)) ^ 0u)))) + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup)))) | (workgroup_base + subgroup_id * subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) | (uint(8u)))))))) + ((subgroup_local_id + 1) % subgroup_size)) | 0u), _GLF_IDENTITY(1u, min(1u, 1u))), min(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))) + subgroup_id * subgroup_size)) + ((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)) % subgroup_size), 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (true ? _GLF_IDENTITY(workgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : workgroup_base)) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(49987u))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 0u | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_id, subgroup_id, 13134, -88082)), (_GLF_FUZZED(bitfieldInsert(subgroup_id, subgroup_id, 13134, -88082))) | 0u) : subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), uint(uvec4(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size), 1u, 1u, 1u))))))), 1u), (uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))), 1u)) | (uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u + (((subgroup_local_id + 1) % subgroup_size))), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)) << 0u)))), 1u)))))), clamp(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), workgroup_base)) + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), (_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) / 1u)) - 0u)))), min(_GLF_IDENTITY(~ ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(~ ((subgroup_local_id + 1) % subgroup_size), 0u + (~ ((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED((bvec3(true, true, true) , subgroup_local_id)))) + 1) % subgroup_size)))) | (~ ((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(~ ((subgroup_local_id + 1) % subgroup_size), (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, 0u ^ (num_workgroup))) | (num_workgroup))) : ~ _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(true, ! (! (true))) ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(workgroup_id)))))))))), _GLF_IDENTITY(1u, (1u) | 0u)), min(uvec2(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u))) % subgroup_size), 1u), _GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1) % subgroup_size, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1) % subgroup_size, ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), 0u, 0u, 1u)))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), 0u, 0u, 1u))))) / 1u)) + 1) % subgroup_size) | 0u))))), 1u), _GLF_IDENTITY((uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) >> 0u, 0u ^ ((1u) >> 0u))))))), ((uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, (1u) >> 0u)))))) | ((uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, (1u) >> 0u))))))) | (uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | 0u) + ((subgroup_local_id + 1) % subgroup_size), 1u)))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u), min(uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u), _GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u), (uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u)) | (uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u))))), max(_GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u), min(uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u), _GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u), (uvec2(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1) % subgroup_size), 1u)) | (uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u), min(uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) - 0)) % subgroup_size), 1u), _GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(1u, 0u | (1u))), (uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u)) | (uvec2(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size), 1u))))), _GLF_IDENTITY(uvec2(uvec4(_GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u), min(uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) - 0)) % subgroup_size), 1u), _GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(1u, 0u | (1u))), (uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u)) | (uvec2(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size), 1u))))), 1u, 0u)), uvec2(uvec2(uvec2(uvec4(_GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u), min(uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) - 0)) % subgroup_size), 1u), _GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(1u, 0u | (1u))), (uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u)) | (uvec2(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size), 1u))))), 1u, 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u), min(uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u), (uvec2(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u)) * uvec2(1u, 1u)), (uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)) + (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) + 0)))))) % subgroup_size), 1u)) | (uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u))))), max(_GLF_IDENTITY(uvec2(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)), (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u))) >> 0u))) + ((subgroup_local_id + 1) % subgroup_size), 1u), min(uvec2(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | (((subgroup_local_id + 1) % subgroup_size))), 1u), _GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, 0u | (workgroup_base + subgroup_id * subgroup_size)))) + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1) % subgroup_size), 1u), ~ (~ (uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, 0u | (workgroup_base + subgroup_id * subgroup_size)))) + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1) % subgroup_size), 1u))))) | (uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u))))), _GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec3((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 0u))), 1u)))), 1u), min(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> (0u ^ 0u)) + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) - 0)) % subgroup_size), 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_id * subgroup_size, 1u, 1u)), (_GLF_IDENTITY(uint(uvec3(subgroup_id * subgroup_size, 1u, 1u)), (uint(uvec3(subgroup_id * subgroup_size, 1u, 1u))) * 1u)) | 0u)) + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (0u) >> 0u) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) ^ 0u))))), (uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) ^ 0u, (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) ^ 0u, max((workgroup_base + subgroup_id * subgroup_size) ^ 0u, (workgroup_base + subgroup_id * subgroup_size) ^ 0u))) << (0u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + ((subgroup_local_id + 1) % subgroup_size), 1u)) | (uvec2(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) * 1u) : _GLF_FUZZED(subgroup_id)))))) * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size), 1u)))))))) / uvec2(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u), min(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))), (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - (_GLF_IDENTITY(71892u & 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : 71892u & 0u))))) << 0u)))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * (_GLF_IDENTITY(1u ^ 0u, clamp(1u ^ 0u, 1u ^ 0u, 1u ^ 0u)))), uint(_GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * subgroup_size, 1u), (uvec2(workgroup_base + subgroup_id * subgroup_size, 1u)) << (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(8u), uvec2(8u)))))))), workgroup_base + subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * (1u ^ 0u)), uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 1u))))), workgroup_base + subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size)), uint(uvec3((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * (1u ^ 0u)), uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 1u))))), workgroup_base + subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size)), 0u, 1u))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * (1u ^ 0u)), uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 1u))))), workgroup_base + subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size)), uint(uvec3((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * (1u ^ 0u)), uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 1u))))), workgroup_base + subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size)), 0u, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * (1u ^ 0u)), uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 1u))))), workgroup_base + subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size)), uint(uvec3((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * (1u ^ 0u)), uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 1u))))), workgroup_base + subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size)), 0u, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * (1u ^ 0u)), uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 1u))))), workgroup_base + subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size)), uint(uvec3((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * (1u ^ 0u)), uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 1u))))), workgroup_base + subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size)), 0u, 1u)))))) * 1u) / 1u), _GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))), _GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u)) | (uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u)), (true ? _GLF_IDENTITY((uvec2(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))) + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(1u, (1u) | 0u))) | (uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u)), clamp((uvec2(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 0u)))) | (1u)))) | (uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u)), (uvec2(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))) + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1))), _GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id + 1))))) % subgroup_size), 1u)) | (uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u)), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u)) | (uvec2(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), 1u)), ((uvec2(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u)) | (uvec2(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size), max((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size))), 1u))) >> uvec2(0u, 0u)))) : _GLF_FUZZED((uvec2(39520u, 37379u) ^ subgroup_local_id)))))))), (uint(_GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), 0u)))) ^ (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))) % subgroup_size, 1u * (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uint((subgroup_local_id + 1) % subgroup_size)))))) | 0u)), 1u), _GLF_IDENTITY(min(uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (workgroup_base + subgroup_id * subgroup_size)), 0u ^ (workgroup_base + subgroup_id * subgroup_size)), 0u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(subgroup_size))), clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(subgroup_size)))))), 1u), (_GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u), (false ? _GLF_FUZZED(uvec2(129535u, 95762u)) : uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u)))) | (uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | (1))) % subgroup_size), 1u)))), min(min(uvec2(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size))) | ((subgroup_local_id + 1) % subgroup_size))), 1u), _GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u), _GLF_IDENTITY((uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u)), min((uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u)), (uvec2(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size)))), 1u)))) | (uvec2(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) % subgroup_size), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) % subgroup_size), min(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) % subgroup_size)) + 0u), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) % subgroup_size))))), 1u)))), min(uvec2(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u), _GLF_IDENTITY(uvec2(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) / _GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((1u), min((1u), (_GLF_IDENTITY(1u, ~ (~ (1u)))))))) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (_GLF_IDENTITY(1, 0 ^ (1))) >> 0), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))))))), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (_GLF_IDENTITY(1, 0 ^ (1))) >> 0), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))))))), ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (_GLF_IDENTITY(1, 0 ^ (1))) >> 0), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))))))))) | ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (_GLF_IDENTITY(1, 0 ^ (1))) >> 0), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))))))))))) / (0u ^ 1u)) % subgroup_size), 1u), _GLF_IDENTITY((uvec2(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1))) % subgroup_size), 1u)) | (uvec2(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u)))))) + 1) % subgroup_size), 1u)), (_GLF_IDENTITY((uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u)) | (uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u)), ((_GLF_IDENTITY(uvec2(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)) + (_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3((subgroup_local_id + 1), 1u, 0u), ~ (~ (uvec3((subgroup_local_id + 1), 1u, 0u)))))) % subgroup_size), 1u), (uvec2(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)) + (_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3((subgroup_local_id + 1), 1u, 0u), ~ (~ (uvec3((subgroup_local_id + 1), 1u, 0u)))))) % subgroup_size), 1u)) - uvec2(0u, 0u))) | (uvec2(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)), 0u | (((subgroup_local_id + 1) % subgroup_size))), max(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u)), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u))) | ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u))))) - (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), uint(uvec2(uint(2u), 0u)))))) % subgroup_size), 0u | (((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u | (((subgroup_local_id + 1) % subgroup_size))))), 1u))) + uvec2(0u, 0u))) + uvec2(0u, 0u))))))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u), min(uvec2(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size), 1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u) : _GLF_FUZZED(uvec2(28822u, 184861u)))), (uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, workgroup_base + subgroup_id * subgroup_size)))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))), max(max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, workgroup_base + subgroup_id * subgroup_size)))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))), _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, workgroup_base + subgroup_id * subgroup_size)))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))), (false ? _GLF_FUZZED(workgroup_size) : max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, workgroup_base + subgroup_id * subgroup_size)))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)))))))) + (_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec3((subgroup_local_id + 1), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) % subgroup_size), 1u)) | (uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u))))))), ((uint(_GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u), min(uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u), _GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u), (uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uint(subgroup_id)), min(uint(uint(subgroup_id)), uint(uint(subgroup_id))))), subgroup_id)) * subgroup_size, workgroup_base + subgroup_id * subgroup_size)))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), 1u, 0u), (true ? uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), 1u, 0u) : _GLF_FUZZED(uvec3(169148u, 164815u, 28129u))))))), 1u)) | (uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u)))))))) / 1u)))));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
  {
  }
 else
  {
   do
    {
     atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, (4) / ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))));
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) ^ 0), 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), float(_GLF_FUZZED(_GLF_IDENTITY(55.08, mix(float(_GLF_FUZZED((-313.664 - -2346.1208))), float(_GLF_IDENTITY(55.08, (55.08) + 0.0)), bool(true))))), bool(false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + sqrt(sqrt(0.0))) > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   do
    {
     for(int _injected_loop_counter = _GLF_IDENTITY((1 & 1), min(_GLF_IDENTITY((1 & 1), (false ? _GLF_FUZZED(-16468) : (1 & 1))), _GLF_IDENTITY((1 & 1), min(_GLF_IDENTITY((1 & 1), ~ (~ ((1 & 1)))), (1 & 1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        break;
       atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 1, 1, 0)), (int(ivec4(4, 1, 1, 0))) | (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) * 1))))), _GLF_IDENTITY((4), (_GLF_IDENTITY((4), ((4)) * 1)) << 0) / 1), 64, _GLF_IDENTITY(4, (4) | 0));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
   do
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       subgroupAll(false);
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(false)))));
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))))), _GLF_IDENTITY(false, ! (! (false))) || ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(true && (_GLF_IDENTITY(false, ! (! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))))))) && true))))) && true, bool(bvec4((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) && true)))) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))) && true))))))))))))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 return;
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true)))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
       return;
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   subgroupAll(_GLF_IDENTITY(true, (true) || false));
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    break;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), false || (bool(bvec3(false, false, false)))))) && true)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0))).y))))
          break;
         break;
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
        {
        }
       else
        {
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          continue;
        }
       if(_GLF_DEAD(false))
        continue;
      }
     do
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! ((false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! ((false))))), bool(bvec3(! (! _GLF_IDENTITY((false), ! (! ((false))))), false, true)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! ((false))))), bool(bvec3(! (! _GLF_IDENTITY((false), ! (! ((false))))), false, true)))), false || (bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! ((false))))), bool(bvec3(! (! _GLF_IDENTITY((false), ! (! ((false))))), false, true)))))), false)), true && (bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! ((false))))), bool(bvec3(! (! _GLF_IDENTITY((false), ! (! ((false))))), false, true)))), false || (bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! ((false))))), bool(bvec3(! (! _GLF_IDENTITY((false), ! (! ((false))))), false, true)))))), false)))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! ((false))))), bool(bvec3(! (! _GLF_IDENTITY((false), ! (! ((false))))), false, true)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! ((false))))), bool(bvec3(! (! _GLF_IDENTITY((false), ! (! ((false))))), false, true)))), false || (bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! ((false))))), bool(bvec3(! (! _GLF_IDENTITY((false), ! (! ((false))))), false, true)))))), false)), true && (bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! ((false))))), bool(bvec3(! (! _GLF_IDENTITY((false), ! (! ((false))))), false, true)))), false || (bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! ((false))))), bool(bvec3(! (! _GLF_IDENTITY((false), ! (! ((false))))), false, true)))))), false)))))), true, true, true)))))));
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, 0 ^ (_injected_loop_counter ++)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))))
        continue;
       for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-0.4) : injectionSwitch.x)), cos(0.0), round(length(normalize(1.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))))) < injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), _GLF_IDENTITY(true, true && (true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true)), true))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.1), _GLF_FUZZED(-1.7)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(5.2)), float((injectionSwitch)[_GLF_IDENTITY(1, (1) << 0)]), bool(true)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x < injectionSwitch.y)), true && (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.1), _GLF_FUZZED(_GLF_IDENTITY(-1.7, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(469.903) : -1.7)))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(5.2)), float((injectionSwitch)[_GLF_IDENTITY(1, (1) << 0)]), bool(true)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (injectionSwitch.y)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-861.639)), bool(false))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-861.639)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, 0.0), (mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-861.639)), bool(false))), 1.0, 0.0, 0.0)) * mat2(1.0))), float(mat2(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-861.639)), bool(false))), 1.0, 0.0, 0.0), (mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-861.639)), bool(false))), 1.0, 0.0, 0.0)) * mat2(1.0))), 1.0, 1.0, 1.0))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.1), _GLF_FUZZED(_GLF_IDENTITY(-1.7, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(469.903) : -1.7)))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(5.2)), float((injectionSwitch)[_GLF_IDENTITY(1, (1) << 0)]), bool(true)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (injectionSwitch.y)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-861.639)), bool(false))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-861.639)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, 0.0), (mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-861.639)), bool(false))), 1.0, 0.0, 0.0)) * mat2(1.0))), float(mat2(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-861.639)), bool(false))), 1.0, 0.0, 0.0), (mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-861.639)), bool(false))), 1.0, 0.0, 0.0)) * mat2(1.0))), 1.0, 1.0, 1.0))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.1), _GLF_FUZZED(_GLF_IDENTITY(-1.7, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(469.903) : -1.7)))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(5.2)), float((injectionSwitch)[_GLF_IDENTITY(1, (1) << 0)]), bool(true)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (injectionSwitch.y)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-861.639)), bool(false))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-861.639)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, 0.0), (mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-861.639)), bool(false))), 1.0, 0.0, 0.0)) * mat2(1.0))), float(mat2(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-861.639)), bool(false))), 1.0, 0.0, 0.0), (mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-861.639)), bool(false))), 1.0, 0.0, 0.0)) * mat2(1.0))), 1.0, 1.0, 1.0))))), false || ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.1), _GLF_FUZZED(_GLF_IDENTITY(-1.7, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(469.903) : -1.7)))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(5.2)), float((injectionSwitch)[_GLF_IDENTITY(1, (1) << 0)]), bool(true)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (injectionSwitch.y)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-861.639)), bool(false))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-861.639)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, 0.0), (mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-861.639)), bool(false))), 1.0, 0.0, 0.0)) * mat2(1.0))), float(mat2(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-861.639)), bool(false))), 1.0, 0.0, 0.0), (mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-861.639)), bool(false))), 1.0, 0.0, 0.0)) * mat2(1.0))), 1.0, 1.0, 1.0))))))))))))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), true && (! (false))))))))), false))))), true))))))))
          {
           do
            {
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), true && (_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))))))))
              return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(false))
          return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, 0, 0))], injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))) : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(764.851), _GLF_FUZZED(9.3)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))))).y)) || false))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
}
