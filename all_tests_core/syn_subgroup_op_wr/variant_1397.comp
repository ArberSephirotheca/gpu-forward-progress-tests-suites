#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))), ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || false))))) && true)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) || false))))))), false || (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), false))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), false), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x < injectionSwitch.y))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.7) : injectionSwitch.x)))) < injectionSwitch.y))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec3(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false)))))), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), false || (! (! (true))))))) && true, bool(bvec4((_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), false || (! (! (true))))))) && true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (true)) && true)))), false || ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), ! (! (! (_GLF_IDENTITY(true, true && (true))))))) && true), (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) || false) && (true)))), false || (! (! (true))))))) && true), (! (true)) && true)))))), (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))))) && true))), false))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true))), false)))))), ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, bool(bool(false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))))))))))))), bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bvec4(bool(bvec2(_GLF_DEAD(false), false)), true, false, false)))) || false))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))), true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))), true, true)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))), true, true))), bool(bvec4(! (bool(bvec3(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))), true, true))), false, true, false))))))))))))), true))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.1) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (0u | 0u) | (workgroup_base)) + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), subgroup_local_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), max(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), max(mat2(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((1458.2403))), float(1.0), bool(true))), injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))))) + log(vec2(1.0, 1.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ 0u) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(145485u), (_GLF_FUZZED(145485u)) | (_GLF_FUZZED(145485u))), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(145485u), (_GLF_FUZZED(145485u)) | (_GLF_IDENTITY(_GLF_FUZZED(145485u), (_GLF_FUZZED(145485u)) | 0u)))))))));
 do
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), _GLF_IDENTITY(min(uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)) << 0)), uint(1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(min(uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)) << 0)), uint(1)), 0u ^ (_GLF_IDENTITY(min(uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)) << 0)), uint(1)), (true ? min(uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)) << 0)), uint(1)) : _GLF_FUZZED(workgroup_id)))))), min(~ (_GLF_IDENTITY(min(uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)) << 0)), uint(1)), 0u ^ (_GLF_IDENTITY(min(uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)) << 0)), uint(1)), (true ? min(uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)) << 0)), uint(1)) : _GLF_FUZZED(workgroup_id)))))), ~ (_GLF_IDENTITY(min(uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)) << 0)), uint(1)), 0u ^ (_GLF_IDENTITY(min(uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)) << 0)), uint(1)), (true ? min(uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)) << 0)), uint(1)) : _GLF_FUZZED(workgroup_id))))))))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       break;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     continue;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        break;
       continue;
      }
    }
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bvec3(bool(bvec4(false, true, true, true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    continue;
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * determinant(mat3(1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2981.0637)), float(0.0), bool(true))), 0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), exp(0.0), 1.0, 1.0))) > injectionSwitch.y)))))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0))) > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4(false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0))) > injectionSwitch.y))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec4(false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0))) > injectionSwitch.y))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0))) > injectionSwitch.y)))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0))) > injectionSwitch.y)))))))))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))) > injectionSwitch.y)))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0))) > injectionSwitch.y))))))))))) && true), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5200.1224)), bool(false))), (injectionSwitch.x) * determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0))) > injectionSwitch.y)))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), ! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) * determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0))) > injectionSwitch.y))))))))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0))) > injectionSwitch.y)))))), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0), (false ? _GLF_FUZZED(mat3(-0.8, 8.9, 7303.5085, 7.2, 290.071, -3.8, -165.311, 6.3, 7.4)) : _GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0), mat3(mat3x4(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0)))))))) > injectionSwitch.y))))))))))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0))) > injectionSwitch.y)))))), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0), (false ? _GLF_FUZZED(mat3(-0.8, 8.9, 7303.5085, 7.2, 290.071, -3.8, -165.311, 6.3, 7.4)) : _GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0), mat3(mat3x4(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0)))))))) > injectionSwitch.y))))))))))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0))) > injectionSwitch.y)))))), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0), (false ? _GLF_FUZZED(mat3(-0.8, 8.9, 7303.5085, 7.2, 290.071, -3.8, -165.311, 6.3, 7.4)) : _GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0), mat3(mat3x4(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0)))))))) > injectionSwitch.y))))))))))), true && (! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))), ! (! (bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))))) && true)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * determinant(mat3(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + tan(0.0)), 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0))) > injectionSwitch.y)))))), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(504.535) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0), (false ? _GLF_FUZZED(mat3(-0.8, 8.9, 7303.5085, 7.2, 290.071, -3.8, -165.311, 6.3, 7.4)) : _GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0), mat3(mat3x4(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0)))))))) > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0), (false ? _GLF_FUZZED(mat3(-0.8, 8.9, 7303.5085, 7.2, 290.071, -3.8, -165.311, 6.3, 7.4)) : _GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0), mat3(mat3x4(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0)))))))) > injectionSwitch.y))))), (bool(false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0), (false ? _GLF_FUZZED(mat3(-0.8, 8.9, 7303.5085, 7.2, 290.071, -3.8, -165.311, 6.3, 7.4)) : _GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0), mat3(mat3x4(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0)))))))) > injectionSwitch.y)))))) && true))))))))))))) || false)) || false)))) && true)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), min((4), (4))) / 1, clamp(_GLF_IDENTITY((4), min((4), (4))) / 1, _GLF_IDENTITY((4), min((4), (4))) / 1, _GLF_IDENTITY((4), min((4), (4))) / 1))), int(_GLF_ZERO(0.0, injectionSwitch.x)), ((int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), tan(0.0) + (_GLF_ONE(1.0, injectionSwitch.y)))) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), ~ (~ (ivec2(1, 1))))))))), 0)), 0 ^ (int(ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, (_GLF_IDENTITY((4) / 1, clamp((4) / 1, (4) / 1, _GLF_IDENTITY((4) / 1, (true ? _GLF_IDENTITY((4), 1 * (_GLF_IDENTITY((4), max((4), _GLF_IDENTITY((4), ((4)) / 1))))) / 1 : _GLF_FUZZED(75143)))))) | (0 << _GLF_IDENTITY(int(3), int(3))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), 0 | ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))), (true ? (_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), 0 | ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))) : _GLF_FUZZED(findMSB(-61192)))), ~ (~ ((_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), 0 | ((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), clamp(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))))), 0))))), 64, _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) + 0)) / 1), clamp(0, 0, 0)));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), false, false))))))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (false))))), (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 ^ _GLF_IDENTITY((int(1)), min(_GLF_IDENTITY((int(1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (int(1)) : _GLF_FUZZED(91197))), (int(1)))))), (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 ^ _GLF_IDENTITY((int(1)), min(_GLF_IDENTITY((int(1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (int(1)) : _GLF_FUZZED(91197))), (int(1))))))) ^ 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY((0.0) * exp(0.0), (_GLF_IDENTITY((0.0) * exp(0.0), (_GLF_IDENTITY((0.0) * exp(0.0), min((0.0) * exp(0.0), (0.0) * exp(0.0)))) - 0.0)) / 1.0), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((0.0) * exp(0.0), ((0.0) * exp(0.0)) / 1.0), determinant(mat2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), sin(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), mix(float(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), float(_GLF_FUZZED(5.9)), bool(false))))), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0), transpose(transpose(mat4x3(_GLF_IDENTITY((0.0) * exp(0.0), ((0.0) * exp(_GLF_IDENTITY(0.0, (0.0) * 1.0))) / 1.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)), sin(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0))))))), exp(0.0)))))) ^ 0), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(findMSB(_GLF_IDENTITY(-23560, (_GLF_IDENTITY(-23560, 0 | (-23560))) / 1))) : (int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * exp(0.0), ((0.0) * exp(0.0)) / 1.0)), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * exp(0.0), ((0.0) * exp(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))) / 1.0)), 0.0, 1.0, 1.0, tan(0.0), length(vec3(0.0, 0.0, 0.0)))), max(float(mat3x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * exp(0.0), ((0.0) * exp(0.0)) / 1.0)), 0.0, 1.0, 1.0, tan(0.0), length(vec3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)))), float(mat3x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * exp(0.0), ((0.0) * exp(0.0)) / 1.0)), 0.0, 1.0, 1.0, tan(0.0), length(vec3(0.0, 0.0, 0.0))))))), exp(0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) / vec2(1.0, 1.0))).y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * exp(0.0), ((0.0) * exp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8.2) : 0.0)))) / 1.0)), exp(0.0))), max(float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * exp(0.0), ((0.0) * exp(0.0)) / 1.0)), exp(0.0))), _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * _GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))), min(_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))), float(vec2(_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))), 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))), max(_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))), _GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))))), _GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))), 0.0), min(vec2(_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))), 0.0), vec2(_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))), 0.0))))))), ((0.0) * exp(0.0)) / 1.0)), exp(0.0))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(3972.0346)), float(float(mat3x2(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8.3)), bool(false))), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * _GLF_IDENTITY(exp(0.0), 1.0 * (exp(0.0))), _GLF_IDENTITY(((0.0) * exp(0.0)) / 1.0, mix(float(_GLF_FUZZED(float(true))), float(_GLF_IDENTITY(((0.0) * exp(0.0)) / 1.0, min(((0.0) * exp(0.0)) / 1.0, ((0.0) * exp(0.0)) / 1.0))), bool(true))))), exp(0.0)))), bool(true)), max(mix(float(_GLF_FUZZED(3972.0346)), float(float(mat3x2(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8.3)), bool(false))), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * _GLF_IDENTITY(exp(0.0), 1.0 * (exp(0.0))), _GLF_IDENTITY(((0.0) * exp(0.0)) / 1.0, mix(float(_GLF_FUZZED(float(true))), float(_GLF_IDENTITY(((0.0) * exp(0.0)) / 1.0, min(((0.0) * exp(0.0)) / 1.0, ((0.0) * exp(0.0)) / 1.0))), bool(true))))), exp(0.0)))), bool(true)), mix(float(_GLF_FUZZED(3972.0346)), float(float(mat3x2(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8.3)), bool(false))), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * _GLF_IDENTITY(exp(0.0), 1.0 * (exp(0.0))), _GLF_IDENTITY(((0.0) * exp(0.0)) / 1.0, mix(float(_GLF_FUZZED(float(true))), float(_GLF_IDENTITY(((0.0) * exp(0.0)) / 1.0, min(((0.0) * exp(0.0)) / 1.0, ((0.0) * exp(0.0)) / 1.0))), bool(true))))), exp(0.0)))), bool(true))))))))) - 0.0))) ^ 0)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      break;
     if(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0) < subgroup_size)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          return;
         continue;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, 0.0, sin(0.0), 0.0, 0.0, 1.0, 0.0)), (true ? float(mat4x2(injectionSwitch.x, 0.0, 0.0, sin(0.0), 0.0, 0.0, 1.0, 0.0)) : _GLF_FUZZED(60.12)))) < injectionSwitch.y)))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), false))))))))
        return;
       if(_GLF_DEAD(false))
        continue;
       atomicStore(checker[virtual_gid], read, 4, 64, 4);
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && ((false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
          {
           if(_GLF_DEAD(false))
            continue;
           return;
          }
         break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            break;
           continue;
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        break;
       do
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
          return;
         subgroupAll(false);
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))), (bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true))))) || false)))))))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          break;
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_WRAPPED_LOOP(false), false, false))));
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(22.89, min(_GLF_IDENTITY(22.89, (22.89) - 0.0), _GLF_IDENTITY(22.89, min(22.89, 22.89)))))), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))) > injectionSwitch.y), true, false, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), max(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y))))), true, false, false)), false, true), bvec3(bvec4(bvec3(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), false, true), false))))))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec4(true && (false), true, true, true))))) && true), bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, false), false)), false, false))))))))), _GLF_IDENTITY(false, true && (false)) || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(22.89)), bool(false))) > injectionSwitch.y), true, false, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), true, false, false)), false, true), bvec3(bvec4(bvec3(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), false, true), false))))))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec4(_GLF_IDENTITY(true, false || (true)) && (false), true, true, true))))) && true), (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (! (false || (true))))) && (false), true, true, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (! (false || (true))))) && (false), true, true, true))))))) && true)) || false), bool(bvec2(false, false)))))))))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           continue;
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (_GLF_IDENTITY(~ (int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(((mat4(-2.3, 2092.8480, -335.654, -2.4, 2.3, 2.4, 0.6, 8.4, 9377.8445, 6.9, 9.1, 59.64, 4031.9839, 9800.9647, 6135.2092, -674.006) != mat4(54.59, 7.2, 2587.5547, 64.75, 38.90, 15.35, 239.925, 31.14, 799.516, 6142.1163, -3.6, 7610.5669, 9596.9171, 1.7, -0.3, 8664.5288)) ? 3.9 : -850.408))), bool(false))), injectionSwitch.x))), ~ (_GLF_IDENTITY(~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x)))), (~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1)))))); _injected_loop_counter --)
          {
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (false)) || false))))))))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), true, false))))), true)))), bool(bvec4(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false, true, false))))))), true)))), false, true, true)))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, bool(bool(false))), false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))), bvec3(bvec4(bvec3(false, false, false), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))))))), false)))))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), bool(bvec2(false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))), false, true, true))))), true)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false || _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), ! (! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))) || false)) && true))), false, true, false))))))), true)))), false, true, true)))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, false), false)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))))), false)))))))), _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(false || (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))), true)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)), bool(bvec2(false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))), bool(bvec4(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false))))), false, true, false))))))), true)))), false, true, true)))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, false), false)))))), bvec3(bvec4(bvec3(false, false, false), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false, false), false)))))))), false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mat2(1.0) * (max(injectionSwitch, injectionSwitch))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (max(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (max(injectionSwitch, injectionSwitch))))))), max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0))))).x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED((+ 1.1)))) > injectionSwitch.y)))) || false), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               return;
              }
             break;
            }
           continue;
          }
        }
       if(_GLF_DEAD(false))
        break;
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          break;
         break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, 0 ^ (4)), 64, 4);
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
        }
       else
        {
         subgroupAll(true);
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(false))
          continue;
         continue;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       return;
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
}
