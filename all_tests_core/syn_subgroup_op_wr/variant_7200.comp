#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), bool(_GLF_IDENTITY(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), true && (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), true && (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), true && (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), true && (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), true && (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), true && (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), true && (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))))) && true), false), true)))))), false)), true, true), bvec3(bvec3(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, true)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-8533.8080), min(_GLF_FUZZED(-8533.8080), _GLF_FUZZED(-8533.8080)))), vec2(_GLF_FUZZED(float(2210)), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (1)))], clamp((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))))[1], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(_GLF_IDENTITY(mat4((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1], 0.0, 1.0, 1.0, sin(0.0), 1.0, 0.0, 0.0, sin(0.0), 1.0, tan(tan(0.0)), 0.0, _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) + 0.0)), float(_GLF_FUZZED(-8.2)), bool(false))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 0.0))), 1.0, 1.0), mat4(1.0) * (_GLF_IDENTITY(mat4((injectionSwitch)[1], 0.0, 1.0, 1.0, sin(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(sin(0.0), (sin(0.0)) / _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), 1.0, tan(tan(0.0)), 0.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 0.0))), 1.0, 1.0), (false ? _GLF_FUZZED(mat4(_GLF_IDENTITY(55.67, min(55.67, 55.67)), 6.0, -8.1, -5046.9249, 1.5, 792.354, -0.4, 69.12, 552.253, 4.7, 644.661, -7377.4537, 6.3, -8714.0568, -5.1, -1.5)) : mat4((injectionSwitch)[1], 0.0, 1.0, 1.0, sin(0.0), 1.0, 0.0, 0.0, sin(0.0), 1.0, tan(tan(0.0)), 0.0, sqrt(0.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.97) : 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 0.0))), 1.0, 1.0)))))), 1.0 * (float(_GLF_IDENTITY(mat4((injectionSwitch)[1], 0.0, 1.0, 1.0, sin(0.0), _GLF_IDENTITY(1.0, (1.0) / cos(0.0)), 0.0, 0.0, sin(0.0), 1.0, tan(tan(0.0)), 0.0, sqrt(0.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 1.0), vec4(1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, 0.0, 1.0)), 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 0.0))), max(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)), 1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, determinant(mat4(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-87.13) : _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0))), 1.0)), 0.0))))), 1.0, 1.0), mat4(1.0) * (_GLF_IDENTITY(mat4((injectionSwitch)[1], 0.0, 1.0, 1.0, sin(0.0), 1.0, 0.0, 0.0, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 1.0, tan(tan(0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), sqrt(0.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 1.0 * (0.0)))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 0.0))), 1.0, 1.0), (false ? _GLF_FUZZED(mat4(_GLF_IDENTITY(55.67, (55.67) + 0.0), 6.0, -8.1, -5046.9249, 1.5, 792.354, _GLF_IDENTITY(-0.4, 1.0 * (-0.4)), 69.12, 552.253, 4.7, 644.661, -7377.4537, 6.3, -8714.0568, -5.1, -1.5)) : mat4((injectionSwitch)[1], 0.0, 1.0, 1.0, sin(0.0), 1.0, 0.0, 0.0, sin(0.0), 1.0, tan(tan(0.0)), 0.0, sqrt(0.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-52.29)), float(0.0), bool(true))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 0.0))), 1.0, 1.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))) * vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-34.17)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8049.6464)), float(1.0), bool(true)))), bool(true))), 1.0))[1], mix(float(_GLF_FUZZED(-8.6)), float(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))) * vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-34.17)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8049.6464)), float(1.0), bool(true)))), bool(true))), 1.0))[1]), bool(true)))))), bvec2(false, true))).x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)) * workgroup_id;
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size));
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)) + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), subgroup_local_id)), min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), subgroup_local_id))))) ^ (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_base)))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_base)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_base))))))))) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-718.109) : injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-718.109) : injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = 0;
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid))], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), float(_GLF_FUZZED(78.24)), bool(false))) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), 0u ^ (~ _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) / 1u))))) % _GLF_IDENTITY(2, (2) | (2))) == 0)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))) || (false), _GLF_IDENTITY(bool(bvec3(false || (false), false, false)), true && (bool(bvec3(false || (false), false, false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, 0 | (2)));
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))), false, true))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat3(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat3(mat3x4(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), transpose(transpose(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat3(mat3x4(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))))))), (determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))) / 1.0), 0.0), transpose(transpose(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0)))))).y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(determinant(mat3(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))))))) / 1.0), 0.0), transpose(transpose(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0)))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(517.137)), float(0.0), bool(true))))), 1.0)), (determinant(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat3(_GLF_IDENTITY(mat4x3(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), mat4x3(mat4(mat4x3(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))))) / 1.0), 0.0), transpose(transpose(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0)))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(517.137)), (false ? _GLF_FUZZED(cos(sinh(-247.975))) : float(_GLF_FUZZED(517.137)))), float(0.0), bool(true))))), 1.0)), (determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat3(_GLF_IDENTITY(mat4x3(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), mat4x3(mat4(mat4x3(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))))) / 1.0), 0.0), transpose(transpose(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0)))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(517.137)), float(0.0), bool(true))))), 1.0)), (determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat3(_GLF_IDENTITY(mat4x3(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), mat4x3(mat4(mat4x3(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0))))))))) / 1.0), 0.0), transpose(transpose(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 1.0)), 0.0)))))).y, float(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(517.137)), float(0.0), bool(true))))), 1.0)), (determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat3(_GLF_IDENTITY(mat4x3(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), mat4x3(mat4(mat4x3(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))))) / 1.0), 0.0), transpose(transpose(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0)))))).y, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)))) * 1.0), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(517.137)), float(0.0), bool(true))))), 1.0), transpose(_GLF_IDENTITY(transpose(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(517.137)), float(0.0), bool(true))))), 1.0)), transpose(transpose(transpose(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(517.137)), float(0.0), bool(true))))), 1.0)))))))), (determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat3(_GLF_IDENTITY(mat4x3(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), mat4x3(mat4(mat4x3(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))))) / 1.0), 0.0), transpose(transpose(mat2x3(injectionSwitch, _GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((fract(-461.288))))), injectionSwitch.y), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 0.0)))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(517.137)), float(0.0), bool(true))))), 1.0)), (determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat3(_GLF_IDENTITY(mat4x3(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), mat4x3(mat4(mat4x3(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))))) / 1.0), 0.0), transpose(transpose(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)))), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0)))))).y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(517.137)), float(0.0), bool(true))))), 1.0)), (determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat3(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat3(mat4(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), mat4x3(mat4(mat4x3(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))))) / 1.0), 0.0), transpose(transpose(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0)))))).y) / 1.0)))))), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), true && ((! ((injectionSwitch.x > injectionSwitch.y)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-43.16)), bool(false))), _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-43.16)), bool(false))), _GLF_IDENTITY(true, ! (! (true))))), (bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-43.16)), bool(false))), _GLF_IDENTITY(true, ! (! (true)))))) && true)))))), true))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ! _GLF_IDENTITY(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true)))))), ! (! (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, false))))) || false))))))), _GLF_IDENTITY(true && ((! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), true && (_GLF_IDENTITY(true && ((! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(true && ((! ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(true && ((! ((injectionSwitch.x > injectionSwitch.y)))), true)))) || false))))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, 0.0))))).x > injectionSwitch.y)))), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, 0.0))))).x > injectionSwitch.y)))), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, 0.0))))).x > injectionSwitch.y)))), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true)))))))))))) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   _GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, 2), (read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) / 1), 2)) | (0u | 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (0u << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (buf[virtual_gid])), 4, 64, 2), 0u + (read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, min(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, (64) - 0), 64)), 64)), 2)))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (true ? buf[virtual_gid] : _GLF_FUZZED(subgroup_size))), 4, 64, 2), (read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])), (_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], buf[virtual_gid]))) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) << 0u)) | 0u))), 4, 64, 2)) << 0u), 0u + (read = atomicLoad(buf[virtual_gid], 4, 64, 2)))), 0u ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, 2), (read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], clamp(buf[virtual_gid], buf[virtual_gid], buf[virtual_gid]))) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), max(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))), uint(2u)))), 4, 64, 2)) << 0u), 0u + _GLF_IDENTITY((read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), clamp(atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) + 0u)))), (_GLF_IDENTITY((read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), clamp(atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) + 0u)))), (_GLF_IDENTITY((read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), clamp(atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) + 0u)))), 0u ^ ((read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), clamp(atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) + 0u))))))) >> 0u)) << 0u)))))), (0u | (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (true ? buf[virtual_gid] : _GLF_FUZZED(subgroup_size))), 4, 64, 2), (read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])), (_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], buf[virtual_gid]))) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) << 0u)) | 0u))), 4, 64, 2)) << 0u), 0u + (read = atomicLoad(buf[virtual_gid], 4, 64, 2)))), 0u ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, 2), (read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], clamp(buf[virtual_gid], buf[virtual_gid], buf[virtual_gid]))) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), max(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))), uint(2u)))), 4, 64, 2)) << 0u), 0u + _GLF_IDENTITY((read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), clamp(atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) + 0u)))), (_GLF_IDENTITY((read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), clamp(atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) + 0u)))), (_GLF_IDENTITY((read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), clamp(atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) + 0u)))), 0u ^ ((read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), clamp(atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) + 0u))))))) >> 0u)) << 0u))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), sqrt(0.0) + (1.0)), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), sqrt(0.0) + (1.0))))), injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), sqrt(0.0) + (1.0)), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), sqrt(0.0) + (1.0))))), injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), sqrt(0.0) + (1.0)), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), sqrt(0.0) + (1.0))))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), sqrt(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-32.39)))), float(_GLF_FUZZED(2051.9903)), bool(false))) : _GLF_FUZZED(3.5)))) + (1.0)), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), sqrt(0.0) + (1.0))))), injectionSwitch.x))))) - 0.0) > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), sqrt(0.0) + (1.0))), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), sqrt(_GLF_IDENTITY(0.0, 0.0 + (0.0))) + _GLF_IDENTITY((1.0), float(mat3x4((1.0), 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, log(1.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0)), sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y))))), exp(0.0) * (_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), 1.0 * (dot(vec2(0.0, 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), (dot(vec2(0.0, 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)))) + 0.0)), 0.0), transpose(transpose(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), sqrt(0.0) + (1.0))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0))), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), (dot(vec2(0.0, 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)))) + 0.0), (_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[1]), vec2(_GLF_FUZZED(2.4), _GLF_FUZZED(6.2)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), (dot(vec2(0.0, 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)))) + 0.0)) - 0.0)), 0.0), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), sqrt(0.0) + _GLF_IDENTITY((1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4((1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat2x4((1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0))))), (float(_GLF_IDENTITY(mat2x4((1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat2x4((1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0)))))) + 0.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), (dot(vec2(0.0, 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)))) + 0.0)), 0.0))))))))), injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), sqrt(0.0) + (1.0))), injectionSwitch.x)) > injectionSwitch.y)))) && true), true, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) - _GLF_IDENTITY(0, 0 | (0))), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), vec4(mat2(vec4(1.0, 0.0, 0.0, 0.0)))), vec4(1.0, 0.0, 0.0, 0.0)), min(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))))), 1.0, tan(0.0), 0.0, 0.0, 1.0))), max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), false || (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))) || false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
