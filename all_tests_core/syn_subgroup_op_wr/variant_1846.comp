#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-7.3 * 1.9))), bool(false))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec2(bool(bvec4(false, false, false, false)), true))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec2(bool(bvec4(false, false, false, false)), true))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec2(bool(bvec4(false, false, false, false)), true)))))))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false), _GLF_IDENTITY(true && (! (_GLF_DEAD(false))), bool(bvec3(true && (! (_GLF_DEAD(false))), true, false)))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y)), false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(_GLF_IDENTITY(true && (! (_GLF_DEAD(false))), (true && (! (_GLF_DEAD(false)))) && true), (_GLF_IDENTITY(true && (! (_GLF_DEAD(false))), (true && (! (_GLF_DEAD(false)))) && true)) && true)))), true, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)), true && (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))) && true)))))), false))), true && (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))), true, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x < injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) * 1.0))), false)))))), _GLF_IDENTITY((! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))), true, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(log(injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))))).x > injectionSwitch.y)), false))), true && (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))) || (_GLF_DEAD(false)))))), true && (! (_GLF_DEAD(false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) * 1.0))), false))))))) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))), true, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(log(injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))))).x > injectionSwitch.y)), false))), true && (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))) || (_GLF_DEAD(false)))))), true && (! (_GLF_DEAD(false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) * 1.0))), false))))))) || false), true && (bool((! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))), true, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(log(injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))))).x > injectionSwitch.y)), false))), true && (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))) || (_GLF_DEAD(false)))))), true && (! (_GLF_DEAD(false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) * 1.0))), false))))))) || false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))), true, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(log(injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))))).x > injectionSwitch.y)), false))), true && (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))) || (_GLF_DEAD(false)))))), true && (! (_GLF_DEAD(false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) * 1.0))), false))))))) || false), true && (bool((! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))), true, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(log(injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))))).x > injectionSwitch.y)), false))), true && (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))) || (_GLF_DEAD(false)))))), true && (! (_GLF_DEAD(false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) * 1.0))), false))))))) || false)))), (bool(_GLF_IDENTITY(bool((! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))), true, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(log(injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))))).x > injectionSwitch.y)), false))), true && (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))) || (_GLF_DEAD(false)))))), true && (! (_GLF_DEAD(false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) * 1.0))), false))))))) || false), true && (bool((! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))), true, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(log(injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))))).x > injectionSwitch.y)), false))), true && (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))) || (_GLF_DEAD(false)))))), true && (! (_GLF_DEAD(false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) * 1.0))), false))))))) || false))))) || false))))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, (false ? _GLF_FUZZED(-22.66) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) * mat2(1.0)).x)) > injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) || false), true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, (false ? _GLF_FUZZED(-22.66) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) * mat2(1.0)).x)) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, (false ? _GLF_FUZZED(-22.66) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) * mat2(1.0)).x)) > injectionSwitch.y, true)))))))))))) && true))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))), bool(bvec4(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))), false, false, false)))) && _GLF_IDENTITY(true, (true) || false)))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(158608u, 150910u, 157069u)))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6497.5397), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6.3)), bvec2(true, false))) : _GLF_FUZZED(injectionSwitch)))), mix(vec2(_GLF_FUZZED(-4.2), ((injectionSwitch))[1]), vec2(_GLF_IDENTITY(((injectionSwitch))[0], mix(float(((injectionSwitch))[0]), float(_GLF_FUZZED(5.5)), bool(false))), _GLF_FUZZED(7.4)), bvec2(true, false))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) - vec2(0.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) - vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-6.8), (((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) - vec2(0.0, 0.0))[1]), vec2((((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) - vec2(0.0, 0.0))[0], _GLF_FUZZED(5.7)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), true))))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) - vec2(0.0, 0.0))))).y)) || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(vec2((injectionSwitch) * mat2(1.0))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (1u ^ 1u) + (subgroup_id * subgroup_size)))))));
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u | (subgroup_base), (0u | (subgroup_base)) | 0u)), clamp(subgroup_base, subgroup_base, subgroup_base)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))), _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(uint(2u), 0u, 1u, 0u)), ~ (~ (uint(uvec4(uint(2u), 0u, 1u, 0u))))), (_GLF_IDENTITY(uint(uvec4(uint(2u), 0u, 1u, 0u)), ~ (~ (uint(uvec4(uint(2u), 0u, 1u, 0u)))))) << 0u))), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ (clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(uint(2u), 0u, 1u, 0u)), ~ (~ (uint(uvec4(uint(2u), 0u, 1u, 0u))))), (_GLF_IDENTITY(uint(uvec4(uint(2u), 0u, 1u, 0u)), ~ (~ (uint(uvec4(uint(2u), 0u, 1u, 0u)))))) << 0u)))))), uint(2u)))), 0u | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(uint(2u), 0u, 1u, 0u)), ~ (~ (uint(uvec4(uint(2u), 0u, 1u, 0u))))), (_GLF_IDENTITY(uint(uvec4(uint(2u), 0u, 1u, 0u)), ~ (~ (uint(uvec4(uint(2u), 0u, 1u, 0u)))))) << 0u)))), uint(2u)))), 0u | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))))), 1u * _GLF_IDENTITY(((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(_GLF_IDENTITY(2u, (2u) - 0u)), uint(2u), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(uint(2u), 0u, 1u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) | 0u)))))), ~ (~ (uint(uvec4(uint(2u), 0u, 1u, 0u))))), (_GLF_IDENTITY(uint(uvec4(uint(2u), 0u, 1u, 0u)), ~ (~ (uint(uvec4(uint(2u), 0u, 1u, 0u)))))) << 0u)))), _GLF_IDENTITY(uint(2u), 0u + (uint(2u)))))), 0u | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))))))), 0u ^ (((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(_GLF_IDENTITY(2u, (2u) - 0u)), uint(2u), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(uint(2u), 0u, 1u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) | 0u)))))), ~ (~ (uint(uvec4(uint(2u), 0u, 1u, 0u))))), (_GLF_IDENTITY(uint(uvec4(uint(2u), 0u, 1u, 0u)), ~ (~ (uint(uvec4(uint(2u), 0u, 1u, 0u)))))) << 0u)))), _GLF_IDENTITY(uint(2u), 0u + (uint(2u)))))), 0u | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))))))))), 1u), (false ? _GLF_FUZZED(uvec2(195250u, 180084u)) : uvec2(_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(uint(2u), 0u, 1u, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec4(uint(2u), 0u, 1u, 0u)), max(_GLF_IDENTITY(uint(uvec4(uint(2u), 0u, 1u, 0u)), uint(uvec4(uint(uvec4(uint(2u), 0u, 1u, 0u)), 0u, 0u, 1u))), uint(uvec4(uint(2u), 0u, 1u, 0u))))))), (_GLF_IDENTITY(uint(uvec4(uint(2u), 0u, 1u, 0u)), ~ (~ (uint(uvec4(uint(2u), 0u, 1u, 0u)))))) << 0u)))), uint(2u)))), 0u | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))))), 1u * ((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(uint(2u), 0u, 1u, 0u)), ~ (~ (uint(uvec4(uint(2u), 0u, 1u, 0u))))), (_GLF_IDENTITY(uint(uvec4(uint(2u), 0u, 1u, 0u)), ~ (~ (uint(uvec4(uint(2u), 0u, 1u, 0u)))))) << 0u)))), uint(2u)))), 0u | _GLF_IDENTITY((subgroup_base), ~ (~ _GLF_IDENTITY(((subgroup_base)), uint(uvec2(_GLF_IDENTITY(((subgroup_base)), (_GLF_IDENTITY(((subgroup_base)), ~ (~ (((subgroup_base)))))) | 0u), 0u)))))))))), 1u))))) ^ 0u))) + ((subgroup_local_id + 1) % subgroup_size);
 uint read = _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, 0, 1), _GLF_IDENTITY(min(ivec3(0, 0, 1), ivec3(0, _GLF_IDENTITY(0, (0) << ((0 >> _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(int(1), int(1)))), 1)), (_GLF_IDENTITY(min(ivec3(0, 0, 1), ivec3(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0) << ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), min(_GLF_IDENTITY(int(0), (int(0)) | 0), int(0))), int(0))) << _GLF_IDENTITY(int(1), int(1))), max((0) << ((0 >> _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(int(1), int(1))), _GLF_IDENTITY((0) << ((0 >> _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(int(1), int(1))), min((0) << ((0 >> _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(int(1), int(1))), (0) << ((0 >> _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, (1) / 1))))))))), 1)), min(_GLF_IDENTITY(min(ivec3(0, 0, 1), ivec3(0, _GLF_IDENTITY(0, (0) << ((0 >> _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(int(1), int(1)))), 1)), clamp(min(ivec3(0, 0, 1), ivec3(0, _GLF_IDENTITY(0, (0) << ((0 >> _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(int(1), int(1)))), 1)), min(ivec3(0, 0, 1), ivec3(0, _GLF_IDENTITY(0, (0) << ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) << 0), int(0))) << _GLF_IDENTITY(int(1), int(1)))), 1)), min(ivec3(0, 0, 1), ivec3(0, _GLF_IDENTITY(0, (0) << _GLF_IDENTITY(((0 >> _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(int(1), int(1))), (((0 >> _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(int(1), int(1)))) << 0)), 1)))), min(ivec3(0, 0, 1), ivec3(0, _GLF_IDENTITY(0, (0) << ((0 >> _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1)))), _GLF_IDENTITY(int(1), int(1)))))), 1))))) | (_GLF_IDENTITY(min(ivec3(0, 0, 1), ivec3(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, min(0, 0)), int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0, int(int(0))))))) << ((0 >> _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(int(1), int(1)))), 1)), min(min(ivec3(0, 0, 1), ivec3(0, _GLF_IDENTITY(0, (0) << ((0 >> _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(int(1), int(1)))), 1)), _GLF_IDENTITY(min(ivec3(0, 0, 1), ivec3(0, _GLF_IDENTITY(0, (0) << ((0 >> _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(int(1), int(1)))), 1)), (min(ivec3(0, 0, 1), ivec3(0, _GLF_IDENTITY(0, (0) << ((0 >> _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(int(1), int(1)))), 1))) | ivec3(0, 0, 0)))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) ? float(true) : 210.970), mix(float(_GLF_FUZZED(3.4)), float(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ((true)) || false), true && (! (true))))) ? float(true) : 210.970), mix(float((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) ? float(true) : 210.970)), float(_GLF_FUZZED(604.059)), bool(false)))), bool(true))))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) % 2, (true ? _GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) ^ 0u) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 1u * (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)))))))) == 0)
  {
   subgroupAll(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec3(false, false, false)))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, max(2, 2)));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(23.97)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y) && true), true, true)))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0)) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : min(injectionSwitch, injectionSwitch)))).y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))))))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false))))))))) && true))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))) || false, ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), ! (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))))) || false), (! ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))) || false)) || false)))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false))))))))))), false || ((_GLF_IDENTITY(false, ! (! (false))))))) && true))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))) || false, ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), ! (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), (! ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))) || false)) || false)))))))), true && (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))) && true))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))) || false, ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), ! (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), (! ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))) || false)) || false))))))))))) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))) && true))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))) || false, ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), ! (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), (! ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))) || false)) || false)))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))) && true))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))) || false, ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), ! (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), (! ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))) || false)) || false)))))))), true && (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))) && true))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))) || false, ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), ! (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), (! ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))) || false)) || false))))))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))) && true))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))) || false, ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), ! (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), (! ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))) || false)) || false)))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))) && true))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))) || false, ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), ! (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), (! ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))) || false)) || false)))))))), true && (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))) && true))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))) || false, ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), ! (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), (! ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))) || false)) || false))))))))))) || false), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))) && true))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))) || false, ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), ! (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), (! ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))) || false)) || false)))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))) && true))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))) || false, ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), ! (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), (! ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))) || false)) || false)))))))), true && (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))) && true))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))) || false, ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), ! (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), (! ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))) || false)) || false))))))))))) || false))))) && true)))), bool(bvec3(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)), false || ((_GLF_IDENTITY(false, ! (! (false))))))) && true))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false))))) || false, ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true))))))))) || false), ! (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))) || false, ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))) || false) && true))) || false)))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))) && true))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), true && ((! (_GLF_IDENTITY(false, ! (! (false))))))) || false), ! (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), (! _GLF_IDENTITY(((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))) || false), false || (((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))) || false)))) || false)))))))), true && (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))), ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))) && true))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))) || false, ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), ! (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), (! ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))) || false)) || false))))))))))) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))) && true))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))) || false, ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), ! (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), (! ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))) || false)) || false)))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))) && true))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))) || false, ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), ! (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), (! ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))) || false)) || false)))))))), true && (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))) && true))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))) || false, ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), ! (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), (! ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))) || false)) || false))))))))))) || false)))), bool(bvec3(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))) && true))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))) || false, ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), ! (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), (! ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))) || false)) || false)))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))) && true))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))) || false, ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), ! (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), (! ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))) || false)) || false)))))))), true && (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))) && true))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))) || false, ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), ! (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), (! ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))) || false)) || false))))))))))) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false, false, false))), ! (! (! (bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))) && true))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))) || false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), ! (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), (! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false)) && true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), ! (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), (! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false)) && true))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), (! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false)) && true), (! ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))) || false)) || false)))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))) && true))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))) || false, ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), ! (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), (! ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))) || false)) || false)))))))), true && (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))) && true))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false))))))) || false, ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), ! (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), (! ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))) || false)) || false))))))))))) || false)))), bool(bvec3(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))) && true))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))) || false, ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), ! (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))) || false), (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true)))))))))) || false)) || false)))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), true && (! ((! (false))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))) && true))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))) || false, ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), ! (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), (! ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))) || false)) || false)))))))), true && (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))) && true))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))) || false, ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), ! (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false))))) || false), (! ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))) || false)) || false))))))))))) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false, false, false))))))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)), bool(bvec3(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6132.1752)), bool(false))), true, true, false)), true, true))))) && true))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))) + 0.0), injectionSwitch.y))))), float(_GLF_FUZZED(-681.081)), bool(false)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), (false ? _GLF_FUZZED(85.67) : float(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))))) * (_GLF_IDENTITY(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-681.081)), bool(false)), (mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-681.081, clamp(-681.081, -681.081, -681.081)))), determinant(mat3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, sin(0.0), 0.0, 1.0)) * (float(_GLF_FUZZED(_GLF_IDENTITY(-681.081, clamp(-681.081, -681.081, -681.081)))))), bool(false))) + 0.0), min(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-681.081)), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-681.081)), bool(false))) + 0.0), _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-681.081)), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-681.081)), bool(false))) + 0.0)))))) : _GLF_FUZZED(759.163))))) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)))), min(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)))), (vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0))))) / cos(vec2(0.0, 0.0))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) << 0)], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)))))), vec2(_GLF_FUZZED(247.066), _GLF_FUZZED(-4378.5775)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), mix(vec2(_GLF_FUZZED(-5.5), _GLF_FUZZED(-5363.1296)), vec2((_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)))), min(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)))), (vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0))))) / cos(vec2(0.0, 0.0))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) << 0)], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)))))), vec2(_GLF_FUZZED(247.066), _GLF_FUZZED(-4378.5775)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))[0], (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)))), min(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)))), (vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0))))) / cos(vec2(0.0, 0.0))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) << 0)], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)))))), vec2(_GLF_FUZZED(247.066), _GLF_FUZZED(-4378.5775)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))[1]), bvec2(true, true))).y))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false))) || false)) && true))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))) + 0.0), injectionSwitch.y))))), float(_GLF_FUZZED(-681.081)), bool(false)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), (false ? _GLF_FUZZED(85.67) : float(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))))) * (_GLF_IDENTITY(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-681.081)), bool(false)), (mix(float(injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-681.081, clamp(-681.081, -681.081, -681.081)))), determinant(mat3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, sin(0.0), 0.0, 1.0)) * (float(_GLF_FUZZED(_GLF_IDENTITY(-681.081, clamp(-681.081, -681.081, -681.081)))))), min(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-681.081, clamp(-681.081, -681.081, -681.081)))), determinant(mat3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, sin(0.0), 0.0, 1.0)) * (float(_GLF_FUZZED(_GLF_IDENTITY(-681.081, clamp(-681.081, -681.081, -681.081)))))), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-681.081, clamp(-681.081, -681.081, -681.081)))), determinant(mat3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, sin(0.0), 0.0, 1.0)) * (float(_GLF_FUZZED(_GLF_IDENTITY(-681.081, clamp(-681.081, -681.081, -681.081)))))))), bool(false))) + 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-681.081)), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-681.081)), bool(false))) + 0.0), _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-681.081)), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-681.081)), bool(false))) + 0.0)), min(_GLF_IDENTITY(min(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-681.081)), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-681.081)), bool(false))) + 0.0), _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-681.081)), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-681.081)), bool(false))) + 0.0)), min(min(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-681.081)), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-681.081)), bool(false))) + 0.0), _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-681.081)), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-681.081)), bool(false))) + 0.0)), min(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-681.081)), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-681.081)), bool(false))) + 0.0), _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-681.081)), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-681.081)), bool(false))) + 0.0)))), _GLF_IDENTITY(min(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-681.081)), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-681.081)), bool(false))) + 0.0), _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-681.081)), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-681.081)), bool(false))) + 0.0)), float(mat2x3(min(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-681.081)), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-681.081)), bool(false))) + 0.0), _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-681.081)), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-681.081)), bool(false))) + 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0))))))))) : _GLF_FUZZED(759.163))))) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)))), min(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)))), (vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0))))) / cos(vec2(0.0, 0.0))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) << 0)], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)))))), vec2(_GLF_FUZZED(247.066), _GLF_FUZZED(-4378.5775)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), mix(vec2(_GLF_FUZZED(-5.5), _GLF_FUZZED(-5363.1296)), vec2((_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-32917)))], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), mix(float(_GLF_FUZZED(270.951)), float(((injectionSwitch)[1])), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) - 0.0)))), min(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))[1]) - 0.0)))), (vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0))))) / cos(vec2(0.0, 0.0))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (_GLF_IDENTITY(1, (1) << 0)) >> 0)], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)))))), vec2(_GLF_FUZZED(247.066), _GLF_FUZZED(-4378.5775)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))[0], (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), clamp(((injectionSwitch)[1]), _GLF_IDENTITY(((injectionSwitch)[1]), (((injectionSwitch)[1])) - 0.0), ((injectionSwitch)[1]))) - 0.0)))), min(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)))), (vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0))))) / cos(vec2(0.0, 0.0))), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) << 0)], ((injectionSwitch)[_GLF_IDENTITY(1, (1) << 0)]) / 1.0), max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3171.9687), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(6.9, -9.4).s)), bvec2(true, false))))[1]) - 0.0)))))), vec2(_GLF_FUZZED(247.066), _GLF_FUZZED(-4378.5775)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))[1]), bvec2(true, _GLF_IDENTITY(true, ! (! (true)))))).y))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false)), bool(bvec4(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false)), true, true, false)))) || false)) && true)))) && true)))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (false ? _GLF_FUZZED(45068) : 4)), 64, 2);
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(1.0))))))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, _GLF_IDENTITY(min(_GLF_IDENTITY(read, max(_GLF_IDENTITY(read, (read) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), read)), _GLF_IDENTITY(read, max(_GLF_IDENTITY(read, (read) - _GLF_IDENTITY(0u, (0u) >> 0u)), read))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(mix(subgroup_id, subgroup_id, true)) : min(_GLF_IDENTITY(read, (_GLF_IDENTITY(_GLF_IDENTITY(read, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false) && true))) ? _GLF_FUZZED(subgroup_local_id) : read, (false ? _GLF_FUZZED(subgroup_local_id) : read) - (54871u & 0u)))), (_GLF_IDENTITY(read, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(subgroup_local_id) : read, (false ? _GLF_FUZZED(subgroup_local_id) : read) - (_GLF_IDENTITY(54871u & 0u, max(54871u & 0u, 54871u & 0u))))))) << (0u | 0u))) | 0u), _GLF_IDENTITY(read, max(_GLF_IDENTITY(read, _GLF_IDENTITY(_GLF_IDENTITY((read), max(_GLF_IDENTITY((read), clamp((read), (read), (read))), (read))) - 0u, uint(_GLF_IDENTITY(uint((read) - 0u), (uint((read) - 0u)) << 0u)))), read)))))), _GLF_IDENTITY(4, min(4, 4)), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.6)), bool(false))), 0.0, 0.0))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
}
