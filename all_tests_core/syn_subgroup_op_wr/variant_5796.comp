#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8832.5318, 15.29)))), min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), min(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (true ? min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, injectionSwitch.y) : _GLF_FUZZED(2.5))), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (false ? _GLF_FUZZED(6.4) : float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))), 1.0, 0.0), _GLF_IDENTITY(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), min(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (true ? min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, injectionSwitch.y) : _GLF_FUZZED(2.5))), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (false ? _GLF_FUZZED(6.4) : float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))), 1.0, 0.0)), vec3(0.0, 0.0, 0.0) + (mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), min(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (true ? min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, injectionSwitch.y) : _GLF_FUZZED(2.5))), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (false ? _GLF_FUZZED(6.4) : float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))), 1.0, 0.0)))))))), false || (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-61.66)), vec2(_GLF_FUZZED(-88.03), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), sqrt(vec2(1.0, 1.0)) * (min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0))))), injectionSwitch, injectionSwitch))))), (_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), vec2(vec4(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0)), 0.0, 1.0)))[0], _GLF_FUZZED(-61.66)), vec2(_GLF_FUZZED(-88.03), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-299.972)), bool(false))))), true))), vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), sqrt(vec2(1.0, 1.0)) * (min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0))))), injectionSwitch, injectionSwitch)))))) / vec2(1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0))) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))), injectionSwitch)).y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0))))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), min(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), min(min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y)))) - 0.0), _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (true ? min(injectionSwitch.y, injectionSwitch.y) : _GLF_FUZZED(2.5))), min(injectionSwitch.y, injectionSwitch.y)))), 1.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))))), false || (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1], injectionSwitch[1])))))[0], _GLF_FUZZED(-61.66)), vec2(_GLF_FUZZED(-88.03), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), vec2(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.8)), bool(false))), 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]), vec2(_GLF_FUZZED(8.0), _GLF_FUZZED((+ -9.8))), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))), sqrt(vec2(1.0, 1.0)) * (min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0))))), injectionSwitch, injectionSwitch)))))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-812.452, 8.6)) : injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0)))) * mat2(1.0)) + vec2(0.0, 0.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) * mat2(1.0))) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))), injectionSwitch)).y, float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0))))))), true), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(458.576)), float(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), bool(true))), 0.0))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), min(min(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), clamp(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(122.654)))), (true ? _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), max(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(9.3)), float(min(injectionSwitch.y, injectionSwitch.y)), bool(true))), min(injectionSwitch.y, injectionSwitch.y))) : _GLF_FUZZED(2.5))), min(injectionSwitch.y, injectionSwitch.y)))), 1.0, 0.0)))), false || (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-61.66)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-88.03), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(-88.03), (injectionSwitch)[1])) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)) * (min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0))))), injectionSwitch, injectionSwitch)))), min(sqrt(vec2(1.0, 1.0)) * (min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0))))), injectionSwitch, injectionSwitch)))), sqrt(vec2(1.0, 1.0)) * (min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0))))), injectionSwitch, injectionSwitch)))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0))) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))), vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0))) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0))) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0))) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0))) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch)))))))) * vec2(1.0, 1.0)), 0.0, 1.0, tan(0.0), 1.0, 1.0, 1.0))), injectionSwitch)).y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0))))))), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4.4, -72.25)))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || false))), ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false))))), false || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)), (bool(bvec2(_GLF_IDENTITY(false, (false) || false), true))) && true)), ! (! (false))))), false || (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (_GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(bvec3(false, true, false)), false, true, false)))) || false))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bool(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(false || (! (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec4(false || (! (_GLF_DEAD(false))), false, false, false)), bool(bool(_GLF_IDENTITY(bool(bvec4(false || (! (_GLF_DEAD(false))), false, false, false)), true && (bool(bvec4(false || (! (_GLF_DEAD(false))), false, false, false)))))))))))) || false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec4(bool(bvec3((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true, false, false)))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-3.1), float(vec4(true ? injectionSwitch.y : _GLF_FUZZED(-3.1), 0.0, 1.0, 0.0))))), (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, tan(0.0), 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0)), clamp(float(mat2x4(injectionSwitch.x, tan(0.0), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) * 1.0, (true ? (1.0) * 1.0 : _GLF_FUZZED(38.64)))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), 1.0, 0.0, 1.0)), float(mat2x4(injectionSwitch.x, _GLF_IDENTITY(tan(0.0), (tan(0.0)) / 1.0), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-1748.7265))), (_GLF_IDENTITY(1.0, (1.0) - 0.0)) * 1.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(min(1410.2262, 6.2))))), 1.0, 0.0, 1.0)), float(mat2x4(injectionSwitch.x, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0))))), (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, tan(0.0), 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), 1.0, 0.0, 1.0)), clamp(float(mat2x4(injectionSwitch.x, tan(0.0), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0) * 1.0, min((1.0) * 1.0, (1.0) * 1.0)), (true ? (1.0) * 1.0 : _GLF_FUZZED(38.64)))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), 1.0, 0.0, 1.0)), float(mat2x4(injectionSwitch.x, _GLF_IDENTITY(tan(0.0), (tan(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat3(0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(mat3(6504.2791, 2.8, -7019.4115, -3.4, -6.1, -6.1, 2.4, 5979.0073, 0.7)) : transpose(mat3(0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 1.0)))))))))) / _GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 1.0, tan(0.0), sqrt(0.0))), dot(vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 1.0, tan(0.0), sqrt(0.0)))), 1.0)))), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-1748.7265))), _GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) - 0.0)) * 1.0, sqrt(1.0) * ((_GLF_IDENTITY(1.0, (1.0) - 0.0)) * 1.0))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(min(1410.2262, 6.2))))), 1.0, 0.0, 1.0)), float(mat2x4(injectionSwitch.x, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), 1.0, 0.0, 1.0))))) : _GLF_FUZZED(length(vec3(-870.710, -9.5, -7.9))))) < injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-25.70)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, ((injectionSwitch.x) / 1.0) - determinant(mat3(0.0, 0.0, 0.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 0.0)))), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))) || _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec4((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) / 1)))], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).y, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), max(_GLF_IDENTITY(0, (0) / 1), _GLF_IDENTITY(0, (0) / 1)))))], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).y : _GLF_FUZZED(_GLF_IDENTITY(fract(76.92), mix(float(_GLF_FUZZED(51.91)), float(fract(76.92)), bool(true))))), ((true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), max(_GLF_IDENTITY(0, (0) / 1), _GLF_IDENTITY(0, (0) / 1)))))], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).y : _GLF_FUZZED(fract(76.92)))) * 1.0)), ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0), min((0), (0))) / 1), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(0, (0) / (1 ^ 0))))) / 1)), int(ivec3((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(0, (0) / (1 ^ 0))))) / 1)), 1, 0))), int(ivec2(~ (_GLF_IDENTITY(0, (0) / 1)), 0)))))))], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).y, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- 6.6))), vec2(_GLF_FUZZED(9.0), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-84.28), _GLF_FUZZED(820.385)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch))[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), max(_GLF_IDENTITY(0, (0) / 1), _GLF_IDENTITY(0, (0) / 1)))))], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1]))), float(_GLF_FUZZED(-55.78)), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])))), injectionSwitch[1], injectionSwitch[_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(8), int(8))) + (1))])))).y : _GLF_FUZZED(fract(76.92))), ((true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), max(_GLF_IDENTITY(0, (0) / 1), _GLF_IDENTITY(0, (0) / 1)))))], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).y : _GLF_FUZZED(fract(76.92)))) * 1.0)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(asin(589.601)))), float(mat2x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(length(0.0), 1.0 * (length(0.0))), 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(determinant(mat3(2919.2089, 80.01, 5771.4754, -2.4, -44.89, -45.00, 1.7, -8.7, -1214.2994))))), 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, tan(0.0))), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, round(length(normalize(1.0))), 1.0, 1.0))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-51.53)), float(0.0), bool(true)))))), float(mat3x4(injectionSwitch.y, 1.0, _GLF_IDENTITY(round(length(normalize(exp(vec2(0.0, 0.0))))), (true ? _GLF_IDENTITY(round(length(normalize(exp(vec2(0.0, 0.0))))), clamp(round(length(normalize(exp(vec2(0.0, 0.0))))), round(length(normalize(exp(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(55.29), (vec2(0.0, 0.0))[1]), vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED((41.67 * 841.165))), bvec2(true, false))))))), round(length(normalize(exp(vec2(0.0, 0.0))))))) : _GLF_IDENTITY(_GLF_FUZZED(-2.5), (_GLF_FUZZED(_GLF_IDENTITY(-2.5, (_GLF_IDENTITY(false, bool(bvec2(false, false))) ? _GLF_FUZZED(-5309.9846) : -2.5)))) + _GLF_ZERO(0.0, injectionSwitch.x)))), 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(-8.8), clamp(_GLF_IDENTITY(_GLF_FUZZED(-8.8), (true ? _GLF_IDENTITY(_GLF_FUZZED(-8.8), (_GLF_IDENTITY(_GLF_FUZZED(-8.8), max(_GLF_FUZZED(-8.8), _GLF_IDENTITY(_GLF_FUZZED(-8.8), min(_GLF_FUZZED(-8.8), _GLF_FUZZED(-8.8)))))) - 0.0) : _GLF_FUZZED(-9956.6267))), _GLF_IDENTITY(_GLF_FUZZED(-8.8), float(mat4(_GLF_FUZZED(-8.8), sqrt(1.0), 1.0, length(vec3(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, 1.0, tan(abs(0.0)), 0.0, 1.0))), 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_FUZZED(-8.8), min(_GLF_FUZZED(-8.8), _GLF_FUZZED(-8.8)))))), bool(false))), 1.0)), injectionSwitch.y), 0.0, 0.0)), tan(_GLF_IDENTITY(0.0, (0.0) - abs(0.0))), _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) / vec3(1.0, 1.0, 1.0))))), 1.0 * (round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) / vec3(1.0, 1.0, 1.0))))))), 1.0)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec3(gl_WorkGroupSize.x, 0u, 0u), min(uvec3(gl_WorkGroupSize.x, 0u, 0u), uvec3(gl_WorkGroupSize.x, 0u, _GLF_IDENTITY(0u, 0u + (0u)))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u)) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(19.16)), float(injectionSwitch.x), bool(true))), injectionSwitch.x, injectionSwitch.x)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, 0u | (gl_WorkGroupID.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)).x, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 0u, 1u, 0u), clamp(uvec4(gl_WorkGroupID.x, 0u, 1u, 0u), _GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 0u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(gl_WorkGroupID.x, 0u, 1u, 0u))), uvec4(gl_WorkGroupID.x, 0u, 1u, 0u))), (uvec4(gl_WorkGroupID.x, 0u, 1u, 0u)) | uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x))), gl_WorkGroupID.x))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))), false || ((injectionSwitch.x < injectionSwitch.y)))) && (_GLF_DEAD(false))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_id)), workgroup_id, _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) - 0u)))) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), 1u * ((1u << _GLF_IDENTITY(uint(2u), uint(2u)))))) | ((1u << _GLF_IDENTITY(uint(2u), uint(2u))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (workgroup_id) / 1u), (workgroup_size * workgroup_id) - 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))), _GLF_IDENTITY(bool(bvec4(false, false, true, true)), bool(bool(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), false || _GLF_IDENTITY((bool(bvec4(false, false, _GLF_IDENTITY(true, true && (true)), true))), ((bool(bvec4(false, false, _GLF_IDENTITY(true, true && (true)), true)))) || false))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3696.2186), _GLF_FUZZED(-93.37)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y))))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(determinant(mat4(2.7, -4.5, -8.5, -58.23, 6500.8084, _GLF_IDENTITY(-0.6, clamp(-0.6, -0.6, -0.6)), 6.4, 73.27, -1.2, 5921.9102, -57.15, _GLF_IDENTITY(4.3, (4.3) / abs(1.0)), -5.4, -7.9, -10.72, 57.07))))), mix(float(_GLF_FUZZED(749.674)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(determinant(mat4(2.7, -4.5, -8.5, -58.23, 6500.8084, _GLF_IDENTITY(-0.6, clamp(-0.6, -0.6, -0.6)), 6.4, 73.27, -1.2, 5921.9102, -57.15, _GLF_IDENTITY(4.3, (4.3) / abs(1.0)), -5.4, -7.9, -10.72, 57.07)))))), bool(true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), 0u ^ (~ (~ (subgroup_local_id + 1))))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), 0u ^ (~ (~ (subgroup_local_id + 1))))))))), clamp((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), 0u ^ (~ (~ (subgroup_local_id + 1))))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), 0u ^ (~ (~ (subgroup_local_id + 1))))))))), 0u | ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), 0u ^ (~ (~ (subgroup_local_id + 1))))))))))), (_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), 0u ^ (~ (~ (subgroup_local_id + 1))))))))))), (_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), 0u ^ (~ (~ (subgroup_local_id + 1))))))))))) % subgroup_size), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | (((subgroup_local_id + 1) % subgroup_size))))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size)) >> 0u, (_GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size)) >> 0u, uint(uvec3(_GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size)) >> 0u, ~ (~ (((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size)) >> 0u))), 1u, 1u)))) | (_GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size)) >> 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : ((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size)) >> 0u)))))) | 0u), _GLF_IDENTITY((workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uint((subgroup_local_id + 1) % subgroup_size))))))) | (workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u), subgroup_base, subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : (workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uint((subgroup_local_id + 1) % subgroup_size))))))) | (workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u), subgroup_base, subgroup_base)) + (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(virtual_gid) : (subgroup_local_id + 1))) % subgroup_size)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), float(mat3x2(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x)))), float(_GLF_FUZZED(-3918.0772)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x))))), mix(float(float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), float(_GLF_FUZZED(-9.6)), bool(false))), 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) / 1.0), 0.0, 1.0)))) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) + vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-87.40) : 0.0))) - 0.0)) * 1.0), 0.0)).y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), float(mat3x2(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x)))), float(_GLF_FUZZED(-3918.0772)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x))))), mix(float(float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), float(_GLF_FUZZED(-9.6)), bool(false))), 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) / 1.0), 0.0, 1.0)))) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) + vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-87.40) : 0.0))) - 0.0)) * 1.0), 0.0)).y), true))))))
  barrier();
 uint read = 0;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), _GLF_IDENTITY(uint(1), (uint(_GLF_IDENTITY(1, ~ (~ (1))))) ^ _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), false))))), (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))) && true), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), bvec3(bvec3(bvec3(false, false, false)))))) && true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ((injectionSwitch.x > injectionSwitch.y)) || false), true))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))) % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u))), min(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))))))) % 2) ^ (101370u & 0u))) == 0)
  {
   subgroupAll(false);
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(_GLF_IDENTITY(distance(52.34, -8.1), (_GLF_IDENTITY(distance(52.34, -8.1), clamp(distance(52.34, -8.1), distance(52.34, -8.1), distance(52.34, -8.1)))) - 0.0)) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.4), _GLF_FUZZED((7.1))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1850.1962)), float(injectionSwitch.y), bool(true)), max(mix(float(_GLF_FUZZED(-1850.1962)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1850.1962)), float(injectionSwitch.y), bool(true)), max(mix(float(_GLF_FUZZED(-1850.1962)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-1850.1962)), float(injectionSwitch.y), bool(true))))))), injectionSwitch.y))))), true, true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))), true, true, false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)), (float(mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(1.0, (1.0) - 0.0)), 0.0))) * 1.0)), max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)), (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0)), mix(float(_GLF_FUZZED(float(62969))), float(float(mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0))), bool(true)))) * 1.0)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(float(1.0)))) + _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)))))), 0.0)), (float(mat3(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0))) * 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-142.246, mix(float(_GLF_FUZZED(8.2)), _GLF_IDENTITY(float(-142.246), max(float(-142.246), _GLF_IDENTITY(float(-142.246), (float(-142.246)) + 0.0))), bool(true)))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-142.246)))), float(_GLF_FUZZED(230.533)), bool(_GLF_IDENTITY(false, ! (! (false)))))))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, exp(0.0), abs(0.0), 0.0, 0.0))).y) + 0.0)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   subgroupAll(false);
   read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), _GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))))], 4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (64) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, min(0, 0)))))))), max(_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(true))), true)))))), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true, (_GLF_IDENTITY((true) && true, ((true) && true) || false)) && true))))))) ? 64 : _GLF_FUZZED(41567))), 64)), _GLF_IDENTITY((_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(41567))), _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, min(64, 64)), 64))))))) * 1, ((_GLF_IDENTITY(64, _GLF_IDENTITY(max(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(41567))), _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, min(64, 64)), 64))))), int(ivec2(_GLF_IDENTITY(max(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(41567))), _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, min(64, 64)), 64))))), (max(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(41567))), _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, min(64, 64)), 64)))))) ^ 0), 0))))) * 1) >> 0)), 2);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y) - tan(0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y) - tan(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y) - tan(0.0))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 subgroupBarrier();
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (_GLF_IDENTITY(read, min(read, read))) | (_GLF_IDENTITY(read, max(read, read)))), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (-71859 & (0 << _GLF_IDENTITY(int(5), int(5)))) + (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, (-71859 & (0 << _GLF_IDENTITY(int(5), int(5)))) + (4)), int(ivec2(_GLF_IDENTITY(4, (-71859 & (0 << _GLF_IDENTITY(int(5), int(5)))) + (4)), 0)))) >> 0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
