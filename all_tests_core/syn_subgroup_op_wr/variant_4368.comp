#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_19 {
 mat2x3 _f0;
} ;

struct _GLF_struct_18 {
 int _injected_loop_counter;
 vec3 _f0;
 vec2 _f1;
 bool _f2;
} ;

struct _GLF_struct_20 {
 vec3 _f0;
 bvec2 _f1;
 _GLF_struct_18 _f2;
 mat4x3 _f3;
 _GLF_struct_19 _f4;
} ;

struct _GLF_struct_21 {
 _GLF_struct_20 _f0;
 uint _f1;
 uvec4 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_15 {
 ivec4 _f0;
} ;

struct _GLF_struct_16 {
 bool _f0;
 _GLF_struct_15 _f1;
 uint read;
} ;

struct _GLF_struct_17 {
 _GLF_struct_16 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_12 {
 vec4 _f0;
 ivec3 _f1;
 vec2 _f2;
 bvec2 _f3;
 uint _f4;
} ;

struct _GLF_struct_13 {
 mat4x3 _f0;
 mat4x3 _f1;
 uint workgroup_size;
 _GLF_struct_12 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_14 {
 _GLF_struct_13 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_9 {
 mat3x2 _f0;
 mat4x2 _f1;
 mat4x3 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_10 {
 _GLF_struct_9 _f0;
} ;

struct _GLF_struct_7 {
 ivec3 _f0;
 uint _f1;
 ivec2 _f2;
 uint _f3;
} ;

struct _GLF_struct_6 {
 bvec2 _f0;
 mat2x4 _f1;
 ivec3 _f2;
 ivec4 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_5 {
 mat3x2 _f0;
 mat2x3 _f1;
 bool _f2;
 mat2 _f3;
 mat4 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_4 {
 vec4 _f0;
 mat3x2 _f1;
 ivec4 _f2;
 uint _f3;
 bvec3 _f4;
 float _f5;
 mat4 _f6;
} ;

struct _GLF_struct_3 {
 vec3 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_8 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_5 _f2;
 mat3x4 _f3;
 uint next_virtual_gid;
 _GLF_struct_6 _f4;
 _GLF_struct_7 _f5;
} ;

struct _GLF_struct_11 {
 _GLF_struct_8 _f0;
 _GLF_struct_10 _f1;
} ;

struct _GLF_struct_0 {
 int _f0;
 uint workgroup_base;
 uvec2 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_1 {
 bvec2 _f0;
 float _f1;
 mat4 _f2;
 vec3 _f3;
 _GLF_struct_0 _f4;
} ;

struct _GLF_struct_2 {
 vec4 _f0;
 mat2x4 _f1;
 vec4 _f2;
 _GLF_struct_1 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_struct_13(mat4x3(1.0), mat4x3(1.0), gl_WorkGroupSize.x, _GLF_struct_12(vec4(1.0), ivec3(1), vec2(1.0), bvec2(true), 1u), mat3x2(1.0)), vec2(1.0));
 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y = _GLF_struct_replacement_14._f0.workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x = workgroup_id;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(vec4(1.0), mat2x4(1.0), vec4(1.0), _GLF_struct_1(bvec2(true), 1.0, mat4(1.0), vec3(1.0), _GLF_struct_0(1, GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y * GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x, uvec2(1u), ivec2(1))));
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = _GLF_struct_replacement_2._f3._f4.workgroup_base + subgroup_base + subgroup_local_id;
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_8(_GLF_struct_3(vec3(1.0), uvec4(1u)), _GLF_struct_4(vec4(1.0), mat3x2(1.0), ivec4(1), 1u, bvec3(true), 1.0, mat4(1.0)), _GLF_struct_5(mat3x2(1.0), mat2x3(1.0), true, mat2(1.0), mat4(1.0), mat2x3(1.0)), mat3x4(1.0), _GLF_struct_replacement_2._f3._f4.workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), _GLF_struct_6(bvec2(true), mat2x4(1.0), ivec3(1), ivec4(1), ivec2(1)), _GLF_struct_7(ivec3(1), 1u, ivec2(1), 1u)), _GLF_struct_10(_GLF_struct_9(mat3x2(1.0), mat4x2(1.0), mat4x3(1.0), ivec2(1))));
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(_GLF_struct_16(true, _GLF_struct_15(ivec4(1)), 0), uvec2(1u));
 atomicStore(buf[_GLF_struct_replacement_11._f0.next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if((subgroup_local_id % 2) == 0)
    {
     subgroupAll(false);
     for(_GLF_struct_21 _GLF_struct_replacement_21 = _GLF_struct_21(_GLF_struct_20(vec3(1.0), bvec2(true), _GLF_struct_18((59146 & 0), vec3(1.0), vec2(1.0), true), mat4x3(1.0), _GLF_struct_19(mat2x3(1.0))), 1u, uvec4(1u), vec2(1.0)); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_21._f0._f2._injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_struct_replacement_21._f0._f2._injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         _GLF_struct_replacement_17._f0.read = atomicLoad(buf[virtual_gid], 4, 64, 2);
        }
       else
        {
        }
      }
    }
   else
    {
     subgroupAll(false);
     _GLF_struct_replacement_17._f0.read = atomicLoad(buf[virtual_gid], 4, 64, 2);
    }
  }
 subgroupBarrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   atomicStore(checker[virtual_gid], _GLF_struct_replacement_17._f0.read, 4, 64, 4);
  }
}
