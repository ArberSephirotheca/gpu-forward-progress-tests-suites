#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5)))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 uvec4 GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid;
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) >> 0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) && true))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)))))))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 uvec2 GLF_merged2_0_1_4_1_1_11readsubgroup_id;
 uvec2 GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) != (0 | (0 << _GLF_IDENTITY(int(0), int(0))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)))))))))
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec4(bool(bvec2(true, true)), false, false, false)))), false, true)), true && (bool(bvec4(_GLF_DEAD(false), true, false, true))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(((0 << _GLF_IDENTITY(int(0), int(0))) | 1), ~ (~ (((0 << _GLF_IDENTITY(int(0), int(0))) | 1))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.y = subgroup_id;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2(_GLF_IDENTITY((! (false)), ((! (false))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec4(bool(bvec2(true, true)), false, false, true))))), false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))))))), bool(bvec4(_GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2(_GLF_IDENTITY((! (false)), ((! (false))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec4(bool(bvec2(true, true)), false, false, true))))), false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))))))), (true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2(_GLF_IDENTITY((! (false)), ((! (false))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec4(bool(bvec2(true, true)), false, false, true))))), false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))))))))) || false), false, true, true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, false || (_GLF_IDENTITY((_GLF_DEAD(false)) && true, (_GLF_IDENTITY((_GLF_DEAD(false)) && true, false || ((_GLF_DEAD(false)) && true))) && true)))))
  {
   do
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true, false))) || false), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true, false), false)))), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true, false))) || false)))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true, false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true, false), false)))), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true, false))) || false), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec2(bool(bool(_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false), false)))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))), true, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))), true, false))) || false)) || false)) && _GLF_IDENTITY(true, false || (true))))))) && true))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     GLF_merged2_0_1_4_1_1_11readsubgroup_id.y = GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.y;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ((injectionSwitch.x > injectionSwitch.y) || false) || false))))));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, true)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-995.665)), float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), bool(true))) > injectionSwitch.y)))))))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(145.016)), float(injectionSwitch.x), bool(true))), 0.0, 1.0, sqrt(1.0), 1.0, 0.0))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false))), (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(((_GLF_IDENTITY(-0.5 + -68.96, (_GLF_IDENTITY(-0.5 + -68.96, mix(float(_GLF_FUZZED(vec2(-4.5, -4551.8075).g)), float(-0.5 + -68.96), bool(true)))) + 0.0)) / 6.1)), _GLF_FUZZED(-6280.8974)), vec2(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * ((injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0)))) - vec2(0.0, 0.0)).y, injectionSwitch.y))))))
      barrier();
    }
   for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.z = subgroup_size;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x4((injectionSwitch)[0], 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), (float(mat3x4((injectionSwitch)[0], 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))) / 1.0), mix(float(_GLF_IDENTITY(float(mat3x4((injectionSwitch)[0], 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), (float(mat3x4((injectionSwitch)[0], 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))) / 1.0)), float(_GLF_FUZZED(-1775.6837)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED((- -9.0)), _GLF_FUZZED((738.754 - 123.955))), bvec2(false, false))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.5)), vec2(_GLF_FUZZED(float(145380u)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))[1]), bvec2(false, true))), vec2(0.0, 0.0) + (injectionSwitch)).y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, exp(sin(0.0)), 1.0, 0.0, sin(0.0), 1.0, 0.0))))).y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), true && (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))), injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))))).y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))) + (injectionSwitch)).y)), true && (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(-8239.5731, 971.724)) : vec2(0.0, 0.0))) + (injectionSwitch)).y)))))), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), true && (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))))), true, false))), true)))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
    }
   else
    {
    }
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))), max(~ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))))))).x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 do
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))), mat2(1.0) * (vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 0.0)), vec2(mat2(vec2(vec4(injectionSwitch, 0.0, 0.0)), sqrt(0.0), 1.0)))), injectionSwitch)))).x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (true ? int(8) : _GLF_IDENTITY(_GLF_FUZZED(93724), (_GLF_IDENTITY(_GLF_FUZZED(93724), (_GLF_FUZZED(93724)) - 0)) >> 0)))))); _GLF_IDENTITY(_injected_loop_counter --, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter --)))
    {
     for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-399.089)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), float(vec2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), sqrt(1.0))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && (false))) && true)))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.4)), bool(false)), min(mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-3.4, (false ? _GLF_FUZZED(-3.8) : -3.4)))), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.4)), bool(false))))), 0.0, 0.0), _GLF_IDENTITY(vec3(mat4x3(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), float(_GLF_FUZZED(-3.4)), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), false || (bool(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), _GLF_IDENTITY(true, (true) && true) && (bool(false))))), 0.0, 0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), min(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), vec4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(746.670) : 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.6) : 1.0)), 1.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(746.670) : 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.6) : 1.0)), 1.0))), float(_GLF_FUZZED((614.397 + -2.5))), bool(false))), 0.0, 0.0)), mix(float(_GLF_FUZZED(9.8)), float(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), min(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), vec4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(746.670) : 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.6) : 1.0)), 1.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(746.670) : 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.6) : 1.0)), 1.0))), float(_GLF_FUZZED((614.397 + -2.5))), bool(false))), 0.0, 0.0))), bool(true))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), max(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), max(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), vec4(mat3x4(vec4(0.0, 1.0, 0.0, 0.0), 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0))))), vec4(0.0, 1.0, 0.0, 0.0)), mix(float(dot(vec4(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1904.1258)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), true && (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), false || (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))))))))), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6388.4170) : 0.0))), float(_GLF_FUZZED(3.8)), bool(false))), 0.0)), 0.0, 1.0)), clamp(_GLF_IDENTITY(vec3(mat4x3(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-3.4)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), (bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true) && (bool(false))))), 0.0, 0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))))))) ? _GLF_FUZZED(746.670) : 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.6) : 1.0)), 1.0)), 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, (0.0) - 0.0)))), vec4(0.0, 1.0, 0.0, 0.0)), max(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-27.32)), float(0.0), bool(true))), 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), mix(float(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-528.111) : 0.0))), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_IDENTITY(_GLF_FUZZED(1904.1258), _GLF_IDENTITY((true ? _GLF_FUZZED(1904.1258) : _GLF_FUZZED(4115.9216)), min((true ? _GLF_FUZZED(1904.1258) : _GLF_FUZZED(4115.9216)), (true ? _GLF_FUZZED(1904.1258) : _GLF_FUZZED(4115.9216)))))), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))))), 0.0, 0.0, 0.0, 1.0)), min(vec3(mat4x3(vec3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-3.4)), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, (true) && true) && (bool(false)))), max(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-3.4)), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, (true) && true) && (bool(false)))), (true ? mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-3.4)), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, (true) && true) && (bool(false)))) : _GLF_FUZZED(-833.369))), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-3.4)), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, (true) && true) && (bool(false))))))), 0.0, 0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(746.670), _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_FUZZED(746.670))) : 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.6) : 1.0)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.6) : 1.0)), 1.0, 0.0, 0.0)), 0.0 + (_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.6) : 1.0)), 1.0, 0.0, 0.0)), max(float(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.6) : 1.0)), 1.0, 0.0, 0.0)), float(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.6) : 1.0)), 1.0, 0.0, 0.0))))))), 1.0)), 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), max(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1904.1258)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(vec3(85.54, 2.2, 72.43).r, float(mat3x4(vec3(85.54, 2.2, 72.43).r, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))))), _GLF_FUZZED(3275.7251)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - sqrt(0.0))), bvec2(true, true))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(9.7), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(3.0)), bvec2(true, false))))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)))), (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.1)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.1)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(vec3(85.54, 2.2, 72.43).r, float(mat3x4(vec3(85.54, 2.2, 72.43).r, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))))), _GLF_FUZZED(3275.7251)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - sqrt(0.0))), bvec2(true, true))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(9.7), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(3.0)), bvec2(true, false))))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)))), (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.1)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.1)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))) || false))), true && (! ((_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(vec3(85.54, 2.2, 72.43).r, float(mat3x4(vec3(85.54, 2.2, 72.43).r, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))))), _GLF_FUZZED(3275.7251)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - sqrt(0.0))), bvec2(true, true))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(9.7), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(3.0)), bvec2(true, false))))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)))), (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.1)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.1)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))) || false))))))))))))), 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(vec3(mat4x3(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-3.4)), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), (true) && true) && (bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), (true) && true) && (bool(false))), false || (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), (! (true)) && true))), (true) && true) && (bool(false))))))))), 0.0, 0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(746.670) : 1.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-0.6) : 1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-0.6) : 1.0, mix(float(_GLF_FUZZED(-210.290)), float(false ? _GLF_FUZZED(-0.6) : 1.0), bool(true)))) + 0.0))), 1.0)), 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * _GLF_ONE(1.0, injectionSwitch.y))), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(max(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1904.1258)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec3(bvec3(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)))))))))) || false)))))), min(_GLF_IDENTITY(max(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1904.1258)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false, bool(bool((! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))))))), mix(float(_GLF_FUZZED(6.1)), float(max(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1904.1258)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false, true)), (bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false, true))) && true))))))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))))), bool(true))), max(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-218.693) : 1.0)), 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), clamp(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), mat4(1.0) * (vec4(0.0, 1.0, 0.0, 0.0)))))), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1904.1258)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))))))), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.5)), bool(false))), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0)), max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 1.0)), clamp(vec3(mat4x3(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-3.4)), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), (true) && true) && (bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), (true) && true) && (bool(false))), false || (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), (! (true)) && true))), (true) && true) && (bool(false))))))))), 0.0, 0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(746.670) : 1.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-0.6) : 1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-0.6) : 1.0, mix(float(_GLF_FUZZED(-210.290)), float(false ? _GLF_FUZZED(-0.6) : 1.0), bool(true)))) + 0.0))), 1.0)), 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * _GLF_ONE(1.0, injectionSwitch.y))), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(max(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1904.1258)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec3(bvec3(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)))))))))) || false)))))), min(_GLF_IDENTITY(max(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1904.1258)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false, bool(bool((! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))))))), mix(float(_GLF_FUZZED(6.1)), float(max(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1904.1258)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false, true)), (bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false, true))) && true))))))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))))), bool(true))), max(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-218.693) : 1.0)), 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), clamp(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), mat4(1.0) * (vec4(0.0, 1.0, 0.0, 0.0)))))), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1904.1258)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))))))), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.5)), bool(false))), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0)), max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 1.0)), _GLF_IDENTITY(vec3(mat4x3(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-3.4)), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), (true) && true) && (bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), (true) && true) && (bool(false))), false || (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), (! (true)) && true))), (true) && true) && (bool(false))))))))), 0.0, 0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(746.670) : 1.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-0.6) : 1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-0.6) : 1.0, mix(float(_GLF_FUZZED(-210.290)), float(false ? _GLF_FUZZED(-0.6) : 1.0), bool(true)))) + 0.0))), 1.0)), 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * _GLF_ONE(1.0, injectionSwitch.y))), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(max(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1904.1258)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec3(bvec3(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)))))))))) || false)))))), min(_GLF_IDENTITY(max(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1904.1258)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false, bool(bool((! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))))))), mix(float(_GLF_FUZZED(6.1)), float(max(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1904.1258)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false, true)), (bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false, true))) && true))))))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))))), bool(true))), max(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-218.693) : 1.0)), 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), clamp(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), mat4(1.0) * (vec4(0.0, 1.0, 0.0, 0.0)))))), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1904.1258)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))))))), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.5)), bool(false))), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0)), max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 1.0)), mix(vec3((vec3(mat4x3(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-3.4)), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), (true) && true) && (bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), (true) && true) && (bool(false))), false || (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), (! (true)) && true))), (true) && true) && (bool(false))))))))), 0.0, 0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(746.670) : 1.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-0.6) : 1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-0.6) : 1.0, mix(float(_GLF_FUZZED(-210.290)), float(false ? _GLF_FUZZED(-0.6) : 1.0), bool(true)))) + 0.0))), 1.0)), 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * _GLF_ONE(1.0, injectionSwitch.y))), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(max(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1904.1258)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec3(bvec3(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)))))))))) || false)))))), min(_GLF_IDENTITY(max(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1904.1258)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false, bool(bool((! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))))))), mix(float(_GLF_FUZZED(6.1)), float(max(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1904.1258)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false, true)), (bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false, true))) && true))))))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))))), bool(true))), max(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-218.693) : 1.0)), 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), clamp(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), mat4(1.0) * (vec4(0.0, 1.0, 0.0, 0.0)))))), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1904.1258)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))))))), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.5)), bool(false))), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0)), max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 1.0)))[0], (vec3(mat4x3(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-3.4)), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), (true) && true) && (bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), (true) && true) && (bool(false))), false || (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), (! (true)) && true))), (true) && true) && (bool(false))))))))), 0.0, 0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(746.670) : 1.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-0.6) : 1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-0.6) : 1.0, mix(float(_GLF_FUZZED(-210.290)), float(false ? _GLF_FUZZED(-0.6) : 1.0), bool(true)))) + 0.0))), 1.0)), 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * _GLF_ONE(1.0, injectionSwitch.y))), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(max(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1904.1258)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec3(bvec3(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)))))))))) || false)))))), min(_GLF_IDENTITY(max(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1904.1258)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false, bool(bool((! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))))))), mix(float(_GLF_FUZZED(6.1)), float(max(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1904.1258)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false, true)), (bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false, true))) && true))))))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))))), bool(true))), max(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-218.693) : 1.0)), 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), clamp(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), mat4(1.0) * (vec4(0.0, 1.0, 0.0, 0.0)))))), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1904.1258)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))))))), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.5)), bool(false))), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0)), max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 1.0)))[1], _GLF_FUZZED(-2.8)), vec3(_GLF_FUZZED(42.12), _GLF_FUZZED(3.6), (vec3(mat4x3(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-3.4)), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), (true) && true) && (bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), (true) && true) && (bool(false))), false || (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), (! (true)) && true))), (true) && true) && (bool(false))))))))), 0.0, 0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(746.670) : 1.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-0.6) : 1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-0.6) : 1.0, mix(float(_GLF_FUZZED(-210.290)), float(false ? _GLF_FUZZED(-0.6) : 1.0), bool(true)))) + 0.0))), 1.0)), 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * _GLF_ONE(1.0, injectionSwitch.y))), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(max(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1904.1258)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec3(bvec3(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)))))))))) || false)))))), min(_GLF_IDENTITY(max(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1904.1258)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false, bool(bool((! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))))))), mix(float(_GLF_FUZZED(6.1)), float(max(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1904.1258)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false, true)), (bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false, true))) && true))))))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))))), bool(true))), max(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-218.693) : 1.0)), 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), clamp(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), mat4(1.0) * (vec4(0.0, 1.0, 0.0, 0.0)))))), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1904.1258)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))))))), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.5)), bool(false))), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0)), max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 1.0)))[2]), bvec3(false, false, true))), vec3(mat4x3(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-3.4)), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), (true) && true) && (bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), (true) && true) && (bool(false))), false || (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), (! (true)) && true))), (true) && true) && (bool(false))))))))), 0.0, 0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(746.670) : 1.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-0.6) : 1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-0.6) : 1.0, mix(float(_GLF_FUZZED(-210.290)), float(false ? _GLF_FUZZED(-0.6) : 1.0), bool(true)))) + 0.0))), 1.0)), 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * _GLF_ONE(1.0, injectionSwitch.y))), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(max(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1904.1258)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec3(bvec3(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)))))))))) || false)))))), min(_GLF_IDENTITY(max(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1904.1258)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false, bool(bool((! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))))))), mix(float(_GLF_FUZZED(6.1)), float(max(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1904.1258)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false, true)), (bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false, true))) && true))))))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))))), bool(true))), max(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-218.693) : 1.0)), 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), clamp(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), mat4(1.0) * (vec4(0.0, 1.0, 0.0, 0.0)))))), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1904.1258)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))))))), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.5)), bool(false))), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0)), max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 1.0)))))), vec3(mat4x3(vec3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-3.4)), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, (true) && true) && (bool(false)))), float(_GLF_IDENTITY(mat4x2(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-3.4)), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, (true) && true) && (bool(false)))), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, log(1.0), 1.0, 0.0), mat4x2(_GLF_IDENTITY(mat4(mat4x2(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-3.4)), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, (true) && true) && (bool(false)))), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, log(1.0), 1.0, 0.0)), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(mat4x2(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-3.4)), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, (true) && true) && (bool(false)))), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, log(1.0), 1.0, 0.0))))))))), 0.0, 0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(746.670) : 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.6) : 1.0)), 1.0)), 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), clamp(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), max(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-394.125) : dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1904.1258)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), (! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).y))))) || false))))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1904.1258)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), (! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).y))))) || false))))), mix(float(_GLF_FUZZED(-690.962)), float(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1904.1258)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), (! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).y))))) || false)))))), bool(true))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1904.1258)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), (! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).y))))) || false)))))))))), 0.0, 0.0, 0.0, 1.0)), vec3(mat4x3(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-3.4)), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, (true) && true) && (bool(false))))), 0.0, 0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(746.670), max(_GLF_FUZZED(746.670), _GLF_IDENTITY(_GLF_FUZZED(746.670), max(_GLF_IDENTITY(_GLF_FUZZED(746.670), mix(float(_GLF_FUZZED(746.670)), float(_GLF_FUZZED(4.0)), bool(false))), _GLF_FUZZED(746.670))))) : 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.6) : 1.0)), 1.0)), 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), max(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), mix(float(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1904.1258)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), true), bvec2(bvec4(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true, false)))))), (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))))), 0.0, 0.0, 0.0, 1.0))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) + vec2(0.0, 0.0)), vec2(1.0, 1.0)))).y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(5694.2698) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.2)), float(1.0), bool(true))))), 1.0), clamp(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(5694.2698) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.2)), float(1.0), bool(true))))), 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(5694.2698) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.2)), float(1.0), bool(true))))), 1.0), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(5694.2698) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.2)), float(1.0), bool(true))))), 1.0), (vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(5694.2698) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.2)), float(1.0), bool(true))))), 1.0)) - vec2(0.0, 0.0))) / cos(vec2(0.0, 0.0))), vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(5694.2698) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.2)), float(1.0), bool(true))))), 1.0)))).y) && true))))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), mix(vec2(((injectionSwitch) / vec2(1.0, 1.0))[0], _GLF_FUZZED(7256.4939)), vec2(_GLF_FUZZED((- -5.7)), ((injectionSwitch) / vec2(1.0, 1.0))[1]), bvec2(false, true)))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y) && true))))), true))))))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
       for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(int(1), int(1))) << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) ^ 0)), (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) ^ 0))) - 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint workgroup_id = gl_WorkGroupID.x;
 do
  {
   do
    {
     GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.y = workgroup_id;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))
              barrier();
             barrier();
            }
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))), false)))))))))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || (_GLF_IDENTITY((false) && true, ((false) && true) || false)))))))))), true, true, true))))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) : _GLF_FUZZED(-3.8))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.y, min(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) >> 0u) * GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.y, workgroup_size * GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.y));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, 0.0, tan(0.0))))))).y))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-141.323), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], float(mat3((injectionSwitch)[1], 1.0, 1.0, 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0)))) - 0.0)), vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(3637.6562)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0))); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.7)), bool(false)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(0, 0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ int(_GLF_ONE(1.0, injectionSwitch.y)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              barrier();
            }
           for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y))))
    barrier();
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, bool(bvec2(true, false))))))))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint virtual_gid = workgroup_base + GLF_merged2_0_1_4_1_1_11readsubgroup_id.y * GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.z + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.w = virtual_gid;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_4_1_1_11readsubgroup_id.y * GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.z, (workgroup_base + GLF_merged2_0_1_4_1_1_11readsubgroup_id.y * GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.z) << 0u) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), clamp((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)), (subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | (1))))), clamp(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u), (subgroup_local_id + 1), (subgroup_local_id + 1))))) % GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.z), ((_GLF_IDENTITY((subgroup_local_id + 1), clamp((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) - 0u, ((subgroup_local_id + 1) - 0u) | ((subgroup_local_id + 1) - 0u)))), (subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | (1)))), 0 ^ (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | (1))))))), clamp((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) + 0u) + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))))) % GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.z)) | ((_GLF_IDENTITY((subgroup_local_id + 1), clamp((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)), (subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | (1))))), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))))) % GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.z)));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x < injectionSwitch.y)), false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        {
        }
       else
        {
         barrier();
        }
      }
     barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = ((0 & -82882) ^ 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) > 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / 1))
        {
         GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.x = _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) | 0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((next_virtual_gid), ~ (~ ((next_virtual_gid)))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) << (0u | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u ^ (~ ((next_virtual_gid) | 0u))))));
        }
      }
     else
      {
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       else
        {
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0))).y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(false || ((injectionSwitch.x > injectionSwitch.y)), true))))))))) && true), true, true, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))) && true), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))) && true))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, false, true)))) && true))), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))) && true), true, true, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))));
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(buf[GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.x], uint(1), 4, 64, 4);
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.w, max(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.w, GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.w)), uint(uvec3(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.w, max(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.w, GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.w)), 1u, _GLF_IDENTITY(0u, (0u) | (0u)))))], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.x = read;
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0], injectionSwitch[1])), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(_GLF_IDENTITY(vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], _GLF_FUZZED((+ -7.2))), clamp(vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], _GLF_FUZZED((+ -7.2))), vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], _GLF_FUZZED((+ -7.2))), vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], _GLF_FUZZED((+ -7.2))))), vec2(_GLF_FUZZED(-5.5), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), bvec2(false, true)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0], injectionSwitch[1])), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(_GLF_IDENTITY(vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], _GLF_FUZZED((+ -7.2))), clamp(vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], _GLF_FUZZED((+ -7.2))), vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], _GLF_FUZZED((+ -7.2))), vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], _GLF_FUZZED((+ -7.2))))), vec2(_GLF_FUZZED(-5.5), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), bvec2(false, true)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0], injectionSwitch[1])), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(_GLF_IDENTITY(vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], _GLF_FUZZED((+ -7.2))), clamp(vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], _GLF_FUZZED((+ -7.2))), vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], _GLF_FUZZED((+ -7.2))), vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], _GLF_FUZZED((+ -7.2))))), vec2(_GLF_FUZZED(-5.5), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), bvec2(false, true)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x))) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0], injectionSwitch[1])), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2(_GLF_IDENTITY((clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), min((clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), _GLF_IDENTITY((clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), vec2(1.0, 1.0) * ((clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))))))[0], _GLF_FUZZED((+ _GLF_IDENTITY(-7.2, min(_GLF_IDENTITY(-7.2, float(mat3x2(-7.2, 0.0, 1.0, 0.0, 0.0, 0.0))), -7.2))))), vec2(_GLF_FUZZED(-5.5), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), bvec2(false, true)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 GLF_merged2_0_1_4_1_1_11readsubgroup_id.x = GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.x;
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = _GLF_IDENTITY(1, max(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(subgroup_local_id + 1 < GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.z)
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))), true, true))))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              barrier();
             barrier();
            }
           else
            {
            }
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       atomicStore(checker[_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.w, _GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))) ^ (_GLF_IDENTITY(0u, (0u) - 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.w, clamp(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.w, GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.w, GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.w))))], GLF_merged2_0_1_4_1_1_11readsubgroup_id.x, 4, 64, 4);
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       subgroupAll(false);
      }
     else
      {
      }
    }
   else
    {
     for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = (_GLF_IDENTITY(1 ^ _GLF_IDENTITY(1, 0 | (1)), int(ivec4(1 ^ _GLF_IDENTITY(1, 0 | (1)), 1, 1, 0)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, false || (_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1)))))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY((bool(bool(false))), ((bool(bool(false)))) || false))))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
               else
                {
                }
              }
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), ! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-3.5), mix(float(_GLF_FUZZED(26.68)), float(_GLF_FUZZED(-3.5)), bool(true)))), bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && true))))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-3.5), mix(float(_GLF_FUZZED(26.68)), float(_GLF_FUZZED(-3.5)), bool(true)))), bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && true))))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))), false || ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-3.5), mix(float(_GLF_FUZZED(26.68)), float(_GLF_FUZZED(-3.5)), bool(true)))), bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && true))))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))))), false || (! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-3.5), mix(float(_GLF_FUZZED(26.68)), float(_GLF_FUZZED(-3.5)), bool(true)))), bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && true))))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))), false || ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-3.5), mix(float(_GLF_FUZZED(26.68)), float(_GLF_FUZZED(-3.5)), bool(true)))), bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && true))))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))))))))))))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           do
            {
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), false)), (bool(bvec2(_GLF_WRAPPED_LOOP(false), false))) && true)));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | _GLF_IDENTITY((int(4)), min(_GLF_IDENTITY(_GLF_IDENTITY((int(4)), 0 ^ (_GLF_IDENTITY((int(4)), 0 | (_GLF_IDENTITY((int(4)), ~ (~ ((int(4))))))))), ((int(4))) | ((int(4)))), _GLF_IDENTITY((int(4)), ~ (~ ((int(4))))))))))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> 0))
              {
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           else
            {
            }
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (! (_GLF_WRAPPED_IF_TRUE(true))) || false))))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), clamp(int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x)), injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 1 * (int(_GLF_ONE(1.0, injectionSwitch.y)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       atomicStore(checker[_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid, uvec4(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) * 1u), 0u)), 0u, 0u, 0u) ^ (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid) << uvec4(0u, 0u, 0u, 0u)))).w], GLF_merged2_0_1_4_1_1_11readsubgroup_id.x, 4, _GLF_IDENTITY(64, min(64, 64)), 4);
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        barrier();
      }
     subgroupAll(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true))))) && (true))))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))) && true, false || (_GLF_IDENTITY((! (_GLF_DEAD(false))) && true, bool(_GLF_IDENTITY(bvec2((! (_GLF_DEAD(false))) && true, false), bvec2(bvec3(bvec2((! (_GLF_DEAD(false))) && true, false), false)))))))))))
        barrier();
       barrier();
      }
    }
  }
}
