#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_11 {
 mat2x3 _f0;
 mat4x2 _f1;
 mat4x3 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_10 {
 ivec4 _f0;
 float _f1;
} ;

struct _GLF_struct_9 {
 ivec2 _f0;
} ;

struct _GLF_struct_12 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
 uvec3 _f2;
 _GLF_struct_11 _f3;
} ;

struct _GLF_struct_7 {
 int _f0;
 uvec3 _f1;
 vec3 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_6 {
 bool _f0;
 bool _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_8 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
} ;

struct _GLF_struct_4 {
 bvec3 _f0;
 mat3x2 _f1;
 bvec4 _f2;
 uvec3 _f3;
 uint _f4;
} ;

struct _GLF_struct_5 {
 ivec2 _f0;
 uint _f1;
 bvec4 _f2;
 int _f3;
 _GLF_struct_4 _f4;
 mat2 _f5;
 int _f6;
} ;

struct _GLF_struct_3 {
 int _f0;
 float _f1;
 int _f2;
 mat4x3 _f3;
 bvec3 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_1 {
 vec3 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_0 {
 mat4x3 _f0;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 ivec4 _f1;
 _GLF_struct_1 _f2;
} ;

struct _GLF_struct_13 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_5 _f2;
 int _f3;
 uint workgroup_base;
 _GLF_struct_8 _f4;
 _GLF_struct_12 _f5;
 mat4x3 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(8830.6579))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, max(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), (true ? min(gl_NumWorkGroups.x, gl_NumWorkGroups.x) : _GLF_FUZZED(subgroup_size)))), gl_NumWorkGroups.x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x;
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(_GLF_struct_2(_GLF_struct_0(mat4x3(1.0)), _GLF_IDENTITY(ivec4(1), (ivec4(1)) - ivec4(0, 0, 0, 0)), _GLF_struct_1(vec3(1.0), mat3(1.0))), _GLF_struct_3(1, 1.0, 1, mat4x3(1.0), bvec3(_GLF_IDENTITY(true, ! (! (true)))), uvec3(1u)), _GLF_struct_5(ivec2(1), 1u, bvec4(true), _GLF_IDENTITY(1, (0 | 0) | (_GLF_IDENTITY(1, (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_struct_4(bvec3(_GLF_IDENTITY(true, ! (! (true)))), mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0 * (1.0), min(1.0 * (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.1)))), float(_GLF_FUZZED(9.6)), bool(false)))), 1.0 * (1.0))))), bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), bvec2(bvec2(bvec2(! (true), false))))))))), uvec3(1u), 1u), mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 1), _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) << 0), 0, 1), (true ? ivec3(1, 0, 1) : _GLF_FUZZED(ivec3(-72469, -23632, -93824)))))), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)), _GLF_struct_8(_GLF_struct_6(true, true, mat2x4(1.0)), _GLF_struct_7(1, uvec3(1u), vec3(1.0), mat3x4(1.0))), _GLF_struct_12(_GLF_struct_9(_GLF_IDENTITY(ivec2(1), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY((ivec2(1)) / ivec2(1, 1), (false ? _GLF_FUZZED(mix(ivec2(-82216, -81107), ivec2(-18535, -26187), bvec4(false, false, false, false).st)) : _GLF_IDENTITY((ivec2(1)) / ivec2(1, 1), ivec2(ivec4(_GLF_IDENTITY((ivec2(1)) / ivec2(1, 1), ((ivec2(1)) / ivec2(1, 1)) - ivec2(0, 0)), 0, (1 ^ 1)))))))), _GLF_IDENTITY((_GLF_IDENTITY(ivec2(0, 0) << _GLF_IDENTITY(ivec2(0), ivec2(0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((ivec2(8724, -79358) * (ivec2(-99414, -51100) >> 43379))) : ivec2(0, 0) << _GLF_IDENTITY(ivec2(0), ivec2(0))))), ivec2(0, 0) ^ ((_GLF_IDENTITY(ivec2(0, 0) << _GLF_IDENTITY(ivec2(0), ivec2(0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((ivec2(8724, -79358) * (ivec2(-99414, -51100) >> 43379))) : ivec2(0, 0) << _GLF_IDENTITY(ivec2(0), ivec2(0))))))) ^ (_GLF_IDENTITY((_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY((ivec2(1)), ((ivec2(1))) ^ ivec2(0, 0)) / ivec2(1, 1))), max((_GLF_IDENTITY(ivec2(1), (ivec2(1)) / ivec2(1, 1))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (ivec2(1)) / ivec2(1, 1)), (ivec2(1)) / ivec2(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) / 1), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) / 1)) / 1), 1, 1)), 1))))))), ivec2(1, 1) * (~ (_GLF_IDENTITY(ivec2(1), (ivec2(1)) / _GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) >> ivec2(0, 0))))))))), _GLF_struct_10(ivec4(1), 1.0), uvec3(1u), _GLF_struct_11(mat2x3(1.0), mat4x2(1.0), mat4x3(1.0), vec3(1.0))), mat4x3(1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_base + subgroup_id * subgroup_size, ~ (~ (_GLF_struct_replacement_13.workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_struct_replacement_13.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (subgroup_id) + 0u) * subgroup_size, ~ (~ (subgroup_id * subgroup_size))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true, true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) - 0u), 4, 64, 4);
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)], 4, _GLF_IDENTITY(64, min(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (~ (64)) ^ 0)))) / 1), 64)), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-80.67, -11.53))))) / vec2(1.0, 1.0)).y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
   switch(_GLF_SWITCH(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-55451) : 0))))
    {
     case 19:
     for(     _GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))), bool(bool(bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))), false), true))))), true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(true, true), false)), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))), bvec2(bvec2(bvec2(bvec3(bvec2(true, true), false)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec2(bvec2(bvec3(bvec2(true, true), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec2(bvec2(bvec3(bvec2(true, true), false))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec2(bvec2(bvec3(bvec2(true, true), false))))))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec2(bvec2(bvec3(bvec2(true, true), false))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec2(bvec2(bvec3(bvec2(true, true), false))))))))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec2(bvec2(bvec3(bvec2(true, true), false))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec2(bvec2(bvec3(bvec2(true, true), false))))))))))), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, true)))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec2(bvec2(bvec3(bvec2(true, _GLF_IDENTITY(true, (true) || false)), false)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec4(bvec3(bvec2(true, true), false), false)))))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec4(bvec3(bvec2(true, true), false), false)))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec4(bvec3(bvec2(true, true), false), false)))))))), false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec4(bvec3(bvec2(true, true), false), false)))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec4(bvec3(bvec2(true, true), false), false)))))))), false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true))), false), true))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), true), false)), bvec2(bvec2(bvec2(bvec3(bvec2(true, true), false)))))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))) / vec2(1.0, 1.0)).x < injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY((! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), false)))))))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec4(bvec3(bvec2(true, true), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec2(bvec2(bvec3(bvec2(true, true), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec4(bvec3(bvec2(true, true), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec2(bvec2(bvec3(bvec2(true, true), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec4(bvec3(bvec2(true, true), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec2(bvec2(bvec3(bvec2(true, true), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec2(bvec2(bvec3(bvec2(true, true), false)))))), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0))), tan(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(mat2(vec3(0.0, 0.0, 0.0), 0.0), (mat2(vec3(0.0, 0.0, 0.0), 0.0)) / mat2(1.0, 1.0, 1.0, 1.0)))), vec3(1.0, 1.0, 1.0)))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(float(false))), float(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0))), tan(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x < injectionSwitch.y)))))) < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec2(bvec2(bvec3(bvec2(true, true), false)))))), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0))), tan(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(mat2(vec3(0.0, 0.0, 0.0), 0.0), (mat2(vec3(0.0, 0.0, 0.0), 0.0)) / mat2(1.0, 1.0, 1.0, 1.0)))), vec3(1.0, 1.0, 1.0)))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(float(false))), float(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0))), tan(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x < injectionSwitch.y)))))) < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true))))))))));
 true; bvec2(true, false))
      {
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     case 0:
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (vec3(injectionSwitch, 0.0)) * mat3(1.0))), min(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (vec3(injectionSwitch, 0.0)) * mat3(1.0))), vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (vec3(injectionSwitch, 0.0)) * mat3(1.0)))))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     case 66:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     case 4:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), float(vec2(float(injectionSwitch.y), 1.0)))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true)))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, false || (false)), false, true), true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     case 62:
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     case 35:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), 0 + (4)), 4)), 0 ^ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), 0 + (4)), 4)))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) * 1), (4) - 0), 0 + (4)), 4)), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(4, max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), 0 + (4)), 4))), 0 | ((_GLF_IDENTITY(4, max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), 0 + (4)), 4)))))))), 64, 4);
     if(_GLF_DEAD(false))
      return;
     case 50:
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))
      barrier();
     case 3:
     subgroupAll(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(false)))) || false));
     if(_GLF_DEAD(false))
      return;
     break;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false)))
      barrier();
     default:
     1;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, true && (false)))))) || false, ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))))))) || false))))) || false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   switch(_GLF_SWITCH((0 | 0)))
    {
     case 58:
     int _GLF_SWITCH_1_0v;
     if(_GLF_DEAD(false))
      barrier();
     case 0:
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     case 43:
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(checker[_GLF_IDENTITY(virtual_gid, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY((virtual_gid), ((virtual_gid)) | 0u)) - 0u), _GLF_IDENTITY((_GLF_IDENTITY((virtual_gid), uint(uvec3((virtual_gid), 0u, 1u)))) >> 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), uint(uvec3((virtual_gid), 0u, 1u))), min(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, 0u + (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))))), uint(uvec3((virtual_gid), 0u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), uint(uvec3((virtual_gid), 0u, 1u))), clamp(_GLF_IDENTITY((virtual_gid), uint(uvec3((virtual_gid), 0u, 1u))), _GLF_IDENTITY((virtual_gid), uint(uvec3((virtual_gid), 0u, 1u))), _GLF_IDENTITY((virtual_gid), uint(uvec3((virtual_gid), 0u, 1u)))))))) >> 0u, 0u + ((_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec3((virtual_gid), 0u, _GLF_IDENTITY(1u, uint(uvec4(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | 0u))), 0u, 0u, 1u))))), (uint(uvec3((virtual_gid), 0u, _GLF_IDENTITY(1u, uint(uvec4(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | 0u))), 0u, 0u, 1u)))))) | (uint(uvec3((virtual_gid), 0u, _GLF_IDENTITY(1u, uint(uvec4(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | 0u))), 0u, 0u, 1u))))))))) >> 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))), uint(uvec3((virtual_gid), 0u, 1u)))) >> 0u))) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u | (0u))))), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)), min(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)), ((_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u))) ^ 0u), (_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)))) << 0u)))) >> 0u)) << 0u)))], read, 4, 64, 4);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bool(_GLF_DEAD(false))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))) || false))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))), ! (! ((! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))))), _GLF_IDENTITY(true, true && (true)))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (bool(bool(_GLF_DEAD(false))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))))), true)))))))))
      barrier();
     case 13:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))) && true)), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))) && true)), ((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))) && true))) || false), true))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     case 75:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     subgroupAll(true);
     break;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     case 77:
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0))), injectionSwitch)))).y))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))) && true)), (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))) && true))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     while((_GLF_IDENTITY(ivec3(-24798, 99195, 77942), min(ivec3(-24798, 99195, 77942), ivec3(-24798, 99195, 77942))) == ivec3(-74237, -98826, 2248)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       do
        {
         uvec4(131391u, 188109u, 122223u, 150138u);
         workgroup_id;
         mat4x2(-4.1, -340.284, _GLF_IDENTITY(9943.8797, mix(float(_GLF_IDENTITY(9943.8797, float(_GLF_IDENTITY(float(9943.8797), 0.0 + (float(9943.8797)))))), float(_GLF_IDENTITY(_GLF_FUZZED(-90.32), clamp(_GLF_FUZZED(-90.32), _GLF_FUZZED(-90.32), _GLF_FUZZED(-90.32)))), bool(false))), -779.729, 56.63, 21.54, 8.2, -4.5);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         81.90;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         mat4 _GLF_SWITCH_1_1v;
         (mat2(2267.6335, 1.9, -891.672, -64.58) - _GLF_IDENTITY(_GLF_IDENTITY((false ? mat2(7190.0332, -99.11, 911.266, -3067.6724) : mat2(17.40, 68.72, _GLF_IDENTITY(-9660.7286, float(_GLF_IDENTITY(mat4(-9660.7286, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat3x4(normalize(vec2(1.0, 1.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat3x4(normalize(vec2(1.0, 1.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.7)), float(_GLF_IDENTITY(1.0, sin(0.0) + (1.0))), bool(true))), 0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(_GLF_SWITCH_1_1v) : mat4(-9660.7286, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), 523.702)), (true ? (false ? mat2(7190.0332, -99.11, 911.266, -3067.6724) : mat2(17.40, 68.72, -9660.7286, 523.702)) : _GLF_FUZZED(mat2(1.1, -740.236, 0.5, -0.7)))), (_GLF_IDENTITY((false ? mat2(7190.0332, -99.11, 911.266, -3067.6724) : mat2(17.40, 68.72, _GLF_IDENTITY(-9660.7286, float(_GLF_IDENTITY(mat4(-9660.7286, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat3x4(normalize(vec2(1.0, 1.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat3x4(normalize(vec2(1.0, 1.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2.8) : 1.0))) + _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, sqrt(1.0))), dot(vec2(0.0, 0.0), vec2(1.0, sqrt(1.0))))), 1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)) + mat3x4(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.7)), float(_GLF_IDENTITY(1.0, sin(0.0) + (1.0))), bool(true))), 0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(_GLF_SWITCH_1_1v) : mat4(-9660.7286, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(5196.4327))), 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), 523.702)), (true ? (false ? mat2(7190.0332, -99.11, 911.266, -3067.6724) : mat2(17.40, 68.72, -9660.7286, 523.702)) : _GLF_FUZZED(mat2(1.1, -740.236, 0.5, -0.7))))) + mat2(0.0, 0.0, 0.0, 0.0)));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(154.304), _GLF_FUZZED(-32.25)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
          barrier();
         mat3x2(-4.8, 59.58, _GLF_IDENTITY(4.1, max(_GLF_IDENTITY(4.1, (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)) ? _GLF_FUZZED(-312.610) : 4.1)), 4.1)), -0.4, -8.5, 20.46);
         if(_GLF_DEAD(false))
          barrier();
        }
       while((packUnorm4x8(vec4(-64.53, -5397.3910, 1838.8408, 3.8)) >= virtual_gid));
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(57.13, -271.632)) : _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), injectionSwitch, injectionSwitch)))))).y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       bvec3 _GLF_SWITCH_1_2v[22], _GLF_SWITCH_1_3v, _GLF_SWITCH_1_4v;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) || false))))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       for(       mat4x3(-1.9, 539.248, -7.4, -1.5, _GLF_IDENTITY(7.6, _GLF_IDENTITY((7.6), max((7.6), (7.6))) / 1.0), -43.36, -1990.4824, 559.904, 2780.6241, -633.466, 268.151, 4.3);
 _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (! (_GLF_IDENTITY(true, ! (! (true))))) && true))); 50307)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
            barrier();
           break;
          }
         (bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false) , mat3x4(_GLF_IDENTITY(-6.1, float(mat3x2(-6.1, 0.0, 1.0, 0.0, cos(0.0), 1.0))), -7.3, -836.520, 656.773, 4418.5110, 1506.3516, 5.6, 8.9, 4.2, 67.76, -6.6, _GLF_IDENTITY(-4.4, mix(float(-4.4), float(_GLF_FUZZED(-98.56)), bool(false)))));
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true)))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
              barrier();
             return;
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(false)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             barrier();
            }
           vec3 _GLF_SWITCH_1_5v;
           mat2x4 _GLF_SWITCH_1_6v, _GLF_SWITCH_1_7v, _GLF_SWITCH_1_8v;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(false, false, false)), true, _GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(bool(bvec3(false, false, false)), true, _GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + abs(0.0)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           uvec4(172388u, _GLF_IDENTITY(_GLF_IDENTITY(177607u, min(177607u, _GLF_IDENTITY(177607u, (true ? 177607u : _GLF_FUZZED(num_workgroup))))), max(_GLF_IDENTITY(177607u, min(177607u, _GLF_IDENTITY(177607u, (true ? 177607u : _GLF_FUZZED(num_workgroup))))), _GLF_IDENTITY(177607u, min(177607u, _GLF_IDENTITY(177607u, (true ? 177607u : _GLF_FUZZED(num_workgroup))))))), 33582u, _GLF_IDENTITY(77918u, (_GLF_IDENTITY(77918u, (true ? 77918u : _GLF_FUZZED(subgroup_id)))) ^ 0u));
           if(_GLF_DEAD(false))
            barrier();
           mat2 _GLF_SWITCH_1_9v[2];
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         (uvec3(3834u, 141935u, 108995u) + num_workgroup);
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
              barrier();
             break;
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
              continue;
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         mat4x2(9.7, 12.13, 1299.4970, 853.863, 364.393, 3.2, -21.91, -0.2);
         mat2x3(-9.1, 15.79, 9964.0711, 4194.6179, _GLF_IDENTITY(34.49, (false ? _GLF_FUZZED(8.6) : 34.49)), 647.188);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(false, false, true, true)));
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         {
          if(_GLF_DEAD(false))
           barrier();
          mat2(_GLF_IDENTITY(_GLF_IDENTITY(-4.0, mix(float(-4.0), float(_GLF_FUZZED(9.4)), bool(false))), (true ? -4.0 : _GLF_FUZZED(9.5))), 16.28, -18.38, 268.968);
          if(_GLF_DEAD(false))
           barrier();
         }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           break;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (! ((! ((injectionSwitch.x > injectionSwitch.y)))))))))))))
            {
             if(_GLF_DEAD(false))
              continue;
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           barrier();
          }
        }
       uvec2(89587u, 4890u);
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           barrier();
          }
         continue;
        }
       for(       (mat2(mat3(75.60, 673.223, 66.78, -7.9, -35.20, _GLF_IDENTITY(-4.9, (-4.9) + 0.0), -2.5, 8641.2714, 90.92)));
 true; ivec3(53824, -67463, -71261))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         for(vec3 _GLF_SWITCH_1_10v[45], _GLF_SWITCH_1_11v; false; ivec4(_GLF_SWITCH_1_0v, _GLF_SWITCH_1_0v, ivec2(-98040, 36779)))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           uvec2 _GLF_SWITCH_1_12v, _GLF_SWITCH_1_13v;
           if(_GLF_DEAD(false))
            barrier();
           vec3 _GLF_SWITCH_1_14v, _GLF_SWITCH_1_15v, _GLF_SWITCH_1_16v;
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           int _GLF_SWITCH_1_17v[74];
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            continue;
           _GLF_SWITCH_1_0v;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             break;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       mat2x4 _GLF_SWITCH_1_18v;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (! ((! (false)))) && true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (! ((! (false)))) && true)))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false))), true && _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (! ((! (_GLF_IDENTITY(false, false || (false)))))) && true))))))))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))) || false)) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, ! (! _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))))), true))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     case 10:
     {
      ;
      if(_GLF_DEAD(false))
       {
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         barrier();
        return;
       }
      if(_GLF_DEAD(false))
       barrier();
      if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y))))
       barrier();
      while((atomicOr(virtual_gid, _GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) ^ 0u)) ^ 0u)) < bitfieldReverse(subgroup_local_id)))
       {
        if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))))
         {
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          barrier();
         }
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(false))
           break;
          if(_GLF_DEAD(false))
           barrier();
          barrier();
          if(_GLF_DEAD(false))
           barrier();
         }
        if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
         barrier();
        vec4 _GLF_SWITCH_1_19v[46], _GLF_SWITCH_1_20v[92];
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.7))) > injectionSwitch.y))))
           barrier();
          barrier();
         }
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          barrier();
         }
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          barrier();
         }
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
           barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          barrier();
          if(_GLF_DEAD(false))
           barrier();
         }
        for(        2.2;
 (mat3x4(-35.86, 7.3, -6.2, -11.27, 4.8, 7322.5583, _GLF_IDENTITY(_GLF_IDENTITY(-91.37, min(-91.37, _GLF_IDENTITY(-91.37, (-91.37) - 0.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.2) : -91.37)), -182.609, 3.2, _GLF_IDENTITY(-7.0, mix(float(_GLF_FUZZED(6.1)), float(-7.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, true)))))), -8.9, -375.781) != mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(69.64, _GLF_IDENTITY(float(_GLF_IDENTITY(float(69.64), min(float(69.64), float(69.64)))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(float(69.64), min(float(69.64), float(69.64)))), float(mat4x3(float(_GLF_IDENTITY(float(69.64), min(float(69.64), float(69.64)))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(float(69.64), min(float(69.64), float(69.64)))), (float(_GLF_IDENTITY(float(69.64), min(float(69.64), float(69.64))))) * 1.0)))), (_GLF_IDENTITY(69.64, float(vec2(_GLF_IDENTITY(69.64, clamp(69.64, _GLF_IDENTITY(69.64, float(float(_GLF_IDENTITY(69.64, float(mat3x4(69.64, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))), 69.64)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(5.4) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-804.361) : 1.0)))))))) / exp(0.0)), -8263.5295, 2.3, 4.3, -444.792, 0.3, 6.8, -15.48, -45.92, -97.76, -67.26, 56.80)); ivec4(-92526, 99057, -97170, -96882))
         {
          uvec2 _GLF_SWITCH_1_21v;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true), bvec3(bvec4(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true), true)))))))))))
             barrier();
            barrier();
           }
          if(_GLF_DEAD(false))
           barrier();
          mat2x4(6.7, _GLF_IDENTITY(838.443, _GLF_IDENTITY(max(838.443, 838.443), (true ? max(_GLF_IDENTITY(838.443, mix(float(_GLF_IDENTITY(838.443, mix(float(838.443), float(_GLF_FUZZED(7639.9862)), bool(false)))), float(_GLF_FUZZED(1338.5314)), bool(false))), 838.443) : _GLF_FUZZED(614.268)))), -8.8, 8.2, -7.8, _GLF_IDENTITY(_GLF_IDENTITY(6852.5188, mix(float(_GLF_FUZZED(5.0)), float(6852.5188), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(6852.5188, mix(float(_GLF_FUZZED(5.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(6852.5188), (_GLF_IDENTITY(float(6852.5188), float(mat2(float(6852.5188), 1.0, 1.0, 1.0)))) * determinant(mat3(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(float(6852.5188), (false ? _GLF_FUZZED(-7.0) : float(6852.5188))), (_GLF_IDENTITY(float(6852.5188), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-7.0) : float(6852.5188), mix(float(_GLF_FUZZED(1.6)), float(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) ? _GLF_FUZZED(-7.0) : float(6852.5188), _GLF_IDENTITY(min(false ? _GLF_FUZZED(-7.0) : float(6852.5188), false ? _GLF_FUZZED(-7.0) : float(6852.5188)), 1.0 * (min(false ? _GLF_FUZZED(-7.0) : float(6852.5188), false ? _GLF_FUZZED(-7.0) : float(6852.5188)))))), bool(true)))), (_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-7.0) : _GLF_IDENTITY(float(6852.5188), 0.0 + (_GLF_IDENTITY(float(6852.5188), float(mat3x2(float(6852.5188), 1.0, 1.0, 0.0, 0.0, 0.0))))), mix(float(_GLF_FUZZED(1.6)), float(_GLF_IDENTITY(false ? _GLF_FUZZED(-7.0) : float(6852.5188), min(false ? _GLF_FUZZED(-7.0) : float(6852.5188), false ? _GLF_FUZZED(-7.0) : float(6852.5188)))), bool(true)))), ((_GLF_IDENTITY(false ? _GLF_FUZZED(-7.0) : float(6852.5188), _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.6)), float(_GLF_IDENTITY(false ? _GLF_FUZZED(-7.0) : float(6852.5188), min(false ? _GLF_FUZZED(-7.0) : float(6852.5188), false ? _GLF_FUZZED(-7.0) : float(6852.5188)))), bool(true)), mix(float(mix(float(_GLF_FUZZED(1.6)), float(_GLF_IDENTITY(false ? _GLF_FUZZED(-7.0) : float(6852.5188), min(false ? _GLF_FUZZED(-7.0) : float(6852.5188), false ? _GLF_FUZZED(-7.0) : float(6852.5188)))), bool(true))), float(_GLF_FUZZED(-5088.9864)), bool(false)))))) * 1.0)) - 0.0))) / 1.0), float(6852.5188))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) - 0.0), -995.924, -3.8);
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          ;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
             barrier();
            continue;
           }
          bvec4(true, false, false, false);
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          equal(uvec2(_GLF_IDENTITY(38616u, ~ (_GLF_IDENTITY(~ (38616u), (true ? ~ (38616u) : _GLF_FUZZED((++ subgroup_id)))))), _GLF_IDENTITY(_GLF_IDENTITY(13782u, (13782u) ^ _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) / 1u)))), (13782u) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(next_virtual_gid))), _GLF_IDENTITY(0u, min(0u, 0u))))) - 0u))), uvec2(184956u, 60946u));
          mat2x3(774.330, -87.54, 109.136, -237.033, 6.3, -71.43);
          uvec3(184050u, 171090u, _GLF_IDENTITY(189490u, uint(uvec3(189490u, 1u, 0u))));
          if(_GLF_DEAD(false))
           continue;
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          uvec3(32371u, _GLF_IDENTITY(61549u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(61549u, min(61549u, 61549u))), ~ (~ (~ (_GLF_IDENTITY(61549u, min(61549u, 61549u)))))))), _GLF_IDENTITY(112431u, uint(_GLF_IDENTITY(uvec3(112431u, 0u, 1u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(112431u, 0u, 1u), (uvec3(112431u, 0u, 1u)) - uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(uvec3(112431u, 0u, 1u), (uvec3(112431u, 0u, 1u)) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(112431u, 0u, 1u), (uvec3(112431u, 0u, 1u)) - uvec3(0u, 0u, 0u)))), (true ? uvec3(112431u, 0u, 1u) : _GLF_FUZZED(_GLF_IDENTITY(uvec3(60939u, 56292u, 177620u), min(uvec3(60939u, 56292u, 177620u), _GLF_IDENTITY(uvec3(60939u, 56292u, 177620u), (uvec3(60939u, 56292u, 177620u)) << uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u))))))) : _GLF_FUZZED((uvec3(43960u, 175200u, 177686u) + virtual_gid)))))));
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
           {
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            return;
           }
          mat2x3(579.814, _GLF_IDENTITY(-61.04, (-61.04) + 0.0), -3.7, 32.35, 902.937, -8.1);
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            barrier();
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             continue;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               return;
              barrier();
             }
            barrier();
            if(_GLF_DEAD(false))
             barrier();
           }
         }
        if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))))))
         barrier();
        if((workgroup_size >= _GLF_struct_replacement_13.workgroup_base))
         {
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
                 barrier();
                barrier();
               }
              break;
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               continue;
             }
            barrier();
           }
         }
        else
         {
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (_GLF_IDENTITY(! ((_GLF_DEAD(false)) && true), ! (_GLF_IDENTITY(! (! ((_GLF_DEAD(false)) && true)), false || (! (! ((_GLF_DEAD(false)) && true))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_DEAD(false)) && true), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), true))))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) + 0.0) > injectionSwitch.y))))
             barrier();
            barrier();
           }
          if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 barrier();
                barrier();
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               break;
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            if(_GLF_DEAD(false))
             break;
            if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)), true && (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_IDENTITY(true, ! (! (true))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)), true && (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false, true, _GLF_IDENTITY(true, ! (! (true)))))))))), true && (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)), true && (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_IDENTITY(true, ! (! (true)))))))))))))))))
               barrier();
              if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))
               barrier();
              barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1262.9595) : _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(acos(5.1))))))))))
               barrier();
             }
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             break;
           }
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))) * vec2(1.0, 1.0))).x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                barrier();
               }
              barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               return;
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               return;
             }
            if(_GLF_DEAD(false))
             barrier();
            break;
           }
          float _GLF_SWITCH_1_22v;
          if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             return;
            return;
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               continue;
              barrier();
             }
            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), (vec2(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) + vec2(0.0, 0.0))).y))))) && true)))
             {
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              barrier();
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             break;
            if(_GLF_DEAD(false))
             return;
            barrier();
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(false))
           break;
          if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), false)), true && (bool(bvec3(false, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), (injectionSwitch.x < injectionSwitch.y)), false))))))))
           {
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            barrier();
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          mat4x2 _GLF_SWITCH_1_23v;
          if(_GLF_DEAD(false))
           barrier();
          vec4(18.14, 6.6, -5.0, 2.2);
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          read;
          if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
           {
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            return;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
               barrier();
              barrier();
             }
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
           {
            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
             barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            if(_GLF_DEAD(false))
             barrier();
            break;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             continue;
           }
          if(_GLF_DEAD(false))
           barrier();
          _GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))));
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          (mat3x4(-2347.6378, -9.7, -4.7, 1.3, 8.7, _GLF_IDENTITY(-3.6, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(-3.6), float(_GLF_FUZZED(-949.718)), bool(false)), float(mat4x2(mix(float(-3.6), float(_GLF_FUZZED(-949.718)), bool(false)), round(length(normalize(1.0))), 0.0, 0.0, sin(0.0), length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0))), (_GLF_IDENTITY(mix(float(-3.6), float(_GLF_FUZZED(-949.718)), _GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))), (mix(float(-3.6), float(_GLF_FUZZED(-949.718)), _GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false))))) + sqrt(0.0))) - 0.0)), 65.44, 40.38, 63.72, 74.56, 4817.6103, 2.3) , (true ? bvec2(false, true).yx : bvec2(true, true)));
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           return;
          _GLF_IDENTITY(mat3(mat3x4(_GLF_IDENTITY(70.93, max(_GLF_IDENTITY(70.93, clamp(70.93, _GLF_IDENTITY(70.93, (false ? _GLF_FUZZED(_GLF_SWITCH_1_22v) : 70.93)), 70.93)), 70.93)), -7972.9260, _GLF_IDENTITY(1.3, 1.0 * (1.3)), -7.8, 3.2, 93.46, 50.97, -0.2, -4984.5513, -8172.6656, 2356.1905, -0.0)), (mat3(mat3x4(70.93, -7972.9260, 1.3, -7.8, 3.2, 93.46, 50.97, -0.2, -4984.5513, -8172.6656, 2356.1905, -0.0))) - mat3(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(_GLF_SWITCH_1_22v))) + (0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, 0.0));
          bitCount(ivec3(92066, -43820, 675));
          if(_GLF_DEAD(false))
           barrier();
         }
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         {
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false)))
           barrier();
          if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
           {
            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4311.9586) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0))) > injectionSwitch.y))))))))))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              barrier();
             }
            barrier();
           }
          barrier();
          if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false))
           barrier();
         }
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false)))))))
           barrier();
          barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           return;
         }
        if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))
         {
          if(_GLF_DEAD(false))
           barrier();
          barrier();
         }
        bvec4 _GLF_SWITCH_1_24v[92], _GLF_SWITCH_1_25v;
        if(_GLF_DEAD(false))
         barrier();
       }
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       uvec2 _GLF_SWITCH_1_26v;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(true)
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       mat2x4(_GLF_IDENTITY(365.736, float(vec4(_GLF_IDENTITY(365.736, min(365.736, 365.736)), 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0))))), 5.1, _GLF_IDENTITY(_GLF_IDENTITY(732.136, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(732.136, clamp(732.136, _GLF_IDENTITY(732.136, (732.136) + _GLF_IDENTITY(0.0, (0.0) / 1.0)), 732.136)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (true ? mat2x4(_GLF_IDENTITY(732.136, clamp(732.136, _GLF_IDENTITY(_GLF_IDENTITY(732.136, (732.136) + 0.0), min(_GLF_IDENTITY(732.136, (732.136) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(732.136, (732.136) + 0.0), (false ? _GLF_FUZZED(1359.9558) : _GLF_IDENTITY(732.136, (732.136) + 0.0))))), 732.136)), _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))) : _GLF_FUZZED(mat2x4(-55.43, 713.923, -4.1, 507.424, -3.6, 8.2, 95.57, -6.6)))))), max(732.136, _GLF_IDENTITY(732.136, max(732.136, 732.136)))), -0.3, -6.1, 689.605, 966.793, -4145.1092);
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
        barrier();
       mat4x3 _GLF_SWITCH_1_27v, _GLF_SWITCH_1_28v, _GLF_SWITCH_1_29v;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         barrier();
        }
       mat3x4 _GLF_SWITCH_1_30v;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, true && (true))))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
      if(_GLF_DEAD(false))
       barrier();
      uint _GLF_SWITCH_1_31v;
      if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
       barrier();
      for(      subgroup_id;
 false; ((mat2x3(-8.7, 167.449, -7.3, 8153.1132, 8923.6657, -795.698) + (bvec3(false, false, false) , mat2x3(_GLF_IDENTITY(16.06, clamp(16.06, 16.06, 16.06)), _GLF_IDENTITY(476.889, clamp(476.889, _GLF_IDENTITY(476.889, min(_GLF_IDENTITY(476.889, (476.889) / 1.0), 476.889)), _GLF_IDENTITY(476.889, (476.889) - 0.0))), -1.6, 64.37, 40.89, 5.7))) , mat4x3(-8317.8969, -0.9, 1.3, -284.504, -0.9, -9895.8907, -387.171, 9.2, 6.7, 6561.9354, -7006.8019, _GLF_IDENTITY(_GLF_IDENTITY(-48.73, max(_GLF_IDENTITY(-48.73, (-48.73) / 1.0), -48.73)), (false ? _GLF_FUZZED(mod(-5.7, -53.42)) : _GLF_IDENTITY(-48.73, max(_GLF_IDENTITY(-48.73, (-48.73) / 1.0), -48.73)))))))
       {
        uvec2 _GLF_SWITCH_1_32v[43];
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         barrier();
        for(        findLSB((ivec2(-56175, 99002) * _GLF_IDENTITY(ivec2(-57679, 40566), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec2(22054, -87936)) : ivec2(-57679, 40566)))));
 (vec4(-9.4, 7.2, 8.3, 3540.8541) == vec4(-2.4, -1.3, -61.02, 5.0)); (mat4x3(_GLF_IDENTITY(5.6, mix(float(5.6), float(_GLF_FUZZED(7.5)), bool(false))), -1.9, -60.04, 607.768, -394.903, 8.9, 3.6, 4808.6689, 4.4, 6350.8991, -3877.5808, -281.795)))
         {
         }
        if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
         barrier();
       }
      if(_GLF_DEAD(false))
       return;
      mat4x2 _GLF_SWITCH_1_33v, _GLF_SWITCH_1_34v, _GLF_SWITCH_1_35v;
      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
       {
        if(_GLF_DEAD(false))
         barrier();
        barrier();
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
       }
      if(_GLF_DEAD(false))
       return;
      if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
       {
        if(_GLF_DEAD(false))
         barrier();
        barrier();
        if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
         barrier();
       }
      if(_GLF_DEAD(false))
       {
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
        barrier();
       }
      if(_GLF_DEAD(false))
       return;
      ivec2(_GLF_IDENTITY(-40794, clamp(-40794, _GLF_IDENTITY(-40794, max(_GLF_IDENTITY(-40794, (false ? _GLF_FUZZED(94217) : -40794)), _GLF_IDENTITY(-40794, 0 ^ (_GLF_IDENTITY(-40794, clamp(-40794, _GLF_IDENTITY(-40794, (-40794) / 1), -40794)))))), -40794)), -94139);
      if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bool(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))))))
       {
        if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
         barrier();
        if(_GLF_DEAD(false))
         barrier();
        barrier();
        if(_GLF_DEAD(false))
         barrier();
       }
      if(false)
       {
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         return;
        mat4 _GLF_SWITCH_1_36v;
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(false))
           barrier();
          barrier();
         }
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             return;
            barrier();
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             return;
            barrier();
           }
         }
        (mat2(mat2x4(8637.9743, -62.15, 9.5, 2.9, -8167.4639, 8.1, 5.9, 55.70)) != (mat2(7.2, _GLF_IDENTITY(61.22, _GLF_IDENTITY(mix(float(_GLF_FUZZED(61.20)), float(_GLF_IDENTITY(_GLF_IDENTITY(61.22, clamp(61.22, 61.22, _GLF_IDENTITY(61.22, (false ? _GLF_FUZZED(7543.9804) : 61.22)))), max(61.22, 61.22))), bool(true)), float(_GLF_IDENTITY(mat2x3(mix(float(_GLF_FUZZED(61.20)), float(_GLF_IDENTITY(_GLF_IDENTITY(61.22, clamp(61.22, 61.22, _GLF_IDENTITY(61.22, (false ? _GLF_FUZZED(7543.9804) : 61.22)))), max(61.22, 61.22))), bool(true)), 1.0, 1.0, 0.0, 0.0, 1.0), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x3(mix(float(_GLF_FUZZED(61.20)), float(_GLF_IDENTITY(_GLF_IDENTITY(61.22, clamp(61.22, 61.22, _GLF_IDENTITY(61.22, (false ? _GLF_FUZZED(7543.9804) : 61.22)))), max(61.22, 61.22))), bool(true)), 1.0, 1.0, 0.0, 0.0, 1.0)))))), _GLF_IDENTITY(3.8, (true ? 3.8 : _GLF_FUZZED(-5.5))), 734.327)));
        if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))))
         {
          if(_GLF_DEAD(false))
           barrier();
          barrier();
          if(_GLF_DEAD(false))
           barrier();
         }
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(false))
           return;
          barrier();
         }
        if(_GLF_DEAD(false))
         barrier();
        ivec3(_GLF_IDENTITY(43090, int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(43090, (43090) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(43090, (43090) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(43090, (43090) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))), 1 * (int(_GLF_IDENTITY(_GLF_IDENTITY(43090, (43090) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(43090, (43090) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(43090, (43090) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY((int(_GLF_IDENTITY(_GLF_IDENTITY(43090, (43090) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(43090, (43090) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1))), (_GLF_IDENTITY((int(_GLF_IDENTITY(43090, (43090) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))), ((int(_GLF_IDENTITY(43090, (43090) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0) | 0))), -89197, -32451);
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         barrier();
        mat3(-735.521, 15.65, -7.7, _GLF_IDENTITY(2.7, min(2.7, 2.7)), -5369.1458, -697.054, 6.2, -9.7, 420.974);
        if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bool(! (! (false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(! (! (false))), ! (_GLF_IDENTITY(! (bool(! (! (false)))), false || (! (bool(! (! (false)))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(! (! (false))), ! (! (bool(! (! (false)))))), false), false, true))))))))))
         {
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            return;
           }
          if(_GLF_DEAD(false))
           barrier();
          barrier();
          if(_GLF_DEAD(false))
           barrier();
         }
        _GLF_SWITCH_1_31v;
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(false))
           barrier();
          barrier();
         }
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
        if(_GLF_DEAD(false))
         barrier();
       }
      else
       {
        if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false)), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)))))))
         barrier();
        bvec3(false, true, true);
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(false))
           barrier();
          barrier();
         }
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (true ? mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch) : _GLF_FUZZED(vec2(-328.166, 614.395))))).x > injectionSwitch.y))))
           return;
          barrier();
         }
        (_GLF_IDENTITY(virtual_gid % uvec4(59732u, 106565u, 107558u, 68958u), (virtual_gid % uvec4(59732u, 106565u, 107558u, 68958u)) | uvec4(0u, 0u, 0u, 0u)));
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         barrier();
        if(true)
         {
          if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
           {
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
              if(_GLF_DEAD(false))
               barrier();
             }
            if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               return;
              barrier();
             }
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          mat2x3 _GLF_SWITCH_1_37v, _GLF_SWITCH_1_38v[82];
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          uvec3(157592u, 139517u, 98441u);
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))))
           barrier();
          if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            return;
           }
          ;
          if(_GLF_DEAD(false))
           barrier();
          mat3x4(_GLF_IDENTITY(mat4(-406.302, -3.8, -7.8, -359.703, _GLF_IDENTITY(918.299, mix(float(_GLF_FUZZED(-9694.1383)), float(_GLF_IDENTITY(918.299, float(mat2x4(918.299, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, abs(1.0))))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))))), -14.65, 8.4, 548.169, _GLF_IDENTITY(_GLF_IDENTITY(-1.3, mix(float(_GLF_IDENTITY(-1.3, (-1.3) - 0.0)), float(_GLF_FUZZED(-509.842)), bool(false))), clamp(_GLF_IDENTITY(-1.3, mix(float(_GLF_IDENTITY(-1.3, (-1.3) - 0.0)), float(_GLF_FUZZED(-509.842)), bool(false))), _GLF_IDENTITY(-1.3, mix(float(_GLF_IDENTITY(-1.3, (-1.3) - 0.0)), float(_GLF_FUZZED(-509.842)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(-1.3, mix(float(_GLF_IDENTITY(-1.3, (-1.3) - 0.0)), float(_GLF_FUZZED(-509.842)), bool(false))), clamp(_GLF_IDENTITY(-1.3, mix(float(_GLF_IDENTITY(-1.3, (-1.3) - 0.0)), float(_GLF_FUZZED(-509.842)), bool(false))), _GLF_IDENTITY(-1.3, mix(float(_GLF_IDENTITY(-1.3, (-1.3) - 0.0)), float(_GLF_FUZZED(-509.842)), bool(false))), _GLF_IDENTITY(-1.3, mix(float(_GLF_IDENTITY(-1.3, (-1.3) - 0.0)), float(_GLF_FUZZED(-509.842)), bool(false))))))), 8.0, 74.07, _GLF_IDENTITY(-22.08, (-22.08) - 0.0), 650.214, 11.75, -9.3, -57.75), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat4(-7051.4696, 9.5, -7841.1570, -60.09, -729.130, 676.519, -2682.4282, -5.7, 219.275, -9.4, -2804.0232, 0.3, 40.81, _GLF_IDENTITY(-9.2, (_GLF_IDENTITY(-9.2, mix(float(_GLF_FUZZED(-109.411)), float(-9.2), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))))), bool(bool(bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))))))))))))) * 1.0), -318.769, 2.2)) : mat4(-406.302, _GLF_IDENTITY(-3.8, _GLF_IDENTITY(clamp(-3.8, -3.8, -3.8), (clamp(-3.8, -3.8, -3.8)) * abs(1.0))), -7.8, -359.703, _GLF_IDENTITY(918.299, mix(float(_GLF_FUZZED(-9694.1383)), _GLF_IDENTITY(float(918.299), (_GLF_IDENTITY(float(918.299), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.6) : float(918.299)))) / exp(0.0)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))) / 1.0)), vec2(_GLF_FUZZED(-96.31), _GLF_FUZZED(4423.6333)), bvec2(false, false))).y))), bool(_GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))) / 1.0)), vec2(_GLF_FUZZED(-96.31), _GLF_FUZZED(4423.6333)), bvec2(false, false))).y)))), (bool(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))) / 1.0)), vec2(_GLF_FUZZED(-96.31), _GLF_FUZZED(4423.6333)), bvec2(false, false))).y))))) || false))))), _GLF_IDENTITY(-14.65, clamp(-14.65, _GLF_IDENTITY(_GLF_IDENTITY(-14.65, min(-14.65, -14.65)), mix(float(_GLF_FUZZED((+ 756.203))), float(_GLF_IDENTITY(-14.65, min(-14.65, -14.65))), bool(true))), -14.65)), 8.4, 548.169, -1.3, 8.0, 74.07, -22.08, 650.214, 11.75, -9.3, -57.75))));
          if(_GLF_DEAD(false))
           barrier();
          mat3x4(-3.8, _GLF_IDENTITY(-41.09, clamp(_GLF_IDENTITY(-41.09, _GLF_IDENTITY((-41.09) + 0.0, (true ? (-41.09) + 0.0 : _GLF_FUZZED(9.7)))), -41.09, -41.09)), _GLF_IDENTITY(9142.2895, max(9142.2895, 9142.2895)), _GLF_IDENTITY(5.4, max(5.4, 5.4)), 67.14, 6.2, 2819.9071, -1065.7295, 639.757, -463.151, 1.0, 5.0);
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), false || (bool(bvec4(false, false, false, false)))))) || false)))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            barrier();
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(673.343, -4168.4591)) : injectionSwitch)).y))))
             barrier();
            barrier();
           }
          if(_GLF_DEAD(false))
           barrier();
          bvec3 _GLF_SWITCH_1_39v, _GLF_SWITCH_1_40v, _GLF_SWITCH_1_41v;
          if(_GLF_DEAD(false))
           barrier();
          mat3 _GLF_SWITCH_1_42v, _GLF_SWITCH_1_43v[27], _GLF_SWITCH_1_44v;
          if(_GLF_DEAD(false))
           return;
         }
        else
         {
          if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
             {
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 return;
                barrier();
               }
             }
            if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
           }
          ivec2(-24683, 42481);
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(false))))
           {
            if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-42.41, 4.3)) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5156.0698), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(-912.051))), _GLF_FUZZED(-36.88)), bvec2(true, false))))), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))) * vec2(1.0, 1.0)).y))))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          uvec4 _GLF_SWITCH_1_45v;
          if(_GLF_DEAD(false))
           barrier();
          ivec3(-77666, 99223, -7901);
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
           return;
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(867.318), _GLF_FUZZED(2.4)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), true))).y))))
           barrier();
          transpose(mat2x3(-9.0, -200.864, -278.279, -2.1, -9.7, -8477.7138));
         }
        mat4x2 _GLF_SWITCH_1_46v, _GLF_SWITCH_1_47v, _GLF_SWITCH_1_48v;
        if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
         {
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              barrier();
             }
            barrier();
           }
          if(_GLF_DEAD(false))
           barrier();
          barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
         }
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, abs(0.0), determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 1.0, 1.0)), (_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, abs(0.0), determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 1.0, 1.0)), min(vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, abs(0.0), determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 1.0, 1.0)), vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, abs(0.0), determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 1.0, 1.0))))) - vec2(0.0, 0.0))).x > injectionSwitch.y))))
           barrier();
          barrier();
          if(_GLF_DEAD(false))
           return;
         }
        mat2x3(6478.1076, 780.036, _GLF_IDENTITY(4.6, (false ? _GLF_FUZZED(-380.647) : 4.6)), 42.98, -5.2, 5.5);
        if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false))))
         barrier();
        if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec3(true, true, false))), false, true)), bool(bvec3(bool(bvec4(false, true, false, true)), true, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))) && true), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, (false) && true), false))))))))
         {
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           return;
          barrier();
         }
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(false))
           return;
          return;
         }
        if(_GLF_DEAD(false))
         barrier();
       }
      bvec3(true, _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true);
      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
       barrier();
      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
       barrier();
      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
       {
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
        barrier();
       }
      if(_GLF_DEAD(false))
       {
        if(_GLF_DEAD(false))
         barrier();
        barrier();
       }
      if(_GLF_DEAD(false))
       barrier();
     }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(10.93), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-9.0, -29.89, -746.797).g)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-64.85)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     default:
     if(_GLF_DEAD(false))
      barrier();
     1;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))))) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
}
