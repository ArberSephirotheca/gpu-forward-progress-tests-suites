#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-56.76, 46.46)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), uint(uvec4(~ (subgroup_id), 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))) * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size));
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) ^ 0u), uint(uvec4(workgroup_base + subgroup_base + subgroup_local_id, 1u, 1u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED(194432u) : uint(6u))), _GLF_IDENTITY(uint(6u), 1u * (uint(6u))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)))))) % subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), (subgroup_local_id + 1) >> 0u)), max((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), (subgroup_local_id + 1) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), (subgroup_local_id + 1) >> 0u)))) % _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), (true ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(workgroup_size)))) << 0u);
 uint read = 0;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), max(int(5), int(5))), int(5)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0, (0) | (0)) | (4)), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (4)), 0 ^ (_GLF_IDENTITY(4, 0 | (4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (4)), max(_GLF_IDENTITY(4, 0 | _GLF_IDENTITY((4), ((4)) | ((4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), 0 | (4))))))))), 64, 4);
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   subgroupAll(false);
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), ! (! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))))))
    return;
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(false))
    return;
  }
 subgroupBarrier();
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(read, (read) | 0u), (_GLF_IDENTITY(read, (read) | 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), float(mat3(clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0)))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[1], float(float(((injectionSwitch) * mat2(1.0))[1])))), vec2(_GLF_FUZZED(_GLF_IDENTITY(929.744, mix(float(_GLF_IDENTITY(929.744, clamp(929.744, 929.744, 929.744))), float(_GLF_FUZZED(24.43)), bool(false)))), _GLF_FUZZED(float(37202u))), bvec2(false, _GLF_IDENTITY(false, true && (false)))))).y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), (false ? _GLF_FUZZED(-780.221) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), mix(float(_GLF_FUZZED(6.3)), float(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), bool(true)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(0.0), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0))), max((0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(0.0), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0))), (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(0.0), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))))), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))), ! (! (_GLF_IDENTITY(! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))), (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))) || false)))))))), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-854.032)), bool(false))) : _GLF_FUZZED(5.5))), 0.0))), max(sin(0.0), _GLF_IDENTITY(sin(0.0), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), vec3(mat4x2(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 1.0, 0.0, abs(0.0))))))), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0)))))), injectionSwitch)).x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-854.032)), bool(false))) : _GLF_FUZZED(5.5))), 0.0))), max(sin(0.0), _GLF_IDENTITY(sin(0.0), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), vec3(mat4x2(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 1.0, 0.0, abs(0.0))))))), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0)))))), injectionSwitch)).x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))), false, false))), false, false, true)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(0.0), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 0.0, 1.0))), 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0)), (true ? _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0)), max(float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0)), float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0)))) : _GLF_FUZZED(-329.114)))) > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))), false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(0.0), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 0.0, 1.0))), 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0)), (true ? _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0)), max(float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0)), float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0)))) : _GLF_FUZZED(-329.114)))) > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))), false, false)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(1433.5291)))) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (0.0) - 0.0)), max(sin(0.0), _GLF_IDENTITY(sin(0.0), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, float(mat2(1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0))), 0.0, 1.0))), 0.0, sin(0.0)), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(-9.3), _GLF_FUZZED(-97.93), _GLF_FUZZED(-7.4)), vec3((vec3(1.0, 0.0, 0.0))[0], (vec3(1.0, 0.0, 0.0))[1], (vec3(1.0, 0.0, 0.0))[2]), bvec3(true, true, true)))))), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0)), (true ? _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0, 0.0), mat2(mat2x3(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0, 0.0), (mat2(injectionSwitch.x, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0, 0.0)) * mat2(1.0)))))), _GLF_IDENTITY(max(float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0)), float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))), (true ? max(float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0)), float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) : _GLF_FUZZED(floor(-985.303))))) : _GLF_FUZZED(-329.114)))) > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))), true, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))), true, true)), false, false)))), false, false))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (0.0) / 1.0)), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), clamp(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), min(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), max(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))))), false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))))), mix(float(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), clamp(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), min(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), max(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))))), false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))))), max((_GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), clamp(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), min(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), max(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))))), false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), clamp(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), min(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), max(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))))), false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))))))), float(_GLF_FUZZED((true ? float(97485) : 2.5))), bool(false))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y))))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y)))))))))))))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (0.0) / 1.0)), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), clamp(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), min(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), max(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))))), false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))))), mix(float(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), clamp(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), min(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), max(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))))), false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))))), max((_GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), clamp(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), min(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), max(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))))), false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), clamp(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), min(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), max(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))))), false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))))))), float(_GLF_FUZZED((true ? float(97485) : 2.5))), bool(false))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y))))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y)))))))))))))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), min(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)))), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0)), vec2(mat3x4(vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 1.0, 1.0))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, abs(0.0), 1.0, 1.0, 1.0, 0.0)))), injectionSwitch)).x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false)))), false, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false)))), false, false)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false)))), false, false)), false || (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false)))), false, false)))))))) || false))), true)))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (0.0) / 1.0)), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), clamp(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), min(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), max(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))))), false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))))), mix(float(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), clamp(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), min(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), max(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))))), false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))))), max((_GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), clamp(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), min(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), max(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))))), false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), clamp(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), min(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), max(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))))), false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))))))), float(_GLF_FUZZED((true ? float(97485) : 2.5))), bool(false))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y))))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y)))))))))))))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (0.0) / 1.0)), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), clamp(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), min(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), max(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))))), false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))))), mix(float(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), clamp(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), min(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), max(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))))), false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))))), max((_GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), clamp(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), min(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), max(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))))), false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), clamp(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), min(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), max(false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))))), false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))))))), float(_GLF_FUZZED((true ? float(97485) : 2.5))), bool(false))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y))))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y)))))))))))))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), min(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)))), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0)), vec2(mat3x4(vec2(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(458.341) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (sin(0.0)) * 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 1.0, 1.0))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, abs(0.0), 1.0, 1.0, 1.0, 0.0)))), injectionSwitch)).x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false)))), false, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false)))), false, false)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false)))), false, false)), false || (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false)))), false, false)))))))) || false))), true)))))))))) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)), bool(bvec2(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), true, false))))), true)), false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
}
