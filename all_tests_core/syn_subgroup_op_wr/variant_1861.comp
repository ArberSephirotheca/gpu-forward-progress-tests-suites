#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_14 {
 bvec4 _f0;
 uvec2 _f1;
 mat2 _f2;
 mat3 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_13 {
 ivec4 _f0;
 int _f1;
 float _f2;
 int _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_12 {
 int _f0;
 int _f1;
 mat4 _f2;
 mat3x4 _f3;
 ivec2 _f4;
 int _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_15 {
 _GLF_struct_12 _f0;
 mat3 _f1;
 mat3x4 _f2;
 bvec3 _f3;
 _GLF_struct_13 _f4;
 mat3 _f5;
 _GLF_struct_14 _f6;
} ;

struct _GLF_struct_10 {
 uvec4 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_9 {
 uint _f0;
} ;

struct _GLF_struct_11 {
 uint _f0;
 bvec4 _f1;
 _GLF_struct_9 _f2;
 _GLF_struct_10 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_16 {
 uint workgroup_id;
 mat3x4 _f0;
 mat4x3 _f1;
 _GLF_struct_11 _f2;
 _GLF_struct_15 _f3;
} ;

struct _GLF_struct_6 {
 mat2x3 _f0;
 vec2 _f1;
 mat3x2 _f2;
 uvec4 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_7 {
 _GLF_struct_6 _f0;
} ;

struct _GLF_struct_4 {
 mat2x3 _f0;
 mat4x2 _f1;
 mat2 _f2;
 bool _f3;
 mat2 _f4;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
 ivec4 _f1;
 uvec2 _f2;
 mat2 _f3;
 ivec3 _f4;
 uvec4 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_2 {
 bool _f0;
} ;

struct _GLF_struct_1 {
 bool _f0;
 bool _f1;
} ;

struct _GLF_struct_3 {
 ivec4 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_8 {
 mat4 _f0;
 vec3 _f1;
 uvec3 _f2;
 _GLF_struct_3 _f3;
 uint workgroup_size;
 _GLF_struct_5 _f4;
 mat4x2 _f5;
 _GLF_struct_7 _f6;
} ;

struct _GLF_struct_0 {
 mat4 _f0;
 uint subgroup_size;
 mat3x4 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0, 0.0), (vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y)), float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -9879.0734))), float(injectionSwitch.y), bool(true))), min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), 0.0, 0.0)) - vec3(0.0, 0.0, 0.0))))), true && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0, 0.0), clamp(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0, 0.0), mix(vec3((vec3(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0, 0.0))[0], (vec3(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0, 0.0))[1], (vec3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), _GLF_IDENTITY(float(mat3x2(min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), 1.0, 0.0, abs(0.0), 0.0, 0.0)), mix(float(float(mat3x2(min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), 1.0, 0.0, abs(0.0), 0.0, 0.0))), float(_GLF_FUZZED(-694.251)), bool(false))))), 0.0, 0.0))[2]), vec3(_GLF_FUZZED(3.4), _GLF_FUZZED(6129.7852), _GLF_FUZZED(-2.3)), bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), vec3(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0, 0.0), mix(vec3((vec3(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0, 0.0))[0], _GLF_FUZZED(15.15), _GLF_FUZZED(_GLF_IDENTITY(-789.180, (-789.180) + sqrt(0.0)))), vec3(_GLF_FUZZED(585.035), (vec3(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0, 0.0))[1], (vec3(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0, 0.0))[2]), bvec3(false, true, true))))), (vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)), injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), 0.0, 0.0)) - vec3(0.0, 0.0, 0.0))))))), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec2(false, true)))), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec2(false, true)))), false, false))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(mat4(1.0), gl_SubgroupSize, mat3x4(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(abs(vec2(_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)) * (0.0)))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(988.476), min(_GLF_FUZZED(988.476), _GLF_FUZZED(988.476)))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)) * (0.0)))), (float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), (0.0) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)) * (0.0))))) - 0.0)), bool(true))), float(_GLF_FUZZED(-80.99)), bool(false))), 0.0)) + _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(mat4((injectionSwitch), 0.0, exp(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))))), mat2(1.0) * (abs(vec2(_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)) * (0.0)))), mix(float(_GLF_FUZZED(988.476)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)) * (0.0)))), (float(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)) * (0.0))))) - 0.0)), bool(true))), float(_GLF_FUZZED(-80.99)), bool(false))), 0.0)) + (injectionSwitch)))), vec2(mat2(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(1.3, -5.3)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))) * mat2(1.0)))))))), 1.0, 0.0))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(-80.99)), bool(false))), 0.0)) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), vec2(mat2(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)), injectionSwitch)))))), 1.0, 0.0))).x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))), _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-85.90), _GLF_FUZZED(6300.7837)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))), 1.0, 0.0)), min(vec2(mat2(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), 1.0, 0.0))))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(-33.65)), float(max(injectionSwitch.y, injectionSwitch.y)), bool(true)))) * 1.0))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), 1.0, 0.0))).x > injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))), vec2(mat2(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), 1.0, 0.0))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))), vec2(mat2(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), 1.0, 0.0))).x > injectionSwitch.y)))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), vec2(mat2(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 0.0))), 0.0)), 0.0))))).x > injectionSwitch.y)) && true))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(abs(vec2(0.0, 0.0)), clamp(abs(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), abs(vec2(0.0, 0.0)), _GLF_IDENTITY(abs(vec2(0.0, 0.0)), clamp(abs(vec2(0.0, 0.0)), _GLF_IDENTITY(abs(vec2(0.0, 0.0)), (abs(vec2(0.0, 0.0))) + vec2(0.0, 0.0)), _GLF_IDENTITY(abs(vec2(0.0, 0.0)), min(abs(vec2(0.0, 0.0)), abs(vec2(0.0, 0.0)))))))) + (injectionSwitch)), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 0.0))))), abs(vec2(0.0, 0.0)) + (injectionSwitch)), 1.0, 0.0), transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch, abs(vec2(_GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-165.106), max(_GLF_IDENTITY(_GLF_FUZZED(-165.106), max(_GLF_FUZZED(-165.106), _GLF_FUZZED(-165.106))), _GLF_FUZZED(-165.106))) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, sin(0.0) + (0.0)))))) + (injectionSwitch)), 1.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, log(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0)))))))))).x > injectionSwitch.y))), true)))))), false || (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, abs(vec2(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)) + (injectionSwitch)), 1.0, 0.0))).x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) - 0.0) : _GLF_FUZZED(2.4))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))) || false))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(mat4(1.0), vec3(_GLF_IDENTITY(1.0, (1.0) / exp(0.0))), uvec3(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))) + (1u))))), _GLF_struct_3(ivec4(1), _GLF_struct_1(true, true), _GLF_struct_2(true), uvec2(1u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), ((~ (gl_WorkGroupSize.x))) ^ (101043u & 0u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) | (gl_WorkGroupSize.x))), (min(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ _GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), (gl_WorkGroupSize.x))))), gl_WorkGroupSize.x)) | (min(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), max(~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u)), ~ (~ (gl_WorkGroupSize.x))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)).x)))), clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x))), uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x))), 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x))), uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x))), 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(77984u, 183232u, 166364u)) : (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))) | ((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))).x)), ((~ (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(77984u, 183232u, 166364u)) : (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))) | ((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))).x))) + 0u)), uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x))), 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)) * 1u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x))), uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), gl_WorkGroupSize)), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x))), 0u))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))).x))))), gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))), gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((gl_WorkGroupSize.x), min((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), 0u | (~ _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), 0u | ((~ (gl_WorkGroupSize.x)))))) : _GLF_FUZZED(subgroup_id)), clamp((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), 0u | (~ _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), 0u | ((~ (gl_WorkGroupSize.x)))))) : _GLF_FUZZED(subgroup_id)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), 0u | (~ _GLF_IDENTITY((~ _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) ^ 0u)), 0u | ((~ (gl_WorkGroupSize.x)))))) : _GLF_FUZZED(subgroup_id)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), 0u | (~ _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), 0u | ((~ (gl_WorkGroupSize.x)))))) : _GLF_FUZZED(subgroup_id))))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x)), _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))).x))) | (~ (~ (gl_WorkGroupSize.x))), min((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x))) | (~ (~ (gl_WorkGroupSize.x))), _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x))) | (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), max(~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x))))), ~ (_GLF_IDENTITY(~ ((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x))) | (~ (~ (gl_WorkGroupSize.x)))), clamp(~ ((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x))) | (~ (~ (gl_WorkGroupSize.x)))), ~ ((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x))) | (~ (~ (gl_WorkGroupSize.x)))), ~ ((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x))) | (~ (~ (gl_WorkGroupSize.x))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), clamp(~ (~ (gl_WorkGroupSize.x)), ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(uint(uint(~ (gl_WorkGroupSize.x))), (uint(uint(~ (gl_WorkGroupSize.x)))) | (uint(uint(~ (gl_WorkGroupSize.x))))))))), ~ (~ (gl_WorkGroupSize.x)))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), clamp(_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), (false ? _GLF_FUZZED(163412u) : ~ (~ (gl_WorkGroupSize.x)))), ~ (~ (gl_WorkGroupSize.x)), ~ (~ (gl_WorkGroupSize.x)))))), (true ? _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), clamp(~ (~ (gl_WorkGroupSize.x)), ~ (~ (gl_WorkGroupSize.x)), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u))))))), max(uint(uint(_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), clamp(~ (~ (gl_WorkGroupSize.x)), ~ (~ (gl_WorkGroupSize.x)), ~ _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), _GLF_IDENTITY((_GLF_IDENTITY((~ (gl_WorkGroupSize.x)), 1u * (_GLF_IDENTITY((~ (gl_WorkGroupSize.x)), min((~ (gl_WorkGroupSize.x)), (~ (gl_WorkGroupSize.x))))))), ((_GLF_IDENTITY((~ (gl_WorkGroupSize.x)), 1u * (_GLF_IDENTITY((~ (gl_WorkGroupSize.x)), min((~ (gl_WorkGroupSize.x)), (~ (gl_WorkGroupSize.x)))))))) / 1u) | ((~ (gl_WorkGroupSize.x)))))))), uint(uint(_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), clamp(~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), 0u + (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), ~ (~ (~ (gl_WorkGroupSize.x))))))) | (~ (gl_WorkGroupSize.x)))), _GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), (~ (~ (gl_WorkGroupSize.x))) >> 0u), ~ (~ (gl_WorkGroupSize.x)))))))) : _GLF_FUZZED(subgroup_local_id)))), _GLF_IDENTITY(0u, (0u) >> 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), clamp(~ (~ (gl_WorkGroupSize.x)), ~ (~ (gl_WorkGroupSize.x)), ~ _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), 0u | ((~ (gl_WorkGroupSize.x)))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), clamp(~ (~ (gl_WorkGroupSize.x)), ~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), (~ (~ (gl_WorkGroupSize.x))) ^ (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) ^ 0u)), uint(6u)))))))), _GLF_IDENTITY((true ? _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), clamp(~ (~ (gl_WorkGroupSize.x)), ~ (~ (gl_WorkGroupSize.x)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), clamp(_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), (gl_WorkGroupSize.x))), (_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(100872u, 16714u, 76744u)) : gl_WorkGroupSize)).x), (gl_WorkGroupSize.x)))) / 1u), (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), clamp(_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), (gl_WorkGroupSize.x))), (_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(100872u, 16714u, 76744u)) : gl_WorkGroupSize)).x), (gl_WorkGroupSize.x)))) / 1u), 1u * (~ _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), clamp(_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), (gl_WorkGroupSize.x))), (_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(100872u, 16714u, 76744u)) : gl_WorkGroupSize)).x), (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x)))) / 1u)))) >> 0u)))))), max(uint(uint(_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), clamp(~ (~ (gl_WorkGroupSize.x)), ~ (~ (gl_WorkGroupSize.x)), ~ (~ (gl_WorkGroupSize.x)))))), uint(uint(_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), clamp(~ (~ (gl_WorkGroupSize.x)), ~ (~ (gl_WorkGroupSize.x)), ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(uint(uvec4(~ (gl_WorkGroupSize.x), 1u, 1u, 0u)), (true ? _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), uint(uvec2(~ (gl_WorkGroupSize.x), 0u))), 1u, 1u, 0u)), clamp(uint(uvec4(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), uint(uvec2(~ (gl_WorkGroupSize.x), 0u))), 1u, 1u, 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), uint(uvec2(~ (gl_WorkGroupSize.x), 0u))), 1u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), uint(uvec2(~ (gl_WorkGroupSize.x), 0u))), 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u + (1u))) << 0u), 0u))) | (uint(uvec4(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), uint(uvec2(~ (gl_WorkGroupSize.x), 0u))), 1u, 1u, 0u)))), uint(uvec4(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), uint(uvec2(~ (gl_WorkGroupSize.x), 0u))), 1u, 1u, 0u)))) : _GLF_FUZZED((~ subgroup_local_id)))))))))))) : _GLF_FUZZED(subgroup_local_id)), (false ? _GLF_FUZZED(subgroup_local_id) : (true ? _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), _GLF_IDENTITY(gl_WorkGroupSize.x, 0u + (gl_WorkGroupSize.x)))))), clamp(~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) + 0u)), ~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), 0u | _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), ~ (~ (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u)))))))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), ~ (~ (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u)))))))))))))))), max((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), ~ (~ (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u)))))))))))))))), (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), ~ (~ (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))))))))))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))))))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))))))))))))), ((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u)))))))))))))) | 0u)))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))))))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))))))))))))), ((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u)))))))))))))) | 0u)))))), max((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))))))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))))))))))))), ((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u)))))))))))))) | 0u)))))), (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))))))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))))))))))))), ((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u)))))))))))))) | 0u))))))))), clamp(uint(_GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))))))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))))))))))))), ((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u)))))))))))))) | 0u)))))), max((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))))))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))))))))))))), ((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u)))))))))))))) | 0u)))))), (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))))))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))))))))))))), ((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u)))))))))))))) | 0u))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))))))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))))))))))))), ((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u)))))))))))))) | 0u)))))), max((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))))))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))))))))))))), ((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u)))))))))))))) | 0u)))))), (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))))))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))))))))))))), ((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u)))))))))))))) | 0u))))))))), (false ? _GLF_FUZZED(194339u) : uint(_GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))))))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))))))))))))), ((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u)))))))))))))) | 0u)))))), max((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))))))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))))))))))))), ((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u)))))))))))))) | 0u)))))), (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))))))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))))))))))))), ((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u)))))))))))))) | 0u))))))))))), uint(_GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))))))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))))))))))))), ((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u)))))))))))))) | 0u)))))), max((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))))))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))))))))))))), ((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u)))))))))))))) | 0u)))))), (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))))))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))))))))))))), ((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u)))))))))))))) | 0u))))))))))))), ((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), ~ (~ (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), max(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))))) - 0u))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))))))))))))))))) ^ (34441u & 0u))))))))), max(uint(uint(_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), clamp(~ (~ (gl_WorkGroupSize.x)), ~ _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(uint(uvec3((~ (gl_WorkGroupSize.x)), 0u, 1u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uvec3((~ (gl_WorkGroupSize.x)), 0u, 1u)), (uint(uvec3((~ (gl_WorkGroupSize.x)), 0u, 1u))) | 0u)), ~ (~ (uint(_GLF_IDENTITY(uint(uvec3((~ (gl_WorkGroupSize.x)), 0u, 1u)), (uint(uvec3((~ (gl_WorkGroupSize.x)), 0u, 1u))) | 0u)))))))), ~ (~ (gl_WorkGroupSize.x)))))), uint(uint(_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), clamp(~ (~ (gl_WorkGroupSize.x)), ~ (~ (gl_WorkGroupSize.x)), ~ (~ (gl_WorkGroupSize.x)))))))) : _GLF_FUZZED(subgroup_local_id))))))))))) >> 0u)), gl_WorkGroupSize.x)))), _GLF_struct_5(_GLF_struct_4(mat2x3(1.0), mat4x2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(float(0.0)))), _GLF_IDENTITY(float(_GLF_FUZZED(-5.6)), float(mat3x2(float(_GLF_FUZZED(-5.6)), 1.0, 0.0, 1.0, 0.0, 0.0))), bool(false))))), 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(length(0.0)))))))), mat2(1.0), true, mat2(1.0)), ivec4(1), uvec2(1u), mat2(1.0), ivec3(1), uvec4(1u), mat3(1.0)), mat4x2(1.0), _GLF_struct_7(_GLF_struct_6(mat2x3(1.0), vec2(1.0), mat3x2(1.0), uvec4(1u), mat2x3(1.0))));
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(gl_WorkGroupID.x, mat3x4(1.0), mat4x3(1.0), _GLF_struct_11(1u, bvec4(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), _GLF_struct_9(1u), _GLF_struct_10(uvec4(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, 0u | (1u))))))), mat2(1.0)), _GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec3(bvec3(bvec3(true))))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec3(bvec3(bvec3(true))))), true)))), true)))), bvec3(bvec4(bvec3(true), false))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))), true)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))), true))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))), true))), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))), true))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))), true))), false)))))))))))))))))), false)))))), false)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), (! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))) || false)), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), (! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))) || false)), true, false, true)))))))))))), _GLF_struct_15(_GLF_struct_12(1, 1, _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), (mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), mat3x4(1.0), ivec2(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(4262, min(4262, 4262)))))))), 1, mat4x2(1.0)), mat3(1.0), mat3x4(1.0), bvec3(_GLF_IDENTITY(true, false || (true))), _GLF_struct_13(ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, min(1, 1)), 1))) ^ 0, ((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, min(1, 1)), 1))) ^ 0) >> 0), ((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - 0)))), clamp(1, _GLF_IDENTITY(1, min(1, 1)), 1))) ^ 0) << 0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 + (1)), (_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ~ (~ ((1))))))) * 1), 1.0, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(36190))), bvec2(true)), _GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_struct_14(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (! ((true)))))), true)))))))))), uvec2(1u), mat2(1.0), mat3(1.0), mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(87.95)), float(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(926.288)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(926.288)), bool(false))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(926.288)), bool(false)))) / 1.0) : _GLF_FUZZED(-23.98)))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), (max(0.0, 0.0)) / _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(78.80))))))), bool(true))), (_GLF_IDENTITY(1.0, (1.0) * sqrt(1.0))) - 0.0)))));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_struct_replacement_8.workgroup_size, clamp(_GLF_struct_replacement_8.workgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_8.workgroup_size, (_GLF_struct_replacement_8.workgroup_size) << 0u), _GLF_struct_replacement_8.workgroup_size)) * _GLF_struct_replacement_16.workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, (0u << _GLF_IDENTITY(uint(1u), uint(1u))) + ((workgroup_base) / 1u)))) * 1u) + subgroup_id * _GLF_struct_replacement_0.subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size, min(workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size, workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size, (workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size) | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size, (((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 1u) + (workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size)))))) + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_0.subgroup_size), _GLF_IDENTITY(1u * (_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, ~ (~ (0)))), 0 + (_GLF_IDENTITY(1, (1) ^ 0)))) % _GLF_struct_replacement_0.subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, ~ (~ (0)))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? 0 : _GLF_FUZZED(-31075)))) | (_GLF_IDENTITY(0, (0) >> 0))) + (_GLF_IDENTITY(1, (1) ^ 0)))) % _GLF_struct_replacement_0.subgroup_size)) >> 0u)), (_GLF_IDENTITY(1u * (((subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0)) % _GLF_struct_replacement_0.subgroup_size)), clamp(1u * ((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0)) % _GLF_struct_replacement_0.subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0)) % _GLF_struct_replacement_0.subgroup_size) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u * (((subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0)) % _GLF_struct_replacement_0.subgroup_size)), 1u * (((subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0)) % _GLF_struct_replacement_0.subgroup_size))))) + 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-516.984) : injectionSwitch.y)))) : _GLF_FUZZED(-8259.6026)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), (false ? _GLF_FUZZED(6041.1688) : 0.0 + (injectionSwitch.x)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) * _GLF_ONE(1.0, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y))))) * _GLF_ONE(1.0, injectionSwitch.y)))))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (64) << 0), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) / int(_GLF_ONE(1.0, injectionSwitch.y))), 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(subgroup_local_id + 1 < _GLF_struct_replacement_0.subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (read) - _GLF_IDENTITY(0u, (0u) - (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))), 4, 64, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) >> 0))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), bvec3(bvec3(_GLF_IDENTITY(bvec3((false), true, _GLF_IDENTITY(true, bool(bool(true)))), bvec3(bvec3(bvec3((false), true, true))))))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3((false), true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3((false), true, true)), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3((false), true, true)), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3((false), true, true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3((false), true, true)), true)))))))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((false), true, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(bvec3((false), true, true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(bvec3((false), true, true))))), true))))))))), true)), true)))), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((false), true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3((false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3((false), true, true)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false))))))))), true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(bvec3((false), true, true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(bvec3((false), true, true))))), true))))))))), true)), true)))), true))))))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, false || (false))), true, true), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3((false), _GLF_IDENTITY(true, ! (! (true))), true)), bvec3(bvec4(bvec3(bvec3((false), true, true)), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) || false), true, true)), bvec3(bvec4(bvec3(bvec3((false), true, true)), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true)), false, false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), true, false))), ! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))), bool(bvec2((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))), true))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), bool(bvec3(! (false), false, false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), (_GLF_IDENTITY((false), true && ((false)))) && true)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), (_GLF_IDENTITY((false), true && ((false)))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (! (false)))), bool(bvec3(! (false), false, false))))) && true)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), injectionSwitch.x)) < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), true && (! (false))), true, true))), bool(bvec3(! (false), false, false)))), true))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), bool(bvec3(! (false), false, false)))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), bool(bvec3(_GLF_IDENTITY(! (false), ! (! (! (false)))), false, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false)))))), ! (! (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ((! (_GLF_IDENTITY((false), true && ((false)))))) || false))))), ! (! (! _GLF_IDENTITY((false), true && ((false)))))), bool(bvec3(! (false), false, false))))) && true))), true && ((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), bool(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(bvec3(bvec3(! (false), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), false))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false)))))), _GLF_IDENTITY(! _GLF_IDENTITY((! (! (false))), bool(bvec2((! (! (false))), false))), _GLF_IDENTITY(bool(bvec4(! (! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), (bool(bvec4(! (! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) && true))), bool(bvec3(! (false), false, false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), bool(bool(((false))))))))), ! (! (! (false)))), bool(bvec3(! (false), false, false)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (true && ((false))), bool(bool(! (true && ((false))))))), false || (! (_GLF_IDENTITY(! (true && ((false))), bool(bool(! (true && ((false)))))))))))))), ! (! (! (false)))), bool(bvec3(! (false), false, false)))), false)))) && true)) && true))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-5.3, -436.521), min(vec2(-5.3, -436.521), _GLF_IDENTITY(vec2(-5.3, -436.521), max(vec2(-5.3, -436.521), vec2(-5.3, -436.521)))))))).y)), true))));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + 0.0)), vec2(_GLF_FUZZED(-7127.9690), _GLF_FUZZED(-26.34)), bvec2(false, false))))) - abs(vec2(0.0, 0.0))) / vec2(1.0, 1.0))) - vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(314.709)), bool(false))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - abs(vec2(0.0, 0.0))) / vec2(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.6)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0))))) - vec2(0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - abs(vec2(0.0, 0.0))) / vec2(1.0, 1.0))), clamp((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - abs(vec2(0.0, 0.0))) / vec2(1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - abs(vec2(0.0, 0.0))) / vec2(1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - abs(vec2(0.0, 0.0))) / vec2(1.0, 1.0))))) - vec2(0.0, 0.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - abs(vec2(0.0, 0.0))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - _GLF_IDENTITY(abs(vec2(0.0, 0.0)), _GLF_IDENTITY((abs(vec2(0.0, 0.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((abs(vec2(0.0, 0.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) * sqrt(vec2(1.0, 1.0))))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0))), vec2(mat2x4(min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - abs(vec2(0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - abs(vec2(0.0, 0.0))), (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - abs(vec2(0.0, 0.0))) : _GLF_FUZZED(vec2(-4.3, -7.5)))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - abs(vec2(0.0, 0.0))))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - abs(vec2(0.0, 0.0))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0))), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), min(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec4(1444.5247, -4999.2014, -5.7, -4.1)) : _GLF_IDENTITY(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), min(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)))))), min(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), min(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)))))), vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), min(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))))))))))), max(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))))), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)))))))), 0.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - abs(vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(51.67)), bool(_GLF_IDENTITY(false, ! (! (false)))))), 0.0))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - abs(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)) - vec2(0.0, 0.0))))).y) - 0.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, _GLF_IDENTITY(true, (true) && true), true)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, determinant(mat2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0)), determinant(mat2(determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0))))).x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))), (_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))) && true), false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))))))), true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((true ? virtual_gid : _GLF_FUZZED(subgroup_id)), (_GLF_IDENTITY((true ? virtual_gid : _GLF_FUZZED(subgroup_id)), ((true ? virtual_gid : _GLF_FUZZED(subgroup_id))) >> 0u)) << 0u))) + 0u)], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8.6))), (injectionSwitch.y) / 1.0)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), 1.0))).y, mix(float(_GLF_FUZZED(-74.11)), float(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), 1.0))).y), bool(true)))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), 1.0))).y, mix(float(_GLF_FUZZED(-74.11)), float(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), 1.0))).y), bool(true))))) || false), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))))))), 1.0))).y, mix(float(_GLF_FUZZED(-74.11)), float(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), 1.0))).y), bool(true)))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), 1.0))).y, mix(float(_GLF_FUZZED(-74.11)), float(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), 1.0))).y), bool(true))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), 1.0))).y, mix(float(_GLF_FUZZED(-74.11)), float(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), 1.0))).y), bool(true)))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), 1.0))).y, mix(float(_GLF_FUZZED(-74.11)), float(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), 1.0))).y), bool(true))))) || false), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))))))), 1.0))).y, mix(float(_GLF_FUZZED(-74.11)), float(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), 1.0))).y), bool(true)))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), 1.0))).y, mix(float(_GLF_FUZZED(-74.11)), float(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), 1.0))).y), bool(true))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), 1.0))).y, mix(float(_GLF_FUZZED(-74.11)), float(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), 1.0))).y), bool(_GLF_IDENTITY(true, false || (true)))))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), 1.0))).y, mix(float(_GLF_FUZZED(-74.11)), float(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), 1.0))).y), bool(true))))) || false), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))))))), 1.0))).y, mix(float(_GLF_FUZZED(-74.11)), float(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), 1.0))).y), bool(true)))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), 1.0))).y, mix(float(_GLF_FUZZED(-74.11)), float(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), 1.0))).y), bool(true))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0)))))).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, _GLF_IDENTITY(true, ! (! (true))))))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true)))), true))) || false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(cos(39.62)))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, abs(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 1.0))))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-974.597), _GLF_FUZZED((- 912.708))), mix(vec2((vec2(_GLF_FUZZED(-974.597), _GLF_FUZZED((- 912.708))))[0], (vec2(_GLF_FUZZED(-974.597), _GLF_FUZZED(_GLF_IDENTITY((- 912.708), max((- 912.708), (- 912.708))))))[1]), vec2(_GLF_FUZZED(-1.1), _GLF_FUZZED(-3520.9718)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec2(false, false))).y)), false, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
    }
  }
}
