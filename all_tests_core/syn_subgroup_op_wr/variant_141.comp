#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec3 GLF_merged3_0_1_13_1_1_4_2_1_14num_workgroupreadworkgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
  }
 uvec2 GLF_merged2_0_1_4_1_1_14readworkgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), false)))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), false))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), false)))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool((false)))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), false))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, min((_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0, _GLF_IDENTITY((1.0) - 0.0, ((1.0) - 0.0) * 1.0)))), injectionSwitch.y))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))), false)), (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))) && true))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec3(false, false, true))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0)) > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(75.32)), vec2(_GLF_FUZZED(-8.0), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged3_0_1_13_1_1_4_2_1_14num_workgroupreadworkgroup_size.x = num_workgroup;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_13_1_1_4_2_1_14num_workgroupreadworkgroup_size.z = workgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = GLF_merged3_0_1_13_1_1_4_2_1_14num_workgroupreadworkgroup_size.z * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true)), (bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))))))
  return;
 GLF_merged2_0_1_4_1_1_14readworkgroup_base.y = workgroup_base;
 uint virtual_gid = GLF_merged2_0_1_4_1_1_14readworkgroup_base.y + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, ~ (~ (GLF_merged2_0_1_4_1_1_14readworkgroup_base))), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, min(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, clamp(GLF_merged2_0_1_4_1_1_14readworkgroup_base, _GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, (GLF_merged2_0_1_4_1_1_14readworkgroup_base) ^ (uvec2(0u, 0u) & uvec2(194769u, 81153u))), GLF_merged2_0_1_4_1_1_14readworkgroup_base)), GLF_merged2_0_1_4_1_1_14readworkgroup_base)), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(0u), uvec2(0u))) ^ (_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, (GLF_merged2_0_1_4_1_1_14readworkgroup_base) | uvec2(0u, 0u)))), min(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, clamp(GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base)), GLF_merged2_0_1_4_1_1_14readworkgroup_base)), _GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, min(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, clamp(GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base)), GLF_merged2_0_1_4_1_1_14readworkgroup_base)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, (uvec2(0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(1u)), (false ? _GLF_FUZZED(GLF_merged2_0_1_4_1_1_14readworkgroup_base) : _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), ~ (~ (~ (1u)))))), 1u))), uvec2(1u))))) ^ (_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, min(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, clamp(GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base)), GLF_merged2_0_1_4_1_1_14readworkgroup_base)))), clamp(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u))) ^ (_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, min(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, clamp(GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base)), GLF_merged2_0_1_4_1_1_14readworkgroup_base)))), _GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, min(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u) ^ (GLF_merged2_0_1_4_1_1_14readworkgroup_base)), GLF_merged2_0_1_4_1_1_14readworkgroup_base)), min(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, _GLF_IDENTITY(clamp(GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base), uvec2(uvec2(_GLF_IDENTITY(clamp(GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base), min(clamp(GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base), clamp(GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base))))))), GLF_merged2_0_1_4_1_1_14readworkgroup_base)))), _GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, (uvec2(0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(1u)), (_GLF_IDENTITY(uvec2(1u), uvec2(1u))) ^ uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(1u)), max(_GLF_IDENTITY(uvec2(1u), uvec2(1u)), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, 0u + (1u))), uvec2(1u))))))) ^ (_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, min(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, clamp(GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base)), GLF_merged2_0_1_4_1_1_14readworkgroup_base)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, (uvec2(0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(1u)), (false ? _GLF_FUZZED(GLF_merged2_0_1_4_1_1_14readworkgroup_base) : _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), ~ (~ (~ (1u)))))), 1u))), uvec2(1u))))) ^ (_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, min(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, clamp(GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base)), GLF_merged2_0_1_4_1_1_14readworkgroup_base)))), clamp(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u))) ^ (_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, min(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, clamp(GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base)), GLF_merged2_0_1_4_1_1_14readworkgroup_base)))), _GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, min(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u) ^ (GLF_merged2_0_1_4_1_1_14readworkgroup_base)), GLF_merged2_0_1_4_1_1_14readworkgroup_base)), min(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, _GLF_IDENTITY(clamp(GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base), uvec2(uvec2(_GLF_IDENTITY(clamp(GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base), min(clamp(GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base), clamp(GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base))))))), GLF_merged2_0_1_4_1_1_14readworkgroup_base)))), _GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, (uvec2(0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(1u)), (_GLF_IDENTITY(uvec2(1u), uvec2(1u))) ^ uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(1u)), max(_GLF_IDENTITY(uvec2(1u), uvec2(1u)), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, 0u + (1u))), uvec2(1u))))))) ^ (_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, min(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, clamp(GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base)), GLF_merged2_0_1_4_1_1_14readworkgroup_base)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, (uvec2(0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(1u)), (false ? _GLF_FUZZED(GLF_merged2_0_1_4_1_1_14readworkgroup_base) : _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), ~ (~ (~ (1u)))))), 1u))), uvec2(1u))))) ^ (_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, min(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, clamp(GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base)), GLF_merged2_0_1_4_1_1_14readworkgroup_base)))), clamp(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u))) ^ (_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, min(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, clamp(GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base)), GLF_merged2_0_1_4_1_1_14readworkgroup_base)))), _GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, min(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u) ^ (GLF_merged2_0_1_4_1_1_14readworkgroup_base)), GLF_merged2_0_1_4_1_1_14readworkgroup_base)), min(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, _GLF_IDENTITY(clamp(GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base), uvec2(uvec2(_GLF_IDENTITY(clamp(GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base), min(clamp(GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base), clamp(GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base))))))), GLF_merged2_0_1_4_1_1_14readworkgroup_base)))), _GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, (uvec2(0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(1u)), (_GLF_IDENTITY(uvec2(1u), uvec2(1u))) ^ uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(1u)), max(_GLF_IDENTITY(uvec2(1u), uvec2(1u)), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, 0u + (1u))), uvec2(1u))))))) ^ (_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, min(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, clamp(GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base)), GLF_merged2_0_1_4_1_1_14readworkgroup_base)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, (uvec2(0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(1u)), (false ? _GLF_FUZZED(GLF_merged2_0_1_4_1_1_14readworkgroup_base) : _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), ~ (~ (~ (1u)))))), 1u))), uvec2(1u))))) ^ (_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, min(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, clamp(GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base)), GLF_merged2_0_1_4_1_1_14readworkgroup_base)))), clamp(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u))) ^ (_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, min(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, clamp(GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base)), GLF_merged2_0_1_4_1_1_14readworkgroup_base)))), _GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, min(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u) ^ (GLF_merged2_0_1_4_1_1_14readworkgroup_base)), GLF_merged2_0_1_4_1_1_14readworkgroup_base)), min(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, _GLF_IDENTITY(clamp(GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base), uvec2(uvec2(_GLF_IDENTITY(clamp(GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base), min(clamp(GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base), clamp(GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base))))))), GLF_merged2_0_1_4_1_1_14readworkgroup_base)))), _GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, (uvec2(0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(1u)), (_GLF_IDENTITY(uvec2(1u), uvec2(1u))) ^ uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(1u)), max(_GLF_IDENTITY(uvec2(1u), uvec2(1u)), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, 0u + (1u))), uvec2(1u))))))) ^ (_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, min(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, clamp(GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base)), GLF_merged2_0_1_4_1_1_14readworkgroup_base)))))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, (uvec2(0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(1u)), (false ? _GLF_FUZZED(GLF_merged2_0_1_4_1_1_14readworkgroup_base) : _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), ~ (~ (~ (1u)))))), 1u))), uvec2(1u))))) ^ (_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, min(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, clamp(GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base)), GLF_merged2_0_1_4_1_1_14readworkgroup_base)))), clamp(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u))) ^ (_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, min(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, clamp(GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base)), GLF_merged2_0_1_4_1_1_14readworkgroup_base)))), _GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, min(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u) ^ (GLF_merged2_0_1_4_1_1_14readworkgroup_base)), GLF_merged2_0_1_4_1_1_14readworkgroup_base)), min(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, _GLF_IDENTITY(clamp(GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base), uvec2(uvec2(_GLF_IDENTITY(clamp(GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base), min(clamp(GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base), clamp(GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base))))))), GLF_merged2_0_1_4_1_1_14readworkgroup_base)))), _GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, (uvec2(0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(1u)), (_GLF_IDENTITY(uvec2(1u), uvec2(1u))) ^ uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(1u)), max(_GLF_IDENTITY(uvec2(1u), uvec2(1u)), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, 0u + (1u))), uvec2(1u))))))) ^ (_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, min(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, clamp(GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base)), GLF_merged2_0_1_4_1_1_14readworkgroup_base)))))))))), _GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, (uvec2(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), (true ? ~ (~ (0u)) : _GLF_FUZZED(subgroup_local_id))))) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u))) ^ (_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, uvec2(uvec2(GLF_merged2_0_1_4_1_1_14readworkgroup_base)))), max(~ (_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, uvec2(uvec2(GLF_merged2_0_1_4_1_1_14readworkgroup_base)))), ~ (_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, _GLF_IDENTITY(uvec2(uvec2(GLF_merged2_0_1_4_1_1_14readworkgroup_base)), (_GLF_IDENTITY(uvec2(uvec2(GLF_merged2_0_1_4_1_1_14readworkgroup_base)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec2(uvec2(GLF_merged2_0_1_4_1_1_14readworkgroup_base)), (_GLF_IDENTITY(uvec2(uvec2(GLF_merged2_0_1_4_1_1_14readworkgroup_base)), (uvec2(uvec2(GLF_merged2_0_1_4_1_1_14readworkgroup_base))) | (uvec2(uvec2(GLF_merged2_0_1_4_1_1_14readworkgroup_base))))) | (uvec2(uvec2(GLF_merged2_0_1_4_1_1_14readworkgroup_base))))), (~ (_GLF_IDENTITY(uvec2(uvec2(GLF_merged2_0_1_4_1_1_14readworkgroup_base)), (_GLF_IDENTITY(uvec2(uvec2(GLF_merged2_0_1_4_1_1_14readworkgroup_base)), (uvec2(uvec2(GLF_merged2_0_1_4_1_1_14readworkgroup_base))) | (uvec2(uvec2(GLF_merged2_0_1_4_1_1_14readworkgroup_base))))) | (uvec2(uvec2(GLF_merged2_0_1_4_1_1_14readworkgroup_base)))))) >> uvec2(0u, 0u))))) << uvec2(0u, 0u)))))))), clamp(GLF_merged2_0_1_4_1_1_14readworkgroup_base, GLF_merged2_0_1_4_1_1_14readworkgroup_base, _GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base, (GLF_merged2_0_1_4_1_1_14readworkgroup_base) - uvec2(0u, 0u)))), GLF_merged2_0_1_4_1_1_14readworkgroup_base)))))).y + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) - 0u)) % subgroup_size, 0u, 1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY((uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(subgroup_local_id + 1, 1u, 0u, 0u)))) % subgroup_size, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) | 0u), 1u))), max(_GLF_IDENTITY((uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(subgroup_local_id + 1, 1u, 0u, 0u)))) % subgroup_size, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) | 0u), 1u))), uint(uvec3((uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(subgroup_local_id + 1, 1u, 0u, 0u)))) % subgroup_size, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) | 0u), 1u))), 1u, 1u))), (uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(subgroup_local_id + 1, 1u, 0u, 0u)))) % subgroup_size, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) | 0u), 1u))))), uint(_GLF_IDENTITY(uvec2((uint(uvec4((subgroup_local_id + 1) % subgroup_size, 0u, 1u, 1u))), 1u), ~ (~ (uvec2((uint(uvec4((subgroup_local_id + 1) % subgroup_size, 0u, 1u, 1u))), 1u)))))) | (_GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1) % subgroup_size, 0u, 1u, 1u)), (uint(uvec4((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size, 0u, 1u, 1u))) | (uint(uvec4((subgroup_local_id + 1) % subgroup_size, 0u, _GLF_IDENTITY(1u, (1u) << 0u), 1u)))))))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (true ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(subgroup_id)))) + 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), true))))) && true))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), (true ? next_virtual_gid : _GLF_FUZZED(subgroup_size)) | (true ? next_virtual_gid : _GLF_FUZZED(subgroup_size))))), next_virtual_gid)), (next_virtual_gid) / _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, true))) ? 1u : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u)) | (workgroup_base))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(163642u) : next_virtual_gid)), (next_virtual_gid) / 1u))) : _GLF_FUZZED((next_virtual_gid - uvec4(154164u, 47813u, 10811u, 163287u)).w)))], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(169500u))), float(injectionSwitch.y), bool(true))))))) || false)), (bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))) && true)), bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), ! (! (bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), ! (! (bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))) && true)), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), ! (! (bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))) && true))) || false))))), (bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))) && true)), true, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))))))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(169500u))), float(injectionSwitch.y), bool(true))))))) || false)), (bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))) && true)), bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), ! (! (bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), ! (! (bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))) && true)), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), ! (! (bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))) && true))) || false))))), (bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))) && true)), true, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))))))), false, true)))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (true ? vec2(injectionSwitch.x, 0.0) : _GLF_FUZZED(vec2(671.251, 19.40)))))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 0.0, 1.0))), injectionSwitch.x)))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), virtual_gid))], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_13_1_1_4_2_1_14num_workgroupreadworkgroup_size.y = read;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_4_1_1_14readworkgroup_base.x = GLF_merged3_0_1_13_1_1_4_2_1_14num_workgroupreadworkgroup_size.y;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-52.66)), vec2(_GLF_FUZZED(4.8), (injectionSwitch)[1]), bvec2(false, true)), mix(vec2(_GLF_FUZZED(4070.9674), _GLF_FUZZED((-467.171 / (-1.0 + 434.270)))), vec2((mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-52.66)), vec2(_GLF_FUZZED(4.8), (injectionSwitch)[1]), bvec2(false, true)))[0], (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-52.66)), vec2(_GLF_FUZZED(4.8), (injectionSwitch)[1]), bvec2(false, true)))[1]), bvec2(true, true))))) + vec2(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5480.1063)), vec2(_GLF_IDENTITY(_GLF_FUZZED(7.5), mix(float(_GLF_FUZZED(803.408)), float(_GLF_FUZZED(7.5)), _GLF_IDENTITY(bool(true), (bool(true)) && true))), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-0.0)), float((injectionSwitch)[0]), bool(true))), 1.0), mat2(1.0) * (vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-0.0)), float((injectionSwitch)[0]), bool(true))), 1.0))))), _GLF_FUZZED(-5480.1063)), vec2(_GLF_IDENTITY(_GLF_FUZZED(7.5), mix(float(_GLF_FUZZED(803.408)), float(_GLF_FUZZED(7.5)), _GLF_IDENTITY(bool(true), (bool(true)) && true))), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)) : _GLF_FUZZED(vec2(-5090.9292, 8658.3162)))).y, mix(float(_GLF_FUZZED(-3.0)), float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(5), int(5))) | (0)), (false ? _GLF_FUZZED(-85878) : 0))], _GLF_FUZZED(-5480.1063)), (_GLF_IDENTITY(vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0)))) * vec2(1.0, 1.0)))[0], _GLF_FUZZED(_GLF_IDENTITY(-5480.1063, (true ? -5480.1063 : _GLF_FUZZED(acos(717.943)))))), clamp(vec2(_GLF_IDENTITY((injectionSwitch), vec2(mat4x3(_GLF_IDENTITY((injectionSwitch), max((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.1), _GLF_FUZZED(9.4)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (injectionSwitch))), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, cos(0.0), tan(0.0))))[0], _GLF_FUZZED(-5480.1063)), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) ^ 0)], _GLF_FUZZED(-5480.1063)), vec2((injectionSwitch)[0], _GLF_FUZZED(-5480.1063))))) / vec2(1.0, 1.0)), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).y), bool(true)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))))
    return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     atomicStore(checker[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)], GLF_merged2_0_1_4_1_1_14readworkgroup_base.x, 4, 64, 4);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)), _GLF_IDENTITY(false, ! (! (false))) || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))))))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         break;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, abs(0.0)))))).x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           continue;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         break;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0)))) * (injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-8344.4950))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-8344.4950))), max(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-8344.4950))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-8344.4950))), max(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-8344.4950))), _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-8344.4950))))))), _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-8344.4950))), _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-8344.4950))))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0), vec3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0))), length(vec2(0.0, 0.0)), determinant(mat4(1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(exp(0.0), min(_GLF_IDENTITY(exp(0.0), float(mat2x3(exp(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 0.0)), 1.0))), 0.0))), exp(0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-33.52))))), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(fract(393.030)) : 1.0)), 1.0)), log(round(length(normalize(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))))), 0.0, 0.0, 0.0, 1.0)), float(mat2(float(mat4(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-8344.4950))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-8344.4950))), max(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-8344.4950))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-8344.4950))), max(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-8344.4950))), _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-8344.4950))))))), _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-8344.4950))), _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-8344.4950))))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0), vec3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0))), length(vec2(0.0, 0.0)), determinant(mat4(1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(exp(0.0), min(_GLF_IDENTITY(exp(0.0), float(mat2x3(exp(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 0.0)), 1.0))), 0.0))), exp(0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-33.52))))), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(fract(393.030)) : 1.0)), 1.0)), log(round(length(normalize(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))))), 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0)))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))))
                barrier();
               barrier();
              }
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) || false)))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, abs(0.0), 1.0, length(0.0))), (vec2(mat2x3(injectionSwitch, 0.0, abs(0.0), 1.0, length(0.0)))) + abs(vec2(0.0, 0.0))), clamp(vec2(mat2x3(injectionSwitch, 0.0, abs(0.0), 1.0, length(0.0))), vec2(mat2x3(injectionSwitch, 0.0, abs(0.0), 1.0, length(0.0))), _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, abs(0.0), 1.0, length(0.0))), (vec2(mat2x3(injectionSwitch, 0.0, abs(0.0), 1.0, length(_GLF_IDENTITY(0.0, max(0.0, 0.0)))))) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))))))))).x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, abs(0.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(length(0.0), 0.0 + (_GLF_IDENTITY(length(0.0), float(mat3x2(_GLF_IDENTITY(length(0.0), min(length(0.0), length(0.0))), 1.0, 1.0, 0.0, 1.0, 1.0))))), (true ? _GLF_IDENTITY(length(0.0), 0.0 + (_GLF_IDENTITY(length(0.0), float(mat3x2(_GLF_IDENTITY(length(0.0), min(length(0.0), length(0.0))), 1.0, 1.0, 0.0, 1.0, 1.0))))) : _GLF_FUZZED(690.697))))), clamp(vec2(mat2x3(injectionSwitch, 0.0, abs(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0, length(0.0))), vec2(mat2x3(injectionSwitch, 0.0, abs(0.0), 1.0, length(0.0))), _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, abs(0.0), 1.0, length(0.0))), (vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7989.4319)), float(0.0), bool(true))), abs(0.0), 1.0, length(0.0)))) * mat2(1.0))))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, abs(0.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), length(0.0))), clamp(vec2(mat2x3(injectionSwitch, 0.0, _GLF_IDENTITY(abs(0.0), (abs(0.0)) * 1.0), 1.0, length(0.0))), vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(0.0, 1.0 * (0.0)), abs(0.0), 1.0, length(0.0))), _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, abs(0.0), 1.0, _GLF_IDENTITY(length(0.0), (_GLF_IDENTITY(length(0.0), (true ? length(0.0) : _GLF_FUZZED(582.606)))) - _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)))))), (vec2(mat2x3(injectionSwitch, 0.0, abs(0.0), 1.0, length(0.0)))) * mat2(1.0))))).x > injectionSwitch.y))))))))
        barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(checker[virtual_gid], GLF_merged2_0_1_4_1_1_14readworkgroup_base.x, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false, true))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
