#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_16 {
 mat4x2 _f0;
 uint virtual_gid;
} ;

struct _GLF_struct_13 {
 bvec3 _f0;
} ;

struct _GLF_struct_12 {
 ivec2 _f0;
 vec3 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_14 {
 _GLF_struct_12 _f0;
 bool _f1;
 mat3 _f2;
 _GLF_struct_13 _f3;
 mat4 _f4;
 mat3x2 _f5;
 int _f6;
} ;

struct _GLF_struct_10 {
 mat4x3 _f0;
 mat3x2 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_11 {
 vec3 _f0;
 vec4 _f1;
 bvec2 _f2;
 uvec2 _f3;
 _GLF_struct_10 _f4;
 mat4x3 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_8 {
 mat3x4 _f0;
 int _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_7 {
 int _f0;
} ;

struct _GLF_struct_6 {
 mat4x3 _f0;
 vec2 _f1;
 mat2x4 _f2;
 bvec2 _f3;
 float _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_9 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
 mat3x4 _f2;
 _GLF_struct_8 _f3;
} ;

struct _GLF_struct_4 {
 vec4 _f0;
 ivec3 _f1;
 float _f2;
 uvec2 _f3;
 uint _f4;
 vec2 _f5;
} ;

struct _GLF_struct_3 {
 ivec2 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_2 {
 mat4x3 _f0;
} ;

struct _GLF_struct_5 {
 ivec2 _f0;
 _GLF_struct_2 _f1;
 mat2x3 _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_4 _f4;
} ;

struct _GLF_struct_0 {
 vec2 _f0;
 float _f1;
 ivec2 _f2;
 int _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_1 {
 float _f0;
 mat2x4 _f1;
 bvec4 _f2;
 _GLF_struct_0 _f3;
} ;

struct _GLF_struct_15 {
 _GLF_struct_1 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_9 _f2;
 uint workgroup_base;
 _GLF_struct_11 _f3;
 _GLF_struct_14 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (! (! (_GLF_DEAD(false))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (! (! (_GLF_DEAD(false))))), true, true), true))))), false, false, false))))), _GLF_IDENTITY(true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false)) || false)), true && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false)) || false)), true && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))), (true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false)) || false)), true && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))) || false), true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false)) || false)), true && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))), (true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false)) || false)), true && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false)) || false)), true && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))), (true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false)) || false)), true && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))) || false), true)))), true, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false)) || false)), true && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))), (true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false)) || false)), true && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false)) || false)), true && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))), (true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false)) || false)), true && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))) || false), true)))), true, true)), true, true)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, 1 * (0))))], injectionSwitch[1])).x, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(3632.1102))))), 1.0))), injectionSwitch[1])).x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(8.0)), bool(false))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-0.1, -8.3)))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))))[1])).y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), mix(float(_GLF_FUZZED(-22.37)), float(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), bool(true))) > injectionSwitch.y, true, false, true)), bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y, true, false, true))), bool(bvec3(bool(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y, true, false, true))), false, true))))))))), false, false, true)), (bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, (1.0) * exp(0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), sqrt(0.0), 0.0, 0.0, 1.0, 0.0), mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), sqrt(0.0), 0.0, 0.0, 1.0, 0.0))))).y), false, false, true))) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(7.9))), _GLF_FUZZED((-5162.6583 + -92.63))), vec2(_GLF_FUZZED(float(121457u)), (injectionSwitch)[1]), bvec2(false, true))).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(7.9))), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(7.9))), min(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(7.9))), _GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(7.9))))), _GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(7.9))))), _GLF_FUZZED((-5162.6583 + -92.63))), vec2(_GLF_FUZZED(float(121457u)), (injectionSwitch)[1]), bvec2(false, true))).y, false, false, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec3(bool(bvec2(false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)), false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true) || (((injectionSwitch.x > injectionSwitch.y)))) || false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.9)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true), _GLF_IDENTITY(true, bool(bvec3(true, true, false))) && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true))) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))), _GLF_IDENTITY(! (! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))), injectionSwitch)).x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))))), ! (! (! (! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))))))))))), ! (! (_GLF_IDENTITY(! (! (! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), false || (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))))), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))), injectionSwitch)).x > injectionSwitch.y)))))), ! (! (! (! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))))))))))))))) && true)))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec2(false, true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))))))), true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))), true, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) >> 0u) : _GLF_IDENTITY(0u, 0u ^ (0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat3(7.6, 6479.0763, 5.3, 85.17, -5.0, 18.77, -3.7, 39.54, 5.5)) : mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))) + 0.0) < injectionSwitch.y)), true)))) || false) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 1u)), (true ? uint(uvec4(subgroup_local_id, 1u, 1u, 1u)) : _GLF_FUZZED(subgroup_id))))), (_GLF_FUZZED(subgroup_local_id)) >> 0u), uint(uvec2(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) >> 0u), 0u))) : 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))) / (1u | (0u | 1u))), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) >> _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) - 0u)))) : 0u))) | (_GLF_IDENTITY(0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) >> 0u) : 0u))))) | 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false, ((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false) && true))))) && true))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) : _GLF_FUZZED(-2.9))) > injectionSwitch.y)))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) : _GLF_FUZZED(-2.9), (false ? _GLF_FUZZED(length(vec2(9.1, -84.99))) : _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) : _GLF_FUZZED(-2.9))))) > injectionSwitch.y))))))) || false))))
  barrier();
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_struct_1(1.0, mat2x4(1.0), bvec4(true), _GLF_struct_0(vec2(1.0), 1.0, ivec2(1), 1, bvec4(true))), _GLF_struct_5(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(9644)))) | 0)), (ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(9644)))) | 0))) - ivec2(0, 0)), _GLF_struct_2(mat4x3(1.0)), mat2x3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_struct_3(ivec2(1), mat3x2(1.0)), _GLF_struct_4(vec4(1.0), ivec3(1), 1.0, uvec2(1u), 1u, vec2(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-33.62)))))), _GLF_struct_9(_GLF_struct_6(mat4x3(1.0), vec2(1.0), mat2x4(1.0), bvec2(true), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY((uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) | (uvec3(1u)), (true ? (uvec3(0u, 0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | (0u)) : _GLF_FUZZED(subgroup_id)))) >> _GLF_IDENTITY(uvec3(0u), _GLF_IDENTITY(uvec3(0u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec3(0u)), (true ? _GLF_IDENTITY(~ (uvec3(0u)), uvec3(_GLF_IDENTITY(uvec3(~ (uvec3(0u))), (uvec3(~ (uvec3(0u)))) << uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(85942u, 66214u, 132778u)))), (~ (uvec3(0u))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))) | (_GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))), uvec3(uvec3(uvec3(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(clamp(uvec3(1u), uvec3(1u), uvec3(1u)), clamp(clamp(uvec3(1u), uvec3(1u), uvec3(1u)), clamp(uvec3(1u), uvec3(1u), uvec3(1u)), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))))))))))) : _GLF_FUZZED(uvec3(42474u, 88091u, 139932u))))), min(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY((uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) | (uvec3(1u)), (true ? (uvec3(0u, 0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | (0u)) : _GLF_FUZZED(subgroup_id)))) >> _GLF_IDENTITY(uvec3(0u), _GLF_IDENTITY(uvec3(0u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec3(0u)), (true ? _GLF_IDENTITY(~ (uvec3(0u)), uvec3(_GLF_IDENTITY(uvec3(~ (uvec3(0u))), (uvec3(~ (uvec3(0u)))) << uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(85942u, 66214u, 132778u)))), (~ (uvec3(0u))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))) | (_GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))), uvec3(uvec3(uvec3(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(clamp(uvec3(1u), uvec3(1u), uvec3(1u)), clamp(clamp(uvec3(1u), uvec3(1u), uvec3(1u)), clamp(uvec3(1u), uvec3(1u), uvec3(1u)), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))))))))))) : _GLF_FUZZED(uvec3(42474u, 88091u, 139932u))))), _GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY((uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) | (uvec3(1u)), (true ? (uvec3(0u, 0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | (0u)) : _GLF_FUZZED(subgroup_id)))) >> _GLF_IDENTITY(uvec3(0u), _GLF_IDENTITY(uvec3(0u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec3(0u)), (true ? _GLF_IDENTITY(~ (uvec3(0u)), uvec3(_GLF_IDENTITY(uvec3(~ (uvec3(0u))), (uvec3(~ (uvec3(0u)))) << uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(85942u, 66214u, 132778u)))), (~ (uvec3(0u))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))) | (_GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))), uvec3(uvec3(uvec3(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(clamp(uvec3(1u), uvec3(1u), uvec3(1u)), clamp(clamp(uvec3(1u), uvec3(1u), uvec3(1u)), clamp(uvec3(1u), uvec3(1u), uvec3(1u)), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))))))))))) : _GLF_FUZZED(uvec3(42474u, 88091u, 139932u))))))), min(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) | (uvec3(1u)), (true ? (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), _GLF_IDENTITY(uvec3(0u), ~ (_GLF_IDENTITY(~ (uvec3(0u)), (~ (uvec3(0u))) >> uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-8517.8464 * -2.8))), float(0.0), bool(true))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))) | (_GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))), uvec3(uvec3(uvec3(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(clamp(uvec3(1u), uvec3(1u), uvec3(1u)), (clamp(uvec3(1u), uvec3(1u), uvec3(1u))) | (clamp(uvec3(1u), uvec3(1u), uvec3(1u)))))))))))) : _GLF_FUZZED(uvec3(42474u, 88091u, 139932u)))), (uvec3(0u, 0u, 0u) & uvec3(192661u, 22930u, 23098u)) ^ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) | (uvec3(1u)), (true ? (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), _GLF_IDENTITY(uvec3(0u), ~ (_GLF_IDENTITY(~ (uvec3(0u)), (~ (uvec3(0u))) >> uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-8517.8464 * -2.8))), float(0.0), bool(true))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))) | (_GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))), uvec3(uvec3(uvec3(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(clamp(uvec3(1u), uvec3(1u), uvec3(1u)), (clamp(uvec3(1u), uvec3(1u), uvec3(1u))) | (clamp(uvec3(1u), uvec3(1u), uvec3(1u)))))))))))) : _GLF_FUZZED(uvec3(42474u, 88091u, 139932u)))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) | (uvec3(1u)), (true ? (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), _GLF_IDENTITY(uvec3(0u), ~ (_GLF_IDENTITY(~ (uvec3(0u)), (~ (uvec3(0u))) >> uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-8517.8464 * -2.8))), float(0.0), bool(true))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))) | (_GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))), uvec3(uvec3(uvec3(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(clamp(uvec3(1u), uvec3(1u), uvec3(1u)), (clamp(uvec3(1u), uvec3(1u), uvec3(1u))) | (clamp(uvec3(1u), uvec3(1u), uvec3(1u)))))))))))) : _GLF_FUZZED(uvec3(42474u, 88091u, 139932u))))))))), _GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY((uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) | (uvec3(1u)), (true ? (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), _GLF_IDENTITY(uvec3(0u), ~ (_GLF_IDENTITY(~ (uvec3(0u)), (~ (uvec3(0u))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))) | (_GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))), uvec3(uvec3(uvec3(_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))))))))) : _GLF_FUZZED(uvec3(42474u, 88091u, 139932u)))))))), _GLF_struct_7(1), mat3x4(1.0), _GLF_struct_8(mat3x4(1.0), 1, bvec3(true))), workgroup_size * workgroup_id, _GLF_struct_11(vec3(1.0), vec4(1.0), bvec2(true), uvec2(1u), _GLF_struct_10(mat4x3(1.0), mat3x2(1.0), bvec2(true)), mat4x3(1.0), mat3(1.0)), _GLF_struct_14(_GLF_struct_12(ivec2(1), _GLF_IDENTITY(vec3(1.0), clamp(vec3(1.0), vec3(1.0), vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-673.589)), float(1.0), bool(true)))))), mat2(1.0)), true, mat3(1.0), _GLF_struct_13(bvec3(true)), mat4(1.0), mat3x2(1.0), 1));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(mat4x2(1.0), _GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_base, min(_GLF_struct_replacement_15.workgroup_base, _GLF_struct_replacement_15.workgroup_base)) + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) - 0u))));
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_base, (_GLF_struct_replacement_15.workgroup_base) - 0u) + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (_GLF_IDENTITY(~ (((subgroup_local_id + 1) % subgroup_size)), (_GLF_IDENTITY(true, ! (! (true))) ? ~ (((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), 0u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), 0u), (uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), 0u)) ^ uvec2(0u, 0u))) << uvec2(0u, 0u)))) + 1) % subgroup_size)) : _GLF_FUZZED(workgroup_size)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec3(64, _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(1, 0, (0 << _GLF_IDENTITY(int(5), int(5))), 0), max(ivec4(1, 0, (0 << _GLF_IDENTITY(int(5), int(5))), 0), ivec4(1, 0, (0 << _GLF_IDENTITY(int(5), int(5))), 0)))), (int(_GLF_IDENTITY(ivec4(1, 0, (0 << _GLF_IDENTITY(int(5), int(5))), 0), max(ivec4(1, 0, (0 << _GLF_IDENTITY(int(5), int(5))), 0), ivec4(1, 0, (0 << _GLF_IDENTITY(int(5), int(5))), 0))))) / ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))), 0))), _GLF_IDENTITY((_GLF_IDENTITY(64, int(ivec3(64, 1, 0)))), ((_GLF_IDENTITY(64, int(ivec3(64, 1, 0))))) << 0) | (_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec3(64, 1, 0))), (_GLF_IDENTITY(64, int(ivec3(64, 1, 0)))) | 0))), 4);
 uint read = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_16.virtual_gid, (_GLF_IDENTITY(_GLF_struct_replacement_16.virtual_gid, clamp(_GLF_struct_replacement_16.virtual_gid, _GLF_struct_replacement_16.virtual_gid, _GLF_struct_replacement_16.virtual_gid))) | (_GLF_struct_replacement_16.virtual_gid)), (_GLF_struct_replacement_16.virtual_gid) / 1u)], _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u))), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u))), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u))), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u))), uint(0u))))), clamp((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) | _GLF_IDENTITY((uint(_GLF_IDENTITY(0u, 0u ^ (0u)))), clamp((uint(_GLF_IDENTITY(0u, 0u ^ (0u)))), (uint(_GLF_IDENTITY(0u, 0u ^ (0u)))), _GLF_IDENTITY((uint(_GLF_IDENTITY(0u, 0u ^ (0u)))), max((uint(_GLF_IDENTITY(0u, 0u ^ (0u)))), (uint(_GLF_IDENTITY(0u, 0u ^ (0u))))))))), _GLF_IDENTITY(uint(0u), min(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))), uint(0u))))), (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u)))), (~ (_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u)))), min(~ (_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u)))), ~ (_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u)))))))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u))), uint(0u))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) | _GLF_IDENTITY((uint(0u)), max((uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY((uint(0u)), clamp((uint(0u)), (uint(0u)), _GLF_IDENTITY((uint(0u)), max((uint(0u)), (uint(0u)))))), ~ (~ ((uint(0u)))))))), uint(0u))))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u))), uint(0u))), clamp((0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u))), uint(0u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u))), uint(0u))))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) | 0u), (uint(0u)) | (uint(0u))), uint(0u))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u))), uint(0u))))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u))), max(_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u))), _GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u))))), uint(0u))), clamp((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u))), uint(0u))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) | 0u), (uint(0u)) | (uint(0u))), uint(0u))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u))), uint(0u))))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | 0u) + 0u)) + (buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_16.virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_16.virtual_gid, clamp(_GLF_struct_replacement_16.virtual_gid, _GLF_struct_replacement_16.virtual_gid, _GLF_struct_replacement_16.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_16.virtual_gid, clamp(_GLF_struct_replacement_16.virtual_gid, _GLF_struct_replacement_16.virtual_gid, _GLF_struct_replacement_16.virtual_gid))) ^ _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u ^ (0u))))) + 0u) : _GLF_FUZZED(workgroup_id))))) | (_GLF_struct_replacement_16.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_16.virtual_gid, 0u | (_GLF_struct_replacement_16.virtual_gid))) / 1u)])), 4, 64, 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))))) * mat2(1.0))) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8.3))), 0.0)), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-5886.7189, (_GLF_IDENTITY(-5886.7189, mix(float(_GLF_FUZZED(4650.2571)), float(-5886.7189), bool(true)))) / 1.0)), _GLF_FUZZED(697.054)), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) << 0)], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)))))))), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(56.63, (56.63) - 0.0)), _GLF_FUZZED(-164.828)), vec2((_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)))))))[0], (_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)))))))[1]), bvec2(true, true)))))[1]), bvec2(true, true))))).y)), false || (((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(-4251.0546)), vec2(_GLF_FUZZED(2298.5232), (vec2(0.0, 0.0))[1]), bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8.3))), 0.0)), mix(vec2(_GLF_FUZZED(-5886.7189), _GLF_FUZZED(697.054)), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))), (true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) : _GLF_FUZZED(vec2(-10.41, 803.430))))[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY((vec2(0.0, 0.0)), clamp((vec2(0.0, 0.0)), (vec2(0.0, 0.0)), (vec2(0.0, 0.0)))) / vec2(1.0, 1.0), max(_GLF_IDENTITY((vec2(0.0, 0.0)), clamp((vec2(0.0, 0.0)), (vec2(0.0, 0.0)), (vec2(0.0, 0.0)))) / vec2(1.0, 1.0), _GLF_IDENTITY((vec2(0.0, 0.0)), clamp((vec2(0.0, 0.0)), (vec2(0.0, 0.0)), (vec2(0.0, 0.0)))) / vec2(1.0, 1.0)))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(1839.1223), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(vec4(54.06, -5793.2422, -7.5, 0.6).s)), bvec2(true, false))) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(mat4x3(vec2(0.0, 0.0), determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0)), exp(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, cos(0.0), 1.0, 1.0), (mat4x3(vec2(0.0, 0.0), determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), exp(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, cos(0.0), 1.0, 1.0)) - mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-16.17)), float(injectionSwitch.x), bool(true)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)))))), (_GLF_IDENTITY((injectionSwitch) - _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(vec3(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0))), vec2(0.0, 0.0), vec2(0.0, 0.0))), 1.0))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)))))), min((injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)))))), (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + _GLF_IDENTITY((_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0))), 0.0, 0.0)), 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 0.0)))) / vec2(1.0, 1.0))))), vec2(0.0, 0.0) + ((_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0))), 0.0, 0.0), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0))), 0.0, 0.0), (false ? _GLF_FUZZED(565.266) : clamp(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0))), 0.0, 0.0))), clamp(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0))), 0.0, 0.0)))), 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0))))))))))) * vec2(1.0, 1.0)), (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)))))), (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0))))))))))[1]), bvec2(true, true))))).y)))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))], _GLF_FUZZED(_GLF_IDENTITY(925.700, (_GLF_IDENTITY(925.700, (_GLF_IDENTITY(925.700, mix(float(_GLF_FUZZED(12.43)), float(925.700), bool(true)))) - 0.0)) / sqrt(1.0)))), vec2(vec2(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), (injectionSwitch), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- 646.599))), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, true)))) * sqrt(abs(vec2(1.0, 1.0)))))))[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(925.700))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(17.89), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(17.89), (false ? _GLF_FUZZED((+ 3.4)) : _GLF_FUZZED(17.89))), float(_GLF_IDENTITY(mat2x4(_GLF_FUZZED(17.89), 1.0, 0.0, abs(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0), mat2x4(mat3x4(mat2x4(0.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0)), 0.0, 0.0, 0.0))))))), 0.0, 1.0, 0.0, 0.0), mat2x4(mat4(mat2x4(_GLF_FUZZED(17.89), 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0)))))), _GLF_FUZZED(17.89))), (injectionSwitch)[1]), mat2(1.0) * (vec2(_GLF_IDENTITY(_GLF_FUZZED(17.89), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(17.89), (false ? _GLF_FUZZED((+ 3.4)) : _GLF_FUZZED(17.89))), float(_GLF_IDENTITY(mat2x4(_GLF_FUZZED(17.89), 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0), mat2x4(mat4(mat2x4(_GLF_IDENTITY(_GLF_FUZZED(17.89), clamp(_GLF_FUZZED(17.89), _GLF_IDENTITY(_GLF_FUZZED(17.89), (_GLF_FUZZED(17.89)) - 0.0), _GLF_FUZZED(17.89))), 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0)))))), _GLF_FUZZED(17.89))), (injectionSwitch)[1]))), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0))) > injectionSwitch.y)), _GLF_IDENTITY(true, true && (true))))).x > injectionSwitch.y)))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[_GLF_struct_replacement_16.virtual_gid], read, 4, 64, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), _GLF_IDENTITY(_GLF_IDENTITY((min(4, 4)), ((min(4, 4))) / 1) + 0, (_GLF_IDENTITY((min(4, 4)) + 0, clamp((min(4, 4)) + 0, (min(4, 4)) + 0, (min(4, 4)) + 0))) >> (0 ^ 0)))), 4, 4)));
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && true)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   atomicStore(checker[_GLF_IDENTITY(_GLF_struct_replacement_16.virtual_gid, uint(uvec2(_GLF_struct_replacement_16.virtual_gid, 0u)))], _GLF_IDENTITY(read, (read) | _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)), (false ? _GLF_FUZZED(subgroup_size) : uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x))))), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(59686))) << 0));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}
