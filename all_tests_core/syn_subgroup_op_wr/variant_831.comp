#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_11 {
 ivec3 _f0;
 mat2 _f1;
 mat2x3 _f2;
 mat3x4 _f3;
 bvec4 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_10 {
 uvec2 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_9 {
 ivec3 _f0;
 bvec3 _f1;
 mat3x2 _f2;
 uvec3 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_8 {
 uint _f0;
} ;

struct _GLF_struct_12 {
 uvec4 _f0;
 _GLF_struct_8 _f1;
 _GLF_struct_9 _f2;
 _GLF_struct_10 _f3;
 ivec3 _f4;
 _GLF_struct_11 _f5;
 float _f6;
} ;

struct _GLF_struct_6 {
 int _f0;
 vec3 _f1;
 ivec3 _f2;
 bvec2 _f3;
 vec3 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_7 {
 _GLF_struct_6 _f0;
} ;

struct _GLF_struct_4 {
 mat3x4 _f0;
 bool _f1;
} ;

struct _GLF_struct_3 {
 mat4 _f0;
 uint _f1;
 mat2x4 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_2 {
 vec4 _f0;
} ;

struct _GLF_struct_1 {
 vec3 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_0 {
 bool _f0;
 ivec3 _f1;
 bvec4 _f2;
 vec2 _f3;
 uvec3 _f4;
 int _f5;
 mat2 _f6;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 float _f3;
 _GLF_struct_3 _f4;
 _GLF_struct_4 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_13 {
 _GLF_struct_5 _f0;
 bool _f1;
 uvec3 _f2;
 _GLF_struct_7 _f3;
 uint workgroup_id;
 mat4x3 _f4;
 _GLF_struct_12 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uvec3 GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, exp(0.0), round(_GLF_IDENTITY(_GLF_IDENTITY(length(normalize(exp(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0), mix(vec3(_GLF_FUZZED(-8183.9573), _GLF_FUZZED(2.5), _GLF_FUZZED(-9.2)), vec3((vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0))[0], (vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0))[1], _GLF_IDENTITY((vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0)), ((vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0))) * mat3(1.0))[2]), bvec3(true, true, true)))))), min(length(normalize(exp(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0), mix(vec3(_GLF_FUZZED(-8183.9573), _GLF_FUZZED(2.5), _GLF_FUZZED(-9.2)), vec3(_GLF_IDENTITY((vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0))[0], max((vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0))[0], _GLF_IDENTITY((vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0))[0], (true ? (vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0))[0] : _GLF_FUZZED(-0.3))))), (vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0))[1], (vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0))[2]), bvec3(true, true, true)))))), length(normalize(exp(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0), mix(vec3(_GLF_FUZZED(-8183.9573), _GLF_FUZZED(2.5), _GLF_IDENTITY(_GLF_FUZZED(-9.2), mix(float(_GLF_FUZZED(9.2)), float(_GLF_IDENTITY(_GLF_FUZZED(-9.2), clamp(_GLF_FUZZED(-9.2), _GLF_FUZZED(-9.2), _GLF_FUZZED(-9.2)))), bool(true)))), vec3((vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0))[0], (vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0))[1], (vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0))[2]), bvec3(true, true, true)))))))), max(_GLF_IDENTITY(length(normalize(exp(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0), mix(vec3(_GLF_FUZZED(-8183.9573), _GLF_FUZZED(2.5), _GLF_FUZZED(-9.2)), vec3((vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0))[0], (vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0))[1], _GLF_IDENTITY((vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0)), ((vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0))) * mat3(1.0))[2]), bvec3(true, true, true)))))), min(length(normalize(exp(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0), mix(vec3(_GLF_FUZZED(-8183.9573), _GLF_FUZZED(2.5), _GLF_FUZZED(-9.2)), vec3(_GLF_IDENTITY((vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0))[0], max((vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0))[0], _GLF_IDENTITY((vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0))[0], (true ? (vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0))[0] : _GLF_FUZZED(-0.3))))), (vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0))[1], (vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0))[2]), bvec3(true, true, true)))))), length(normalize(exp(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0), mix(vec3(_GLF_FUZZED(-8183.9573), _GLF_FUZZED(2.5), _GLF_IDENTITY(_GLF_FUZZED(-9.2), mix(float(_GLF_FUZZED(9.2)), float(_GLF_IDENTITY(_GLF_FUZZED(-9.2), clamp(_GLF_FUZZED(-9.2), _GLF_FUZZED(-9.2), _GLF_FUZZED(-9.2)))), bool(true)))), vec3((vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0))[0], (vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0))[1], (vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0))[2]), bvec3(true, true, true)))))))), _GLF_IDENTITY(length(normalize(exp(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0), mix(vec3(_GLF_FUZZED(-8183.9573), _GLF_FUZZED(2.5), _GLF_FUZZED(-9.2)), vec3((vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0))[0], (vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0))[1], _GLF_IDENTITY((vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0)), ((vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0))) * mat3(1.0))[2]), bvec3(true, true, true)))))), min(length(normalize(exp(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0), mix(vec3(_GLF_FUZZED(-8183.9573), _GLF_FUZZED(2.5), _GLF_FUZZED(-9.2)), vec3(_GLF_IDENTITY((vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0))[0], max((vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0))[0], _GLF_IDENTITY((vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0))[0], (true ? (vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0))[0] : _GLF_FUZZED(-0.3))))), (vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0))[1], (vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0))[2]), bvec3(true, true, true)))))), length(normalize(exp(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0), mix(vec3(_GLF_FUZZED(-8183.9573), _GLF_FUZZED(2.5), _GLF_IDENTITY(_GLF_FUZZED(-9.2), mix(float(_GLF_FUZZED(9.2)), float(_GLF_IDENTITY(_GLF_FUZZED(-9.2), clamp(_GLF_FUZZED(-9.2), _GLF_FUZZED(-9.2), _GLF_FUZZED(-9.2)))), bool(true)))), vec3((vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0))[0], (vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0))[1], (vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0))[2]), bvec3(true, true, true))))))))))), _GLF_IDENTITY(dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-92.15)), float(sqrt(0.0)), bool(true))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.7) : _GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(0.0), 1.0, 0.0, 1.0, 1.0))))), (false ? _GLF_FUZZED(3.8) : 0.0))), vec3(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, 1u), (uvec4(gl_NumWorkGroups, 1u)) - uvec4(0u, 0u, 0u, 0u)))), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u))))))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, 1u), (uvec4(gl_NumWorkGroups, 1u)) - uvec4(0u, 0u, 0u, 0u)))), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))))), 0u), (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, 1u), (_GLF_IDENTITY(uvec4(gl_NumWorkGroups, 1u), (uvec4(1u, 1u, 1u, 1u) ^ uvec4(1u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | (1u)), 1u)))), 1u, 1u)) | (uvec4(gl_NumWorkGroups, 1u)))) - uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 0u))) ^ (0u | 0u)), 0u, 0u)))), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))))), 0u)) >> uvec4(0u, 0u, 0u, 0u)))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, 1u), (uvec4(gl_NumWorkGroups, 1u)) - uvec4(0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, 1u * (0u)), _GLF_IDENTITY(0u, min(0u, 0u)))), 0u, 0u)))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) >> uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_id[0]) : _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(uvec3(7193u, 138535u, 161089u).t))))) : _GLF_FUZZED(subgroup_id)))) ^ 0u), 0u, 0u))), (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) >> uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 1u)))), (~ (_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 1u))))) / 1u))), (true ? 0u : _GLF_FUZZED(subgroup_id)))) ^ 0u), 0u, 0u)))) << uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)))), uvec3(0u, 0u, 0u) | (uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), min(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), min(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))))))) / ((uvec3(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), 1u, 1u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u))))) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)))))))))) >> uvec3(0u, 0u, 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, 1u), (uvec4(gl_NumWorkGroups, 1u)) - uvec4(0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), (0u) - 0u), _GLF_IDENTITY(0u, 1u * (0u)), _GLF_IDENTITY(0u, min(0u, 0u)))), 0u, 0u)))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) >> uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))) ^ 0u), 0u, 0u))), (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED((subgroup_id - _GLF_IDENTITY(uvec3(141961u, 56326u, 9703u), max(uvec3(141961u, 56326u, 9703u), uvec3(141961u, 56326u, 9703u))))) : _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))))))) >> uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))) ^ 0u), 0u, 0u)))) << uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)), (uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)), 1u), clamp(uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)), 1u), uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | uvec3(0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))), 0u, 0u)), 0u)), 1u), uvec4(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) + 0u)), (uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)), 1u)))), clamp(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u), 0u), (uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)) | uvec3(0u, 0u, 0u)), 1u), clamp(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))), (uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)), 1u), uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)), 1u), uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)), 1u)))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)), 1u), clamp(uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)), 1u), uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)), 1u), uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)), 0u)) | uvec3(0u, 0u, 0u)), 1u)))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)), 1u), clamp(uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)), 1u), uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)), 1u), uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)), 1u)))))))))), uvec3(0u, 0u, 0u) | (uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))), ((_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)))) | ((_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))))) | (gl_NumWorkGroups)))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), min(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), min(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))))))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), min(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), min(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))))))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))), 1u), max(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), min(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), min(_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups[0], min(gl_NumWorkGroups[0], gl_NumWorkGroups[0])), gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))))))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), uvec3(6u)), (_GLF_IDENTITY(uvec3(6u), uvec3(6u))) >> uvec3(0u, 0u, 0u)))), 1u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), min(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), min(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))))))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))), 1u)))))) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u))))))))), ((_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)), (uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)), 1u), clamp(uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)), 1u), uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | uvec3(0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))), 0u, 0u)), 0u)), 1u), uvec4(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) + 0u)), (uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)), 1u)))), clamp(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u), 0u), (uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)) | uvec3(0u, 0u, 0u)), 1u), clamp(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))), (uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)), 1u), uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)), 1u), uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)), 1u)))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)), 1u), clamp(uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)), 1u), uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)), 1u), uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)), 0u)) | uvec3(0u, 0u, 0u)), 1u)))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)), 1u), clamp(uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)), 1u), uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)), 1u), uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)), 1u)))))))))), uvec3(0u, 0u, 0u) | (uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))), ((_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)))) | ((_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))))) | (gl_NumWorkGroups)))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), min(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), min(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))))))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), min(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), min(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))))))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))), 1u), max(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), min(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), min(_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups[0], min(gl_NumWorkGroups[0], gl_NumWorkGroups[0])), gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))))))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), uvec3(6u)), (_GLF_IDENTITY(uvec3(6u), uvec3(6u))) >> uvec3(0u, 0u, 0u)))), 1u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), min(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), min(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))))))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))), 1u)))))) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u)))))))))) | uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))))))))) / uvec3(1u, 1u, _GLF_IDENTITY(1u, max(1u, 1u)))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8.6))))))).x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y) || false))))), _GLF_IDENTITY(bool(bvec3(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y) || false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false || (bool(bvec3(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y) || false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), false || (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))))), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5452.6098), _GLF_FUZZED(214.133)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x) - 0.0) > injectionSwitch.y) || false))))), false || (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8.6))))))).x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8.6))))))).x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8.6))))))).x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))) || false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y) || false))))), _GLF_IDENTITY(bool(bvec3(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y) || false))))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), false)), false || (bool(bvec3(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y) || false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), false || (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch.x)))), (injectionSwitch.x) - 0.0) > injectionSwitch.y)))))), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5452.6098), _GLF_FUZZED(214.133)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x) - 0.0) > injectionSwitch.y) || false))))), false || (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))))))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_id.x = num_workgroup;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.x)), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0)), dot(vec2(0.0, 0.0), vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))), 1.0, 0.0, 0.0, abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))), injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(_GLF_struct_5(_GLF_struct_0(true, ivec3(1), bvec4(true), vec2(1.0), _GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) | (uvec3(1u))), 1, _GLF_IDENTITY(mat2(1.0), mat2(mat2x4(mat2(1.0))))), _GLF_struct_1(vec3(1.0), _GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u))))), _GLF_struct_2(vec4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), 1.0, _GLF_struct_3(mat4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-70.13)))) * 1.0)), _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (_GLF_IDENTITY(uint(3u), (uint(3u)) - (0u ^ 0u)))), uint(3u))), 1u))), mat2x4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - sqrt(0.0), (false ? _GLF_FUZZED(-30.36) : _GLF_IDENTITY((1.0) - sqrt(0.0), clamp((1.0) - sqrt(0.0), (1.0) - sqrt(0.0), (1.0) - sqrt(0.0))))))) + 0.0)), mat2x3(1.0)), _GLF_struct_4(mat3x4(1.0), true), vec3(1.0)), _GLF_IDENTITY(true, ! (! (true))), uvec3(1u), _GLF_struct_7(_GLF_struct_6(1, vec3(1.0), ivec3(1), bvec2(true), vec3(1.0), mat3x2(1.0))), gl_WorkGroupID.x, mat4x3(1.0), _GLF_struct_12(uvec4(1u), _GLF_struct_8(_GLF_IDENTITY(1u, ~ (~ (1u)))), _GLF_struct_9(ivec3(1), bvec3(true), mat3x2(1.0), uvec3(1u), ivec2(1)), _GLF_struct_10(_GLF_IDENTITY(uvec2(1u), min(uvec2(1u), _GLF_IDENTITY(uvec2(1u), min(uvec2(1u), uvec2(1u))))), bvec4(true)), ivec3(1), _GLF_struct_11(ivec3(1), mat2(1.0), mat2x3(1.0), mat3x4(1.0), bvec4(true), _GLF_IDENTITY(ivec2(1), clamp(ivec2(1), ivec2(1), ivec2(1)))), 1.0));
 GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_id.z = _GLF_struct_replacement_13.workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0) * (injectionSwitch))) / vec2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_id.z;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_id.y = workgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_id, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_id, (GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_id) * uvec3(1u, 1u, 1u))) / uvec3(1u, 1u, 1u)).y + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size))))) + subgroup_local_id, (true ? GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_id.y + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))) >> 0u) + subgroup_local_id : _GLF_FUZZED(workgroup_base)));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_id.y, (false ? _GLF_FUZZED(subgroup_local_id) : GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_id.y)) + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), subgroup_size)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), subgroup_size))), max(uint(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), subgroup_size))), uint(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), subgroup_size))))))) + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (1) * 1)) % subgroup_size), uint(uvec2(((subgroup_local_id + _GLF_IDENTITY(1, (1) * 1)) % subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], buf[virtual_gid]))))), buf[virtual_gid])), 4, 64, 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.5), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-755.314)), bvec2(true, false))).y))))
      barrier();
     barrier();
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
  }
}
