#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec4 GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec3 GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz = _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size, clamp(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size, max(GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size, GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size)), GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size, _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size, uvec3(GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size[0], _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size[1], (GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size[1]) | (GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size[1])), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size[1], (GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size[1]) | (GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size[1])), (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size[1], (GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size[1]) | (GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size[1]))) ^ 0u)) - 0u), GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size[2]))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x, injectionSwitch.x), clamp(clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED(2.6)), float(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x, injectionSwitch.x), float(mat3(clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ! (! ((_GLF_DEAD(false)) || false)))))
  barrier();
 _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size.z = subgroup_id, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size.z = subgroup_id) - 0u), 0u | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size.z = _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size.z = subgroup_id) - 0u)));
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz.x = GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size.z;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size.w = subgroup_size;
 GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz.z = GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size.w;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(73.86)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 _GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz.y = subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz.y = subgroup_local_id, ~ (~ (GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz.y = subgroup_local_id)))) / 1u, ((_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz.y = subgroup_local_id, ~ (~ (GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz.y = subgroup_local_id)))) / 1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false))), true, false))))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), false), true, false)))))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))))))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true)) && true))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), true, false))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))))))), true))))))))))), true))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! ((false))))), bool(bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! ((false))))), true && (! (! _GLF_IDENTITY((false), ! (! ((false))))))))))), true, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))), true))))))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))), true, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))), true, false), false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_IDENTITY(false, true && (false))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))))))), true)), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))))))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))))))), true)), false))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))))))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))))))), true)), false))))), false))))))))))))), true)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(-61346))), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec4(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(332.880)), float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.5)), bool(false)))))), bool(true))) > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)).x, gl_NumWorkGroups.x), min(_GLF_IDENTITY(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), ~ (~ (min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)))), min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)).x))), (_GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x))) / 1u), gl_NumWorkGroups.x), _GLF_IDENTITY(clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), _GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec2(gl_NumWorkGroups.x, 1u))), gl_NumWorkGroups.x), _GLF_IDENTITY(clamp(min(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), ~ (~ (clamp(min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u)), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), _GLF_IDENTITY(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), _GLF_IDENTITY(0u ^ (min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), _GLF_IDENTITY((_GLF_IDENTITY(0u ^ (min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), 0u | (0u ^ (min(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(2637u, 185102u, 145982u)) : gl_NumWorkGroups)), gl_NumWorkGroups)).x, gl_NumWorkGroups.x))))) << _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u))), min(_GLF_IDENTITY((_GLF_IDENTITY(0u ^ (min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), 0u | (0u ^ (min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))) << 0u, clamp((_GLF_IDENTITY(0u ^ (min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), 0u | (0u ^ (min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))) << 0u, (_GLF_IDENTITY(0u ^ (min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), 0u | (0u ^ (min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))) << 0u, (_GLF_IDENTITY(0u ^ (min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), 0u | (0u ^ (min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))) << 0u)), (_GLF_IDENTITY(0u ^ (min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), 0u | (0u ^ (min(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), gl_NumWorkGroups.x))))) << 0u)))))))))), min(_GLF_IDENTITY(clamp(min(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((1u ^ 1u), ((1u ^ 1u)) << 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x)))), gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), _GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) - 0u), _GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size) : _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 1u)))))))).x), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), (_GLF_IDENTITY(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), (min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)) >> 0u)) / 1u), (min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) + 0u))) / 1u), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))).x > injectionSwitch.y)) ? _GLF_FUZZED(packSnorm4x8(vec4(4.5, -0.2, -221.558, -7789.2431))) : _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | _GLF_IDENTITY((gl_NumWorkGroups.x), (false ? _GLF_FUZZED(subgroup_id) : (gl_NumWorkGroups.x)))))))), _GLF_IDENTITY((clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(packSnorm4x8(vec4(4.5, -0.2, -221.558, -7789.2431))) : _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x))))))), (_GLF_IDENTITY((clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(packSnorm4x8(vec4(4.5, -0.2, -221.558, -7789.2431))) : _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x))))))), clamp((clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(packSnorm4x8(vec4(4.5, -0.2, -221.558, -7789.2431))) : _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x))))))), (clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(packSnorm4x8(vec4(4.5, -0.2, -221.558, -7789.2431))) : _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x))))))), _GLF_IDENTITY((clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(packSnorm4x8(vec4(4.5, -0.2, -221.558, -7789.2431))) : _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x))))))), max((clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(packSnorm4x8(vec4(4.5, -0.2, -221.558, -7789.2431))) : _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x))))))), (clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(packSnorm4x8(vec4(4.5, -0.2, -221.558, -7789.2431))) : _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)))))))))))) << 0u) >> 0u)), max(~ (clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))), ~ (clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))))))), (clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), _GLF_IDENTITY(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), _GLF_IDENTITY(clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))).x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), ~ (~ (clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)))))))) | 0u), clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups[1], min(gl_NumWorkGroups[1], gl_NumWorkGroups[1])), gl_NumWorkGroups[2]))[1], _GLF_IDENTITY(gl_NumWorkGroups[2], (gl_NumWorkGroups[2]) | (gl_NumWorkGroups[2])))).x), _GLF_IDENTITY(_GLF_IDENTITY(min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u)), _GLF_IDENTITY(clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), ~ (~ (clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (0u | 0u)), gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)))))), 1u * (_GLF_IDENTITY(min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY(clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), _GLF_IDENTITY(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), (min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)) ^ 0u)), ~ (~ (clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x)), gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), _GLF_IDENTITY(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), (min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)) ^ 0u)), ~ (~ (clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x)), gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), clamp(_GLF_IDENTITY(clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), _GLF_IDENTITY(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), (min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)) ^ 0u)), ~ (~ (clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x)), gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), _GLF_IDENTITY(clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), _GLF_IDENTITY(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), (min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)) ^ 0u)), ~ (~ (clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x)), gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), _GLF_IDENTITY(clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), _GLF_IDENTITY(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), (min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)) ^ 0u)), ~ (~ (clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x)), gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)))))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), _GLF_IDENTITY(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), (min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)) ^ 0u)), ~ (~ (clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x)), gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), clamp(_GLF_IDENTITY(clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), _GLF_IDENTITY(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), (min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)) ^ 0u)), ~ (~ (clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x)), gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), _GLF_IDENTITY(clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), _GLF_IDENTITY(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), (min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)) ^ 0u)), ~ (~ (clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x)), gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), _GLF_IDENTITY(clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), _GLF_IDENTITY(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), (min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)) ^ 0u)), ~ (~ (clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x)), gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), _GLF_IDENTITY(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), (min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)) ^ 0u)), ~ (~ (clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x)), gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), clamp(_GLF_IDENTITY(clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), _GLF_IDENTITY(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), (min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)) ^ 0u)), ~ (~ (clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x)), gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), _GLF_IDENTITY(clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), _GLF_IDENTITY(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), (min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)) ^ 0u)), ~ (~ (clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x)), gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), _GLF_IDENTITY(clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), _GLF_IDENTITY(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), (min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)) ^ 0u)), ~ (~ (clamp(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), min(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x)), gl_NumWorkGroups.x), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)))))))))))))))))))) - 0u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.7)), float(injectionSwitch.y), bool(true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size.x = num_workgroup;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true))), false, false, true)))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.0)), vec2(_GLF_FUZZED(-57.52), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4.9, 52.85)) : injectionSwitch)))).y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.0)), vec2(_GLF_FUZZED(-57.52), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4.9, 52.85)) : injectionSwitch)))).y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, 1u * (workgroup_id));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz.x, (GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz.x) * 1u), min(_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base, (false ? _GLF_FUZZED(uvec4(95399u, 142489u, 8242u, 149036u)) : GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base)).xyz.x, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz.x, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base, uvec4(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base[0], GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base[1], GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base[2], GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base[3])).xyz.x, min(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz.x, _GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz, min(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz, GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz)).x)), GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz.x)), 0u | (GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz.x)))), max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz.x, (GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz.x) * 1u), min(_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base, (false ? _GLF_FUZZED(uvec4(95399u, 142489u, 8242u, 149036u)) : GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base)).xyz.x, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz.x, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base, uvec4(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base[0], GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base[1], GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base[2], GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base[3])).xyz.x, min(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz.x, _GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz, min(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz, GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz)).x)), GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz.x)), 0u | (GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz.x)))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz.x, (GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz.x) * 1u), min(_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base, (false ? _GLF_FUZZED(uvec4(95399u, 142489u, 8242u, 149036u)) : GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base)).xyz.x, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz.x, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base, uvec4(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base[0], GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base[1], GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base[2], GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base[3])).xyz.x, min(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz.x, _GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz, min(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz, GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz)).x)), GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz.x)), 0u | (GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz.x)))))) * _GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz.z, uint(uvec2(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz.z, 0u)));
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.w = subgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch))) : _GLF_FUZZED(mix(vec2(709.217, 0.1), injectionSwitch, injectionSwitch))))).x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bool(true && (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.w + GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz.y;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))) + GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.w + ((GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz.y + 1) % _GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base, (true ? GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size) - uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))), clamp(_GLF_FUZZED(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size) - uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size) - uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))), max(_GLF_FUZZED(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size) - uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))), _GLF_FUZZED(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size) - uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))))), _GLF_FUZZED(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size) - uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))))))).xyz.z), (true ? _GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))) + GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.w + (_GLF_IDENTITY((GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz.y + 1) % GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz.z, (true ? (_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base, (GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base) / uvec4(1u, 1u, 1u, 1u)).xyz.y + 1) % GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz.z : _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.t), (_GLF_FUZZED(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.t)) - 0u)))) : _GLF_FUZZED(192946u)));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(false, false, false))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false))))), false))))))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false))))))))))))))), true))))), true))))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(false, bool(bool(false))), false)), bvec3(bvec3(bvec3(bvec3(false, false, false)))))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(false, bool(bool(false))), false)), bvec3(bvec3(bvec3(bvec3(false, false, false))))))))))))))))), bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false)))))))))))))), false, true, false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read = 0;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size.y = read;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec4(64, 0, 0, 1), max(ivec4(64, 0, 0, 1), ivec4(64, 0, 0, 1)))))) ^ (_GLF_IDENTITY(23564, min(23564, 23564)) & 0)), _GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec4(64, 0, 0, 1), max(ivec4(64, 0, 0, 1), ivec4(64, 0, 0, 1)))))) ^ _GLF_IDENTITY((_GLF_IDENTITY(23564, min(23564, 23564)) & 0), clamp((_GLF_IDENTITY(23564, min(23564, 23564)) & 0), (_GLF_IDENTITY(23564, min(23564, 23564)) & 0), _GLF_IDENTITY((_GLF_IDENTITY(23564, min(23564, 23564)) & 0), min((_GLF_IDENTITY(23564, min(23564, 23564)) & 0), (_GLF_IDENTITY(23564, min(23564, 23564)) & 0))))))) - (62108 & 0), ((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec4(64, 0, 0, 1), max(ivec4(64, 0, 0, 1), ivec4(64, 0, 0, 1)))))) ^ _GLF_IDENTITY((_GLF_IDENTITY(23564, min(23564, 23564)) & 0), clamp((_GLF_IDENTITY(23564, min(23564, 23564)) & 0), (_GLF_IDENTITY(23564, min(23564, 23564)) & 0), _GLF_IDENTITY((_GLF_IDENTITY(23564, min(23564, 23564)) & 0), min((_GLF_IDENTITY(23564, min(23564, 23564)) & 0), (_GLF_IDENTITY(23564, min(23564, 23564)) & 0))))))) - (62108 & 0)) >> 0)), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (false))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if((GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizesubgroup_base.xyz.y % 2) == 0)
  {
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size.y = atomicLoad(buf[virtual_gid], 4, 64, 2);
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size.y = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(checker[virtual_gid], GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size.y, 4, 64, _GLF_IDENTITY(4, (4) | 0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
