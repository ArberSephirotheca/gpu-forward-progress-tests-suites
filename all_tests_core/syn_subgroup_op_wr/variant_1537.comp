#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) || false)), (bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) || false))) && true))), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) || false)), (bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) || false))) && true)))) || false)))))) || false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec2(false || (false), true)))))), false || ((! (_GLF_IDENTITY(false, false || (false)))))))))) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) || false)), ((! (_GLF_IDENTITY(false, (false) && true)))) && true)) || false), (! (! (_GLF_IDENTITY(false, (false) && true)))) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))) || false))))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * mat2(1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), vec2(_GLF_FUZZED(7.7), _GLF_FUZZED(-497.809)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), max(injectionSwitch, injectionSwitch)).y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false))), (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) && true))), ((false)) || false), _GLF_IDENTITY((! (false)) || false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))))) || (_GLF_IDENTITY((! (false)) || false, false || ((! _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || false), true)))) || false)))))) || false)) || false), true)), ! _GLF_IDENTITY((! (bool(bvec2(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), (! (false)) || false)) || false)) || false), true)))), ((! (bool(bvec2(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), (! (false)) || false)) || false)) || false), true))))) && true)), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ((false)) && true))))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))))))), (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ((false)) && true)))))))) || false), true, true))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))))))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)), true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY((_GLF_IDENTITY((! (false)), false || ((! (false))))), bool(bool((_GLF_IDENTITY((! (false)), false || ((! (false)))))))) && true))))), bool(bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))))))))) || false), true))))), true)))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(16.51)), float(injectionSwitch.x), bool(true))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(5134.5626)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-55.58)), bool(false))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, determinant(mat2(0.0, 0.0, 0.0, 0.0))), max(vec3(injectionSwitch, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec3(injectionSwitch, determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, determinant(mat2(0.0, 0.0, 0.0, 0.0))), max(vec3(injectionSwitch, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec3(injectionSwitch, determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), (vec2(_GLF_IDENTITY(vec3(injectionSwitch, determinant(mat2(0.0, 0.0, 0.0, 0.0))), max(vec3(injectionSwitch, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec3(injectionSwitch, determinant(mat2(0.0, 0.0, 0.0, 0.0))))))) - vec2(0.0, 0.0)), vec2(_GLF_IDENTITY(vec3(injectionSwitch, determinant(mat2(0.0, 0.0, 0.0, 0.0))), max(vec3(injectionSwitch, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec3(injectionSwitch, determinant(mat2(0.0, 0.0, 0.0, 0.0))))))))).x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(52.72), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(64.37)), bvec2(true, false))).y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x, (false ? _GLF_FUZZED(-490.470) : injectionSwitch.x)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(63.17))), length(vec4(0.0, 0.0, 0.0, 0.0))), mix(vec3((vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-490.470) : injectionSwitch.x)), _GLF_IDENTITY(0.0, (0.0) - 0.0), length(vec4(0.0, 0.0, 0.0, 0.0))))[0], _GLF_FUZZED(42.90), _GLF_IDENTITY(_GLF_FUZZED(9.1), _GLF_IDENTITY((_GLF_FUZZED(9.1)) / round(length(normalize(cos(vec2(0.0, 0.0))))), clamp((_GLF_FUZZED(9.1)) / round(length(normalize(cos(vec2(0.0, 0.0))))), _GLF_IDENTITY((_GLF_FUZZED(9.1)) / round(length(normalize(cos(vec2(0.0, 0.0))))), min((_GLF_FUZZED(9.1)) / round(length(normalize(cos(vec2(0.0, 0.0))))), (_GLF_FUZZED(9.1)) / round(length(normalize(cos(vec2(0.0, 0.0))))))), (_GLF_FUZZED(9.1)) / round(length(normalize(cos(vec2(0.0, 0.0))))))))), vec3(_GLF_FUZZED(1.3), (vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-490.470) : injectionSwitch.x)), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))))[1], (vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-490.470) : injectionSwitch.x)), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))))[2]), bvec3(false, true, true))))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) + vec2(0.0, 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))) && true)))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false), true)))))))))), false, true, false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false)))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))), _GLF_IDENTITY(false, false || (false)))))), false, true, false)))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false)))))), false, false))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false)))), false, true, false))))), true && (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false)))))), false, false))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false)))), false, true, false))))), bool(bvec2((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false)))))), false, false))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false)))), false, true, false))))), true))))))))), false, true, false)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false)))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)), true, true, true))), false)))), false, true, false)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false))), ! (! (_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false))), ! (! (_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false))))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false)))), false, true, false))))))))), _GLF_IDENTITY(false, bool(bvec3(false, false, true))), true, false))))), bool(_GLF_IDENTITY(bool((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false)))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)), true, true, true))), false)))), false, true, false)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false))), ! (! (_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false))), ! (! (_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false))))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false)))), false, true, false))))))))), _GLF_IDENTITY(false, bool(bvec3(false, false, true))), true, false)))))), bool(bvec3(bool((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false)))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)), true, true, true))), false)))), false, true, false)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false))), ! (! (_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false))), ! (! (_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false))))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false)))), false, true, false))))))))), _GLF_IDENTITY(false, bool(bvec3(false, false, true))), true, false)))))), true, true))))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false)))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), false || (bool(false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)), true, true, true))), false)))), false, true, false)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false))), ! (! (_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false))), ! (! (_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false))))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false)))), false, true, false))))))))), _GLF_IDENTITY(false, bool(bvec3(false, false, true))), true, false))))), bool(_GLF_IDENTITY(bool((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, true)), _GLF_IDENTITY(bool(bvec3(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec3(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), false)))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)), true, true, true))), false)))), false, true, false)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false))), ! (! (_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false))), ! (! (_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false)))))))), false || ((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false))), ! (! (_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false))))))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false)))), false, true, false))))))))), _GLF_IDENTITY(false, bool(bvec3(false, false, true))), true, false)))))), bool(bvec3(bool((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false))), false || (_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false)))))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)), true, true, true)), (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)), true, true, true)), bool(bool(bool(bvec4(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)), true, true, true)))))) && true)), false)))), false, true, false)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false))), ! (! (_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false))), ! (! (_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false))))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), false)))), false, true, false))))))))), _GLF_IDENTITY(false, bool(bvec3(false, false, true))), true, false)))))), true, _GLF_IDENTITY(true, true && (true))))))))) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y), true && ((injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, true)), true, true, false)), bool(bool(bool(bvec4(bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, true)), true, true, false))))))))))))), bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, true, true, true)))))))))), true && (bool(! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, true, true, true))))))))))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))) || false))), bool(bool(! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), true))), false)))), true && (bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), true))), false))))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))), true && (false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y)))))), bool(bool(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))))), true, true)))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))))), bool(bool(! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(cosh(vec2(-55.21, 7.9))))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))).x > injectionSwitch.y)))))))))) || false))))), false))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), max(float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), min(float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * round(length(normalize(1.0)))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * round(length(normalize(1.0)))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))))), (bool(! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * round(length(normalize(1.0)))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))))))) && true))))))), bool(bvec2(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))))), bool(bool(! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, sqrt(determinant(mat2(1.0, 0.0, 1.0, 1.0))), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(791.352), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.8)), bvec2(true, false)))) - vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-258.866)), bool(false))))).x > injectionSwitch.y)))))))))), false))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), max(float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), min(float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * round(length(normalize(1.0)))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * round(length(normalize(1.0)))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))))), (bool(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), mix(float(_GLF_FUZZED(-6.8)), float((injectionSwitch.y)), bool(true))) * round(length(normalize(1.0)))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), mix(float(_GLF_FUZZED(-6.8)), float((injectionSwitch.y)), bool(true))) * round(length(normalize(1.0)))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))))))))) && true))))))), bool(bvec2(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))))), bool(bool(! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, sqrt(determinant(mat2(1.0, 0.0, 1.0, 1.0))), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0))))), false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(791.352), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.8)), bvec2(true, false)))) - vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-258.866)), bool(false))))).x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(791.352), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.8)), bvec2(true, false)))) - vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-258.866)), bool(false))))).x > injectionSwitch.y))))))))))))), false)))))))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, true, false))))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, abs(1.0), 0.0, 0.0, 0.0)), mix(vec2(_GLF_FUZZED(-549.352), _GLF_FUZZED(2032.5634)), vec2((vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, abs(1.0), 0.0, 0.0, 0.0)))[0], (vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, abs(1.0), 0.0, 0.0, 0.0)))[1]), bvec2(true, true)))))).x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1) | (1), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1) | (1), (false ? _GLF_FUZZED(ivec4(41313, 72701, -67945, 253)[2]) : (1) | (1))), (_GLF_IDENTITY(_GLF_IDENTITY((1) | (1), (false ? _GLF_FUZZED(ivec4(41313, 72701, -67945, 253)[2]) : (1) | (1))), clamp(_GLF_IDENTITY((1) | (1), (false ? _GLF_FUZZED(ivec4(41313, 72701, -67945, 253)[2]) : (1) | (1))), _GLF_IDENTITY(_GLF_IDENTITY((1) | (1), (false ? _GLF_FUZZED(ivec4(41313, 72701, -67945, 253)[2]) : (1) | (1))), ~ (~ (_GLF_IDENTITY((1) | (1), (false ? _GLF_FUZZED(ivec4(41313, 72701, -67945, 253)[2]) : (1) | (1)))))), _GLF_IDENTITY((1) | (1), (false ? _GLF_FUZZED(ivec4(41313, 72701, -67945, 253)[2]) : (1) | (1)))))) | 0), (1) | (1), _GLF_IDENTITY((1), int(ivec4((1), 1, 1, 1))) | (1))), (false ? _GLF_FUZZED(_GLF_IDENTITY(64769, min(64769, 64769))) : _GLF_IDENTITY((1), min(_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), (_GLF_IDENTITY((1), min((1), (1)))) + 0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), (1))) | (1)))), 1, 1))), (uint(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | _GLF_IDENTITY(_GLF_IDENTITY((1), ~ (~ ((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(46212))))))), min((1), _GLF_IDENTITY((1), (_GLF_IDENTITY(true ? (1) : _GLF_FUZZED(-3607), 0 ^ (_GLF_IDENTITY(true ? (1) : _GLF_FUZZED(-3607), min(true ? (1) : _GLF_FUZZED(-3607), true ? (1) : _GLF_FUZZED(-3607))))))))), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(64769), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-21832) : _GLF_FUZZED(_GLF_IDENTITY(64769, (64769) | (64769))))) : (1) | (1), 0 | (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(64769), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-21832) : _GLF_FUZZED(_GLF_IDENTITY(64769, (64769) | (64769))))) : (1) | (1), int(ivec3(false ? _GLF_IDENTITY(_GLF_FUZZED(64769), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-21832) : _GLF_FUZZED(_GLF_IDENTITY(64769, (64769) | (64769))))) : (1) | (1), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1)))))))), 1, 1)))) | (0u & 12877u)), 4, 64, 4);
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) - 0), 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool((! (false))), (bool((! (false)))) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))) || false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)))))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(mat4x2(248.709, -5.4, 36.95, -28.46, -2632.5391, 12.08, -408.344, 4658.5704)[2]))).x > injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec2(virtual_gid, 1u), clamp(uvec2(virtual_gid, 1u), uvec2(virtual_gid, 1u), _GLF_IDENTITY(uvec2(virtual_gid, 1u), (_GLF_IDENTITY(uvec2(virtual_gid, 1u), uvec2(0u, 0u) + (uvec2(virtual_gid, 1u)))) | (uvec2(virtual_gid, 1u)))))))], _GLF_IDENTITY(read, ~ (~ (read))), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(81041)), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(min(-51.03, -7.6)) : (injectionSwitch)[1]))), vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(30361) : 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_GLF_IDENTITY(30361, (30361) | (30361))) : 0))), (~ (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(30361) : 0)))) * 1)))))], ((injectionSwitch)[0]) - 0.0), _GLF_FUZZED(4.5)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, false)))))[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))], (injectionSwitch[1]) / 1.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, true, _GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), false)))) || false)))))) || false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false)))), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false))))))) || false)))))) || false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, false, true))) || (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false)))) || false)))))) || false)), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(false)), false)), (bool(bvec2(! (_GLF_DEAD(false)), false))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(88.01), _GLF_FUZZED(-94.24)), bvec2(false, false))))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x < injectionSwitch.y))))) || false)))))) || false))))))), true && (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(false)), false), bvec2(bvec4(bvec2(! (_GLF_DEAD(false)), false), false, true)))))) || false)))))) || false)), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(false)), false)), (bool(bvec2(! (_GLF_DEAD(false)), _GLF_IDENTITY(false, (false) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))) || false)))))))))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false)))) || false)))))) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false)))) || false)))))) || false)), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(false)), false)), (bool(bvec2(! (_GLF_DEAD(false)), false))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false))))))))) || false)))))) || false)))))))))), ((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false)))) || false)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false)))) || false)))))) || false, ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false)))) || false)))))) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(false)), false)), false || (bool(bvec2(! (_GLF_DEAD(false)), false)))))) || false)))))) || false)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2(! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))), false)), (bool(bvec2(! (_GLF_DEAD(false)), false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))) || false))))))))))) || false))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0 * (0.0), _GLF_IDENTITY(float(mat4x2(1.0 * (0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), mix(float(float(mat4x2(1.0 * (0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), float(_GLF_FUZZED(2815.4535)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 0.0)), 0.0))).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5099.9019), _GLF_FUZZED(916.030)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(126.144), max(_GLF_FUZZED(126.144), _GLF_IDENTITY(_GLF_FUZZED(126.144), 0.0 + (_GLF_FUZZED(126.144))))), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-493.201)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), exp(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), float(mat3x2(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0, 0.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))).y))))) * cos(vec2(0.0, 0.0))).x > injectionSwitch.y)), false, false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), true && (bool(bvec4(false, false, false, true))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), mix(vec2(_GLF_FUZZED(-56.90), _GLF_FUZZED(5.9)), vec2(((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[0], ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1]), bvec2(true, true)))), max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4.5)), vec2(_GLF_FUZZED(183.562), (injectionSwitch)[1]), bvec2(false, true))))))).y))) && _GLF_IDENTITY(true, ! _GLF_IDENTITY(_GLF_IDENTITY((! (true)), ! (! ((! (true))))), ! (! (_GLF_IDENTITY((! (true)), ! (! ((! (true)))))))))) || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), false || ((false))), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), ! (! (bool(bool(! (false)))))))) || false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
}
