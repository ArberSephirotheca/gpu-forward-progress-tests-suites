#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_23 {
 float _f0;
 vec4 _f1;
 vec3 _f2;
 uvec2 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_24 {
 _GLF_struct_23 _f0;
} ;

struct _GLF_struct_21 {
 uint _f0;
 bvec4 _f1;
 mat4 _f2;
 mat4 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_22 {
 _GLF_struct_21 _f0;
 bool _f1;
} ;

struct _GLF_struct_25 {
 mat2x4 _f0;
 _GLF_struct_22 _f1;
 uint read;
 _GLF_struct_24 _f2;
} ;

struct _GLF_struct_18 {
 uvec3 _f0;
 mat2x4 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_17 {
 uvec4 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_16 {
 bool _f0;
 ivec2 _f1;
 mat3x2 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_19 {
 uvec3 _f0;
 _GLF_struct_16 _f1;
 mat4x2 _f2;
 _GLF_struct_17 _f3;
 _GLF_struct_18 _f4;
 float _f5;
} ;

struct _GLF_struct_20 {
 uint subgroup_local_id;
 _GLF_struct_19 _f0;
} ;

struct _GLF_struct_13 {
 int _f0;
 vec4 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_14 {
 uint workgroup_base;
 _GLF_struct_13 _f0;
} ;

struct _GLF_struct_11 {
 ivec2 _f0;
 mat3x2 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_12 {
 _GLF_struct_11 _f0;
} ;

struct _GLF_struct_15 {
 _GLF_struct_12 _f0;
 vec4 _f1;
 _GLF_struct_14 _f2;
} ;

struct _GLF_struct_8 {
 mat2x3 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_7 {
 float _f0;
 uint _f1;
} ;

struct _GLF_struct_6 {
 mat3x4 _f0;
 mat2x4 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_5 {
 vec2 _f0;
 uint _f1;
 uvec4 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_9 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_7 _f2;
 mat4x3 _f3;
 _GLF_struct_8 _f4;
} ;

struct _GLF_struct_3 {
 mat3x2 _f0;
 ivec2 _f1;
 mat2x4 _f2;
 float _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_2 {
 mat4x2 _f0;
 uint _f1;
 mat2x3 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_1 {
 mat2 _f0;
 vec4 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_0 {
 vec4 _f0;
 mat4x3 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 mat4x3 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_3 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_10 {
 _GLF_struct_4 _f0;
 ivec4 _f1;
 uint workgroup_id;
 _GLF_struct_9 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 _GLF_struct_20 _GLF_struct_replacement_20 = _GLF_struct_20(gl_SubgroupInvocationID, _GLF_struct_19(uvec3(1u), _GLF_struct_16(true, ivec2(1), mat3x2(1.0), bvec2(true)), mat4x2(1.0), _GLF_struct_17(uvec4(1u), mat3x4(1.0)), _GLF_struct_18(uvec3(1u), mat2x4(1.0), uvec2(1u)), 1.0));
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_struct_4(_GLF_struct_0(vec4(1.0), mat4x3(1.0), bvec3(true)), mat4x3(1.0), _GLF_struct_1(mat2(1.0), vec4(1.0), mat3x4(1.0)), _GLF_struct_2(mat4x2(1.0), 1u, mat2x3(1.0), mat4(1.0)), _GLF_struct_3(mat3x2(1.0), ivec2(1), mat2x4(1.0), 1.0, ivec3(1)), uvec2(1u)), ivec4(1), gl_WorkGroupID.x, _GLF_struct_9(_GLF_struct_5(vec2(1.0), 1u, uvec4(1u), ivec2(1)), _GLF_struct_6(mat3x4(1.0), mat2x4(1.0), ivec2(1)), _GLF_struct_7(1.0, 1u), mat4x3(1.0), _GLF_struct_8(mat2x3(1.0), mat2x4(1.0))));
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_struct_12(_GLF_struct_11(ivec2(1), mat3x2(1.0), ivec4(1))), vec4(1.0), _GLF_struct_14(workgroup_size * _GLF_struct_replacement_10.workgroup_id, _GLF_struct_13(1, vec4(1.0), uvec4(1u))));
 uint virtual_gid = _GLF_struct_replacement_15._f2.workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_20.subgroup_local_id;
 uint next_virtual_gid = _GLF_struct_replacement_15._f2.workgroup_base + subgroup_id * subgroup_size + ((_GLF_struct_replacement_20.subgroup_local_id + 1) % subgroup_size);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 else
  {
  }
 _GLF_struct_25 _GLF_struct_replacement_25 = _GLF_struct_25(mat2x4(1.0), _GLF_struct_22(_GLF_struct_21(1u, bvec4(true), mat4(1.0), mat4(1.0), ivec3(1)), true), atomicLoad(buf[virtual_gid], 4, 64, 0), _GLF_struct_24(_GLF_struct_23(1.0, vec4(1.0), vec3(1.0), uvec2(1u), bvec4(true))));
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_struct_replacement_20.subgroup_local_id + 1 < subgroup_size)
        {
         for(int _injected_loop_counter = ((0 | 0) << _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           atomicStore(checker[virtual_gid], _GLF_struct_replacement_25.read, 4, 64, 4);
          }
         subgroupAll(false);
        }
       else
        {
         atomicStore(checker[virtual_gid], _GLF_struct_replacement_25.read, 4, 64, 4);
         subgroupAll(true);
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
}
