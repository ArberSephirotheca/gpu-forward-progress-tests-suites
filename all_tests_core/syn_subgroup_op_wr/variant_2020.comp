#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(max((injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(39.76)), bool(false)))), clamp(max((injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(39.76)), bool(false)))), max((injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(39.76)), bool(false)))), _GLF_IDENTITY(max((injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(39.76)), bool(false)))), float(_GLF_IDENTITY(mat4x3(max((injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(39.76)), bool(false)))), 0.0, exp(0.0), cos(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0), mat4x3(mat4x3(mat4x3(max((injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(39.76)), bool(false)))), 0.0, exp(0.0), cos(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0)))))))), _GLF_IDENTITY(float(mat2x3(max((injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(39.76)), bool(false)))), 1.0, 1.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(8.4) : float(mat2x3(max((injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(39.76)), bool(false))), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(39.76)), bool(false))), 1.0, 1.0, 0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(3.0)), float(_GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(39.76)), bool(false))), 1.0, 1.0, 0.0, 1.0, 0.0)), 1.0 * (float(mat3x2(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(39.76)), bool(false))), 1.0, 1.0, 0.0, 1.0, 0.0))))), bool(true))))), 1.0, 1.0, 0.0, 0.0, 1.0)))))) + 0.0)))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY(-47568 & 0, int(ivec4(-47568 & 0, 0, 0, 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), _GLF_IDENTITY((~ (gl_WorkGroupID)), max((~ (_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(uvec2(77240u, 145026u), workgroup_size)))))), _GLF_IDENTITY((~ (gl_WorkGroupID)), (false ? _GLF_FUZZED(uvec3(94199u, 82958u, 78014u)) : _GLF_IDENTITY((~ (gl_WorkGroupID)), ((~ (gl_WorkGroupID))) / uvec3(1u, 1u, 1u)))))) | uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID), max(~ (gl_WorkGroupID), _GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | (~ (gl_WorkGroupID))))), (~ (gl_WorkGroupID)) | uvec3(0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 0u | (0u)))), 0u))), (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ _GLF_IDENTITY((gl_WorkGroupID), clamp((_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(180270u, 67841u, 1952u)) : _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID)))) | (gl_WorkGroupID))))), (gl_WorkGroupID), (gl_WorkGroupID)))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), 0u))))))), ~ (~ (uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) >> uvec3(0u, 0u, 0u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) | 0u), 0u))), clamp((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), _GLF_IDENTITY((~ (gl_WorkGroupID)), uvec3(uvec3((~ (gl_WorkGroupID))))) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) >> uvec3(0u, 0u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (gl_WorkGroupID), ~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u))) | 0u)))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), _GLF_IDENTITY((~ (gl_WorkGroupID)), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY(uvec3(7u), uvec3(0u, 0u, 0u) ^ (uvec3(7u))))) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u))) * ((~ (gl_WorkGroupID)))) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) >> uvec3(0u, 0u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | (~ (gl_WorkGroupID))), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) >> uvec3(0u, 0u, 0u)))))))), uvec3(uvec4(uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) >> uvec3(0u, 0u, 0u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) | 0u), 0u))), clamp((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), _GLF_IDENTITY((~ (gl_WorkGroupID)), uvec3(uvec3((~ (gl_WorkGroupID))))) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) >> uvec3(0u, 0u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (gl_WorkGroupID), ~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u))) | 0u)))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), _GLF_IDENTITY((~ (gl_WorkGroupID)), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY(uvec3(7u), uvec3(0u, 0u, 0u) ^ (uvec3(7u))))) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u))) * ((~ (gl_WorkGroupID)))) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) >> uvec3(0u, 0u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | (~ (gl_WorkGroupID))), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) >> uvec3(0u, 0u, 0u)))))))), (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))), ~ (~ (uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), (gl_WorkGroupID))))), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))))))))), 1u), ~ (~ (uvec4(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) >> uvec3(0u, 0u, 0u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) | 0u), 0u))), clamp((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), _GLF_IDENTITY((~ (gl_WorkGroupID)), uvec3(uvec3((~ (gl_WorkGroupID))))) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) >> uvec3(0u, 0u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (gl_WorkGroupID), ~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u))) | 0u)))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), _GLF_IDENTITY((~ (gl_WorkGroupID)), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY(uvec3(7u), uvec3(0u, 0u, 0u) ^ (uvec3(7u))))) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u))) * ((~ (gl_WorkGroupID)))) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) >> uvec3(0u, 0u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | (~ (gl_WorkGroupID))), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) >> uvec3(0u, 0u, 0u)))))))), uvec3(uvec4(uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) >> uvec3(0u, 0u, 0u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) | 0u), 0u))), clamp((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), _GLF_IDENTITY((~ (gl_WorkGroupID)), uvec3(uvec3((~ (gl_WorkGroupID))))) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) >> uvec3(0u, 0u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (gl_WorkGroupID), ~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u))) | 0u)))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), _GLF_IDENTITY((~ (gl_WorkGroupID)), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY(uvec3(7u), uvec3(0u, 0u, 0u) ^ (uvec3(7u))))) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u))) * ((~ (gl_WorkGroupID)))) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) >> uvec3(0u, 0u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | (~ (gl_WorkGroupID))), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) >> uvec3(0u, 0u, 0u)))))))), (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))), ~ (~ (uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), (gl_WorkGroupID))))), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))))))))), 1u))))), max(uvec3(uvec4(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ _GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) - uvec3(0u, 0u, 0u))))) | uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID))), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))))), uvec3(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID))), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))))), (uvec3((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID))), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))))))) << uvec3(0u, 0u, 0u)))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) | uvec3(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), _GLF_IDENTITY((~ (gl_WorkGroupID)), clamp((~ (gl_WorkGroupID)), (~ (gl_WorkGroupID)), _GLF_IDENTITY((~ (gl_WorkGroupID)), ((~ (gl_WorkGroupID))) / uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY(((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))) >> uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))) >> uvec3(0u, 0u, 0u), max(((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))) >> uvec3(0u, 0u, 0u), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))) >> uvec3(0u, 0u, 0u)))))))))), max(uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))), 0u, 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), uvec3(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, 0u))))), 0u))))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) | uvec3(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))) >> uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)), clamp((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, _GLF_IDENTITY(0u, (0u) - 0u), 0u)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))))), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) | uvec3(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))) >> uvec3(0u, 0u, 0u)))))), max(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) | uvec3(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))) >> uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(uvec3(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) | uvec3(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))) >> uvec3(0u, 0u, 0u)))))), (uvec3(uvec3(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) | uvec3(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))) >> uvec3(0u, 0u, 0u))))))) | uvec3(0u, 0u, 0u))))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) | uvec3(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))) >> uvec3(0u, 0u, 0u))))))) | uvec3(0u, 0u, 0u), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) | uvec3(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))) >> uvec3(0u, 0u, 0u))))))) | uvec3(0u, 0u, 0u), (true ? (uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) | uvec3(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))) >> uvec3(0u, 0u, 0u))))))) | uvec3(0u, 0u, 0u) : _GLF_FUZZED(uvec3(130714u, 22902u, 139185u))))) | uvec3(0u, 0u, 0u))), uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(~ (gl_WorkGroupID), _GLF_IDENTITY((~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u), uvec3(uvec3((~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u))))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) | uvec3(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) & (~ uvec3(164834u, 182077u, 153674u)))), (~ _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))) >> uvec3(0u, 0u, 0u)))))))))), ~ (~ (uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))))))))), _GLF_IDENTITY(1u, (1u) ^ 0u))), uvec3(uvec4(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (_GLF_IDENTITY(~ (gl_WorkGroupID), (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY((gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(81138u, 25398u, 184337u)) : (gl_WorkGroupID)))) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec4(~ (gl_WorkGroupID), 1u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec4(~ (gl_WorkGroupID), 1u)))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec4(~ (gl_WorkGroupID), 1u))))) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec4(~ (gl_WorkGroupID), 1u)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec4(~ (gl_WorkGroupID), 1u)))), clamp((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec4(~ (gl_WorkGroupID), 1u)))), (_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec4(~ (gl_WorkGroupID), 1u)))), (_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec4(~ (gl_WorkGroupID), 1u)))))))) | uvec3(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u))) + uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ _GLF_IDENTITY((gl_WorkGroupID), uvec3(uvec3(_GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), (gl_WorkGroupID))))))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) / 1u)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))) | 0u), 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u)))))) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u))))))), ~ (~ (uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | uvec3(0u, 0u, 0u))))))))), _GLF_IDENTITY(1u, max(1u, 1u)))))), uvec3(uvec3(uvec3(uvec4(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), (true ? (gl_WorkGroupID) : _GLF_FUZZED(uvec3(79699u, 29163u, 57197u)))), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))) * (_GLF_IDENTITY((gl_WorkGroupID), _GLF_IDENTITY(max((gl_WorkGroupID), _GLF_IDENTITY((gl_WorkGroupID), min((gl_WorkGroupID), (gl_WorkGroupID)))), (_GLF_IDENTITY(max((gl_WorkGroupID), _GLF_IDENTITY((gl_WorkGroupID), min((gl_WorkGroupID), (gl_WorkGroupID)))), (true ? max((gl_WorkGroupID), _GLF_IDENTITY((gl_WorkGroupID), min((gl_WorkGroupID), (gl_WorkGroupID)))) : _GLF_FUZZED(uvec3(142787u, 36730u, 65770u))))) << (uvec3(0u, 0u, 0u) & uvec3(42759u, 190343u, 141460u))))))) | uvec3(0u, 0u, 0u))))), ~ (~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(155994u, 38196u, 37676u)) : _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u))) | (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u)))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(0u, 0u, 0u) + (~ _GLF_IDENTITY((gl_WorkGroupID), clamp(_GLF_IDENTITY((gl_WorkGroupID), (true ? _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), (gl_WorkGroupID))) : _GLF_FUZZED(uvec3(40590u, 86424u, 169745u)))), (gl_WorkGroupID), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | uvec3(0u, 0u, 0u)), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | (_GLF_IDENTITY(~ (gl_WorkGroupID), (true ? ~ (gl_WorkGroupID) : _GLF_FUZZED(uvec3(98891u, 60202u, 14856u))))))))) ^ uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)))) / uvec3(1u, 1u, 1u)) | uvec3(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 1u), min(uvec2(0u, 1u), uvec2(0u, 1u))))), 0u, 0u))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(0u, 0u, 0u) + (~ _GLF_IDENTITY((gl_WorkGroupID), clamp(_GLF_IDENTITY((gl_WorkGroupID), (true ? _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), (gl_WorkGroupID))) : _GLF_FUZZED(uvec3(40590u, 86424u, 169745u)))), (gl_WorkGroupID), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | uvec3(0u, 0u, 0u)), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | (_GLF_IDENTITY(~ (gl_WorkGroupID), (true ? ~ (gl_WorkGroupID) : _GLF_FUZZED(uvec3(98891u, 60202u, 14856u))))))))) ^ uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)))) / uvec3(1u, 1u, 1u)) | uvec3(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 1u), min(uvec2(0u, 1u), uvec2(0u, 1u))))), 0u, 0u)))))))))))), 1u))))))).x;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-731.235, -7542.8457)))), injectionSwitch)).x > injectionSwitch.y))))
      barrier();
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter != 0, bool(_GLF_IDENTITY(bvec2(_injected_loop_counter != 0, true), bvec2(bvec2(bvec2(_injected_loop_counter != 0, true)))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(4), int(4))) ^ (0)), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter != 0, true), bvec2(bvec2(bvec2(_injected_loop_counter != 0, true)))))), true, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.1)), float(injectionSwitch.y), bool(true))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))) && true, _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))) && true, false, true, true)), true && (bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true, false, true, true))))))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch)).x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec3(8.6, 4359.5975, 66.36).t)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-65.40)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false))))))))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5345.7226), _GLF_FUZZED(-1499.5914)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec3(8.6, 4359.5975, 66.36).t)), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / determinant(mat4(1.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), bool(true))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false))))))))) && true), true, _GLF_TRUE(_GLF_IDENTITY(true, bool(bool(true))), (injectionSwitch.x < injectionSwitch.y))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec3(8.6, 4359.5975, 66.36), (vec3(8.6, 4359.5975, 66.36)) - vec3(0.0, 0.0, 0.0)).t)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false)))))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false)))))), true))) && true))))))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), true)))))), true, _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false)))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
      }
     barrier();
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, (0u ^ 0u) | (subgroup_id * subgroup_size));
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), ~ (~ (uvec3(subgroup_local_id, 1u, 1u))))), _GLF_IDENTITY(uint(uvec3(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), ~ (~ (uvec3(subgroup_local_id, 1u, 1u))))), 0u, (1u & 1u))), (uint(uvec3(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), ~ (~ (uvec3(subgroup_local_id, 1u, 1u))))), 0u, (1u & 1u)))) | (uint(uvec3(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), ~ (~ (uvec3(subgroup_local_id, 1u, 1u))))), 0u, (1u & 1u)))))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), ~ (~ (uvec3(subgroup_local_id, 1u, 1u)))), uvec3(uvec3(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), ~ (~ (uvec3(subgroup_local_id, 1u, 1u)))))))), _GLF_IDENTITY(uint(uvec3(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), (uvec3(subgroup_local_id, 1u, 1u)) + uvec3(0u, 0u, 0u)))))), 0u, (1u & _GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (uint(uvec3(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), ~ (~ (uvec3(subgroup_local_id, 1u, 1u))))), 0u, (1u & 1u)))) | (uint(uvec3(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), ~ (~ (uvec3(subgroup_local_id, 1u, 1u))))), 0u, (1u & 1u)))))))))), min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), ~ (~ (uvec3(subgroup_local_id, 1u, 1u))))), _GLF_IDENTITY(uint(uvec3(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), ~ (~ (uvec3(subgroup_local_id, 1u, 1u))))), 0u, (1u & 1u))), (uint(uvec3(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), ~ (~ (uvec3(subgroup_local_id, 1u, 1u))))), 0u, (1u & 1u)))) | (uint(uvec3(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), ~ (~ (uvec3(subgroup_local_id, 1u, 1u))))), 0u, (1u & 1u)))))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), ~ (~ (uvec3(subgroup_local_id, 1u, 1u)))), uvec3(uvec3(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), ~ (~ (uvec3(subgroup_local_id, 1u, 1u)))))))), _GLF_IDENTITY(uint(uvec3(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), (uvec3(subgroup_local_id, 1u, 1u)) + uvec3(0u, 0u, 0u)))))), 0u, (1u & _GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (uint(uvec3(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), ~ (~ (uvec3(subgroup_local_id, 1u, 1u))))), 0u, (1u & 1u)))) | (uint(uvec3(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), ~ (~ (uvec3(subgroup_local_id, 1u, 1u))))), 0u, (1u & 1u)))))))))), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), ~ (~ (uvec3(subgroup_local_id, 1u, 1u))))), _GLF_IDENTITY(uint(uvec3(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), ~ (~ (uvec3(subgroup_local_id, 1u, 1u))))), 0u, (1u & 1u))), (uint(uvec3(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), ~ (~ (uvec3(subgroup_local_id, 1u, 1u))))), 0u, (1u & 1u)))) | (uint(uvec3(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), ~ (~ (uvec3(subgroup_local_id, 1u, 1u))))), 0u, (1u & 1u)))))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), ~ (~ (uvec3(subgroup_local_id, 1u, 1u)))), uvec3(uvec3(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), ~ (~ (uvec3(subgroup_local_id, 1u, 1u)))))))), _GLF_IDENTITY(uint(uvec3(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), (uvec3(subgroup_local_id, 1u, 1u)) + uvec3(0u, 0u, 0u)))))), 0u, (1u & _GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (uint(uvec3(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), ~ (~ (uvec3(subgroup_local_id, 1u, 1u))))), 0u, (1u & 1u)))) | (uint(uvec3(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 1u), ~ (~ (uvec3(subgroup_local_id, 1u, 1u))))), 0u, (1u & 1u))))))))))));
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint read = 0;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), (4) | 0), 64, 4);
 for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, false)), (bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, false))) && true)))))) ? 0.0 : _GLF_FUZZED(5.1))), injectionSwitch.x)), (int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, false)), (bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, false))) && true)))))) ? 0.0 : _GLF_FUZZED(5.1))), injectionSwitch.x))) | (_GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, false)), (bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, false))) && true)))))) ? 0.0 : _GLF_FUZZED(5.1))), injectionSwitch.x)), max(int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, false)), (bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, false))) && true)))))) ? 0.0 : _GLF_FUZZED(5.1))), injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, false)), (bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, false))) && true)))))) ? 0.0 : _GLF_FUZZED(5.1))), injectionSwitch.x)), clamp(int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, false)), (bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, false))) && true)))))) ? 0.0 : _GLF_FUZZED(5.1))), injectionSwitch.x)), int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, false)), (bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, false))) && true)))))) ? 0.0 : _GLF_FUZZED(5.1))), injectionSwitch.x)), int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, false)), (bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, false))) && true)))))) ? 0.0 : _GLF_FUZZED(5.1))), injectionSwitch.x)))))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY((1 ^ 0) << _GLF_IDENTITY(int(7), int(7)), (true ? _GLF_IDENTITY((1 ^ 0) << _GLF_IDENTITY(int(7), int(7)), max((1 ^ 0) << _GLF_IDENTITY(int(7), int(7)), (1 ^ 0) << _GLF_IDENTITY(int(7), int(7)))) : _GLF_FUZZED(_injected_loop_counter)))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), max(int(7), int(7)))) + 0)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(((1 ^ 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (0 | 1) * (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) << 0)))), min(((1 ^ 0) << _GLF_IDENTITY(int(7), int(7))), ((1 ^ 0) << _GLF_IDENTITY(int(7), int(7))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), max(_GLF_IDENTITY(int(7), _GLF_IDENTITY(clamp(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))), int(7)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))), int(7)), max(clamp(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))), int(7)), clamp(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))), int(7))))), (~ (_GLF_IDENTITY(clamp(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))), int(7)), max(clamp(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))), int(7)), clamp(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))), int(7)))))) | (~ (_GLF_IDENTITY(clamp(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))), int(7)), max(clamp(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))), int(7)), clamp(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))), int(7)))))))))), int(7)))) + _GLF_IDENTITY(0, (0) << 0)))))))); _injected_loop_counter ++)
  {
   if((subgroup_local_id % 2) == 0)
    {
     subgroupAll(false);
     read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) + 0), 64, 2);
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     subgroupAll(false);
     read = atomicLoad(buf[virtual_gid], 4, 64, 2);
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       do
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     do
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), false || (_GLF_IDENTITY((false), ! (! ((false)))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))))).y)))))) && true)))), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, false || (false)))))), false || (_GLF_IDENTITY((false), ! (! ((false)))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(! (! ((injectionSwitch.x > injectionSwitch.y))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(! (! ((injectionSwitch.x > injectionSwitch.y))), false))), bool(bvec3(! (bool(bvec2(! (! ((injectionSwitch.x > injectionSwitch.y))), false))), true, false)))))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))))).y)))))) && true))))) && true)) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), (bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))) || false))))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (1 ^ _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) / (1 & 1))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(ivec3(0 >> _GLF_IDENTITY(int(3), int(3)), 0, 1)), 0 ^ (_GLF_IDENTITY(int(ivec3(0 >> _GLF_IDENTITY(int(3), int(3)), 0, 1)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(0 >> _GLF_IDENTITY(int(3), int(3)), 0, 1))))))))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), max((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(int(_GLF_IDENTITY(int(3), int(3)))))), (_GLF_IDENTITY(0, (0) - 0) >> _GLF_IDENTITY(int(3), int(3)))))))); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY(((1 | 0) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, _GLF_IDENTITY(int(ivec4(5, 0, 0, 1)), (int(ivec4(5, 0, 0, 1))) | (int(ivec4(5, 0, 0, 1)))))), _GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, 5, 5))), (false ? _GLF_FUZZED(22161) : int(_GLF_IDENTITY(5, ~ (~ (5))))))), (_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, 5, 5))), (false ? _GLF_FUZZED(22161) : int(5))))) ^ 0), (((1 | 0) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, _GLF_IDENTITY(int(ivec4(5, 0, 0, 1)), (_GLF_IDENTITY(int(ivec4(5, 0, 0, 1)), clamp(int(ivec4(5, 0, 0, 1)), int(ivec4(5, 0, 0, 1)), int(ivec4(5, 0, 0, 1))))) | (int(ivec4(5, 0, 0, 1)))))), _GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, 5, 5))), (false ? _GLF_FUZZED(22161) : int(_GLF_IDENTITY(5, ~ (~ (5))))))), (_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, 5, 5))), (false ? _GLF_FUZZED(22161) : int(5))))) ^ 0)) - 0), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((1 | 0), (false ? _GLF_FUZZED(-71693) : (1 | 0))) << _GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY((1 | 0), (false ? _GLF_FUZZED(-71693) : (1 | 0))) << _GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY((1 | 0), (false ? _GLF_FUZZED(-71693) : (_GLF_IDENTITY(1, (1) | (1 ^ 1)) | 0))) << _GLF_IDENTITY(int(5), int(5))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, 5, 5))), (false ? _GLF_IDENTITY(_GLF_FUZZED(22161), clamp(_GLF_FUZZED(22161), _GLF_IDENTITY(_GLF_FUZZED(22161), int(int(_GLF_FUZZED(22161)))), _GLF_IDENTITY(_GLF_FUZZED(22161), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_FUZZED(22161))))) : int(5)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), clamp(int(5), int(_GLF_IDENTITY(5, (5) ^ 0)), int(5))), _GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, 5, 5))), (false ? _GLF_FUZZED(22161) : int(5)))), 0 | (_GLF_IDENTITY(int(_GLF_IDENTITY(5, int(ivec3(5, 1, 1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, 5, 5))), (false ? _GLF_FUZZED(22161) : int(5)))))) : _GLF_IDENTITY(_GLF_FUZZED(bitCount(subgroup_id)), max(_GLF_FUZZED(bitCount(subgroup_id)), _GLF_IDENTITY(_GLF_FUZZED(bitCount(subgroup_id)), max(_GLF_FUZZED(bitCount(subgroup_id)), _GLF_FUZZED(bitCount(subgroup_id)))))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) | (0))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
              {
               barrier();
              }
            }
          }
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           subgroupBarrier();
          }
        }
       else
        {
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false), (_GLF_DEAD(false)) && true))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), virtual_gid, virtual_gid))], read, 4, 64, 4);
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     barrier();
    }
   else
    {
    }
  }
}
