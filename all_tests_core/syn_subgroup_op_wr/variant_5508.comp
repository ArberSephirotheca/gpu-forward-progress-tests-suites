#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0))), 1.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat2(float(mat2x4(injectionSwitch.x, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0))), 1.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), 0.0 + (float(mat2(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0))), 1.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))) > injectionSwitch.y))), _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (false ? _GLF_FUZZED(vec3(-889.275, 3.1, -94.15)) : vec3(injectionSwitch, 1.0))))), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(519.680, -5.9)) : _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), min((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))).y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true, true))))))))))), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))), max(_GLF_IDENTITY(_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))), vec2(0.0, 0.0) + (_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))))), _GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))))))), mix(vec2(_GLF_FUZZED(1.0), _GLF_FUZZED(-31.65)), vec2((vec2(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))), max(_GLF_IDENTITY(_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))), vec2(0.0, 0.0) + (_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))))), _GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))))))))[0], _GLF_IDENTITY((vec2(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))), max(_GLF_IDENTITY(_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))), vec2(0.0, 0.0) + (_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))))), _GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))))))))[1], (true ? (vec2(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))), max(_GLF_IDENTITY(_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))), vec2(0.0, 0.0) + (_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))))), _GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))))))))[1] : _GLF_FUZZED(-15.17)))), bvec2(true, true)))) : injectionSwitch)).x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))), max(_GLF_IDENTITY(_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))), vec2(0.0, 0.0) + (_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))))), _GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))))))), mix(vec2(_GLF_FUZZED(1.0), _GLF_FUZZED(-31.65)), vec2((vec2(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))), vec2(mat3x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))), vec2(mat4(_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0, cos(0.0), 0.0, exp(0.0)))), vec2(0.0, 0.0) + (_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))))), _GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))))))))[0], _GLF_IDENTITY((vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))), max(_GLF_IDENTITY(_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))), vec2(0.0, 0.0) + (_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))))), _GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58)))))), (true ? vec2(_GLF_IDENTITY(_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))), max(_GLF_IDENTITY(_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))), vec2(0.0, 0.0) + (_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))))), _GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58)))))) : _GLF_FUZZED(mod(injectionSwitch, -1203.1953))))))[1], (true ? (vec2(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))), max(_GLF_IDENTITY(_GLF_FUZZED(vec2(_GLF_IDENTITY(vec3(-7.1, 3.7, 96.58), (vec3(-7.1, 3.7, 96.58)) * mat3(1.0)))), vec2(0.0, 0.0) + (_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))))), _GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))))))))[1] : _GLF_FUZZED(-15.17)))), bvec2(true, true)))) : injectionSwitch)).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))), max(_GLF_IDENTITY(_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))), vec2(0.0, 0.0) + (_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))))), _GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))))))), mix(vec2(_GLF_FUZZED(1.0), _GLF_FUZZED(-31.65)), vec2((vec2(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))), max(_GLF_IDENTITY(_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))), vec2(0.0, 0.0) + (_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))))), _GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))))))))[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-41265) : 0))], _GLF_IDENTITY((vec2(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))), max(_GLF_IDENTITY(_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))), vec2(0.0, 0.0) + (_GLF_FUZZED(_GLF_IDENTITY(vec2(vec3(-7.1, 3.7, 96.58)), (vec2(vec3(-7.1, 3.7, 96.58))) + vec2(0.0, 0.0))))), _GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))))))))[1], (true ? (vec2(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))), max(_GLF_IDENTITY(_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))), vec2(0.0, 0.0) + (_GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))))), _GLF_FUZZED(vec2(vec3(-7.1, 3.7, 96.58))))))))[1] : _GLF_FUZZED(-15.17)))), bvec2(true, true)))) : injectionSwitch)).x > injectionSwitch.y), true, true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false)))), ((! (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (! _GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(661.602)), bool(false)))), float(_GLF_FUZZED(float(70596u))), bool(false))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), ((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) || false))))))))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (injectionSwitch.x > injectionSwitch.y))) || false)))), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3957.2365), _GLF_FUZZED(7987.1467)), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) + 0.0), (injectionSwitch)[1]), bvec2(true, true))), min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) || false)))))))))) && true)), bool(bool((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0)))) - 0.0))) > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) || false)))))))))) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 1 * (1)), 1))]))), vec2(_GLF_FUZZED(((- 9.5) * -0.6)), _GLF_FUZZED(vec4(-146.135, 767.019, 618.112, -2334.1676).p)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u) : _GLF_FUZZED(130186u))), (_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u) : _GLF_IDENTITY(_GLF_FUZZED(130186u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_FUZZED(130186u)))))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u) : _GLF_FUZZED(130186u))))), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) + 0u, (_GLF_IDENTITY((gl_WorkGroupSize.x) + 0u, max((gl_WorkGroupSize.x) + 0u, (gl_WorkGroupSize.x) + 0u))) + 0u)) : _GLF_FUZZED(130186u))), (_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u) : _GLF_IDENTITY(_GLF_FUZZED(130186u), (_GLF_FUZZED(130186u)) >> 0u)))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u) : _GLF_FUZZED(130186u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, (1u | 1u)))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))).x, (gl_WorkGroupSize.x) + 0u) : _GLF_FUZZED(130186u))), (_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u) : _GLF_FUZZED(130186u)))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u) : _GLF_FUZZED(130186u), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u) : _GLF_FUZZED(130186u)) | (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u) : _GLF_FUZZED(130186u))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u) : _GLF_FUZZED(130186u))), uint(uint(_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u) : _GLF_FUZZED(130186u)))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) + 0u, ((gl_WorkGroupSize.x) + 0u) - 0u)) : _GLF_FUZZED(130186u)))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u) : _GLF_FUZZED(130186u)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) + 0u, (_GLF_IDENTITY((gl_WorkGroupSize.x) + 0u, max((gl_WorkGroupSize.x) + 0u, (gl_WorkGroupSize.x) + 0u))) + 0u)) : _GLF_FUZZED(130186u))), (_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u) : _GLF_IDENTITY(_GLF_FUZZED(130186u), (_GLF_FUZZED(130186u)) >> 0u)))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u) : _GLF_FUZZED(130186u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, (1u | 1u)))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))).x, (gl_WorkGroupSize.x) + 0u) : _GLF_FUZZED(130186u))), (_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u) : _GLF_FUZZED(130186u)))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u) : _GLF_FUZZED(130186u), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u) : _GLF_FUZZED(130186u)) | (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u) : _GLF_FUZZED(130186u))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u) : _GLF_FUZZED(130186u))), uint(uint(_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u) : _GLF_FUZZED(130186u)))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) + 0u, ((gl_WorkGroupSize.x) + 0u) - 0u)) : _GLF_FUZZED(130186u)))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u) : _GLF_FUZZED(130186u))))))))) >> 0u)), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(130186u))))));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), true, false, false)))))))) && true))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec2(bool(bvec3(false, false, false)), true))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)))) + ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY(0u, min(0u, 0u))), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))), (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))), (injectionSwitch.x < injectionSwitch.y))))) ? 1u : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u))))))), uint(uvec4(_GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u))))))), 1u, 1u, 0u))), min(_GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u))))))), _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u)), (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u))) * 1u)))))))))))))))) + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (4) | (4)), 64, 4);
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && true))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bool((false) && true)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && true, ((false) && true) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))), bool(bool((false) && true))))) && _GLF_IDENTITY(true, ! (! (true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 0.0, sqrt(1.0))), 1.0 * _GLF_IDENTITY((float(mat2(injectionSwitch.x, 1.0, 0.0, sqrt(1.0)))), 0.0 + ((float(mat2(injectionSwitch.x, 1.0, 0.0, sqrt(1.0))))))))) + 0.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], float(vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(3.7))), 1.0))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(_GLF_IDENTITY(vec3(injectionSwitch[0], 1.0, 0.0), max(vec3(injectionSwitch[0], 1.0, 0.0), vec3(injectionSwitch[0], 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), float(mat3x2(float(mat2x3(0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0))))))))), injectionSwitch[1])))))) * vec2(1.0, 1.0))[_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), 0 ^ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, (1) + 0)))))]), (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) * vec2(1.0, 1.0))[1])) * mat2(1.0))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, sin(0.0), 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, sin(0.0), 0.0)), clamp(vec2(mat3x4(injectionSwitch, sin(0.0), 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, sin(0.0), 0.0)), vec2(mat3x4(injectionSwitch, sin(0.0), 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, sin(0.0), 0.0)), _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, sin(0.0), 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, sin(0.0), 0.0)), mat2(1.0) * (vec2(mat3x4(injectionSwitch, sin(0.0), 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, sin(0.0), 0.0))))))).x > injectionSwitch.y))) || false)))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && true)), true), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), true, false, _GLF_IDENTITY(false, (false) || false))))), false)), true)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), true, false, _GLF_IDENTITY(false, (false) || false))))), false)), true))))))), false, true)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) || false), true), false, true))), false, false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))), true, false, _GLF_IDENTITY(false, (false) || false))))), false)), true)))), false, true)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), true, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))), false)), true)))), false, true)))))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), true, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))), false)), true)))), false, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(bool(bvec2(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), true, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))), false)), true)))), false, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true)), false || (bool(bvec2(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), true, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))), false)), true)))), false, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true))))))))) && true), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((false) || false, ((false) || false) || false)), ((_GLF_IDENTITY((false) || false, ((false) || false) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false) || false, ((false) || false) || false)), bool(bvec4((_GLF_IDENTITY((false) || false, ((false) || false) || false)), true, true, false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((false) || false, ((false) || false) || false)), bool(bvec4((_GLF_IDENTITY((false) || false, ((false) || false) || false)), true, true, false)))))), ((_GLF_IDENTITY((false) || false, ((false) || false) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((! (_GLF_IDENTITY((false) || false, ((false) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))))) || false))) || false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))) || ((! (_GLF_IDENTITY((false) || false, ((false) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), ! (! (false || (false))))) && true))))))) || false))) || false)))))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((false) || false, ((false) || false) || false)), ((_GLF_IDENTITY((false) || false, ((false) || false) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false) || false, ((false) || false) || false)), bool(bvec4((_GLF_IDENTITY((false) || false, ((false) || false) || false)), true, true, false))), ((_GLF_IDENTITY((false) || false, ((false) || false) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((! (_GLF_IDENTITY((false) || false, ((false) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))) || false))) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (_GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((false) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))) || false))) || false)))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((false) || false, ((false) || false) || false)), ((_GLF_IDENTITY((false) || false, ((false) || false) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false) || false, ((false) || false) || false)), bool(bvec4((_GLF_IDENTITY((false) || false, ((false) || false) || false)), _GLF_IDENTITY(true, (true) || false), true, false))), ((_GLF_IDENTITY((false) || false, ((false) || false) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((! (_GLF_IDENTITY((false) || false, ((false) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))) || false))) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false), ((false)) && true) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))) || false))) || false)))))), true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))) && true)), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), true, false, false)))), false)), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, ! (! ((_GLF_IDENTITY(false, (false) || false)) || false)))) && true)), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), true, false, false)))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))), true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((false) || false, ((false) || false) || false)), ((_GLF_IDENTITY((false) || false, ((false) || false) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false) || false, ((false) || false) || false)), bool(bvec4((_GLF_IDENTITY((false) || false, ((false) || false) || false)), true, true, false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((false) || false, ((false) || false) || false)), bool(bvec4((_GLF_IDENTITY((false) || false, ((false) || false) || false)), true, true, false)))))), ((_GLF_IDENTITY((false) || false, ((false) || false) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((! (_GLF_IDENTITY((false) || false, ((false) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))))) || false))) || false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))) || ((! (_GLF_IDENTITY((false) || false, ((false) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), ! (! (false || (false))))) && true))))))) || false))) || false)))))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((false) || false, ((false) || false) || false)), ((_GLF_IDENTITY((false) || false, ((false) || false) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false) || false, ((false) || false) || false)), bool(bvec4((_GLF_IDENTITY((false) || false, ((false) || false) || false)), true, true, false))), ((_GLF_IDENTITY((false) || false, ((false) || false) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((! (_GLF_IDENTITY((false) || false, ((false) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))) || false))) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (_GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((false) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))) || false))) || false)))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((false) || false, ((false) || false) || false)), ((_GLF_IDENTITY((false) || false, ((false) || false) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false) || false, ((false) || false) || false)), bool(bvec4((_GLF_IDENTITY((false) || false, ((false) || false) || false)), _GLF_IDENTITY(true, (true) || false), true, false))), ((_GLF_IDENTITY((false) || false, ((false) || false) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((! (_GLF_IDENTITY((false) || false, ((false) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))) || false))) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false), ((false)) && true) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))) || false))) || false)))))), true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))) && true)), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), true, false, false)))), false)), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, ! (! ((_GLF_IDENTITY(false, (false) || false)) || false)))) && true)), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), true, false, false)))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))), true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true)))))))))) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))), false, false, false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) >> (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), subgroup_local_id)) + _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), (max(1, 1)) / 1)) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), _GLF_IDENTITY(uint(uvec2(uint(uvec2(virtual_gid, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) | (1u)))), (1u & 1u))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(uint(uvec2(uint(uvec2(virtual_gid, 1u)), (1u & 1u))), (uint(uvec2(uint(uvec2(virtual_gid, 1u)), (1u & 1u)))) - 0u) : _GLF_FUZZED(16580u), 0u ^ (true ? uint(uvec2(uint(uvec2(virtual_gid, 1u)), (1u & 1u))) : _GLF_FUZZED(16580u)))))))], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (false)), true, true))), (injectionSwitch.x > injectionSwitch.y)), true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), (dot(vec2(0.0, 1.0), vec2(1.0, 0.0))) * 1.0)), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0)), cos(0.0))), max(float(mat4x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(1.0, 0.0), (true ? vec2(1.0, 0.0) : _GLF_FUZZED(vec2(-3552.2734, 5812.2022))))), (dot(vec2(0.0, 1.0), vec2(1.0, 0.0))) * 1.0)), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0)), cos(0.0))), float(mat4x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), (dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0))) * 1.0)), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0)), cos(0.0)))))), injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), (false) || false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.6)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   subgroupAll(true);
  }
}
