#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), false, false)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), false, false)))), false), _GLF_IDENTITY(true, ! (! (true))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_id, 0u, ((_GLF_IDENTITY(106976u % 131163u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(106976u % 131163u, (true ? 106976u % 131163u : _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(num_workgroup, ~ (~ (num_workgroup))))))))), (~ (_GLF_IDENTITY(106976u % 131163u, (true ? 106976u % 131163u : _GLF_FUZZED(num_workgroup))))) ^ 0u)))) & 0u)), ~ (~ (uvec3(workgroup_id, 0u, ((106976u % 131163u) & 0u)))))), max(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), max(uvec4(workgroup_id, 0u, 0u, 0u), uvec4(workgroup_id, 0u, 0u, 0u)))) / uvec4(1u, 1u, 1u, 1u)), (uvec4(workgroup_id, 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u)))), 0u, (_GLF_IDENTITY((_GLF_IDENTITY(106976u % 131163u, (106976u % 131163u) | 0u)) & 0u, uint(uvec4(_GLF_IDENTITY((106976u % 131163u) & 0u, max(_GLF_IDENTITY((106976u % 131163u), min(_GLF_IDENTITY((106976u % 131163u), (_GLF_IDENTITY((106976u % 131163u), uint(uvec2((106976u % 131163u), 1u)))) >> 0u), (106976u % 131163u))) & 0u, (_GLF_IDENTITY(106976u, (106976u) | (106976u)) % 131163u) & 0u)), 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((-33.70 + 82.34)), _GLF_FUZZED((true ? 0.9 : -3.3))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), 0u))))), ~ (~ (uvec3(workgroup_id, 0u, ((_GLF_IDENTITY(106976u, (106976u) | (106976u)) % 131163u) & 0u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), uint(2u))) | (workgroup_id), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), uint(2u))) | (workgroup_id), ((0u >> _GLF_IDENTITY(uint(2u), uint(2u))) | (workgroup_id)) | ((0u >> _GLF_IDENTITY(uint(2u), uint(2u))) | (workgroup_id)))) - 0u)), workgroup_id)), 0u, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(106976u % 131163u, ~ (~ (106976u % 131163u)))), max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(106976u, 0u ^ (106976u)), max(_GLF_IDENTITY(106976u, 0u ^ (106976u)), _GLF_IDENTITY(106976u, 0u ^ (106976u)))) % 131163u, ~ (~ (106976u % 131163u)))), (_GLF_IDENTITY(106976u % 131163u, ~ (~ (106976u % 131163u)))))) & 0u, (_GLF_IDENTITY((_GLF_IDENTITY(106976u % 131163u, ~ (~ (106976u % 131163u)))), max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(106976u, 0u ^ (106976u)), max(_GLF_IDENTITY(106976u, 0u ^ (106976u)), _GLF_IDENTITY(106976u, 0u ^ (106976u)))) % 131163u, ~ (~ (106976u % 131163u)))), (_GLF_IDENTITY(106976u % 131163u, _GLF_IDENTITY(~ (~ (106976u % 131163u)), (~ (~ (106976u % 131163u))) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))))) & 0u) / 1u))), ~ (~ (_GLF_IDENTITY(uvec3(workgroup_id, 0u, ((106976u % _GLF_IDENTITY(131163u, (_GLF_IDENTITY(131163u, 0u | (131163u))) | (131163u))) & 0u)), (uvec3(workgroup_id, 0u, (_GLF_IDENTITY((106976u % 131163u) & 0u, ~ (~ ((106976u % 131163u) & 0u)))))) | (uvec3(workgroup_id, 0u, ((106976u % 131163u) & 0u)))))))), (uint(_GLF_IDENTITY(uvec3(workgroup_id, 0u, _GLF_IDENTITY(((106976u % 131163u) & 0u), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((106976u % 131163u) & 0u, uint(_GLF_IDENTITY(uvec2((106976u % 131163u) & 0u, (1u & 1u)), min(uvec2((106976u % 131163u) & 0u, (1u & 1u)), uvec2((106976u % 131163u) & 0u, _GLF_IDENTITY((1u & 1u), max((1u & 1u), (1u & 1u)))))))), max((106976u % 131163u) & 0u, (106976u % 131163u) & 0u))), min(((106976u % 131163u) & 0u), _GLF_IDENTITY(((106976u % 131163u) & 0u), 0u | (((106976u % 131163u) & 0u))))), ((106976u % 131163u) & 0u)))), ~ (~ (uvec3(workgroup_id, 0u, ((106976u % 131163u) & 0u))))))) - 0u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ((! (false))) || false), (_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ((! (false))) || false), bool(bool(! _GLF_IDENTITY((! (false)), ((! (false))) || false))))) && true)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint read = 0;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), uint(uint(uint(1)))), uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | (1))))), uint(1))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, bool(bvec2(false, false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch : _GLF_FUZZED(vec2(8.4, -7840.1463)))).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(216.154)), (float(_GLF_FUZZED(216.154))) * 1.0), bool(false))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   switch(_GLF_IDENTITY(_GLF_SWITCH(int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) - _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-95.18), mix(float(_GLF_FUZZED(-4.3)), float(_GLF_FUZZED(-95.18)), bool(true))))))) + (injectionSwitch.x))))), 0 | (_GLF_SWITCH(int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0 + (injectionSwitch.x))))))))
    {
     case 0:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (true)), true)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.4) : injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(true, false || (true)), true)), false || (bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (true)), true))))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (true)), true)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.4) : injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(true, false || (true)), true)), false || (bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (true)), true))))))))))))), false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     case 55:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     case 35:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     case 58:
     if(_GLF_DEAD(false))
      barrier();
     subgroupAll(false);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, false || (false)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(false, (false) || false))), true, false)))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(false, false || (false))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0))), 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0))))))), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false))))), (injectionSwitch.x > injectionSwitch.y)))))))), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-6399.3441)), bool(false))))), injectionSwitch[1])).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)), true, false)))))), true, false, false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     case 15:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     read = atomicLoad(buf[virtual_gid], 4, 64, 2);
     break;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4((! (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true, true)), (bool(bvec4((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) && true)))))), bool(bvec4(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))), false, false, false))))), false, _GLF_IDENTITY(true, true && (true)), false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     case 76:
     if(_GLF_DEAD(false))
      barrier();
     for(bvec2 _GLF_SWITCH_0_0v[23]; _GLF_IDENTITY(_GLF_IDENTITY((bvec3(false, false, false) != equal(ivec3(-99438, _GLF_IDENTITY(40896, (40896) | (_GLF_IDENTITY(_GLF_IDENTITY(40896, (40896) | (_GLF_IDENTITY(40896, ~ (~ (40896))))), (40896) << 0))), 79577), ivec3(72863, -51861, 82185))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bvec3(false, false, false) != equal(ivec3(-99438, 40896, 79577), ivec3(72863, -51861, 82185))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))), true))) != equal(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(-99438, 40896, 79577), max(ivec3(_GLF_IDENTITY(-99438, clamp(-99438, -99438, -99438)), 40896, 79577), ivec3(-99438, _GLF_IDENTITY(40896, (_GLF_IDENTITY(40896, _GLF_IDENTITY(int(ivec3(40896, 0, 1)), _GLF_IDENTITY(min(int(ivec3(40896, 0, 1)), int(ivec3(40896, 0, 1))), (min(int(ivec3(40896, 0, 1)), int(ivec3(40896, 0, 1)))) ^ 0)))) | 0), 79577))), ivec3(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(-99438, 40896, 79577), max(ivec3(_GLF_IDENTITY(-99438, clamp(-99438, -99438, -99438)), 40896, 79577), ivec3(-99438, 40896, 79577))), (true ? _GLF_IDENTITY(ivec3(-99438, 40896, 79577), max(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(-99438, (-99438) * 1), clamp(-99438, -99438, -99438)), 40896, 79577), _GLF_IDENTITY(ivec3(-99438, 40896, 79577), ivec3(0, 0, 0) + (_GLF_IDENTITY(ivec3(-99438, 40896, 79577), (_GLF_IDENTITY(ivec3(-99438, 40896, 79577), min(ivec3(-99438, 40896, 79577), ivec3(-99438, 40896, 79577)))) | (_GLF_IDENTITY(ivec3(-99438, 40896, 79577), _GLF_IDENTITY(ivec3(ivec4(ivec3(-99438, 40896, 79577), 1)), max(ivec3(ivec4(ivec3(-99438, 40896, 79577), 1)), ivec3(ivec4(ivec3(-99438, 40896, 79577), 1))))))))))) : _GLF_FUZZED(ivec3(-36881, -8039, -69132)))), 0))), ivec3(72863, -51861, 82185)))))), ! (! (! (_GLF_IDENTITY((bvec3(false, false, false) != equal(ivec3(-99438, 40896, 79577), ivec3(72863, -51861, _GLF_IDENTITY(82185, 0 ^ (82185))))), _GLF_IDENTITY(true && ((bvec3(_GLF_IDENTITY(false, false || (false)), false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false)) != equal(ivec3(-99438, _GLF_IDENTITY(40896, clamp(40896, 40896, 40896)), 79577), ivec3(72863, -51861, 82185)))), _GLF_IDENTITY(true && (true && (_GLF_IDENTITY((bvec3(_GLF_IDENTITY(false, false || (false)), false, false) != equal(ivec3(-99438, 40896, 79577), ivec3(72863, -51861, 82185))), bool(bvec4(_GLF_IDENTITY((bvec3(_GLF_IDENTITY(false, false || (false)), false, false) != equal(ivec3(-99438, 40896, 79577), ivec3(72863, -51861, 82185))), ((bvec3(_GLF_IDENTITY(false, false || (false)), false, false) != equal(ivec3(-99438, 40896, 79577), ivec3(72863, -51861, 82185)))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (true && (true && (_GLF_IDENTITY((bvec3(_GLF_IDENTITY(false, false || (false)), false, false) != equal(ivec3(-99438, 40896, 79577), ivec3(72863, -51861, 82185))), bool(bvec4(_GLF_IDENTITY((bvec3(_GLF_IDENTITY(false, false || (false)), false, false) != equal(ivec3(-99438, 40896, 79577), ivec3(72863, -51861, 82185))), ((bvec3(_GLF_IDENTITY(false, false || (false)), false, false) != equal(ivec3(-99438, 40896, 79577), ivec3(72863, -51861, 82185)))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false))))))))), true && (_GLF_IDENTITY((bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false) != equal(ivec3(-99438, _GLF_IDENTITY(_GLF_IDENTITY(40896, min(40896, 40896)), (40896) | (_GLF_IDENTITY(40896, (40896) << 0))), 79577), ivec3(72863, -51861, 82185))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bvec3(false, false, _GLF_IDENTITY(false, (false) && true)) != equal(ivec3(-99438, 40896, 79577), ivec3(72863, -51861, 82185))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))), true))) != equal(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(-99438, _GLF_IDENTITY(40896, (40896) * 1), 79577), max(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(-99438, 0 | (_GLF_IDENTITY(-99438, (-99438) | (-99438)))), clamp(-99438, -99438, -99438)), 40896, 79577), ivec3(-99438, 40896, 79577))), ivec3(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(-99438, 40896, 79577), max(ivec3(_GLF_IDENTITY(-99438, clamp(-99438, -99438, -99438)), 40896, 79577), ivec3(-99438, 40896, 79577))), (_GLF_IDENTITY(ivec3(-99438, 40896, 79577), max(ivec3(_GLF_IDENTITY(-99438, clamp(-99438, -99438, -99438)), 40896, 79577), ivec3(-99438, 40896, 79577)))) << ivec3(0, 0, 0)), (true ? _GLF_IDENTITY(ivec3(-99438, 40896, 79577), max(ivec3(_GLF_IDENTITY(-99438, clamp(-99438, -99438, -99438)), 40896, 79577), ivec3(-99438, 40896, 79577))) : _GLF_FUZZED(ivec3(-36881, -8039, _GLF_IDENTITY(-69132, 0 | (-69132)))))), 0))), ivec3(72863, -51861, 82185)))))), ! (! (! (_GLF_IDENTITY((bvec3(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, true && (false)))), bool(bool(bool(! (_GLF_IDENTITY(false, true && (false))))))))))), false) != equal(ivec3(-99438, 40896, 79577), ivec3(72863, -51861, 82185))), _GLF_IDENTITY(true && ((bvec3(_GLF_IDENTITY(false, false || (false)), false, false) != equal(ivec3(-99438, _GLF_IDENTITY(40896, (_GLF_IDENTITY(40896, (false ? _GLF_FUZZED(8795) : 40896))) | (40896)), 79577), ivec3(72863, -51861, 82185)))), true && (true && ((bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec4(! (_GLF_IDENTITY(false, (false) || false)), true, true, true)))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec4(! (_GLF_IDENTITY(false, (false) || false)), true, true, true))))))))), false, false) != equal(ivec3(-99438, 40896, 79577), ivec3(72863, -51861, 82185))))))))))))))); mat4x3(-406.381, -329.665, -59.18, 7.8, -7.8, -95.67, 205.602, 7.8, _GLF_IDENTITY(_GLF_IDENTITY(-5548.3600, mix(float(-5548.3600), float(_GLF_FUZZED(8347.2000)), bool(_GLF_IDENTITY(false, (false) && true)))), clamp(-5548.3600, -5548.3600, -5548.3600)), 435.329, 3596.9519, 998.011))
      {
       if(_GLF_DEAD(false))
        barrier();
       switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(4), int(4)))))
        {
         case 48:
         (ivec3(-34158, -32018, _GLF_IDENTITY(7771, ~ (_GLF_IDENTITY(~ (7771), int(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (7771)))))) * _GLF_IDENTITY(-97303, (-97303) | (-97303)));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         case 92:
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         ;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         case 0:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         case 24:
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_DEAD(false), false, false)), true, false, false)), ! (! (bool(bvec4(bool(bvec3(_GLF_DEAD(false), false, false)), true, false, false))))))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, max(1, 1))])).y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(-238.167)), bool(false))), 1.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), _GLF_IDENTITY(dot(vec3(1.0, sin(0.0), 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, sin(0.0), 0.0), max(vec3(1.0, sin(0.0), 0.0), vec3(1.0, sin(0.0), 0.0))), vec3(1.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) + (injectionSwitch.x)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))) > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         uvec4 _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         bvec3 _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, true))))) ? _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y : _GLF_FUZZED(6.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0))) : _GLF_FUZZED(90.13))), false || (injectionSwitch.x > injectionSwitch.y)))))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(max(_GLF_IDENTITY(determinant(mat4(1.6, -3.7, 4.6, -9.2, -9.8, -6349.3924, 3.1, 394.186, -1.9, -1.8, 5739.5384, 6334.5495, 1.1, 5.0, -0.6, -9.3)), (false ? _GLF_FUZZED(-8.8) : determinant(mat4(1.6, -3.7, 4.6, -9.2, -9.8, -6349.3924, 3.1, 394.186, _GLF_IDENTITY(-1.9, min(-1.9, _GLF_IDENTITY(-1.9, max(-1.9, -1.9)))), _GLF_IDENTITY(-1.8, max(-1.8, -1.8)), 5739.5384, 6334.5495, 1.1, 5.0, -0.6, -9.3)))), _GLF_IDENTITY(938.790, float(float(_GLF_IDENTITY(938.790, min(938.790, 938.790))))))) : injectionSwitch.x)) > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8628.7434) : injectionSwitch.y)))))))), true))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5.6) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) || false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if((mat4(_GLF_IDENTITY(462.219, (462.219) * 1.0), _GLF_IDENTITY(2641.5998, (_GLF_IDENTITY(2641.5998, (true ? 2641.5998 : _GLF_FUZZED(-366.008)))) / _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(825.234)))), -6730.7508, 6.2, -0.0, 9982.2335, -7.8, 74.77, _GLF_IDENTITY(5398.4938, max(5398.4938, 5398.4938)), -33.41, 675.130, -9.0, _GLF_IDENTITY(5.3, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(5.3, float(_GLF_IDENTITY(mat2x3(5.3, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), mat3(1.0) * (mat2x3(5.3, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))))), sqrt(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))) - vec3(0.0, 0.0, 0.0)), vec3(0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), dot(vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), float(_GLF_FUZZED(-314.095)), bool(false)))), 0.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(5.3, float(_GLF_IDENTITY(mat2x3(5.3, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), mat3(1.0) * (mat2x3(5.3, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))))), sqrt(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.9) : 0.0)), 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-594.076)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), dot(vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(dot(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(95.58) : _GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))))), 0.0, 0.0), vec3(1.0, 0.0, 0.0))), float(_GLF_FUZZED(-314.095)), bool(false)))), 0.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat3x4(_GLF_IDENTITY(5.3, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(5.3, max(5.3, 5.3)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), mat3(1.0) * (mat2x3(5.3, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))))), sqrt(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) - 0.0)) - 0.0), 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), dot(vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), float(_GLF_FUZZED(-314.095)), bool(false)))), 0.0, 1.0, 0.0, 1.0, 0.0))))))))), _GLF_IDENTITY(0.4, min(0.4, _GLF_IDENTITY(0.4, clamp(0.4, _GLF_IDENTITY(0.4, (0.4) / 1.0), 0.4)))), -28.67, 53.98) != mat4(-703.002, 71.31, -8.5, 891.761, 4.0, 3.5, -11.22, _GLF_IDENTITY(-4.7, (false ? _GLF_FUZZED(-6.0) : -4.7)), -9.2, 28.02, _GLF_IDENTITY(_GLF_IDENTITY(556.814, max(_GLF_IDENTITY(556.814, (false ? _GLF_FUZZED(-270.878) : 556.814)), 556.814)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(556.814, max(_GLF_IDENTITY(556.814, (false ? _GLF_FUZZED(-270.878) : 556.814)), 556.814)), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(556.814, max(_GLF_IDENTITY(556.814, (false ? _GLF_FUZZED(-270.878) : 556.814)), 556.814)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), sqrt(1.0)), (vec3(_GLF_IDENTITY(556.814, max(_GLF_IDENTITY(556.814, (false ? _GLF_FUZZED(-270.878) : 556.814)), 556.814)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), sqrt(1.0))) - vec3(0.0, 0.0, 0.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(556.814, max(_GLF_IDENTITY(556.814, (false ? _GLF_FUZZED(-270.878) : 556.814)), 556.814)), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(556.814, max(_GLF_IDENTITY(556.814, (false ? _GLF_FUZZED(-270.878) : 556.814)), 556.814)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), sqrt(1.0)), (vec3(_GLF_IDENTITY(556.814, max(_GLF_IDENTITY(556.814, (false ? _GLF_FUZZED(-270.878) : 556.814)), 556.814)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), sqrt(1.0))) - vec3(0.0, 0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(556.814, max(_GLF_IDENTITY(556.814, (false ? _GLF_FUZZED(-270.878) : 556.814)), 556.814)), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(556.814, max(_GLF_IDENTITY(556.814, (false ? _GLF_FUZZED(-270.878) : 556.814)), 556.814)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), sqrt(1.0)), (vec3(_GLF_IDENTITY(556.814, max(_GLF_IDENTITY(556.814, (false ? _GLF_FUZZED(-270.878) : 556.814)), 556.814)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), sqrt(1.0))) - vec3(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(556.814, max(_GLF_IDENTITY(556.814, (false ? _GLF_FUZZED(-270.878) : 556.814)), 556.814)), _GLF_IDENTITY(556.814, max(_GLF_IDENTITY(556.814, (false ? _GLF_FUZZED(-270.878) : 556.814)), 556.814)))), -2.4, 2.2, -701.109, 4.2, 4.0)))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))) || false)))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           ;
           (false && false);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)) : _GLF_FUZZED(mix(injectionSwitch, injectionSwitch, vec2(9873.2942, 78.01))))), injectionSwitch));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           ivec3(-96536, -34738, _GLF_IDENTITY(-48980, int(int(-48980))));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, false, false)), true && (bool(bvec3(false, false, false)))), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, false, false)), true && (bool(bvec3(false, false, false)))), true)), false, false, false))))), (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(-2929.5514, 394.191)) : (injectionSwitch))) / vec2(1.0, 1.0)).y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           uvec2(50853u, 82930u);
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         uvec2 _GLF_SWITCH_0_5v, _GLF_SWITCH_0_6v[90], _GLF_SWITCH_0_7v;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))
          barrier();
         bvec2 _GLF_SWITCH_0_8v[40];
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3670.1282)), bool(false))) > injectionSwitch.y))) && true)))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         break;
         case 87:
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         _GLF_IDENTITY(ivec2(-34219, 92230), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(-34219, 92230), clamp(ivec2(_GLF_IDENTITY(-34219, (_GLF_IDENTITY(-34219, min(-34219, -34219))) | (-34219)), 92230), ivec2(-34219, 92230), ivec2(-34219, 92230))), ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(-34219, 92230), clamp(ivec2(_GLF_IDENTITY(-34219, (_GLF_IDENTITY(-34219, min(-34219, -34219))) | (-34219)), 92230), ivec2(-34219, _GLF_IDENTITY(92230, min(92230, _GLF_IDENTITY(92230, (92230) >> 0)))), ivec2(-34219, 92230))), clamp(_GLF_IDENTITY(ivec2(-34219, 92230), clamp(ivec2(_GLF_IDENTITY(-34219, (_GLF_IDENTITY(-34219, min(-34219, -34219))) | (-34219)), 92230), ivec2(-34219, 92230), ivec2(-34219, 92230))), _GLF_IDENTITY(ivec2(-34219, 92230), clamp(ivec2(_GLF_IDENTITY(-34219, (_GLF_IDENTITY(-34219, min(-34219, -34219))) | (-34219)), 92230), ivec2(-34219, 92230), ivec2(-34219, 92230))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(-34219, 92230), clamp(ivec2(_GLF_IDENTITY(-34219, _GLF_IDENTITY((_GLF_IDENTITY(-34219, min(-34219, -34219))) | (-34219), clamp((_GLF_IDENTITY(-34219, min(-34219, -34219))) | (-34219), (_GLF_IDENTITY(-34219, min(-34219, -34219))) | (-34219), _GLF_IDENTITY((_GLF_IDENTITY(-34219, min(-34219, -34219))) | (-34219), (true ? (_GLF_IDENTITY(-34219, min(-34219, -34219))) | (-34219) : _GLF_FUZZED(87109)))))), 92230), ivec2(-34219, 92230), ivec2(_GLF_IDENTITY(-34219, 0 | (-34219)), 92230))), (_GLF_IDENTITY(ivec2(-34219, 92230), clamp(ivec2(_GLF_IDENTITY(-34219, (_GLF_IDENTITY(-34219, min(-34219, -34219))) | (-34219)), 92230), ivec2(-34219, 92230), ivec2(-34219, 92230)))) << ivec2(0, 0))))), ~ (~ (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(-34219, 92230), clamp(ivec2(_GLF_IDENTITY(-34219, (_GLF_IDENTITY(-34219, min(-34219, -34219))) | (-34219)), 92230), ivec2(-34219, 92230), ivec2(-34219, 92230))), clamp(_GLF_IDENTITY(ivec2(-34219, 92230), clamp(ivec2(_GLF_IDENTITY(-34219, (_GLF_IDENTITY(-34219, min(-34219, -34219))) | (-34219)), 92230), ivec2(-34219, 92230), ivec2(-34219, 92230))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(-34219, 92230), clamp(ivec2(_GLF_IDENTITY(-34219, (_GLF_IDENTITY(-34219, min(-34219, -34219))) | (-34219)), 92230), ivec2(-34219, 92230), ivec2(-34219, 92230))), ivec2(1, 1) * (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(-34219, 0 ^ (_GLF_IDENTITY(-34219, (_GLF_IDENTITY(-34219, (true ? -34219 : _GLF_FUZZED(-55551)))) >> 0))), 92230), clamp(ivec2(_GLF_IDENTITY(-34219, (_GLF_IDENTITY(-34219, min(-34219, -34219))) | (-34219)), 92230), ivec2(-34219, 92230), ivec2(-34219, 92230))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(-34219, 92230), clamp(ivec2(_GLF_IDENTITY(-34219, (_GLF_IDENTITY(-34219, min(-34219, -34219))) | (-34219)), 92230), ivec2(-34219, 92230), ivec2(-34219, 92230))), (_GLF_IDENTITY(ivec2(-34219, 92230), clamp(ivec2(_GLF_IDENTITY(-34219, (_GLF_IDENTITY(-34219, min(-34219, -34219))) | (-34219)), 92230), ivec2(-34219, 92230), ivec2(-34219, 92230)))) << ivec2(0, 0))))), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(-34219, 92230), clamp(ivec2(_GLF_IDENTITY(-34219, (_GLF_IDENTITY(-34219, min(-34219, -34219))) | (-34219)), 92230), ivec2(-34219, 92230), ivec2(-34219, 92230))), clamp(_GLF_IDENTITY(ivec2(-34219, 92230), clamp(ivec2(_GLF_IDENTITY(-34219, (_GLF_IDENTITY(-34219, min(-34219, -34219))) | (-34219)), 92230), ivec2(-34219, 92230), ivec2(-34219, 92230))), _GLF_IDENTITY(ivec2(-34219, 92230), clamp(ivec2(_GLF_IDENTITY(-34219, (_GLF_IDENTITY(-34219, min(-34219, -34219))) | _GLF_IDENTITY((-34219), ((-34219)) >> 0)), 92230), ivec2(-34219, 92230), ivec2(-34219, 92230))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(-34219, 92230), clamp(ivec2(_GLF_IDENTITY(-34219, (_GLF_IDENTITY(-34219, min(-34219, -34219))) | (-34219)), 92230), ivec2(-34219, 92230), ivec2(-34219, 92230))), (_GLF_IDENTITY(ivec2(-34219, 92230), clamp(ivec2(_GLF_IDENTITY(-34219, (_GLF_IDENTITY(_GLF_IDENTITY(-34219, min(-34219, -34219)), clamp(_GLF_IDENTITY(-34219, min(-34219, -34219)), _GLF_IDENTITY(-34219, min(-34219, -34219)), _GLF_IDENTITY(-34219, min(-34219, -34219))))) | (-34219)), 92230), ivec2(-34219, 92230), ivec2(-34219, 92230)))) << ivec2(0, 0))))))))))))) >> _GLF_IDENTITY((ivec2(0, 0) >> _GLF_IDENTITY(_GLF_IDENTITY(ivec2(4), (ivec2(4)) / ivec2(1, 1)), _GLF_IDENTITY(ivec2(4), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((ivec2(4)), ivec2(ivec3((ivec2(4)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec2(int(3), 1)))))))), (_GLF_IDENTITY((ivec2(4)), ivec2(ivec3((ivec2(4)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec2(int(3), 1))))))))) ^ ivec2(0, 0)))))), ~ (_GLF_IDENTITY(~ ((ivec2(0, 0) >> _GLF_IDENTITY(ivec2(4), _GLF_IDENTITY(ivec2(4), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((ivec2(4)), ivec2(ivec3((ivec2(4)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec2(int(3), 1)))))))), (_GLF_IDENTITY((ivec2(4)), ivec2(ivec3((ivec2(4)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec2(int(3), 1))))))))) ^ ivec2(0, 0))))))), ivec2(0, 0) ^ (_GLF_IDENTITY(~ ((ivec2(0, 0) >> _GLF_IDENTITY(ivec2(4), _GLF_IDENTITY(ivec2(4), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((ivec2(4)), ivec2(ivec3((ivec2(4)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec2(int(3), 1)))))))), _GLF_IDENTITY((_GLF_IDENTITY((ivec2(4)), ivec2(ivec3((ivec2(4)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec2(int(3), 1))))))))) ^ ivec2(0, 0), ivec2(ivec4((_GLF_IDENTITY((ivec2(4)), ivec2(ivec3((ivec2(4)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec2(int(3), 1))))))))) ^ ivec2(0, 0), 0, 1))))))))), ivec2(0, 0) | _GLF_IDENTITY((~ ((ivec2(0, 0) >> _GLF_IDENTITY(ivec2(4), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(4), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((ivec2(4)), ivec2(ivec3((ivec2(4)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec2(int(3), 1)))))))), (_GLF_IDENTITY((ivec2(4)), ivec2(ivec3((ivec2(4)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec2(int(3), 1))))))))) ^ ivec2(0, 0)))), (_GLF_IDENTITY(ivec2(4), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((ivec2(4)), ivec2(ivec3((ivec2(4)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec2(int(3), 1)))))))), (_GLF_IDENTITY((ivec2(4)), ivec2(ivec3((ivec2(4)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec2(int(3), 1))))))))) ^ ivec2(0, 0))))) | (_GLF_IDENTITY(ivec2(4), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((ivec2(4)), ivec2(ivec3((ivec2(4)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec2(int(3), 1)))))))), (_GLF_IDENTITY((ivec2(4)), ivec2(ivec3((ivec2(4)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec2(int(3), 1))))))))) ^ ivec2(0, 0)))))))))), max((~ ((ivec2(0, 0) >> _GLF_IDENTITY(ivec2(4), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(4), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((ivec2(4)), ivec2(ivec3((ivec2(4)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec2(int(3), 1)))))))), (_GLF_IDENTITY((ivec2(4)), ivec2(ivec3((ivec2(4)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec2(int(3), 1))))))))) ^ ivec2(0, 0)))), (_GLF_IDENTITY(ivec2(4), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((ivec2(4)), ivec2(ivec3((ivec2(4)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec2(int(3), 1)))))))), (_GLF_IDENTITY((ivec2(4)), ivec2(ivec3((ivec2(4)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec2(int(3), 1))))))))) ^ ivec2(0, 0))))) | (_GLF_IDENTITY(ivec2(4), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((ivec2(4)), ivec2(ivec3((ivec2(4)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec2(int(3), 1)))))))), (_GLF_IDENTITY((ivec2(4)), ivec2(ivec3((ivec2(4)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec2(int(3), 1))))))))) ^ ivec2(0, 0)))))))))), (~ ((ivec2(0, 0) >> _GLF_IDENTITY(ivec2(4), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(4), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((ivec2(4)), ivec2(ivec3((ivec2(4)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec2(int(3), 1)))))))), (_GLF_IDENTITY((ivec2(4)), ivec2(ivec3((ivec2(4)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec2(int(3), 1))))))))) ^ ivec2(0, 0)))), (_GLF_IDENTITY(ivec2(4), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((ivec2(4)), ivec2(ivec3((ivec2(4)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec2(int(3), 1)))))))), (_GLF_IDENTITY((ivec2(4)), ivec2(ivec3((ivec2(4)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec2(int(3), 1))))))))) ^ ivec2(0, 0))))) | (_GLF_IDENTITY(ivec2(4), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((ivec2(4)), ivec2(ivec3((ivec2(4)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec2(int(3), 1)))))))), (_GLF_IDENTITY((ivec2(4)), ivec2(ivec3((ivec2(4)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec2(int(3), 1))))))))) ^ ivec2(0, 0))))))))))))))))));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         case 51:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         (true ? (+ (true ? mat3x4(5.7, -55.60, -8.8, 657.646, 41.50, -84.86, 0.3, -17.86, -91.07, _GLF_IDENTITY(-782.019, clamp(-782.019, -782.019, -782.019)), -5.1, -4817.6982) : mat3x4(_GLF_IDENTITY(1.1, float(mat3(1.1, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 2954.7758, -1474.2119, -4031.4606, 253.600, -9.0, 5855.9739, 49.46, -657.518, -92.54, 517.802, 3.1))) : mat3x4(-1.7, -9.1, 2522.2509, -763.667, -6.2, 209.615, -91.67, 7239.1940, -46.74, 6.3, -9.4, -8.1));
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         default:
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         1;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false)))), ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false)))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))) || false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     case 95:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     bvec2(_GLF_IDENTITY(true, (true) || false), true);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     default:
     1;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), mix(vec2(((injectionSwitch) * vec2(1.0, 1.0))[0], _GLF_FUZZED(float(-13480))), vec2(_GLF_FUZZED(-8723.7685), ((injectionSwitch) * vec2(1.0, 1.0))[1]), bvec2(false, true)))).x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))), (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))), (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))))) || false))) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(_GLF_IDENTITY(false, bool(bvec2(false, false))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
