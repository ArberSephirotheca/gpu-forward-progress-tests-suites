#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 uint workgroup_size;
 float _f0;
} ;

struct _GLF_struct_1 {
 vec4 _f0;
 bvec3 _f1;
 _GLF_struct_0 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), true && (bool(_GLF_IDENTITY(false, bool(bool(false))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), bool(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true))))))), bool(bvec3(false, true, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(bool(bvec2(false, false))))))) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-728.111) : injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 uvec3 GLF_merged3_0_1_4_1_1_17_2_1_12readsubgroup_local_idworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-14.65, 9.3, -1429.4663, -225.858).t), _GLF_FUZZED((1.9 - vec2(-51.92, -9.8)).x)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, false)), bool(bvec4(bool(bvec3((false), false, false)), true, false, true)))))))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))) || false))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x = subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true)))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true)))), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true))))))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true)))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true)))), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true)))))))))))) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0))).y))) - 0.0)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged3_0_1_4_1_1_17_2_1_12readsubgroup_local_idworkgroup_id.y = subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, false || (true))))) && (false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), false)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)))) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY((injectionSwitch), vec2(mat4x2((injectionSwitch), 0.0, 1.0, cos(length(vec2(0.0, 0.0))), 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), vec2(mat2x3(vec2(mat4x2((injectionSwitch), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))), 1.0, 1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0)))) / vec2(1.0, 1.0)).x > injectionSwitch.y) && true)))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), false || (! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false || (false)), true, false, false))), ! _GLF_IDENTITY((! (false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y)) || ((! (false)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), true)), true && (bool(bvec2((false), true)))))))))), false))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, true, false, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true)))))))))))), ((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), (true && (! (false))) || false))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), true && (! (false)))), ! (! ((_GLF_IDENTITY(! (false), true && (! (false))))))))))), false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)) && ((! (false)))))))), ! (! (! (! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, sqrt(1.0)))).y, float(float(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, sqrt(1.0)))).y)))), ((injectionSwitch.x < injectionSwitch.y)) && true)) && ((! (false))))))))))))))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false))))), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)) && ((! (false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)) && ((! (false)))))), bool(bvec4(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)) && ((! (false)))))), false, false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false)))))) && true)) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y)) && (false)))))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)), false))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)), false))), false))))), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))))))), false)))))) || false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false))))), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false)))))) || _GLF_IDENTITY(false, ! (! (false))))), false, false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false))))), _GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false)))))) || false, bool(bvec4(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false)))))) || false, ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false)))))) || false, true && ((bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(false, false || (false)))))))) || false))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3((bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false)))))) || false, true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))))))), false, false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false))))), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false)))))) || _GLF_IDENTITY(false, ! (! (false))))), false, false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false))))), _GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false)))))) || false, bool(bvec4(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false)))))) || false, ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false)))))) || false, true && ((bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(false, false || (false)))))))) || false))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3((bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false)))))) || false, true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))))))), false, false)))))))))))) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))), false))))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false))))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false)))))))) || false), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true, false, false))), (! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true, false, false)))) || false)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false)))))))), false, true, false))), false), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), false))))), false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false))))), false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec3(bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false))))), false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)), true, true)), false)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), false))))), false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false))))), false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec3(bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false))))), false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)), true, true)), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))), 0.0, 1.0, 0.0)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y))), ! (! (bool(bool((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(vec4(1.0), bvec3(true), _GLF_struct_0(_GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize.x, 1u * (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, (0u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (6u) | (6u)))))))).x)), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * uvec3(1u, 1u, 1u)))).x)), 1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), mix(float(_GLF_FUZZED(-456.322)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), (false ? _GLF_FUZZED(79.01) : _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))))), bool(true))) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 0.0, round(length(normalize(1.0))), 1.0, 0.0))) > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(bvec2(bool(! ((injectionSwitch.x > injectionSwitch.y))), false))), true && (_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec2(bool(! ((injectionSwitch.x > injectionSwitch.y))), false)))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, abs(0.0), 1.0)), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, abs(0.0), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.5))))))), max(vec2(mat3x2(injectionSwitch, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, abs(0.0), 1.0)), vec2(mat3x2(injectionSwitch, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, abs(_GLF_IDENTITY(0.0, length(vec3(0.0, 0.0, 0.0)) + (0.0))), 1.0))))) * vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(cos(_GLF_ZERO(0.0, injectionSwitch.x)), float(mat3x4(_GLF_IDENTITY(cos(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(cos(_GLF_ZERO(0.0, injectionSwitch.x)), float(mat2(cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, 0.0)))) - _GLF_ZERO(0.0, injectionSwitch.x)), 0.0, abs(1.0), 0.0, determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0)), sqrt(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), 1.0, abs(0.0), 1.0)), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, _GLF_IDENTITY(abs(0.0), clamp(_GLF_IDENTITY(abs(0.0), (abs(0.0)) + 0.0), abs(0.0), _GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(8.1)), float(abs(0.0)), bool(true))))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.5))))))), max(vec2(mat3x2(injectionSwitch, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, abs(0.0), 1.0)), vec2(mat3x2(injectionSwitch, cos(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.0) : injectionSwitch.x)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, tan(0.0)))), abs(1.0), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.7)), float(0.0), bool(true)))) + _GLF_ZERO(0.0, injectionSwitch.x)))), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(abs(vec2(1.0, 1.0)))).x, (false ? _GLF_FUZZED(5.0) : injectionSwitch.x)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0, 0.0))))), (false ? _GLF_FUZZED(4.0) : float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (false ? _GLF_FUZZED(5.0) : injectionSwitch.x)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.0) : injectionSwitch.x)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0, 0.0)))))))))), 1.0, abs(_GLF_IDENTITY(0.0, length(vec3(0.0, 0.0, 0.0)) + (0.0))), 1.0))))) * vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))) || false)))), _GLF_IDENTITY(bool(bvec2(bool(! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), (true ? _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) : _GLF_FUZZED(17.46))), 0.0, 1.0, 0.0, 0.0, length(sin(vec3(0.0, 0.0, 0.0))), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)), bool(bvec3(bool(bvec2(bool(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))) > injectionSwitch.y))), false)), true, true))))), false || (bool(_GLF_IDENTITY(bool(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, abs(0.0), 1.0)), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, abs(0.0), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.5))))))), max(vec2(mat3x2(injectionSwitch, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, abs(0.0), 1.0)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, abs(_GLF_IDENTITY(0.0, length(vec3(0.0, 0.0, 0.0)) + (0.0))), 1.0)), (vec2(mat3x2(injectionSwitch, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, abs(_GLF_IDENTITY(0.0, length(vec3(0.0, 0.0, 0.0)) + (0.0))), 1.0))) - vec2(0.0, 0.0))))) * vec2(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) || false)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))), (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0, sqrt(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0))))))))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), bool(bvec3(bool(bvec2(bool(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))) > injectionSwitch.y))), false)), true, true))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged3_0_1_4_1_1_17_2_1_12readsubgroup_local_idworkgroup_id.z = _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uint(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ((workgroup_id)) - 0u) | 0u)))), 0u ^ (_GLF_IDENTITY(workgroup_id, uint(uint(_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u)))))), workgroup_id));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), true, false)))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_struct_replacement_1._f2.workgroup_size, (_GLF_struct_replacement_1._f2.workgroup_size) + 0u) * GLF_merged3_0_1_4_1_1_17_2_1_12readsubgroup_local_idworkgroup_id.z;
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x) | 0u, (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x), max(_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x), 0u ^ ((GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x))), _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x), (true ? (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x) : _GLF_FUZZED(workgroup_id))))) | _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), min((GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x) | 0u, (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x) | 0u))) ^ 0u))) | (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), min((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) / 1.0))) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), true))))), bool(bvec3(true, true, true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + GLF_merged3_0_1_4_1_1_17_2_1_12readsubgroup_local_idworkgroup_id.y;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y = _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), 0u | (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y = _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)))), ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), clamp(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), virtual_gid)), _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)))), max(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)))), (true ? _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y = _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y = _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))) - 0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y = _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))) - 0u, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (! (_GLF_IDENTITY(false, bool(bool(false))))) || false))) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id))) : (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y = _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))) - 0u)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) ^ (0u | 0u))))) : _GLF_FUZZED(_GLF_IDENTITY(183330u, (true ? 183330u : _GLF_FUZZED(subgroup_local_id)))))))));
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), subgroup_base), (max(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), subgroup_base)) * 1u)) + ((_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_17_2_1_12readsubgroup_local_idworkgroup_id.y, (GLF_merged3_0_1_4_1_1_17_2_1_12readsubgroup_local_idworkgroup_id.y) ^ (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (1u ^ 1u) ^ (uint(2u)))))) + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x), (workgroup_base + subgroup_base + (_GLF_IDENTITY((GLF_merged3_0_1_4_1_1_17_2_1_12readsubgroup_local_idworkgroup_id.y + 1), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_1_4_1_1_17_2_1_12readsubgroup_local_idworkgroup_id.y + 1), max((GLF_merged3_0_1_4_1_1_17_2_1_12readsubgroup_local_idworkgroup_id.y + 1), (GLF_merged3_0_1_4_1_1_17_2_1_12readsubgroup_local_idworkgroup_id.y + 1))), ~ (~ (_GLF_IDENTITY((GLF_merged3_0_1_4_1_1_17_2_1_12readsubgroup_local_idworkgroup_id.y + 1), max((GLF_merged3_0_1_4_1_1_17_2_1_12readsubgroup_local_idworkgroup_id.y + 1), (GLF_merged3_0_1_4_1_1_17_2_1_12readsubgroup_local_idworkgroup_id.y + 1)))))))) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x)) >> 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = 0;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, true, false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged3_0_1_4_1_1_17_2_1_12readsubgroup_local_idworkgroup_id.x = read;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), (vec4(injectionSwitch, 0.0, 1.0)) / vec4(1.0, 1.0, 1.0, 1.0))), clamp(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), (vec4(injectionSwitch, 0.0, 1.0)) / vec4(1.0, 1.0, 1.0, 1.0))), vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), (vec4(injectionSwitch, 0.0, 1.0)) / vec4(1.0, 1.0, 1.0, 1.0))), vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), (vec4(injectionSwitch, 0.0, 1.0)) / vec4(1.0, 1.0, 1.0, 1.0)))))), injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, max(4, 4)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_1_4_1_1_17_2_1_12readsubgroup_local_idworkgroup_id.y % 2), ((GLF_merged3_0_1_4_1_1_17_2_1_12readsubgroup_local_idworkgroup_id.y % 2)) << 0u), 0u | ((_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_17_2_1_12readsubgroup_local_idworkgroup_id.y % 2, (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_17_2_1_12readsubgroup_local_idworkgroup_id.y % 2, ~ (~ (GLF_merged3_0_1_4_1_1_17_2_1_12readsubgroup_local_idworkgroup_id.y % 2)))) << 0u)))) == 0)
  {
   subgroupAll(_GLF_IDENTITY(false, (false) || false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, tan(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 1.0, 1.0, 0.0))), 0.0, length(0.0), 1.0, log(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0), (mat4(injectionSwitch, tan(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 1.0, 1.0, 0.0))), 0.0, length(0.0), 1.0, log(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   GLF_merged3_0_1_4_1_1_17_2_1_12readsubgroup_local_idworkgroup_id.x = atomicLoad(buf[GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y], 4, 64, 2);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   GLF_merged3_0_1_4_1_1_17_2_1_12readsubgroup_local_idworkgroup_id.x = atomicLoad(buf[_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y, clamp(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y, _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y, (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y) << 0u), GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y))], 4, 64, 2);
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(650.628) : _GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3.9)), bool(false))), 1.0)), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, tan(0.0)))))) > injectionSwitch.y))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-80.74)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))).x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), true, false, true)))))))) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec4(bvec2(! (false), false), true, false)))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, false || (true)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), bool(bool(bool(bvec2(true, false))))))) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec4(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bool(true)))), ! (! (! (_GLF_IDENTITY(true, bool(bool(true))))))))), false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), ! (! (! (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))))))), ! (! (! (_GLF_IDENTITY(! (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), ! (! (! (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), false, false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), false, false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), false, false))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), false, false))))), false, true), true)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), false, false)))))), false, false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), false, false)))))), false, false))))), bool(bool(bool(bvec3(! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))), bool(bvec4(! (false), true, false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), false, false)))))), false, false))))))), true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))))))))))))), true)))))))))))), bool(bvec2((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), bool(bool(bool(bvec2(true, false))))))) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), true && _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec4(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(bool(bool(false)), true, true), bvec3(bvec3(bvec3(bool(bool(false)), true, true))))))), _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), ! (! (! (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))))))), ! (! (! (_GLF_IDENTITY(! (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), ! (! (! (bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), false, false))))))), true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))))))))))))), true)))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), ! (! (! (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))))))), ! (! (! (_GLF_IDENTITY(! (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), ! (! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), true, false, true)), ! (! (bool(bvec4(! (false), true, false, true)))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))), false, false))))))), true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))))))))))))), true))))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec4(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(bool(bool(false)), true, true), bvec3(bvec3(bvec3(bool(bool(false)), true, true))))))), _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), ! (! (! (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))))))), ! (! (! (_GLF_IDENTITY(! (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), ! (! (! (bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), false, false))))))), true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))))))))))))), true)))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), ! (! (! (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))))))), ! (! (! (_GLF_IDENTITY(! (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), ! (! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), true, false, true)), ! (! (bool(bvec4(! (false), true, false, true)))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))), false, false))))))), true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))))))))))))), true)))))))))) || false)))))), false))) || false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), bool(bool(bool(bvec2(true, false))))))) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), ! (! (! (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), bvec3(bvec4(bvec3(true, false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! (! (_GLF_IDENTITY(! (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), ! (! (! (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), false, false)))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), false, false)))))), false, false)), bool(bool(bool(bvec3(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), false, false)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), false, false)))), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), false, false)))), true, true, false)))))))), false, false))))))), true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))))))))))))), true)))))))))))), bool(bvec2((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), bool(bool(bool(bvec2(true, false))))))) || false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), bool(bool(bool(bvec2(true, false))))))) || false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), bool(bool(bool(bvec2(true, false))))))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), bool(bool(bool(bvec2(true, false))))))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), ! (! (! (_GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), true && (! (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))))))))))))), ! (! (! (_GLF_IDENTITY(! (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), ! (! (! (bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), false, false))))))), true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))))))))))))), true)))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))), true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), ! (! (! (bool(bvec4(false, true, false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, false))))))))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false))))))), true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), ! (! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), ! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))))), true), false, false))))))), true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))))))), bool(bvec2((_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false))))))), true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), ! (! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), ! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))))), true), false, false))))))), true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))))))), false)))))))), true)))))))))))))), false))) || false, bool(bool(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, false), true, false)), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(true, false), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(true, false), true, false))))), false)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(true, false), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(true, false), true, false))))), false)), true, true)))))), bool(bool(bool(bvec2(true, false))))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))) && true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), ! _GLF_IDENTITY((! (! (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((! (! (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), ((! (! (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) && true))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), ! (! (! (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), false, false)))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), false, false)))))), false, false)), bool(bool(bool(bvec3(! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), false, false)))))), false, false))))))), true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))))))), bool(bvec2(! (_GLF_IDENTITY(! (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), ! (! (! (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), false, false)))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), false, false)))))), false, false)), bool(bool(bool(bvec3(! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), false, false)))))), false, false))))))), true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))))))), false)))))))), true)))))))))))), bool(bvec2((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), bool(bool(bool(bvec2(true, false))))))) || false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))))), bool(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))))), true))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true)))))), true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), ! (! (! (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))))))), ! (! (! (_GLF_IDENTITY(! (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), ! (! (! (bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), bool(bvec4(! (false), true, false, true))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), false, false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true, true))))))))), true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))))))))))))), true)))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), ! (! (! (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))))))), ! (! (! (_GLF_IDENTITY(! (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_IDENTITY(false, ! (! (false))))))))), ! (! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), false, false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), true), false, false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))))))))))))), true)))))))))))))), false))) || false))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y], GLF_merged3_0_1_4_1_1_17_2_1_12readsubgroup_local_idworkgroup_id.x, 4, _GLF_IDENTITY(64, _GLF_IDENTITY(min(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, 1 * (64)))), 64)), 64), 1 * (_GLF_IDENTITY(min(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(64, (64) | (64))), (_GLF_IDENTITY(min(_GLF_IDENTITY(64, clamp(64, 64, 64)), 64), ~ (_GLF_IDENTITY(~ (min(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) + 0), 64)), 64)), 1 * (~ (min(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) + 0), 64)), 64))))))) - 0)))), 4);
}
