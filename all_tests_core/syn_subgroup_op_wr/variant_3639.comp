#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, true)))), bool(bvec3(! (! (_GLF_IDENTITY(false, ! (! (false))))), false, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true)))))))))), ((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0)))))), false || ((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))))))) || false))), true)), bool(bvec3(bool(bvec2(! _GLF_IDENTITY((false), ((false)) && true), true)), true, false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
          barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec4(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), true, false, false))))))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bvec4(bool(bool((injectionSwitch.x > injectionSwitch.y))), false, false, false)))))))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(determinant(mat3(-310.113, -3.3, -660.258, -850.319, 1065.6582, -7341.0011, 66.62, -5425.3850, 5813.1363))))), (false ? _GLF_FUZZED(-5.5) : injectionSwitch.y)), sin(0.0) + (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5.5) : injectionSwitch.y))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           barrier();
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)))) || false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))))))
      barrier();
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 1.0, tan(0.0), 1.0, 0.0))))) > injectionSwitch.y) || false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, (true) && true))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bvec2(bool(bool(true)), false)))), false, false, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bvec2(bool(bool(true)), false)))), false, false, true)), false, false)))), (true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 & 39872) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, 0 | (4))))))); _injected_loop_counter --)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   for(int _injected_loop_counter = (int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(6790.0052) : _GLF_ONE(1.0, injectionSwitch.y)))) & 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > ((0 >> _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(4), int(4))), (_GLF_IDENTITY(_injected_loop_counter > ((0 >> _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(4), int(4))), (_injected_loop_counter > ((0 >> _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(4)))))) && true)) && true)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 0)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | (int(_GLF_ZERO(0.0, injectionSwitch.x)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x, mix(float(_GLF_FUZZED(-0.0)), float(_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x), bool(true))))) > injectionSwitch.y)))))))))
                {
                }
               else
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))));
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false)) && true), (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(mat3x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))).x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y), 1.0, 0.0))).x > injectionSwitch.y))), true, true, true))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               else
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true))) || false)))))
                    barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.5), _GLF_FUZZED(3.1)), vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat3x2(141.288, -3.5, 1.9, -4649.2301, -0.3, -221.036) * vec3(9379.4716, 241.600, 3.7))) : injectionSwitch)))[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))), bool(bvec4((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))), (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))))) || false)) || false))), true))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(9.4) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y) - 0.0))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_IDENTITY(true, ! (! (true))), false, false)))))))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 1, int(_GLF_ONE(1.0, injectionSwitch.y))), clamp(ivec4(1, 0, 1, int(_GLF_ONE(1.0, injectionSwitch.y))), ivec4(1, 0, 1, int(_GLF_ONE(1.0, injectionSwitch.y))), ivec4(1, 0, 1, int(_GLF_ONE(1.0, injectionSwitch.y))))))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), int(ivec2(int(6), int(_GLF_ONE(1.0, injectionSwitch.y))))))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), vec2(_GLF_FUZZED(-6829.9891), _GLF_FUZZED((5495.9840 + 8.7))), bvec2(false, false))).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0))) + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, tan(0.0), 1.0, 0.0)), mix(float(_GLF_FUZZED(-1168.4365)), float(float(mat2(injectionSwitch.x, tan(0.0), 1.0, 0.0))), bool(true)))))) > injectionSwitch.y), true && (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec3(1.0, 1.0, 0.0))) + _GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_FUZZED(-887.666) : (injectionSwitch.x)))) > injectionSwitch.y)))) && _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-0.3) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), max(min(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(69.30, -666.714)) : injectionSwitch)).x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))))))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   else
    {
    }
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), ! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))))) || false)), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))) || false))), (! ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))) || false)))) || false)))) && _GLF_IDENTITY(true, ! (! (true))))))));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), (vec2(0.0, 0.0) + (injectionSwitch)) + abs(vec2(0.0, 0.0)))).x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), (vec2(0.0, 0.0) + (injectionSwitch)) + abs(vec2(0.0, 0.0)))).x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), (vec2(0.0, 0.0) + (injectionSwitch)) + abs(vec2(0.0, 0.0)))).x > injectionSwitch.y)))))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)) | (workgroup_id), 0u | ((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)) | (workgroup_id)))), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)) : _GLF_FUZZED(atomicExchange(subgroup_size, subgroup_local_id))))), clamp((workgroup_id), (workgroup_id), _GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id))))) << 0u)) | (workgroup_id), (false ? _GLF_FUZZED(packHalf2x16(vec2(7.0, -3293.8701))) : (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, 1u * (workgroup_id)))) : _GLF_FUZZED(atomicExchange(subgroup_size, subgroup_local_id))), (_GLF_IDENTITY((true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, 1u * (workgroup_id)))) : _GLF_FUZZED(atomicExchange(subgroup_size, subgroup_local_id))), (false ? _GLF_FUZZED(num_workgroup) : (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, 1u * (workgroup_id)))) : _GLF_FUZZED(atomicExchange(subgroup_size, subgroup_local_id)))))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), clamp((workgroup_id), (workgroup_id), _GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id))))) << 0u)) | (workgroup_id))))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u))), (workgroup_id) << 0u)) | (workgroup_id)), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) << _GLF_IDENTITY(0u, max(0u, 0u)), ((workgroup_id) << _GLF_IDENTITY(0u, max(0u, 0u))) / 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << _GLF_IDENTITY(0u, max(0u, 0u))), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(workgroup_id, (workgroup_id) << _GLF_IDENTITY(0u, max(0u, 0u))) : _GLF_FUZZED(workgroup_id)))) | (_GLF_IDENTITY(workgroup_id, (workgroup_id) << _GLF_IDENTITY(0u, max(0u, 0u)))))) | (workgroup_id)), min(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) << 0u, ~ (_GLF_IDENTITY(~ ((workgroup_id) << 0u), (_GLF_IDENTITY(~ ((workgroup_id) << 0u), 0u + (~ ((workgroup_id) << 0u)))) * 1u)))), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)) - _GLF_IDENTITY(0u, (0u) >> 0u)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u), _GLF_IDENTITY((workgroup_id), max(_GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id))), (workgroup_id))) << 0u)))) | (workgroup_id), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)) - 0u), _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))))))) << 0u)))) | (workgroup_id), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id)), workgroup_id)), (workgroup_id) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)) - 0u), _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)))) | (workgroup_id), min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), (workgroup_id) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)) - 0u), _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)))) | (workgroup_id), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)) - 0u), _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))) << 0u)))) | (workgroup_id)))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) << 0u, clamp(_GLF_IDENTITY((workgroup_id) << 0u, uint(uvec4((workgroup_id) << 0u, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY((workgroup_id) << 0u, 0u + ((workgroup_id) << 0u)), _GLF_IDENTITY((workgroup_id) << 0u, ((workgroup_id) << 0u) | 0u))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), max((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), (workgroup_id) << 0u)), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)))))), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), max((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), max((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))))), clamp(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), max((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))))), ~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), max((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))))), ~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), max((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)))))))) ^ 0u)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(workgroup_id))), (workgroup_id) << 0u)), max((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)))))), max(~ _GLF_IDENTITY((~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), max((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) << 0u, ((workgroup_id) << 0u) ^ 0u))))))), ((~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), max((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) << 0u, ((workgroup_id) << 0u) ^ 0u)))))))) | 0u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) << _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 0u))))), max((_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 1u, 1u)))) << 0u)), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), (true ? (_GLF_IDENTITY(workgroup_id, (workgroup_id) << _GLF_IDENTITY(0u, (0u) >> 0u))) : _GLF_FUZZED(workgroup_size)))) | ((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)))), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)))) | (workgroup_id), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) << 0u, (_GLF_IDENTITY((workgroup_id) << 0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_id), ~ (~ ((workgroup_id)))) << 0u), (~ ((workgroup_id) << 0u)) | 0u)))) * 1u))) | (workgroup_id)))), _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), _GLF_IDENTITY((workgroup_id), ~ _GLF_IDENTITY((~ ((workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY((~ ((workgroup_id))), 1u * ((~ ((workgroup_id)))))), 0u ^ ((_GLF_IDENTITY((~ ((workgroup_id))), 1u * ((~ ((workgroup_id)))))))) ^ 0u)))) << 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) & 166633u) | (_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (workgroup_id)), workgroup_id))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) << _GLF_IDENTITY(0u, max(0u, 0u)), ((workgroup_id) << _GLF_IDENTITY(0u, max(0u, 0u))) / 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << _GLF_IDENTITY(0u, max(0u, 0u))), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(workgroup_id, (workgroup_id) << _GLF_IDENTITY(0u, max(0u, 0u))) : _GLF_FUZZED(workgroup_id)))) | (_GLF_IDENTITY(workgroup_id, (workgroup_id) << _GLF_IDENTITY(0u, max(0u, 0u)))))) | (workgroup_id)), min(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) << 0u, ~ (_GLF_IDENTITY(~ ((workgroup_id) << 0u), (_GLF_IDENTITY(~ ((workgroup_id) << 0u), 0u + (~ ((workgroup_id) << 0u)))) * 1u)))), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)) - _GLF_IDENTITY(0u, (0u) >> 0u)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u), _GLF_IDENTITY((workgroup_id), max(_GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id))), (workgroup_id))) << 0u)))) | (workgroup_id), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)) - 0u), _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))))))) << 0u)))) | (workgroup_id), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id)), workgroup_id)), (workgroup_id) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)) - 0u), _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)))) | (workgroup_id), min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), (workgroup_id) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)) - 0u), _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)))) | (workgroup_id), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)) - 0u), _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))) << 0u)))) | (workgroup_id)))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) << 0u, clamp(_GLF_IDENTITY((workgroup_id) << 0u, uint(uvec4((workgroup_id) << 0u, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY((workgroup_id) << 0u, 0u + ((workgroup_id) << 0u)), _GLF_IDENTITY((workgroup_id) << 0u, ((workgroup_id) << 0u) | 0u))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), max((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), (workgroup_id) << 0u)), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)))))), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), max((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), max((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))))), clamp(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), max((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))))), ~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), max((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))))), ~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), max((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)))))))) ^ 0u)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(workgroup_id))), (workgroup_id) << 0u)), max((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)))))), max(~ _GLF_IDENTITY((~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), max((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) << 0u, ((workgroup_id) << 0u) ^ 0u))))))), ((~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), max((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) << 0u, ((workgroup_id) << 0u) ^ 0u)))))))) | 0u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) << _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 0u))))), max((_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 1u, 1u)))) << 0u)), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), (true ? (_GLF_IDENTITY(workgroup_id, (workgroup_id) << _GLF_IDENTITY(0u, (0u) >> 0u))) : _GLF_FUZZED(workgroup_size)))) | ((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)))), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)))) | (workgroup_id), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) << 0u, (_GLF_IDENTITY((workgroup_id) << 0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_id), ~ (~ ((workgroup_id)))) << 0u), (~ ((workgroup_id) << 0u)) | 0u)))) * 1u))) | (workgroup_id)))), _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), _GLF_IDENTITY((workgroup_id), ~ _GLF_IDENTITY((~ ((workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY((~ ((workgroup_id))), 1u * ((~ ((workgroup_id)))))), 0u ^ ((_GLF_IDENTITY((~ ((workgroup_id))), 1u * ((~ ((workgroup_id)))))))) ^ 0u)))) << 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) & 166633u) | (_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (workgroup_id)), workgroup_id))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) << _GLF_IDENTITY(0u, max(0u, 0u)), ((workgroup_id) << _GLF_IDENTITY(0u, max(0u, 0u))) / 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << _GLF_IDENTITY(0u, max(0u, 0u))), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(workgroup_id, (workgroup_id) << _GLF_IDENTITY(0u, max(0u, 0u))) : _GLF_FUZZED(workgroup_id)))) | (_GLF_IDENTITY(workgroup_id, (workgroup_id) << _GLF_IDENTITY(0u, max(0u, 0u)))))) | (workgroup_id)), min(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) << 0u, ~ (_GLF_IDENTITY(~ ((workgroup_id) << 0u), (_GLF_IDENTITY(~ ((workgroup_id) << 0u), 0u + (~ ((workgroup_id) << 0u)))) * 1u)))), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)) - _GLF_IDENTITY(0u, (0u) >> 0u)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u), _GLF_IDENTITY((workgroup_id), max(_GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id))), (workgroup_id))) << 0u)))) | (workgroup_id), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)) - 0u), _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))))))) << 0u)))) | (workgroup_id), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id)), workgroup_id)), (workgroup_id) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)) - 0u), _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)))) | (workgroup_id), min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), (workgroup_id) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)) - 0u), _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)))) | (workgroup_id), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)) - 0u), _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))) << 0u)))) | (workgroup_id)))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) << 0u, clamp(_GLF_IDENTITY((workgroup_id) << 0u, uint(uvec4((workgroup_id) << 0u, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY((workgroup_id) << 0u, 0u + ((workgroup_id) << 0u)), _GLF_IDENTITY((workgroup_id) << 0u, ((workgroup_id) << 0u) | 0u))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), max((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), (workgroup_id) << 0u)), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)))))), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), max((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), max((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))))), clamp(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), max((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))))), ~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), max((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))))), ~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), max((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)))))))) ^ 0u)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(workgroup_id))), (workgroup_id) << 0u)), max((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)))))), max(~ _GLF_IDENTITY((~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), max((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) << 0u, ((workgroup_id) << 0u) ^ 0u))))))), ((~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), max((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) << 0u, ((workgroup_id) << 0u) ^ 0u)))))))) | 0u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) << _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 0u))))), max((_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 1u, 1u)))) << 0u)), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), (true ? (_GLF_IDENTITY(workgroup_id, (workgroup_id) << _GLF_IDENTITY(0u, (0u) >> 0u))) : _GLF_FUZZED(workgroup_size)))) | ((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)))), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)))) | (workgroup_id), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) << 0u, (_GLF_IDENTITY((workgroup_id) << 0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_id), ~ (~ ((workgroup_id)))) << 0u), (~ ((workgroup_id) << 0u)) | 0u)))) * 1u))) | (workgroup_id)))), _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), _GLF_IDENTITY((workgroup_id), ~ _GLF_IDENTITY((~ ((workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY((~ ((workgroup_id))), 1u * ((~ ((workgroup_id)))))), 0u ^ ((_GLF_IDENTITY((~ ((workgroup_id))), 1u * ((~ ((workgroup_id)))))))) ^ 0u)))) << 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) & 166633u) | (_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (workgroup_id)), workgroup_id)))))))))) << 0u)) << 0u))));
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) >> 0u, ((workgroup_base + subgroup_id * subgroup_size) >> 0u) | 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(155062u) : _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) >> 0u, ((workgroup_base + subgroup_id * subgroup_size) >> 0u) | 0u), (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) >> 0u, ((workgroup_base + subgroup_id * subgroup_size) >> 0u) | 0u)) / (1u & 1u))))) + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), clamp(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, min(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u) + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))) - 0u)) / 1u, ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), min(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), min(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), min(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u)))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), min(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), min(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u)))))), max(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), min(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec2(subgroup_local_id + 1, 0u), (uvec2(subgroup_local_id + 1, 0u)) >> uvec2(0u, 0u)))), 1u, 1u)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), min(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u), uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), min(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u), uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u), uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u)))))))))), _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), min(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u)))), max(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), min(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), min(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u)))))), uint(uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), min(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u)))), max(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), min(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), min(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (1u & 1u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), ~ (_GLF_IDENTITY(~ (uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), min(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u)))), max(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), min(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), min(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u))))))), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), _GLF_IDENTITY(min(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u)), max(min(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u)), min(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u)))))), max(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) ^ 0u) + 1, 0u))), 1u, 1u), min(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), min(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-29178))))), 0u))), 1u, 1u), uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u))))))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(uvec2(~ (uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), min(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)), uint(uvec2(subgroup_local_id + 1, 0u)))) - 0u), 1u, 1u)))), max(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), min(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, 0u))), 1u, 1u), uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), min(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u)))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec3((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), min(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)), uint(uvec2(subgroup_local_id + 1, 0u)))) - 0u), 1u, 1u)))), max(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), min(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, 0u))), 1u, 1u), uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), min(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u), uvec3(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), 1u, 1u)))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) >> (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))))), 1u)))))) % subgroup_size) / 1u) | 0u)), (true ? _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ ((0u | 0u) ^ 0u)) % subgroup_size) / 1u, ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(~ ((subgroup_local_id + 1) % subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(~ ((subgroup_local_id + 1) % subgroup_size), (~ ((subgroup_local_id + 1) % subgroup_size)) | (~ ((subgroup_local_id + 1) % subgroup_size))))), _GLF_IDENTITY(~ ((subgroup_local_id + 1) % subgroup_size), max(~ ((subgroup_local_id + 1) % subgroup_size), ~ ((subgroup_local_id + 1) % subgroup_size))), ~ ((subgroup_local_id + 1) % subgroup_size))), (~ ((subgroup_local_id + 1) % subgroup_size)) | (~ ((subgroup_local_id + 1) % subgroup_size)))))) / _GLF_IDENTITY(1u, min(1u, 1u))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) | (_GLF_IDENTITY(0u, (0u) - 0u))))) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) ^ 0u))));
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) | (int(2)))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (false ? _GLF_FUZZED(-25115) : int(2))), _GLF_IDENTITY((true ? _GLF_IDENTITY(int(2), (false ? _GLF_IDENTITY(_GLF_FUZZED(-25115), max(_GLF_FUZZED(-25115), _GLF_FUZZED(-25115))) : int(2))) : _GLF_FUZZED(87163)), ((true ? _GLF_IDENTITY(int(2), (false ? _GLF_IDENTITY(_GLF_FUZZED(-25115), max(_GLF_FUZZED(-25115), _GLF_FUZZED(-25115))) : int(2))) : _GLF_FUZZED(87163))) | 0)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) | 0)) - 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), false, true, _GLF_IDENTITY(true, ! (! (true))))), _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))) || (bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), false, true, true))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) ^ 0)], injectionSwitch[1])).y)) && true), true, false))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 do
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     for(int _injected_loop_counter = _GLF_IDENTITY(((((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) ^ 1) >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) | (8))), int(_GLF_IDENTITY(ivec4(int(8), _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) + _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))), 0, 1)))))), 0, 0), (ivec4(int(8), 0, 0, 0)) ^ ivec4(0, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) | 0)))))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (3) << 0), _GLF_IDENTITY(3, max(_GLF_IDENTITY(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, (3) >> 0), 3)), max(3, 3)), _GLF_IDENTITY(3, (3) | (3))))))), ~ (~ (int(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (3) << 0), _GLF_IDENTITY(3, max(_GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, (3) | (3)))))))))), int(3)))), (ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (3) << 0), _GLF_IDENTITY(3, max(_GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, (3) | (3))))))), _GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (3) << 0), _GLF_IDENTITY(3, max(_GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, (3) | (3))))))))), (_GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (3) << 0), _GLF_IDENTITY(3, max(_GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, (3) | (3))))))))), (~ (~ (int(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (3) << 0), _GLF_IDENTITY(3, max(_GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, (3) | (3)))))))))) | 0)) | (~ (~ (int(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (3) << 0), _GLF_IDENTITY(3, max(_GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, (3) | (3)))))))))))), int(3))))) | (ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (3) << 0), _GLF_IDENTITY(3, max(_GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, (3) | (3))))))), ~ (~ (int(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (3) << 0), _GLF_IDENTITY(3, max(_GLF_IDENTITY(3, max(3, 3)), _GLF_IDENTITY(3, (3) | (3)))))))))), int(3))))))), (int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), (_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), ~ (_GLF_IDENTITY(~ (clamp(0, 0, 0)), 1 * (~ (clamp(0, 0, 0)))))))) * 1), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)), min((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)), (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))))))) | 0), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))), (ivec2(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))))), 0, 0)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))), (true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))), 0 | (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))))) ^ 0))) : _GLF_FUZZED((_injected_loop_counter - _injected_loop_counter)))) >> _GLF_IDENTITY(int(3), int(3))))) >> ivec2(0, 0))), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY((ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))) >> ivec2(0, 0), (_GLF_IDENTITY((ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))) >> ivec2(0, 0), ivec2(0, 0) | ((ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))) >> ivec2(0, 0)))) >> ivec2(0, 0)))), clamp(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))), (ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))) >> ivec2(0, 0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))), (ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))) >> ivec2(0, 0)), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))), (ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(_GLF_IDENTITY(3, 1 * (3))), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))) >> ivec2(0, 0))) + ivec2(0, 0)) : _GLF_FUZZED(ivec2(25769, -3383))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(((_GLF_IDENTITY(1, clamp(1, 1, 1)) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))), (((_GLF_IDENTITY(1, clamp(1, 1, 1)) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))) | (((_GLF_IDENTITY(1, clamp(1, 1, 1)) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))))), (ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))) >> ivec2(0, 0))), max(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))), ~ (_GLF_IDENTITY(~ (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))), (true ? ~ (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)) ^ (int(3))))) : _GLF_FUZZED(-21836)))))) >> _GLF_IDENTITY(int(3), int(3)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))), ~ (_GLF_IDENTITY(~ (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))), (true ? ~ (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)) ^ (int(3))))) : _GLF_FUZZED(-21836)))))) >> _GLF_IDENTITY(int(3), int(3)))), ivec2(1, 1) * (ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))), ~ (_GLF_IDENTITY(~ (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))), (true ? ~ (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)) ^ (int(3))))) : _GLF_FUZZED(-21836)))))) >> _GLF_IDENTITY(int(3), int(3))))))), clamp(~ (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))), ~ (_GLF_IDENTITY(~ (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))), (true ? ~ (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)) ^ (int(3))))) : _GLF_FUZZED(-21836)))))) >> _GLF_IDENTITY(int(3), int(3)))), ivec2(1, 1) * (ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))), ~ (_GLF_IDENTITY(~ (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))), (true ? ~ (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)) ^ (int(3))))) : _GLF_FUZZED(-21836)))))) >> _GLF_IDENTITY(int(3), int(3))))))), ~ (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))), ~ (_GLF_IDENTITY(~ (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))), (true ? ~ (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)) ^ (int(3))))) : _GLF_FUZZED(-21836)))))) >> _GLF_IDENTITY(int(3), int(3)))), ivec2(1, 1) * (ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))), ~ (_GLF_IDENTITY(~ (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))), (true ? ~ (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)) ^ (int(3))))) : _GLF_FUZZED(-21836)))))) >> _GLF_IDENTITY(int(3), int(3))))))), ~ (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))), ~ (_GLF_IDENTITY(~ (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))), (true ? ~ (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)) ^ (int(3))))) : _GLF_FUZZED(-21836)))))) >> _GLF_IDENTITY(int(3), int(3)))), ivec2(1, 1) * (ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))), ~ (_GLF_IDENTITY(~ (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))), (true ? ~ (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)) ^ (int(3))))) : _GLF_FUZZED(-21836)))))) >> _GLF_IDENTITY(int(3), int(3))))))))))), (ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, 0 | (_GLF_IDENTITY(3, min(3, 3))))), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))) >> ivec2(_GLF_IDENTITY(0, (0) / 1), 0))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))), (ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))) >> ivec2(0, 0))))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(0, max(0, 0)) ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))), (ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))) >> ivec2(0, 0)))))) << 0)))), (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) | 0)) >> _GLF_IDENTITY(int(3), int(3))))), min(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, 1 * _GLF_IDENTITY((0), (_GLF_IDENTITY((0), ((0)) | 0)) >> 0)), 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))), (int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(((_GLF_IDENTITY(1, (1) >> 0) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))), min(((_GLF_IDENTITY(1, (1) >> 0) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))), ((_GLF_IDENTITY(1, (1) >> 0) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))))))) | _GLF_IDENTITY(0, max(0, 0))), int(ivec2(_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), (true ? clamp(0, 0, 0) : _GLF_FUZZED(_injected_loop_counter)))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(0, int(int(0))) ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))))))) << 0), 0, 0)))))), min(_GLF_IDENTITY(((_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) ^ 1, min(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) ^ 1, 0 ^ (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) ^ 1, (((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) ^ 1) | (((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) ^ 1)))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, clamp(_GLF_IDENTITY(6, ~ (~ (6))), 6, 6))))), 0 ^ (((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, clamp(_GLF_IDENTITY(6, ~ (~ (6))), 6, 6))))))) ^ 1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), (int(8)) | (int(8)))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) | (8))), int(_GLF_IDENTITY(ivec4(int(8), _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) + 0))), 0, 0), _GLF_IDENTITY((ivec4(int(8), 0, 0, 0)), ivec4(0, 0, 0, 0) + ((ivec4(int(8), 0, 0, 0)))) ^ ivec4(0, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))), min(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))), (int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))))) | 0), int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(ivec3(int(3), 1, 0))), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))))))), (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) | (0)))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))), min(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((- _injected_loop_counter)))) ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))), min(((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((- _injected_loop_counter)))) ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((- _injected_loop_counter)))) ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))), max(((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((- _injected_loop_counter)))) ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((- _injected_loop_counter)))) ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))))))), (int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))))) | 0), int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((_GLF_IDENTITY(1, 0 + (1)) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))))))) << 0), 0, 0)))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) | (8))), int(_GLF_IDENTITY(ivec4(int(8), _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) + 0))), 0, 0), (ivec4(int(8), 0, 0, 0)) ^ ivec4(0, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 ^ (int(3))), clamp(_GLF_IDENTITY(int(3), 0 ^ (int(3))), _GLF_IDENTITY(int(3), 0 ^ (int(3))), _GLF_IDENTITY(int(3), 0 ^ (int(3))))))) >> _GLF_IDENTITY(int(3), int(3)))), ivec2(ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 ^ (int(3))), clamp(_GLF_IDENTITY(int(3), 0 ^ (int(3))), _GLF_IDENTITY(int(3), 0 ^ (int(3))), _GLF_IDENTITY(int(3), 0 ^ (int(3))))))) >> _GLF_IDENTITY(int(3), int(3)))), (ivec2(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 ^ (int(3))), clamp(_GLF_IDENTITY(int(3), 0 ^ (int(3))), _GLF_IDENTITY(int(3), 0 ^ (int(3))), _GLF_IDENTITY(int(3), 0 ^ (int(3))))))) >> _GLF_IDENTITY(int(3), int(3))))) / ivec2(1, 1)))))), (int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), 0 | (_GLF_IDENTITY(int(3), int(3))))) - 0)), (((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), 0 | (_GLF_IDENTITY(int(3), int(3))))) - 0))) / int(_GLF_ONE(1.0, injectionSwitch.y)))))) | 0), int(ivec2(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, int(int(0))), 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) ^ 0)))))))), (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))), min(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) / 1), 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))), _GLF_IDENTITY((int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(0, min(0, 0)) ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))))), ((int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(0, min(0, 0)) ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))))) << 0) | 0), int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))))) | ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))))) >> _GLF_IDENTITY(int(3), int(3))))))))) << 0), 0, 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) | (8))), int(_GLF_IDENTITY(ivec4(int(8), _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) + 0))), 0, 0), (ivec4(int(8), 0, 0, 0)) ^ ivec4(0, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))), int(ivec3(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))), max(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))))), 0, 0)))) >> _GLF_IDENTITY(int(3), int(3))))), min(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))), (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 ^ (_GLF_IDENTITY(int(3), min(int(3), _GLF_IDENTITY(int(3), 0 | (int(3))))))), int(3))))), (int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 ^ (_GLF_IDENTITY(int(3), min(int(3), _GLF_IDENTITY(int(3), 0 | (int(3))))))), int(3)))))) ^ 0)) | 0), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))), clamp(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))), ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))), ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))))))))), (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(0 ^ (int(3)), ~ (~ (_GLF_IDENTITY(0 ^ (int(3)), (false ? _GLF_FUZZED(_injected_loop_counter) : 0 ^ (int(3)))))))))) >> _GLF_IDENTITY(int(3), int(3))))), min(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, (true ? 3 : _GLF_FUZZED(_injected_loop_counter)))), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))), (int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))))) | 0), int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))))))) << 0), 0, 0)))))))), min(((_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) ^ 1, min(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) ^ 1, 0 ^ (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) ^ 1, (((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) ^ 1) | (((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) ^ 1)))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, clamp(_GLF_IDENTITY(6, ~ (~ (6))), 6, 6))))), 0 ^ (((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, clamp(_GLF_IDENTITY(6, ~ (~ (6))), 6, 6))))))) ^ 1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), (int(8)) | (int(8)))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) | (8))), int(_GLF_IDENTITY(ivec4(int(8), _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) + 0))), 0, 0), _GLF_IDENTITY((ivec4(int(8), 0, 0, 0)), ivec4(0, 0, 0, 0) + ((ivec4(int(8), 0, 0, 0)))) ^ ivec4(0, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))), min(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))), (int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))))) | 0), int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(ivec3(int(3), 1, 0))), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))))))), (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) | (0)))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))), min(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((- _injected_loop_counter)))) ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))), min(((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((- _injected_loop_counter)))) ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((- _injected_loop_counter)))) ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))), max(((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((- _injected_loop_counter)))) ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((- _injected_loop_counter)))) ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))))))), (int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))))) | 0), int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((_GLF_IDENTITY(1, 0 + (1)) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))))))) << 0), 0, 0)))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) | (8))), int(_GLF_IDENTITY(ivec4(int(8), _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) + 0))), 0, 0), (ivec4(int(8), 0, 0, 0)) ^ ivec4(0, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 ^ (int(3))), clamp(_GLF_IDENTITY(int(3), 0 ^ (int(3))), _GLF_IDENTITY(int(3), 0 ^ (int(3))), _GLF_IDENTITY(int(3), 0 ^ (int(3))))))) >> _GLF_IDENTITY(int(3), int(3)))), ivec2(ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 ^ (int(3))), clamp(_GLF_IDENTITY(int(3), 0 ^ (int(3))), _GLF_IDENTITY(int(3), 0 ^ (int(3))), _GLF_IDENTITY(int(3), 0 ^ (int(3))))))) >> _GLF_IDENTITY(int(3), int(3)))), (ivec2(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 ^ (int(3))), clamp(_GLF_IDENTITY(int(3), 0 ^ (int(3))), _GLF_IDENTITY(int(3), 0 ^ (int(3))), _GLF_IDENTITY(int(3), 0 ^ (int(3))))))) >> _GLF_IDENTITY(int(3), int(3))))) / ivec2(1, 1)))))), (int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), 0 | (_GLF_IDENTITY(int(3), int(3))))) - 0)), (((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), 0 | (_GLF_IDENTITY(int(3), int(3))))) - 0))) / int(_GLF_ONE(1.0, injectionSwitch.y)))))) | 0), int(ivec2(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, int(int(0))), 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) ^ 0)))))))), (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))), min(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) / 1), 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))), _GLF_IDENTITY((int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(0, min(0, 0)) ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))))), ((int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(0, min(0, 0)) ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))))) << 0) | 0), int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))))) | ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))))) >> _GLF_IDENTITY(int(3), int(3))))))))) << 0), 0, 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) | (8))), int(_GLF_IDENTITY(ivec4(int(8), _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) + 0))), 0, 0), (ivec4(int(8), 0, 0, 0)) ^ ivec4(0, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))), int(ivec3(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))), max(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))))), 0, 0)))) >> _GLF_IDENTITY(int(3), int(3))))), min(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))), (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 ^ (_GLF_IDENTITY(int(3), min(int(3), _GLF_IDENTITY(int(3), 0 | (int(3))))))), int(3))))), (int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 ^ (_GLF_IDENTITY(int(3), min(int(3), _GLF_IDENTITY(int(3), 0 | (int(3))))))), int(3)))))) ^ 0)) | 0), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))), clamp(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))), ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))), ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))))))))), (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(0 ^ (int(3)), ~ (~ (_GLF_IDENTITY(0 ^ (int(3)), (false ? _GLF_FUZZED(_injected_loop_counter) : 0 ^ (int(3)))))))))) >> _GLF_IDENTITY(int(3), int(3))))), min(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, (true ? 3 : _GLF_FUZZED(_injected_loop_counter)))), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))), (int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))))) | 0), int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))))))) << 0), 0, 0)))))))), ((_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) ^ 1, min(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) ^ 1, 0 ^ (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) ^ 1, (((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) ^ 1) | (((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) ^ 1)))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, clamp(_GLF_IDENTITY(6, ~ (~ (6))), 6, 6))))), 0 ^ (((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, clamp(_GLF_IDENTITY(6, ~ (~ (6))), 6, 6))))))) ^ 1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), (int(8)) | (int(8)))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) | (8))), int(_GLF_IDENTITY(ivec4(int(8), _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) + 0))), 0, 0), _GLF_IDENTITY((ivec4(int(8), 0, 0, 0)), ivec4(0, 0, 0, 0) + ((ivec4(int(8), 0, 0, 0)))) ^ ivec4(0, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))), min(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))), (int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))))) | 0), int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(ivec3(int(3), 1, 0))), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))))))), (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) | (0)))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))), min(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((- _injected_loop_counter)))) ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))), min(((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((- _injected_loop_counter)))) ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((- _injected_loop_counter)))) ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))), max(((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((- _injected_loop_counter)))) ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((- _injected_loop_counter)))) ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))))))), (int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))))) | 0), int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((_GLF_IDENTITY(1, 0 + (1)) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))))))) << 0), 0, 0)))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) | (8))), int(_GLF_IDENTITY(ivec4(int(8), _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) + 0))), 0, 0), (ivec4(int(8), 0, 0, 0)) ^ ivec4(0, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 ^ (int(3))), clamp(_GLF_IDENTITY(int(3), 0 ^ (int(3))), _GLF_IDENTITY(int(3), 0 ^ (int(3))), _GLF_IDENTITY(int(3), 0 ^ (int(3))))))) >> _GLF_IDENTITY(int(3), int(3)))), ivec2(ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 ^ (int(3))), clamp(_GLF_IDENTITY(int(3), 0 ^ (int(3))), _GLF_IDENTITY(int(3), 0 ^ (int(3))), _GLF_IDENTITY(int(3), 0 ^ (int(3))))))) >> _GLF_IDENTITY(int(3), int(3)))), (ivec2(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 ^ (int(3))), clamp(_GLF_IDENTITY(int(3), 0 ^ (int(3))), _GLF_IDENTITY(int(3), 0 ^ (int(3))), _GLF_IDENTITY(int(3), 0 ^ (int(3))))))) >> _GLF_IDENTITY(int(3), int(3))))) / ivec2(1, 1)))))), (int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), 0 | (_GLF_IDENTITY(int(3), int(3))))) - 0)), (((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), 0 | (_GLF_IDENTITY(int(3), int(3))))) - 0))) / int(_GLF_ONE(1.0, injectionSwitch.y)))))) | 0), int(ivec2(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, int(int(0))), 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) ^ 0)))))))), (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))), min(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) / 1), 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))), _GLF_IDENTITY((int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(0, min(0, 0)) ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))))), ((int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(0, min(0, 0)) ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))))) << 0) | 0), int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))))) | ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))))) >> _GLF_IDENTITY(int(3), int(3))))))))) << 0), 0, 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) | (8))), int(_GLF_IDENTITY(ivec4(int(8), _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) + 0))), 0, 0), (ivec4(int(8), 0, 0, 0)) ^ ivec4(0, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))), int(ivec3(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))), max(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))))), 0, 0)))) >> _GLF_IDENTITY(int(3), int(3))))), min(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))), (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 ^ (_GLF_IDENTITY(int(3), min(int(3), _GLF_IDENTITY(int(3), 0 | (int(3))))))), int(3))))), (int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 ^ (_GLF_IDENTITY(int(3), min(int(3), _GLF_IDENTITY(int(3), 0 | (int(3))))))), int(3)))))) ^ 0)) | 0), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))), clamp(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))), ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))), ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))))))))), (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(0 ^ (int(3)), ~ (~ (_GLF_IDENTITY(0 ^ (int(3)), (false ? _GLF_FUZZED(_injected_loop_counter) : 0 ^ (int(3)))))))))) >> _GLF_IDENTITY(int(3), int(3))))), min(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, (true ? 3 : _GLF_FUZZED(_injected_loop_counter)))), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))), (int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))))) | 0), int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))))))) << 0), 0, 0)))))))))), ((((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) ^ 1) >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) | (8))), int(_GLF_IDENTITY(ivec4(int(8), _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) + 0))), 0, 0), (ivec4(int(8), 0, 0, 0)) ^ ivec4(0, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(_GLF_IDENTITY(3, max(3, _GLF_IDENTITY(3, min(_GLF_IDENTITY(3, (false ? _GLF_FUZZED(-93741) : 3)), 3))))))))) >> _GLF_IDENTITY(int(3), int(3))))), min(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), min(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) - (0 >> _GLF_IDENTITY(int(8), int(8)))), 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, clamp(0, 0, 0)))), _GLF_IDENTITY(0, clamp(0, 0, 0)))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))), (int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), min(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, clamp(0, 0, 0))), (true ? int(_GLF_IDENTITY(0, clamp(0, 0, 0))) : _GLF_FUZZED(58671))))), _GLF_IDENTITY(0, clamp(0, 0, 0)))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)), (true ? (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 | (int(3)))) : _GLF_FUZZED((2545 & ivec3(-52543, 19935, 18304))[2]))))))) | 0), int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))))))), (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))), min(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))), ~ (~ (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(0, (0) | (0)) ^ (int(3)))))))) >> _GLF_IDENTITY(int(3), int(3))))), (int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), max(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), (_GLF_IDENTITY(0, clamp(0, 0, 0))) >> 0)))) - 0), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))), (true ? _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, clamp(3, 3, 3)), 3))), 0 ^ (int(3)))) : _GLF_FUZZED(433)))) >> _GLF_IDENTITY(int(3), int(3)))))) | 0), int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))))))) << 0), 0, 0)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                      {
                       barrier();
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(true, false)), false, _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (false) || false)), false)), ! (! (bool(bvec4(bool(bvec2(true, false)), false, true, false)))))))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
          }
         do
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_DEAD(false)), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(bool(_GLF_DEAD(false)), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (bool(bool(_GLF_DEAD(false)))) || false)))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
              barrier();
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(_GLF_IDENTITY(bool(false), (bool(false)) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))));
             if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))) && true)))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     do
      {
       atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u)], uint(1), 4, 64, 4);
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0)), 0.0 + (float(mat2x3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0))))) > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (false) || false)), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0)), 0.0 + (float(mat2x3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0))))) > injectionSwitch.y))), _GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(true, (true) && true), false))))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bvec2(bool(bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
          {
           barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> 0) / 1))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) || false)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) / 1), 0);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 else
  {
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false)))) || false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))));
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))));
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 | 0) | 0)); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
            barrier();
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false)))) || false, bool(bvec3((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) || false)))))) || false, true, false)))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                  barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                  barrier();
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (_GLF_IDENTITY(true && (false), (true && (false)) || false)))), true && (false)), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) | 0)) | 0))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1))), (false ? _GLF_FUZZED(workgroup_id) : 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1)))))) < subgroup_size)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-781.887, -17.36, -5.3, _GLF_IDENTITY(5684.9571, mix(float(5684.9571), _GLF_IDENTITY(float(_GLF_FUZZED(-53.89)), 1.0 * (float(_GLF_FUZZED(-53.89)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) : mat2(1.0))) * (injectionSwitch) : _GLF_FUZZED(mod(_GLF_IDENTITY(vec2(449.643, 4574.6260), clamp(vec2(449.643, 4574.6260), vec2(_GLF_IDENTITY(449.643, mix(float(449.643), float(_GLF_FUZZED(3941.7240)), bool(false))), 4574.6260), vec2(449.643, 4574.6260))), -424.587))))).x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) || false)), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), true, true))))) || false))), false || (((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), true, true))))) || false))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) || false)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) || false))) && true)), false || (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) || false)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) || false))) && true)))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, (injectionSwitch.y) - 0.0))))) || false)))))) && true) || false))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), true)))))))
          barrier();
         do
          {
           for(int _injected_loop_counter = (_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), 0 ^ (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(1135.6623) : _GLF_ONE(1.0, injectionSwitch.y)))), max(_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.4) : injectionSwitch.y)), _GLF_IDENTITY(abs(1.0), (abs(1.0)) / 1.0), 0.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(asin(7584.8430)))), 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(vec2(-431.357, -3.4).x)), float(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(vec2(1.0, 0.0), _GLF_IDENTITY((vec2(1.0, 0.0)) * mat2(1.0), _GLF_IDENTITY(((vec2(1.0, 0.0)) * mat2(1.0)) * mat2(1.0), mix(vec2((((vec2(1.0, 0.0)) * mat2(1.0)) * mat2(1.0))[0], _GLF_FUZZED(7103.5637)), vec2(_GLF_FUZZED(-9015.5407), (((vec2(1.0, 0.0)) * mat2(1.0)) * mat2(1.0))[1]), bvec2(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))))))), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7321.1911)), float(0.0), bool(true))), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), sqrt(1.0))), 1.0), (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) ? mat4x3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.4) : injectionSwitch.y)), abs(1.0), 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 1.0) : _GLF_FUZZED(mat4x3(6.4, -9.4, 433.349, -892.231, 8.2, 2.6, -1837.8183, -2088.5120, 8306.5400, -8432.1997, -46.13, 12.89)))))))), (int(_GLF_ONE(1.0, injectionSwitch.y))) * _GLF_IDENTITY(1, (1) | (1))), int(_GLF_ONE(1.0, injectionSwitch.y)))))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(int(int(2)))), clamp(int(2), int(2), int(2))), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) + 0)) - 0), int(2)), (_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, int(ivec2(2, 0)))))) * 1), ((_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((true ? int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)) : _GLF_FUZZED(-96896)), int(int(_GLF_IDENTITY((true ? int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)) : _GLF_FUZZED(-96896)), ((true ? int(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, 0.0, sqrt(abs(1.0))))), max(1.0, 1.0)), injectionSwitch.y)) : _GLF_FUZZED(-96896))) | _GLF_IDENTITY(((true ? int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)) : _GLF_FUZZED(-96896))), max(((true ? int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)) : _GLF_FUZZED(-96896))), ((true ? int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)) : _GLF_FUZZED(-96896)))))))))), 0 ^ (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), injectionSwitch.y))) * 1), int(_GLF_ONE(_GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0))), injectionSwitch.y)))))) << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, clamp(2, 2, 2))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), clamp(int(2), int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) / 1))), clamp(_GLF_IDENTITY(int(2), clamp(int(2), int(2), _GLF_IDENTITY(int(2), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(2), min(int(2), int(2))) : _GLF_FUZZED(-85477))))), _GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2))), _GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))))) - 0), int(2)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(2), int(2))) * 1, 0 ^ ((_GLF_IDENTITY(int(2), int(2))) * 1)), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY((_GLF_IDENTITY(int(2), int(2))) * 1, 0 ^ ((_GLF_IDENTITY(int(2), int(2))) * 1)))))) << (0 >> _GLF_IDENTITY(int(0), int(0))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0, 0 ^ (0)), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) / 1), 0)) | 0), 1)), (int(ivec3(_GLF_IDENTITY(0, 0 ^ (0)), (0 | 0), 1))) | (int(ivec3(_GLF_IDENTITY(0, 0 ^ (0)), (0 | 0), 1))))), (_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0, 0 ^ (0)), (0 | 0), 1)), (int(ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(0 ^ (0), (0 ^ (0)) + 0), clamp(0 ^ _GLF_IDENTITY((0), min((0), (0))), 0 ^ (0), _GLF_IDENTITY(0 ^ (0), int(ivec3(0 ^ (0), 0, 1)))))), (_GLF_IDENTITY(0 | 0, clamp(_GLF_IDENTITY(0 | 0, 0 ^ (0 | 0)), 0 | 0, 0 | 0))), 1))) | (int(ivec3(_GLF_IDENTITY(0, 0 ^ (0)), (0 | 0), 1))))), bool(bvec2(_injected_loop_counter != _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0, 0 ^ (0)), (0 | 0), 1)), (int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, 0 | (0)))), _GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY(0, (-52152 & 0) ^ (0)))) ^ (0), (0 ^ (0)) >> 0)), (0 | 0), 1))) | (int(ivec3(_GLF_IDENTITY(0, 0 ^ (0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (_GLF_IDENTITY(0, ~ (~ (0)))) - 0) | 0), max((_GLF_IDENTITY(0, ~ (~ (0))) | 0), (_GLF_IDENTITY(0, ~ (~ (0))) | 0))), 1))))), true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, cos(0.0), 0.0, abs(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)))), sqrt(1.0), 0.0)))))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, round(length(normalize(1.0)))))) > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             atomicStore(checker[virtual_gid], read, 4, 64, 4);
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               subgroupAll(_GLF_IDENTITY(false, ! (! (false))));
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         else
          {
          }
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
              barrier();
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, ! (! ((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, false, true)), (bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, false, true))) && true))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, false, true)), (bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, false, true))) && true))))))), true, false)))))))), (bool(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x))) - 0.0) > injectionSwitch.y)))) && true))) && true))));
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ (0 | _GLF_IDENTITY(0, (0) | 0)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
            barrier();
           do
            {
             atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (read) >> 0u), _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), max((~ (4)), _GLF_IDENTITY((~ (4)), _GLF_IDENTITY(_GLF_IDENTITY(((~ (4))) | ((~ (4))), 0 | (((~ (4))) | ((~ (4))))), int(int(_GLF_IDENTITY(((~ (4))) | ((~ (4))), 0 | (((~ (4))) | ((~ (4)))))))))))), 4, _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, _GLF_IDENTITY(4, 0 | (4)), 4), clamp(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(25859))), 4))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, max(4, 4)), 4), max(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), _GLF_IDENTITY(clamp(4, 4, 4), min(clamp(4, 4, 4), _GLF_IDENTITY(clamp(4, 4, 4), (clamp(4, 4, 4)) ^ 0))))), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, 4, 4), ~ (~ (clamp(4, 4, 4)))), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (4) | (4)), 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1))) / 1))))), _GLF_IDENTITY(clamp(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), _GLF_IDENTITY(clamp(4, 4, 4), (_GLF_IDENTITY(clamp(4, 4, 4), (clamp(4, 4, 4)) | 0)) | (clamp(4, 4, 4))))), 1)))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) << (0 << _GLF_IDENTITY(int(7), int(7))))) / 1), 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, _GLF_IDENTITY(4, ~ (~ (4)))))), 1), max(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), (_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4)))) - 0), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1)))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, 4, 4), 0 ^ (clamp(4, 4, 4))), clamp(4, 4, 4))), 1))))) | (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1))))))), min(_GLF_IDENTITY(clamp(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(4, 4, 4)) >> 0), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1)))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), _GLF_IDENTITY(clamp(4, 4, 4), clamp(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(4, 4, 4)) >> 0), clamp(4, 4, 4), clamp(4, 4, 4))))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, 4, 4), (_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4)))) - 0), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1)))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), _GLF_IDENTITY(1, ~ (~ (1)))), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1))))) | (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) >> 0), 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1))))))), (clamp(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, _GLF_IDENTITY(4, 0 | (4))), clamp(4, 4, 4))), 1)))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 ^ (4))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(73609) : 4))) ^ 0), 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1)))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), _GLF_IDENTITY(clamp(4, 4, 4), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(clamp(4, 4, 4), (_GLF_IDENTITY(clamp(4, 4, 4), (false ? _GLF_FUZZED(_injected_loop_counter) : clamp(4, 4, 4)))) | (clamp(4, 4, 4))))))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1))))) | (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(_GLF_IDENTITY(4, 0 ^ (4)), 4, 4))), 1)))))))) - 0), clamp(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(clamp(4, 4, 4), (false ? _GLF_FUZZED(-73194) : clamp(4, 4, 4))), max(clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) | (4)), 4, 4), clamp(4, 4, 4))), 1)))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, _GLF_IDENTITY(4, (4) ^ 0)))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_injected_loop_counter))), 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1)))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1)))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1))))) | (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1)))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1))))) | (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1)))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1)))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1))))) | (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1)))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1)))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1))))) | (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1)))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1)))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1))))) | (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1)))))), 0 ^ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1)))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1))))) | (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1)))))))))))))))))), 4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), _GLF_IDENTITY((~ (4)) ^ 0, min((~ (4)) ^ 0, (~ (4)) ^ 0))), 1 * (_GLF_IDENTITY(~ (4), _GLF_IDENTITY((~ (4)) ^ 0, min((~ (4)) ^ 0, (_GLF_IDENTITY(~ (4), (~ (4)) | (~ (4)))) ^ 0)))))), max((_GLF_IDENTITY(~ (4), _GLF_IDENTITY(_GLF_IDENTITY((~ (4)), (true ? (~ (4)) : _GLF_FUZZED(_injected_loop_counter))) ^ 0, min((~ (4)) ^ 0, (~ (4)) ^ 0)))), (_GLF_IDENTITY(~ (4), _GLF_IDENTITY(_GLF_IDENTITY((~ (4)) ^ 0, min((~ (4)) ^ 0, (~ (4)) ^ 0)), (_GLF_IDENTITY((~ (4)) ^ 0, _GLF_IDENTITY(min((~ (4)) ^ 0, (~ (4)) ^ 0), max(min((~ (4)) ^ 0, (~ (4)) ^ 0), min((~ (4)) ^ 0, (~ (4)) ^ 0))))) * ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))))))))), (false ? _GLF_FUZZED(_injected_loop_counter) : clamp(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), max((~ (4)), _GLF_IDENTITY((~ (4)), _GLF_IDENTITY(_GLF_IDENTITY(((~ (4))) | ((~ (4))), 0 | (((~ (4))) | ((~ (4))))), int(int(_GLF_IDENTITY(((~ (4))) | ((~ (4))), 0 | (((~ (4))) | ((~ (4)))))))))))), 4, _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, _GLF_IDENTITY(4, 0 | (4)), 4), clamp(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(25859))), 4))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4))), max(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), _GLF_IDENTITY(clamp(4, 4, 4), min(clamp(4, 4, 4), _GLF_IDENTITY(clamp(4, 4, 4), (clamp(4, 4, 4)) ^ 0))))), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(_GLF_IDENTITY(clamp(4, 4, 4), ~ (~ (clamp(4, 4, 4)))), (_GLF_IDENTITY(clamp(4, 4, 4), ~ (~ (clamp(4, 4, 4))))) >> 0), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (4) | (4)), 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1))) / 1))))), _GLF_IDENTITY(clamp(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), _GLF_IDENTITY(clamp(4, 4, 4), ~ (~ (clamp(4, 4, 4)))))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), _GLF_IDENTITY(clamp(4, 4, 4), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(4, 4, 4)) | 0), int(ivec3(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(4, 4, 4)) | 0), 0, 1)))) | (clamp(4, 4, 4))))), 1)))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, max(4, 4)))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) << (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)))))) / 1), 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, _GLF_IDENTITY(4, (4) / 1), 4), clamp(4, 4, 4))), 1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), min(~ (4), ~ (4)))))), clamp(4, 4, _GLF_IDENTITY(4, ~ (~ (4)))))), 1), max(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), (_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4)))) - 0), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4))))), clamp(4, 4, 4))), 1)))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, _GLF_IDENTITY(4, (4) | 0)), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, 4, 4), 0 ^ (clamp(4, _GLF_IDENTITY(4, (4) - int(_GLF_ZERO(0.0, injectionSwitch.x))), 4))), clamp(4, 4, 4))), 1))))) | (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (4) | (4)), 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, (4) + 0), 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1))))))), min(_GLF_IDENTITY(clamp(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(4, 4, 4)) >> 0), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1)))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(4, 4, 4)) / 1), max(clamp(4, 4, 4), _GLF_IDENTITY(clamp(4, 4, 4), clamp(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(4, 4, 4)) >> 0), clamp(4, 4, 4), clamp(_GLF_IDENTITY(4, 1 * (4)), 4, 4))))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, 4, 4), (_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4)))) - 0), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1)))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), _GLF_IDENTITY(1, ~ (~ (1)))), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, _GLF_IDENTITY(4, min(4, 4))))), 1))))) | (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) >> 0), 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), _GLF_IDENTITY(max(clamp(4, 4, 4), clamp(4, 4, 4)), (max(clamp(4, 4, 4), clamp(4, 4, 4))) ^ 0)), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1))))))), (clamp(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), clamp(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1))), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, _GLF_IDENTITY(4, _GLF_IDENTITY(0 | (4), ~ (_GLF_IDENTITY(~ (0 | (4)), (~ (0 | (4))) | 0))))), clamp(4, 4, 4))), 1)))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 ^ (4))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(73609) : 4))) ^ 0), 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(4, 4, 4)) - 0), clamp(4, 4, 4))), clamp(4, 4, 4))), clamp(4, 4, 4))), 1)))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), _GLF_IDENTITY(clamp(4, 4, 4), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(clamp(4, 4, 4), (_GLF_IDENTITY(clamp(4, 4, 4), (false ? _GLF_FUZZED(_injected_loop_counter) : clamp(4, 4, 4)))) | (clamp(4, 4, 4))))))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, _GLF_IDENTITY(4, max(4, 4)), 4))), 1))))) | (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, ~ (~ (4))))), 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(_GLF_IDENTITY(4, 0 ^ (4)), 4, 4))), 1)))))))) - 0), clamp(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), _GLF_IDENTITY(1, clamp(1, 1, 1))), max(ivec2(_GLF_IDENTITY(clamp(4, 4, _GLF_IDENTITY(4, min(4, 4))), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(clamp(4, 4, 4), (false ? _GLF_FUZZED(-73194) : clamp(4, 4, 4))), max(clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) | (4)), 4, 4), clamp(4, 4, 4))), 1)))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, int(_GLF_ONE(1.0, injectionSwitch.y)) * (4)), 4, 4), max(clamp(4, 4, 4), clamp(4, 4, _GLF_IDENTITY(4, (4) ^ 0)))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_injected_loop_counter))), 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1)))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(4, ~ (~ (4)))))), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, _GLF_IDENTITY(4, (4) + 0), 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, ~ (~ (4))), 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1)))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(4, 4, 4)) | 0), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1))))) | (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0 | (int(ivec4(4, 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), _GLF_IDENTITY(max(clamp(4, 4, 4), clamp(4, 4, 4)), (max(clamp(4, 4, 4), clamp(4, 4, 4))) - 0)), 1)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1)))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), (_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(_injected_loop_counter) : 4))), clamp(4, 4, 4)))) * 1), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (4)), 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1))))) | (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), _GLF_IDENTITY(max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1)), (max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1))) * (ivec2(0, 0) ^ ivec2(1, 1)))), (~ (_GLF_IDENTITY(max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1)), (max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1))) * (ivec2(0, 0) ^ ivec2(1, 1))))) >> ivec2(0, 0)))))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4)), 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1)))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), _GLF_IDENTITY(max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1)), (_GLF_IDENTITY(max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1)), ivec2(0, 0) | (max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1))))) | (max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1))))))) | (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, 4, 4), 0 | (_GLF_IDENTITY(clamp(4, 4, 4), ~ (~ (clamp(4, 4, 4)))))), clamp(4, 4, 4))), 1), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, 4, 4), 0 | (_GLF_IDENTITY(clamp(4, 4, 4), ~ (~ (clamp(4, 4, 4)))))), clamp(4, 4, 4))), 1), clamp(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, 4, 4), 0 | (_GLF_IDENTITY(clamp(4, 4, 4), ~ (~ (clamp(4, 4, 4)))))), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, 4, 4), 0 | (_GLF_IDENTITY(clamp(4, 4, 4), ~ (~ (clamp(4, 4, 4)))))), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, 4, 4), 0 | (_GLF_IDENTITY(clamp(4, 4, 4), ~ (~ (clamp(4, 4, 4)))))), clamp(4, 4, 4))), 1)))) >> ivec2(0, 0)), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, 4, 4), ~ (~ (_GLF_IDENTITY(clamp(4, 4, 4), ~ (~ (clamp(4, 4, 4))))))), clamp(4, 4, 4))), 1)))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1)))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(clamp(4, 4, 4), (_GLF_IDENTITY(clamp(4, 4, 4), (clamp(4, 4, 4)) * 1)) ^ 0), max(clamp(_GLF_IDENTITY(4, int(ivec3(4, 0, 0))), 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1))))) | (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, _GLF_IDENTITY(4, ~ (~ (4)))), clamp(4, 4, _GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (4) ^ 0)))))), 1), max(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), (ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1)) / ivec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1)))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1)))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1))))) | 0)) | (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, _GLF_IDENTITY(4, ~ (~ (4)))), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1)))))), 0 ^ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, _GLF_IDENTITY(4, (4) >> 0), 4))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), _GLF_IDENTITY(max(clamp(4, 4, 4), clamp(4, 4, 4)), min(_GLF_IDENTITY(max(clamp(4, 4, 4), clamp(4, 4, 4)), (true ? _GLF_IDENTITY(max(clamp(4, 4, 4), clamp(4, 4, 4)), clamp(max(clamp(4, 4, 4), clamp(4, 4, 4)), max(clamp(4, 4, 4), clamp(4, 4, 4)), max(clamp(4, 4, 4), clamp(4, 4, 4)))) : _GLF_FUZZED(_injected_loop_counter))), max(clamp(4, 4, 4), clamp(4, 4, 4))))), 1)))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(_GLF_IDENTITY(4, (4) | 0), 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), _GLF_IDENTITY(clamp(4, 4, 4), (clamp(4, 4, 4)) - 0))), 1), ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1))))) | (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), max(ivec2(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), 1), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4))), (_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4)))) / 1), 1)))))))))))))))))), 4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), _GLF_IDENTITY((~ (4)) ^ 0, min((~ (4)) ^ 0, _GLF_IDENTITY((~ (4)), ((~ (4))) - 0) ^ 0))), 1 * (_GLF_IDENTITY(~ (4), _GLF_IDENTITY((~ (4)) ^ 0, min((~ (4)) ^ 0, (_GLF_IDENTITY(~ (4), (~ (4)) | (~ (4)))) ^ 0)))))), max((_GLF_IDENTITY(~ (4), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (4)), (true ? (~ (4)) : _GLF_FUZZED(_injected_loop_counter))), (true ? (~ (4)) : _GLF_FUZZED(_injected_loop_counter))) ^ 0, _GLF_IDENTITY(min((~ (4)) ^ 0, (~ (4)) ^ 0), 0 ^ (min((~ (4)) ^ 0, (~ (4)) ^ 0)))))), (_GLF_IDENTITY(~ (4), _GLF_IDENTITY(_GLF_IDENTITY((~ (4)) ^ 0, min((~ (4)) ^ 0, (~ (4)) ^ 0)), (_GLF_IDENTITY((~ (4)) ^ 0, _GLF_IDENTITY(min((~ (4)) ^ 0, (~ (4)) ^ 0), max(min((~ (4)) ^ 0, _GLF_IDENTITY((~ (4)), (_GLF_IDENTITY((~ (4)), ((~ (4))) >> 0)) << 0) ^ 0), min(_GLF_IDENTITY((~ (4)) ^ 0, (_GLF_IDENTITY((~ (4)) ^ 0, int(int((~ (4)) ^ 0)))) ^ 0), (~ (4)) ^ 0))))) * ((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(_GLF_IDENTITY(5, ~ (~ (5))), _GLF_IDENTITY(5, 0 | (5))))))) >> _GLF_IDENTITY(int(5), int(5))))))))))))), 64, _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4), _GLF_IDENTITY((_GLF_IDENTITY((4), max((4), (4)))), max((_GLF_IDENTITY((4), max((_GLF_IDENTITY(4, min(4, 4))), (4)))), (_GLF_IDENTITY((4), max((4), (4)))))) ^ 0) / 1)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), min((_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) << 0), (4) / 1)), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(4, (4) / 1), 0, 1)), clamp(int(ivec3(_GLF_IDENTITY(4, (4) / 1), 0, 1)), int(ivec3(_GLF_IDENTITY(4, (4) / 1), 0, 1)), int(ivec3(_GLF_IDENTITY(4, (4) / 1), 0, 1)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), min(_GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(4, (4) / 1)))) + 0)), min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1))))) << 0)), min((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(4, (4) / 1)) | (_GLF_IDENTITY(4, (4) / 1)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1)))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), _GLF_IDENTITY(min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1))), ~ (_GLF_IDENTITY(~ (min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1)))), max(~ (min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1)))), ~ (min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1))))))))) : _GLF_FUZZED(_injected_loop_counter)))) - 0)), clamp((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1)))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), _GLF_IDENTITY(min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1))), ~ (_GLF_IDENTITY(~ (min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1)))), max(~ (min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1)))), ~ (min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1))))))))) : _GLF_FUZZED(_injected_loop_counter)))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1)))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), _GLF_IDENTITY(min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1))), ~ (_GLF_IDENTITY(~ (min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1)))), max(~ (min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1)))), ~ (min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1))))))))) : _GLF_FUZZED(_injected_loop_counter)))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1)))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), _GLF_IDENTITY(min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1))), ~ (_GLF_IDENTITY(~ (min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1)))), max(~ (min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1)))), ~ (min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1))))))))) : _GLF_FUZZED(_injected_loop_counter)))) - 0)))) << 0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1)))), (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1))))) << 0)), min((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(4, (4) / 1)) - (0 ^ 0))), min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1))))) << 0)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, 0 ^ (1)))), min(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), 0 ^ ((_GLF_IDENTITY(4, (4) / 1)))), (_GLF_IDENTITY(4, (4) / 1)))), (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), min((_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, clamp(1, 1, 1)))), _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), clamp((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1))))))) << 0)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, (1) / 1)) | (1)))), 0 ^ ((_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 ^ (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))) | (~ (1)))))))))))), ((_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4), 1 * (_GLF_IDENTITY((4), ((4)) ^ 0))) / 1)), min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1))))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), 0 ^ _GLF_IDENTITY(((_GLF_IDENTITY(4, (4) / 1))), (((_GLF_IDENTITY(4, (4) / 1)))) * ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))))) >> 0))) ^ 0, (_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, max((4) / 1, (4) / 1))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), 0 ^ ((_GLF_IDENTITY(4, (4) / 1)))))), max(~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), min((_GLF_IDENTITY(4, _GLF_IDENTITY((4), min((4), (4))) / 1)), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 ^ (4))) / 1))))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), 0 ^ ((_GLF_IDENTITY(4, (4) / 1)))))), _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1))))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), 0 ^ ((_GLF_IDENTITY(4, (4) / 1)))))), _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0)))), ((1) | (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0))))) | ((1) | (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0))))))) * (~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), 0 + (int(4))))), (4) / 1)), min((_GLF_IDENTITY(4, _GLF_IDENTITY((4), (_GLF_IDENTITY((4), (false ? _GLF_FUZZED(-18291) : (4)))) ^ 0) / 1)), (_GLF_IDENTITY(4, (4) / 1))))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), 0 ^ ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 1 * (4))) / 1)))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), 0 ^ ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), _GLF_IDENTITY(int(int((4))), (true ? int(int((4))) : _GLF_FUZZED(_injected_loop_counter)))))) / 1))))))))))))), ((_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(4, (4) / 1)) - 0)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1))))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), 0 ^ ((_GLF_IDENTITY(4, (4) / 1))))), (true ? (_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, max(_GLF_IDENTITY((4) / 1, ~ (~ ((4) / 1))), (4) / 1)))), min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1))))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), 0 ^ ((_GLF_IDENTITY(4, (4) / 1))))) : _GLF_FUZZED(-53118)))), max(~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), ((_GLF_IDENTITY(4, (4) / 1))) >> 0), min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 ^ (4))) / 1))))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), 0 ^ ((_GLF_IDENTITY(4, _GLF_IDENTITY((4), int(int((4)))) / 1)))))), _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1))))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), 0 ^ ((_GLF_IDENTITY(4, (4) / 1)))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), 0 ^ ((_GLF_IDENTITY(4, (4) / 1)))), (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), 0 ^ ((_GLF_IDENTITY(4, (4) / 1))))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), 0 ^ ((_GLF_IDENTITY(4, (4) / 1)))))))))), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0))))) * (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), min(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(4, (4) / 1)) / 1), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), 0 + (int(4))))), (4) / 1)), min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1))))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), 0 ^ ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 1 * (4))) / 1)))))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1))))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), 0 ^ ((_GLF_IDENTITY(4, (4) / 1)))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, 1 * (4)))), 4)), (4) / 1))))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) << 0) / 1)), 0 ^ ((_GLF_IDENTITY(4, (4) / 1))))))) / 1), max(~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), min((_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), (4) / 1)), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 ^ (4))) / 1))))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), 0 ^ ((_GLF_IDENTITY(4, (4) / 1)))))), _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), min((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (4) / 1)), (_GLF_IDENTITY(4, (4) / 1))))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), 0 ^ ((_GLF_IDENTITY(4, (4) / 1)))))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0))))) * (~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), 0 + (int(4))))), (4) / 1)), min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1))))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), 0 ^ ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 1 * (4))) / 1))))))), int(ivec4(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0))))) * (~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), 0 + (int(4))))), (4) / 1)), min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1))))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), 0 ^ ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 1 * (4))) / 1))))))), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))))), 0 ^ ((_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (true ? _GLF_IDENTITY(4, (4) / 1) : _GLF_FUZZED(_injected_loop_counter)))), min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, ~ (~ (1)))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), 0 ^ ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) >> 0)) / 1)))))), max(~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(0 ^ (4), (_GLF_IDENTITY(0 ^ (4), (0 ^ (4)) | (0 ^ (4)))) - 0))) / 1))))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) ^ 0))), 0 ^ ((_GLF_IDENTITY(4, (4) / 1)))))), _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1))))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), 0 ^ ((_GLF_IDENTITY(4, (4) / 1)))))), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0))))) * (~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), 0 + (int(4))))), (4) / 1)), min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1))))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), 0 ^ ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 1 * (4))) / 1)))))))), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1))))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), 0 ^ ((_GLF_IDENTITY(4, (4) / 1)))))), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0))))) * (~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), 0 + (int(4))))), (4) / 1)), min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1))))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), 0 ^ ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 1 * (4))) / 1)))))))), _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1))))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), 0 ^ ((_GLF_IDENTITY(4, (4) / 1)))))), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0))))) * (~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), 0 + (int(4))))), (4) / 1)), min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1))))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), 0 ^ ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 1 * (4))) / 1)))))))), _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1))))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), 0 ^ ((_GLF_IDENTITY(4, (4) / 1)))))), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0))))) * (~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), 0 + (int(4))))), (4) / 1)), min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1))))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), 0 ^ ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 1 * (4))) / 1))))))))))))))))) ^ 0) ^ 0)))));
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         do
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(8), int(8)), (int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.0)), bool(false))), 0.0)), 0.0)), injectionSwitch.x)) >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), ~ (~ (int(8)))))) / 1), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(8), int(8)), (int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.0)), bool(false))), 0.0)), 0.0)), injectionSwitch.x)) >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), ~ (~ (int(8)))))) / 1)) << 0)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 + (1)))) : _GLF_FUZZED(_injected_loop_counter))))) && true); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))
            barrier();
           do
            {
             do
              {
               subgroupAll(_GLF_IDENTITY(true, false || (true)));
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4566.1860)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-4566.1860), (false ? _GLF_FUZZED(9.3) : _GLF_IDENTITY(_GLF_FUZZED(-4566.1860), float(vec4(_GLF_FUZZED(-4566.1860), 0.0, 1.0, 1.0)))))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))));
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             barrier();
            }
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || false))
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              barrier();
             for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)))) && _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (! (true)))))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(dot(vec4(-5578.7430, 1.5, -3316.4462, -8.9), vec4(475.216, 1963.6685, 8.9, -1.0))) : _GLF_ONE(1.0, injectionSwitch.y)))))) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)))) && true), false)))), true))))); _injected_loop_counter ++)
              {
               do
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 ^ (int(_GLF_IDENTITY(3, (3) / 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (int(3)), 0 ^ (~ (int(_GLF_IDENTITY(3, _GLF_IDENTITY((_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(3, min(3, 3))), int(int(~ (_GLF_IDENTITY(3, min(3, 3))))))))), clamp((_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(3, min(3, 3))), int(int(~ (_GLF_IDENTITY(3, min(3, 3))))))))), (_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(3, min(3, 3))), int(int(~ (_GLF_IDENTITY(3, min(3, 3))))))))), _GLF_IDENTITY((_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(3, min(3, 3))), int(int(~ (_GLF_IDENTITY(3, min(3, 3))))))))), int(ivec2((_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(3, min(3, 3))), int(int(~ (_GLF_IDENTITY(3, min(3, 3))))))))), 0))))) << 0)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (int(3)), 0 ^ (~ (int(_GLF_IDENTITY(3, _GLF_IDENTITY((_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(3, min(3, 3))), _GLF_IDENTITY(int(int(~ (_GLF_IDENTITY(3, min(3, 3))))), int(ivec4(int(int(~ (_GLF_IDENTITY(3, min(3, 3))))), int(_GLF_ONE(1.0, injectionSwitch.y)), 0, 1)))), int(int(~ (_GLF_IDENTITY(3, min(3, 3))))))))), clamp((_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(3, min(3, 3))), int(int(~ (_GLF_IDENTITY(3, min(3, 3))))))))), (_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(3, min(3, 3))), int(int(~ (_GLF_IDENTITY(3, min(3, 3))))))))), _GLF_IDENTITY((_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(3, min(3, 3))), int(int(~ (_GLF_IDENTITY(3, _GLF_IDENTITY(min(3, 3), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(min(3, 3), int(ivec3(min(3, 3), 0, 1))))))))))))), int(ivec2((_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(3, min(3, 3))), int(int(~ (_GLF_IDENTITY(3, min(3, 3))))))))), 0))))) << 0)))))), 0 + ((_GLF_IDENTITY(~ (int(3)), 0 ^ (~ (int(_GLF_IDENTITY(3, _GLF_IDENTITY((_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(3, min(3, 3))), _GLF_IDENTITY(int(int(~ (_GLF_IDENTITY(3, min(3, 3))))), int(ivec4(int(int(~ (_GLF_IDENTITY(3, min(3, 3))))), int(_GLF_ONE(1.0, injectionSwitch.y)), 0, 1)))), int(int(~ (_GLF_IDENTITY(3, min(3, 3))))))))), clamp((_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(3, min(3, 3))), int(int(~ (_GLF_IDENTITY(3, min(3, 3))))))))), (_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(3, min(3, 3))), int(int(~ (_GLF_IDENTITY(3, min(3, 3))))))))), _GLF_IDENTITY((_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(3, min(3, 3))), int(int(~ (_GLF_IDENTITY(3, _GLF_IDENTITY(min(3, 3), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(min(3, 3), int(ivec3(min(3, 3), 0, 1))))))))))))), int(ivec2((_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(3, min(3, 3))), int(int(~ (_GLF_IDENTITY(3, min(3, 3))))))))), 0))))) << 0)))))))) : _GLF_FUZZED(_injected_loop_counter))))))); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, determinant(_GLF_IDENTITY(mat4(0.0, determinant(mat2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.9)), bool(false)))))), min(0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9822.0798) : 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, abs(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4922.0666)), float(0.0), bool(true)))) + 0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), max(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), (_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), (dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))) * 1.0)) / 1.0), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), min(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, exp(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), float(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))), (true ? mat4(0.0, determinant(mat2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.9)), bool(false)))))), min(0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9822.0798) : 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, abs(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4922.0666)), float(0.0), bool(true)))) + 0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), max(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), (_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), (dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))) * 1.0)) / 1.0), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), min(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, exp(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), float(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))) : _GLF_FUZZED((mat4(1.3, -7.8, 3438.0918, 4.8, -22.21, -8793.0582, -7.2, 550.203, -0.0, -8487.9332, -6440.2555, -1.0, -169.336, 5.7, -5.2, -6.7) + mat4(3914.4134, -7.6, 478.887, 5704.4424, 422.089, 794.303, 0.3, -2.4, 888.673, -41.68, 5.1, 41.67, 51.74, -2.2, -6.0, 3.9)))))) + (injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(float(_GLF_FUZZED(-8.1)), _GLF_ZERO(0.0, injectionSwitch.x) + (float(_GLF_FUZZED(-8.1)))), bool(false)), _GLF_IDENTITY(max(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false))), clamp(max(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false))), _GLF_IDENTITY(max(mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), (float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) / cos(0.0)), float(_GLF_FUZZED(-8.1)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.0), _GLF_FUZZED(8.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false))), mix(float(max(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false)))), float(_GLF_FUZZED(2286.6176)), bool(false))), max(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-709.377), _GLF_FUZZED(vec2(2535.4869, 39.67).g)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false)), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), clamp(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), max(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(-8.1)), bool(false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false))), (false ? _GLF_FUZZED(0.6) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))), injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false))), mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-8.1, (-8.1) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))), min(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-8.1, (-8.1) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))), (_GLF_FUZZED(_GLF_IDENTITY(-8.1, (-8.1) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))) - 0.0), _GLF_FUZZED(_GLF_IDENTITY(-8.1, (-8.1) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))))), bool(false)))), float(_GLF_FUZZED(-159.648)), bool(false))))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), _GLF_IDENTITY(bool(false), false || (bool(false))))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) + 0.0) > injectionSwitch.y, true, true, true)), bool(bvec4(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true))) || _GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true)), (bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), false || (_GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec2(true, false)), true, false)), bool(bool(bool(bvec3(bool(bvec2(true, false)), true, false))))))))), true, true))) || _GLF_IDENTITY(false, ! (! (false))))))))) || false), true)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, determinant(mat4(0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, abs(0.0), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) * 1.0), mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) * 1.0)), float(_GLF_FUZZED(232.258)), bool(false)))), float(_GLF_FUZZED(vec4(1.9, -9.5, 9.1, -9715.0710).g)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))), clamp(mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0)) - 0.0)) * 1.0)), float(_GLF_FUZZED(vec4(1.9, _GLF_IDENTITY(-9.5, (_GLF_IDENTITY(-9.5, 0.0 + (-9.5))) / 1.0), 9.1, -9715.0710).g)), bool(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) * 1.0)), float(_GLF_FUZZED(vec4(1.9, -9.5, 9.1, -9715.0710).g)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) * 1.0)), float(_GLF_FUZZED(vec4(1.9, -9.5, 9.1, -9715.0710).g)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))).y)))), mix(float(mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) * 1.0)), float(_GLF_FUZZED(vec4(1.9, _GLF_IDENTITY(-9.5, (false ? _GLF_FUZZED(ldexp(-9.4, _injected_loop_counter)) : _GLF_IDENTITY(-9.5, mix(float(-9.5), float(_GLF_FUZZED(-905.174)), bool(false))))), 9.1, -9715.0710).g)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), float(_GLF_FUZZED(228.615)), bool(false)))))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0, 0.0)) + (injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false)), max(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-263.550)), vec2(_GLF_FUZZED(-180.570), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / vec2(1.0, 1.0)).x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)))), min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(float(min(injectionSwitch.x, injectionSwitch.x)), float(_GLF_FUZZED(-8.0)), bool(false))))), float(_GLF_FUZZED(-8.1)), bool(false))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0)))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(-8.1)), bool(false))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false))), _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(clamp(-406.671, 3.6, -989.095)))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))) - tan(abs(0.0))) + 0.0) > injectionSwitch.y, true, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))), true)), false, false, false))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, determinant(mat4(0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, abs(0.0), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) * 1.0), mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) * 1.0)), float(_GLF_FUZZED(232.258)), bool(false)))), float(_GLF_FUZZED(vec4(1.9, -9.5, 9.1, -9715.0710).g)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))), clamp(mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0)) - 0.0)) * 1.0)), float(_GLF_FUZZED(vec4(1.9, _GLF_IDENTITY(-9.5, (_GLF_IDENTITY(-9.5, 0.0 + (-9.5))) / 1.0), 9.1, -9715.0710).g)), bool(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) * 1.0)), float(_GLF_FUZZED(vec4(1.9, -9.5, 9.1, -9715.0710).g)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) * 1.0)), float(_GLF_FUZZED(vec4(1.9, -9.5, 9.1, -9715.0710).g)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))).y)))), mix(float(mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) * 1.0)), float(_GLF_FUZZED(vec4(1.9, _GLF_IDENTITY(-9.5, (false ? _GLF_FUZZED(ldexp(-9.4, _injected_loop_counter)) : _GLF_IDENTITY(-9.5, mix(float(-9.5), float(_GLF_FUZZED(-905.174)), bool(false))))), 9.1, -9715.0710).g)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), float(_GLF_FUZZED(228.615)), bool(false)))))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0, 0.0)) + (injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false)), max(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-263.550)), vec2(_GLF_FUZZED(-180.570), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / vec2(1.0, 1.0)).x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)))), min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(float(min(injectionSwitch.x, injectionSwitch.x)), float(_GLF_FUZZED(-8.0)), bool(false))))), float(_GLF_FUZZED(-8.1)), bool(false))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0)))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(-8.1)), bool(false))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false))), _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(clamp(-406.671, 3.6, -989.095)))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))) - tan(abs(0.0))) + 0.0) > injectionSwitch.y, true, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))), true)), false, false, false))))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, determinant(mat4(0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, abs(0.0), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) * 1.0), mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) * 1.0)), float(_GLF_FUZZED(232.258)), bool(false)))), float(_GLF_FUZZED(vec4(1.9, -9.5, 9.1, -9715.0710).g)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))), clamp(mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0)) - 0.0)) * 1.0)), float(_GLF_FUZZED(vec4(1.9, _GLF_IDENTITY(-9.5, (_GLF_IDENTITY(-9.5, 0.0 + (-9.5))) / 1.0), 9.1, -9715.0710).g)), bool(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) * 1.0)), float(_GLF_FUZZED(vec4(1.9, -9.5, 9.1, -9715.0710).g)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) * 1.0)), float(_GLF_FUZZED(vec4(1.9, -9.5, 9.1, -9715.0710).g)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))).y)))), mix(float(mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) * 1.0)), float(_GLF_FUZZED(vec4(1.9, _GLF_IDENTITY(-9.5, (false ? _GLF_FUZZED(ldexp(-9.4, _injected_loop_counter)) : _GLF_IDENTITY(-9.5, mix(float(-9.5), float(_GLF_FUZZED(-905.174)), bool(false))))), 9.1, -9715.0710).g)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), float(_GLF_FUZZED(228.615)), bool(false)))))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0, 0.0)) + (injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false)), max(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-263.550)), vec2(_GLF_FUZZED(-180.570), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / vec2(1.0, 1.0)).x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)))), min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(float(min(injectionSwitch.x, injectionSwitch.x)), float(_GLF_FUZZED(-8.0)), bool(false))))), float(_GLF_FUZZED(-8.1)), bool(false))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0)))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(-8.1)), bool(false))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8.1)), bool(false))), _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(clamp(-406.671, 3.6, -989.095)))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))) - tan(abs(0.0))) + 0.0) > injectionSwitch.y, true, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))), true)), false, false, false)))))) || false)))))))))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                  barrier();
                 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 | (int(7)))))); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-31.96)))))))
                    barrier();
                  }
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
}
