#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-0.5), _GLF_IDENTITY(_GLF_FUZZED(float(36006u)), (_GLF_IDENTITY(_GLF_FUZZED(float(36006u)), max(_GLF_FUZZED(float(36006u)), _GLF_IDENTITY(_GLF_FUZZED(float(36006u)), min(_GLF_FUZZED(float(36006u)), _GLF_FUZZED(float(36006u))))))) / 1.0)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) || false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)), bool(bvec3(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)), false, false)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)), bool(bvec3(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)), false, false)))), false)))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u)), gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))).x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))).x))), max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u))))), min(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u), uint(uint(_GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u)))))))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u | (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))), (min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize))))[2])).x, gl_WorkGroupSize.x)) >> 0u))))), _GLF_IDENTITY(min(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (_GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) | (_GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) + 0u)))) >> 0u))))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u)))))), min(min(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (_GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) | (_GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) + 0u)))) >> 0u))))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u)))))), min(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (_GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) | (_GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) + 0u)))) >> 0u))))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u)))))))))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (gl_WorkGroupSize.x))) * (1u & 1u))), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u))))), min(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u))))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (_GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), ~ (~ (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))) >> 0u)))))))), min(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u))))), min(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u))))) / 1u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u))))) / 1u, max((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u))))) / 1u, (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u))))) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u))))) / 1u, (false ? _GLF_FUZZED(154982u) : _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u))))) / 1u, ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u))))) / 1u))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u))))) / 1u))), _GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u)))), _GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u)))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), _GLF_IDENTITY((min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u, min(_GLF_IDENTITY((min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u, clamp((min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u, (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u, _GLF_IDENTITY((min(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))).x, gl_WorkGroupSize.x)) >> 0u, clamp((min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u, (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u, (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u)))), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u))))))), min(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, (((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) & 1u))), (_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, (((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) & 1u))), (uvec3(uvec4(gl_WorkGroupSize, (((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) & 1u)))) | (uvec3(uvec4(gl_WorkGroupSize, (((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) & 1u)))))) * uvec3(1u, 1u, 1u))).x, gl_WorkGroupSize.x)) >> 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, (((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) & 1u))), (_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, (((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) & 1u))), (uvec3(uvec4(gl_WorkGroupSize, (((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) & 1u)))) | (uvec3(uvec4(gl_WorkGroupSize, (((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) & 1u)))))) * uvec3(1u, 1u, 1u))).x, gl_WorkGroupSize.x)) >> 0u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, (((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) & 1u))), (_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, (((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) & 1u))), (uvec3(uvec4(gl_WorkGroupSize, (((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) & 1u)))) | (uvec3(uvec4(gl_WorkGroupSize, (((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) & 1u)))))) * uvec3(1u, 1u, 1u))).x, gl_WorkGroupSize.x)) >> 0u)))))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u)))))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u))))), min(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), uvec3(0u, 0u, 0u) ^ (uvec3(uvec3(gl_WorkGroupSize))))).x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u))))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u)))))))), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u))))), min(~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u))))), 0u | ((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u))))))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u)))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u))))), min(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * uvec3(1u, 1u, 1u))))) | (gl_WorkGroupSize)).x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u))))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) >> 0u))))))))))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.9)), bool(false))) > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size + subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) * 1u), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)) + subgroup_local_id, workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) << 0u), max(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) << 0u), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) << 0u))), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) << 0u))) * subgroup_size + subgroup_local_id));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 1 * (1))))) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 1 * (1))))) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1), min(clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1), clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1)))), (uint(_GLF_IDENTITY(clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1), min(clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1), clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1))))) + 0u))))) % subgroup_size))), 1u)), (uint(uvec2((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 1 * (1)))), (subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 1 * (1))))) * 1u)) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), 1u))) << 0u));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), float(mat2x3(float(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), cos(0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0))), float(_GLF_FUZZED((+ -33.17))), bool(false))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0))), injectionSwitch.x)))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(vec3(3695.9900, 9.1, -1.4).s), _GLF_FUZZED(vec3(68.53, -7218.1120, 31.97).b)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), vec2(vec2(injectionSwitch))).g), 0.0 + (_GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).g))))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(! (! _GLF_IDENTITY((true), ! (! ((true))))), bool(bvec3(_GLF_IDENTITY(! (! (true)), ! (_GLF_IDENTITY(! (! (! (true))), ! (! (! (! (! (true)))))))), false, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0 * (injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), float(_GLF_FUZZED(346.976)), bool(false)))) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0 * (injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0 * (injectionSwitch.x), mix(float(_GLF_FUZZED(40.23)), float(1.0 * (injectionSwitch.x)), bool(true)))), min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0 * (injectionSwitch.x), clamp(1.0 * (injectionSwitch.x), 1.0 * (injectionSwitch.x), 1.0 * (injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))))) : _GLF_FUZZED(injectionSwitch.g))), mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mat2(1.0) * (max(injectionSwitch, injectionSwitch)))) * cos(vec2(0.0, 0.0)))).x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), min(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), mix(float(max(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), float(_GLF_FUZZED(-513.503)), bool(false))), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), max(max(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), max(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))))))), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) : _GLF_FUZZED(injectionSwitch.g)))), float(_GLF_FUZZED(-462.607)), bool(false))) > injectionSwitch.y)))) || false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(int(8), int(8))) / 1)), (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), ((0 << _GLF_IDENTITY(int(8), int(8)))) | 0)) ^ 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(3, _GLF_IDENTITY((3) | (3), ~ (~ (_GLF_IDENTITY((3) | (3), 0 + ((_GLF_IDENTITY(_GLF_IDENTITY(3, 0 ^ (_GLF_IDENTITY(3, int(int(3))))), 0 | (_GLF_IDENTITY(3, 0 ^ (_GLF_IDENTITY(3, int(int(3)))))))) | (3)))))))), (false ? _GLF_FUZZED(88398) : ~ (_GLF_IDENTITY(3, (3) | (3)))))))), int(_GLF_IDENTITY(ivec2(int(_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(3, _GLF_IDENTITY((3) | (3), ~ (~ (_GLF_IDENTITY((3) | (3), 0 + ((_GLF_IDENTITY(3, 0 ^ (_GLF_IDENTITY(3, int(int(3)))))) | (3)))))))), (false ? _GLF_FUZZED(88398) : ~ (_GLF_IDENTITY(3, (3) | (3))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(3, _GLF_IDENTITY((3) | (3), ~ (~ (_GLF_IDENTITY((3) | (3), 0 + ((_GLF_IDENTITY(3, 0 ^ (_GLF_IDENTITY(3, int(int(3)))))) | (3)))))))), (false ? _GLF_FUZZED(88398) : ~ (_GLF_IDENTITY(3, (3) | (3))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(3, _GLF_IDENTITY((3) | (3), ~ (~ (_GLF_IDENTITY((3) | (3), 0 + ((_GLF_IDENTITY(3, 0 ^ (_GLF_IDENTITY(3, int(int(3)))))) | (3)))))))), (false ? _GLF_FUZZED(88398) : ~ (_GLF_IDENTITY(3, (3) | (3))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(3, _GLF_IDENTITY((3) | (3), ~ (~ (_GLF_IDENTITY((3) | (3), 0 + ((_GLF_IDENTITY(3, 0 ^ (_GLF_IDENTITY(3, int(int(3)))))) | (3)))))))), (false ? _GLF_FUZZED(88398) : ~ (_GLF_IDENTITY(3, (3) | (3)))))))))), 0), min(ivec2(int(_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(3, _GLF_IDENTITY((3) | (3), ~ (~ (_GLF_IDENTITY((3) | (3), 0 + ((_GLF_IDENTITY(3, 0 ^ (_GLF_IDENTITY(3, int(int(3)))))) | _GLF_IDENTITY((3), (_GLF_IDENTITY((3), ((3)) | ((3)))) | 0)))))))), (false ? _GLF_FUZZED(88398) : ~ (_GLF_IDENTITY(3, (3) | (3)))))))), 0), ivec2(int(_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(3, _GLF_IDENTITY((3) | (3), ~ (~ (_GLF_IDENTITY((3) | (3), 0 + ((_GLF_IDENTITY(3, 0 ^ (_GLF_IDENTITY(3, int(int(3)))))) | (3)))))))), (false ? _GLF_FUZZED(88398) : ~ _GLF_IDENTITY((_GLF_IDENTITY(3, (3) | (3))), min((_GLF_IDENTITY(3, (3) | (3))), (_GLF_IDENTITY(3, (3) | (3)))))))))), 0))))), int(3))) | _GLF_IDENTITY((1), 0 | ((1)))), (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(int(8), int(8))) / 1)), (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), ((0 << _GLF_IDENTITY(int(8), int(8)))) | 0)) ^ 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(3, _GLF_IDENTITY((3) | (3), ~ (~ (_GLF_IDENTITY((3) | (3), 0 + ((_GLF_IDENTITY(_GLF_IDENTITY(3, 0 ^ (_GLF_IDENTITY(3, int(int(3))))), 0 | (_GLF_IDENTITY(3, 0 ^ (_GLF_IDENTITY(3, int(int(3)))))))) | (3)))))))), (false ? _GLF_FUZZED(88398) : ~ (_GLF_IDENTITY(3, (3) | (3)))))))), int(_GLF_IDENTITY(ivec2(int(_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(3, _GLF_IDENTITY((3) | (3), ~ (~ (_GLF_IDENTITY((3) | (3), 0 + ((_GLF_IDENTITY(3, 0 ^ (_GLF_IDENTITY(3, int(int(3)))))) | (3)))))))), (false ? _GLF_FUZZED(88398) : ~ (_GLF_IDENTITY(3, (3) | (3))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(3, _GLF_IDENTITY((3) | (3), ~ (~ (_GLF_IDENTITY((3) | (3), 0 + ((_GLF_IDENTITY(3, 0 ^ (_GLF_IDENTITY(3, int(int(3)))))) | (3)))))))), (false ? _GLF_FUZZED(88398) : ~ (_GLF_IDENTITY(3, (3) | (3))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(3, _GLF_IDENTITY((3) | (3), ~ (~ (_GLF_IDENTITY((3) | (3), 0 + ((_GLF_IDENTITY(3, 0 ^ (_GLF_IDENTITY(3, int(int(3)))))) | (3)))))))), (false ? _GLF_FUZZED(88398) : ~ (_GLF_IDENTITY(3, (3) | (3))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(3, _GLF_IDENTITY((3) | (3), ~ (~ (_GLF_IDENTITY((3) | (3), 0 + ((_GLF_IDENTITY(3, 0 ^ (_GLF_IDENTITY(3, int(int(3)))))) | (3)))))))), (false ? _GLF_FUZZED(88398) : ~ (_GLF_IDENTITY(3, (3) | (3)))))))))), 0), min(ivec2(int(_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(3, _GLF_IDENTITY((3) | (3), ~ (~ (_GLF_IDENTITY((3) | (3), 0 + ((_GLF_IDENTITY(3, 0 ^ (_GLF_IDENTITY(3, int(int(3)))))) | _GLF_IDENTITY((3), (_GLF_IDENTITY((3), ((3)) | ((3)))) | 0)))))))), (false ? _GLF_FUZZED(88398) : ~ (_GLF_IDENTITY(3, (3) | (3)))))))), 0), ivec2(int(_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(3, _GLF_IDENTITY((3) | (3), ~ (~ (_GLF_IDENTITY((3) | (3), 0 + ((_GLF_IDENTITY(3, 0 ^ (_GLF_IDENTITY(3, int(int(3)))))) | (3)))))))), (false ? _GLF_FUZZED(88398) : ~ _GLF_IDENTITY((_GLF_IDENTITY(3, (3) | (3))), min((_GLF_IDENTITY(3, (3) | (3))), (_GLF_IDENTITY(3, (3) | (3)))))))))), 0))))), int(3))) | _GLF_IDENTITY((1), 0 | ((1)))), (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)), uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(int(8), int(8))) / 1)), (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), ((0 << _GLF_IDENTITY(int(8), int(8)))) | 0)) ^ 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(3, _GLF_IDENTITY((3) | (3), ~ (~ (_GLF_IDENTITY((3) | (3), 0 + ((_GLF_IDENTITY(_GLF_IDENTITY(3, 0 ^ (_GLF_IDENTITY(3, int(int(3))))), 0 | (_GLF_IDENTITY(3, 0 ^ (_GLF_IDENTITY(3, int(int(3)))))))) | (3)))))))), (false ? _GLF_FUZZED(88398) : ~ (_GLF_IDENTITY(3, (3) | (3)))))))), int(_GLF_IDENTITY(ivec2(int(_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(3, _GLF_IDENTITY((3) | (3), ~ (~ (_GLF_IDENTITY((3) | (3), 0 + ((_GLF_IDENTITY(3, 0 ^ (_GLF_IDENTITY(3, int(int(3)))))) | (3)))))))), (false ? _GLF_FUZZED(88398) : ~ (_GLF_IDENTITY(3, (3) | (3))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(3, _GLF_IDENTITY((3) | (3), ~ (~ (_GLF_IDENTITY((3) | (3), 0 + ((_GLF_IDENTITY(3, 0 ^ (_GLF_IDENTITY(3, int(int(3)))))) | (3)))))))), (false ? _GLF_FUZZED(88398) : ~ (_GLF_IDENTITY(3, (3) | (3))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(3, _GLF_IDENTITY((3) | (3), ~ (~ (_GLF_IDENTITY((3) | (3), 0 + ((_GLF_IDENTITY(3, 0 ^ (_GLF_IDENTITY(3, int(int(3)))))) | (3)))))))), (false ? _GLF_FUZZED(88398) : ~ (_GLF_IDENTITY(3, (3) | (3))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(3, _GLF_IDENTITY((3) | (3), ~ (~ (_GLF_IDENTITY((3) | (3), 0 + ((_GLF_IDENTITY(3, 0 ^ (_GLF_IDENTITY(3, int(int(3)))))) | (3)))))))), (false ? _GLF_FUZZED(88398) : ~ (_GLF_IDENTITY(3, (3) | (3)))))))))), 0), min(ivec2(int(_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(3, _GLF_IDENTITY((3) | (3), ~ (~ (_GLF_IDENTITY((3) | (3), 0 + ((_GLF_IDENTITY(3, 0 ^ (_GLF_IDENTITY(3, int(int(3)))))) | _GLF_IDENTITY((3), (_GLF_IDENTITY((3), ((3)) | ((3)))) | 0)))))))), (false ? _GLF_FUZZED(88398) : ~ (_GLF_IDENTITY(3, (3) | (3)))))))), 0), ivec2(int(_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(3, _GLF_IDENTITY((3) | (3), ~ (~ (_GLF_IDENTITY((3) | (3), 0 + ((_GLF_IDENTITY(3, 0 ^ (_GLF_IDENTITY(3, int(int(3)))))) | (3)))))))), (false ? _GLF_FUZZED(88398) : ~ _GLF_IDENTITY((_GLF_IDENTITY(3, (3) | (3))), min((_GLF_IDENTITY(3, (3) | (3))), (_GLF_IDENTITY(3, (3) | (3)))))))))), 0))))), int(3))) | _GLF_IDENTITY((1), 0 | ((1)))), (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)))), 4, 64, 4);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(-774.439) : injectionSwitch.y), _GLF_IDENTITY(min(_GLF_IDENTITY((false ? _GLF_FUZZED(-774.439) : injectionSwitch.y), min((false ? _GLF_FUZZED(-774.439) : injectionSwitch.y), (false ? _GLF_FUZZED(-774.439) : injectionSwitch.y))), _GLF_IDENTITY((false ? _GLF_FUZZED(-774.439) : injectionSwitch.y), max((false ? _GLF_FUZZED(-774.439) : injectionSwitch.y), (false ? _GLF_FUZZED(-774.439) : injectionSwitch.y)))), min(_GLF_IDENTITY(min(_GLF_IDENTITY((false ? _GLF_FUZZED(-774.439) : injectionSwitch.y), min((false ? _GLF_FUZZED(-774.439) : injectionSwitch.y), (false ? _GLF_FUZZED(-774.439) : injectionSwitch.y))), _GLF_IDENTITY((false ? _GLF_FUZZED(-774.439) : injectionSwitch.y), max((false ? _GLF_FUZZED(-774.439) : injectionSwitch.y), (false ? _GLF_FUZZED(-774.439) : injectionSwitch.y)))), min(min(_GLF_IDENTITY((false ? _GLF_FUZZED(-774.439) : injectionSwitch.y), min((false ? _GLF_FUZZED(-774.439) : injectionSwitch.y), (false ? _GLF_FUZZED(-774.439) : injectionSwitch.y))), _GLF_IDENTITY((false ? _GLF_FUZZED(-774.439) : injectionSwitch.y), max((false ? _GLF_FUZZED(-774.439) : injectionSwitch.y), (false ? _GLF_FUZZED(-774.439) : injectionSwitch.y)))), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-774.439) : injectionSwitch.y), min((false ? _GLF_FUZZED(-774.439) : injectionSwitch.y), (false ? _GLF_FUZZED(-774.439) : injectionSwitch.y))), _GLF_IDENTITY((false ? _GLF_FUZZED(-774.439) : injectionSwitch.y), max((false ? _GLF_FUZZED(-774.439) : injectionSwitch.y), (false ? _GLF_FUZZED(-774.439) : injectionSwitch.y)))))), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-774.439) : injectionSwitch.y), min((false ? _GLF_FUZZED(-774.439) : injectionSwitch.y), (false ? _GLF_FUZZED(-774.439) : injectionSwitch.y))), _GLF_IDENTITY((false ? _GLF_FUZZED(-774.439) : injectionSwitch.y), max((false ? _GLF_FUZZED(-774.439) : injectionSwitch.y), (false ? _GLF_FUZZED(-774.439) : injectionSwitch.y)))))))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(47.96)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), 0.0 + (float(float(injectionSwitch.y))))), ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), subgroup_local_id), (max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), subgroup_local_id)) | (max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), subgroup_local_id)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_local_id), max(~ (subgroup_local_id), ~ (subgroup_local_id))), min(~ (subgroup_local_id), ~ (subgroup_local_id))))), (_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (subgroup_local_id)), min((~ (subgroup_local_id)), _GLF_IDENTITY((~ (subgroup_local_id)), min((~ (subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(uint(uvec4((subgroup_local_id), 0u, 1u, 1u)), uint(uvec2(uint(uvec4((subgroup_local_id), 0u, 1u, 1u)), 0u))))), ((~ _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(uint(uvec4((subgroup_local_id), 0u, 1u, 1u)), uint(uvec2(uint(uvec4((subgroup_local_id), 0u, 1u, 1u)), 0u)))))) + 0u), (_GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4((subgroup_local_id), 0u, 1u, 1u)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (_GLF_IDENTITY(uint(uvec4((subgroup_local_id), 0u, 1u, 1u)), ~ (~ (uint(uvec4((subgroup_local_id), 0u, 1u, 1u))))))), uint(uvec2(uint(uvec4((subgroup_local_id), 0u, 1u, 1u)), 0u))))), ((~ _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(uint(uvec4((subgroup_local_id), 0u, 1u, 1u)), uint(uvec2(uint(uvec4((subgroup_local_id), 0u, 1u, 1u)), 0u)))))) | ((~ _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(uint(uvec4((subgroup_local_id), 0u, 1u, 1u)), uint(uvec2(uint(uvec4((subgroup_local_id), 0u, 1u, 1u)), 0u)))))))) / (((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uvec3(_GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u), 1u, (1u | 1u)))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 0u)))))))) ^ 0u) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), exp(0.0) * (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, log(sqrt(1.0)), 1.0, 1.0)), min(vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 0.0, 0.0, 0.0, 1.0, log(sqrt(1.0)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-96.84)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), min(mix(float(_GLF_FUZZED(-96.84)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-96.84)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), float(mat3(mix(float(_GLF_FUZZED(-96.84)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))), float(mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-96.84)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), min(mix(float(_GLF_FUZZED(-96.84)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-96.84)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), float(mat3(mix(float(_GLF_FUZZED(-96.84)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))), 0.0, abs(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(1.0), 1.0))))), vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), log(abs(1.0)), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-9554.7016)), float(0.0), bool(true)), min(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-9554.7016)), float(0.0), bool(true)), (mix(float(_GLF_FUZZED(-9554.7016)), float(0.0), bool(true))) + 0.0), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-9554.7016)), float(0.0), bool(true)), float(mat3x4(mix(float(_GLF_FUZZED(-9554.7016)), float(0.0), bool(true)), 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(sqrt(0.0), float(vec3(_GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), sqrt(0.0))), 0.0, 0.0))), 0.0, 0.0), (true ? mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), log(abs(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 1.0, 1.0))), 1.0)))), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), sqrt(0.0), 0.0, 0.0) : _GLF_FUZZED(mat4(_GLF_IDENTITY(vec4(6085.4995, -37.68, -1349.6344, 7.1), max(vec4(6085.4995, -37.68, -1349.6344, 7.1), vec4(6085.4995, -37.68, -1349.6344, 7.1))), vec4(-2.2, -2.4, 618.842, 8674.7126), vec4(-3.6, -862.088, 3489.3822, -6.8), vec4(7.1, 5.2, 8818.3555, 2410.3598)))))), clamp(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(log(abs(1.0)), clamp(_GLF_IDENTITY(log(abs(1.0)), (true ? _GLF_IDENTITY(log(abs(1.0)), clamp(log(abs(1.0)), log(abs(1.0)), log(abs(1.0)))) : _GLF_FUZZED(-0.8))), log(abs(1.0)), _GLF_IDENTITY(log(abs(1.0)), 1.0 * (log(abs(1.0)))))), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0), (true ? mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), log(abs(1.0)), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0) : _GLF_FUZZED(mat4(vec4(6085.4995, -37.68, -1349.6344, 7.1), vec4(-2.2, -2.4, 618.842, 8674.7126), vec4(-3.6, -862.088, 3489.3822, -6.8), vec4(7.1, 5.2, 8818.3555, 2410.3598)))))), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), log(abs(1.0)), 0.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (mat2(1.0, 0.0, 0.0, 1.0)) + mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(5738.2181), _GLF_FUZZED(-6.6)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), _GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0), (true ? mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), log(abs(1.0)), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5.7)), bool(false))), 1.0, sqrt(0.0), 0.0, 0.0) : _GLF_FUZZED(mat4(vec4(_GLF_IDENTITY(6085.4995, (6085.4995) + 0.0), -37.68, -1349.6344, 7.1), vec4(-2.2, -2.4, 618.842, _GLF_IDENTITY(8674.7126, max(_GLF_IDENTITY(8674.7126, (true ? 8674.7126 : _GLF_FUZZED(-8.0))), 8674.7126))), vec4(-3.6, -862.088, 3489.3822, -6.8), vec4(7.1, 5.2, 8818.3555, 2410.3598)))))), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), log(abs(1.0)), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0), (true ? mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), log(abs(1.0)), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0) : _GLF_FUZZED(mat4(vec4(6085.4995, -37.68, -1349.6344, 7.1), vec4(-2.2, -2.4, 618.842, 8674.7126), vec4(-3.6, -862.088, 3489.3822, -6.8), vec4(7.1, 5.2, 8818.3555, 2410.3598)))))))))) * (injectionSwitch)), 0.0, 0.0, 0.0, 1.0, log(sqrt(1.0)), 1.0, 1.0))))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (read) >> (0u & (~ _GLF_IDENTITY(89131u, (89131u) | (_GLF_IDENTITY(89131u, (89131u) - 0u)))))), 4, 64, 4);
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  return;
}
