#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(false, _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))) || false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, (false) || false))))))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(((false)), ! (_GLF_IDENTITY(! (((false))), ! (! (! (((false)))))))) && true) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), false)))))))))) && true) && true)))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), min((1u), _GLF_IDENTITY((1u), 0u | ((1u)))))) >> 0u), 0u + (_GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), min((1u), _GLF_IDENTITY((1u), 0u | ((1u)))))) >> 0u))))), 1u, 1u)))), ~ (~ (_GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), min((1u), _GLF_IDENTITY((1u), 0u | ((1u)))))) >> 0u))), 1u, 1u)))), uvec3(uvec3(uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), min((1u), _GLF_IDENTITY((1u), 0u | ((1u)))))) >> 0u))), 1u, 1u)))))))))), (_GLF_IDENTITY(true ? uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))), _GLF_IDENTITY(1u, 0u | (1u)))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(150074u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (150074u)), 196340u, 139945u)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)), uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)), uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, _GLF_IDENTITY(76935u, clamp(76935u, 76935u, 76935u)), 5550u))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)), uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u))))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)), uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)))))), (uvec3(_GLF_IDENTITY(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)), uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u))))))) - uvec3(0u, 0u, 0u))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec3(82206u, 76935u, 5550u), uvec3(uvec4(uvec3(82206u, 76935u, 5550u), 0u)))), uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec3(82206u, 76935u, 5550u), (true ? uvec3(82206u, 76935u, 5550u) : _GLF_FUZZED(uvec3(199861u, 137359u, 120777u))))), uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)))))), (uvec3(_GLF_IDENTITY(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)), _GLF_IDENTITY(uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)))), clamp(_GLF_IDENTITY(uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)))), (uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u))))) >> uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)))), uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u))))))))) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec3(82206u, 76935u, 5550u), (true ? uvec3(82206u, 76935u, 5550u) : _GLF_FUZZED(uvec3(199861u, 137359u, 120777u))))), uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)))))), (uvec3(_GLF_IDENTITY(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)), _GLF_IDENTITY(uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)))), clamp(_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)), max(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)), _GLF_FUZZED(uvec3(82206u, 76935u, 5550u)))))), (uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u))))) >> uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)))), uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u))))))))) - uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec3(82206u, 76935u, 5550u), (true ? uvec3(82206u, 76935u, 5550u) : _GLF_FUZZED(uvec3(199861u, 137359u, 120777u))))), uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, _GLF_IDENTITY(76935u, clamp(76935u, 76935u, 76935u)), 5550u)))))), ~ (_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec3(82206u, 76935u, 5550u), (true ? uvec3(82206u, 76935u, 5550u) : _GLF_FUZZED(uvec3(199861u, 137359u, 120777u))))), _GLF_IDENTITY(uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, _GLF_IDENTITY(76935u, clamp(76935u, 76935u, 76935u)), 5550u)))), (uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, _GLF_IDENTITY(76935u, clamp(76935u, 76935u, 76935u)), 5550u))))) >> uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u) | (~ (uvec3(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec3(82206u, 76935u, 5550u), (true ? uvec3(82206u, 76935u, 5550u) : _GLF_FUZZED(uvec3(199861u, 137359u, 120777u))))), uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, _GLF_IDENTITY(76935u, clamp(76935u, 76935u, 76935u)), 5550u))))))))))), (uvec3(_GLF_IDENTITY(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)), _GLF_IDENTITY(uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)))), clamp(_GLF_IDENTITY(uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)))), (uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u))))) >> uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)))), uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u))))))))) - uvec3(0u, 0u, 0u))))), (true ? uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(82206u, 76935u, 5550u), (true ? uvec3(82206u, 76935u, 5550u) : _GLF_FUZZED(uvec3(199861u, 137359u, 120777u)))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(82206u, 76935u, 5550u), (true ? uvec3(82206u, 76935u, 5550u) : _GLF_FUZZED(uvec3(199861u, 137359u, 120777u))))))), uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)))))), (uvec3(_GLF_IDENTITY(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)), _GLF_IDENTITY(uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)))), clamp(_GLF_IDENTITY(uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)))), (uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u))))) >> uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)))), uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u))))))))) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec3(82206u, 76935u, 5550u), (true ? uvec3(82206u, 76935u, 5550u) : _GLF_FUZZED(uvec3(199861u, 137359u, 120777u))))), uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)))))), (uvec3(_GLF_IDENTITY(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)), _GLF_IDENTITY(uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)))), clamp(_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)), max(_GLF_FUZZED(uvec3(82206u, _GLF_IDENTITY(76935u, (76935u) << 0u), 5550u)), _GLF_FUZZED(uvec3(82206u, 76935u, 5550u)))))), (uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u))))) >> uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)))), uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u))))))))) - uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec3(82206u, 76935u, 5550u), (true ? uvec3(82206u, 76935u, 5550u) : _GLF_FUZZED(uvec3(199861u, 137359u, 120777u))))), uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, _GLF_IDENTITY(76935u, clamp(76935u, 76935u, 76935u)), 5550u)))))), ~ (_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec3(82206u, 76935u, 5550u), (true ? uvec3(82206u, 76935u, 5550u) : _GLF_FUZZED(uvec3(199861u, 137359u, 120777u))))), uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, _GLF_IDENTITY(76935u, clamp(76935u, 76935u, 76935u)), 5550u))))))), uvec3(0u, 0u, 0u) | (~ (uvec3(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec3(82206u, 76935u, 5550u), (true ? uvec3(82206u, 76935u, 5550u) : _GLF_FUZZED(uvec3(199861u, 137359u, 120777u))))), uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, _GLF_IDENTITY(76935u, clamp(76935u, 76935u, 76935u)), 5550u))))))))))), (uvec3(_GLF_IDENTITY(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)), _GLF_IDENTITY(uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)))), clamp(_GLF_IDENTITY(uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)))), (uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)))), (uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u))))) ^ uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u))))))))) - uvec3(0u, 0u, 0u))))) : _GLF_FUZZED(uvec3(161527u, 36140u, 9675u))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)), uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u))))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)), uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)))))), (uvec3(_GLF_IDENTITY(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)), uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, _GLF_IDENTITY(5550u, (5550u) * 1u)))))))) - uvec3(0u, 0u, 0u))))))) - uvec3(0u, 0u, 0u))) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u)))))), (true ? _GLF_IDENTITY(true ? uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), ~ (~ (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (uvec3(gl_WorkGroupSize)) | (uvec3(gl_WorkGroupSize)))))))), _GLF_IDENTITY(1u, (1u) | (1u)))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec3(150074u, 196340u, 139945u)) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(_GLF_IDENTITY(82206u, clamp(82206u, 82206u, _GLF_IDENTITY(82206u, _GLF_IDENTITY(uint(uint(82206u)), (uint(uint(82206u))) >> 0u)))), 76935u, 5550u)), uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)))))), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(min(uvec3(66916u, 106079u, 125878u), (uvec3(124968u, 37304u, 6081u) - 199812u))), (_GLF_FUZZED(min(uvec3(66916u, 106079u, 125878u), (uvec3(124968u, 37304u, 6081u) - 199812u)))) + uvec3(0u, 0u, 0u)) : (false ? _GLF_FUZZED(uvec3(150074u, 196340u, 139945u)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(82206u, (82206u) - 0u), 76935u, 5550u), min(uvec3(_GLF_IDENTITY(82206u, (82206u) - 0u), 76935u, 5550u), uvec3(_GLF_IDENTITY(82206u, (82206u) - 0u), 76935u, 5550u)))), uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u))))))), (true ? (false ? _GLF_IDENTITY(_GLF_FUZZED(min(uvec3(66916u, 106079u, 125878u), (uvec3(124968u, 37304u, 6081u) - 199812u))), uvec3(uvec3(_GLF_FUZZED(min(uvec3(66916u, 106079u, 125878u), (uvec3(124968u, 37304u, 6081u) - 199812u)))))) : (false ? _GLF_FUZZED(uvec3(150074u, 196340u, _GLF_IDENTITY(139945u, clamp(139945u, 139945u, _GLF_IDENTITY(139945u, ~ (~ (139945u))))))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(_GLF_IDENTITY(82206u, (82206u) - 0u), 76935u, 5550u)), uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u))))))) : _GLF_FUZZED(_GLF_IDENTITY(uvec3(132999u, 166803u, 41914u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(132999u, 166803u, 41914u), 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uvec3(132999u, 166803u, 41914u), 1u)))), (uvec3(_GLF_IDENTITY(uvec4(uvec3(132999u, 166803u, 41914u), 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uvec3(132999u, 166803u, 41914u), 1u))))) | (uvec3(_GLF_IDENTITY(uvec4(uvec3(132999u, 166803u, 41914u), 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uvec3(132999u, 166803u, 41914u), 1u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(132999u, 166803u, 41914u), 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uvec3(132999u, 166803u, 41914u), 1u)))), (uvec3(_GLF_IDENTITY(uvec4(uvec3(132999u, 166803u, 41914u), 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uvec3(132999u, 166803u, 41914u), 1u))))) | (uvec3(_GLF_IDENTITY(uvec4(uvec3(132999u, 166803u, 41914u), 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uvec3(132999u, 166803u, 41914u), 1u)))))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(132999u, 166803u, 41914u), 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uvec3(132999u, 166803u, 41914u), 1u)))), (uvec3(_GLF_IDENTITY(uvec4(uvec3(132999u, 166803u, 41914u), 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uvec3(132999u, 166803u, 41914u), 1u))))) | (uvec3(_GLF_IDENTITY(uvec4(uvec3(132999u, 166803u, 41914u), 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uvec3(132999u, 166803u, 41914u), 1u))))))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(132999u, 166803u, 41914u), 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uvec3(132999u, 166803u, 41914u), 1u)))), (uvec3(_GLF_IDENTITY(uvec4(uvec3(132999u, 166803u, 41914u), 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uvec3(132999u, 166803u, 41914u), 1u))))) | (uvec3(_GLF_IDENTITY(uvec4(uvec3(132999u, 166803u, 41914u), 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uvec3(132999u, 166803u, 41914u), 1u)))))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(132999u, 166803u, 41914u), 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uvec3(132999u, 166803u, 41914u), 1u)))), (uvec3(_GLF_IDENTITY(uvec4(uvec3(132999u, 166803u, 41914u), 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uvec3(132999u, 166803u, 41914u), 1u))))) | (uvec3(_GLF_IDENTITY(uvec4(uvec3(132999u, 166803u, 41914u), 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uvec3(132999u, 166803u, 41914u), 1u)))))))))))))), max(true ? uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize))), (false ? _GLF_FUZZED(uvec3(173613u, 106563u, 25559u)) : (_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize))))) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(0u, 0u, 0u) | (uvec3(gl_WorkGroupSize)))), ~ (~ (_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec4(uvec3(uvec3(gl_WorkGroupSize)), 1u)))))), uvec3(uvec3(gl_WorkGroupSize))))), 1u), min(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) / uvec3(1u, 1u, 1u), ((gl_WorkGroupSize) / uvec3(1u, 1u, 1u)) / uvec3(1u, 1u, 1u))), gl_WorkGroupSize), min(_GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize), clamp(max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize), max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize), max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize))), max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize))), max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))), (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize))), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) / uvec3(1u, 1u, 1u), ((gl_WorkGroupSize) / uvec3(1u, 1u, 1u)) / uvec3(1u, 1u, 1u))), gl_WorkGroupSize), min(_GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize), clamp(max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize), max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize), max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize))), max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize))), max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))), (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize))), _GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) / uvec3(1u, 1u, 1u), ((gl_WorkGroupSize) / uvec3(1u, 1u, 1u)) / uvec3(1u, 1u, 1u))), gl_WorkGroupSize), min(_GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize), clamp(max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize), max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize), max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize))), max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize))), max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))), (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize))), _GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) / uvec3(1u, 1u, 1u), ((gl_WorkGroupSize) / uvec3(1u, 1u, 1u)) / uvec3(1u, 1u, 1u))), gl_WorkGroupSize), min(_GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize), clamp(max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize), max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize), max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize))), max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize))), max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))), (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize))))))) + uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(atomicAnd(subgroup_size, num_workgroup)) : 0u)), 0u)))), _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), _GLF_IDENTITY(min(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), ~ (~ (_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec4(uvec3(uvec3(gl_WorkGroupSize)), 1u)))))), uvec3(uvec3(gl_WorkGroupSize))), min(_GLF_IDENTITY(min(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), ~ (~ (_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec4(uvec3(uvec3(gl_WorkGroupSize)), 1u)))))), uvec3(uvec3(gl_WorkGroupSize))), min(min(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), ~ (~ (_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec4(uvec3(uvec3(gl_WorkGroupSize)), 1u)))))), uvec3(uvec3(gl_WorkGroupSize))), _GLF_IDENTITY(min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (uvec3(gl_WorkGroupSize)) / uvec3(1u, 1u, 1u))), ~ (~ (_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec4(uvec3(uvec3(gl_WorkGroupSize)), 1u)))))), uvec3(uvec3(gl_WorkGroupSize))), ~ (~ (min(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), ~ (~ (_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec4(uvec3(uvec3(gl_WorkGroupSize)), 1u)))))), uvec3(uvec3(gl_WorkGroupSize)))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (uvec3(uvec3(gl_WorkGroupSize))) | uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec4(uvec3(uvec3(gl_WorkGroupSize)), 1u)))))), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u))))))))))), 1u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize))) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))), uvec3(uvec4((gl_WorkGroupSize), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / 1u), 0u | (_GLF_IDENTITY(1u, (1u) / 1u)))))) << uvec3(0u, 0u, 0u)))), ~ (~ (_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec4(uvec3(uvec3(gl_WorkGroupSize)), 1u)))))), uvec3(uvec3(gl_WorkGroupSize))))), 1u), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize))) | (_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize)))))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec4(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)))), 1u))), (_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec4(uvec3(uvec3(gl_WorkGroupSize)), 1u)))) ^ uvec3(0u, 0u, 0u))))), uvec3(uvec3(gl_WorkGroupSize))))), 1u)), (~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize))) + uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u)))), _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))), _GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))) - _GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ (uvec3(1u, 1u, 1u) ^ uvec3(0u, 0u, 0u))), max((uvec3(1u, 1u, 1u) ^ (uvec3(1u, 1u, 1u) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)))), (uvec3(1u, 1u, 1u) ^ (uvec3(1u, 1u, 1u) ^ uvec3(0u, 0u, 0u))))), clamp((uvec3(uvec3(gl_WorkGroupSize))) - _GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ (uvec3(1u, 1u, 1u) ^ uvec3(0u, 0u, 0u))), max((uvec3(1u, 1u, 1u) ^ (uvec3(1u, 1u, 1u) ^ uvec3(0u, 0u, 0u))), (uvec3(1u, 1u, 1u) ^ (uvec3(1u, 1u, 1u) ^ uvec3(0u, 0u, 0u))))), (uvec3(uvec3(gl_WorkGroupSize))) - _GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ (uvec3(1u, 1u, 1u) ^ uvec3(0u, 0u, 0u))), max((uvec3(1u, 1u, 1u) ^ (uvec3(1u, 1u, 1u) ^ uvec3(0u, 0u, 0u))), _GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ (uvec3(1u, 1u, 1u) ^ uvec3(0u, 0u, 0u))), max((uvec3(1u, 1u, 1u) ^ (uvec3(1u, 1u, 1u) ^ uvec3(0u, 0u, 0u))), (uvec3(1u, 1u, 1u) ^ (uvec3(1u, 1u, 1u) ^ uvec3(0u, 0u, 0u))))))), (uvec3(uvec3(gl_WorkGroupSize))) - _GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ (uvec3(1u, 1u, 1u) ^ uvec3(0u, 0u, 0u))), max((uvec3(1u, 1u, 1u) ^ (uvec3(1u, 1u, 1u) ^ uvec3(0u, 0u, 0u))), (uvec3(1u, 1u, 1u) ^ (uvec3(1u, 1u, 1u) ^ uvec3(0u, 0u, 0u)))))))), ~ (~ (_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec4(uvec3(uvec3(gl_WorkGroupSize)), 1u)))))), uvec3(uvec3(gl_WorkGroupSize))))), 1u))) ^ uvec4(0u, 0u, 0u, 0u))))))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)), (false ? _GLF_FUZZED(uvec3(150074u, 196340u, 139945u)) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)), uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, _GLF_IDENTITY(76935u, max(76935u, 76935u)), 5550u))))))), true ? uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))), 1u)) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)), (false ? _GLF_FUZZED(uvec3(150074u, 196340u, 139945u)) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u)), uvec3(uvec3(_GLF_FUZZED(uvec3(82206u, 76935u, 5550u))))))))) : _GLF_FUZZED(uvec3(77555u, 126160u, _GLF_IDENTITY(181861u, (false ? _GLF_FUZZED(packUnorm2x16(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0, abs(_GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1297.9481))), 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))))) : 181861u))))))))).x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) | (gl_WorkGroupID[2]))))) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) >> _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) | (gl_WorkGroupID[2]))))) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) >> _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u)))))))), clamp((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) | (gl_WorkGroupID[2]))))) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_size)))), (~ (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_size))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u)))))))), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) | (gl_WorkGroupID[2]))))) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) >> _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u)))))))), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) | (gl_WorkGroupID[2]))))) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) >> _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u))))))))))) - uvec3(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u)))), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))), 0u, 0u)))), min((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) | (gl_WorkGroupID[2]))))) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) >> _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) | (gl_WorkGroupID[2]))))) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) >> _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u)))))))), clamp((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) | (gl_WorkGroupID[2]))))) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_size)))), (~ (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_size))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u)))))))), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) | (gl_WorkGroupID[2]))))) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) >> _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u)))))))), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) | (gl_WorkGroupID[2]))))) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) >> _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u))))))))))) - uvec3(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u)))), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))), 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) | (gl_WorkGroupID[2]))))) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) >> _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) | (gl_WorkGroupID[2]))))) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) >> _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u)))))))), clamp((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) | (gl_WorkGroupID[2]))))) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_size)))), (~ (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_size))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u)))))))), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) | (gl_WorkGroupID[2]))))) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) >> _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u)))))))), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) | (gl_WorkGroupID[2]))))) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) >> _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u))))))))))) - uvec3(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u)))), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))), 0u, 0u)))))) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), min(_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) | uvec3(0u, 0u, 0u)), uvec3(5u)))))), gl_WorkGroupID)))), gl_WorkGroupID)), uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY((gl_WorkGroupID), (true ? (gl_WorkGroupID) : _GLF_FUZZED(uvec3(7563u, 175934u, 148446u))))) ^ (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))), min((gl_WorkGroupID), (gl_WorkGroupID))) + _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u), max(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))))[1], gl_WorkGroupID[2])).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), ! (! (! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true))))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, true)))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY((subgroup_local_id * num_workgroup), 1u * ((subgroup_local_id * num_workgroup)))))), max(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) * 1u), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u | (workgroup_base), (0u | (workgroup_base)) ^ 0u)))), workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8972.8633) : injectionSwitch.x))) / 1.0) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), bool(bvec2(false, false)))))), bool(bvec4(false, false, true, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, min(1, 1))), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))), true, true)))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false))), bool(bvec3(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), true, true, true))))))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, log(1.0), length(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, log(1.0), length(0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), clamp((0.0), (0.0), (0.0))) - sin(0.0))))).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, (64) | (64)), 4);
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, true)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false, true))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))), (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))))) && true)), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
          }
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6.0, -1.1)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, (false) && true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))), false || (_GLF_IDENTITY(! (! (false)), ! (! (! _GLF_IDENTITY((! (false)), ((! (false))) || false)))))))))), ! (! (false)))) || false)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false)), (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4((false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false)), (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! _GLF_IDENTITY((false), ((false)) || false)))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false))) || false))) && true))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bool(bvec2(! (! (_GLF_IDENTITY(false, ! (! (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(! (! (_GLF_IDENTITY(false, ! (! (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec4(bvec3((false), false, true), true)))))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-152.498)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(true)))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
             return;
            }
           return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(341.521)), bool(false))) > injectionSwitch.y))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) || false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))), false, false, false))), false)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))) || false), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))), false, false, false))), false)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))) || false))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false)))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))), false, false, false))), false)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))) || false), true, true, true))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, true, true))))) && true)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8646.9900) : injectionSwitch.y)), injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(false, false)))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true)) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  return;
}
