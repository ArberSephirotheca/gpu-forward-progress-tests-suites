#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_15 {
 mat3 _f0;
 uint next_virtual_gid;
 vec4 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_16 {
 _GLF_struct_15 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_12 {
 mat4x3 _f0;
 float _f1;
 mat3x2 _f2;
 int _f3;
 uvec4 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_11 {
 uvec3 _f0;
 mat2x4 _f1;
 vec2 _f2;
 mat4x3 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_13 {
 _GLF_struct_11 _f0;
 ivec2 _f1;
 _GLF_struct_12 _f2;
} ;

struct _GLF_struct_9 {
 uint _f0;
 uvec4 _f1;
 bvec3 _f2;
 mat3x4 _f3;
 mat3x2 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_10 {
 _GLF_struct_9 _f0;
 float _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_7 {
 vec3 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_8 {
 _GLF_struct_7 _f0;
} ;

struct _GLF_struct_5 {
 bvec3 _f0;
 mat2x4 _f1;
 ivec4 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_4 {
 int _f0;
 mat4 _f1;
 uvec3 _f2;
 mat4 _f3;
 mat2 _f4;
 float _f5;
 float _f6;
} ;

struct _GLF_struct_3 {
 ivec2 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_2 {
 mat3x4 _f0;
 bool _f1;
 ivec3 _f2;
 bvec4 _f3;
 bvec2 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_1 {
 bvec2 _f0;
 int _f1;
 mat2 _f2;
} ;

struct _GLF_struct_6 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
 ivec4 _f4;
 _GLF_struct_5 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_0 {
 mat4x3 _f0;
} ;

struct _GLF_struct_14 {
 bvec4 _f0;
 uint _f1;
 _GLF_struct_0 _f2;
 uint workgroup_id;
 _GLF_struct_6 _f3;
 _GLF_struct_8 _f4;
 _GLF_struct_10 _f5;
 _GLF_struct_13 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false, false, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(645.741)), float(injectionSwitch.y), bool(true))), false, false, true)), ! (! (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(645.741)), float(injectionSwitch.y), bool(true))), false, false, true))))), true, true)))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, abs(0.0), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, abs(1.0), 1.0, 1.0, 1.0))).x > injectionSwitch.y)))) && true))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true)))))) && true)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))), true)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))), true)))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), float(mat4(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (max(injectionSwitch.y, injectionSwitch.y)) - 0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), clamp(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), clamp(vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)))), vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))))).x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), clamp(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), clamp(vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)))), vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))))).x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), clamp(_GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), cos(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), clamp(vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)))), vec2(mat3x4(injectionSwitch, cos(0.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1.5)), bool(false))), 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))) - tan(0.0)), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))))).x > injectionSwitch.y))))) && true))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, sqrt(0.0), 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), min(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0))))), 0.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec4(1.0, sqrt(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), (dot(vec4(1.0, sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0))) / 1.0)))), (float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), sqrt(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, sqrt(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY((dot(vec4(1.0, sqrt(0.0), 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.4))), 0.0))), _GLF_IDENTITY(mix(float((dot(vec4(1.0, sqrt(0.0), 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.4))), 0.0)))), float(_GLF_FUZZED(6503.4867)), bool(false)), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(mix(float((dot(vec4(1.0, sqrt(0.0), 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.4))), 0.0)))), float(_GLF_FUZZED(6503.4867)), bool(false)), 1.0 * (mix(float((dot(vec4(1.0, sqrt(0.0), 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.4))), 0.0)))), float(_GLF_FUZZED(6503.4867)), bool(false)))), 0.0)), (float(vec2(_GLF_IDENTITY(mix(float((dot(vec4(1.0, sqrt(0.0), 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.4))), 0.0)))), float(_GLF_FUZZED(6503.4867)), bool(false)), 1.0 * (mix(float((dot(vec4(1.0, sqrt(0.0), 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.4))), 0.0)))), float(_GLF_FUZZED(6503.4867)), bool(false)))), 0.0))) - 0.0))) / _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-96.72) : 1.0))) * 1.0)))))) - 0.0))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3849.2939), _GLF_FUZZED(3.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) + abs(vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat4((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3849.2939), _GLF_FUZZED(3.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) + abs(vec2(0.0, 0.0)), cos(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), 1.0)), (vec2(mat4((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3849.2939), _GLF_FUZZED(3.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) + abs(vec2(0.0, 0.0)), cos(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), 1.0))) + vec2(0.0, 0.0)))).y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true, false)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), true, true)), true && (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), true, true))))), false))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), abs(1.0), 1.0, 0.0, 1.0, 0.0))), injectionSwitch.y), (clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), abs(1.0), 1.0, 0.0, 1.0, 0.0))), injectionSwitch.y)) - length(0.0)))))))
      return;
     barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))) || _GLF_IDENTITY(false, true && (false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), true && (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))) && _GLF_IDENTITY(true, ! (! (true))))))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, sin(0.0) + (1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0), (mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0)) + mat4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2513.5293)), float(0.0), bool(true))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (mat4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(1.0, sin(0.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 1.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), length(0.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, determinant(mat2(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), sqrt(0.0), 0.0, 1.0)), 0.0, 1.0, sqrt(0.0), 0.0, length(vec3(0.0, 0.0, 0.0)))), (float(mat4(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(1.0, sin(0.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 1.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), length(0.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, determinant(mat2(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), sqrt(0.0), 0.0, 1.0)), 0.0, 1.0, sqrt(0.0), 0.0, length(vec3(0.0, 0.0, 0.0))))) / 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.3)), float(0.0), bool(true))), 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(0.0)), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.8)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-99.87)), bvec2(true, false))))).y, (true ? injectionSwitch.y : _GLF_FUZZED(-5436.7971)))))), 0.0, 1.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(580.661)), bool(false))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || false))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec3(bool(_GLF_DEAD(false)), false, _GLF_IDENTITY(true, bool(bvec2(true, true))))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec3(bool(_GLF_DEAD(false)), false, _GLF_IDENTITY(true, bool(bvec2(true, true)))))))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.4) : injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.4) : injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.4) : injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.4) : injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.4) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.4) : injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.4) : injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.4) : injectionSwitch.x)) : _GLF_FUZZED(15.73))))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.4) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.4) : injectionSwitch.x)))))))) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(72.80)), bool(false))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.4) : injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.4) : injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.4) : injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.4) : injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.4) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.4) : injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.4) : injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.4) : injectionSwitch.x)) : _GLF_FUZZED(15.73))))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.4) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.4) : injectionSwitch.x))))), (min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), max(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))), 1.0, tan(log(1.0)), 0.0, 1.0, 1.0, 1.0, 0.0), _GLF_IDENTITY(mat4x2(mat4x3(mat4x2(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), max(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))), 1.0, tan(log(1.0)), 0.0, 1.0, 1.0, 1.0, 0.0))), mat2(1.0) * (mat4x2(mat4x3(mat4x2(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), max(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))), 1.0, tan(log(1.0)), 0.0, 1.0, 1.0, 1.0, 0.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.4) : injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bool(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))) ? _GLF_FUZZED(_GLF_IDENTITY(-9.4, _GLF_ONE(1.0, injectionSwitch.y) * (-9.4))) : injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.4) : injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.4) : injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.4) : injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.4) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.4) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.4) : injectionSwitch.x)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.4) : injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(-9.4) : injectionSwitch.x), (true ? _GLF_IDENTITY((false ? _GLF_FUZZED(-9.4) : injectionSwitch.x), clamp((false ? _GLF_FUZZED(-9.4) : injectionSwitch.x), (false ? _GLF_FUZZED(-9.4) : injectionSwitch.x), _GLF_IDENTITY((false ? _GLF_FUZZED(-9.4) : injectionSwitch.x), min((false ? _GLF_FUZZED(-9.4) : injectionSwitch.x), (false ? _GLF_FUZZED(-9.4) : injectionSwitch.x))))) : _GLF_FUZZED(-4580.7186)))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.4) : injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.4) : injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-9.4), mix(float(_GLF_FUZZED(9179.1679)), float(_GLF_FUZZED(-9.4)), bool(true))) : injectionSwitch.x)) : _GLF_FUZZED(15.73))))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.4) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.4) : injectionSwitch.x)))))) / 1.0)))) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 0.0)))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u)));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(bvec4(true), 1u, _GLF_struct_0(mat4x3(1.0)), gl_WorkGroupID.x, _GLF_struct_6(_GLF_struct_1(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0))) : _GLF_FUZZED(9.6))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, true)), true && (bool(bvec2(true, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, true)), true && (bool(bvec2(true, true)))), false || (_GLF_IDENTITY(bool(bvec2(true, true)), true && (bool(bvec2(true, true))))))) || false), ! (! (bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(true, true))), bvec2(bvec4(bvec2(bvec2(bvec2(true, true))), false, false))))))))))))))), _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY((~ (1)), ((~ (1))) - 0), 0, 0, 1)), 0 ^ (int(ivec4(_GLF_IDENTITY((~ (1)), ((~ (1))) - 0), 0, 0, 1)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((~ (1)), ((~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))) - 0), 0, 0, _GLF_IDENTITY(1, int(ivec4(1, 1, 0, 1)))), clamp(ivec4(_GLF_IDENTITY((~ (1)), ((~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))) - 0), 0, 0, _GLF_IDENTITY(1, int(ivec4(1, 1, 0, 1)))), ivec4(_GLF_IDENTITY((~ (1)), ((~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))) - 0), 0, 0, _GLF_IDENTITY(1, int(ivec4(1, 1, 0, 1)))), ivec4(_GLF_IDENTITY((~ (1)), ((~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))) - 0), 0, 0, _GLF_IDENTITY(1, int(ivec4(1, 1, 0, 1))))))) : _GLF_FUZZED(79788))))), mat2(1.0)), _GLF_struct_2(mat3x4(1.0), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (true)))), ivec3(1), bvec4(true), bvec2(_GLF_IDENTITY(true, true && (true))), ivec4(1)), _GLF_struct_3(ivec2(1), ivec4(1)), _GLF_struct_4(1, mat4(1.0), uvec3(1u), mat4(1.0), mat2(1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0), 1.0), ivec4(1), _GLF_struct_5(bvec3(true), mat2x4(1.0), ivec4(_GLF_IDENTITY(1, (1) - 0)), _GLF_IDENTITY(vec3(1.0), (vec3(1.0)) - vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))), _GLF_struct_8(_GLF_struct_7(_GLF_IDENTITY(vec3(1.0), vec3(_GLF_IDENTITY(mat4x2(vec3(1.0), 0.0, 0.0, exp(0.0), 0.0, 1.0), transpose(transpose(mat4x2(vec3(1.0), 0.0, 0.0, exp(0.0), 0.0, 1.0)))))), mat3(1.0))), _GLF_struct_10(_GLF_struct_9(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))) | (_GLF_IDENTITY(1u, 1u * (1u)))), _GLF_IDENTITY(uvec4(1u), ~ (~ (uvec4(1u)))), bvec3(true), mat3x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(6.9)), float(1.0), bool(true)), min(mix(float(_GLF_FUZZED(6.9)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(6.9)), float(1.0), bool(true)))))), mat3x2(1.0), mat2x4(1.0)), 1.0, ivec3(1)), _GLF_struct_13(_GLF_struct_11(uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(1u, (1u) + 0u))), max(uint(uint(_GLF_IDENTITY(1u, (1u) + 0u))), uint(uint(_GLF_IDENTITY(1u, (1u) + 0u))))))), mat2x4(1.0), vec2(1.0), mat4x3(1.0), _GLF_IDENTITY(vec3(1.0), vec3(mat2(vec3(1.0), 1.0)))), ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), 0 ^ (_GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) | (1))))) + 0)), _GLF_struct_12(mat4x3(1.0), 1.0, mat3x2(1.0), 1, uvec4(1u), mat2x4(1.0))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, (true) && true), true, true))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))))))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)) * _GLF_struct_replacement_14.workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, mix(float(_GLF_FUZZED(6.8)), float((injectionSwitch.x) * 1.0), bool(true)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, bool(bool((false) || false)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) ^ (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | 0u)), uvec2(uvec3(uvec2(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) ^ (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | 0u)), 1u))))) + _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size + subgroup_local_id) | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 1u, 1u), uvec3(uvec4(uvec3(subgroup_id * subgroup_size, 1u, 1u), 0u))))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 1u, 1u), uvec3(uvec4(uvec3(subgroup_id * subgroup_size, 1u, 1u), 0u))))))), min(~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 1u, 1u), uvec3(uvec4(uvec3(subgroup_id * subgroup_size, 1u, 1u), 0u))))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 1u, 1u), uvec3(uvec4(uvec3(subgroup_id * subgroup_size, 1u, 1u), 0u))))))))), 1u, 1u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 1u, 1u), uvec3(uvec4(uvec3(subgroup_id * subgroup_size, 1u, 1u), 0u))))))), min(~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 1u, 1u), uvec3(uvec4(uvec3(subgroup_id * subgroup_size, 1u, 1u), 0u))))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 1u, 1u), uvec3(uvec4(uvec3(subgroup_id * subgroup_size, 1u, 1u), 0u))))))))), 1u, 1u, 1u)))))) + subgroup_local_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && ((false) || false)))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_struct_15(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2545.6371)), float(1.0), _GLF_IDENTITY(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x < injectionSwitch.y)))))))), (1.0) / 1.0)), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), uint(uint((subgroup_id)))) | (subgroup_id)) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), max(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), uint(uint((subgroup_id)))) | (subgroup_id)) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2(_GLF_IDENTITY((subgroup_local_id + 1), 1u * ((subgroup_local_id + 1))), 0u))) % subgroup_size), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))), _GLF_IDENTITY((subgroup_id), uint(uint((subgroup_id)))) | (_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 ^ (1)))))) % subgroup_size))), vec4(1.0), mat2x4(_GLF_IDENTITY(1.0, (1.0) + 0.0))), mat3x2(1.0));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)), bool(bvec2(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)), false))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)), bool(bvec2(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)), false)))))), (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- 9.0))), bool(false))), injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)), bool(bvec2(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)), false))))))) && true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-795.975)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-795.975)), bool(false))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-795.975)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-795.975)), bool(false))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-795.975)), bool(false))))) : _GLF_FUZZED(-95.93))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])))).y)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y) && true)), ((! ((injectionSwitch.x > injectionSwitch.y) && true))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, ! (! (true))))), ((! ((injectionSwitch.x > injectionSwitch.y) && true))) && true)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(71.54)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) || false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))
    barrier();
   return;
  }
 atomicStore(buf[_GLF_struct_replacement_16._f0.next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid])))), 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, exp(0.0), 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, exp(0.0), 1.0, 1.0))), 1.0, 0.0, log(1.0), 0.0, 1.0, 1.0, 0.0))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (true && (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(! (true && (_GLF_DEAD(false))), (! (true && (_GLF_DEAD(false)))) || false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, max(64, 64)), 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(0.1))) > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 0.0, 0.0)), vec2(vec4(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)) + (0.0)), 1.0, 0.0, 0.0)), 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0), vec3(1.0, 0.0, 1.0))), 1.0, 0.0))).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 0.0, 0.0)), vec2(vec4(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)) + (0.0)), 1.0, 0.0, 0.0)), 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0), vec3(1.0, 0.0, 1.0))), 1.0, 0.0))).y), float(_GLF_FUZZED((true ? -103.052 : -6.1))), bool(false)))))))
    barrier();
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, ! (! (true))))), true && (bool(bvec2(false, true))))), (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0))) > injectionSwitch.y)))) && _GLF_IDENTITY(true, ! (! (true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), (false) && true), (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7844.9595) : injectionSwitch.x)) : _GLF_FUZZED(6488.3374))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(17.34)), float(injectionSwitch.y), bool(true))), max(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(float(true))), mix(float(_GLF_IDENTITY(float(_GLF_FUZZED(float(true))), float(mat3x2(float(_GLF_FUZZED(float(true))), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8.5) : 0.0)), 1.0, 1.0, 0.0)))), float(_GLF_FUZZED((-2839.6800 - -772.218))), bool(false))), float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), vec2(mat3x2((injectionSwitch) - vec2(0.0, 0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))))) / exp(vec2(0.0, 0.0))).y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.7))))), 1.0, 0.0, 0.0, _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) / 1.0), 1.0))))), mix(float(_GLF_FUZZED(-352.792)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(17.34)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true))))))))), max(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(float(true))), clamp(float(_GLF_FUZZED(float(true))), float(_GLF_FUZZED(float(true))), float(_GLF_FUZZED(float(true))))), mix(float(_GLF_IDENTITY(float(_GLF_FUZZED(float(true))), float(mat3x2(float(_GLF_FUZZED(float(true))), 0.0, 0.0, 1.0, 1.0, 0.0)))), float(_GLF_FUZZED((-2839.6800 - -772.218))), bool(false))), float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / exp(vec2(0.0, 0.0))).y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.7))))), 1.0, 0.0, 0.0, _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) / 1.0), 1.0)))))), bool(true)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false)))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-236.015), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(float(true))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) / vec2(1.0, 1.0)).y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) / vec2(1.0, 1.0)).y)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
