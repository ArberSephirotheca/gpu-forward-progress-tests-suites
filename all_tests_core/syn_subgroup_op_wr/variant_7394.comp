#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z = subgroup_size;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), (bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))) || false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))))))), (bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))))))))) || false), (bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))) || false)), true && (bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), (bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))) || false)))))))));
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.x = _GLF_IDENTITY(num_workgroup, max(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY((num_workgroup) >> 0u, (_GLF_IDENTITY((num_workgroup) >> 0u, ((num_workgroup) >> 0u) / 1u)) | ((num_workgroup) >> 0u))), num_workgroup));
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   else
    {
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))), false), true))))));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))))), bool(bvec4(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false)))), true, true, false))))));
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> 0))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, 0.0, 1.0, 0.0, length(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0), vec4(mat2(vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0))))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat4x3(0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))))), 1.0, 1.0, 1.0, 0.0, 1.0), (true ? mat4x3(0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat4x3(-6.2, 5.2, 8.6, 297.033, -65.95, 660.989, -298.392, 7917.7638, -99.57, 4770.0110, -609.246, -8.4))))))))), injectionSwitch.x))); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
      {
       do
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false, false, false))))), true, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1.8)), bool(false)))))), _GLF_IDENTITY(false, (false) || false), false, false))))), true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))))) || false)))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         do
          {
           GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.w = virtual_gid;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))));
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
      }
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z), (_GLF_IDENTITY(true ? _GLF_IDENTITY(workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, (true ? (subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z : _GLF_FUZZED(subgroup_base))))))), (false ? _GLF_FUZZED(subgroup_id) : workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, ~ (~ (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z)))))) : _GLF_FUZZED(num_workgroup), min(true ? _GLF_IDENTITY(workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, (true ? (subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z : _GLF_FUZZED(subgroup_base))))))), (false ? _GLF_FUZZED(subgroup_id) : workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, ~ (~ (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z)))))) : _GLF_FUZZED(num_workgroup), true ? _GLF_IDENTITY(workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, (true ? (subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z : _GLF_FUZZED(subgroup_base))))))), (false ? _GLF_FUZZED(subgroup_id) : workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, ~ (~ (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z)))))) : _GLF_FUZZED(num_workgroup)))));
 uint read = 0;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! (_GLF_IDENTITY(true, false || (true)))))))), (injectionSwitch.x < injectionSwitch.y))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(true, false || (true))))), (bool(bool((_GLF_IDENTITY(true, false || (true)))))) && true)), true, false)))))))), (injectionSwitch.x < injectionSwitch.y))), true), bvec2(bvec2(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! (_GLF_IDENTITY(true, false || (true)))))))), (injectionSwitch.x < injectionSwitch.y))), true)))), true, false))))))
  {
   do
    {
     do
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.y = read;
          }
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.8)), bool(false))) > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))], uint(1), 4, 64, 4);
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x, mix(float(_GLF_FUZZED(7.3)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4)))), ~ (_GLF_IDENTITY(~ (subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), min(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(2, (2) << 0)) | (0 >> _GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY(2, (2) << 0))))), _GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))), (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2))))) | (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))))), _GLF_IDENTITY((2), ~ (~ (_GLF_IDENTITY((2), (false ? _GLF_FUZZED(-84677) : (2)))))) | (0 << _GLF_IDENTITY(int(4), int(4)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) / 1), 0 ^ (_GLF_IDENTITY(2, (2) | _GLF_IDENTITY((2), ((2)) ^ 0)))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))), _GLF_IDENTITY(0 | (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2))))), ~ (~ (0 | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))), (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2))))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))), (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2))))) - 0))) + 0))))))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4)))) : _GLF_FUZZED(_injected_loop_counter)))), max(_GLF_IDENTITY(~ (subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4))))), uint(_GLF_IDENTITY(uint(~ (subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read) : uint(~ (subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4)))))))))), ~ _GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4))))), max((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4))))), _GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4))))), _GLF_IDENTITY(uint(uvec4((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, (0u | 0u))), (_GLF_IDENTITY(uint(uvec4((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, (0u | 0u))), (0u & 158804u) | (uint(uvec4((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, (0u | 0u)))))) | (uint(uvec4((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, (0u | 0u))))))))))))) == 0, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4)))), ~ (_GLF_IDENTITY(~ (subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), min(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(2, (2) << 0)) | (0 >> _GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY(2, (2) << 0))))), _GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))), (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2))))) | (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))))), _GLF_IDENTITY((2), ~ (~ (_GLF_IDENTITY((2), (false ? _GLF_FUZZED(-84677) : (2)))))) | (0 << _GLF_IDENTITY(int(4), int(4)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) / 1), 0 ^ (_GLF_IDENTITY(2, (2) | _GLF_IDENTITY((2), ((2)) ^ 0)))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))), _GLF_IDENTITY(0 | (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2))))), ~ (~ (0 | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))), (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2))))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))), (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2))))) - 0))) + 0))))))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4)))) : _GLF_FUZZED(_injected_loop_counter)))), max(_GLF_IDENTITY(~ (subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4))))), uint(_GLF_IDENTITY(uint(~ (subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read) : uint(~ (subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4)))))))))), ~ _GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4))))), max((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4))))), _GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4))))), _GLF_IDENTITY(uint(uvec4((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, (0u | 0u))), (_GLF_IDENTITY(uint(uvec4((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, (0u | 0u))), (0u & 158804u) | (uint(uvec4((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, (0u | 0u)))))) | (uint(uvec4((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, (0u | 0u))))))))))))) == 0), true && (! ((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, min(2, 2)), 2))))) << 0))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4)))), ~ (_GLF_IDENTITY(~ (subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), min(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(2, (2) << 0)) | (0 >> _GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY(2, (2) << 0))))), _GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))), (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2))))) | (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))))), _GLF_IDENTITY((2), ~ (~ (_GLF_IDENTITY((2), (false ? _GLF_FUZZED(-84677) : (2)))))) | (0 << _GLF_IDENTITY(int(4), int(4)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) / 1), 0 ^ (_GLF_IDENTITY(2, (2) | _GLF_IDENTITY((2), ((2)) ^ 0)))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))), _GLF_IDENTITY(0 | (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2))))), ~ (~ (0 | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))), (_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), 0 ^ (_GLF_IDENTITY(2, (2) | (2))))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))), (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2))))) - 0))) + 0))))))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4)))) : _GLF_FUZZED(_injected_loop_counter)))), max(_GLF_IDENTITY(~ (subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4))))), uint(_GLF_IDENTITY(uint(~ (subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4)))))), (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read) : uint(~ (_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4)))), (_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4)))), (true ? subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4)))) : _GLF_FUZZED(workgroup_id)))) | (_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4)))), ~ (~ (_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4)))), ~ (~ (subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4)))))))))))))))))), ~ _GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(2, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(2, (2) | (2))), (false ? _GLF_FUZZED((43630 + findMSB(_injected_loop_counter))) : 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4))))), max((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))), (2) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))), int(4))))), _GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4))))), _GLF_IDENTITY(uint(uvec4((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, (0u | 0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, (0u | 0u)), uvec4(0u, 0u, 0u, 0u) ^ (uvec4((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, (0u | 0u))))), (0u & _GLF_IDENTITY(158804u, ~ (~ (_GLF_IDENTITY(158804u, clamp(158804u, 158804u, 158804u)))))) | (uint(uvec4((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, (0u | 0u)))))) | (uint(uvec4((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))))), (2) | (0 << _GLF_IDENTITY(int(4), int(4))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, (0u | 0u))))))))))))) == 0))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)))))), _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))) - 0.0))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))) - 0.0))))), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))) - 0.0)))))))), false)))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false, false)))))) && true))
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | (0 | 0))), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | (0 | 0))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, true && (true))))); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 else
                  {
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     barrier();
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      {
                       do
                        {
                         barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                    barrier();
                  }
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(_GLF_IDENTITY(int(2), (int(2)) * 1), _GLF_IDENTITY(int(2), (int(2)) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(int(2), min(int(2), _GLF_IDENTITY(int(2), min(int(2), int(2))))), ~ (~ (_GLF_IDENTITY(int(2), min(int(2), _GLF_IDENTITY(int(2), min(int(2), int(2)))))))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)))) > _GLF_IDENTITY(_GLF_IDENTITY((((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 1, 0), ~ (~ (ivec4(1, 1, 1, 0))))))), int(1)), _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1))))))) >> 0)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, _GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(int(0), int(0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (0) | (0))))) >> _GLF_IDENTITY(int(0), int(0))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))))), max(~ (~ (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))))), max(~ (~ (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))))), ~ (~ (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))))))))))) ^ (0 << _GLF_IDENTITY(int(1), int(1)))) * (5))), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), clamp(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(ivec3(int(6), 1, 0), (ivec3(int(6), 1, 0)) | (ivec3(int(6), 1, 0)))))))), ~ (~ (_GLF_IDENTITY(int(6), int(6))))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(int(6), int(6))) * 1)))) | 0)), (false ? _GLF_FUZZED(-33242) : (((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1))))))) >> 0)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))), (_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))), 0 + (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))))))) ^ 0))), (_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + _GLF_IDENTITY((((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))), ((((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))) >> (0 >> _GLF_IDENTITY(int(7), int(7))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))))), (~ (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))))) | 0)) | (~ (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))))))))) ^ (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (true ? _GLF_IDENTITY(int(1), int(1)) : _GLF_FUZZED(mix(-67511, -59876, false)))))) * (_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(22447)))))), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), clamp(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), ~ (~ (_GLF_IDENTITY(int(6), int(6))))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) << 0)), int(6)), (_GLF_IDENTITY(int(6), int(6))) * 1)))) | 0)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 1, 0), ~ (~ (ivec4(1, 1, 1, 0))))))), int(1)), _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1))))))) >> 0)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, _GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(int(0), int(0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (0) | (0))))) >> _GLF_IDENTITY(int(0), int(0))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))))), max(~ (~ (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))))), max(~ (~ (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))))), ~ (~ (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))))))))))) ^ (0 << _GLF_IDENTITY(int(1), int(1)))) * (5))), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), clamp(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(ivec3(int(6), 1, 0), (ivec3(int(6), 1, 0)) | (ivec3(int(6), 1, 0)))))))), ~ (~ (_GLF_IDENTITY(int(6), int(6))))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(int(6), int(6))) * 1)))) | 0)), (false ? _GLF_FUZZED(-33242) : (((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1))))))) >> 0)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))), (_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))), 0 + (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))))))) ^ 0))), (_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + _GLF_IDENTITY((((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))), ((((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))) >> (0 >> _GLF_IDENTITY(int(7), int(7))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))))), (~ (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))))) | 0)) | (~ (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))))))))) ^ (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (true ? _GLF_IDENTITY(int(1), int(1)) : _GLF_FUZZED(mix(-67511, -59876, false)))))) * (_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(22447)))))), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), clamp(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), ~ (~ (_GLF_IDENTITY(int(6), int(6))))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) << 0)), int(6)), (_GLF_IDENTITY(int(6), int(6))) * 1)))) | 0)))), ~ (~ (_GLF_IDENTITY((((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(1, 1, 1, 0), ~ (~ (ivec4(1, 1, 1, 0))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(1, 1, 1, 0), ~ (~ (ivec4(1, 1, 1, 0))))), (int(_GLF_IDENTITY(ivec4(1, 1, 1, 0), ~ (~ (ivec4(1, 1, 1, 0)))))) << 0)) | (int(_GLF_IDENTITY(ivec4(1, 1, 1, 0), ~ (~ (ivec4(1, 1, 1, 0))))))))), int(1)), _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1))))))) >> 0)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, _GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, max(0, 0))))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(int(0), int(0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))), 0))))))) >> _GLF_IDENTITY(int(0), int(0))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))))), max(~ (~ (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) ^ 0))) >> _GLF_IDENTITY(int(0), int(0))))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), max(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(int(0), int(0))))))))), max(~ (~ (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))))), ~ (~ (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (int(0))))) >> _GLF_IDENTITY(int(0), int(0))))))))))))) ^ (0 << _GLF_IDENTITY(int(1), int(1)))) * (5))), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), clamp(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(ivec3(int(6), 1, _GLF_IDENTITY(0, 0 ^ (0))), (ivec3(int(6), 1, 0)) | (ivec3(int(6), 1, 0)))))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(int(6), int(6))), min((_GLF_IDENTITY(int(6), int(6))), _GLF_IDENTITY((_GLF_IDENTITY(int(6), int(6))), ((_GLF_IDENTITY(int(6), int(6)))) - 0))))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(int(6), int(6))) * 1)))) | 0)), (false ? _GLF_FUZZED(-33242) : (((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(1, 1)))) : _GLF_FUZZED(findLSB(-37809)))))), max(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1))))))) >> 0)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))), (_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((_GLF_IDENTITY(1, (1) / 1) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))), 0 + (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))))))) ^ 0))), (_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + _GLF_IDENTITY((_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), _GLF_IDENTITY(int(ivec4(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 1, 1, 0)), int(_GLF_IDENTITY(int(int(ivec4(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 1, 1, 0))), (int(int(ivec4(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 1, 1, 0)))) | (int(int(ivec4(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 1, 1, 0))))))))), ((((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))) >> (0 >> _GLF_IDENTITY(int(7), int(7))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))))), (~ (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))))) | 0)) | (~ (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))))))))) ^ (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (true ? _GLF_IDENTITY(int(1), int(1)) : _GLF_FUZZED(mix(-67511, -59876, false)))))) * (_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(22447)))))), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), clamp(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(int(6), int(6))) | 0), ~ (~ (_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, clamp(6, 6, _GLF_IDENTITY(6, (6) | (6))))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) << 0)), int(6)), (_GLF_IDENTITY(int(6), int(6))) * 1)))) | 0))))))))))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               barrier();
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - log(1.0)), min(0.0, 0.0)), injectionSwitch.x)) | 0)); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), abs(1.0), 0.0))), 0.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))).y), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat2x4(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec3(0.0, abs(1.0), 0.0))), 0.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 1.0)), (true ? float(mat2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(42.80)), bool(false))))) : _GLF_FUZZED(14.00))))) : _GLF_FUZZED(4556.6366)))))))))))).y), ! (! ((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat2x4(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec3(0.0, abs(1.0), 0.0))), 0.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 1.0)), (true ? float(mat2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(42.80)), bool(false))))) : _GLF_FUZZED(14.00))))) : _GLF_FUZZED(4556.6366)))))))))))).y)))), ((_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-2985.3509) : injectionSwitch[1]))) - abs(0.0)))), vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec3(0.0, abs(1.0), 0.0))), 0.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))).y)) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat2x4(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec3(0.0, abs(1.0), 0.0))), 0.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 1.0)), (true ? float(mat2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(42.80)), bool(false))))) : _GLF_FUZZED(14.00))))) : _GLF_FUZZED(4556.6366)))))))))))).y), ! (! ((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat2x4(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec3(0.0, abs(1.0), 0.0))), 0.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 1.0)), (true ? float(mat2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(42.80)), bool(false))))) : _GLF_FUZZED(14.00))))) : _GLF_FUZZED(4556.6366)))))))))))).y)))), ((_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-2985.3509) : injectionSwitch[1]))) - abs(0.0)))), vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec3(0.0, abs(1.0), 0.0))), 0.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))).y)) || false), false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY((_GLF_FUZZED(injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(refract(injectionSwitch, vec2(7.1, -4.4), 4.8)) : (_GLF_FUZZED(injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), log(vec2(1.0, 1.0)) + (vec2(1.0, 1.0) * (injectionSwitch)))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y))))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                  }
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true)));
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
            }
          }
         else
          {
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         subgroupAll(_GLF_IDENTITY(false, ! (! (false))));
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec2(_GLF_IDENTITY(true, (true) || false), false)))), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)), true), true), bvec3(bvec4(bvec3(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)), true), true), true))))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)), true), bvec2(bvec3(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)), true), true))), true)))))))))
        {
         for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < (0 ^ ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < (0 ^ ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), false || (_injected_loop_counter < (_GLF_IDENTITY(0, (0) >> 0) ^ ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))), ! (! (_GLF_IDENTITY(_injected_loop_counter < (0 ^ ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), false || (_injected_loop_counter < (_GLF_IDENTITY(0, (0) >> 0) ^ ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))))))))), bool(bvec4(_GLF_IDENTITY(_injected_loop_counter < (0 ^ ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < (0 ^ ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), false || (_injected_loop_counter < (_GLF_IDENTITY(0, (0) >> 0) ^ ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))), ! (! (_GLF_IDENTITY(_injected_loop_counter < (0 ^ ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), false || (_injected_loop_counter < (_GLF_IDENTITY(0, (0) >> 0) ^ ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))))))))), true, true, false)))); _injected_loop_counter ++)
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))))) != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 do
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))));
                }
               for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
                  barrier();
                }
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5.2, -3068.2085)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                      barrier();
                     do
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
                        barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     barrier();
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), false, true, true)))) || false)))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                       barrier();
                      }
                    }
                  }
                 else
                  {
                  }
                }
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.y = atomicLoad(buf[GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.w], 4, 64, 2);
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, true)), false || (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, true)))))))))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat2(injectionSwitch[0], 1.0, 0.0, 1.0))), injectionSwitch[1])).y)) && true), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))))) && true))))), (! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), (! (injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), false || (bool(bvec3(true, true, true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
            {
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)))), true && (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec2((true), _GLF_IDENTITY(true, bool(bool(true)))))) && true)) || false))))))); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _injected_loop_counter ++ : _GLF_FUZZED(-91138))))
              {
               barrier();
              }
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       subgroupAll(false);
       GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.y = atomicLoad(_GLF_IDENTITY(buf[GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.w], uint(uvec3(buf[GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.w], (0u & 53356u), (_GLF_IDENTITY((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u) << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, clamp(4u, 4u, 4u)), (4u) + _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) * 1u) : _GLF_FUZZED(17327u))), 0u)))), uint(4u))), ((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u) << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, clamp(4u, 4u, 4u)), (4u) + _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) * 1u) : _GLF_FUZZED(17327u))), 0u)))), uint(4u)))) ^ 0u) >> _GLF_IDENTITY(uint(4u), uint(4u)))))), 4, 64, 2);
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 do
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   atomicStore(checker[GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.w], GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.y, 4, 64, 4);
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, false || (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, false || (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false)))))))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
}
