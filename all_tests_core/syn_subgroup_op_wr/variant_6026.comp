#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))) || false), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, max(1, 1))])).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1846.6729)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), false || (bool(bvec4(true, true, true, true)))))))
      {
       barrier();
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), false), bvec2(bvec3(bvec2(true, false), true))))) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, float(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, sin(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, 1.0, 0.0)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, float(mat2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, 0.0, 1.0, 0.0)))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, float(mat2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, 0.0, 1.0, 0.0)))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, float(mat2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, 0.0, 1.0, 0.0))))))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, float(mat2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mix(vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(457.332)), vec2(_GLF_FUZZED(-5463.7185), (max(injectionSwitch, injectionSwitch))[1]), bvec2(false, true)))))))).y, 0.0, 1.0, 0.0)))), false || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.1), _GLF_FUZZED(5.7)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-9.5, -3993.0441)))))))))).y, float(mat2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, 0.0, 1.0, 0.0)))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, float(mat2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, 0.0, 1.0, 0.0)))))))), bool(bvec4((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.1), _GLF_FUZZED(5.7)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-9.5, -3993.0441)))))))))).y, float(mat2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, 0.0, 1.0, 0.0)))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, float(mat2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, 0.0, 1.0, 0.0)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))) || false)) || false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ((uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(_GLF_IDENTITY(5u, max(5u, 5u))))) * (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))))) | (gl_NumWorkGroups)).x, (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ((uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), ~ (~ (_GLF_IDENTITY(uvec3(5u), uvec3(5u)))))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))) * (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))))) | (gl_NumWorkGroups)).x) ^ 0u))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))))), uvec3(1u, 1u, 1u) * ((gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), uint(uvec4((0u), 0u, 0u, 1u))) << 0u), 0u, 0u)))))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, _GLF_IDENTITY(0u, 0u | (0u)), _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, uint(uint(0u)))))), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u))))))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x, 0u + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) + uvec3(0u, 0u, 0u), (true ? (gl_WorkGroupID) + uvec3(0u, 0u, 0u) : _GLF_FUZZED(uvec3(137188u, 166470u, 133569u)))))), max((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID))))) | ((gl_WorkGroupID)))) >> uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))))), max((gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))))) + (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))), max((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), (gl_WorkGroupID) + uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))))), ((gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u)))), (_GLF_IDENTITY((gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))))), ((gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))))) | (_GLF_IDENTITY((gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))))), ((gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))))))))).x, 0u + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(_GLF_IDENTITY(0u, 0u + (0u)), 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), min(_GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | ((gl_WorkGroupID))), _GLF_IDENTITY((gl_WorkGroupID), (true ? (gl_WorkGroupID) : _GLF_FUZZED(uvec3(153758u, 23403u, 43803u)))))) + uvec3(0u, 0u, 0u)))))).x, 0u + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), clamp(_GLF_IDENTITY((gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(78170u, 139780u, 199940u)) : _GLF_IDENTITY((gl_WorkGroupID), uvec3(uvec4((gl_WorkGroupID), 1u))))), (gl_WorkGroupID), (gl_WorkGroupID))) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), max(_GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), (gl_WorkGroupID))), (gl_WorkGroupID))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID)))), (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x, 0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (true ? uvec3(0u, 0u, 0u) : _GLF_FUZZED(uvec3(52240u, 127540u, 86732u))))))))))).x)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x, 0u + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x, 0u + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x))), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) + uvec3(0u, 0u, 0u), (_GLF_IDENTITY((gl_WorkGroupID) + uvec3(0u, 0u, 0u), (true ? (gl_WorkGroupID) + uvec3(0u, 0u, 0u) : _GLF_FUZZED(uvec3(71462u, 57730u, 13506u))))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) + uvec3(0u, 0u, 0u), clamp((gl_WorkGroupID) + uvec3(0u, 0u, 0u), (gl_WorkGroupID) + uvec3(0u, 0u, 0u), (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))))).x, 0u + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))), (gl_WorkGroupID) + uvec3(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, ~ (~ (0u))))), 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))) | (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))))))).x))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec3(0u, 0u, 0u) : _GLF_FUZZED(max(uvec3(23673u, 117015u, 43971u), uvec3(68860u, 166583u, 149219u))))))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x, 0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))))), uvec3(1u, 1u, 1u) * ((gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) + uvec3(0u, 0u, 0u), ((gl_WorkGroupID) + uvec3(0u, 0u, 0u)) | ((gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))))))).x))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) + uvec3(0u, 0u, 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(4114u, 179788u, 80860u)) : (gl_WorkGroupID) + uvec3(0u, 0u, 0u))))))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) + uvec3(0u, 0u, 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(4114u, 179788u, 80860u)) : (gl_WorkGroupID) + uvec3(0u, 0u, 0u))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) + uvec3(0u, 0u, 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(4114u, 179788u, 80860u)) : (gl_WorkGroupID) + uvec3(0u, 0u, 0u))))))))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) + uvec3(0u, 0u, 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(4114u, 179788u, 80860u)) : (gl_WorkGroupID) + uvec3(0u, 0u, 0u))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) + uvec3(0u, 0u, 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(4114u, 179788u, 80860u)) : (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))))))))))).x, 0u + _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | ((gl_WorkGroupID))), ~ (~ ((gl_WorkGroupID)))) + uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))))))).x), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))) + uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))) + uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))) + uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))) + uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))) + uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))) + uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))))))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))) + uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))) + uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))))))))))).x), ((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), _GLF_IDENTITY(~ (~ ((gl_WorkGroupID))), max(_GLF_IDENTITY(~ (~ ((gl_WorkGroupID))), (~ (~ ((gl_WorkGroupID)))) - uvec3(0u, 0u, 0u)), ~ (~ ((gl_WorkGroupID)))))) + uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))))))).x)) - 0u))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(uvec2(63691u, 140575u)[1]))), 0u))), max((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))) + uvec3(0u, 0u, 0u)))))).x, _GLF_IDENTITY(0u + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x), 1u * (0u + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID)))), (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x, 0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x, 0u + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x, 0u + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x))), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x, 0u + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x, 0u + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))))))).x, 0u + _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))) + uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))))))).x), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))) + uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))))))).x), ((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))) + uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))))))).x)) - 0u))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID)))), (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x, 0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x, 0u + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x, 0u + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x))), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x, 0u + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x, 0u + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))))))).x, 0u + _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))) + uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))))))).x), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))) + uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))))))).x), ((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))) + uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))))))).x)) - 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID)))), (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x, 0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x, 0u + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x, 0u + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x))), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x, 0u + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x, 0u + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))))))).x, 0u + _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))) + uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))))))).x), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))) + uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))))))).x), ((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))) + uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))))))).x)) - 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID)))), (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x, 0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x, 0u + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x, 0u + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x))), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x, 0u + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x, 0u + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))).x))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))))))).x, 0u + _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))) + uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))))))).x), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))) + uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))))))).x), ((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))) + uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))))))).x)) - 0u)))))))))) * _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) << 0u);
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y) || false)))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y) || false))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y) || false)))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y) || false))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y) || false)))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y) || false)))))))) && true), true, true, false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))));
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_id))), workgroup_base, workgroup_base)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_id))), workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_id))), workgroup_base, workgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_id))), workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_id))), workgroup_base, workgroup_base))) / 1u))) : _GLF_FUZZED(max(uvec3(169679u, 43324u, 122488u), uvec3(27485u, 59877u, 94110u)).p))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, 1u * (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))), subgroup_id)) * subgroup_size, (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), max((_GLF_FUZZED(subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), min(_GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), uint(_GLF_IDENTITY(uvec2((_GLF_FUZZED(subgroup_id)), 1u), uvec2(1u, 1u) * (uvec2((_GLF_FUZZED(subgroup_id)), 1u))))), (_GLF_FUZZED(subgroup_id)))), clamp((_GLF_FUZZED(subgroup_id)), (_GLF_FUZZED(subgroup_id)), (_GLF_FUZZED(subgroup_id)))))), (~ _GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), ((_GLF_FUZZED(subgroup_id))) | _GLF_IDENTITY((_GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), max((_GLF_FUZZED(subgroup_id)), _GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), max((_GLF_FUZZED(subgroup_id)), (_GLF_FUZZED(subgroup_id))))))), max((_GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), max((_GLF_FUZZED(subgroup_id)), _GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), max((_GLF_FUZZED(subgroup_id)), (_GLF_FUZZED(subgroup_id))))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), max((_GLF_FUZZED(subgroup_id)), _GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), max((_GLF_FUZZED(subgroup_id)), (_GLF_FUZZED(subgroup_id))))))), 0u | ((_GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), max((_GLF_FUZZED(subgroup_id)), _GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), max((_GLF_FUZZED(subgroup_id)), (_GLF_FUZZED(subgroup_id))))))))))))) << 0u))))), _GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 0u, 0u, 1u))), workgroup_base)) + subgroup_id * subgroup_size) | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_id))), workgroup_base, workgroup_base)) + subgroup_id * subgroup_size)) + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (false ? _GLF_FUZZED(num_workgroup) : ~ (subgroup_size)))))) ^ 0u)), (_GLF_IDENTITY(1u, min(1u, 1u)) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : ~ (subgroup_size)), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(num_workgroup) : ~ (subgroup_size))), (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(num_workgroup) : ~ (subgroup_size))), (~ ((false ? _GLF_FUZZED(num_workgroup) : ~ (subgroup_size)))) - 0u)) / 1u))))))) ^ 0u))) + (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) | 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (false ? _GLF_FUZZED(num_workgroup) : ~ (subgroup_size)))))) ^ 0u)), (_GLF_IDENTITY(1u, min(1u, 1u)) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : ~ (subgroup_size)), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(num_workgroup) : ~ (subgroup_size))), (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(num_workgroup) : ~ (subgroup_size))), (~ ((false ? _GLF_FUZZED(num_workgroup) : ~ (subgroup_size)))) - 0u)) / 1u))))))) ^ 0u))) + (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) | 0u)))))) + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(workgroup_id))) : _GLF_FUZZED(num_workgroup))))) + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), (~ (~ (subgroup_size))) | (~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))))))) + ((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))) % subgroup_size)) << _GLF_IDENTITY(0u, max(0u, 0u)));
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)], 4, _GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec4(64, (0 ^ 0), 0, 1), ivec4(1, 1, 1, 1) * (ivec4(64, (0 ^ 0), 0, 1))))), 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), determinant(mat2(1.0, 0.0, 1.0, 1.0))))).x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), _GLF_IDENTITY(min(int(6), _GLF_IDENTITY(int(6), 0 ^ (int(6)))), 0 + (min(int(6), int(6))))))) >> _GLF_IDENTITY(int(6), int(6))), 0 ^ (((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), _GLF_IDENTITY(min(int(6), _GLF_IDENTITY(int(6), 0 ^ (int(6)))), 0 + (min(int(6), int(6))))))) >> _GLF_IDENTITY(int(6), int(6)))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
               barrier();
              }
             for(int _injected_loop_counter = _GLF_IDENTITY(1, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (1)), _GLF_IDENTITY((_GLF_IDENTITY((~ (1)), int(_GLF_IDENTITY(int((~ (1))), clamp(int((~ (1))), int((~ (1))), int((~ (1)))))))) | ((~ (1))), clamp((_GLF_IDENTITY((~ (1)), int(_GLF_IDENTITY(int((~ (1))), clamp(int((~ (1))), int((~ (1))), int((~ (1)))))))) | ((~ (1))), (_GLF_IDENTITY((~ (1)), int(_GLF_IDENTITY(int((~ (1))), clamp(int((~ (1))), int((~ (1))), int((~ (1)))))))) | ((~ (1))), (_GLF_IDENTITY((~ (1)), int(_GLF_IDENTITY(int((~ (1))), clamp(int((~ (1))), int((~ (1))), int((~ (1)))))))) | ((~ (1)))))), (true ? ~ _GLF_IDENTITY((~ (1)), (_GLF_IDENTITY((~ (1)), int(_GLF_IDENTITY(int((~ (1))), clamp(int((_GLF_IDENTITY(~ (1), (~ (1)) / (1 | 1)))), int((~ (1))), int((~ (1)))))))) | ((~ (1)))) : _GLF_FUZZED(ivec4(70729, -50863, -26500, 55134)[3])))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               barrier();
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       barrier();
      }
    }
   else
    {
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _injected_loop_counter : _GLF_FUZZED(-86122))) != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (_GLF_IDENTITY(~ (int(3)), 1 * (~ (int(3)))))), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((int(3)))) >> 0)) ^ 0)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), max(1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(_GLF_IDENTITY(3, 0 + (3))), int(3))) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3)))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3)))), 1)))) / 1)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3)))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3)))), 1)))) / 1))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3)))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3)))), 1)))) / 1)), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3)))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3)))), 1)))) / 1))))))))) / 1), (1 ^ (0 >> _GLF_IDENTITY(int(2), int(2)))) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(_GLF_IDENTITY(3, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) ^ 0), 0)) + (3))), int(3))) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 1 * (_GLF_IDENTITY(int(3), ~ (~ (_GLF_IDENTITY(int(3), min(int(3), int(3))))))))), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3)))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3)))), 1)))) / 1)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(int(_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) * (_GLF_IDENTITY(3, (3) | (3)))))))))) | (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) / int(_GLF_ONE(1.0, injectionSwitch.y)))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) / int(_GLF_ONE(1.0, injectionSwitch.y)))), (int(_GLF_IDENTITY(3, (3) / int(_GLF_ONE(1.0, injectionSwitch.y))))) << 0), int(_GLF_IDENTITY(3, (3) / int(_GLF_ONE(1.0, injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3)))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, 1 * (3)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3))))))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), 1)))) / 1))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3)))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (true ? _GLF_IDENTITY(int(3), int(3)) : _GLF_FUZZED(5191))), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) / 1)) | (int(3))), int(3)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (true ? _GLF_IDENTITY(int(3), int(3)) : _GLF_FUZZED((44984 * 55527))))))))), 1)))) / 1)), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) | (_GLF_IDENTITY(int(3), int(3)))))))) | (_GLF_IDENTITY(int(3), int(3)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) | (_GLF_IDENTITY(int(3), int(3)))))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) * 1)) * 1), _GLF_IDENTITY(int(3), int(ivec3(int(3), 0, 1))), int(3)))), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3)))), 1)))) / 1))))))))) / 1))), _GLF_IDENTITY(1, (1) ^ 0) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (0 | 0) ^ (_GLF_IDENTITY(int(3), (int(3)) | (int(3))))))))) | _GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), max(1 << _GLF_IDENTITY(int(3), int(3)), 1 << _GLF_IDENTITY(int(3), int(3))))), min(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), max(1 << _GLF_IDENTITY(int(3), int(3)), 1 << _GLF_IDENTITY(int(3), int(3))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), max(1 << _GLF_IDENTITY(int(3), int(3)), 1 << _GLF_IDENTITY(int(3), int(3)))))) << 0), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), max(1 << _GLF_IDENTITY(int(3), int(3)), 1 << _GLF_IDENTITY(int(3), int(3))))))))) * 1)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(3, (false ? _GLF_FUZZED(-36202) : 3)), 0 | (_GLF_IDENTITY(3, (false ? _GLF_FUZZED(-36202) : 3))))), (true ? int(3) : _GLF_FUZZED(-11693)))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (true ? int(3) : _GLF_FUZZED(-11693)))))), (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (_GLF_IDENTITY(~ (int(3)), 1 * (~ (int(3)))))), int(3)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), ~ (~ (int(3))))) | (_GLF_IDENTITY(int(3), (int(3)) | 0))), ~ (_GLF_IDENTITY(~ (int(3)), 1 * (~ (int(3)))))), int(3))))), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, (false ? _GLF_FUZZED(25963) : 3))), int(3))) | (1 << _GLF_IDENTITY(int(3), int(3)))), max(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3))), ((_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3)))) ^ 0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) << 0)) << 0), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3)))) ^ 0)) : _GLF_FUZZED(_injected_loop_counter)))) / 1), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (0 | _GLF_IDENTITY(0, (0) | (0))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), (_GLF_IDENTITY(int(3), (int(3)) | (int(3)))) + 0)))), (_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((0 | 0) ^ (_GLF_IDENTITY(int(3), (int(3)) | (int(3)))), ((0 | 0) ^ (_GLF_IDENTITY(int(3), (int(_GLF_IDENTITY(3, (3) << 0))) | (int(3))))) - 0)))) << (0 ^ 0))))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), (1 << _GLF_IDENTITY(int(3), int(3))) | (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), 0 | (_GLF_IDENTITY(int(3), int(3)))))), max(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3))), ((_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, min(3, 3)))))) ^ 0))) / 1), _GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (0 | 0) ^ (_GLF_IDENTITY(int(3), (int(3)) | (int(3)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (0 | 0) ^ (_GLF_IDENTITY(int(3), (int(3)) | (int(3)))))), min(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (0 | 0) ^ (_GLF_IDENTITY(int(3), (int(3)) | (int(3)))))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (0 | 0) ^ (_GLF_IDENTITY(int(3), (int(3)) | (int(3)))))))) : _GLF_FUZZED(69650))), (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (0 | 0) ^ (_GLF_IDENTITY(int(3), (int(3)) | (int(3))))))) << (0 ^ _GLF_IDENTITY(0, (0) | 0)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), (1 << _GLF_IDENTITY(int(3), int(3))) | (1 << _GLF_IDENTITY(int(3), int(3)))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), (1 << _GLF_IDENTITY(int(3), int(3))) | (1 << _GLF_IDENTITY(int(3), int(3)))), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), (1 << _GLF_IDENTITY(int(3), int(3))) | (1 << _GLF_IDENTITY(int(3), int(3))))) >> 0), 1, 1))), max(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) | 0), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3)))), (0 | 0) + (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) | 0), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3)))))) ^ 0))) / 1), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (0 | 0) ^ (_GLF_IDENTITY(int(3), (int(3)) | (int(3)))))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (0 | 0) ^ (_GLF_IDENTITY(int(3), (int(3)) | (int(3)))))), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (0 | 0) ^ (_GLF_IDENTITY(int(3), (int(3)) | (int(3))))))) >> (1 ^ int(_GLF_ONE(1.0, injectionSwitch.y))))) << (0 ^ 0)))))) - 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), max(1 << _GLF_IDENTITY(int(3), int(3)), 1 << _GLF_IDENTITY(int(3), int(3)))), (1 << _GLF_IDENTITY(int(3), int(3))) | (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), 0 ^ (1 << _GLF_IDENTITY(int(3), int(3)))))), max(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(int(3), int(3))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) | (3))), int(3)), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3))), ((_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) | 0))), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3)))) ^ 0))) / 1), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (0 | 0) ^ (_GLF_IDENTITY(int(3), (int(3)) | (int(3)))))), (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (0 | 0) ^ (_GLF_IDENTITY(int(3), (int(3)) | (int(3))))))) << (0 ^ 0))))), _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), (1 << _GLF_IDENTITY(int(3), int(3))) | (1 << _GLF_IDENTITY(int(3), int(3)))), max(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3))), ((_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3)))) ^ 0))) / 1), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (0 | 0) ^ (_GLF_IDENTITY(int(3), (int(3)) | (int(3)))))), (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (0 | 0) ^ (_GLF_IDENTITY(int(3), (int(3)) | (int(3))))))) << (0 ^ 0))))))), (~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), max(1 << _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), (1 << _GLF_IDENTITY(int(3), int(3))) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), (1 << _GLF_IDENTITY(int(3), int(3))) | (1 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) - (84330 & 0)))))), max(_GLF_IDENTITY(1, min(1, 1)) << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3))), ((_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(3, 3))), int(3)), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) << 0)))) ^ 0))) / 1), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (0 | 0) ^ (_GLF_IDENTITY(int(3), (int(3)) | (int(3)))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (0 | 0) ^ (_GLF_IDENTITY(int(3), (int(3)) | (int(3))))))) << (0 ^ 0), max((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (0 | 0) ^ (_GLF_IDENTITY(int(3), (int(3)) | (int(3))))))) << (0 ^ 0), (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (0 | 0) ^ (_GLF_IDENTITY(int(3), (int(3)) | (int(3))))))) << (0 ^ 0)))))))))) - 0)))) | (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))), max(1 << _GLF_IDENTITY(int(3), int(3)), 1 << _GLF_IDENTITY(int(3), int(3))))))) * 1)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (true ? int(3) : _GLF_FUZZED(-11693)))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(true ? int(3) : _GLF_FUZZED(_GLF_IDENTITY(-11693, 0 | (-11693))), min(true ? int(3) : _GLF_FUZZED(_GLF_IDENTITY(-11693, 0 | (-11693))), true ? int(3) : _GLF_FUZZED(_GLF_IDENTITY(-11693, 0 | (-11693)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (_GLF_IDENTITY(~ (int(3)), 1 * (~ (int(3)))))), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), max(_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3))))) / 1), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) << (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) << 0)))), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3))))) / 1)) | (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) + 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3))))) / 1), max(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) - 0)), int(3)), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3))))) / 1), 1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), int(3)), int(int(_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY(int(3), int(3))))) / 1))))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((0 | 0) ^ (_GLF_IDENTITY(int(3), (int(3)) | (int(3)))), (0 | 0) | ((0 | 0) ^ (_GLF_IDENTITY(int(3), (int(3)) | (int(3))))))))))) | (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), min(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY(max(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) >> 0)) << 0), int(3)), 1 << _GLF_IDENTITY(int(3), int(3))), (max(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) >> 0)) << 0), int(3)), 1 << _GLF_IDENTITY(int(3), int(3)))) | 0))))) * 1)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (true ? int(3) : _GLF_FUZZED(-11693)))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(int(3), (int(3)) ^ 0))), _GLF_IDENTITY(int(3), (true ? int(3) : _GLF_FUZZED(-11693))))))) | ((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (_GLF_IDENTITY(~ (int(3)), _GLF_IDENTITY(1 * (~ (int(3))), (1 * (~ (int(3)))) + 0)))), int(3)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), max(1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) - 0), _GLF_IDENTITY(int(3), int(3)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (false ? _GLF_FUZZED(-3872) : 3)))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(3), int(3)))), (_GLF_IDENTITY(int(int(_GLF_IDENTITY(int(3), int(3)))), int(ivec4(int(int(_GLF_IDENTITY(int(3), int(3)))), 0, 0, 0)))) << 0))) | (_GLF_IDENTITY(int(3), int(3))))) / 1), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (0 | 0) ^ (_GLF_IDENTITY(int(3), (int(3)) | (int(3))))))))) | (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), max(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), min(1 << _GLF_IDENTITY(int(3), int(3)), 1 << _GLF_IDENTITY(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), int(3))))))) * 1)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (true ? int(3) : _GLF_FUZZED(-11693)))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, 0 | (3))), (true ? int(3) : _GLF_FUZZED(-11693))))))))) ^ 0))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))))), true && (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false)))), false || (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))))))) && true)), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))), _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), true && (! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false)))))))))) && true, true && ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), true && (! (! (_GLF_IDENTITY(false, ! (! (false)))))))) && true)))))), (bool(bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))), _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), true && (! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false)))))))))) && true, true && ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), true && (! (! (_GLF_IDENTITY(false, ! (! (false)))))))) && true))))))) || false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false))) || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) >> (75908 & 0))))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), true, true, false))), false, true))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
          }
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))));
    }
  }
 else
  {
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
    {
    }
   else
    {
     subgroupAll(true);
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (true ? _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), max(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), min(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))))) : _GLF_FUZZED(-40299))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     else
      {
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true))))))), true && (bool(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(false || ((injectionSwitch.x > injectionSwitch.y)), true, false)))))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-436.272))), injectionSwitch.x), min(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-436.272))), injectionSwitch.x), (max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-436.272))), injectionSwitch.x)) / 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-436.272))), injectionSwitch.x))), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-436.272))), injectionSwitch.x), min(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-436.272))), injectionSwitch.x), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-436.272))), injectionSwitch.x), min(max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-436.272))), injectionSwitch.x), max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-436.272))), injectionSwitch.x)))) / 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-436.272))), injectionSwitch.x)))) * 1.0)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-59.94)), bvec2(true, false))))).y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), false || ((injectionSwitch.x > injectionSwitch.y))), true, true, false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-436.272))), injectionSwitch.x), min(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-436.272))), injectionSwitch.x), (max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-436.272))), injectionSwitch.x)) / 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-436.272))), injectionSwitch.x))), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-436.272))), injectionSwitch.x), min(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-436.272))), injectionSwitch.x), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-436.272))), injectionSwitch.x), min(max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-436.272))), injectionSwitch.x), max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-436.272))), injectionSwitch.x)))) / 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-436.272))), injectionSwitch.x)))) * 1.0)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-59.94)), bvec2(true, false))))).y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), false || ((injectionSwitch.x > injectionSwitch.y))), true, true, false))))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-436.272))), injectionSwitch.x), min(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-436.272))), injectionSwitch.x), (max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-436.272))), injectionSwitch.x)) / 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-436.272))), injectionSwitch.x))), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-436.272))), injectionSwitch.x), min(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-436.272))), injectionSwitch.x), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-436.272))), injectionSwitch.x), min(max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-436.272))), injectionSwitch.x), max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-436.272))), injectionSwitch.x)))) / 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-436.272))), injectionSwitch.x)))) * 1.0)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-59.94)), bvec2(true, false))))).y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), false || ((injectionSwitch.x > injectionSwitch.y))), true, true, false))))))))))))), _GLF_IDENTITY((bool(bool(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, (true) && true)) && true)))), (false) || false), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) / 1.0)) > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.8)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.8)), float(injectionSwitch.y), bool(true)))) / 1.0)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))) || _GLF_IDENTITY(false, bool(bool(false)))))))), (_GLF_IDENTITY((bool(bool(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && (false)), (false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ((true)) && true)) || false))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))))))))), (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(1824.9603)), bool(false)))), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))), false || (_GLF_IDENTITY((bool(bool(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), (false) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))), bool(bvec4((bool(bool(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))), (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-43.63, -3.5)) : injectionSwitch))) * vec2(1.0, 1.0)).x > injectionSwitch.y))))))) && true)))))))))))) || false))))), true, false, false)))))) && _GLF_IDENTITY(true, ! (! (true)))) && true))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), _GLF_IDENTITY(int(6), (int(6)) ^ 0), int(6))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), _GLF_IDENTITY(int(6), (int(6)) ^ 0), int(6))), max(_GLF_IDENTITY(int(6), _GLF_IDENTITY(clamp(int(6), _GLF_IDENTITY(int(6), (int(6)) ^ 0), int(6)), (clamp(int(6), _GLF_IDENTITY(int(6), (int(6)) ^ 0), int(6))) + 0)), _GLF_IDENTITY(int(6), clamp(int(6), _GLF_IDENTITY(int(6), (int(6)) ^ 0), int(6))))))), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 ^ 0) | 0)); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))))))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     do
      {
       barrier();
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true));
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true)))));
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
    {
     for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), true && (bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))))
    barrier();
   do
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))) >> _GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))) >> _GLF_IDENTITY(int(0), int(0)), clamp((0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))) >> _GLF_IDENTITY(int(0), int(0)), (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))) >> _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))) >> _GLF_IDENTITY(int(0), int(0)), 1 * ((0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))) >> _GLF_IDENTITY(int(0), int(0))))))) >> 0)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) < 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false))))), (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y)))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9026.3825), _GLF_FUZZED(-537.215)), bvec2(false, false))).x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-4.7, 26489)) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(2.9), clamp(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(2.9, clamp(2.9, _GLF_IDENTITY(2.9, (false ? _GLF_FUZZED(4663.5207) : 2.9)), 2.9))), max(true ? injectionSwitch.y : _GLF_FUZZED(2.9), _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(2.9), mix(float(_GLF_FUZZED(-8034.3660)), float(true ? injectionSwitch.y : _GLF_FUZZED(2.9)), bool(true))))), _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(2.9), (true ? true ? injectionSwitch.y : _GLF_FUZZED(2.9) : _GLF_FUZZED(5.4))), true ? injectionSwitch.y : _GLF_FUZZED(2.9))))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.4)), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.4), _GLF_FUZZED(3.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 1.0, 0.0)), vec2(1.0, 1.0) * (vec2(mat2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.4), _GLF_FUZZED(3.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 1.0, 0.0))))).y))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9026.3825), _GLF_FUZZED(-537.215)), bvec2(false, false))).x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-4.7, 26489)) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(2.9), clamp(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(2.9, clamp(2.9, _GLF_IDENTITY(2.9, (false ? _GLF_FUZZED(4663.5207) : 2.9)), 2.9))), max(true ? injectionSwitch.y : _GLF_FUZZED(2.9), _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(2.9), mix(float(_GLF_FUZZED(-8034.3660)), _GLF_IDENTITY(float(true ? injectionSwitch.y : _GLF_FUZZED(2.9)), float(_GLF_IDENTITY(mat4x3(float(true ? injectionSwitch.y : _GLF_FUZZED(2.9)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(float(true ? injectionSwitch.y : _GLF_FUZZED(2.9)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), bool(true))))), _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(2.9), (true ? true ? injectionSwitch.y : _GLF_FUZZED(2.9) : _GLF_FUZZED(5.4))), _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(2.9), clamp(true ? injectionSwitch.y : _GLF_FUZZED(2.9), true ? injectionSwitch.y : _GLF_FUZZED(2.9), true ? injectionSwitch.y : _GLF_FUZZED(2.9))))))))))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-4.7, 26489)) : _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(2.9), float(vec4(_GLF_FUZZED(2.9), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false, false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false, false))))))), true, true)))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ((_GLF_DEAD(false)) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false, false))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false, false))), true, false, false))) && true)), true)))))))
            barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8.9) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-9.6), min(_GLF_IDENTITY(_GLF_FUZZED(-9.6), mix(float(_GLF_FUZZED(-9.6)), float(_GLF_FUZZED(1.2)), bool(false))), _GLF_FUZZED(-9.6)))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), bool(true)), (mix(float(_GLF_FUZZED(-9.6)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat4x2(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), min(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(652.396)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat4x2(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat4x2(0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 0.0, 1.0)))))))))), bool(true))) - _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))))), injectionSwitch.x)) > injectionSwitch.y))));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))));
   do
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_IF_FALSE(false))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, 0 + (_injected_loop_counter --)))
                {
                 barrier();
                }
              }
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               barrier();
              }
            }
           barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, cos(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / exp(sin(0.0)))), _GLF_IDENTITY(mat4x3(mat4(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, cos(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))), mat3(_GLF_IDENTITY(1.0, (1.0) + 0.0)) * (mat4x3(mat4(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), cos(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))))))), mat2(1.0) * (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, cos(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / exp(sin(0.0)))), _GLF_IDENTITY(mat4x3(mat4(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, cos(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))), mat3(_GLF_IDENTITY(1.0, (1.0) + 0.0)) * (mat4x3(mat4(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), cos(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))))))))).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, cos(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / exp(sin(0.0)))), _GLF_IDENTITY(mat4x3(mat4(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, cos(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))), mat3(1.0) * (mat4x3(mat4(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, 1.0, cos(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))))))).y), float(_GLF_FUZZED(5.6)), bool(false)))))))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
              {
               barrier();
              }
             else
              {
              }
            }
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), false || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) ^ 0), int(2))))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))), false))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))), false)))))))))))), ((false)) && true))), false || (_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, (false) && true))) && true))))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
}
