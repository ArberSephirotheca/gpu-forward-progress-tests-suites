#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_13 {
 mat2x3 _f0;
 ivec2 _f1;
 uint _f2;
 uint read;
} ;

struct _GLF_struct_10 {
 mat4x3 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_11 {
 _GLF_struct_10 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_8 {
 uint _f0;
 mat3x2 _f1;
 ivec3 _f2;
 bvec2 _f3;
 mat2 _f4;
 mat3 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_7 {
 mat2x3 _f0;
 mat2x3 _f1;
 bvec4 _f2;
 uvec3 _f3;
 mat4 _f4;
 mat4x3 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_6 {
 mat4x2 _f0;
 bvec2 _f1;
 mat4x3 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_9 {
 uint next_virtual_gid;
 mat4x2 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_8 _f3;
} ;

struct _GLF_struct_12 {
 mat4x3 _f0;
 _GLF_struct_9 _f1;
 mat3 _f2;
 _GLF_struct_11 _f3;
 int _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_3 {
 mat2x3 _f0;
} ;

struct _GLF_struct_4 {
 mat4 _f0;
 _GLF_struct_3 _f1;
} ;

struct _GLF_struct_1 {
 float _f0;
 uint _f1;
 uvec4 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
 mat3 _f1;
 mat3x4 _f2;
 vec4 _f3;
 bool _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_2 {
 bool _f0;
 float _f1;
 _GLF_struct_0 _f2;
 uint _f3;
 uint num_workgroup;
 _GLF_struct_1 _f4;
 uvec2 _f5;
 float _f6;
} ;

struct _GLF_struct_5 {
 mat3 _f0;
 float _f1;
 _GLF_struct_2 _f2;
 uvec2 _f3;
 _GLF_struct_4 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.w = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(mat3(1.0), 1.0, _GLF_struct_2(true, 1.0, _GLF_struct_0(bvec3(true), mat3(1.0), mat3x4(1.0), vec4(1.0), true, mat4x3(1.0)), 1u, gl_NumWorkGroups.x, _GLF_struct_1(1.0, 1u, uvec4(1u), bvec2(true)), uvec2(1u), 1.0), uvec2(1u), _GLF_struct_4(mat4(1.0), _GLF_struct_3(mat2x3(1.0))));
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.y = _GLF_struct_replacement_5._f2.num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.w * subgroup_size;
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.z = subgroup_base;
 uint virtual_gid = workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.z + subgroup_local_id;
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(mat4x3(1.0), _GLF_struct_9(workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), mat4x2(1.0), _GLF_struct_6(mat4x2(1.0), bvec2(true), mat4x3(1.0), mat4(1.0)), _GLF_struct_7(mat2x3(1.0), mat2x3(1.0), bvec4(true), uvec3(1u), mat4(1.0), mat4x3(1.0), uvec3(1u)), _GLF_struct_8(1u, mat3x2(1.0), ivec3(1), bvec2(true), mat2(1.0), mat3(1.0), vec2(1.0))), mat3(1.0), _GLF_struct_11(_GLF_struct_10(mat4x3(1.0), bvec4(true)), vec3(1.0)), 1, mat2x3(1.0));
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.x = _GLF_struct_replacement_12._f1.next_virtual_gid;
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(mat2x3(1.0), ivec2(1), 1u, 0);
 atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.x], uint(1), 4, 64, 4);
 if((subgroup_local_id % 2) == 0)
  {
   subgroupAll(false);
   _GLF_struct_replacement_13.read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   subgroupAll(false);
   _GLF_struct_replacement_13.read = atomicLoad(buf[virtual_gid], 4, 64, 2);
  }
 subgroupBarrier();
 atomicStore(checker[virtual_gid], _GLF_struct_replacement_13.read, 4, 64, 4);
}
