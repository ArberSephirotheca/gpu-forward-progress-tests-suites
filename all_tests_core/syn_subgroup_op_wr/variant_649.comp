#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_base;
 uvec3 GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), bool(bvec3((_GLF_WRAPPED_LOOP(false)), false, false)))) || false))));
                }
               else
                {
                }
              }
            }
           else
            {
            }
          }
         barrier();
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
 uvec4 GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)))) != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), ! (! (false)))))
              {
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0)); _injected_loop_counter --)
                {
                 barrier();
                }
              }
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))), ! (! (bool(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))))))))))
          barrier();
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))))));
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_base.x = subgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), 0 | (_GLF_IDENTITY(int(ivec2(0, 0)), (int(ivec2(0, 0))) / 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 0 ^ (int(6))))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 0 ^ (int(6)))))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | _GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(int(6), int(6))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4655) : (0 >> _GLF_IDENTITY(int(6), int(6)))))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), false || ((false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && true)))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), false), true, false))))), ! (! (false))))))))))) || false))))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(8817) : int(_GLF_IDENTITY(3, min(3, 3)))))), (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(8817) : int(3))))) / 1)) >> _GLF_IDENTITY(int(3), int(3))), (false ? _GLF_FUZZED(max(_injected_loop_counter, _injected_loop_counter)) : ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(8817) : int(3)))), (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((false ? _GLF_FUZZED(8817) : int(3)), min((false ? _GLF_FUZZED(8817) : int(3)), (false ? _GLF_FUZZED(8817) : int(3))))))) / 1)) >> _GLF_IDENTITY(int(3), int(3)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(8817) : int(_GLF_IDENTITY(3, min(3, 3)))))), (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(8817) : int(3))))) / 1)) >> _GLF_IDENTITY(int(3), int(3))), (false ? _GLF_FUZZED(max(_injected_loop_counter, _injected_loop_counter)) : ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(8817) : int(3)))), (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((false ? _GLF_FUZZED(8817) : int(3)), min((false ? _GLF_FUZZED(8817) : int(3)), (false ? _GLF_FUZZED(8817) : int(3))))))) / 1)) >> _GLF_IDENTITY(int(3), int(3)))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(8817) : int(_GLF_IDENTITY(3, min(3, 3)))))), (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(8817) : int(3))))) / 1)) >> _GLF_IDENTITY(int(3), int(3))), (false ? _GLF_FUZZED(max(_injected_loop_counter, _injected_loop_counter)) : ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(8817) : int(3)))), (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((false ? _GLF_FUZZED(8817) : int(3)), min((false ? _GLF_FUZZED(8817) : int(3)), (false ? _GLF_FUZZED(8817) : int(3))))))) / 1)) >> _GLF_IDENTITY(int(3), int(3))))))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(8817) : int(_GLF_IDENTITY(3, min(3, 3)))))), (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(8817) : int(3))))) / 1)) >> _GLF_IDENTITY(int(3), int(3))), (false ? _GLF_FUZZED(max(_injected_loop_counter, _injected_loop_counter)) : ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(8817) : int(3)))), (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((false ? _GLF_FUZZED(8817) : int(3)), min((false ? _GLF_FUZZED(8817) : int(3)), (false ? _GLF_FUZZED(8817) : int(3))))))) / 1)) >> _GLF_IDENTITY(int(3), int(3)))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(8817) : int(_GLF_IDENTITY(3, min(3, 3)))))), (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(8817) : int(3))))) / 1)) >> _GLF_IDENTITY(int(3), int(3))), (false ? _GLF_FUZZED(max(_injected_loop_counter, _injected_loop_counter)) : ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(8817) : int(3)))), (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((false ? _GLF_FUZZED(8817) : int(3)), min((false ? _GLF_FUZZED(8817) : int(3)), (false ? _GLF_FUZZED(8817) : int(3))))))) / 1)) >> _GLF_IDENTITY(int(3), int(3))))))))))))))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, exp(0.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), cos(0.0), cos(0.0))), max(float(mat2x3(injectionSwitch.x, 1.0, exp(0.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), cos(0.0), cos(0.0))), float(mat2x3(injectionSwitch.x, 1.0, exp(0.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), cos(0.0), cos(0.0))))))), float(_GLF_FUZZED(-5.0)), bool(false))) > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), (bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4253.4489)), float(injectionSwitch.x), bool(true)))) * _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-0.0) : injectionSwitch.x)) : _GLF_FUZZED(-6.2))), injectionSwitch.x)) < injectionSwitch.y)), false, true))) && true))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), (bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) && true)))))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_base.x = _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_base, ~ (~ (GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_base))).x;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.x = GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_base.x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false))) && true), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false))) && true), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false))) && true), bool(bvec2(! (_GLF_IDENTITY((false), true && ((false))) && true), true))))))))))))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 1)); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 1.0)))), ((injectionSwitch.x > injectionSwitch.y)) && true), false, false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     barrier();
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(tan(vec2(0.0, 0.0)), (true ? tan(vec2(0.0, 0.0)) : _GLF_FUZZED(_GLF_IDENTITY(vec2(-2.4, -5.0), (_GLF_IDENTITY(vec2(-2.4, -5.0), (vec2(-2.4, -5.0)) - vec2(0.0, 0.0))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) + (injectionSwitch)).x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.y = subgroup_size;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 1.0))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_base.y = subgroup_local_id;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (0 | (0 | 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
           else
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
             barrier();
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(vec4(injectionSwitch[1], 1.0, 1.0, 0.0))))).y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(vec4(injectionSwitch[1], 1.0, 1.0, 0.0))))).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(vec4(injectionSwitch[1], 1.0, 1.0, 0.0))))).y))))))))))
    barrier();
   barrier();
  }
 _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.w = _GLF_IDENTITY(workgroup_size, (workgroup_size) - (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))) * 1u)) / 1u)) * 1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.w = _GLF_IDENTITY(workgroup_size, (workgroup_size) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), 0u | (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.w = _GLF_IDENTITY(workgroup_size, (workgroup_size) - (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))), uint(3u)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.w = _GLF_IDENTITY(workgroup_size, (workgroup_size) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), 0u | (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.w = _GLF_IDENTITY(workgroup_size, (workgroup_size) - (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))), uint(3u))))))), (~ (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.w = _GLF_IDENTITY(workgroup_size, (workgroup_size) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), 0u | (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.w = _GLF_IDENTITY(workgroup_size, (workgroup_size) - (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))), uint(3u)))))))) << 0u))))), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.w = _GLF_IDENTITY(workgroup_size, (workgroup_size) - (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (_GLF_IDENTITY(~ (3u), uint(uint(~ (3u))))))), uint(3u)), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u) >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u | _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))) * 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))) * 1u), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, (0u) >> 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))) * 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u | (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) | (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) << (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(0u, (0u) | 0u) | (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) << 0u))))) / 1u)) * 1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.w = _GLF_IDENTITY(workgroup_size, (workgroup_size) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), 0u | (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.w = _GLF_IDENTITY(workgroup_size, (workgroup_size) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))))))) >> _GLF_IDENTITY(0u, ~ (~ (0u))));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(15844) : _GLF_IDENTITY(int(3), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(3), 0 | (int(3)))), max(~ (int(3)), ~ (int(3)))))))))))), clamp(((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | 0), _GLF_IDENTITY(int(ivec4(int(3), 0, 1, 1)), (true ? int(ivec4(int(3), 0, 1, 1)) : _GLF_FUZZED(-61593))))) | (int(3))))), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), (int(3)) | (int(3))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | (int(3)))), min((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | (int(3)))), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | (int(3))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4.7) : injectionSwitch.x)) > injectionSwitch.y))));
        }
       barrier();
      }
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size, uvec4(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size[0], _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size[1], _GLF_IDENTITY((GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size[1]), ((GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size[1])) >> 0u) >> 0u), GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size[2], GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size[3]))), (~ _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size, uvec4(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size[0], _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size[_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-27527), min(_GLF_FUZZED(-27527), _GLF_FUZZED(-27527))) : 0)), 1)), _GLF_IDENTITY((int(ivec3(_GLF_IDENTITY(1, min(1, 1)), 0, 1))) << 0, ((int(ivec3(_GLF_IDENTITY(1, min(1, 1)), 0, 1))) << 0) | 0)))], (0u | 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size, (false ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_base) : GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size))[_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (1)), 1)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-27527) : 0)), 1)), (int(ivec3(_GLF_IDENTITY(1, min(1, 1)), 0, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))))))) << 0))]), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size, (false ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_base) : GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size))[_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (1)), 1)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-27527) : 0)), 1)), (int(ivec3(_GLF_IDENTITY(1, min(1, 1)), 0, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))))))) << 0))]), min((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size, (false ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_base) : GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size))[_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (1)), 1)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-27527) : 0)), 1)), (int(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), (false ? _GLF_FUZZED(-8003) : min(1, 1)))), 0, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))))))) << 0))]), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size, (false ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_base) : GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size))[_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (1)), 1)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-27527) : 0)), 1)), (int(ivec3(_GLF_IDENTITY(1, min(1, 1)), 0, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, int(ivec3(1, 1, 0)))), clamp(~ (1), ~ (1), ~ (1)))))))) << 0))]))), (0u | 0u))))), GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size[2], GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size[3]))), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size, uvec4(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size[0], _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size[_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-27527), min(_GLF_FUZZED(-27527), _GLF_FUZZED(-27527))) : 0)), 1)), _GLF_IDENTITY((int(ivec3(_GLF_IDENTITY(1, min(1, 1)), 0, 1))) << 0, ((int(ivec3(_GLF_IDENTITY(1, min(1, 1)), 0, 1))) << 0) | 0)))], (0u | 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size, (false ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_base) : GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size))[_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (1)), 1)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-27527) : 0)), 1)), (int(ivec3(_GLF_IDENTITY(1, min(1, 1)), 0, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))))))) << 0))]), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size, (false ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_base) : GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size))[_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (1)), 1)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-27527) : 0)), 1)), (int(ivec3(_GLF_IDENTITY(1, min(1, 1)), 0, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))))))) << 0))]), min((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size, (false ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_base) : GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size))[_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (1)), 1)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-27527) : 0)), 1)), (int(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), (false ? _GLF_FUZZED(-8003) : min(1, 1)))), 0, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))))))) << 0))]), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size, (false ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_base) : GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size))[_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (1)), 1)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-27527) : 0)), 1)), (int(ivec3(_GLF_IDENTITY(1, min(1, 1)), 0, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, int(ivec3(1, 1, 0)))), clamp(~ (1), ~ (1), ~ (1)))))))) << 0))]))), (0u | 0u))))), GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size[2], GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size[3]))), max((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size, uvec4(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size[0], _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size[_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-27527), min(_GLF_FUZZED(-27527), _GLF_FUZZED(-27527))) : 0)), 1)), _GLF_IDENTITY((int(ivec3(_GLF_IDENTITY(1, min(1, 1)), 0, 1))) << 0, ((int(ivec3(_GLF_IDENTITY(1, min(1, 1)), 0, 1))) << 0) | 0)))], (0u | 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size, (false ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_base) : GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size))[_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (1)), 1)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-27527) : 0)), 1)), (int(ivec3(_GLF_IDENTITY(1, min(1, 1)), 0, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))))))) << 0))]), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size, (false ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_base) : GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size))[_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (1)), 1)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-27527) : 0)), 1)), (int(ivec3(_GLF_IDENTITY(1, min(1, 1)), 0, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))))))) << 0))]), min((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size, (false ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_base) : GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size))[_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (1)), 1)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-27527) : 0)), 1)), (int(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), (false ? _GLF_FUZZED(-8003) : min(1, 1)))), 0, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))))))) << 0))]), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size, (false ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_base) : GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size))[_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (1)), 1)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-27527) : 0)), 1)), (int(ivec3(_GLF_IDENTITY(1, min(1, 1)), 0, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, int(ivec3(1, 1, 0)))), clamp(~ (1), ~ (1), ~ (1)))))))) << 0))]))), (0u | 0u))))), GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size[2], GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size[3]))), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size, uvec4(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size[0], _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size[_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-27527), min(_GLF_FUZZED(-27527), _GLF_FUZZED(-27527))) : 0)), 1)), _GLF_IDENTITY((int(ivec3(_GLF_IDENTITY(1, min(1, 1)), 0, 1))) << 0, ((int(ivec3(_GLF_IDENTITY(1, min(1, 1)), 0, 1))) << 0) | 0)))], (0u | 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size, (false ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_base) : GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size))[_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (1)), 1)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-27527) : 0)), 1)), (int(ivec3(_GLF_IDENTITY(1, min(1, 1)), 0, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))))))) << 0))]), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size, (false ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_base) : GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size))[_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (1)), 1)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-27527) : 0)), 1)), (int(ivec3(_GLF_IDENTITY(1, min(1, 1)), 0, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))))))) << 0))]), min((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size, (false ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_base) : GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size))[_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (1)), 1)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-27527) : 0)), 1)), (int(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), (false ? _GLF_FUZZED(-8003) : min(1, 1)))), 0, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))))))) << 0))]), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size, (false ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_base) : GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size))[_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (1)), 1)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-27527) : 0)), 1)), (int(ivec3(_GLF_IDENTITY(1, min(1, 1)), 0, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, int(ivec3(1, 1, 0)))), clamp(~ (1), ~ (1), ~ (1)))))))) << 0))]))), (0u | 0u))))), GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size[2], GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size[3])))))) | uvec4(0u, 0u, 0u, 0u))) * _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), (true ? uvec4(1u, 1u, 1u, 1u) : _GLF_FUZZED(uvec4(83327u, 8348u, 107552u, 6575u))))))).w, (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size, uvec4(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size[0], _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size[1], (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size[1]) >> 0u), GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size[2], GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size[3]))), (~ (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size, uvec4(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size[0], _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size[_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-27527), min(_GLF_FUZZED(-27527), _GLF_FUZZED(-27527))) : 0)), 1)), _GLF_IDENTITY((int(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(min(1, 1), (_GLF_IDENTITY(min(1, 1), int(ivec4(min(1, 1), 0, 0, 1)))) - 0), 1, 0)), (int(ivec3(_GLF_IDENTITY(min(1, 1), (_GLF_IDENTITY(min(1, 1), int(ivec4(min(1, 1), 0, 0, 1)))) - 0), 1, 0))) | (int(ivec3(_GLF_IDENTITY(min(1, 1), (_GLF_IDENTITY(min(1, 1), int(ivec4(min(1, 1), 0, 0, 1)))) - 0), 1, 0)))))), 0, 1))) << 0, ((int(ivec3(_GLF_IDENTITY(1, min(1, 1)), 0, 1))) << 0) | 0)))], (0u | 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size, (false ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_base) : GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size))[_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (1)), 1)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-27527) : 0)), 1)), (int(ivec3(_GLF_IDENTITY(1, min(1, 1)), 0, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))))))) << 0))]), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size, (false ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_base) : GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size))[_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (1)), 1)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-27527) : 0)), 1)), (int(ivec3(_GLF_IDENTITY(1, min(1, 1)), 0, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))))))) << 0))]), min((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size, (false ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_base) : GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size))[_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (1)), 1)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-27527) : 0)), 1)), (int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), int(int(_GLF_IDENTITY(1, min(1, 1))))), 0, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ _GLF_IDENTITY((1), 0 ^ ((1))), ~ (1)))))))) << 0))]), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size, (false ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_base) : GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size))[_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (1)), 1)), _GLF_IDENTITY(0, _GLF_IDENTITY((false ? _GLF_FUZZED(-27527) : 0), ~ (~ ((false ? _GLF_FUZZED(-27527) : 0))))), 1)), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) / 1), 1)), 1)), 0, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))))), clamp(ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) / 1), 1)), 1)), 0, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))))), ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) / 1), 1)), 1)), 0, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))))), ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) / 1), 1)), 1)), 0, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))))))))) << 0))]))), (_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u, 1u, 0u))) | 0u))))), GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size[_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, clamp(2, 2, 2)), 2, 2))], GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size[3])))) * uvec4(1u, 1u, 1u, 1u)))).w) ^ 0u) * _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id));
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_base.w = workgroup_base;
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_base.z = GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_base.w;
 uint virtual_gid = GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_base.z + _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size, max(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size, GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size)), GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size), (_GLF_IDENTITY(min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size, max(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size, GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size)), GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size), (true ? min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size, max(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size, GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size)), GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size) : _GLF_FUZZED(uvec4(75004u, 130160u, 126458u, 167064u))))) - uvec4(0u, 0u, 0u, 0u))).x * _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.y, _GLF_IDENTITY((GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.y) ^ 0u, 0u + ((GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.y) ^ 0u))) + GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_base.y;
 do
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_base.z = _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_base.y = GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_base.z;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  barrier();
 GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.z = GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_base.y;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_base.z, (GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_base.z) | (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_base.z, (GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_base.z) | (GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_base.z)))) + GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_base.z, (GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_base.z) | (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_base.z, (GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_base.z) | (GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_base.z)))) + GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.y, (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_base.z, (GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_base.z) | (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_base.z, (GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_base.z) | (GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_base.z)))) + GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.y) << 0u)) / 1u) + (_GLF_IDENTITY((GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_base.y + 1), max((GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_base.y + _GLF_IDENTITY(1, 0 | (1))), (GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_base.y + 1))) % GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.y);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) - 0u, 0u + (_GLF_IDENTITY((uint(1)) - 0u, (_GLF_IDENTITY((uint(1)) - 0u, ((uint(1)) - 0u) | 0u)) >> 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) - 0u)), ((_GLF_IDENTITY(uint(1), (uint(1)) - 0u))) << 0u)) / 1u) - 0u), (uint(1)) | 0u))), 4, 64, 4);
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     barrier();
    }
  }
 uint read = atomicLoad(_GLF_IDENTITY(buf[GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.z], (buf[GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.z]) << 0u), 4, 64, _GLF_IDENTITY(0, 1 * (0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_base.y + 1 < GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.y, (GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_base.y + 1 < GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.y) || false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       atomicStore(checker[GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.z], read, 4, 64, 4);
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   subgroupAll(false);
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, 0 + (_GLF_IDENTITY(5, 0 ^ (5))))) * 1)), int(ivec2(int(5), 1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)) & 1)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
          }
         barrier();
        }
      }
    }
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(max(_injected_loop_counter, _injected_loop_counter), max(max(_injected_loop_counter, _injected_loop_counter), _GLF_IDENTITY(max(_injected_loop_counter, _injected_loop_counter), 0 + (max(_injected_loop_counter, _injected_loop_counter))))))) ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), 0 | (0))))))) > 0), ! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))), min(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))), _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))), int(ivec2(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, 0 + (0)))), ~ (~ (~ (~ (_GLF_IDENTITY(0, 0 + (0)))))))), 1))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), 0 + (0)))))) - 0)))), _GLF_IDENTITY(false || ((! (_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), 0 + (0)))))) - 0), 0 | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), 0 + (0)))))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), 0 + (0)))))) - 0)) - 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), 0 + (0)))))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), 0 + (0)))))) - 0)) - 0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), 0 + (0)))))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), 0 + (0)))))) - 0)) - 0)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), 0 + (0)))))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), 0 + (0)))))) - 0)) - 0)), clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), 0 + (0)))))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), 0 + (0)))))) - 0)) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), 0 + (0)))))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), 0 + (0)))))) - 0)) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), 0 + (0)))))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), 0 + (0)))))) - 0)) - 0))))) * 1)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false || ((! (_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), 0 + (0)))))) - 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), 0 + (0)))))) - 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), 0 + (0)))))) - 0)) - 0, (false ? _GLF_FUZZED(_injected_loop_counter) : (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, int(int(0))), 0), (ivec2(_GLF_IDENTITY(0, int(int(0))), 0)) / ivec2(1, 1))), (false ? _GLF_FUZZED(92213) : int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, int(int(0))), 0), (ivec2(_GLF_IDENTITY(0, int(int(0))), 0)) / ivec2(1, 1)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), 0 + (0)))))) - 0)) - 0))))))))), (false || ((! (_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), 0 + (0)))))) - 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), 0 + (0)))))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), 0 + (0)))))) - 0)) - 0)))))))) && true), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false || ((! (_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), 0 + (0)))))) - 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), 0 + (0)))))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), 0 + (0)))))) - 0)) - 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), 0 + (0)))))) - 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), 0 + (0)))))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), 0 + (0)))))) - 0)) - 0))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), 0 + (0)))))) - 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), 0 + (0)))))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), 0 + (0)))))) - 0)) - 0)))))) << 0))))), (false || ((! (_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 + (0)), 0 ^ (_GLF_IDENTITY(0, 0 + (0))))))), _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), 0 + (0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), 0 + (0)))))))) - 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0), int(ivec2(_GLF_IDENTITY((0), int(ivec3((0), 1, 0))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5)))))) ^ 0), 0 + (0)))))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0 + (0), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(0 + (0), 1), (true ? ivec2(0 + (0), 1) : _GLF_FUZZED((ivec2(-94776, -43564) * ivec2(549, -1007)))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(0 + (0), 1), (true ? ivec2(0 + (0), 1) : _GLF_FUZZED((ivec2(-94776, -43564) * ivec2(549, -1007)))))), 0 | (int(_GLF_IDENTITY(ivec2(0 + (0), 1), (true ? ivec2(0 + (0), 1) : _GLF_FUZZED((ivec2(-94776, -43564) * ivec2(549, -1007)))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(0 + (0), 1), (true ? ivec2(0 + (0), 1) : _GLF_FUZZED((ivec2(-94776, -43564) * ivec2(549, -1007)))))), 0 ^ (int(_GLF_IDENTITY(ivec2(0 + (0), 1), (true ? ivec2(0 + (0), 1) : _GLF_FUZZED((ivec2(-94776, -43564) * ivec2(549, -1007)))))))))))))))) - 0)) - 0)))))))) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true)))))))); _injected_loop_counter --)
        {
         atomicStore(checker[_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size, (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size) >> uvec4(_GLF_IDENTITY(0u, uint(uvec2(0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)))).z], read, 4, 64, 4);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = (51546 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) / 1)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
             do
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   for(int _injected_loop_counter = _GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 0), ((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(6.1, 50.44), clamp(vec2(6.1, 50.44), vec2(6.1, 50.44), _GLF_IDENTITY(vec2(6.1, 50.44), mat2(1.0) * (vec2(6.1, 50.44)))))))), injectionSwitch)).y)) ^ 0)) << 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
          }
        }
       else
        {
        }
      }
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-867.032) : injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-867.032) : injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-867.032) : injectionSwitch.y)))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-867.032) : injectionSwitch.y)))))), true, false, true))))))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 subgroupAll(true);
                }
               else
                {
                }
              }
            }
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
}
