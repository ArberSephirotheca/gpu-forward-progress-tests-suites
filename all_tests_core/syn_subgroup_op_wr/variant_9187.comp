#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uvec2 GLF_merged2_0_1_16_1_1_4next_virtual_gidread;
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_baseworkgroup_baseworkgroup_sizenum_workgroup;
 uvec4 GLF_merged2_0_2_52_2_2_40GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_4_1_1_12readworkgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_2_52_2_2_40GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_4_1_1_12readworkgroup_id.xy = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size;
 uvec2 GLF_merged2_0_1_4_1_1_12readworkgroup_id;
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_2_52_2_2_40GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_4_1_1_12readworkgroup_id.zw = GLF_merged2_0_1_4_1_1_12readworkgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, 1))))))])).x)) > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(61.56) : injectionSwitch.y))), false || ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uvec4 GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basesubgroup_idworkgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(acos(3.0)) : injectionSwitch.x, (true ? false ? _GLF_FUZZED(acos(3.0)) : injectionSwitch.x : _GLF_FUZZED(sinh(5.1)))))) < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(acos(3.0)) : injectionSwitch.x, (true ? false ? _GLF_FUZZED(acos(3.0)) : injectionSwitch.x : _GLF_FUZZED(sinh(5.1)))))) < injectionSwitch.y, false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(acos(3.0)) : injectionSwitch.x, (true ? false ? _GLF_FUZZED(acos(3.0)) : injectionSwitch.x : _GLF_FUZZED(sinh(5.1)))))) < injectionSwitch.y, false, true)))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec3(bvec2(! (false), false), true)))))))) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 uvec3 GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_baseworkgroup_baseworkgroup_size;
 GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_baseworkgroup_baseworkgroup_sizenum_workgroup.xyz = GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_baseworkgroup_baseworkgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(true, false, false)), (bool(bvec3(true, false, false))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), false)))), (_GLF_IDENTITY(bool(bvec3(true, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec3(true, false, false)), (bool(bvec3(true, false, false))) && true)))) && true)) && true)))) && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, max(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / 1.0))))), injectionSwitch.y)), injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))), (bool(bvec3(true, false, false))) && true)))) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(758.949) : injectionSwitch.y))) - 0.0), min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))), (bool(bvec3(true, false, false))) && true)))) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(758.949) : injectionSwitch.y))) - 0.0), min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), (bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false))) && true)))) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), (true ? max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))) : _GLF_FUZZED(normalize(-2966.6759)))))), mix(float(_GLF_FUZZED(80.78)), float(min(injectionSwitch.y, injectionSwitch.y)), bool(true)))), injectionSwitch.y))))))))), false, false)), bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), (bool(bvec3(true, false, false))) && true)))) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(624.317)), bool(false))), injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(true, false, false)), (bool(bvec3(true, false, false))) && true), true && (_GLF_IDENTITY(bool(bvec3(true, false, false)), (bool(bvec3(true, false, false))) && true)))))) && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) && true)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(true, false, false)), (bool(bvec3(true, false, false))) && true), true && (_GLF_IDENTITY(bool(bvec3(true, false, false)), (bool(bvec3(true, false, false))) && true)))))) && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) && true)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(true, false, false)), (bool(bvec3(true, false, false))) && true), true && (_GLF_IDENTITY(bool(bvec3(true, false, false)), (bool(bvec3(true, false, false))) && true)))))) && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) && true))))) || false)) && true))))), false, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))))), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, false)), (bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), bool(bvec3(! (false), false, true))))), false))) && true), true, false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))))), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, false)), (bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), bool(bvec3(! (false), false, true))))), false))) && true), true, false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))))), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), bool(bvec3(! (false), false, true))))), false))) && true), true, _GLF_IDENTITY(false, false || (false)))))))))) || false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basesubgroup_idworkgroup_base.z = subgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y = GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basesubgroup_idworkgroup_base.z;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || false), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec4(bvec3(bvec3(false, false, false)), true))), bvec3(bvec4(bvec3(bvec3(false, false, false)), true))))), true))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_IDENTITY(GLF_merged2_0_2_52_2_2_40GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_4_1_1_12readworkgroup_id.xy.x = subgroup_size, (GLF_merged2_0_2_52_2_2_40GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_4_1_1_12readworkgroup_id.xy.x = subgroup_size) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.w = GLF_merged2_0_2_52_2_2_40GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_4_1_1_12readworkgroup_id.xy.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))), bool(bool(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))), bool(bool(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))), ((! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))), (bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))) || false))))))) || false)) || false)))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))), bool(bool(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))))))))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))), bool(bool(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))), bool(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))), bool(bool(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))))))))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))), ! (! (bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, false || (false)))))))))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))), false || (bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))))))))))))))) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) * 1.0)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.z = subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_baseworkgroup_baseworkgroup_sizenum_workgroup.w = num_workgroup;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basesubgroup_idworkgroup_base.x = GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_baseworkgroup_baseworkgroup_sizenum_workgroup.w;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.x = GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basesubgroup_idworkgroup_base.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged2_0_2_52_2_2_40GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_4_1_1_12readworkgroup_id.xy.y = workgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_baseworkgroup_baseworkgroup_sizenum_workgroup.xyz.z = GLF_merged2_0_2_52_2_2_40GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_4_1_1_12readworkgroup_id.xy.y;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_2_52_2_2_40GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_4_1_1_12readworkgroup_id.zw.y = workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.w = GLF_merged2_0_2_52_2_2_40GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_4_1_1_12readworkgroup_id.zw.y;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_baseworkgroup_baseworkgroup_sizenum_workgroup.xyz.z * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id, (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id) ^ (uvec4(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), min(~ (0u), _GLF_IDENTITY(~ _GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(66933u))), 0u | (~ (0u))))), max(~ (0u), ~ (0u)))), (~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(max(~ _GLF_IDENTITY((0u), uint(uvec4((0u), 0u, 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))), ~ (0u)), clamp(max(~ _GLF_IDENTITY((0u), uint(uvec4((0u), 0u, 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))), ~ (0u)), max(~ _GLF_IDENTITY((0u), uint(uvec4((0u), 0u, 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))), ~ (0u)), max(~ _GLF_IDENTITY((0u), uint(uvec4((0u), 0u, 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))), ~ (0u))))))) - 0u))), clamp(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ (_GLF_IDENTITY(0u, uint(uvec2(0u, (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))), ~ (0u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ (_GLF_IDENTITY(0u, min(0u, 0u))), ~ (0u)))))), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ (_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, ~ (~ (0u))))), ~ (0u)))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u)))))), (0u ^ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u))))))) | (0u ^ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u)))))))))), (uint(uint(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u)))))), (0u ^ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u))))))) | (0u ^ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u))))))))))) >> (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) ^ 0u) ^ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u)))))), (true ? 0u ^ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u)))))) : _GLF_FUZZED(subgroup_local_id))))), min(0u ^ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ (0u), _GLF_IDENTITY(~ (0u), (~ (0u)) | (~ (0u)))))))), 0u ^ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u)))))))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) + 0u))))))), uint(uvec4(~ (_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) + 0u))))))), (1u | 0u), 0u, 1u))))), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u)))))), (false ? _GLF_FUZZED(workgroup_id) : 0u ^ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u))))))))) / 1u), _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), (false ? _GLF_FUZZED(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size) : _GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u))))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), ~ (~ (_GLF_IDENTITY((0u), 0u | ((0u)))))))), (_GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), ~ (~ (_GLF_IDENTITY((0u), 0u | ((0u))))))))) / 1u), max(~ (0u), ~ (0u)))), max(~ (_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u)))), ~ (_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u)))))))))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((0u), ((0u)) >> 0u), max(~ (0u), _GLF_IDENTITY(~ (0u), 0u | (~ (0u))))), min(_GLF_IDENTITY(~ _GLF_IDENTITY((0u), ((0u)) >> 0u), max(~ (0u), _GLF_IDENTITY(~ (0u), 0u | (~ (0u))))), _GLF_IDENTITY(~ _GLF_IDENTITY((0u), ((0u)) >> 0u), max(~ (0u), _GLF_IDENTITY(~ (0u), 0u | (~ (0u)))))))))), (0u ^ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u))))))))) | (0u ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (0u), max(~ (0u), _GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u)))))), uint(uvec3((_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u)))), 1u, _GLF_IDENTITY(0u, (0u) >> 0u)))))), min((_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u)))), uint(uvec3((_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u)))), 1u, 0u))))), (_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u)))), uint(uvec3((_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u)))), 1u, 0u))))))))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (0u), max(~ (_GLF_IDENTITY(0u, (0u) - 0u)), ~ (0u)))), ((_GLF_IDENTITY(~ (0u), max(~ (_GLF_IDENTITY(0u, (0u) - 0u)), ~ (0u))))) * 1u))), min(0u ^ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), min(_GLF_IDENTITY(~ (0u), (~ (0u)) / 1u), ~ (0u))), (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u)))) | (~ (0u))), ~ (0u)))))), 0u ^ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : 0u)), uint(uvec2(0u, 1u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u)) + (0u)))), uint(uvec2(0u, 1u))))) + 0u) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) << _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((0u), ((0u)) * 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (0u))), ~ _GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (0u)))), 0u + ((_GLF_IDENTITY(0u, ~ (~ (0u)))))), ~ (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) - 0u), 0u))))))))), 0u) | uvec4(0u, 0u, 0u, 0u))).w;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(9.7)), bool(false))))), min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basesubgroup_idworkgroup_base.w = workgroup_base;
 _GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_baseworkgroup_baseworkgroup_sizenum_workgroup.xyz.y = GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basesubgroup_idworkgroup_base.w, (GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_baseworkgroup_baseworkgroup_sizenum_workgroup.xyz.y = GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basesubgroup_idworkgroup_base.w) << 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y, ~ (~ (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y))) * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.w, max(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.w, GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.w)), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y * GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY(max(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id, max(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id, GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id)).y * GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y, _GLF_IDENTITY(min(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y, ~ _GLF_IDENTITY((~ (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y)), clamp((~ (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y)), (~ (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y)), (~ (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y)))))), clamp(min(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y, ~ _GLF_IDENTITY((~ (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y)), clamp((~ (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y)), (~ (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y)), (~ (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y)))))), min(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y, ~ _GLF_IDENTITY((~ (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y)), clamp((~ (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y)), (~ (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y)), (~ (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y)))))), min(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y, ~ _GLF_IDENTITY((~ (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y)), clamp((~ (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y)), (~ (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y)), (~ (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y))))))))) * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.w, min(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.w, GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.w)), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.w) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.w, GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.w)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.w, min(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.w, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, determinant(mat3(1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(95.40), _GLF_FUZZED(7746.6145)), bvec2(false, false))).x), 0.0, _GLF_ONE(1.0, injectionSwitch.y), exp(0.0), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 1.0, length(sqrt(vec2(0.0, 0.0))), 0.0), (mat3x2(1.0, 0.0, 1.0, 1.0, length(sqrt(vec2(0.0, 0.0))), 0.0)) * mat3(1.0)))), 1.0, exp(0.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)))), float(_GLF_FUZZED(80.16)), bool(false))), exp(0.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0), transpose(transpose(_GLF_IDENTITY(mat4(0.0, round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), 1.0, determinant(mat3(1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0))))), exp(0.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, exp(0.0), 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0)), dot(vec4(1.0, 1.0, exp(0.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0), transpose(transpose(mat4(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, determinant(mat3(1.0, 0.0, log(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8353.4020)), float(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0))), bool(true))), 1.0, 0.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_ONE(1.0, injectionSwitch.y), exp(0.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, exp(0.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, exp(0.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.0)), float(1.0), bool(true))))), 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0))))))))), injectionSwitch.x)) ^ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.w, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.w) >> 0u))))))))))), 0u ^ (max(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id, max(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id, GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id)).y * GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y, _GLF_IDENTITY(min(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y, ~ _GLF_IDENTITY((~ (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y)), clamp((~ (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y)), (~ (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y)), (~ (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y)))))), clamp(min(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y, ~ _GLF_IDENTITY((~ (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y)), clamp((~ (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y)), (~ (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y)), (~ (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y)))))), min(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y, ~ _GLF_IDENTITY((~ (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y)), clamp((~ (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y)), (~ (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y)), (~ (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y)))))), min(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y, ~ _GLF_IDENTITY((~ (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y)), clamp((~ (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y)), (~ (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y)), (~ (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y))))))))) * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.w, min(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.w, GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.w)), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.w) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.w, GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.w)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.w, min(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.w, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, determinant(mat3(1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(95.40), _GLF_FUZZED(7746.6145)), bvec2(false, false))).x), 0.0, _GLF_ONE(1.0, injectionSwitch.y), exp(0.0), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 1.0, length(sqrt(vec2(0.0, 0.0))), 0.0), (mat3x2(1.0, 0.0, 1.0, 1.0, length(sqrt(vec2(0.0, 0.0))), 0.0)) * mat3(1.0)))), 1.0, exp(0.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)))), float(_GLF_FUZZED(80.16)), bool(false))), exp(0.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0), transpose(transpose(_GLF_IDENTITY(mat4(0.0, round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), 1.0, determinant(mat3(1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0))))), exp(0.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, exp(0.0), 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0)), dot(vec4(1.0, 1.0, exp(0.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0), transpose(transpose(mat4(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, determinant(mat3(1.0, 0.0, log(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8353.4020)), float(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0))), bool(true))), 1.0, 0.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_ONE(1.0, injectionSwitch.y), exp(0.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, exp(0.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, exp(0.0), 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.0)), float(1.0), bool(true))))), 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0))))))))), injectionSwitch.x)) ^ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.w, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.w) >> 0u))))))))))))))) << (0u << _GLF_IDENTITY(uint(2u), uint(2u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basesubgroup_idworkgroup_base.y = subgroup_base;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_baseworkgroup_baseworkgroup_sizenum_workgroup.xyz.x = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basesubgroup_idworkgroup_base, (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basesubgroup_idworkgroup_base) - uvec4(0u, 0u, 0u, 0u)).y, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basesubgroup_idworkgroup_base, (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basesubgroup_idworkgroup_base) - uvec4(0u, 0u, 0u, 0u)).y) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basesubgroup_idworkgroup_base, (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basesubgroup_idworkgroup_base) - uvec4(0u, 0u, 0u, 0u)).y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basesubgroup_idworkgroup_base, (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basesubgroup_idworkgroup_base) - uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basesubgroup_idworkgroup_base, (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basesubgroup_idworkgroup_base) - uvec4(0u, 0u, 0u, 0u))) * uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y) ^ 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basesubgroup_idworkgroup_base, (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basesubgroup_idworkgroup_base) - uvec4(0u, 0u, 0u, 0u)).y, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basesubgroup_idworkgroup_base, (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basesubgroup_idworkgroup_base) - uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 0u + (~ (0u))))))).y) ^ 0u)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_baseworkgroup_baseworkgroup_sizenum_workgroup.xyz.y + GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_baseworkgroup_baseworkgroup_sizenum_workgroup.xyz.x + GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.z;
 GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.z = virtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (true)), ((! (true))) && true), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((! (true)), ((! (true))) && true), false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY((! (true)), ((! (true))) && true), false)), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY((! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), bool(bvec2(! ((true)), true)))))), ((! (true))) && true), false)), true, true)), true)))))))))) && true), true)))))
  return;
 uint next_virtual_gid = GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_baseworkgroup_baseworkgroup_sizenum_workgroup.xyz.y + GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_baseworkgroup_baseworkgroup_sizenum_workgroup.xyz.x + ((GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.z + 1) % _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY(uint(uvec2(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.w, 0u)), 0u | (_GLF_IDENTITY(uint(uvec2(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.w, 0u)), max(uint(uvec2(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.w, 0u)), uint(uvec2(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.w, 0u))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged2_0_1_16_1_1_4next_virtual_gidread.x = next_virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.x = _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_4next_virtual_gidread, max(GLF_merged2_0_1_16_1_1_4next_virtual_gidread, GLF_merged2_0_1_16_1_1_4next_virtual_gidread)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint read = 0;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged2_0_1_16_1_1_4next_virtual_gidread.y = read;
 GLF_merged2_0_2_52_2_2_40GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_4_1_1_12readworkgroup_id.zw.x = GLF_merged2_0_1_16_1_1_4next_virtual_gidread.y;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.y = GLF_merged2_0_2_52_2_2_40GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_4_1_1_12readworkgroup_id.zw.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, 0 ^ (0))], injectionSwitch[1])))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size, clamp(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size, (false ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id) : GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size)), GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size, clamp(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size, GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size, GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size)), clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size, clamp(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size, GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size, GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size, clamp(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size, GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size, GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size, clamp(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size, GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size, GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size)))), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size, clamp(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size, GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size) : GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size)))))).x], uint(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(1, ~ (~ (1))) * (_GLF_IDENTITY(1, clamp(1, 1, 1)))))))), 4, _GLF_IDENTITY(64, min(_GLF_IDENTITY(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (64)), max((_GLF_IDENTITY(~ (64), (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), (~ (64)) ^ 0), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(~ (64), (~ (64)) ^ 0), ~ (~ (_GLF_IDENTITY(~ (64), (~ (64)) ^ 0)))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), int(ivec2(int(7), 1))))), 1)))) / _GLF_IDENTITY(1, (1) | (1)))), (~ (64))))), 64)), clamp(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (64)), max((~ (64)), _GLF_IDENTITY((~ (64)), ((~ (64))) - 0)))), 64)), _GLF_IDENTITY(64, _GLF_IDENTITY(min(_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (64)), max((~ _GLF_IDENTITY((64), (false ? _GLF_FUZZED(-19573) : (64)))), (~ (64))))), 64), clamp(min(_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (64)), max((~ _GLF_IDENTITY((64), (false ? _GLF_FUZZED(-19573) : (64)))), (~ (64))))), 64), _GLF_IDENTITY(min(_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (64)), max((~ _GLF_IDENTITY((64), (false ? _GLF_FUZZED(-19573) : (64)))), (~ (64))))), 64), 0 | (min(_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (64)), max((~ _GLF_IDENTITY((64), (false ? _GLF_FUZZED(-19573) : (64)))), (~ (64))))), 64))), min(_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (64)), max((~ _GLF_IDENTITY((64), (false ? _GLF_FUZZED(-19573) : (64)))), (~ (64))))), 64)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec3(_GLF_IDENTITY(64, int(ivec4(64, 0, 0, 0))), 1, 1))), min(_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (64)), max((~ (64)), (~ (64))))), 64)), ~ (~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) | 0)) - _GLF_IDENTITY(0, (0) + 0)), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (64)), max((~ (64)), (~ (64)))), (~ _GLF_IDENTITY((~ (64)), max((~ (64)), (~ (64))))) << 0)), 64))))))), 64)), 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, abs(0.0) + (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.z, clamp(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.z, GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.z, GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.z)) % 2) == 0)
  {
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.y = _GLF_IDENTITY(atomicLoad(buf[GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.z], 4, _GLF_IDENTITY(64, (64) / 1), 2), (atomicLoad(buf[GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.z], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) / 1), min(_GLF_IDENTITY(64, (64) / 1), _GLF_IDENTITY(64, _GLF_IDENTITY((64), 0 | ((_GLF_IDENTITY(64, (64) - 0)))) / 1))), 2)) / (1u & 1u));
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.y = atomicLoad(buf[GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.z], _GLF_IDENTITY(4, (4) | (4)), 64, 2);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 0.0, abs(1.0), 0.0, abs(1.0)), (true ? _GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 0.0, abs(1.0), 0.0, abs(1.0)), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x3(injectionSwitch.x, 0.0, 0.0, abs(1.0), 0.0, abs(1.0)))) : _GLF_FUZZED(mat2x3(-57.91, 17.40, -71.21, -562.947, 3216.1458, -162.298)))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), vec2(_GLF_FUZZED(0.6), _GLF_FUZZED(259.869)), bvec2(false, false))).y)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ! (! ((injectionSwitch.x > injectionSwitch.y) && true))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ! (! ((injectionSwitch.x > injectionSwitch.y) && true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY((_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y) && true), bool(bool(((injectionSwitch.x > injectionSwitch.y) && true))))), ((_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y) && true), bool(bool(((injectionSwitch.x > injectionSwitch.y) && true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ! (! ((injectionSwitch.x > injectionSwitch.y) && true))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ! (! ((injectionSwitch.x > injectionSwitch.y) && true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY((_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y) && true), bool(bool(((injectionSwitch.x > injectionSwitch.y) && true))))), ((_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y) && true), bool(bool(((injectionSwitch.x > injectionSwitch.y) && true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ! (! ((injectionSwitch.x > injectionSwitch.y) && true))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) && true, ! (! ((injectionSwitch.x > injectionSwitch.y) && true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY((_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y) && true), bool(bool(((injectionSwitch.x > injectionSwitch.y) && true))))), ((_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y) && true), bool(bool(((injectionSwitch.x > injectionSwitch.y) && true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * cos(vec2(0.0, 0.0)), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * cos(vec2(0.0, 0.0))) * mat2(1.0))).x > injectionSwitch.y) && true, false || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y) && true), bool(bvec2(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y) && true), true)))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, bool(bool(true))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(checker[GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.z], GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_13next_virtual_gidreadsubgroup_local_idsubgroup_size.y, 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
