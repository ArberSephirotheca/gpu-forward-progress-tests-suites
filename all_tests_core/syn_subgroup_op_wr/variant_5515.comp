#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, min(1, 1))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
      }
    }
   else
    {
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(0, 0 ^ (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0))))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))))), (injectionSwitch))) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))))), (injectionSwitch))) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0)))) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), injectionSwitch)).y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0)))), mix(vec2(_GLF_IDENTITY((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0)))))[0], max((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0)))))[0], _GLF_IDENTITY((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0)))))[0], clamp((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0)))))[0], (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0)))))[0], (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0)))))[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, 0, 0), ivec3(0, 0, 0) ^ (_GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) ^ ivec3(0, 0, 0))))))])))), _GLF_FUZZED(8431.9090)), vec2(_GLF_FUZZED(-443.064), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0)))))[1]), bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, true)))))))))
  {
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(int(2), _GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), clamp(~ (int(2)), ~ (int(2)), ~ (int(2)))))), int(2)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, int(ivec4(2, 0, 0, _GLF_IDENTITY(1, (1) | (0 & 54837))))), 2)))))))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY(int(2), int(2))))))) * int(_GLF_ONE(1.0, injectionSwitch.y)))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(int(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) / 1) ^ 0)))), _GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), clamp(~ (int(2)), ~ (_GLF_IDENTITY(int(2), (int(2)) * 1)), ~ (int(2)))))), int(2)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, int(ivec4(2, 0, 0, 1))), 2))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (bool(bvec3(true, false, true)))))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, int(ivec4(2, 0, 0, 1))), 2))))))))))) && true); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))));
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x))))), (gl_NumWorkGroups.x) | _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) ^ (~ (gl_NumWorkGroups.x)))) | (~ (gl_NumWorkGroups.x)))), max((_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (~ (gl_NumWorkGroups.x)) | (~ (gl_NumWorkGroups.x)))), (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (~ (gl_NumWorkGroups.x)) | (~ (gl_NumWorkGroups.x))))))), gl_NumWorkGroups.x))), ((_GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) / 1u)) ^ (~ (gl_NumWorkGroups.x)))) | (~ (gl_NumWorkGroups.x)))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) / 1u)) ^ (~ (gl_NumWorkGroups.x)))) | (~ (gl_NumWorkGroups.x)))), min((_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) / 1u)) ^ (~ (gl_NumWorkGroups.x)))) | (~ (gl_NumWorkGroups.x)))), (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) / 1u)) ^ (~ (gl_NumWorkGroups.x)))) | (~ (gl_NumWorkGroups.x))))))) << 0u), max((_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (~ (gl_NumWorkGroups.x)) | (~ (gl_NumWorkGroups.x)))), (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (~ (gl_NumWorkGroups.x)) | (~ (gl_NumWorkGroups.x))))))), gl_NumWorkGroups.x)))) / 1u)))), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) - _GLF_IDENTITY(0u, min(0u, 0u)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-744.006, 1.5)) : injectionSwitch)) : _GLF_FUZZED(vec2(273.535, 3.1)))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-744.006, 1.5)) : injectionSwitch)) : _GLF_FUZZED(vec2(273.535, 3.1)))).x, clamp(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-744.006, 1.5)) : injectionSwitch)) : _GLF_FUZZED(vec2(273.535, 3.1)))).x, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-744.006, 1.5)) : injectionSwitch)) : _GLF_FUZZED(vec2(273.535, 3.1)))).x, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-744.006, 1.5)) : injectionSwitch)) : _GLF_FUZZED(vec2(273.535, 3.1)))).x)), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-744.006, 1.5)) : injectionSwitch)) : _GLF_FUZZED(vec2(273.535, 3.1)))).x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, 0 ^ (0))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), true && (bool(bvec4(false, false, false, false)))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8368.3638)), bool(false))))) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))))))))))), false)))))), (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))))) && true), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)))))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY((0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) ^ 0))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) ^ 0))), int(ivec4((0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) ^ 0))), 1, 1, 1))), 0), clamp(ivec2(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) ^ 0))), int(ivec4((0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) ^ 0))), 1, 1, 1))), 0), _GLF_IDENTITY(ivec2(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) ^ 0))), int(ivec4((0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) ^ 0))), 1, 1, 1))), 0), min(ivec2(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) ^ 0))), int(ivec4((0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) ^ 0))), 1, 1, 1))), 0), ivec2(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) ^ 0))), int(ivec4((0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) ^ 0))), 1, 1, 1))), 0))), ivec2(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) ^ 0))), int(ivec4((0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) ^ 0))), 1, 1, 1))), 0))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)), _injected_loop_counter), (_GLF_IDENTITY(clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)), _injected_loop_counter), (clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)), _injected_loop_counter)) ^ (0 << _GLF_IDENTITY(int(4), int(4))))) | (clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)), _injected_loop_counter)))) != _GLF_IDENTITY(1, (false ? _GLF_FUZZED(bitCount(num_workgroup)) : 1))); _injected_loop_counter ++)
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) << 0))
        {
         barrier();
        }
      }
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, int(ivec2(0, 1))))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))));
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec4(true && (false), false, true, true))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false, false)))), ! (! (false)))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))), (true && (! (_GLF_IDENTITY(false, ! (! (false)))))) || false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec4(true && (false), false, true, true))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false, false)))), ! (! (false)))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))), (true && (! (_GLF_IDENTITY(false, ! (! (false)))))) || false))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(true && (false), bool(bvec4(true && (false), false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), true, true))))))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false, false)))), ! (! (false)))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))), (true && (! (_GLF_IDENTITY(false, ! (! (false)))))) || false)))) || false)) || false))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - tan(0.0)), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y) || false)))));
        }
       else
        {
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u);
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY((0u & 157753u) >> _GLF_IDENTITY(uint(4u), uint(4u)), max(_GLF_IDENTITY((_GLF_IDENTITY(0u & 157753u, ~ (~ (0u & 157753u)))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(_GLF_IDENTITY(4u, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), uint(uvec4(uint(2u), 1u, 0u, 1u))))), ((0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), uint(uvec4(uint(2u), 1u, 0u, 1u)))))) | (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), uint(uvec4(uint(2u), 1u, 0u, 1u))))), _GLF_IDENTITY(uint(uvec4((0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), uint(uvec4(uint(2u), 1u, 0u, 1u))))), 0u, 1u, 1u)), max(uint(uvec4((0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), uint(uvec4(_GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u))))) ^ (0u ^ 0u)), 1u, 0u, 1u))))), 0u, 1u, 1u)), uint(uvec4((0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), uint(uvec4(uint(2u), 1u, 0u, 1u))))), 0u, 1u, 1u))))))) | (4u)), ~ (~ (_GLF_IDENTITY(4u, _GLF_IDENTITY(0u, (0u) ^ 0u) | (4u)))))) >> 0u)), uint(4u)), uint(uint((0u & 157753u) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) ^ 0u), uint(4u))))), (0u & 157753u) >> _GLF_IDENTITY(uint(4u), uint(4u)))))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(unpackSnorm2x16(workgroup_size)) : injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x))) * 1.0) > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   barrier();
  }
 uint read = 0;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true))))) ? _GLF_FUZZED(-40786) : _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) / 1), _GLF_IDENTITY(2, _GLF_IDENTITY((2) | (2), ((2) | (2)) | (_GLF_IDENTITY((2) | (2), ((2) | (2)) | ((2) | (2))))))))))) == 0)
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)))))), bool(bvec2((false), false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)) || false), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)))))), _GLF_IDENTITY(bool(bvec2((false), false)), ! (! (bool(bvec2((false), false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)) || false)) || false));
   read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY((4) << 0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5254) : (4) << _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), 0 ^ (int(0)))))) ^ 0)))), 64, 2), _GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, clamp(4, 4, 4)), 64, 2)), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), ~ (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), (~ _GLF_IDENTITY(_GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (0u) | 0u)), min(_GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (0u) | 0u)), _GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (0u) | 0u))))) | (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), 0u + (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))))), 0u, 0u, 0u), (uvec4(_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), 0u + (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))))), 0u, 0u, 0u)) | (uvec4(_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), 0u + (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))))), 0u, 0u, 0u))))))))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) / 1)) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), ~ (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), (~ _GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (0u) | 0u))) | (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, _GLF_IDENTITY(2, (2) >> 0)))))))))), min(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), 0u + (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), min(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u))))))), ~ (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), (~ _GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | 0u))) | (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))))))))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), 0u + (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), min(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u))))))), ~ (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), (~ _GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | 0u))) | (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))))))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), 0u + (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), min(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u))))))), ~ (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), (~ _GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | 0u))) | (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))))))))) | 0u), (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), 0u + (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), min(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u))))))), ~ (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), (~ _GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | 0u))) | (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))))))))))), ~ (~ (_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), ~ (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), (~ _GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (0u) | 0u))) | (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY((4) + int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_IDENTITY(ivec2((4) + int(_GLF_ZERO(0.0, injectionSwitch.x)), 1), ivec2(1, 1) * (ivec2((4) + int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))))), 64, 2)))))))))))) ^ (0u | 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), ~ (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), (~ _GLF_IDENTITY(_GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (0u) | 0u)), min(_GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (0u) | 0u)), _GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (0u) | 0u))))) | (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), 0u + (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))))), 0u, 0u, 0u), (uvec4(_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), 0u + (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))))), 0u, 0u, 0u)) | (uvec4(_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), 0u + (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))))), 0u, 0u, 0u))))))))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) / 1)) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), ~ (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), (~ _GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (0u) | 0u))) | (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, _GLF_IDENTITY(2, (2) >> 0)))))))))), min(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), 0u + (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), min(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u))))))), ~ (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), (~ _GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | 0u))) | (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))))))))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), 0u + (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), min(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u))))))), ~ (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), (~ _GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | 0u))) | (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))))))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), 0u + (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), min(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u))))))), ~ (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), (~ _GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | 0u))) | (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))))))))) | 0u), (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), 0u + (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), min(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u))))))), ~ (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), (~ _GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | 0u))) | (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))))))))))), ~ (~ (_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), ~ (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), (~ _GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (0u) | 0u))) | (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY((4) + int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_IDENTITY(ivec2((4) + int(_GLF_ZERO(0.0, injectionSwitch.x)), 1), ivec2(1, 1) * (ivec2((4) + int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))))), 64, 2)))))))))))) ^ (0u | 0u)), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), ~ (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), (~ _GLF_IDENTITY(_GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (0u) | 0u)), min(_GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (0u) | 0u)), _GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (0u) | 0u))))) | (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), 0u + (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))))), 0u, 0u, 0u), (uvec4(_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), 0u + (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))))), 0u, 0u, 0u)) | (uvec4(_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), 0u + (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))))), 0u, 0u, 0u))))))))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) / 1)) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), ~ (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), (~ _GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (0u) | 0u))) | (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, _GLF_IDENTITY(2, (2) >> 0)))))))))), min(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), 0u + (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), min(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u))))))), ~ (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), (~ _GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | 0u))) | (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))))))))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), 0u + (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), min(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u))))))), ~ (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), (~ _GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | 0u))) | (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))))))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), 0u + (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), min(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u))))))), ~ (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), (~ _GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | 0u))) | (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))))))))) | 0u), (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), 0u + (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), min(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u))))))), ~ (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), (~ _GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | 0u))) | (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))))))))))), ~ (~ (_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), ~ (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), (~ _GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (0u) | 0u))) | (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY((4) + int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_IDENTITY(ivec2((4) + int(_GLF_ZERO(0.0, injectionSwitch.x)), 1), ivec2(1, 1) * (ivec2((4) + int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))))), 64, 2)))))))))))) ^ (0u | 0u))) / 1u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), ~ (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), (~ _GLF_IDENTITY(_GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (0u) | 0u)), min(_GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (0u) | 0u)), _GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (0u) | 0u))))) | (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), 0u + (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))))), 0u, 0u, 0u), (uvec4(_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), 0u + (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))))), 0u, 0u, 0u)) | (uvec4(_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), 0u + (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))))), 0u, 0u, 0u))))))))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) / 1)) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), ~ (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), (~ _GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (0u) | 0u))) | (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, _GLF_IDENTITY(2, (2) >> 0)))))))))), min(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), 0u + (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), min(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u))))))), ~ (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), (~ _GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | 0u))) | (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))))))))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), 0u + (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), min(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u))))))), ~ (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), (~ _GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | 0u))) | (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))))))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), 0u + (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), min(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u))))))), ~ (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), (~ _GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | 0u))) | (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))))))))) | 0u), (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), 0u + (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), min(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u))))))), ~ (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), (~ _GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | 0u))) | (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))))))))))), ~ (~ (_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), ~ (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), (~ _GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (0u) | 0u))) | (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY((4) + int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_IDENTITY(ivec2((4) + int(_GLF_ZERO(0.0, injectionSwitch.x)), 1), ivec2(1, 1) * (ivec2((4) + int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))))), 64, 2)))))))))))) ^ (0u | 0u)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), ~ (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), (~ _GLF_IDENTITY(_GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (0u) | 0u)), min(_GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (0u) | 0u)), _GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (0u) | 0u))))) | (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), 0u + (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))))), 0u, 0u, 0u), (uvec4(_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), 0u + (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))))), 0u, 0u, 0u)) | (uvec4(_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), 0u + (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))))), 0u, 0u, 0u))))))))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) / 1)) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), ~ (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), (~ _GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (0u) | 0u))) | (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, _GLF_IDENTITY(2, (2) >> 0)))))))))), min(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), 0u + (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), min(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u))))))), ~ (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), (~ _GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | 0u))) | (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))))))))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), 0u + (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), min(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u))))))), ~ (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), (~ _GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | 0u))) | (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))))))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), 0u + (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), min(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u))))))), ~ (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), (~ _GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | 0u))) | (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))))))))) | 0u), (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), 0u + (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), min(uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))) + 0u), 1u, 1u))))))), ~ (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), (~ _GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | 0u))) | (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))))))))))), ~ (~ (_GLF_IDENTITY(1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)), ~ (_GLF_IDENTITY(~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), (~ _GLF_IDENTITY((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))), ((1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) | _GLF_IDENTITY(0u, (0u) | 0u))) | (~ (1u * (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY((4) + int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_IDENTITY(ivec2((4) + int(_GLF_ZERO(0.0, injectionSwitch.x)), 1), ivec2(1, 1) * (ivec2((4) + int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))))), 64, 2)))))))))))) ^ (0u | 0u))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), true && (bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), true))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), true))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), true))))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), true))))), false, true))), false, false)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
  }
 else
  {
   subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))), false, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true), false, true), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true), false, true), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true), false, true), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true), false, true), false)))), false))), true))), false))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false)))), ! (! (! (_GLF_IDENTITY((false), true && ((false))))))))) && true, true && (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false)))), ! (! (! (_GLF_IDENTITY((false), true && ((false))))))))) && true, bool(bvec2(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false)))), ! (! (! (_GLF_IDENTITY((false), true && ((false))))))))) && true, true)))))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), false)))))))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, _GLF_IDENTITY(true, (true) && true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), false)))))))), true)), false)))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), bool(_GLF_IDENTITY(bvec2((! ((false))), false), bvec2(bvec3(bvec2((! ((false))), false), true)))))) && true), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), bool(_GLF_IDENTITY(bvec2((! ((false))), false), bvec2(bvec3(bvec2((! ((false))), false), true)))))) && true), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), bool(_GLF_IDENTITY(bvec2((! ((false))), false), bvec2(bvec3(bvec2((! ((false))), false), true)))))) && true), false, true)))), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && _GLF_IDENTITY(true, true && (true))), false, true), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 1u, 1u))), _GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid])))), 4, 64, 2);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-745.579)), bool(false))))) > injectionSwitch.y))), true, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, clamp(1, 1, 1))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     subgroupBarrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) * vec2(1.0, 1.0)).y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) << 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (int(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y), max(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y))), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y)))) | 0)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7431.4529)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7431.4529)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))), bool(true))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7431.4529)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7431.4529)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7431.4529)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))), bool(true))) : _GLF_FUZZED(250.316))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7431.4529)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))), bool(true))))))) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 | 1) & 1)); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), (_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), mix(vec4(_GLF_FUZZED(-78.21), (vec4(injectionSwitch, 0.0, 1.0))[1], _GLF_FUZZED(2889.2180), (vec4(injectionSwitch, 0.0, 1.0))[3]), vec4((vec4(injectionSwitch, 0.0, 1.0))[0], _GLF_FUZZED(10.23), (vec4(injectionSwitch, 0.0, 1.0))[2], _GLF_FUZZED(3.6)), bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, false)))) * mat4(1.0)), clamp(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), (_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), mix(vec4(_GLF_FUZZED(-78.21), (vec4(injectionSwitch, 0.0, 1.0))[1], _GLF_FUZZED(2889.2180), (vec4(injectionSwitch, 0.0, 1.0))[3]), vec4((vec4(injectionSwitch, 0.0, 1.0))[0], _GLF_FUZZED(10.23), (vec4(injectionSwitch, 0.0, 1.0))[2], _GLF_FUZZED(3.6)), bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, false)))) * mat4(1.0)), _GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), (_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), mix(vec4(_GLF_FUZZED(-78.21), (vec4(injectionSwitch, 0.0, 1.0))[1], _GLF_FUZZED(2889.2180), (vec4(injectionSwitch, 0.0, 1.0))[3]), vec4((vec4(injectionSwitch, 0.0, 1.0))[0], _GLF_FUZZED(10.23), (vec4(injectionSwitch, 0.0, 1.0))[2], _GLF_FUZZED(3.6)), bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, false)))) * mat4(1.0)), _GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), (_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), mix(vec4(_GLF_FUZZED(-78.21), (vec4(injectionSwitch, 0.0, 1.0))[1], _GLF_FUZZED(2889.2180), (vec4(injectionSwitch, 0.0, 1.0))[3]), vec4((vec4(injectionSwitch, 0.0, 1.0))[0], _GLF_FUZZED(10.23), (vec4(injectionSwitch, 0.0, 1.0))[2], _GLF_FUZZED(3.6)), bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, false)))) * mat4(1.0)))))).x > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false) && (_GLF_WRAPPED_LOOP(false)))) && true));
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))) || false) || false)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     for(int _injected_loop_counter = (1 & int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))), true, false))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (4)), _GLF_IDENTITY(64, (64) | (64)), 4);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
}
