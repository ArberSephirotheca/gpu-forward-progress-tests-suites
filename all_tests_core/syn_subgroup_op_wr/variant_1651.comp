#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), ! (! (false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))) && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))), true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(true && (false), true, false)), true && (bool(bvec3(true && (false), true, false))))))), false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))) || false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1603.8941, 3.4))))) - tan(vec2(0.0, 0.0)), ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1603.8941, 3.4))))) - tan(vec2(0.0, 0.0))) - vec2(0.0, 0.0))), 0.0)), max(vec2(vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1603.8941, 3.4))))) - tan(vec2(0.0, 0.0))), 0.0)), _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1603.8941, 3.4))))) - tan(vec2(0.0, 0.0))), 0.0)), (vec2(vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1603.8941, 3.4))))) - tan(vec2(0.0, 0.0))), 0.0))) * vec2(1.0, 1.0))))).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, 1u), (true ? uvec4(gl_WorkGroupID, 1u) : _GLF_FUZZED((uvec4(122459u, 89005u, 144838u, 115830u) - subgroup_size)))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - tan(abs(0.0))) > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (false ? _GLF_FUZZED(724.054) : float(injectionSwitch.x)))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), (false ? _GLF_FUZZED(724.054) : _GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x)))))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), (false ? _GLF_FUZZED(724.054) : float(injectionSwitch.x))))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_size, 1u), clamp(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), uvec2(workgroup_size, 1u), uvec2(workgroup_size, 1u)))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(workgroup_size, 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 1u), ~ (_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(subgroup_local_id))))), 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), min(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), _GLF_IDENTITY((~ (uvec2(workgroup_size, 1u))), (true ? (~ (uvec2(workgroup_size, 1u))) : _GLF_FUZZED((uvec2(49932u, 137662u) / num_workgroup)))) << uvec2(0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), uvec2(uvec4(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), 1u, 1u)))))) << (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u)))), uvec2(workgroup_size, 1u), uvec2(workgroup_size, 1u))))) << 0u, _GLF_IDENTITY(((uint(_GLF_IDENTITY(uvec2(workgroup_size, 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(subgroup_local_id))))), 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), min(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), _GLF_IDENTITY((~ (uvec2(workgroup_size, 1u))), (true ? (~ (uvec2(workgroup_size, 1u))) : _GLF_FUZZED((uvec2(49932u, 137662u) / num_workgroup)))) << uvec2(0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), uvec2(uvec4(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), 1u, 1u)))))) << (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u)))), uvec2(workgroup_size, 1u), uvec2(workgroup_size, 1u))))) << 0u) | (_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(workgroup_size, 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(subgroup_local_id))))), 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), min(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), _GLF_IDENTITY((~ (uvec2(workgroup_size, 1u))), (true ? (~ (uvec2(workgroup_size, 1u))) : _GLF_FUZZED((uvec2(49932u, 137662u) / num_workgroup)))) << uvec2(0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), uvec2(uvec4(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), 1u, 1u)))))) << (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u)))), uvec2(workgroup_size, 1u), uvec2(workgroup_size, 1u))))) << 0u, 0u ^ ((uint(_GLF_IDENTITY(uvec2(workgroup_size, 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(subgroup_local_id))))), 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), min(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), _GLF_IDENTITY((~ (uvec2(workgroup_size, 1u))), (true ? (~ (uvec2(workgroup_size, 1u))) : _GLF_FUZZED((uvec2(49932u, 137662u) / num_workgroup)))) << uvec2(0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), uvec2(uvec4(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), 1u, 1u)))))) << (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u)))), uvec2(workgroup_size, 1u), uvec2(workgroup_size, 1u))))) << 0u))), 0u + (((uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(subgroup_local_id))))), 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), min(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), _GLF_IDENTITY((~ (uvec2(workgroup_size, 1u))), (true ? (~ (uvec2(workgroup_size, 1u))) : _GLF_FUZZED((uvec2(49932u, 137662u) / num_workgroup)))) << uvec2(0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), uvec2(uvec4(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), 1u, 1u)))))) << (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u)))), uvec2(workgroup_size, 1u), uvec2(workgroup_size, 1u))), (uvec2(0u, 0u) | uvec2(0u, 0u)) + (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(subgroup_local_id))))), 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), min(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), _GLF_IDENTITY((~ (uvec2(workgroup_size, 1u))), (true ? (~ (uvec2(workgroup_size, 1u))) : _GLF_FUZZED((uvec2(49932u, 137662u) / num_workgroup)))) << uvec2(0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), uvec2(uvec4(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), 1u, 1u)))))) << (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u)))), uvec2(workgroup_size, 1u), uvec2(workgroup_size, 1u))), uvec2(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec2(workgroup_size, 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(subgroup_local_id))))), 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), min(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), _GLF_IDENTITY((~ (uvec2(workgroup_size, 1u))), (true ? (~ (uvec2(workgroup_size, 1u))) : _GLF_FUZZED((uvec2(49932u, 137662u) / num_workgroup)))) << uvec2(0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), uvec2(uvec4(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), 1u, 1u)))))) << (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u)))), uvec2(workgroup_size, 1u), uvec2(workgroup_size, 1u))), 0u, 1u), (true ? uvec4(_GLF_IDENTITY(uvec2(workgroup_size, 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(subgroup_local_id))))), 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), min(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), _GLF_IDENTITY((~ (uvec2(workgroup_size, 1u))), (true ? (~ (uvec2(workgroup_size, 1u))) : _GLF_FUZZED((uvec2(49932u, 137662u) / num_workgroup)))) << uvec2(0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), uvec2(uvec4(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), 1u, 1u)))))) << (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u)))), uvec2(workgroup_size, 1u), uvec2(workgroup_size, 1u))), 0u, 1u) : _GLF_FUZZED(uvec4(29525u, 95807u, 21880u, 70334u)))))))))) << 0u) | (_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(workgroup_size, 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(subgroup_local_id))))), 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), min(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), _GLF_IDENTITY((~ (uvec2(workgroup_size, 1u))), (true ? (~ (uvec2(workgroup_size, 1u))) : _GLF_FUZZED((uvec2(49932u, 137662u) / num_workgroup)))) << uvec2(0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uvec2(workgroup_size, 1u)), ((uvec2(workgroup_size, 1u))) - uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), uvec2(uvec4(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), 1u, 1u)))))) << (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u)))), uvec2(workgroup_size, _GLF_IDENTITY(1u, (1u) | (1u))), uvec2(workgroup_size, 1u))))) << 0u, 0u ^ ((uint(_GLF_IDENTITY(uvec2(workgroup_size, 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)), (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u))) - (uvec2(195899u, 193982u) & uvec2(0u, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(subgroup_local_id))))), 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), min(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), _GLF_IDENTITY((~ (uvec2(workgroup_size, 1u))), (true ? _GLF_IDENTITY((~ (uvec2(workgroup_size, 1u))), uvec2(1u, 1u) * (_GLF_IDENTITY((~ (uvec2(workgroup_size, 1u))), min(_GLF_IDENTITY((~ (uvec2(workgroup_size, 1u))), ((~ (uvec2(workgroup_size, 1u)))) ^ uvec2(0u, 0u)), (~ (uvec2(workgroup_size, 1u))))))) : _GLF_FUZZED((uvec2(49932u, 137662u) / num_workgroup)))) << uvec2(0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), _GLF_IDENTITY(uvec2(uvec4(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), 1u, 1u)), min(uvec2(uvec4(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), 1u, 1u)), _GLF_IDENTITY(uvec2(uvec4(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), 1u, 1u)), (uvec2(uvec4(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (~ (uvec2(workgroup_size, 1u))) << uvec2(0u, 0u)))), 1u, 1u))) * uvec2(1u, 1u)))))))) << (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u)))), uvec2(workgroup_size, 1u), uvec2(workgroup_size, 1u))))) << 0u))))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(workgroup_size, 1u), clamp(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))), 1u), (uvec2(workgroup_size, 1u)) ^ (uvec2(1u, _GLF_IDENTITY(1u, (0u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ (1u))) ^ uvec2(1u, 1u)))), clamp(~ (uvec2(workgroup_size, 1u)), ~ (uvec2(workgroup_size, 1u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (~ (uvec2(workgroup_size, 1u))))), (true ? ~ (uvec2(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ _GLF_IDENTITY(0u, max(0u, 0u))))), workgroup_size)), 1u)) : _GLF_FUZZED(uvec2(123672u, _GLF_IDENTITY(_GLF_IDENTITY(57242u, (57242u) << 0u), (_GLF_IDENTITY(57242u, (57242u) << 0u)) >> 0u))))))), max(_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), _GLF_IDENTITY((~ (uvec2(workgroup_size, 1u))), ((~ (uvec2(workgroup_size, 1u)))) / uvec2(1u, 1u)) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(0u), uvec2(0u)))), ~ (uvec2(workgroup_size, 1u)))))), uvec2(workgroup_size, 1u), uvec2(workgroup_size, 1u))))), (true ? (uint(_GLF_IDENTITY(uvec2(workgroup_size, 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), (uvec2(workgroup_size, 1u)) | (uvec2(workgroup_size, 1u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), clamp(~ (uvec2(workgroup_size, 1u)), ~ (uvec2(workgroup_size, 1u)), _GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (true ? ~ (uvec2(workgroup_size, 1u)) : _GLF_FUZZED(uvec2(123672u, 57242u)))))), max(_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (~ (_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), min(~ (uvec2(workgroup_size, 1u)), ~ (uvec2(workgroup_size, _GLF_IDENTITY(1u, (1u) - 0u))))))))) | (_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) >> uvec2(0u, 0u)) >> _GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, 0u ^ (0u))), uvec2(0u)))), ~ (uvec2(workgroup_size, 1u)))))), max(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), clamp(~ (uvec2(workgroup_size, 1u)), ~ (uvec2(workgroup_size, 1u)), _GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (true ? ~ (uvec2(workgroup_size, 1u)) : _GLF_FUZZED(uvec2(123672u, 57242u)))))), max(_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (~ (_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), min(~ (uvec2(workgroup_size, 1u)), ~ (uvec2(workgroup_size, 1u)))))))) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(0u), uvec2(0u)))), ~ (uvec2(workgroup_size, 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), (uvec2(workgroup_size, 1u)) - uvec2(0u, 0u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), clamp(~ (uvec2(workgroup_size, 1u)), ~ (uvec2(workgroup_size, 1u)), _GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (true ? ~ (uvec2(workgroup_size, 1u)) : _GLF_FUZZED(uvec2(123672u, 57242u)))))), max(_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), (~ (_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_size, 1u)), min(~ (uvec2(_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)), 1u)), ~ (uvec2(workgroup_size, 1u)))))))) | (uvec2(0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u), (_GLF_IDENTITY(uvec2(0u), (true ? uvec2(0u) : _GLF_FUZZED(uvec2(164954u, 129984u))))) << uvec2(0u, 0u)), uvec2(0u)))), ~ (uvec2(workgroup_size, 1u)))))))), uvec2(workgroup_size, 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size, (0u ^ 0u) | (workgroup_size)), 1u), (uvec2(_GLF_IDENTITY(workgroup_size, (0u ^ 0u) | (workgroup_size)), 1u)) ^ uvec2(0u, 0u)))))) : _GLF_FUZZED(num_workgroup))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_size, 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (~ (uvec2(workgroup_size, 1u)))), _GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), _GLF_IDENTITY(uvec2(0u, 0u), ~ (~ (uvec2(0u, 0u)))), _GLF_IDENTITY(uvec2(0u, 0u), max(uvec2(0u, 0u), uvec2(0u, 0u)))))) | uvec2(0u, 0u)) | (_GLF_IDENTITY(uvec2(workgroup_size, 1u), ~ (~ (uvec2(workgroup_size, 1u)))))), uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u), 1u), uvec2(workgroup_size, 1u)))), uint(uvec4(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), clamp(_GLF_IDENTITY(uvec2(workgroup_size, 1u), _GLF_IDENTITY(~ (~ (uvec2(workgroup_size, 1u))), clamp(~ (~ (uvec2(workgroup_size, 1u))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((uvec2(workgroup_size, 1u)), max((uvec2(workgroup_size, 1u)), _GLF_IDENTITY((uvec2(workgroup_size, 1u)), clamp((uvec2(workgroup_size, 1u)), _GLF_IDENTITY((uvec2(workgroup_size, 1u)), ((uvec2(workgroup_size, 1u))) | ((uvec2(workgroup_size, 1u)))), (uvec2(workgroup_size, 1u))))))), (~ (~ (uvec2(workgroup_size, 1u)))) >> uvec2(0u, 0u)), ~ (~ (uvec2(workgroup_size, 1u)))))), uvec2(workgroup_size, 1u), uvec2(workgroup_size, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(workgroup_size, 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(workgroup_size, 1u), (true ? uvec2(workgroup_size, 1u) : _GLF_FUZZED(uvec2(70077u, 139688u)))))), ~ (~ (_GLF_IDENTITY(uvec2(workgroup_size, 1u), (_GLF_IDENTITY(uvec2(workgroup_size, 1u), (false ? _GLF_FUZZED(uvec2(46065u, 81279u)) : _GLF_IDENTITY(uvec2(workgroup_size, 1u), (_GLF_IDENTITY(uvec2(workgroup_size, 1u), (uvec2(workgroup_size, 1u)) >> uvec2(0u, 0u))) << uvec2(0u, 0u))))) - (uvec2(1u, 1u) ^ uvec2(1u, 1u)))))), uvec2(workgroup_size, 1u), uvec2(workgroup_size, 1u)))) / uvec2(1u, 1u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(workgroup_size, 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), uvec2(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, 0u | (0u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, 0u | (0u))), 0u | (~ (_GLF_IDENTITY(0u, 0u | (0u)))))) + 0u))), 0u) ^ (_GLF_IDENTITY(uvec2(workgroup_size, 1u), (true ? uvec2(workgroup_size, 1u) : _GLF_FUZZED(uvec2(70077u, 139688u)))))), ~ (~ (_GLF_IDENTITY(uvec2(workgroup_size, 1u), (_GLF_IDENTITY(uvec2(workgroup_size, 1u), (false ? _GLF_FUZZED(uvec2(46065u, 81279u)) : _GLF_IDENTITY(uvec2(workgroup_size, 1u), (uvec2(workgroup_size, 1u)) << uvec2(0u, 0u))))) - (uvec2(1u, 1u) ^ uvec2(1u, 1u)))))), uvec2(workgroup_size, 1u), uvec2(workgroup_size, 1u)))) / uvec2(1u, 1u), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(uvec2(workgroup_size, 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), uvec2(_GLF_IDENTITY(0u, (0u) - 0u), 0u) ^ (_GLF_IDENTITY(uvec2(workgroup_size, 1u), (true ? uvec2(workgroup_size, 1u) : _GLF_FUZZED(uvec2(70077u, 139688u)))))), ~ (~ (_GLF_IDENTITY(uvec2(workgroup_size, 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), (uvec2(workgroup_size, 1u)) | (_GLF_IDENTITY(uvec2(workgroup_size, 1u), (uvec2(workgroup_size, 1u)) | uvec2(0u, 0u)))), (false ? _GLF_FUZZED(uvec2(46065u, 81279u)) : _GLF_IDENTITY(uvec2(workgroup_size, 1u), (uvec2(workgroup_size, 1u)) << uvec2(0u, 0u))))) - (uvec2(1u, 1u) ^ uvec2(1u, 1u)))))), uvec2(workgroup_size, 1u), uvec2(workgroup_size, 1u)))) / uvec2(1u, 1u)), (~ ((_GLF_IDENTITY(uvec2(workgroup_size, 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(workgroup_size, 1u), (true ? uvec2(workgroup_size, 1u) : _GLF_FUZZED(uvec2(70077u, 139688u)))))), ~ (~ (_GLF_IDENTITY(uvec2(workgroup_size, 1u), (_GLF_IDENTITY(uvec2(workgroup_size, 1u), (false ? _GLF_FUZZED(uvec2(46065u, 81279u)) : _GLF_IDENTITY(uvec2(workgroup_size, 1u), (uvec2(workgroup_size, 1u)) << uvec2(0u, 0u))))) - (uvec2(1u, 1u) ^ uvec2(1u, 1u)))))), uvec2(workgroup_size, 1u), uvec2(workgroup_size, 1u)))) / uvec2(1u, 1u))) | (~ (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(workgroup_size, 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(workgroup_size, 1u), (true ? uvec2(workgroup_size, 1u) : _GLF_FUZZED(uvec2(70077u, 139688u)))))), ~ (~ (_GLF_IDENTITY(uvec2(workgroup_size, 1u), (_GLF_IDENTITY(uvec2(workgroup_size, 1u), (false ? _GLF_FUZZED(uvec2(46065u, 81279u)) : _GLF_IDENTITY(uvec2(workgroup_size, 1u), (uvec2(workgroup_size, 1u)) << uvec2(0u, 0u))))) - (uvec2(1u, 1u) ^ uvec2(1u, 1u)))))), uvec2(workgroup_size, 1u), uvec2(workgroup_size, 1u)))), ((_GLF_IDENTITY(uvec2(workgroup_size, 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(workgroup_size, 1u), (true ? uvec2(workgroup_size, 1u) : _GLF_FUZZED(uvec2(70077u, 139688u)))))), ~ (~ (_GLF_IDENTITY(uvec2(workgroup_size, 1u), (_GLF_IDENTITY(uvec2(workgroup_size, 1u), (false ? _GLF_FUZZED(uvec2(46065u, 81279u)) : _GLF_IDENTITY(uvec2(workgroup_size, 1u), (uvec2(workgroup_size, 1u)) << uvec2(0u, 0u))))) - (uvec2(1u, 1u) ^ uvec2(1u, 1u)))))), uvec2(workgroup_size, 1u), uvec2(workgroup_size, 1u))))) ^ uvec2(0u, 0u)) / uvec2(1u, 1u))))))) | ((_GLF_IDENTITY(uvec2(workgroup_size, 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size, 1u), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(workgroup_size, 1u), (true ? uvec2(workgroup_size, 1u) : _GLF_FUZZED(uvec2(70077u, 139688u)))))), ~ (~ (_GLF_IDENTITY(uvec2(workgroup_size, 1u), (_GLF_IDENTITY(uvec2(workgroup_size, 1u), (false ? _GLF_FUZZED(uvec2(46065u, 81279u)) : _GLF_IDENTITY(uvec2(workgroup_size, 1u), (uvec2(workgroup_size, 1u)) << uvec2(0u, 0u))))) - (uvec2(1u, 1u) ^ uvec2(1u, 1u)))))), uvec2(workgroup_size, 1u), uvec2(workgroup_size, 1u)))) / uvec2(1u, 1u))))), 0u, 1u, 1u)))))) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), uint(_GLF_IDENTITY(uvec2(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), 0u), _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (uvec2(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), 0u))), ((~ (uvec2(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), 0u)))) ^ _GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u)))), clamp(~ (~ (uvec2(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), 0u))), _GLF_IDENTITY(~ (~ (uvec2(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), 0u))), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec2(167808u, 109899u)) : ~ (~ (uvec2(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), 0u)))), uvec2(uvec3((false ? _GLF_FUZZED(uvec2(167808u, 109899u)) : ~ (~ (uvec2(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), 0u)))), 1u)))), ~ (~ (uvec2(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1))), (_GLF_IDENTITY(true, ! (! (true))) ? clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(24999)))), 0u))))), (false ? _GLF_FUZZED(uvec2(11651u, 100298u)) : _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (uvec2(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), 0u))), ((~ (uvec2(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), 0u)))) ^ _GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u)))), clamp(~ (~ (uvec2(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), 0u))), _GLF_IDENTITY(~ (~ (uvec2(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), 0u))), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec2(167808u, 109899u)) : ~ (~ (uvec2(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), 0u)))), uvec2(uvec3((false ? _GLF_FUZZED(uvec2(167808u, 109899u)) : ~ (~ (uvec2(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), 0u)))), 1u)))), ~ (~ (uvec2(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1))), (_GLF_IDENTITY(true, ! (! (true))) ? clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(24999)))), 0u))))), _GLF_IDENTITY(uvec2(uvec3(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (uvec2(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), 0u))), ((~ (uvec2(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), 0u)))) ^ _GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u)))), clamp(~ (~ (uvec2(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), 0u))), _GLF_IDENTITY(~ (~ (uvec2(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), 0u))), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec2(167808u, 109899u)) : ~ (~ (uvec2(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), 0u)))), uvec2(uvec3((false ? _GLF_FUZZED(uvec2(167808u, 109899u)) : ~ (~ (uvec2(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), 0u)))), 1u)))), ~ (~ (uvec2(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1))), (_GLF_IDENTITY(true, ! (! (true))) ? clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(24999)))), 0u))))), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uvec2(uvec3(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (uvec2(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), 0u))), ((~ (uvec2(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), 0u)))) ^ _GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u)))), clamp(~ (~ (uvec2(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), 0u))), _GLF_IDENTITY(~ (~ (uvec2(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), 0u))), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec2(167808u, 109899u)) : ~ (~ (uvec2(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), 0u)))), uvec2(uvec3((false ? _GLF_FUZZED(uvec2(167808u, 109899u)) : ~ (~ (uvec2(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), 0u)))), 1u)))), ~ (~ (uvec2(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1))), (_GLF_IDENTITY(true, ! (! (true))) ? clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(24999)))), 0u))))), uint(_GLF_ONE(1.0, injectionSwitch.y))))) << uvec2(0u, 0u))))))))) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) << 0)))))) % subgroup_size, uint(uvec2(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1))))) % subgroup_size, uint(uvec4((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) | 0))))) % subgroup_size, 1u, 1u, 1u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, max(0u, 0u))))), max((1u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, max(0u, 0u))))), (1u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, max(0u, 0u))))))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) | (0u))))), min(uint(0u), uint(0u))))))))) / 1u));
 uint read = 0;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))) && true))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-95.54)), bool(false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false)))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), false)))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-8.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) * exp(vec2(0.0, 0.0))).x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, true)), (bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, true))) || false)) && true)), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true), bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true)))))))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true, true, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(bool(false), true, false)), (bool(bvec3(bool(false), true, false))) && true)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (false)), ! (! _GLF_IDENTITY((! (! (false))), ((! (! (false)))) && true))))), false || (! (! (false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (false)), ! (! _GLF_IDENTITY((! (! (false))), ((! (! (false)))) && true))))), false || (! (! (false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (false)), ! (! _GLF_IDENTITY((! (! (false))), ((! (! (false)))) && true))))), false || (! (! (false)))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (false)), ! (! _GLF_IDENTITY((! (! (false))), ((! (! (false)))) && true))))), false || (! (! (false)))))), true, true)))) || false)))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false), true, true)))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) * vec2(1.0, 1.0))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false, false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, true, true)))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 subgroupBarrier();
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(read, (0u | 0u), 0u), uvec3(0u, 0u, 0u) ^ (uvec3(read, (0u | 0u), 0u)))), (uint(_GLF_IDENTITY(uvec3(read, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), _GLF_IDENTITY(uint(uint((0u))), min(uint(uint((0u))), uint(uint((0u)))))) | (0u)) | 0u), 0u), uvec3(0u, 0u, 0u) ^ (uvec3(read, (0u | 0u), 0u))))) / 1u)), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
