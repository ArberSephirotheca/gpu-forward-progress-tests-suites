#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_106 {
 int _injected_loop_counter;
 mat4 _f0;
} ;

struct _GLF_struct_103 {
 ivec3 _f0;
 ivec4 _f1;
 ivec4 _f2;
 uvec3 _f3;
 uvec2 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_104 {
 vec2 _f0;
 _GLF_struct_103 _f1;
 vec4 _f2;
 uint workgroup_size;
 mat4x2 _f3;
} ;

struct _GLF_struct_101 {
 mat4 _f0;
 vec4 _f1;
 bvec2 _f2;
 uvec3 _f3;
 uvec4 _f4;
 mat3x2 _f5;
 uint _f6;
} ;

struct _GLF_struct_100 {
 bool _f0;
 int _f1;
 mat2x4 _f2;
 mat3x2 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_99 {
 vec2 _f0;
 uvec2 _f1;
 bvec3 _f2;
 mat4 _f3;
 mat4x2 _f4;
 uint _f5;
} ;

struct _GLF_struct_102 {
 ivec3 _f0;
 bvec4 _f1;
 ivec2 _f2;
 _GLF_struct_99 _f3;
 uvec2 _f4;
 _GLF_struct_100 _f5;
 _GLF_struct_101 _f6;
} ;

struct _GLF_struct_97 {
 mat4x3 _f0;
 mat2x3 _f1;
 vec4 _f2;
 vec4 _f3;
 mat3x4 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_98 {
 mat3x4 _f0;
 _GLF_struct_97 _f1;
 uvec4 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_95 {
 vec2 _f0;
} ;

struct _GLF_struct_96 {
 _GLF_struct_95 _f0;
} ;

struct _GLF_struct_93 {
 bvec2 _f0;
 mat4 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_92 {
 float _f0;
 mat2 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_91 {
 mat4x2 _f0;
 float _f1;
 mat2x4 _f2;
 ivec3 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_94 {
 ivec4 _f0;
 _GLF_struct_91 _f1;
 mat2x3 _f2;
 bool _f3;
 _GLF_struct_92 _f4;
 _GLF_struct_93 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_89 {
 mat3x2 _f0;
 vec3 _f1;
 mat4 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_90 {
 _GLF_struct_89 _f0;
 uvec3 _f1;
 float _f2;
} ;

struct _GLF_struct_105 {
 _GLF_struct_90 _f0;
 _GLF_struct_94 _f1;
 ivec3 _f2;
 _GLF_struct_96 _f3;
 _GLF_struct_98 _f4;
 _GLF_struct_102 _f5;
 _GLF_struct_104 _f6;
} ;

struct _GLF_struct_86 {
 mat2x4 _f0;
} ;

struct _GLF_struct_85 {
 bvec4 _f0;
 mat2 _f1;
 uvec2 _f2;
 vec3 _f3;
 mat4x3 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_84 {
 mat4x3 _f0;
 mat3x2 _f1;
 uvec3 _f2;
 mat3 _f3;
 bvec2 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_83 {
 bvec3 _f0;
 mat4x3 _f1;
 mat2 _f2;
 mat4 _f3;
 ivec4 _f4;
 bvec2 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_82 {
 mat3x4 _f0;
 ivec4 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_87 {
 _GLF_struct_82 _f0;
 bvec4 _f1;
 _GLF_struct_83 _f2;
 mat3x4 _f3;
 _GLF_struct_84 _f4;
 _GLF_struct_85 _f5;
 _GLF_struct_86 _f6;
} ;

struct _GLF_struct_80 {
 uvec2 _f0;
 bool _f1;
 mat3 _f2;
 uvec3 _f3;
 uvec3 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_79 {
 uint _f0;
 mat4x3 _f1;
 mat2 _f2;
 vec2 _f3;
 bvec2 _f4;
 bool _f5;
} ;

struct _GLF_struct_78 {
 mat2x4 _f0;
 float _f1;
 mat3x2 _f2;
 bvec2 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_77 {
 bvec2 _f0;
 vec4 _f1;
 vec2 _f2;
 mat3x2 _f3;
 bvec2 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_81 {
 _GLF_struct_77 _f0;
 bvec4 _f1;
 _GLF_struct_78 _f2;
 _GLF_struct_79 _f3;
 _GLF_struct_80 _f4;
} ;

struct _GLF_struct_75 {
 vec3 _f0;
 mat3x4 _f1;
 ivec2 _f2;
 ivec2 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_74 {
 uvec3 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_76 {
 mat2x3 _f0;
 uvec3 _f1;
 vec4 _f2;
 mat3x4 _f3;
 _GLF_struct_74 _f4;
 _GLF_struct_75 _f5;
} ;

struct _GLF_struct_72 {
 vec4 _f0;
 ivec4 _f1;
 ivec3 _f2;
 vec3 _f3;
 uvec2 _f4;
 mat3x2 _f5;
 int _f6;
} ;

struct _GLF_struct_71 {
 int _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_70 {
 mat2x4 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_69 {
 mat3 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_73 {
 _GLF_struct_69 _f0;
 _GLF_struct_70 _f1;
 _GLF_struct_71 _f2;
 _GLF_struct_72 _f3;
} ;

struct _GLF_struct_88 {
 _GLF_struct_73 _f0;
 uvec2 GLF_merged2_0_1_4_1_1_13readsubgroup_size;
 _GLF_struct_76 _f1;
 uvec4 _f2;
 int _f3;
 _GLF_struct_81 _f4;
 bvec4 _f5;
 _GLF_struct_87 _f6;
} ;

struct _GLF_struct_68 {
 mat4x3 _f0;
 mat4x2 _f1;
 vec4 _f2;
 int _injected_loop_counter;
} ;

struct _GLF_struct_65 {
 uvec4 _f0;
 uvec3 _f1;
 ivec3 _f2;
 uvec2 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_66 {
 bvec3 _f0;
 vec2 _f1;
 vec3 _f2;
 _GLF_struct_65 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_63 {
 mat3x4 _f0;
 mat4x2 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_62 {
 mat4x2 _f0;
 bvec3 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_61 {
 bool _f0;
} ;

struct _GLF_struct_60 {
 mat4x3 _f0;
 ivec3 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_64 {
 _GLF_struct_60 _f0;
 ivec2 _f1;
 bvec4 _f2;
 _GLF_struct_61 _f3;
 uint virtual_gid;
 _GLF_struct_62 _f4;
 _GLF_struct_63 _f5;
} ;

struct _GLF_struct_67 {
 _GLF_struct_64 _f0;
 mat3 _f1;
 _GLF_struct_66 _f2;
 int _f3;
} ;

struct _GLF_struct_57 {
 bvec4 _f0;
 ivec4 _f1;
 mat4x3 _f2;
 bvec2 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_58 {
 _GLF_struct_57 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_55 {
 mat3x2 _f0;
 mat2x4 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_54 {
 uint _f0;
 mat2 _f1;
 bvec2 _f2;
 uvec3 _f3;
 bool _f4;
 mat4 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_53 {
 mat3x2 _f0;
} ;

struct _GLF_struct_52 {
 vec4 _f0;
 bvec2 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_51 {
 bool _f0;
 mat3x4 _f1;
 mat4x2 _f2;
 uvec4 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_56 {
 _GLF_struct_51 _f0;
 _GLF_struct_52 _f1;
 _GLF_struct_53 _f2;
 _GLF_struct_54 _f3;
 bool _f4;
 _GLF_struct_55 _f5;
} ;

struct _GLF_struct_49 {
 uvec3 _f0;
 mat4x3 _f1;
 int _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_48 {
 bvec2 _f0;
 uint _f1;
 mat3x4 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_47 {
 vec4 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_46 {
 mat2x3 _f0;
 bvec3 _f1;
 mat2x3 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_50 {
 _GLF_struct_46 _f0;
 ivec2 _f1;
 _GLF_struct_47 _f2;
 mat3x4 _f3;
 _GLF_struct_48 _f4;
 mat4 _f5;
 _GLF_struct_49 _f6;
} ;

struct _GLF_struct_59 {
 _GLF_struct_50 _f0;
 _GLF_struct_56 _f1;
 vec2 _f2;
 mat3 _f3;
 float _f4;
 _GLF_struct_58 _f5;
 int _injected_loop_counter;
 bvec3 _f6;
} ;

struct _GLF_struct_43 {
 mat2 _f0;
 int _injected_loop_counter;
 mat3x2 _f1;
} ;

struct _GLF_struct_42 {
 vec4 _f0;
 ivec3 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_41 {
 mat4 _f0;
 mat4x3 _f1;
 mat3 _f2;
 int _f3;
 uvec3 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_40 {
 uvec3 _f0;
 uvec2 _f1;
 ivec3 _f2;
 vec3 _f3;
 vec2 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_44 {
 uvec2 _f0;
 _GLF_struct_40 _f1;
 _GLF_struct_41 _f2;
 _GLF_struct_42 _f3;
 _GLF_struct_43 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_45 {
 _GLF_struct_44 _f0;
} ;

struct _GLF_struct_37 {
 bvec4 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_36 {
 mat4x3 _f0;
 ivec2 _f1;
 vec2 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_38 {
 bvec4 _f0;
 float _f1;
 mat4 _f2;
 _GLF_struct_36 _f3;
 _GLF_struct_37 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_34 {
 mat3x2 _f0;
 bvec4 _f1;
 vec3 _f2;
 ivec2 _f3;
 vec2 _f4;
 ivec2 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_33 {
 vec3 _f0;
 mat4x3 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_32 {
 mat4 _f0;
 mat4x3 _f1;
 uint _f2;
 mat3 _f3;
 mat2x3 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_35 {
 mat4x3 _f0;
 _GLF_struct_32 _f1;
 _GLF_struct_33 _f2;
 ivec3 _f3;
 _GLF_struct_34 _f4;
 uvec2 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_39 {
 uint num_workgroup;
 _GLF_struct_35 _f0;
 _GLF_struct_38 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_29 {
 mat2x4 _f0;
} ;

struct _GLF_struct_28 {
 bvec3 _f0;
 mat3 _f1;
 mat3 _f2;
 mat4x3 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_27 {
 bvec4 _f0;
 ivec3 _f1;
 int _f2;
 float _f3;
 bvec2 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_30 {
 _GLF_struct_27 _f0;
 ivec2 _f1;
 _GLF_struct_28 _f2;
 _GLF_struct_29 _f3;
} ;

struct _GLF_struct_26 {
 ivec2 _f0;
} ;

struct _GLF_struct_24 {
 ivec4 _f0;
} ;

struct _GLF_struct_23 {
 ivec4 _f0;
 mat4 _f1;
 bvec3 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_25 {
 _GLF_struct_23 _f0;
 bvec3 _f1;
 _GLF_struct_24 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_31 {
 _GLF_struct_25 _f0;
 _GLF_struct_26 _f1;
 uint read;
 _GLF_struct_30 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_20 {
 float _f0;
 mat4 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_19 {
 uvec3 _f0;
 int _f1;
 vec4 _f2;
 mat4x2 _f3;
 float _f4;
 ivec4 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_18 {
 mat4x3 _f0;
 uint _f1;
 bool _f2;
 ivec2 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_21 {
 _GLF_struct_18 _f0;
 _GLF_struct_19 _f1;
 _GLF_struct_20 _f2;
} ;

struct _GLF_struct_16 {
 mat3x2 _f0;
 vec4 _f1;
 float _f2;
 mat2x4 _f3;
 mat3 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_15 {
 mat4x3 _f0;
 mat4 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_14 {
 uint _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_13 {
 mat2 _f0;
 mat3x4 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_17 {
 _GLF_struct_13 _f0;
 ivec2 _f1;
 _GLF_struct_14 _f2;
 _GLF_struct_15 _f3;
 _GLF_struct_16 _f4;
} ;

struct _GLF_struct_11 {
 ivec4 _f0;
 int _f1;
 mat2x3 _f2;
 vec4 _f3;
 bvec3 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_12 {
 uvec4 _f0;
 _GLF_struct_11 _f1;
 float _f2;
} ;

struct _GLF_struct_22 {
 uint workgroup_base;
 _GLF_struct_12 _f0;
 mat4x3 _f1;
 _GLF_struct_17 _f2;
 _GLF_struct_21 _f3;
 ivec2 _f4;
 float _f5;
} ;

struct _GLF_struct_8 {
 mat3x4 _f0;
 uvec2 _f1;
 bvec4 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_7 {
 bool _f0;
 uvec4 _f1;
 int _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_6 {
 uvec3 _f0;
 bvec3 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_9 {
 _GLF_struct_6 _f0;
 uvec3 _f1;
 _GLF_struct_7 _f2;
 mat2x4 _f3;
 _GLF_struct_8 _f4;
} ;

struct _GLF_struct_4 {
 uint next_virtual_gid;
 float _f0;
 vec2 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_3 {
 bvec3 _f0;
 uvec3 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_2 {
 mat4x3 _f0;
 bvec2 _f1;
 uvec2 _f2;
 mat4x3 _f3;
 mat4 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_1 {
 ivec2 _f0;
 int _f1;
 mat2x4 _f2;
 int _f3;
 vec3 _f4;
 mat2 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_0 {
 vec3 _f0;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 float _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_3 _f4;
 _GLF_struct_4 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_10 {
 _GLF_struct_5 _f0;
 _GLF_struct_9 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_88 _GLF_struct_replacement_88;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.8), _GLF_FUZZED(-61.59)), vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-220.756, -3440.1272)) : injectionSwitch)))).y))) || false)))
  barrier();
 _GLF_struct_replacement_88.GLF_merged2_0_1_4_1_1_13readsubgroup_size.y = subgroup_size;
 for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2x3(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), sqrt(0.0), 1.0, _GLF_IDENTITY(dot(vec4(1.0, sin(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, sin(0.0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), ~ (~ (int(1))))) ^ 0))), max(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), ~ (~ (int(1))))) ^ 0)), (_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), ~ (~ (int(1))))) ^ 0))) >> (0 ^ 0))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), ~ (~ (int(1))))) ^ 0))), 1 * (((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), ~ (~ (int(1))))) ^ 0)))))))); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) + 0.0) - _GLF_ZERO(0.0, injectionSwitch.x)) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) + 0.0) - _GLF_ZERO(0.0, injectionSwitch.x)) > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) + 0.0) - _GLF_ZERO(0.0, injectionSwitch.x)) > injectionSwitch.y)), (! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) + 0.0) - _GLF_ZERO(0.0, injectionSwitch.x)) > injectionSwitch.y))) || false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_39 _GLF_struct_replacement_39 = _GLF_struct_39(gl_NumWorkGroups.x, _GLF_struct_35(mat4x3(1.0), _GLF_struct_32(mat4(1.0), mat4x3(1.0), 1u, mat3(1.0), mat2x3(1.0), mat3(1.0)), _GLF_struct_33(vec3(1.0), mat4x3(1.0), ivec2(1)), ivec3(1), _GLF_struct_34(mat3x2(1.0), bvec4(true), vec3(1.0), _GLF_IDENTITY(ivec2(1), clamp(ivec2(1), ivec2(1), ivec2(1))), vec2(1.0), ivec2(1), uvec2(1u)), uvec2(1u), _GLF_IDENTITY(ivec3(1), _GLF_IDENTITY((ivec3(1)) - ivec3(0, 0, 0), ((ivec3(1)) - ivec3(0, 0, 0)) / (ivec3(1, 1, 1) | ivec3(1, 1, 1))))), _GLF_struct_38(bvec4(true), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(sinh(4.8)), max(_GLF_FUZZED(sinh(4.8)), _GLF_FUZZED(sinh(4.8)))) : 1.0)), 1.0, 0.0, 1.0)), min(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(sinh(4.8)) : 1.0)), 1.0, 0.0, 1.0)), (_GLF_IDENTITY(false, false || (false)) ? _GLF_IDENTITY(_GLF_FUZZED(50.62), 1.0 * (_GLF_FUZZED(50.62))) : float(vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(sinh(_GLF_IDENTITY(4.8, exp(0.0) * (_GLF_IDENTITY(4.8, (4.8) + 0.0))))) : 1.0), ((false ? _GLF_FUZZED(sinh(_GLF_IDENTITY(4.8, exp(0.0) * (_GLF_IDENTITY(4.8, (4.8) + 0.0))))) : 1.0)) - abs(sin(0.0)))), 1.0, 0.0, 1.0)))), float(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(sinh(4.8)) : 1.0)), 1.0, 0.0, 1.0))))), mat4(1.0), _GLF_struct_36(mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), ivec2(1), vec2(1.0), mat4x3(1.0)), _GLF_struct_37(bvec4(true), vec4(1.0)), mat3x4(1.0)), mat2(1.0));
 _GLF_struct_105 _GLF_struct_replacement_105 = _GLF_struct_105(_GLF_struct_90(_GLF_struct_89(mat3x2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-929.349)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), vec3(1.0), mat4(1.0), ivec2(1)), uvec3(1u), 1.0), _GLF_struct_94(ivec4(1), _GLF_struct_91(mat4x2(1.0), 1.0, mat2x4(1.0), ivec3(1), uvec4(1u)), mat2x3(1.0), true, _GLF_struct_92(1.0, mat2(1.0), mat4(1.0)), _GLF_struct_93(bvec2(true), mat4(1.0), mat3(1.0)), uvec2(1u)), ivec3(1), _GLF_struct_96(_GLF_struct_95(vec2(1.0))), _GLF_struct_98(mat3x4(1.0), _GLF_struct_97(mat4x3(1.0), mat2x3(1.0), vec4(1.0), vec4(1.0), mat3x4(1.0), ivec4(1)), uvec4(1u), mat3x2(1.0)), _GLF_struct_102(ivec3(1), bvec4(true), ivec2(1), _GLF_struct_99(vec2(1.0), uvec2(1u), bvec3(true), mat4(1.0), mat4x2(1.0), 1u), uvec2(1u), _GLF_struct_100(true, 1, mat2x4(1.0), mat3x2(1.0), mat4x2(1.0)), _GLF_struct_101(mat4(1.0), vec4(1.0), bvec2(true), uvec3(1u), uvec4(1u), mat3x2(1.0), 1u)), _GLF_struct_104(vec2(1.0), _GLF_struct_103(ivec3(1), ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), ivec4(1), uvec3(1u), uvec2(1u), mat4x2(1.0)), _GLF_IDENTITY(vec4(1.0), (vec4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(subgroup_size) : gl_WorkGroupSize.x)), mat4x2(1.0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), false, false)), bool(bvec3(bool(bvec3(! (false), false, false)), false, false)))))), bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))), false, false)))))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       do
        {
         do
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(1, int(ivec4(1, 0, 0, _GLF_IDENTITY((0 | 0), 1 * ((0 | 0)))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, false || (_injected_loop_counter != 0))); _injected_loop_counter --)
            {
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), true), false))))))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) / ((1 | 0) ^ 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, cos(0.0), 1.0, sqrt(1.0), 0.0, cos(0.0), log(1.0)))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), clamp(float(mat2(injectionSwitch.y, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(mat2(injectionSwitch.y, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(mat2(injectionSwitch.y, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))) - 0.0)), false || (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, cos(0.0), 1.0, sqrt(1.0), 0.0, cos(0.0), log(1.0)))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), clamp(float(mat2(injectionSwitch.y, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(mat2(injectionSwitch.y, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(mat2(injectionSwitch.y, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))) - 0.0))))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = (1 | int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_22 _GLF_struct_replacement_22 = _GLF_struct_22(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size * workgroup_id, clamp(_GLF_struct_replacement_105._f6.workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size, (_GLF_struct_replacement_105._f6.workgroup_size) | (_GLF_struct_replacement_105._f6.workgroup_size)), 0u + (_GLF_struct_replacement_105._f6.workgroup_size)) * workgroup_id, _GLF_struct_replacement_105._f6.workgroup_size * workgroup_id)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size * workgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size * workgroup_id, ~ (~ (_GLF_struct_replacement_105._f6.workgroup_size * workgroup_id)))) + 0u), clamp(_GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size * workgroup_id, uint(uint(_GLF_struct_replacement_105._f6.workgroup_size * workgroup_id))), _GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size, clamp(_GLF_struct_replacement_105._f6.workgroup_size, _GLF_struct_replacement_105._f6.workgroup_size, _GLF_struct_replacement_105._f6.workgroup_size)) * workgroup_id, _GLF_struct_replacement_105._f6.workgroup_size * workgroup_id)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size * workgroup_id, clamp(_GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size * workgroup_id, uint(_GLF_IDENTITY(uvec3(_GLF_struct_replacement_105._f6.workgroup_size * workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (1u & 1u)), min(uvec3(_GLF_struct_replacement_105._f6.workgroup_size * workgroup_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(matrixCompMult(mat4x2(-1.9, 455.011, 0.4, -59.41, -6.6, -3.4, _GLF_IDENTITY(3944.8158, (true ? 3944.8158 : _GLF_FUZZED(-9910.3203))), 182.446), mat4x2(-4.4, 4861.0313, -23.02, 3.9, -4.1, 5.4, -933.945, _GLF_IDENTITY(-8117.0057, max(-8117.0057, -8117.0057))))[2]) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(matrixCompMult(mat4x2(-1.9, 455.011, 0.4, -59.41, -6.6, -3.4, 3944.8158, 182.446), mat4x2(-4.4, 4861.0313, -23.02, 3.9, -4.1, 5.4, -933.945, _GLF_IDENTITY(-8117.0057, max(-8117.0057, -8117.0057))))[2], _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(matrixCompMult(mat4x2(-1.9, 455.011, 0.4, -59.41, -6.6, -3.4, 3944.8158, 182.446), mat4x2(-4.4, 4861.0313, -23.02, 3.9, -4.1, 5.4, -933.945, _GLF_IDENTITY(-8117.0057, max(-8117.0057, -8117.0057))))[2]), max(vec2(matrixCompMult(mat4x2(-1.9, 455.011, 0.4, -59.41, -6.6, -3.4, 3944.8158, 182.446), mat4x2(-4.4, 4861.0313, -23.02, 3.9, -4.1, 5.4, -933.945, _GLF_IDENTITY(-8117.0057, max(-8117.0057, -8117.0057))))[2]), vec2(matrixCompMult(mat4x2(-1.9, 455.011, 0.4, -59.41, -6.6, -3.4, 3944.8158, 182.446), mat4x2(-4.4, 4861.0313, -23.02, 3.9, -4.1, 5.4, -933.945, _GLF_IDENTITY(-8117.0057, max(-8117.0057, -8117.0057))))[2])))), max(vec2(_GLF_IDENTITY(vec2(matrixCompMult(mat4x2(-1.9, 455.011, 0.4, -59.41, -6.6, -3.4, 3944.8158, 182.446), mat4x2(-4.4, 4861.0313, -23.02, 3.9, -4.1, 5.4, -933.945, _GLF_IDENTITY(-8117.0057, max(-8117.0057, -8117.0057))))[2]), max(vec2(matrixCompMult(mat4x2(-1.9, 455.011, 0.4, -59.41, -6.6, -3.4, 3944.8158, 182.446), mat4x2(-4.4, 4861.0313, -23.02, 3.9, -4.1, 5.4, -933.945, _GLF_IDENTITY(-8117.0057, max(-8117.0057, -8117.0057))))[2]), vec2(matrixCompMult(mat4x2(-1.9, 455.011, 0.4, -59.41, -6.6, -3.4, 3944.8158, 182.446), mat4x2(-4.4, 4861.0313, -23.02, 3.9, -4.1, 5.4, -933.945, _GLF_IDENTITY(-8117.0057, max(-8117.0057, -8117.0057))))[2])))), vec2(_GLF_IDENTITY(vec2(matrixCompMult(mat4x2(-1.9, 455.011, 0.4, -59.41, -6.6, -3.4, 3944.8158, 182.446), mat4x2(-4.4, 4861.0313, -23.02, 3.9, -4.1, 5.4, -933.945, _GLF_IDENTITY(-8117.0057, max(-8117.0057, -8117.0057))))[2]), max(vec2(matrixCompMult(mat4x2(-1.9, 455.011, 0.4, -59.41, -6.6, -3.4, 3944.8158, 182.446), mat4x2(-4.4, 4861.0313, -23.02, 3.9, -4.1, 5.4, -933.945, _GLF_IDENTITY(-8117.0057, max(-8117.0057, -8117.0057))))[2]), vec2(matrixCompMult(mat4x2(-1.9, 455.011, 0.4, -59.41, -6.6, -3.4, 3944.8158, 182.446), mat4x2(-4.4, 4861.0313, -23.02, 3.9, -4.1, 5.4, -933.945, _GLF_IDENTITY(-8117.0057, max(-8117.0057, -8117.0057))))[2])))))))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(matrixCompMult(mat4x2(-1.9, 455.011, _GLF_IDENTITY(0.4, float(_GLF_IDENTITY(mat3x2(0.4, 0.0, 1.0, 0.0, abs(1.0), 1.0), (mat3x2(0.4, 0.0, 1.0, 0.0, abs(1.0), 1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), -59.41, -6.6, -3.4, 3944.8158, 182.446), mat4x2(-4.4, 4861.0313, -23.02, 3.9, -4.1, 5.4, -933.945, _GLF_IDENTITY(-8117.0057, max(-8117.0057, -8117.0057))))[2]) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x)), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0)), max(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(matrixCompMult(mat4x2(-1.9, 455.011, 0.4, -59.41, -6.6, -3.4, 3944.8158, 182.446), mat4x2(-4.4, 4861.0313, -23.02, 3.9, -4.1, 5.4, -933.945, _GLF_IDENTITY(-8117.0057, max(-8117.0057, -8117.0057))))[2]) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(reflect(4.4, 6133.5639)))) + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(matrixCompMult(mat4x2(-1.9, 455.011, 0.4, -59.41, -6.6, -3.4, 3944.8158, 182.446), mat4x2(-4.4, 4861.0313, -23.02, 3.9, -4.1, 5.4, -933.945, _GLF_IDENTITY(-8117.0057, max(-8117.0057, -8117.0057))))[2]) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) * vec2(1.0, 1.0)))).x)), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(matrixCompMult(mat4x2(-1.9, 455.011, 0.4, -59.41, -6.6, -3.4, 3944.8158, 182.446), mat4x2(-4.4, 4861.0313, -23.02, 3.9, -4.1, 5.4, -933.945, _GLF_IDENTITY(-8117.0057, max(-8117.0057, -8117.0057))))[2]) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(matrixCompMult(mat4x2(-1.9, 455.011, 0.4, -59.41, -6.6, -3.4, 3944.8158, 182.446), mat4x2(-4.4, _GLF_IDENTITY(4861.0313, min(4861.0313, _GLF_IDENTITY(4861.0313, (4861.0313) - 0.0))), -23.02, 3.9, -4.1, 5.4, _GLF_IDENTITY(-933.945, (-933.945) / 1.0), _GLF_IDENTITY(-8117.0057, max(-8117.0057, -8117.0057))))[2]) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(matrixCompMult(mat4x2(-1.9, 455.011, 0.4, -59.41, -6.6, -3.4, 3944.8158, 182.446), mat4x2(-4.4, _GLF_IDENTITY(4861.0313, min(4861.0313, _GLF_IDENTITY(4861.0313, (4861.0313) - 0.0))), -23.02, 3.9, -4.1, 5.4, _GLF_IDENTITY(-933.945, (-933.945) / 1.0), _GLF_IDENTITY(-8117.0057, max(-8117.0057, -8117.0057))))[2]) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x), min((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(matrixCompMult(mat4x2(-1.9, 455.011, 0.4, -59.41, -6.6, -3.4, 3944.8158, 182.446), mat4x2(-4.4, _GLF_IDENTITY(4861.0313, min(4861.0313, _GLF_IDENTITY(4861.0313, (4861.0313) - 0.0))), -23.02, 3.9, -4.1, 5.4, _GLF_IDENTITY(-933.945, (-933.945) / 1.0), _GLF_IDENTITY(-8117.0057, max(-8117.0057, -8117.0057))))[2]) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(matrixCompMult(mat4x2(-1.9, 455.011, 0.4, -59.41, -6.6, -3.4, 3944.8158, 182.446), mat4x2(-4.4, _GLF_IDENTITY(4861.0313, min(4861.0313, _GLF_IDENTITY(4861.0313, (4861.0313) - 0.0))), -23.02, 3.9, -4.1, 5.4, _GLF_IDENTITY(-933.945, (-933.945) / 1.0), _GLF_IDENTITY(-8117.0057, max(-8117.0057, -8117.0057))))[2]) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x)))))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0))))))), (1u & 1u)), uvec3(_GLF_struct_replacement_105._f6.workgroup_size * workgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))))), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_IDENTITY(uint(false ? _GLF_FUZZED(subgroup_size) : uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_IDENTITY(uint(uint(false ? _GLF_FUZZED(subgroup_size) : uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uint(false ? _GLF_FUZZED(subgroup_size) : uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u))))))))), (1u & _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) / 1u))))))), _GLF_struct_replacement_105._f6.workgroup_size * workgroup_id, _GLF_struct_replacement_105._f6.workgroup_size * workgroup_id))), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (_GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size * workgroup_id, clamp(_GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size * workgroup_id, uint(_GLF_IDENTITY(uvec3(_GLF_struct_replacement_105._f6.workgroup_size * _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (1u & _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))))), min(uvec3(_GLF_struct_replacement_105._f6.workgroup_size * workgroup_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(matrixCompMult(mat4x2(-1.9, 455.011, 0.4, -59.41, -6.6, -3.4, 3944.8158, 182.446), mat4x2(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), 4861.0313, -23.02, 3.9, -4.1, 5.4, -933.945, -8117.0057))[2]) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)))).x)), (1u & 1u)), uvec3(_GLF_struct_replacement_105._f6.workgroup_size * workgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) << (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), max(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) << (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), clamp(0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) << (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) << (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), (true ? 0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) << (0u << _GLF_IDENTITY(uint(1u), uint(1u))))) : _GLF_FUZZED(subgroup_size))), 0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) << (0u << _GLF_IDENTITY(uint(1u), uint(1u))))))), 0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) << (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))))) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(subgroup_size) : uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (1u & _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) / _GLF_IDENTITY(1u, (1u) | 0u)))))))), _GLF_struct_replacement_105._f6.workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size * workgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_struct_replacement_105._f6.workgroup_size * workgroup_id, 1u, 0u, 1u)), 0u | (uint(uvec4(_GLF_struct_replacement_105._f6.workgroup_size * workgroup_id, 1u, 0u, 1u)))))))))))), uint(uvec4(_GLF_IDENTITY((~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size * workgroup_id, clamp(_GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size, (_GLF_struct_replacement_105._f6.workgroup_size) / _GLF_IDENTITY(1u, min(1u, 1u)))) | (_GLF_struct_replacement_105._f6.workgroup_size), uint(uvec2((_GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size, (_GLF_struct_replacement_105._f6.workgroup_size) / 1u)) | (_GLF_struct_replacement_105._f6.workgroup_size), 0u))))) * 1u, _GLF_IDENTITY(0u, (0u) * 1u) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size, (_GLF_struct_replacement_105._f6.workgroup_size) / 1u)) | (_GLF_struct_replacement_105._f6.workgroup_size), uint(uvec2((_GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size, (_GLF_struct_replacement_105._f6.workgroup_size) / 1u)) | (_GLF_struct_replacement_105._f6.workgroup_size), 0u)))), clamp(_GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size, (_GLF_struct_replacement_105._f6.workgroup_size) / 1u)) | (_GLF_struct_replacement_105._f6.workgroup_size), uint(uvec2((_GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size, (_GLF_struct_replacement_105._f6.workgroup_size) / 1u)) | (_GLF_struct_replacement_105._f6.workgroup_size), 0u)))), _GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size, (_GLF_struct_replacement_105._f6.workgroup_size) / 1u)) | (_GLF_struct_replacement_105._f6.workgroup_size), uint(uvec2((_GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size, (_GLF_struct_replacement_105._f6.workgroup_size) / 1u)) | (_GLF_struct_replacement_105._f6.workgroup_size), 0u)))), _GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size, (_GLF_struct_replacement_105._f6.workgroup_size) / 1u)) | (_GLF_struct_replacement_105._f6.workgroup_size), uint(uvec2((_GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size, (_GLF_struct_replacement_105._f6.workgroup_size) / 1u)) | (_GLF_struct_replacement_105._f6.workgroup_size), 0u))))))) * 1u))) * workgroup_id, _GLF_struct_replacement_105._f6.workgroup_size * workgroup_id, _GLF_struct_replacement_105._f6.workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))))))), 0u ^ ((~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size * workgroup_id, clamp(_GLF_struct_replacement_105._f6.workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size, clamp(_GLF_struct_replacement_105._f6.workgroup_size, _GLF_struct_replacement_105._f6.workgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_105._f6.workgroup_size) | (_GLF_struct_replacement_105._f6.workgroup_size), ~ (~ ((_GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size, min(_GLF_struct_replacement_105._f6.workgroup_size, _GLF_struct_replacement_105._f6.workgroup_size))) / 1u)) | (_GLF_struct_replacement_105._f6.workgroup_size))))))) * workgroup_id, _GLF_struct_replacement_105._f6.workgroup_size * workgroup_id))), ((_GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size * workgroup_id, clamp(_GLF_struct_replacement_105._f6.workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size, clamp(_GLF_struct_replacement_105._f6.workgroup_size, _GLF_struct_replacement_105._f6.workgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_105._f6.workgroup_size) | (_GLF_struct_replacement_105._f6.workgroup_size), ~ (~ ((_GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size, min(_GLF_struct_replacement_105._f6.workgroup_size, _GLF_struct_replacement_105._f6.workgroup_size))) / 1u)) | (_GLF_struct_replacement_105._f6.workgroup_size))))))) * workgroup_id, _GLF_struct_replacement_105._f6.workgroup_size * workgroup_id)))) | ((_GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size * workgroup_id, clamp(_GLF_struct_replacement_105._f6.workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size, clamp(_GLF_struct_replacement_105._f6.workgroup_size, _GLF_struct_replacement_105._f6.workgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_105._f6.workgroup_size) | (_GLF_struct_replacement_105._f6.workgroup_size), ~ (~ ((_GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_105._f6.workgroup_size, min(_GLF_struct_replacement_105._f6.workgroup_size, _GLF_struct_replacement_105._f6.workgroup_size))) / 1u)) | (_GLF_struct_replacement_105._f6.workgroup_size))))))) * workgroup_id, _GLF_struct_replacement_105._f6.workgroup_size * workgroup_id))))))))), 1u, 1u, 1u))) | 0u)), _GLF_struct_12(_GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(uvec4(1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(1u)))) - uvec4(0u, 0u, 0u, 0u)), _GLF_struct_11(_GLF_IDENTITY(ivec4(1), (ivec4(1)) ^ ivec4(0, 0, 0, 0)), 1, mat2x3(1.0), vec4(1.0), bvec3(true), mat3(1.0)), 1.0), mat4x3(1.0), _GLF_struct_17(_GLF_struct_13(mat2(1.0), mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * 1.0), _GLF_IDENTITY((1.0), clamp((1.0), _GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), min((1.0), (1.0)))) - 0.0), (1.0))) - sqrt(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - sin(0.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0))))), ivec4(1)), ivec2(1), _GLF_struct_14(1u, mat2x4(1.0)), _GLF_struct_15(mat4x3(1.0), mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), float(mat3x2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), sqrt(0.0), 0.0, 0.0, 0.0, 1.0)))), mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))) - 0.0))), _GLF_struct_16(mat3x2(1.0), vec4(1.0), 1.0, mat2x4(1.0), mat3(1.0), bvec4(true))), _GLF_struct_21(_GLF_struct_18(mat4x3(1.0), 1u, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, (true) && true))), false || (bool(bool(_GLF_IDENTITY(true, (true) && true)))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true) || (_GLF_IDENTITY(true, ! (! (true))))), ivec2(1), _GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(1u)))), _GLF_struct_19(uvec3(_GLF_IDENTITY(1u, (1u) << 0u)), 1, vec4(_GLF_IDENTITY(1.0, 1.0 * (1.0))), mat4x2(1.0), 1.0, ivec4(1), vec3(1.0)), _GLF_struct_20(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED((-1581.6246 / -2617.3403))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5671.0722)), bool(false))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(5671.0722)), min(float(_GLF_FUZZED(5671.0722)), float(_GLF_FUZZED(5671.0722)))), bool(false)))))), bool(true)), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(mix(float(_GLF_FUZZED((-1581.6246 / -2617.3403))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5671.0722)), bool(false))), (_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), mix(float(float(1.0)), float(_GLF_FUZZED(-456.269)), bool(false))), float(_GLF_FUZZED(5671.0722)), bool(false)))) - 0.0), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(false))), bool(false))), 1.0, 1.0)), mix(float(1.0), float(_GLF_FUZZED(5671.0722)), _GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, false)))))))))), bool(true)), clamp(mix(float(_GLF_FUZZED((-1581.6246 / -2617.3403))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5671.0722)), bool(false))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(-8.1))), 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 1.0))), mix(float(1.0), float(_GLF_FUZZED(5671.0722)), bool(false)))))), bool(true)), mix(float(_GLF_FUZZED((-1581.6246 / -2617.3403))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(5671.0722)), bool(false)), clamp(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(5671.0722)), bool(false)), mix(float(_GLF_FUZZED(-6974.9120)), float(mix(float(1.0), float(_GLF_FUZZED(5671.0722)), bool(false))), bool(true))), mix(float(1.0), float(_GLF_FUZZED(5671.0722)), bool(false)), mix(float(1.0), float(_GLF_FUZZED(5671.0722)), bool(false))))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), mix(float(1.0), float(_GLF_FUZZED(5671.0722)), bool(false)))))), bool(true)), mix(float(_GLF_FUZZED((-1581.6246 / -2617.3403))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5671.0722)), bool(false))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), mix(float(1.0), float(_GLF_FUZZED(5671.0722)), bool(false)))))), bool(true)))), 0.0)), mix(float(float(vec2(_GLF_IDENTITY(mix(float(_GLF_FUZZED((-1581.6246 / -2617.3403))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5671.0722)), bool(false))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), mix(float(1.0), float(_GLF_FUZZED(5671.0722)), bool(false)))))), bool(true)), clamp(mix(float(_GLF_FUZZED((-1581.6246 / -2617.3403))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5671.0722)), bool(false))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(5671.0722)), bool(false)))))), bool(true)), mix(float(_GLF_FUZZED((-1581.6246 / -2617.3403))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5671.0722)), bool(false))), 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), mix(float(1.0), float(_GLF_FUZZED(5671.0722)), bool(false)))), min((_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), mix(float(1.0), float(_GLF_FUZZED(5671.0722)), bool(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), mix(float(1.0), float(_GLF_FUZZED(5671.0722)), bool(false)))))))), bool(true)), mix(float(_GLF_FUZZED((-1581.6246 / -2617.3403))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5671.0722)), bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), mix(float(1.0), float(_GLF_FUZZED(5671.0722)), bool(false)))))), bool(true)))), 0.0))), float(_GLF_FUZZED(-3.0)), bool(false))))), mat4(1.0), bvec4(true))), ivec2(1), 1.0);
 _GLF_struct_67 _GLF_struct_replacement_67 = _GLF_struct_67(_GLF_struct_64(_GLF_struct_60(mat4x3(1.0), ivec3(1), bvec3(true)), ivec2(1), bvec4(true), _GLF_struct_61(true), _GLF_IDENTITY(_GLF_struct_replacement_22.workgroup_base + subgroup_id * _GLF_struct_replacement_88.GLF_merged2_0_1_4_1_1_13readsubgroup_size.y + subgroup_local_id, 1u * (_GLF_struct_replacement_22.workgroup_base + subgroup_id * _GLF_struct_replacement_88.GLF_merged2_0_1_4_1_1_13readsubgroup_size.y + subgroup_local_id)), _GLF_struct_62(mat4x2(1.0), bvec3(true), mat3x2(1.0)), _GLF_struct_63(mat3x4(1.0), mat4x2(1.0), uvec4(1u))), mat3(1.0), _GLF_struct_66(bvec3(true), vec2(1.0), vec3(1.0), _GLF_struct_65(uvec4(1u), uvec3(1u), ivec3(1), uvec2(1u), vec2(1.0)), ivec4(1)), 1);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(_GLF_struct_45 _GLF_struct_replacement_45 = _GLF_struct_45(_GLF_struct_44(uvec2(1u), _GLF_struct_40(uvec3(1u), uvec2(1u), ivec3(1), vec3(1.0), vec2(1.0), mat2(1.0)), _GLF_struct_41(mat4(1.0), mat4x3(1.0), mat3(1.0), 1, uvec3(1u), bvec4(true)), _GLF_struct_42(vec4(1.0), ivec3(1), mat2x3(1.0)), _GLF_struct_43(mat2(1.0), _GLF_IDENTITY(1, min(1, 1)), mat3x2(1.0)), mat3(1.0))); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_45._f0._f4._injected_loop_counter != 0); _GLF_struct_replacement_45._f0._f4._injected_loop_counter --)
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       for(int _injected_loop_counter = _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 | (0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, 1))), int(1))), clamp((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, 1))), int(1))), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, 1))), int(1))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, 1))), int(1))), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, 1))), int(1)))) - 0))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), min(_GLF_IDENTITY(int(1), max(int(1), int(1))), int(1)))) >> int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-15.67) : _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY((int(1)) ^ 0, ((int(1)) ^ 0) | ((int(1)) ^ 0)))))); _injected_loop_counter ++)
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && _GLF_IDENTITY(true, ! (! (true)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))) || false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3725.4464)), vec2(_GLF_FUZZED((+ _GLF_IDENTITY(1.5, (1.5) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))), (injectionSwitch)[1]), bvec2(false, true))))).y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3.1) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), 0.0 + ((injectionSwitch.y))) / 1.0)))))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), bool(bvec2(! ((! (false))), false))))))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), false), true)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), false), true))))) && true))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           else
            {
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0)) * 1.0), _GLF_ONE(1.0, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, tan(0.0), 0.0, cos(0.0), abs(determinant(_GLF_IDENTITY(mat2(0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(0.7) : 0.0)), 0.0), transpose(_GLF_IDENTITY(transpose(mat2(0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(0.7) : 0.0)), 0.0)), (true ? transpose(mat2(0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(0.7) : 0.0)), 0.0)) : _GLF_FUZZED(mat2(-8.8, 2.7, -1348.2098, 28.63)))))))), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / cos(0.0)), 0.0), (true ? mat3(injectionSwitch.x, tan(0.0), 0.0, cos(0.0), abs(determinant(mat2(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat3(0.1, -1.1, -6521.6522, 2.3, -2920.6487, 271.152, 5.1, 777.112, -8.6)))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), true && (_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), true && (_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))))), true && (bool(bool(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), true && (_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), true && (_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), true && (_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))), true), false, true))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), true && (_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), true && (_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))), true), false, true))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), true && (_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), true && (_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))), true), false, true))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), true && (_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), true && (_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))), true), false, true))), true))), false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), true && (_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), true && (_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))), true), false, true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_GLF_IDENTITY(_injected_loop_counter --, 0 + (_injected_loop_counter --))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
  }
 else
  {
  }
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_struct_5(_GLF_struct_0(vec3(1.0)), _GLF_struct_1(ivec2(1), 1, mat2x4(1.0), 1, vec3(1.0), mat2(1.0), ivec3(1)), 1.0, _GLF_struct_2(mat4x3(1.0), bvec2(true), uvec2(1u), mat4x3(1.0), mat4(1.0), ivec2(1)), _GLF_struct_3(bvec3(true), uvec3(1u), mat3x4(1.0)), _GLF_struct_4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_22.workgroup_base, max(_GLF_struct_replacement_22.workgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_22.workgroup_base, _GLF_IDENTITY(uint(uint(_GLF_struct_replacement_22.workgroup_base)), uint(uvec4(uint(uint(_GLF_struct_replacement_22.workgroup_base)), 0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))) / 1u)))))), 0u)))))), 0u | (_GLF_IDENTITY(_GLF_struct_replacement_22.workgroup_base, max(_GLF_struct_replacement_22.workgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_22.workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_struct_replacement_22.workgroup_base), 0u + (uint(_GLF_struct_replacement_22.workgroup_base)))), uint(uint(uint(_GLF_IDENTITY(uint(_GLF_struct_replacement_22.workgroup_base), 0u + (uint(_GLF_struct_replacement_22.workgroup_base))))))), uint(uvec4(uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_22.workgroup_base, (_GLF_struct_replacement_22.workgroup_base) | 0u))), _GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) + (_GLF_IDENTITY(0u, uint(uint(0u))))), 0u, 0u)))))))) + subgroup_id * _GLF_struct_replacement_88.GLF_merged2_0_1_4_1_1_13readsubgroup_size.y + ((subgroup_local_id + 1) % _GLF_struct_replacement_88.GLF_merged2_0_1_4_1_1_13readsubgroup_size.y), 1.0, vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0))))), mat3x4(1.0)), mat3x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(min(1.0, 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(min(1.0, 1.0), max(min(1.0, 1.0), min(1.0, 1.0))), clamp(_GLF_IDENTITY(min(1.0, 1.0), max(min(1.0, 1.0), min(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(min(1.0, 1.0), max(min(1.0, 1.0), min(1.0, 1.0))), max(_GLF_IDENTITY(min(1.0, 1.0), max(min(1.0, 1.0), min(1.0, 1.0))), _GLF_IDENTITY(min(1.0, 1.0), max(min(1.0, 1.0), min(1.0, 1.0))))), _GLF_IDENTITY(min(1.0, 1.0), max(min(1.0, 1.0), min(1.0, 1.0)))))) - 0.0), clamp(min(1.0, 1.0), min(1.0, 1.0), min(1.0, 1.0)))))), _GLF_struct_9(_GLF_struct_6(uvec3(1u), bvec3(true), bvec3(true)), uvec3(1u), _GLF_struct_7(true, uvec4(_GLF_IDENTITY(1u, (1u) | (1u))), 1, mat4x2(1.0)), mat2x4(1.0), _GLF_struct_8(mat3x4(1.0), uvec2(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, min(1u, 1u))))), bvec4(true), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(vec4(mat3(vec4(1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 1.0, sqrt(1.0))), (false ? _GLF_FUZZED(asinh(vec4(1732.4932, -232.479, -9195.7963, -67.58))) : vec4(mat3(vec4(1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 1.0, sqrt(1.0)))))))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || false))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 for(int _injected_loop_counter = ((0 | _GLF_IDENTITY(0, (0) ^ 0)) | 0); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), (true ? _GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(6493.8699))), _GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))))), float(_GLF_FUZZED(5.1)), bool(false))) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((+ vec2(-757.500, 739.296).g))), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
     for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
            {
             for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)) || false); _injected_loop_counter --)
              {
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                    barrier();
                   barrier();
                  }
                 else
                  {
                  }
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) + _GLF_IDENTITY(0, max(0, 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true))))), true && (bool(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true))))), true && (bool(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)))))))), false, false, true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_struct_replacement_10._f0._f5.next_virtual_gid], _GLF_IDENTITY(uint(1), (true ? uint(1) : _GLF_FUZZED(_GLF_struct_replacement_39.num_workgroup))), 4, 64, 4);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) / vec3(1.0, 1.0, 1.0)))).y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_31 _GLF_struct_replacement_31 = _GLF_struct_31(_GLF_struct_25(_GLF_struct_23(_GLF_IDENTITY(ivec4(1), clamp(ivec4(1), _GLF_IDENTITY(ivec4(1), ~ (~ (ivec4(1)))), _GLF_IDENTITY(ivec4(1), (ivec4(1)) / ivec4(1, 1, 1, 1)))), mat4(1.0), bvec3(true), ivec2(1)), bvec3(true), _GLF_struct_24(ivec4(1)), bvec4(true)), _GLF_struct_26(ivec2(1)), atomicLoad(buf[_GLF_struct_replacement_67._f0.virtual_gid], 4, 64, 0), _GLF_struct_30(_GLF_struct_27(bvec4(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))), ivec3(1), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(11858), max(_GLF_FUZZED(11858), _GLF_IDENTITY(_GLF_FUZZED(11858), (_GLF_FUZZED(11858)) / 1))) : 1)), 1)), 1.0, bvec2(true), mat4(1.0)), ivec2(1), _GLF_struct_28(bvec3(true), mat3(1.0), mat3(1.0), mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((_GLF_IDENTITY(vec3(-703.381, -245.719, -3899.0166).b, mix(float(vec3(-703.381, -245.719, -3899.0166).b), float(_GLF_FUZZED(-6.0)), bool(false))) - _GLF_IDENTITY(atan(58.04), float(vec2(atan(58.04), 0.0))))) : 1.0)), clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((_GLF_IDENTITY(vec3(-703.381, -245.719, -3899.0166).b, mix(float(vec3(-703.381, -245.719, -3899.0166).b), float(_GLF_FUZZED(-6.0)), bool(false))) - _GLF_IDENTITY(atan(58.04), float(vec2(atan(58.04), 0.0))))) : 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((_GLF_IDENTITY(vec3(-703.381, -245.719, -3899.0166).b, mix(float(vec3(-703.381, -245.719, -3899.0166).b), float(_GLF_FUZZED(-6.0)), bool(false))) - _GLF_IDENTITY(atan(58.04), float(vec2(atan(58.04), 0.0))))) : 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((_GLF_IDENTITY(vec3(-703.381, -245.719, -3899.0166).b, mix(float(vec3(-703.381, -245.719, -3899.0166).b), float(_GLF_FUZZED(-6.0)), bool(false))) - _GLF_IDENTITY(atan(58.04), float(vec2(atan(58.04), 0.0))))) : 1.0)), (false ? _GLF_FUZZED(8.9) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((_GLF_IDENTITY(vec3(-703.381, -245.719, -3899.0166).b, mix(float(vec3(-703.381, -245.719, -3899.0166).b), float(_GLF_FUZZED(-6.0)), bool(false))) - _GLF_IDENTITY(atan(58.04), float(vec2(atan(58.04), 0.0))))) : 1.0))))))), mat3x2(1.0)), _GLF_struct_29(mat2x4(1.0))), mat2(1.0));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 do
  {
   _GLF_struct_replacement_88.GLF_merged2_0_1_4_1_1_13readsubgroup_size.x = _GLF_struct_replacement_31.read;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))))))
          barrier();
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true))))), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))), (_GLF_IDENTITY(false, true && (false))) && true)));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1])).x > injectionSwitch.y))));
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mat2(1.0) * (max(injectionSwitch, injectionSwitch)))))).y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   do
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 | 0) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(_GLF_IDENTITY(6, min(6, 6)))) | (int(6))), (_GLF_IDENTITY(int(6), (int(_GLF_IDENTITY(6, min(6, 6)))) | (int(6)))) | (_GLF_IDENTITY(int(6), (int(_GLF_IDENTITY(6, _GLF_IDENTITY(min(6, 6), int(ivec3(_GLF_IDENTITY(min(6, 6), (false ? _GLF_FUZZED(-71668) : min(6, 6))), 0, 1)))))) | (int(6)))))))); _injected_loop_counter --)
            {
             barrier();
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))))));
     do
      {
       if(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) >> 0), 1)) < _GLF_struct_replacement_88.GLF_merged2_0_1_4_1_1_13readsubgroup_size.y)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true))) || false)))
          {
           do
            {
             atomicStore(checker[_GLF_IDENTITY(_GLF_struct_replacement_67._f0.virtual_gid, 0u ^ (_GLF_struct_replacement_67._f0.virtual_gid))], _GLF_struct_replacement_88.GLF_merged2_0_1_4_1_1_13readsubgroup_size.x, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) | (4)), 4)), 64, 4);
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || ((false) || false))))) || false))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bool(false)))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
         do
          {
           subgroupAll(false);
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-816.398) : _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))
          barrier();
         for(int _injected_loop_counter = (1 & (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | (int(6)))), (true ? 1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | (int(6))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | (int(6))), min(_GLF_IDENTITY(int(6), (int(6)) | (int(6))), _GLF_IDENTITY(int(6), (int(6)) | (int(6))))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | (int(6))), int(int(_GLF_IDENTITY(int(6), (int(6)) | (int(6))))))))) : _GLF_FUZZED(-64956)))) >> _GLF_IDENTITY(int(6), int(6)), 0 | ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | (int(6)))), (true ? 1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | (int(6))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | (int(6))), min(_GLF_IDENTITY(int(6), (int(6)) | (int(6))), _GLF_IDENTITY(int(6), (int(6)) | (int(6))))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | (int(6))), int(int(_GLF_IDENTITY(int(6), (int(6)) | (int(6))))))))) : _GLF_FUZZED(-64956)))) >> _GLF_IDENTITY(int(6), int(6)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             for(_GLF_struct_106 _GLF_struct_replacement_106 = _GLF_struct_106(0, mat4(1.0)); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_106._injected_loop_counter != 1); _GLF_struct_replacement_106._injected_loop_counter ++)
              {
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(ivec3(1, 0, 1))))) << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, (1) + 0)))), int(1))), ((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(ivec3(1, 0, 1))))) << _GLF_IDENTITY(int(1), int(1)))) - 0) >> _GLF_IDENTITY(int(1), int(1))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0) < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) && (_GLF_IDENTITY(false, (false) && true)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-7067.3230 / -9.7)), _GLF_FUZZED(67.97)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-7067.3230 / -9.7)), _GLF_FUZZED(67.97)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, bool(bvec4(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-7067.3230 / -9.7)), _GLF_FUZZED(67.97)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, true, false, true)))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, ! (! (true))))))), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true)))), true, false))), true, true)))), bvec2(bvec3(bvec2(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false)), false)))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false)), bvec2(bvec3(bvec2(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false)), false)))))))))); _injected_loop_counter --)
              {
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0) < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
                barrier();
               barrier();
              }
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           else
            {
            }
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))) : _GLF_FUZZED((782.217 - vec2(-4.8, 8583.1990))))).x > injectionSwitch.y))))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), (! (_GLF_WRAPPED_IF_FALSE(false))) && true))))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true) || false)))
                barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           atomicStore(checker[_GLF_struct_replacement_67._f0.virtual_gid], _GLF_struct_replacement_88.GLF_merged2_0_1_4_1_1_13readsubgroup_size.x, 4, 64, 4);
          }
         subgroupAll(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false));
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), max(_GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (false))))), mix(vec2(_GLF_IDENTITY((mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))), 0))], (injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))]), vec2(_GLF_IDENTITY(_GLF_FUZZED(63.23), mix(float(_GLF_FUZZED(63.23)), float(_GLF_FUZZED(7.6)), bool(false))), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))[0], ((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))[0]) - _GLF_IDENTITY(0.0, min(0.0, 0.0))), _GLF_FUZZED(-1.8)), vec2(_GLF_FUZZED(-5563.6489), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))[1]), bvec2(false, true))), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))).x, mix(float(_GLF_FUZZED(-8.1)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), _GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), true))))))), max(_GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (false))))), mix(vec2(_GLF_IDENTITY((mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))), 0))], (injectionSwitch)[1]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))[0], _GLF_IDENTITY(((mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) + 0), 1, 1)), _GLF_IDENTITY(1, (1) | 0), 1))]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))[0]), min(((mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) + 0), 1, 1)), _GLF_IDENTITY(1, (1) | 0), 1))]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))[0]), ((mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) + 0), 1, 1)), _GLF_IDENTITY(1, (1) | 0), 1))]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))[0]))) - _GLF_IDENTITY(0.0, min(0.0, 0.0))), _GLF_FUZZED(-1.8)), vec2(_GLF_FUZZED(-5563.6489), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))[1]), bvec2(false, true))), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(63.23, float(mat2x3(_GLF_IDENTITY(63.23, mix(float(63.23), float(_GLF_FUZZED(-123.856)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))).x), min(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), _GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), true))))))), max(_GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (false))))), mix(vec2(_GLF_IDENTITY((mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))), 0))], (injectionSwitch)[1]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))[0], _GLF_IDENTITY(((mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) + 0), 1, 1)), _GLF_IDENTITY(1, (1) | 0), 1))]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))[0]), min(((mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) + 0), 1, 1)), _GLF_IDENTITY(1, (1) | 0), 1))]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))[0]), ((mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) + 0), 1, 1)), _GLF_IDENTITY(1, (1) | 0), 1))]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))[0]))) - _GLF_IDENTITY(0.0, min(0.0, 0.0))), _GLF_FUZZED(-1.8)), vec2(_GLF_FUZZED(-5563.6489), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))[1]), bvec2(false, true))), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(63.23, float(mat2x3(_GLF_IDENTITY(63.23, mix(float(63.23), float(_GLF_FUZZED(-123.856)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))).x), clamp(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), _GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), true))))))), max(_GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (false))))), mix(vec2(_GLF_IDENTITY((mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))), 0))], (injectionSwitch)[1]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))[0], _GLF_IDENTITY(((mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) + 0), 1, 1)), _GLF_IDENTITY(1, (1) | 0), 1))]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))[0]), min(((mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) + 0), 1, 1)), _GLF_IDENTITY(1, (1) | 0), 1))]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))[0]), ((mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) + 0), 1, 1)), _GLF_IDENTITY(1, (1) | 0), 1))]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))[0]))) - _GLF_IDENTITY(0.0, min(0.0, 0.0))), _GLF_FUZZED(-1.8)), vec2(_GLF_FUZZED(-5563.6489), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))[1]), bvec2(false, true))), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(63.23, float(mat2x3(_GLF_IDENTITY(63.23, mix(float(63.23), float(_GLF_FUZZED(-123.856)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))).x), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), _GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), true))))))), max(_GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (false))))), mix(vec2(_GLF_IDENTITY((mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))), 0))], (injectionSwitch)[1]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))[0], _GLF_IDENTITY(((mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) + 0), 1, 1)), _GLF_IDENTITY(1, (1) | 0), 1))]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))[0]), min(((mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) + 0), 1, 1)), _GLF_IDENTITY(1, (1) | 0), 1))]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))[0]), ((mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) + 0), 1, 1)), _GLF_IDENTITY(1, (1) | 0), 1))]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))[0]))) - _GLF_IDENTITY(0.0, min(0.0, 0.0))), _GLF_FUZZED(-1.8)), vec2(_GLF_FUZZED(-5563.6489), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))[1]), bvec2(false, true))), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(63.23, float(mat2x3(_GLF_IDENTITY(63.23, mix(float(63.23), float(_GLF_FUZZED(-123.856)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))).x), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), _GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), true))))))), max(_GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (false))))), mix(vec2(_GLF_IDENTITY((mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))), 0))], (injectionSwitch)[1]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))[0], _GLF_IDENTITY(((mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) + 0), 1, 1)), _GLF_IDENTITY(1, (1) | 0), 1))]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))[0]), min(((mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) + 0), 1, 1)), _GLF_IDENTITY(1, (1) | 0), 1))]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))[0]), ((mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) + 0), 1, 1)), _GLF_IDENTITY(1, (1) | 0), 1))]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))[0]))) - _GLF_IDENTITY(0.0, min(0.0, 0.0))), _GLF_FUZZED(-1.8)), vec2(_GLF_FUZZED(-5563.6489), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))[1]), bvec2(false, true))), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(63.23, float(mat2x3(_GLF_IDENTITY(63.23, mix(float(63.23), float(_GLF_FUZZED(-123.856)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))).x), float(mat4(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), _GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), true))))))), max(_GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (false))))), mix(vec2(_GLF_IDENTITY((mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))), 0))], (injectionSwitch)[1]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))[0], _GLF_IDENTITY(((mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) + 0), 1, 1)), _GLF_IDENTITY(1, (1) | 0), 1))]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))[0]), min(((mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) + 0), 1, 1)), _GLF_IDENTITY(1, (1) | 0), 1))]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))[0]), ((mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) + 0), 1, 1)), _GLF_IDENTITY(1, (1) | 0), 1))]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))[0]))) - _GLF_IDENTITY(0.0, min(0.0, 0.0))), _GLF_FUZZED(-1.8)), vec2(_GLF_FUZZED(-5563.6489), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))[1]), bvec2(false, true))), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(63.23, float(mat2x3(_GLF_IDENTITY(63.23, mix(float(63.23), float(_GLF_FUZZED(-123.856)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))).x), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))))), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), _GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), true))))))), max(_GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (false))))), mix(vec2(_GLF_IDENTITY((mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))), 0))], (injectionSwitch)[1]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))[0], _GLF_IDENTITY(((mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) + 0), 1, 1)), _GLF_IDENTITY(1, (1) | 0), 1))]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))[0]), min(((mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) + 0), 1, 1)), _GLF_IDENTITY(1, (1) | 0), 1))]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))[0]), ((mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) + 0), 1, 1)), _GLF_IDENTITY(1, (1) | 0), 1))]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))[0]))) - _GLF_IDENTITY(0.0, min(0.0, 0.0))), _GLF_FUZZED(-1.8)), vec2(_GLF_FUZZED(-5563.6489), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(63.23), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))[1]), bvec2(false, true))), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(63.23, float(mat2x3(_GLF_IDENTITY(63.23, mix(float(63.23), float(_GLF_FUZZED(-123.856)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))), _GLF_FUZZED(-46.66)), bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))).x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(_GLF_struct_59 _GLF_struct_replacement_59 = _GLF_struct_59(_GLF_struct_50(_GLF_struct_46(mat2x3(1.0), bvec3(true), mat2x3(1.0), mat2(1.0)), ivec2(1), _GLF_struct_47(vec4(1.0), bvec4(true)), mat3x4(1.0), _GLF_struct_48(bvec2(true), 1u, mat3x4(1.0), ivec2(1)), mat4(1.0), _GLF_struct_49(uvec3(1u), mat4x3(1.0), 1, uvec4(1u))), _GLF_struct_56(_GLF_struct_51(true, mat3x4(1.0), mat4x2(1.0), uvec4(1u), mat4x2(1.0)), _GLF_struct_52(vec4(1.0), bvec2(true), ivec2(1)), _GLF_struct_53(mat3x2(1.0)), _GLF_struct_54(1u, mat2(1.0), bvec2(true), uvec3(1u), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), true))))), mat4(1.0), mat3(1.0)), true, _GLF_struct_55(mat3x2(1.0), mat2x4(1.0), ivec4(1))), vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, abs(1.0), 1.0))), 1.0))), mat3(1.0), 1.0, _GLF_struct_58(_GLF_struct_57(bvec4(true), ivec4(1), mat4x3(1.0), bvec2(true), vec3(1.0)), bvec2(true)), 0, bvec3(true)); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_59._injected_loop_counter < 1); _GLF_struct_replacement_59._injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
          barrier();
         barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), true, false, false)))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(false))) || false))))
        barrier();
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    {
    }
   else
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), vec2(_GLF_FUZZED(-4.5), _GLF_FUZZED(-5.0)), bvec2(false, false)))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
  return;
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).x > injectionSwitch.y))));
  }
 do
  {
   for(_GLF_struct_68 _GLF_struct_replacement_68 = _GLF_struct_68(mat4x3(1.0), mat4x2(1.0), vec4(1.0), (1 ^ _GLF_IDENTITY(0, ~ (~ (0))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_struct_replacement_68._injected_loop_counter > _GLF_IDENTITY(0, ~ (~ (0)))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_struct_replacement_68._injected_loop_counter > _GLF_IDENTITY(0, ~ (~ (0))))), false || (! (_GLF_WRAPPED_LOOP(_GLF_struct_replacement_68._injected_loop_counter > _GLF_IDENTITY(0, ~ (~ (0))))))))); _GLF_struct_replacement_68._injected_loop_counter --)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_IF_FALSE(false))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
}
