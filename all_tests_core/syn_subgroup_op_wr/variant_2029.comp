#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_130 {
 bvec4 _f0;
 mat3x4 _f1;
 mat4x3 _f2;
 mat4x3 _GLF_SWITCH_2_5v;
 ivec2 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_129 {
 mat3 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_128 {
 vec2 _f0;
 uint _f1;
 uvec2 _f2;
 ivec4 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_131 {
 _GLF_struct_128 _f0;
 _GLF_struct_129 _f1;
 _GLF_struct_130 _f2;
} ;

struct _GLF_struct_132 {
 _GLF_struct_131 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_125 {
 bool _f0;
 mat2x4 _f1;
 mat4x3 _f2;
 mat2 _f3;
 mat3x2 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_124 {
 mat4x3 _f0;
 int _f1;
 bvec4 _f2;
 mat4 _f3;
 bool _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_123 {
 mat2 _f0;
 mat4x2 _f1;
 uvec4 _f2;
 mat3x4 _f3;
 uvec4 _f4;
 ivec4 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_126 {
 _GLF_struct_123 _f0;
 mat3x4 _f1;
 mat2x3 _f2;
 bvec3 _f3;
 _GLF_struct_124 _f4;
 mat2x3 _f5;
 _GLF_struct_125 _f6;
} ;

struct _GLF_struct_127 {
 _GLF_struct_126 _f0;
 vec4 _GLF_SWITCH_0_27v;
} ;

struct _GLF_struct_121 {
 bvec4 _f0;
 ivec2 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_119 {
 mat4x2 _f0;
 mat4x3 _f1;
 bvec3 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_120 {
 bvec4 _f0;
 _GLF_struct_119 _f1;
} ;

struct _GLF_struct_117 {
 mat3x4 _f0;
} ;

struct _GLF_struct_116 {
 vec3 _f0;
 uvec3 _f1;
 bvec4 _f2;
 int _f3;
 ivec3 _f4;
 mat4x3 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_118 {
 _GLF_struct_116 _f0;
 mat4x2 _f1;
 _GLF_struct_117 _f2;
} ;

struct _GLF_struct_114 {
 int _f0;
 float _f1;
 mat2 _f2;
 mat3x2 _f3;
 ivec2 _f4;
 vec3 _f5;
 float _f6;
} ;

struct _GLF_struct_113 {
 ivec4 _f0;
} ;

struct _GLF_struct_112 {
 uvec2 _f0;
 bool _f1;
 mat3x4 _f2;
 bool _f3;
} ;

struct _GLF_struct_111 {
 uvec3 _f0;
 mat4 _f1;
 mat3x2 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_110 {
 mat3x2 _f0;
 bvec2 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_115 {
 bvec3 _f0;
 _GLF_struct_110 _f1;
 _GLF_struct_111 _f2;
 mat2 _f3;
 _GLF_struct_112 _f4;
 _GLF_struct_113 _f5;
 _GLF_struct_114 _f6;
} ;

struct _GLF_struct_109 {
 mat2 _f0;
 int _f1;
} ;

struct _GLF_struct_122 {
 bvec2 _f0;
 vec4 _f1;
 _GLF_struct_109 _f2;
 _GLF_struct_115 _f3;
 _GLF_struct_118 _f4;
 _GLF_struct_120 _f5;
 uint subgroup_size;
 _GLF_struct_121 _f6;
} ;

struct _GLF_struct_106 {
 ivec2 _f0;
 bvec2 _f1;
 int _injected_loop_counter;
 mat4x3 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_107 {
 uvec4 _f0;
 _GLF_struct_106 _f1;
 mat3 _f2;
 int _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_108 {
 _GLF_struct_107 _f0;
 mat3x2 _f1;
 ivec3 _f2;
 mat3 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_103 {
 uint _f0;
 bvec2 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_102 {
 mat4x3 _f0;
 float _f1;
 ivec3 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_104 {
 vec3 _f0;
 _GLF_struct_102 _f1;
 mat2 _f2;
 _GLF_struct_103 _f3;
 uvec4 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_101 {
 mat2x4 _f0;
 int _injected_loop_counter;
 mat3 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_105 {
 bvec3 _f0;
 mat4x3 _f1;
 _GLF_struct_101 _f2;
 _GLF_struct_104 _f3;
 uvec2 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_98 {
 mat4x3 _f0;
 mat3 _f1;
 bvec2 _f2;
 mat4x2 _f3;
 float _f4;
 bool _f5;
} ;

struct _GLF_struct_97 {
 mat2x4 _f0;
 vec3 _f1;
 bool _f2;
 mat4x2 _f3;
 bool _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_96 {
 mat4x3 _f0;
} ;

struct _GLF_struct_99 {
 int _injected_loop_counter;
 uvec3 _f0;
 _GLF_struct_96 _f1;
 _GLF_struct_97 _f2;
 _GLF_struct_98 _f3;
} ;

struct _GLF_struct_94 {
 mat4x2 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_93 {
 mat2x4 _f0;
 mat2x3 _f1;
 mat3x4 _f2;
 mat3 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_95 {
 _GLF_struct_93 _f0;
 _GLF_struct_94 _f1;
 bvec4 _f2;
 ivec2 _f3;
 bool _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_91 {
 mat3 _f0;
 ivec2 _f1;
 bool _f2;
 bvec3 _f3;
 mat3x4 _f4;
 mat2 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_90 {
 bvec2 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_89 {
 float _f0;
 mat2x4 _f1;
 mat2x3 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_88 {
 mat3x2 _f0;
 mat2x4 _f1;
 uvec2 _f2;
 bvec4 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_87 {
 uvec4 _f0;
} ;

struct _GLF_struct_92 {
 _GLF_struct_87 _f0;
 _GLF_struct_88 _f1;
 _GLF_struct_89 _f2;
 _GLF_struct_90 _f3;
 _GLF_struct_91 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_85 {
 ivec2 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_84 {
 mat2x3 _f0;
 bvec3 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_83 {
 bool _f0;
 vec3 _f1;
} ;

struct _GLF_struct_86 {
 _GLF_struct_83 _f0;
 _GLF_struct_84 _f1;
 _GLF_struct_85 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_100 {
 uvec2 _f0;
 float _f1;
 _GLF_struct_86 _f2;
 mat2x3 _f3;
 _GLF_struct_92 _f4;
 _GLF_struct_95 _f5;
 _GLF_struct_99 _f6;
} ;

struct _GLF_struct_80 {
 mat4x2 _f0;
 uint _f1;
 bool _f2;
 mat4x2 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_79 {
 vec3 _f0;
 mat2 _f1;
 bool _f2;
 uint _f3;
} ;

struct _GLF_struct_78 {
 mat4 _f0;
 bvec4 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_81 {
 _GLF_struct_78 _f0;
 _GLF_struct_79 _f1;
 vec2 _f2;
 mat4x2 _f3;
 _GLF_struct_80 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_82 {
 bvec2 _GLF_SWITCH_3_0v;
 _GLF_struct_81 _f0;
 mat4 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_75 {
 mat2x3 _f0;
 mat4x2 _f1;
 uvec3 _f2;
 bvec2 _f3;
 ivec4 _f4;
 float _f5;
} ;

struct _GLF_struct_74 {
 mat4x3 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_73 {
 vec3 _f0;
 bvec2 _f1;
 vec2 _f2;
 mat2x4 _f3;
 vec3 _f4;
 float _f5;
} ;

struct _GLF_struct_76 {
 ivec2 _f0;
 _GLF_struct_73 _f1;
 _GLF_struct_74 _f2;
 float _f3;
 _GLF_struct_75 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_71 {
 mat2x4 _f0;
 bvec4 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_70 {
 vec3 _f0;
 uvec4 _f1;
 mat3x4 _f2;
 uvec2 _f3;
 ivec4 _f4;
 float _f5;
} ;

struct _GLF_struct_72 {
 _GLF_struct_70 _f0;
 bvec2 _f1;
 _GLF_struct_71 _f2;
} ;

struct _GLF_struct_68 {
 ivec2 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_69 {
 _GLF_struct_68 _f0;
 uvec4 _f1;
 mat4x3 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_66 {
 mat4x3 _f0;
 mat4 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_67 {
 _GLF_struct_66 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_77 {
 _GLF_struct_67 _f0;
 mat2x4 _f1;
 _GLF_struct_69 _f2;
 bvec3 _f3;
 _GLF_struct_72 _f4;
 _GLF_struct_76 _f5;
 ivec2 _f6;
 uint virtual_gid;
} ;

struct _GLF_struct_63 {
 ivec4 _f0;
 vec4 _f1;
 vec3 _f2;
 bvec3 _f3;
 mat2x3 _f4;
 bool _f5;
} ;

struct _GLF_struct_62 {
 bvec2 _f0;
 ivec4 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_64 {
 _GLF_struct_62 _f0;
 ivec3 _f1;
 _GLF_struct_63 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_60 {
 ivec2 _f0;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_size;
 ivec4 _f1;
} ;

struct _GLF_struct_61 {
 ivec4 _f0;
 mat3x4 _f1;
 _GLF_struct_60 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_58 {
 mat4x2 _f0;
 int _f1;
 vec4 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_57 {
 mat4x3 _f0;
 uvec4 _f1;
 mat3 _f2;
 ivec4 _f3;
 mat4x3 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_56 {
 uvec2 _f0;
 bvec2 _f1;
 vec4 _f2;
 mat2x4 _f3;
 bvec4 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_59 {
 bool _f0;
 _GLF_struct_56 _f1;
 mat4 _f2;
 _GLF_struct_57 _f3;
 _GLF_struct_58 _f4;
} ;

struct _GLF_struct_65 {
 _GLF_struct_59 _f0;
 _GLF_struct_61 _f1;
 bvec4 _f2;
 mat4x3 _f3;
 float _f4;
 _GLF_struct_64 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_53 {
 uvec4 _f0;
 mat3x4 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_54 {
 bvec2 _f0;
 _GLF_struct_53 _f1;
} ;

struct _GLF_struct_51 {
 mat3x2 _f0;
 bvec4 _f1;
 vec4 _f2;
 int _injected_loop_counter;
 bvec4 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_52 {
 _GLF_struct_51 _f0;
 mat3x2 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_49 {
 vec4 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_48 {
 ivec4 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_50 {
 _GLF_struct_48 _f0;
 _GLF_struct_49 _f1;
} ;

struct _GLF_struct_46 {
 vec2 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_47 {
 vec4 _f0;
 _GLF_struct_46 _f1;
 uint _f2;
 bvec4 _f3;
 int _f4;
} ;

struct _GLF_struct_55 {
 _GLF_struct_47 _f0;
 _GLF_struct_50 _f1;
 _GLF_struct_52 _f2;
 _GLF_struct_54 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_43 {
 mat2x4 _f0;
 int _injected_loop_counter;
 mat4x2 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_42 {
 mat2x3 _f0;
 uvec3 _f1;
 bvec4 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_41 {
 mat3x2 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_40 {
 ivec4 _f0;
 uvec2 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_39 {
 bvec4 _f0;
 ivec4 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_44 {
 _GLF_struct_39 _f0;
 _GLF_struct_40 _f1;
 _GLF_struct_41 _f2;
 _GLF_struct_42 _f3;
 _GLF_struct_43 _f4;
 mat4x2 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_45 {
 _GLF_struct_44 _f0;
} ;

struct _GLF_struct_36 {
 mat3 _f0;
} ;

struct _GLF_struct_35 {
 bvec4 _f0;
 uvec4 _f1;
 mat3x2 _f2;
 ivec4 _f3;
 int _f4;
 uint _f5;
} ;

struct _GLF_struct_37 {
 _GLF_struct_35 _f0;
 uvec4 _f1;
 vec3 _f2;
 _GLF_struct_36 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_38 {
 _GLF_struct_37 _f0;
 vec4 _GLF_SWITCH_0_8v;
} ;

struct _GLF_struct_32 {
 ivec2 _f0;
 int _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_31 {
 float _f0;
 vec4 _f1;
 uint _f2;
 bvec4 _f3;
 mat2x3 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_30 {
 bvec3 _f0;
 uvec2 _f1;
 vec2 _f2;
 ivec3 _f3;
 uvec2 _f4;
 bvec3 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_33 {
 _GLF_struct_30 _f0;
 mat3x4 _f1;
 uvec4 _f2;
 bvec3 _f3;
 _GLF_struct_31 _f4;
 _GLF_struct_32 _f5;
} ;

struct _GLF_struct_34 {
 int _injected_loop_counter;
 ivec3 _f0;
 mat3x4 _f1;
 vec2 _f2;
 bool _f3;
 _GLF_struct_33 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_27 {
 uvec3 _f0;
 mat4 _f1;
 uint _f2;
} ;

struct _GLF_struct_26 {
 mat4x2 _f0;
 uvec2 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_28 {
 _GLF_struct_26 _f0;
 _GLF_struct_27 _f1;
} ;

struct _GLF_struct_24 {
 ivec2 _f0;
 uvec4 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_23 {
 uvec4 _f0;
 mat2x4 _f1;
 ivec3 _f2;
 mat4 _f3;
 mat3x4 _f4;
 ivec2 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_22 {
 uvec4 _f0;
 mat3 _f1;
 int _f2;
 float _f3;
 vec4 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_21 {
 int _f0;
 bool _f1;
} ;

struct _GLF_struct_25 {
 _GLF_struct_21 _f0;
 uvec3 _f1;
 ivec2 _f2;
 _GLF_struct_22 _f3;
 ivec3 _f4;
 _GLF_struct_23 _f5;
 _GLF_struct_24 _f6;
} ;

struct _GLF_struct_19 {
 uvec4 _f0;
 mat2 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_18 {
 bvec3 _f0;
 bvec3 _f1;
 uvec3 _f2;
 mat3x2 _f3;
 float _f4;
 mat2x3 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_17 {
 vec2 _f0;
 bvec3 _f1;
 vec2 _f2;
 mat3x4 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_16 {
 mat4x2 _f0;
 int _f1;
} ;

struct _GLF_struct_15 {
 uvec3 _f0;
 mat3x2 _f1;
 mat2x3 _f2;
 uvec4 _f3;
 uint _f4;
 vec3 _f5;
} ;

struct _GLF_struct_20 {
 _GLF_struct_15 _f0;
 _GLF_struct_16 _f1;
 _GLF_struct_17 _f2;
 _GLF_struct_18 _f3;
 _GLF_struct_19 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_29 {
 _GLF_struct_20 _f0;
 _GLF_struct_25 _f1;
 mat3x2 _f2;
 _GLF_struct_28 _f3;
 vec4 _f4;
 ivec3 _f5;
 int _f6;
 int _injected_loop_counter;
} ;

struct _GLF_struct_14 {
 vec4 _f0;
 uint workgroup_base;
 mat4 _f1;
} ;

struct _GLF_struct_11 {
 bvec4 _f0;
 uvec3 _f1;
 int _f2;
 mat2 _f3;
 bool _f4;
 bool _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_12 {
 mat2x3 _f0;
 ivec2 _f1;
 uvec3 _f2;
 ivec4 _f3;
 _GLF_struct_11 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_9 {
 uvec4 _f0;
 mat3 _f1;
 uvec4 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_8 {
 mat4 _f0;
 uint _f1;
} ;

struct _GLF_struct_7 {
 ivec2 _f0;
 int _f1;
 uvec3 _f2;
 uvec3 _f3;
 int _f4;
} ;

struct _GLF_struct_6 {
 bool _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_5 {
 ivec2 _f0;
 ivec4 _f1;
 uvec4 _f2;
 mat4x3 _f3;
 uvec4 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_10 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_7 _f2;
 uvec3 _f3;
 _GLF_struct_8 _f4;
 mat4x2 _f5;
 _GLF_struct_9 _f6;
} ;

struct _GLF_struct_3 {
 mat2x3 _f0;
 ivec2 _f1;
 bvec4 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
} ;

struct _GLF_struct_13 {
 _GLF_struct_4 _f0;
 bvec4 _f1;
 _GLF_struct_10 _f2;
 uvec2 GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id;
 _GLF_struct_12 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_1 {
 ivec3 _f0;
 vec4 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_0 {
 ivec4 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_2 {
 bvec3 _GLF_SWITCH_0_2v;
 mat2x3 _f0;
 _GLF_struct_0 _f1;
 bvec4 _f2;
 _GLF_struct_1 _f3;
 uvec2 _f4;
 mat2x3 _f5;
 mat2 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(_GLF_struct_108 _GLF_struct_replacement_108 = _GLF_struct_108(_GLF_struct_107(uvec4(1u), _GLF_struct_106(ivec2(1), bvec2(true), 0, mat4x3(1.0), ivec4(1)), mat3(1.0), 1, mat4x2(1.0)), mat3x2(1.0), ivec3(1), mat3(1.0), mat3x2(1.0)); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_108._f0._f1._injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_struct_replacement_108._f0._f1._injected_loop_counter ++)
      {
       switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
        {
         case 0:
         case 40:
         case 46:
         if(_GLF_DEAD(false))
          barrier();
         case 5:
         case 45:
         if(_GLF_DEAD(false))
          barrier();
         case 30:
         case 13:
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         case 91:
         case 48:
         case 35:
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
          barrier();
         break;
         case 18:
         vec2 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v;
         default:
         1;
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 _GLF_struct_13 _GLF_struct_replacement_13;
 _GLF_struct_65 _GLF_struct_replacement_65;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_replacement_13.GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.x = subgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_122 _GLF_struct_replacement_122 = _GLF_struct_122(bvec2(true), vec4(1.0), _GLF_struct_109(mat2(1.0), 1), _GLF_struct_115(bvec3(true), _GLF_struct_110(mat3x2(1.0), bvec2(true), uvec3(1u)), _GLF_struct_111(uvec3(1u), mat4(1.0), mat3x2(1.0), mat4(1.0)), mat2(1.0), _GLF_struct_112(uvec2(1u), true, mat3x4(1.0), true), _GLF_struct_113(ivec4(1)), _GLF_struct_114(1, 1.0, mat2(1.0), mat3x2(1.0), ivec2(1), vec3(1.0), 1.0)), _GLF_struct_118(_GLF_struct_116(vec3(1.0), uvec3(1u), bvec4(true), 1, ivec3(1), mat4x3(1.0), mat2x3(1.0)), mat4x2(1.0), _GLF_struct_117(mat3x4(1.0))), _GLF_struct_120(bvec4(true), _GLF_struct_119(mat4x2(1.0), mat4x3(1.0), bvec3(true), vec3(1.0))), gl_SubgroupSize, _GLF_struct_121(bvec4(true), ivec2(1), mat2x3(1.0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   _GLF_struct_replacement_65._f1._f2.GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_size.z = subgroup_local_id;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   _GLF_struct_replacement_65._f1._f2.GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_size.y = num_workgroup;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_replacement_65._f1._f2.GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_size.w = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_replacement_13.GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y = workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(vec4(1.0), _GLF_struct_replacement_65._f1._f2.GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_size.w * _GLF_struct_replacement_13.GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y, mat4(1.0));
 _GLF_struct_77 _GLF_struct_replacement_77 = _GLF_struct_77(_GLF_struct_67(_GLF_struct_66(mat4x3(1.0), mat4(1.0), mat3(1.0)), mat3x4(1.0)), mat2x4(1.0), _GLF_struct_69(_GLF_struct_68(ivec2(1), mat2(1.0)), uvec4(1u), mat4x3(1.0), mat2(1.0)), bvec3(true), _GLF_struct_72(_GLF_struct_70(vec3(1.0), uvec4(1u), mat3x4(1.0), uvec2(1u), ivec4(1), 1.0), bvec2(true), _GLF_struct_71(mat2x4(1.0), bvec4(true), mat3x2(1.0))), _GLF_struct_76(ivec2(1), _GLF_struct_73(vec3(1.0), bvec2(true), vec2(1.0), mat2x4(1.0), vec3(1.0), 1.0), _GLF_struct_74(mat4x3(1.0), mat4x2(1.0)), 1.0, _GLF_struct_75(mat2x3(1.0), mat4x2(1.0), uvec3(1u), bvec2(true), ivec4(1), 1.0), bvec2(true)), ivec2(1), _GLF_struct_replacement_14.workgroup_base + _GLF_struct_replacement_13.GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.x * _GLF_struct_replacement_122.subgroup_size + _GLF_struct_replacement_65._f1._f2.GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_size.z);
 uint next_virtual_gid = _GLF_struct_replacement_14.workgroup_base + _GLF_struct_replacement_13.GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.x * _GLF_struct_replacement_122.subgroup_size + ((_GLF_struct_replacement_65._f1._f2.GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_size.z + 1) % _GLF_struct_replacement_122.subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_replacement_65._f1._f2.GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_size.x = next_virtual_gid;
 atomicStore(buf[_GLF_struct_replacement_65._f1._f2.GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_size.x], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = atomicLoad(buf[_GLF_struct_replacement_77.virtual_gid], 4, 64, 0);
 if(_GLF_struct_replacement_65._f1._f2.GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_size.z + 1 < _GLF_struct_replacement_122.subgroup_size)
  {
   switch(_GLF_SWITCH(0))
    {
     case 45:
     if(_GLF_DEAD(false))
      barrier();
     mat3 _GLF_SWITCH_0_0v[85];
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       switch(_GLF_SWITCH(0))
        {
         case 0:
         case 37:
         case 91:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         case 44:
         case 8:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           for(_GLF_struct_29 _GLF_struct_replacement_29 = _GLF_struct_29(_GLF_struct_20(_GLF_struct_15(uvec3(1u), mat3x2(1.0), mat2x3(1.0), uvec4(1u), 1u, vec3(1.0)), _GLF_struct_16(mat4x2(1.0), 1), _GLF_struct_17(vec2(1.0), bvec3(true), vec2(1.0), mat3x4(1.0), mat2x3(1.0)), _GLF_struct_18(bvec3(true), bvec3(true), uvec3(1u), mat3x2(1.0), 1.0, mat2x3(1.0), vec3(1.0)), _GLF_struct_19(uvec4(1u), mat2(1.0), mat2x4(1.0)), bvec3(true)), _GLF_struct_25(_GLF_struct_21(1, true), uvec3(1u), ivec2(1), _GLF_struct_22(uvec4(1u), mat3(1.0), 1, 1.0, vec4(1.0), mat2x3(1.0)), ivec3(1), _GLF_struct_23(uvec4(1u), mat2x4(1.0), ivec3(1), mat4(1.0), mat3x4(1.0), ivec2(1), ivec3(1)), _GLF_struct_24(ivec2(1), uvec4(1u), uvec3(1u))), mat3x2(1.0), _GLF_struct_28(_GLF_struct_26(mat4x2(1.0), uvec2(1u), mat3(1.0)), _GLF_struct_27(uvec3(1u), mat4(1.0), 1u)), vec4(1.0), ivec3(1), 1, 0); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_29._injected_loop_counter < 1); _GLF_struct_replacement_29._injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         case 95:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         break;
         case 69:
         ;
         case 49:
         mat3 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v;
         default:
         1;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     case 29:
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true)))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         barrier();
        }
      }
     ivec2 _GLF_SWITCH_0_1v;
     if(_GLF_DEAD(false))
      barrier();
     case 0:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       do
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     case 43:
     case 4:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(checker[_GLF_struct_replacement_77.virtual_gid], read, 4, 64, 4);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     case 94:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     case 57:
     case 89:
     case 97:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     subgroupAll(false);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     break;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     case 1:
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     for(_GLF_struct_2 _GLF_struct_replacement_2; false; (- mat3(-322.070, 2.8, 995.516, 431.811, -40.37, -5.4, -2084.5889, -5.3, -1.8)))
      {
      }
     case 46:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     if(false)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         switch(_GLF_SWITCH(0))
          {
           case 0:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           case 43:
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           case 8:
           case 74:
           do
            {
             switch(_GLF_SWITCH(0))
              {
               case 71:
               if(_GLF_DEAD(false))
                barrier();
               ivec2 _GLF_SWITCH_3_0v[21], _GLF_SWITCH_3_1v[89], _GLF_SWITCH_3_2v;
               case 0:
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               case 12:
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               case 25:
               if(_GLF_DEAD(false))
                barrier();
               case 19:
               case 43:
               case 47:
               case 20:
               barrier();
               break;
               case 68:
               mat3(649.296, 913.668, 3.8, -298.328, 8.3, -6410.6687, 3652.7267, 77.32, -7.5);
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               default:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               1;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           break;
           case 54:
           if(_GLF_DEAD(false))
            barrier();
           lessThanEqual(ivec3(-30261, 88961, 91951), (ivec3(41452, -57823, 58205) * 70683));
           case 76:
           mat4 _GLF_SWITCH_2_0v[42], _GLF_SWITCH_2_1v[40], _GLF_SWITCH_2_2v;
           if(_GLF_DEAD(false))
            barrier();
           default:
           1;
          }
        }
       {
        ;
        do
         {
          switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(2), int(2)))))
           {
            case 35:
            read;
            case 45:
            if(_GLF_DEAD(false))
             barrier();
            false;
            case 0:
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            float _GLF_SWITCH_0_3v[80];
            if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
             }
            else
             {
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(false))
               barrier();
             }
            if(_GLF_WRAPPED_IF_TRUE(true))
             {
              if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
               barrier();
              for(_GLF_struct_34 _GLF_struct_replacement_34 = _GLF_struct_34(int(_GLF_ZERO(0.0, injectionSwitch.x)), ivec3(1), mat3x4(1.0), vec2(1.0), true, _GLF_struct_33(_GLF_struct_30(bvec3(true), uvec2(1u), vec2(1.0), ivec3(1), uvec2(1u), bvec3(true), uvec3(1u)), mat3x4(1.0), uvec4(1u), bvec3(true), _GLF_struct_31(1.0, vec4(1.0), 1u, bvec4(true), mat2x3(1.0), mat3x2(1.0)), _GLF_struct_32(ivec2(1), 1, mat2x4(1.0))), bvec3(true)); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_34._injected_loop_counter != (1 ^ 0)); _GLF_struct_replacement_34._injected_loop_counter ++)
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                ivec3(-45523, -83421, 57989);
               }
             }
            else
             {
             }
            65681;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            uint _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v[39];
            if(_GLF_DEAD(false))
             barrier();
            uvec3(102862u, 35585u, 7733u);
            case 98:
            if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
             }
            if(_GLF_DEAD(false))
             barrier();
            ivec4 _GLF_SWITCH_0_6v[32];
            float _GLF_SWITCH_0_7v;
            case 57:
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 barrier();
                barrier();
               }
              if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                if(_GLF_DEAD(false))
                 barrier();
               }
              else
               {
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                   {
                    case 20:
                    ;
                    case 0:
                    if(_GLF_DEAD(false))
                     barrier();
                    case 28:
                    case 98:
                    case 26:
                    case 24:
                    if(_GLF_DEAD(false))
                     barrier();
                    case 45:
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))))
                     barrier();
                    break;
                    if(_GLF_DEAD(false))
                     barrier();
                    default:
                    do
                     {
                      1;
                      if(_GLF_DEAD(false))
                       barrier();
                     }
                    while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   }
                 }
               }
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
               barrier();
             }
            transpose(mat3(4322.4255, 9563.2281, 7.3, -4.5, -2.4, -302.462, -1656.8621, 3889.6347, -340.011));
            ivec2(-74025, 18609);
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
             barrier();
            break;
            case 50:
            uintBitsToFloat((uvec3(138214u, 53650u, 158882u) ^ uvec3(43711u, 53271u, 16447u)));
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            case 30:
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            mat3x2(0.0, 339.644, -456.319, -88.21, 2.0, -3.7);
            default:
            1;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
           }
          if(_GLF_DEAD(false))
           barrier();
         }
        while((bvec3(true, false, false) != equal(vec3(6.3, 8.5, -30.87), vec3(-3164.8336, 9.8, 4.1))));
        do
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            barrier();
           }
         }
        while(_GLF_WRAPPED_LOOP(false));
        if(_GLF_DEAD(false))
         barrier();
        do
         {
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          do
           {
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              barrier();
             }
            if(true)
             {
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
           }
          while(_GLF_WRAPPED_LOOP(false));
         }
        while(_GLF_WRAPPED_LOOP(false));
        {
         if(_GLF_DEAD(false))
          barrier();
         _GLF_struct_38 _GLF_struct_replacement_38;
         (_GLF_struct_replacement_13.GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.x > read);
         mat4(-9618.4750, -4.0, -92.46, -296.142, -4.8, -650.240, 72.92, -4574.8607, -8.8, 667.166, -1499.3526, -24.31, 383.535, 667.100, 822.292, 5.6);
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         vec3(-707.018, -8535.7492, 4663.4395);
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         else
          {
          }
         float _GLF_SWITCH_0_9v, _GLF_SWITCH_0_10v[2];
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         vec3 _GLF_SWITCH_0_11v[12];
         if(_GLF_DEAD(false))
          barrier();
         mat2 _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v[22], _GLF_SWITCH_0_14v;
         ivec3 _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v[12], _GLF_SWITCH_0_17v[15];
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         _GLF_SWITCH_0_1v;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         barrier();
        while(false)
         {
          bvec2 _GLF_SWITCH_0_18v;
          ivec4 _GLF_SWITCH_0_19v, _GLF_SWITCH_0_20v;
          mat3x4 _GLF_SWITCH_0_21v, _GLF_SWITCH_0_22v, _GLF_SWITCH_0_23v;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            barrier();
           }
          vec2(-13.65, 7275.6051);
          if(_GLF_DEAD(false))
           barrier();
          mat3x4 _GLF_SWITCH_0_24v, _GLF_SWITCH_0_25v, _GLF_SWITCH_0_26v;
          for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
           {
            for(_GLF_struct_45 _GLF_struct_replacement_45 = _GLF_struct_45(_GLF_struct_44(_GLF_struct_39(bvec4(true), ivec4(1), ivec3(1)), _GLF_struct_40(ivec4(1), uvec2(1u), ivec3(1)), _GLF_struct_41(mat3x2(1.0), mat2(1.0)), _GLF_struct_42(mat2x3(1.0), uvec3(1u), bvec4(true), mat2x3(1.0)), _GLF_struct_43(mat2x4(1.0), 1, mat4x2(1.0), uvec3(1u)), mat4x2(1.0), mat3x2(1.0))); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_45._f0._f4._injected_loop_counter > 0); _GLF_struct_replacement_45._f0._f4._injected_loop_counter --)
             {
              switch(_GLF_SWITCH(0))
               {
                case 33:
                if(_GLF_DEAD(false))
                 barrier();
                mat3(82.15, -4.7, -6.9, 1304.5124, -72.75, -7.7, 6.6, -2214.0280, 70.38);
                case 0:
                case 99:
                case 40:
                case 68:
                case 53:
                case 75:
                case 39:
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                  barrier();
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                 }
                if(_GLF_DEAD(false))
                 barrier();
                break;
                case 93:
                ;
                case 44:
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                 barrier();
                if(_GLF_DEAD(false))
                 barrier();
                mat4x2 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v;
                default:
                1;
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 barrier();
               }
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                barrier();
               }
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
           }
         }
        bvec3(true, true, true);
        if(_GLF_DEAD(false))
         barrier();
       }
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
                barrier();
               switch(_GLF_SWITCH(0))
                {
                 case 55:
                 bvec2 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v;
                 case 0:
                 case 58:
                 case 34:
                 case 9:
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 case 13:
                 if(_GLF_DEAD(false))
                  barrier();
                 switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                  {
                   case 55:
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     injectionSwitch;
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   case 0:
                   case 87:
                   case 8:
                   if(_GLF_DEAD(false))
                    barrier();
                   case 76:
                   barrier();
                   break;
                   case 95:
                   mat4x2(-1.7, 414.700, 7.4, -7.1, 925.151, 47.42, 8.0, 7.0)[3];
                   case 64:
                   (min(vec3(-448.484, -72.11, 183.480), vec3(84.36, 571.232, -4.2)) - (vec3(-536.015, -5642.9700, -71.72) * -332.190));
                   default:
                   1;
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 case 83:
                 mat2 _GLF_SWITCH_3_2v, _GLF_SWITCH_3_3v, _GLF_SWITCH_3_4v[81];
                 case 42:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 uvec3 _GLF_SWITCH_3_5v, _GLF_SWITCH_3_6v;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 default:
                 1;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       _GLF_struct_127 _GLF_struct_replacement_127;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       for(uvec3 _GLF_SWITCH_0_28v; (-81274 != 7858); ldexp(uintBitsToFloat(uvec4(123813u, 31478u, 91684u, 34646u)), bitfieldReverse(ivec4(-73507, -70396, -56361, -65606))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         ;
         do
          {
           ivec2(-69498, -70897);
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           mat4x3 _GLF_SWITCH_0_29v, _GLF_SWITCH_0_30v[57], _GLF_SWITCH_0_31v;
           mat3x4 _GLF_SWITCH_0_32v, _GLF_SWITCH_0_33v;
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           mat3x2 _GLF_SWITCH_0_34v[61], _GLF_SWITCH_0_35v, _GLF_SWITCH_0_36v;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 (_GLF_SWITCH_0_29v * mat3x4(2789.3208, 481.153, 627.991, -6.7, 6.2, -554.028, -0.6, 39.83, 50.63, 42.48, -91.10, -5.4));
                }
               else
                {
                }
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
              barrier();
             switch(_GLF_SWITCH((0 | 0)))
              {
               case 96:
               mat2x4 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v;
               case 0:
               case 18:
               case 72:
               if(_GLF_DEAD(false))
                barrier();
               case 14:
               case 45:
               if(_GLF_DEAD(false))
                barrier();
               case 37:
               if(_GLF_DEAD(false))
                barrier();
               case 68:
               case 79:
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               break;
               case 56:
               if(_GLF_DEAD(false))
                barrier();
               ;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
                barrier();
               default:
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 1;
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           uvec2 _GLF_SWITCH_0_37v[69], _GLF_SWITCH_0_38v[58];
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           mat2(-1309.6975, 2140.1922, -8.3, -544.881);
           uvec2 _GLF_SWITCH_0_39v[65], _GLF_SWITCH_0_40v, _GLF_SWITCH_0_41v;
           (~ uvec3(196526u, 143036u, 177028u));
          }
         ivec4 _GLF_SWITCH_0_42v, _GLF_SWITCH_0_43v, _GLF_SWITCH_0_44v;
        }
       vec4 _GLF_SWITCH_0_45v, _GLF_SWITCH_0_46v, _GLF_SWITCH_0_47v;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         switch(_GLF_SWITCH((0 | 0)))
          {
           case 82:
           mat3(mat4(-16.81, 9833.9003, -3.8, 9.0, 9415.1638, 893.239, 406.801, 7289.0926, 1094.6393, 2.8, -3.6, 1.8, 4.0, -621.767, 853.147, 8.7));
           case 46:
           ;
           if(_GLF_DEAD(false))
            barrier();
           case 0:
           case 39:
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           case 70:
           case 50:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             else
              {
              }
            }
           break;
           case 44:
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           mat4x2(-686.928, 83.97, 38.54, 65.11, -48.98, 2.6, 4.8, 6.1);
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           case 61:
           bvec4(bvec3(false, false, true), true);
           default:
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             1;
            }
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         switch(_GLF_SWITCH(0))
          {
           case 34:
           uvec3(166120u, 106896u, 161958u);
           case 0:
           case 57:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           case 73:
           case 21:
           case 27:
           if(_GLF_DEAD(false))
            barrier();
           case 99:
           case 98:
           case 42:
           for(           ivec3(52033, 39028, -44890).y;
 any(bvec3(false, true, true)); uvec4(145143u, 129644u, 80045u, 193002u))
            {
             switch(_GLF_SWITCH((0 | 0)))
              {
               case 25:
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               bool _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v[76], _GLF_SWITCH_1_2v;
               if(_GLF_DEAD(false))
                barrier();
               case 0:
               mat3(-4603.3058, 30.14, -6322.7136, 2.4, 0.3, 642.860, -5968.9576, -13.39, -855.841);
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               vec4 _GLF_SWITCH_0_48v[47], _GLF_SWITCH_0_49v;
               mat2x3(3.8, -1.5, 1.7, 5404.6351, 68.59, 44.93);
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
               do
                {
                 for(                 mat2x4(-660.872, 0.5, 7.9, 15.00, 19.43, -2.5, 7.5, 645.644);
 any(bvec2(false, true)); (mat3x2(-5434.0137, 9.6, -453.792, -1861.6464, -434.323, 5680.1351) - (mat4x2(-6116.3026, -569.189, 8.1, 3847.9934, 6043.5485, -5.9, 487.717, -5.4) * mat3x4(1489.9868, 6.5, -1109.7468, 2.2, -3.3, -1.1, 93.25, -494.384, -36.40, 113.682, -5.2, 325.355))))
                  {
                   switch(_GLF_SWITCH(_GLF_IDENTITY(0, (0) | (0))))
                    {
                     case 47:
                     mat4(matrixCompMult(mat2x3(-1041.9215, 0.2, -0.6, 0.4, -3.9, -16.48), mat2x3(47.81, 651.976, 0.3, 8.1, -9.6, 2.7)));
                     case 0:
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                     mat2(94.72, 4.7, 15.99, 839.454);
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       ;
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     case 16:
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       switch(_GLF_SWITCH((0 | 0)))
                        {
                         case 6:
                         if(_GLF_DEAD(false))
                          barrier();
                         _GLF_struct_82 _GLF_struct_replacement_82;
                         if(_GLF_DEAD(false))
                          barrier();
                         case 74:
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           mat4x2(1075.2383, -5.7, -8.0, 6.4, 4.1, 9.0, 2.0, 9.2);
                          }
                         case 0:
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           barrier();
                          }
                         case 32:
                         case 68:
                         mat4x3(-4.1, 6.1, 4515.9740, -410.172, -8683.2341, 1.2, 26.56, -0.7, 5396.4141, -55.51, -1859.8744, -364.707);
                         break;
                         case 48:
                         ;
                         default:
                         if(_GLF_DEAD(false))
                          barrier();
                         1;
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     else
                      {
                       switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))))))))
                        {
                         case 69:
                         (64921 >> 17734);
                         case 27:
                         bvec4(bvec2(true, true), _GLF_SWITCH_1_0v, _GLF_SWITCH_1_2v);
                         case 0:
                         case 22:
                         case 11:
                         case 49:
                         case 1:
                         case 57:
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if(_GLF_DEAD(false))
                          {
                           do
                            {
                             barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         break;
                         case 63:
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         bvec3(true, true, false);
                         case 61:
                         (floor(ceil(729.623)) - mat3x2(-1534.0391, 114.656, -1.6, 8.6, -6.5, 99.41));
                         default:
                         1;
                        }
                      }
                     bvec3(false, true, true);
                     case 11:
                     if(_GLF_DEAD(false))
                      barrier();
                     case 6:
                     ivec4 _GLF_SWITCH_0_50v, _GLF_SWITCH_0_51v;
                     transpose(mat4x3((mat4x2(906.075, -1.7, -9.9, -3.6, 2.4, -76.93, -21.81, -159.878) - 8.5)));
                     mat4(-8.1, 4.1, -1.4, -29.00, 17.15, 8.6, 9.6, -814.589, 4.0, 8.0, -129.197, -26.58, 87.28, -6525.8673, -7.7, 18.02);
                     if(_GLF_DEAD(false))
                      barrier();
                     case 94:
                     case 24:
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           barrier();
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         barrier();
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           barrier();
                          }
                         ;
                        }
                       else
                        {
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                       switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                        {
                         case 0:
                         if(_GLF_DEAD(false))
                          barrier();
                         do
                          {
                           switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))))
                            {
                             case 0:
                             case 52:
                             case 96:
                             case 17:
                             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                              barrier();
                             case 88:
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                               barrier();
                              }
                             case 70:
                             if(_GLF_DEAD(false))
                              barrier();
                             case 19:
                             case 66:
                             case 37:
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                               barrier();
                              }
                             break;
                             case 58:
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               barrier();
                              }
                             int _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v;
                             default:
                             1;
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         case 33:
                         case 30:
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         break;
                         default:
                         1;
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                      }
                     break;
                     default:
                     1;
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               break;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 for(_GLF_struct_100 _GLF_struct_replacement_100 = _GLF_struct_100(uvec2(1u), 1.0, _GLF_struct_86(_GLF_struct_83(true, vec3(1.0)), _GLF_struct_84(mat2x3(1.0), bvec3(true), ivec2(1)), _GLF_struct_85(ivec2(1), uvec2(1u)), vec4(1.0)), mat2x3(1.0), _GLF_struct_92(_GLF_struct_87(uvec4(1u)), _GLF_struct_88(mat3x2(1.0), mat2x4(1.0), uvec2(1u), bvec4(true), vec4(1.0)), _GLF_struct_89(1.0, mat2x4(1.0), mat2x3(1.0), ivec3(1)), _GLF_struct_90(bvec2(true), mat3x4(1.0)), _GLF_struct_91(mat3(1.0), ivec2(1), true, bvec3(true), mat3x4(1.0), mat2(1.0), mat3(1.0)), vec2(1.0)), _GLF_struct_95(_GLF_struct_93(mat2x4(1.0), mat2x3(1.0), mat3x4(1.0), mat3(1.0), bvec4(true)), _GLF_struct_94(mat4x2(1.0), uvec2(1u)), bvec4(true), ivec2(1), true, ivec2(1)), _GLF_struct_99((0 ^ 0), uvec3(1u), _GLF_struct_96(mat4x3(1.0)), _GLF_struct_97(mat2x4(1.0), vec3(1.0), true, mat4x2(1.0), true, ivec4(1)), _GLF_struct_98(mat4x3(1.0), mat3(1.0), bvec2(true), mat4x2(1.0), 1.0, true))); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_100._f6._injected_loop_counter != 1); _GLF_struct_replacement_100._f6._injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, false)))))
                    {
                     switch(_GLF_SWITCH(0))
                      {
                       case 54:
                       mat2(3278.0950, 9246.0144, 992.457, 1289.0902);
                       case 0:
                       case 31:
                       case 43:
                       if(_GLF_DEAD(false))
                        barrier();
                       case 58:
                       case 61:
                       case 34:
                       if(_GLF_DEAD(false))
                        barrier();
                       case 62:
                       barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                       break;
                       default:
                       1;
                      }
                    }
                   else
                    {
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                  }
                }
               default:
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))))))
                {
                 do
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                    barrier();
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               1;
              }
            }
           break;
           default:
           1;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       do
        {
         for(         vec3(-80.56, -6.4, -404.366).zy.stt;
 true; exp2(vec2(-6.3, 3.9)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           switch(_GLF_SWITCH(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, ~ (~ (0))), 0))))
            {
             case 0:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             case 19:
             case 39:
             case 36:
             case 74:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             case 69:
             ;
             case 88:
             if(_GLF_DEAD(false))
              barrier();
             for(             -4809.3323;
 true; bvec4(bvec2(true, true), true, (5014.4263 == -5831.7328)))
              {
               do
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 0:
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     mat3x4(-9052.5062, 2703.9375, 2.6, -6.5, 2691.4004, 7.6, 8.5, 13.56, -9129.3242, 12.88, 2742.3730, 9886.9838);
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   case 22:
                   case 56:
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   break;
                   default:
                   1;
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               mat3x4 _GLF_SWITCH_0_52v, _GLF_SWITCH_0_53v;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(0), int(0)))))
                  {
                   case 30:
                   _GLF_SWITCH_0_45v;
                   case 49:
                   uvec2(121570u, 138908u);
                   if(_GLF_DEAD(false))
                    barrier();
                   case 0:
                   case 28:
                   case 91:
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   case 71:
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   case 7:
                   for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                    }
                   case 54:
                   if(_GLF_DEAD(false))
                    barrier();
                   case 60:
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                   break;
                   case 22:
                   _GLF_SWITCH_0_46v;
                   case 79:
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   uvec4 _GLF_SWITCH_3_0v[18], _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
                   default:
                   1;
                  }
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 -7.0;
                }
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   do
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, false)))));
               ivec4(-17065, -41277, -69336, -34464);
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 26:
                     (bvec3(false, true, true) , mat4x3(324.604, 68.64, -647.632, -61.34, -39.20, -8478.0476, 9.9, -8109.7160, 48.24, -749.785, -0.9, 33.54));
                     case 95:
                     determinant(mat2(mat3(-955.273, 8998.3044, 9.3, -9.1, 2.6, -36.52, 8061.0845, -9.9, -755.476)));
                     if(_GLF_DEAD(false))
                      barrier();
                     case 0:
                     case 10:
                     case 32:
                     case 79:
                     case 31:
                     case 94:
                     case 12:
                     case 44:
                     case 83:
                     case 99:
                     if(_GLF_DEAD(false))
                      barrier();
                     switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(3), int(3)))))
                      {
                       case 36:
                       bvec3 _GLF_SWITCH_3_0v[84], _GLF_SWITCH_3_1v;
                       case 30:
                       distance(dot(-1.3, -75.77), 4.8);
                       case 0:
                       case 41:
                       case 83:
                       case 16:
                       case 35:
                       if(_GLF_DEAD(false))
                        barrier();
                       case 42:
                       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))))
                        barrier();
                       case 66:
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           barrier();
                          }
                        }
                       else
                        {
                         barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       break;
                       if(_GLF_DEAD(false))
                        barrier();
                       default:
                       1;
                      }
                     break;
                     default:
                     1;
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               bitCount(ivec2(-82632, 60183));
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               mat4 _GLF_SWITCH_0_54v, _GLF_SWITCH_0_55v, _GLF_SWITCH_0_56v;
               ivec3(53102, 63970, 48339);
               (ivec3(-76947, 3090, -58042) != ivec3(52341, -59143, -88149));
              }
             if(_GLF_DEAD(false))
              barrier();
             case 99:
             if(_GLF_DEAD(false))
              barrier();
             case 76:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             case 71:
             bool _GLF_SWITCH_0_57v, _GLF_SWITCH_0_58v, _GLF_SWITCH_0_59v;
             break;
             default:
             1;
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       for(_GLF_struct_105 _GLF_struct_replacement_105 = _GLF_struct_105(bvec3(true), mat4x3(1.0), _GLF_struct_101(mat2x4(1.0), 0, mat3(1.0), uvec2(1u)), _GLF_struct_104(vec3(1.0), _GLF_struct_102(mat4x3(1.0), 1.0, ivec3(1), bvec4(true)), mat2(1.0), _GLF_struct_103(1u, bvec2(true), mat3(1.0)), uvec4(1u), mat4x3(1.0)), uvec2(1u), mat4x3(1.0)); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_105._f2._injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), (((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))) << 0)); _GLF_struct_replacement_105._f2._injected_loop_counter ++)
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           vec3 _GLF_SWITCH_0_60v[36];
           if(_GLF_DEAD(false))
            barrier();
           uvec3 _GLF_SWITCH_0_61v, _GLF_SWITCH_0_62v[17], _GLF_SWITCH_0_63v;
           if(false)
            {
             switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(7), int(7)))))
              {
               case 19:
               mat4x2(2987.9507, 903.128, -7.8, 2.6, -664.301, -1911.1927, -8.1, -15.81);
               case 95:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               (uvec2(33046u, 100942u) | 197461u);
               case 0:
               injectionSwitch;
               for(_GLF_struct_55 _GLF_struct_replacement_55 = _GLF_struct_55(_GLF_struct_47(vec4(1.0), _GLF_struct_46(vec2(1.0), ivec4(1)), 1u, bvec4(true), 1), _GLF_struct_50(_GLF_struct_48(ivec4(1), ivec4(1)), _GLF_struct_49(vec4(1.0), mat2x3(1.0))), _GLF_struct_52(_GLF_struct_51(mat3x2(1.0), bvec4(true), vec4(1.0), 1, bvec4(true), mat2(1.0)), mat3x2(1.0), bvec2(true)), _GLF_struct_54(bvec2(true), _GLF_struct_53(uvec4(1u), mat3x4(1.0), mat3x2(1.0))), bvec2(true)); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_55._f2._f0._injected_loop_counter > 0); _GLF_struct_replacement_55._f2._f0._injected_loop_counter --)
                {
                 switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(8), int(8)))))
                  {
                   case 93:
                   (false ? mat2(37.06, -1693.3942, 6342.2327, -9.2) : mat2(8215.6775, 8.2, 13.24, 8.7));
                   if(_GLF_DEAD(false))
                    barrier();
                   case 0:
                   case 97:
                   if(_GLF_DEAD(false))
                    barrier();
                   case 32:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   do
                    {
                     injectionSwitch;
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   if(_GLF_DEAD(false))
                    barrier();
                   case 98:
                   case 31:
                   if(_GLF_DEAD(false))
                    barrier();
                   case 3:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   break;
                   default:
                   1;
                  }
                }
               ivec4(85381, -54723, -42374, 57810);
               _GLF_struct_replacement_13.GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y;
               mat3x4(493.944, 9.2, 156.136, -4.8, -44.35, -378.245, 2043.2481, 72.67, -868.301, 974.297, -0.0, 396.925);
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               (_GLF_SWITCH_0_61v --);
               bvec2(bvec3(false, false, true));
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
                }
               break;
               case 81:
               mat3x2(668.955, 1.5, 0.2, -6793.3315, 21.85, -448.241);
               case 99:
               mat3 _GLF_SWITCH_4_0v[49];
               if(_GLF_DEAD(false))
                barrier();
               default:
               1;
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             switch(_GLF_SWITCH(0))
              {
               case 36:
               uvec3 _GLF_SWITCH_5_0v[74];
               case 0:
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 -93030;
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
               case 38:
               case 26:
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = _GLF_IDENTITY(1, int(ivec4(1, 1, 0, 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   bvec3(false, bvec2(true, false));
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               case 76:
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               case 78:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               (uvec2(23629u, 193383u) ^ uvec2(199251u, 140318u));
               if(_GLF_DEAD(false))
                barrier();
               case 80:
               if(_GLF_DEAD(false))
                barrier();
               ;
               break;
               case 40:
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 num_workgroup;
                }
               else
                {
                }
               default:
               for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) & -64390); _GLF_WRAPPED_LOOP(_injected_loop_counter != (((1 ^ 0) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
                {
                 1;
                }
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         while(bool(_GLF_struct_replacement_122.subgroup_size));
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(3), int(3)))))
            {
             case 28:
             ;
             if(_GLF_DEAD(false))
              barrier();
             case 38:
             ;
             case 0:
             case 97:
             case 4:
             case 11:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               barrier();
              }
             break;
             case 34:
             mat4x3(9.6, -2.0, -737.006, 38.93, 597.763, -8.9, -5.5, 8.6, -8.9, 5944.3854, -1.5, -8.6);
             if(_GLF_DEAD(false))
              barrier();
             case 31:
             (normalize(599.634) + mat4(-33.58, -1.3, -4.0, 6388.9653, -66.43, -4071.4901, 9003.9949, -1804.4116, 1.6, 1467.9988, 266.656, 6.3, -291.115, -4131.6648, 9.1, 96.03));
             default:
             1;
            }
          }
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         bvec2(false, false);
        }
       do
        {
         switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(2), int(2)))))
          {
           case 58:
           equal(pow(vec3(84.40, 799.335, -8.1), vec3(-8.9, -7.4, 3359.2934)), vec3(0.2, -6.2, -7.4));
           case 99:
           mat3x2 _GLF_SWITCH_6_0v;
           case 0:
           case 21:
           case 47:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           case 35:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             switch(_GLF_SWITCH(0))
              {
               case 0:
               if(_GLF_DEAD(false))
                barrier();
               case 37:
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               case 50:
               case 94:
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               case 63:
               for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 30:
                     if(_GLF_DEAD(false))
                      barrier();
                     bvec2(false, true);
                     case 0:
                     case 27:
                     if(_GLF_DEAD(false))
                      barrier();
                     case 83:
                     case 79:
                     barrier();
                     break;
                     default:
                     1;
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                }
               case 95:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               case 9:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               case 47:
               barrier();
               break;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               default:
               1;
              }
            }
           break;
           case 38:
           ;
           case 41:
           bvec4 _GLF_SWITCH_6_1v, _GLF_SWITCH_6_2v[31], _GLF_SWITCH_6_3v;
           default:
           1;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       for(       -10992;
 (bvec2(false, true)[0] == (bvec2(true, false) != bvec2(false, true))); (mat2x4(9.3, 245.827, 52.52, -319.885, -0.9, -7355.5907, 1.9, -414.170) / -9.8))
        {
         switch(_GLF_SWITCH(((0 >> _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(8), int(8)))))
          {
           case 89:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           vec2 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
           case 0:
           case 6:
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             switch(_GLF_SWITCH(0))
              {
               case 0:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               case 80:
               case 44:
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               case 58:
               case 81:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               case 3:
               case 30:
               if(_GLF_DEAD(false))
                barrier();
               case 43:
               case 13:
               case 17:
               switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                {
                 case 16:
                 ((subgroup_id + uvec3(13222u, 194338u, 133141u)) ^ subgroup_local_id);
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 case 68:
                 if(_GLF_DEAD(false))
                  barrier();
                 (-54207 + ivec3(-94300, 7768, -2097));
                 case 0:
                 case 70:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 case 59:
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 case 43:
                 if(_GLF_DEAD(false))
                  barrier();
                 case 10:
                 float _GLF_SWITCH_0_64v, _GLF_SWITCH_0_65v, _GLF_SWITCH_0_66v;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 while(((bvec2(false, false) == bvec2(false, true))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     do
                      {
                       switch(_GLF_SWITCH((0 | 0)))
                        {
                         case 32:
                         _GLF_SWITCH_0_1v;
                         case 0:
                         case 29:
                         case 24:
                         if(_GLF_DEAD(false))
                          barrier();
                         case 71:
                         if(_GLF_DEAD(false))
                          barrier();
                         case 11:
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         break;
                         case 87:
                         mat3(98.79, -4.2, -31.16, 1.6, 825.099, 315.281, 7.1, 2.1, -2.0);
                         default:
                         1;
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   ivec4 _GLF_SWITCH_0_67v, _GLF_SWITCH_0_68v[72];
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     exp(vec3(99.25, -576.712, -852.001));
                     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       else
                        {
                         barrier();
                        }
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   vec3(-43.49, 0.4, -97.46);
                   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     ;
                     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   mat4x2 _GLF_SWITCH_0_69v;
                   vec2 _GLF_SWITCH_0_70v, _GLF_SWITCH_0_71v;
                  }
                 case 31:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 (mat4x3(47.60, 5.8, -723.102, 6.9, 1.9, -8465.3518, 8.5, -5.4, -755.427, 36.31, 5600.1749, 8.6) + mat4x3(-529.431, -4364.3434, 751.690, -58.92, -5.3, 8598.0543, 25.07, 0.1, -0.9, 3.9, 5.6, -903.441));
                 break;
                 case 74:
                 mat2(0.7, 5980.5568, -116.385, 2904.5215);
                 case 78:
                 mat4x3((- (mat4(-80.65, -520.440, 220.505, -64.45, -3.0, 9.1, -9.3, -59.36, 64.77, 1.6, -5988.3252, -4.3, 8125.7814, 52.00, 9420.7160, 5.0) , mat3x2(-3.9, -7883.8721, 1.0, -445.504, -2762.1920, -7560.4926))));
                 default:
                 for(int _injected_loop_counter = (((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) | (0 & 38841)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 1;
                }
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
                barrier();
               break;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               case 2:
               bvec3 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v[56];
               case 19:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                  barrier();
                 barrier();
                }
               bvec3 _GLF_SWITCH_3_2v, _GLF_SWITCH_3_3v, _GLF_SWITCH_3_4v;
               default:
               1;
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           case 39:
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           ;
           if(_GLF_DEAD(false))
            barrier();
           case 32:
           if(_GLF_DEAD(false))
            barrier();
           mat2x4 _GLF_SWITCH_3_3v;
           default:
           1;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     default:
     if(_GLF_DEAD(false))
      {
       do
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
      }
     do
      {
       switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
        {
         case 0:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         case 47:
         case 15:
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           1;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         case 56:
         84.70;
         if(_GLF_DEAD(false))
          barrier();
         case 83:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         {
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          do
           {
            switch(_GLF_SWITCH(0))
             {
              case 31:
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               barrier();
              bvec2 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v[13];
              case 0:
              case 80:
              case 46:
              case 63:
              if(_GLF_DEAD(false))
               barrier();
              case 65:
              (atomicAnd(_GLF_struct_replacement_65._f1._f2.GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_size.p, workgroup_id) % _GLF_struct_replacement_65._f1._f2.GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_size);
              break;
              default:
              if(_GLF_DEAD(false))
               barrier();
              1;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
             }
            if(_GLF_DEAD(false))
             barrier();
           }
          while(_GLF_WRAPPED_LOOP(false));
          if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
           barrier();
          ;
          uint _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v[85];
          mat3x4 _GLF_SWITCH_2_3v[12], _GLF_SWITCH_2_4v[61];
          (vec4(38.44, -0.6, 26.54, 8.4) != vec4(1.3, 3.1, 97.17, 9.3));
          mat3(5.0, 2.9, 16.76, 3.7, -51.58, 4.1, 467.501, 11.39, -4.8);
          _GLF_struct_132 _GLF_struct_replacement_132;
          bvec2(lessThan(uvec3(186492u, 60548u, 168263u), uvec3(79964u, 120215u, 11487u)));
          if(_GLF_DEAD(false))
           barrier();
          ivec2(-17159, 56448).tsss;
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
           barrier();
         }
         default:
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         1;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
   atomicStore(checker[_GLF_struct_replacement_77.virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
