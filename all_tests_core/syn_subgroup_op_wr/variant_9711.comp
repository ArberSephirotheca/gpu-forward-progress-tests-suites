#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_8 {
 bvec2 _f0;
 uint virtual_gid;
} ;

struct _GLF_struct_5 {
 ivec3 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_4 {
 uint _f0;
 int _f1;
 mat3x2 _f2;
 bool _f3;
} ;

struct _GLF_struct_6 {
 uint _f0;
 mat2x3 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_5 _f3;
} ;

struct _GLF_struct_2 {
 mat2 _f0;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
 mat2x3 _f1;
 mat4x2 _f2;
 float _f3;
 bool _f4;
} ;

struct _GLF_struct_3 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
} ;

struct _GLF_struct_0 {
 uint _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_7 {
 uint workgroup_id;
 _GLF_struct_0 _f0;
 int _f1;
 _GLF_struct_3 _f2;
 mat3x2 _f3;
 bvec2 _f4;
 _GLF_struct_6 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((_GLF_IDENTITY((0 & -30159) >> _GLF_IDENTITY(int(2), int(2)), ((0 & -30159) >> _GLF_IDENTITY(int(2), int(2))) * 1)), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY((0 & -30159) >> _GLF_IDENTITY(int(2), int(2)), ((0 & -30159) >> _GLF_IDENTITY(int(2), int(2))) * 1)), (_GLF_IDENTITY((_GLF_IDENTITY((0 & -30159) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (true ? _GLF_IDENTITY(int(2), int(2)) : _GLF_FUZZED(33185))), ((0 & -30159) >> _GLF_IDENTITY(int(2), int(2))) * 1)), ((_GLF_IDENTITY((0 & -30159) >> _GLF_IDENTITY(int(2), int(2)), ((0 & -30159) >> _GLF_IDENTITY(int(2), int(2))) * 1))) - 0)) - _GLF_IDENTITY(0, (0) ^ 0))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 0.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0), (true ? mat3(injectionSwitch.y, 0.0, 0.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3(-0.6, -942.479, 3376.3542, -1.6, 192.578, 3.9, -4.8, 973.362, 0.1)))))))))))))
    continue;
  }
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base;
 uvec2 GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x = subgroup_size;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.1), _GLF_IDENTITY((injectionSwitch)[1], (true ? _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0) : _GLF_FUZZED(3.8)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-4907.2623)), bvec2(true, false))).y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
    {
    }
   else
    {
     _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u * (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id), (1u * _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id) * 1u)), ~ (_GLF_IDENTITY(~ ((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id)), (~ ((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id))) | 0u)))) << 0u), 0u ^ (_GLF_IDENTITY(1u * (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id), (1u * (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id)) << 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)) * (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id), _GLF_IDENTITY((1u * (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id)) << 0u, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)) : (1u * _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id), ~ (~ ((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id)))), (false ? _GLF_FUZZED(subgroup_id) : (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id)))) << 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)) * (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = _GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (0u ^ 1u) * (subgroup_local_id))), (~ (_GLF_IDENTITY(subgroup_local_id, (0u ^ 1u) * (subgroup_local_id)))) ^ 0u)))), _GLF_IDENTITY((1u * (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id)) << 0u, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)) : (1u * _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id), (false ? _GLF_FUZZED(subgroup_id) : (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id)))) << 0u)))) | 0u)) - 0u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id, _GLF_IDENTITY(1u * (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id), (1u * (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id)) << 0u))), 0u ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))))), _GLF_IDENTITY(1u * (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id), (_GLF_IDENTITY(1u * _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id) - 0u)), 0u + ((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id))), (1u * (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id)) - 0u)) << 0u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))))), _GLF_IDENTITY(1u * (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id), (_GLF_IDENTITY(1u * _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id) - 0u)), 0u + ((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id))), (1u * (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id)) - 0u)) << 0u))), (~ (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))))), _GLF_IDENTITY(1u * (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id), (_GLF_IDENTITY(1u * _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id) - 0u)), 0u + ((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id))), (1u * (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id)) - 0u)) << 0u)))) ^ 0u)) ^ 0u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id, _GLF_IDENTITY(1u * (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id), (1u * (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id, ~ (~ (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))))) | 0u)) ^ 0u))) << 0u))), 0u ^ (~ (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), (_GLF_IDENTITY((subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), clamp((subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), _GLF_IDENTITY((subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), min((subgroup_local_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), uint(uvec2((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), ((0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) << 0u)))), _GLF_IDENTITY((subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), clamp((subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), _GLF_IDENTITY((subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), (false ? _GLF_FUZZED(atomicMin(subgroup_id, mix(subgroup_size, subgroup_size, true))) : (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))))))))), (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))))))) << 0u)), _GLF_IDENTITY(1u * (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id), (_GLF_IDENTITY(1u * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id, ~ (~ (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id))), (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id) / 1u)), 0u + ((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id))), (1u * (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id)) - 0u)) << 0u)))))) - ((0u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(8u), uint(8u))))));
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(subgroup_id) : gl_WorkGroupSize.x));
 GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.y = workgroup_size;
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(gl_WorkGroupID.x, _GLF_struct_0(_GLF_IDENTITY(1u, max(1u, 1u)), bvec2(true)), 1, _GLF_struct_3(_GLF_struct_1(mat3(1.0), mat2x3(1.0), mat4x2(1.0), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY((1.0), 1.0 * ((1.0)))))) * (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3387.2077) : 1.0)))), min(1.0, 1.0)), mix(float(_GLF_FUZZED(-69.38)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY((1.0), 1.0 * ((1.0)))))) * (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3387.2077) : 1.0)))), min(1.0, 1.0))), bool(true))))), true), _GLF_struct_2(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))), mat3x2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), true))), true))), true, false))), _GLF_struct_6(1u, mat2x3(1.0), _GLF_struct_4(_GLF_IDENTITY(1u, (1u) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (0u)))), 1, mat3x2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), true), _GLF_struct_5(ivec3(1), mat2x3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5663.8752) : 1.0)), 1.0))))));
 uint workgroup_base = _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.y, clamp(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.y, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.y, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.y)) * _GLF_struct_replacement_7.workgroup_id;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-608.506)))))) >> 0)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false))))), (injectionSwitch.x > injectionSwitch.y))))
    continue;
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        continue;
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
  return;
 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y = workgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
  return;
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), clamp(subgroup_id, subgroup_id, subgroup_id)) * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, _GLF_IDENTITY(uvec2(uvec3(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, uvec2(0u, 0u) ^ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)), 1u)), ~ (~ (uvec2(uvec3(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, uvec2(0u, 0u) ^ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)), 1u)))))).x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-75.34) : injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) / 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(bvec2(true), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, _GLF_IDENTITY((1u ^ 1u), ~ (~ _GLF_IDENTITY(((1u ^ 1u)), (true ? _GLF_IDENTITY(((1u ^ 1u)), 0u ^ (((1u ^ 1u)))) : _GLF_FUZZED(subgroup_local_id))))) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, uvec2(0u, 0u) ^ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)), min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base) / uvec2(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, _GLF_IDENTITY(uvec2(uvec3(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, uvec2(0u, 0u) ^ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)), (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), _GLF_IDENTITY(~ (~ (uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))), uint(1u))))))), (~ (~ (uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))))) ^ uvec2(0u, 0u)))))), uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, 0u))).y)), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, _GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))), (~ (~ (_GLF_IDENTITY(1u, min(1u, 1u))))) >> 0u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, (1u) | (1u))))) ^ 1u)), (_GLF_IDENTITY(~ ((1u ^ 1u)), (~ ((1u ^ 1u))) ^ 0u)) | 0u), (~ ((1u ^ 1u))) << _GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(~ ((1u ^ 1u)), (~ ((1u ^ 1u))) << 0u)) ^ 0u))) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y))) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, (1u ^ 1u) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, _GLF_IDENTITY((1u ^ 1u), (false ? _GLF_FUZZED(subgroup_size) : (1u ^ 1u))) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, (1u ^ 1u) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y))) - 0u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, _GLF_IDENTITY((1u ^ 1u) + (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base) / uvec2(1u, 1u)), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, _GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), ~ (~ (uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (0u << _GLF_IDENTITY(uint(1u), uint(1u))))))))))), uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, 0u))).y), max(_GLF_IDENTITY((1u ^ 1u) + (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base) / uvec2(_GLF_IDENTITY(1u, 0u + (1u)), 1u)), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, _GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), ~ (~ (uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (0u << _GLF_IDENTITY(uint(1u), uint(1u))))))))))), uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, 0u))).y), ((1u ^ 1u) + (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base) / uvec2(1u, 1u)), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, _GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), ~ (~ (uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (0u << _GLF_IDENTITY(uint(1u), uint(1u))))))))))), uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, 0u))).y)) << 0u), (1u ^ 1u) + (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base) / uvec2(1u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u + (~ (1u))))))), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, _GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), ~ (_GLF_IDENTITY(~ (uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))), (~ (uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (0u << _GLF_IDENTITY(uint(1u), uint(1u))))))) | (~ (uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (0u << _GLF_IDENTITY(uint(1u), uint(1u))))))))))))), uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, 0u))).y)))), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, _GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((1u ^ 1u), clamp((_GLF_IDENTITY(1u, (1u) | 0u) ^ 1u), (1u ^ 1u), (1u ^ 1u)))), (~ (_GLF_IDENTITY((1u ^ 1u), uint(uvec4((1u ^ 1u), (0u << _GLF_IDENTITY(uint(1u), uint(1u))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), max(uint(5u), uint(_GLF_IDENTITY(5u, (5u) ^ ((0u ^ 0u) >> _GLF_IDENTITY(uint(6u), uint(6u))))))))), 0u))))) << 0u), _GLF_IDENTITY((_GLF_IDENTITY(~ ((1u ^ 1u)), (_GLF_IDENTITY(~ ((1u ^ 1u)), (_GLF_IDENTITY(~ ((1u ^ 1u)), (~ ((1u ^ 1u))) >> 0u)) | 0u)) << 0u)) ^ 0u, (_GLF_IDENTITY((_GLF_IDENTITY(~ ((1u ^ 1u)), (~ ((1u ^ 1u))) << 0u)) ^ 0u, ((_GLF_IDENTITY(~ ((1u ^ 1u)), (~ ((1u ^ 1u))) << 0u)) ^ 0u) | 0u)) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (0u | (0u << _GLF_IDENTITY(uint(6u), uint(6u)))) + (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u ^ (uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y))) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, (1u ^ 1u) + _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y), uint(uvec2(_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y), ((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)) | ((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y))), 1u)))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, _GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(117334u)), ~ (~ ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(117334u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(117334u)) | (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(117334u)))))))) ^ 1u), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : (1u ^ 1u)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : (1u ^ 1u)), 0u ^ ((_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(subgroup_size) : (1u ^ 1u)))), 1u)), max(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : (1u ^ _GLF_IDENTITY(1u, (1u) / 1u))), 0u ^ ((false ? _GLF_FUZZED(subgroup_size) : (1u ^ 1u)))), 1u)), clamp(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : (1u ^ 1u), (false ? _GLF_FUZZED(subgroup_size) : (1u ^ 1u)) | (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : (1u ^ 1u), (false ? _GLF_FUZZED(subgroup_size) : (1u ^ 1u)) | (false ? _GLF_FUZZED(subgroup_size) : (1u ^ 1u)))))), 0u ^ ((false ? _GLF_FUZZED(subgroup_size) : (1u ^ 1u)))), 1u), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : (1u ^ 1u), (false ? _GLF_FUZZED(subgroup_size) : (1u ^ 1u)) | (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : (1u ^ 1u), (false ? _GLF_FUZZED(subgroup_size) : (1u ^ 1u)) | (false ? _GLF_FUZZED(subgroup_size) : (1u ^ 1u)))))), 0u ^ ((false ? _GLF_FUZZED(subgroup_size) : (1u ^ 1u)))), 1u)) * uvec2(1u, 1u))), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))) || false) ? _GLF_FUZZED(subgroup_size) : (1u ^ 1u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 0u ^ (~ (0u)))))) >> 0u) ^ ((false ? _GLF_FUZZED(subgroup_size) : (1u ^ 1u)))), 1u)), uint(uvec2(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : (1u ^ 1u)), 0u ^ ((false ? _GLF_FUZZED(subgroup_size) : (1u ^ 1u)))), 1u)))), uint(uvec2(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(1u ^ _GLF_IDENTITY(1u, ~ (~ (1u))), clamp(1u ^ 1u, _GLF_IDENTITY(1u ^ 1u, min(1u ^ 1u, _GLF_IDENTITY(1u ^ 1u, 0u ^ (1u ^ 1u)))), 1u ^ 1u)))), 0u ^ ((false ? _GLF_FUZZED(subgroup_size) : (1u ^ 1u)))), 1u)))))) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, (1u ^ 1u) + _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y), ((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)) | (_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y), ((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base) - uvec2(0u, 0u)).y)) ^ 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, (1u ^ 1u) + _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y), ((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)) | (_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y), ((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)) ^ 0u))), (_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y), ((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)) | (_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y), (_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y), ((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)) << 0u)) ^ 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y), clamp(_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y), uint(uvec4((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y), 0u, 1u, 1u))), (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y), (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y))), ((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)) | (_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y), ((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)) ^ 0u))))))), max((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, (1u ^ 1u) + _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y), ((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)) | (_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y), (_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y), max((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y) / 1u))))) ^ 0u))))), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, (1u ^ 1u) + _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y), ((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)) | (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, uint(uvec2(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, ~ (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y))), GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)), 1u)))), ((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)) ^ 0u))), (_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y), ((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (false ? _GLF_FUZZED(_GLF_IDENTITY((subgroup_local_id * uvec2(172043u, 114371u)), ~ (~ ((subgroup_local_id * uvec2(172043u, 114371u)))))) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)).y, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)), 1u), clamp(uvec2(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)), 1u), uvec2(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)), 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)), 1u), (uvec2(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)), 1u)) / uvec2(1u, 1u))))))), ((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)) ^ 0u)))) * 1u)))))) >> (0u & 81072u)) - 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, (1u ^ 1u) + (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base) / uvec2(1u, 1u)), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, _GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), ~ (~ (uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (0u << _GLF_IDENTITY(uint(1u), uint(1u))))))))))), uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, 0u))).y)), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, (1u ^ 1u) + (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base) / uvec2(1u, 1u)), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, _GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ 0u)))), ~ (~ (_GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), 1u * (_GLF_IDENTITY(uint(1u), uint(1u))))))), (_GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), 1u * (_GLF_IDENTITY(uint(1u), uint(1u))))))), (uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), 1u * (_GLF_IDENTITY(uint(1u), uint(1u)))))))) >> uvec2(0u, 0u))) / uvec2(1u, 1u)))))))), uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, 0u))).y))), 0u ^ ((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, (1u ^ 1u) + (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base) / uvec2(1u, 1u)), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, _GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ 0u)))), ~ (~ (uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), 1u * (_GLF_IDENTITY(uint(1u), uint(1u))))))))))))), uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, 0u))).y))))) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, uvec2(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base[0], GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base[1])).y, _GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, min(1u, 1u))), (~ (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)))) | 0u)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(((1u ^ 1u)), clamp(((1u ^ 1u)), ((1u ^ 1u)), ((1u ^ 1u)))), min(~ _GLF_IDENTITY(((1u ^ 1u)), clamp(((1u ^ 1u)), ((1u ^ 1u)), ((1u ^ 1u)))), ~ _GLF_IDENTITY(((1u ^ 1u)), clamp(((1u ^ 1u)), ((1u ^ 1u)), ((1u ^ 1u)))))), (~ ((1u ^ 1u))) << _GLF_IDENTITY(0u, (0u) >> 0u)), _GLF_IDENTITY((_GLF_IDENTITY(~ ((1u ^ 1u)), _GLF_IDENTITY(_GLF_IDENTITY((~ ((1u ^ _GLF_IDENTITY(1u, (1u) >> 0u)))), clamp((~ ((1u ^ _GLF_IDENTITY(1u, (1u) >> 0u)))), (~ ((1u ^ _GLF_IDENTITY(1u, (1u) >> 0u)))), _GLF_IDENTITY((~ ((1u ^ _GLF_IDENTITY(1u, (1u) >> 0u)))), ((~ ((1u ^ _GLF_IDENTITY(1u, (1u) >> 0u))))) - 0u))), 0u | (_GLF_IDENTITY((~ ((1u ^ _GLF_IDENTITY(1u, (1u) >> 0u)))), clamp((~ ((1u ^ _GLF_IDENTITY(1u, (1u) >> _GLF_IDENTITY(0u, (0u) / 1u))))), (~ ((1u ^ _GLF_IDENTITY(1u, (1u) >> 0u)))), _GLF_IDENTITY((~ ((1u ^ _GLF_IDENTITY(1u, (1u) >> 0u)))), ((~ ((1u ^ _GLF_IDENTITY(1u, (1u) >> 0u))))) - 0u))))) << 0u)) ^ 0u, 1u * (_GLF_IDENTITY((_GLF_IDENTITY(~ ((1u ^ 1u)), (~ ((1u ^ 1u))) << 0u)) ^ 0u, max((_GLF_IDENTITY(~ ((_GLF_IDENTITY(1u, max(1u, 1u)) ^ 1u)), (~ ((1u ^ 1u))) << 0u)) ^ 0u, (_GLF_IDENTITY(~ ((1u ^ 1u)), (~ ((1u ^ 1u))) << 0u)) ^ 0u)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ ((1u ^ 1u)), (~ ((1u ^ 1u))) << 0u), _GLF_IDENTITY((_GLF_IDENTITY(~ ((1u ^ 1u)), (~ ((1u ^ 1u))) << 0u)) ^ 0u, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ ((1u ^ 1u)), (~ ((1u ^ 1u))) << 0u)), (false ? _GLF_FUZZED((subgroup_local_id & subgroup_size)) : (_GLF_IDENTITY(~ ((1u ^ 1u)), (~ ((1u ^ 1u))) << 0u)))) ^ 0u, max((_GLF_IDENTITY(~ ((1u ^ 1u)), (~ ((1u ^ 1u))) << 0u)) ^ 0u, (_GLF_IDENTITY(~ ((1u ^ 1u)), (~ ((1u ^ 1u))) << _GLF_IDENTITY(0u, (0u) | 0u))) ^ 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ ((1u ^ 1u)), (~ ((1u ^ 1u))) << 0u)), (false ? _GLF_FUZZED((subgroup_local_id & subgroup_size)) : (_GLF_IDENTITY(~ ((1u ^ 1u)), (~ ((1u ^ 1u))) << 0u)))) ^ 0u, max((_GLF_IDENTITY(~ ((1u ^ 1u)), (~ ((1u ^ 1u))) << 0u)) ^ 0u, (_GLF_IDENTITY(~ ((1u ^ 1u)), (~ ((1u ^ 1u))) << _GLF_IDENTITY(0u, (0u) | 0u))) ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ ((1u ^ 1u)), (~ ((1u ^ 1u))) << 0u)), (false ? _GLF_FUZZED((subgroup_local_id & subgroup_size)) : (_GLF_IDENTITY(~ ((1u ^ 1u)), (~ ((1u ^ 1u))) << 0u)))) ^ 0u, max((_GLF_IDENTITY(~ ((1u ^ 1u)), (~ ((1u ^ 1u))) << 0u)) ^ 0u, (_GLF_IDENTITY(~ ((1u ^ 1u)), (~ ((1u ^ 1u))) << _GLF_IDENTITY(0u, (0u) | 0u))) ^ 0u))))))))) ^ 0u)) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y))) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, (1u ^ 1u) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, _GLF_IDENTITY((1u ^ 1u), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | 0u))) ^ 1u))) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)), min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, _GLF_IDENTITY((1u ^ 1u), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(141919u) : (1u)))) | 0u))) ^ _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, _GLF_IDENTITY(_GLF_IDENTITY((1u ^ 1u), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | 0u))) ^ 1u))), (false ? _GLF_FUZZED(146380u) : _GLF_IDENTITY((1u ^ 1u), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | 0u))) ^ 1u))))) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, max(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), ((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) - uvec2(0u, _GLF_IDENTITY(0u, min(0u, 0u)))) / uvec2(1u, 1u)))).y, (1u ^ 1u) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y))) - 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, (1u ^ 1u) + (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base) / uvec2(1u, 1u)), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, _GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), ~ (~ (uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (0u << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, (1u) + 0u))))))))))))))))), uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, 0u))).y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, _GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((1u ^ 1u)), _GLF_IDENTITY(_GLF_IDENTITY((~ ((1u ^ 1u))), ((~ ((1u ^ 1u)))) | ((~ ((1u ^ 1u))))), max((~ ((1u ^ _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(90624u))))))))), (~ ((1u ^ 1u))))) << 0u), _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), (~ ((1u ^ 1u))) << 0u)), 0u ^ ((_GLF_IDENTITY(~ ((_GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), (~ ((1u ^ 1u))) << 0u)))) ^ 0u))) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y))), ((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, _GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))), max(~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))), ~ (~ (~ (~ (_GLF_IDENTITY(1u, min(1u, 1u))))))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((1u ^ 1u)), _GLF_IDENTITY((~ ((_GLF_IDENTITY(1u ^ 1u, min(1u ^ 1u, _GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) / 1u)))))), max((~ ((1u ^ 1u))), (~ ((1u ^ 1u))))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), (~ ((1u ^ 1u))) << 0u), uint(uvec2(_GLF_IDENTITY(~ ((_GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), (~ ((1u ^ 1u))) << 0u), (1u ^ 0u))))) ^ 0u))) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)))) / ((0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), max((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (_GLF_IDENTITY(true, true && (true)) ? (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base) : _GLF_FUZZED(uvec2(119396u, 100569u)))))) - uvec2(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | (0u)) : _GLF_FUZZED(workgroup_size))))))).y, (1u ^ 1u) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, _GLF_IDENTITY(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), _GLF_IDENTITY(uint(uvec4(_GLF_FUZZED(subgroup_size), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u | 0u))), ~ (~ (uint(uvec4(_GLF_FUZZED(subgroup_size), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u | 0u))))))) : (1u ^ 1u))), (_GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), _GLF_IDENTITY(uint(uvec4(_GLF_FUZZED(subgroup_size), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u | 0u))), ~ (~ (uint(uvec4(_GLF_FUZZED(subgroup_size), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u | 0u))))))) : (1u ^ 1u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, (1u ^ 1u) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, (1u ^ 1u) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y))) / 1u)) - 0u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, _GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(((_GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) ^ 0u))), 0u ^ (_GLF_IDENTITY(((_GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) ^ 0u))), 0u + (((_GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) ^ 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY((~ ((1u ^ 1u))), max((~ ((1u ^ 1u))), (~ ((1u ^ 1u))))), (_GLF_IDENTITY((~ ((1u ^ 1u))), max((~ ((1u ^ 1u))), (~ ((1u ^ 1u)))))) * 1u) << 0u), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), (~ ((1u ^ 1u))) << 0u)) ^ 0u))) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y))), ((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, _GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u)))) - (185787u & 0u)) ^ 1u)), _GLF_IDENTITY((~ ((1u ^ 1u))), max((~ ((1u ^ 1u))), (~ ((1u ^ 1u))))) << 0u), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), (~ ((1u ^ 1u))) << 0u)) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(uvec4(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), uint(uvec4(uint(uvec4(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), 1u, 0u, 1u))), 0u)), (uint(uvec2(_GLF_IDENTITY(uint(uvec4(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), uint(uvec4(uint(uvec4(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), 1u, 0u, 1u))), 0u))) | (uint(uvec2(_GLF_IDENTITY(uint(uvec4(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), uint(uvec4(uint(uvec4(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), 1u, 0u, 1u))), 0u))))))))) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)))) / ((0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), max((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (true ? (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base) : _GLF_FUZZED(uvec2(119396u, 100569u)))))) - uvec2(0u, 0u)).y, (1u ^ 1u) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, _GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), _GLF_IDENTITY(uint(uvec4(_GLF_FUZZED(subgroup_size), 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x)), (0u | 0u))), ~ (~ (uint(uvec4(_GLF_FUZZED(subgroup_size), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u | 0u))))))) : (1u ^ 1u))) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, (1u ^ 1u) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y))) - 0u, max((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, (1u ^ 1u) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y))) - 0u, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, (1u ^ 1u) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y))) - 0u))))))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, _GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((1u ^ 1u)), _GLF_IDENTITY((~ ((1u ^ 1u))), max((~ ((1u ^ 1u))), (~ ((1u ^ 1u))))) << 0u), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), (~ ((1u ^ 1u))) << 0u)) ^ 0u))) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y))), ((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, _GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((1u ^ 1u)), _GLF_IDENTITY((~ ((1u ^ 1u))), max((_GLF_IDENTITY(~ ((1u ^ 1u)), 0u + (_GLF_IDENTITY(~ ((1u ^ 1u)), (~ ((1u ^ 1u))) - 0u)))), (~ ((1u ^ 1u))))) << 0u), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), (~ ((1u ^ 1u))) << 0u)) ^ _GLF_IDENTITY(0u, (0u) | (0u))))) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)))) / ((0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), max((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (true ? (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base) : _GLF_FUZZED(uvec2(119396u, 100569u)))))) - uvec2(0u, 0u)).y, (_GLF_IDENTITY(1u ^ 1u, ~ (~ (_GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) + 0u))))) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, _GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), _GLF_IDENTITY(uint(uvec4(_GLF_FUZZED(subgroup_size), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u | 0u))), ~ (~ (uint(uvec4(_GLF_FUZZED(subgroup_size), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u | 0u))))))) : (1u ^ 1u))) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, (1u ^ 1u) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y))) - 0u))))), ~ (~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, _GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((1u ^ 1u)), _GLF_IDENTITY((~ ((1u ^ 1u))), max((~ ((1u ^ 1u))), (~ ((1u ^ 1u))))) << 0u), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), (~ ((1u ^ 1u))) << 0u)) ^ 0u))) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y))), ((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, _GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((1u ^ 1u)), _GLF_IDENTITY((~ _GLF_IDENTITY(((1u ^ 1u)), max(_GLF_IDENTITY(((1u ^ 1u)), max(((1u ^ 1u)), ((1u ^ 1u)))), _GLF_IDENTITY(((1u ^ 1u)), (((1u ^ 1u))) ^ 0u)))), max((~ ((1u ^ 1u))), (~ ((1u ^ 1u))))) << 0u), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(1u ^ 1u, min(_GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) | (1u ^ 1u)), 1u ^ 1u)), (1u ^ 1u) / uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(4.5))), _GLF_ONE(1.0, injectionSwitch.y))))))), (~ ((1u ^ 1u))) << 0u)) ^ 0u))) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)))) / ((0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), max((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (true ? (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base) : _GLF_FUZZED(uvec2(119396u, 100569u)))))) - uvec2(0u, 0u)).y, (1u ^ 1u) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, _GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), _GLF_IDENTITY(uint(uvec4(_GLF_FUZZED(subgroup_size), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u | 0u))), ~ (~ (uint(uvec4(_GLF_FUZZED(subgroup_size), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u | 0u))))))) : (1u ^ 1u))) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, (1u ^ 1u) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y))) - 0u)))))))), ~ (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, _GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((1u ^ 1u)), _GLF_IDENTITY((_GLF_IDENTITY(~ ((1u ^ 1u)), (false ? _GLF_FUZZED(subgroup_base) : ~ ((1u ^ 1u))))), max((~ ((1u ^ 1u))), (~ ((1u ^ 1u))))) << 0u), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), (~ ((1u ^ 1u))) << 0u)) ^ 0u))) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y))), ((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, _GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((1u ^ 1u)), _GLF_IDENTITY((~ ((1u ^ 1u))), max((~ _GLF_IDENTITY(((1u ^ 1u)), max(((1u ^ 1u)), ((1u ^ 1u))))), (~ ((1u ^ 1u))))) << 0u), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-431.390) : injectionSwitch.y)), injectionSwitch.y))))))), (~ ((1u ^ _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))))) << 0u)) ^ 0u))) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)))) / ((0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), max((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (true ? (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base) : _GLF_FUZZED(uvec2(119396u, 100569u)))))) - uvec2(0u, 0u)).y, (1u ^ 1u) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, _GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), _GLF_IDENTITY(uint(uvec4(_GLF_FUZZED(subgroup_size), 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u), (uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u)) - uvec4(0u, 0u, 0u, 0u))), uint(uvec3(uint(_GLF_IDENTITY(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u), (uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u)) - uvec4(0u, 0u, 0u, 0u))), 1u, 0u)))), (0u | 0u))), ~ (~ (uint(uvec4(_GLF_FUZZED(subgroup_size), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u | 0u))))))) : (1u ^ 1u))) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, (1u ^ 1u) + (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y))) - 0u)))))))))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), _GLF_IDENTITY((subgroup_base) / 1u, ((subgroup_base) / 1u) ^ 0u)) + GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x);
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) - 0))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, ~ (~ (5)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(int(int(5)))), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
          {
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           continue;
          }
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(false))
        break;
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((- -5.5))), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(14.27)), bool(false)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + subgroup_base, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + subgroup_base, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + subgroup_base) - 0u)) | (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + subgroup_base, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + subgroup_base, uint(uvec4(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + subgroup_base, 1u, 1u, 1u)))) | 0u))) + _GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), max(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(int(2.6)))), min(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, min(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1)), min(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ ((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, min(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, 1u * (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, uint(uint(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x))))) + 1)))), ((0u >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ ((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, min(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, 1u * (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, uint(uint(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x))))) + 1))))) ^ (1u ^ 1u)))), 0u ^ (~ (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + _GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(min(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), (false ? _GLF_FUZZED(subgroup_base) : min(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))))), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, clamp(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1) | 0u), _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, clamp(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1)))), min(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1) << 0u)))), GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1)))))))))), _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), max(_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), ((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1)) | 0u), (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))), (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), max(_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), ((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1)) | 0u), (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))), 0u ^ (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), max(_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), ((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1)) | 0u), (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + _GLF_IDENTITY(1, (1) >> 0))))))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(8u), uint(8u)))))) % GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, 0u | (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))), max((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, 0u | (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))), (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, 0u | (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))))), max((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, min(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, 1u * (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1)), 1u * (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, 1u * (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))))), max((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))))) % GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x), ((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), max((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, min(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, max(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1)))), min(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))), _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), max((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, uvec2(0u, 0u) | (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size) / uvec2(1u, 1u)))).x + 1), (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))))) % GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x)) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, 0u | (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))), max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size) >> uvec2(0u, 0u)).x, 0u | (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size) >> uvec2(0u, 0u)).x)) + 1, min(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, 1u * (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, max(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))) ^ 0u)))), max((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))))) % _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base) | uvec2(0u, 0u)).x), uint(uvec4((_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, 0u | (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))), max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size) >> uvec2(0u, 0u)).x, 0u | (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size) >> uvec2(0u, 0u)).x)) + 1, min(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, 1u * (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, max(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))) ^ 0u)))), max((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))))) % _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base) | uvec2(0u, 0u)).x), 0u, (0u | 0u), 1u))), ((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (1) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), max((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, min(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, (true ? _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1) / (1u & 1u))))) : _GLF_FUZZED(97849u))), GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))), _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), max((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))))) % GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x)) / 1u)) | 0u), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, 0u | (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))), _GLF_IDENTITY(max((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, min(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, 1u * (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))), max((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1)))), (max((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, min(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, 1u * (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))), max((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))))) + 0u)) % GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x), ((_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), max((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, min(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) / 1), GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))), _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), max((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, (false ? _GLF_FUZZED((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base ^ uvec2(1006u, 123634u))) : GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size))) | (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size)).x + 1))))), (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), max((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, min(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) / 1), GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))), _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), max((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, (false ? _GLF_FUZZED((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base ^ uvec2(1006u, 123634u))) : GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size))) | (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size)).x + 1)))))) >> 0u) % GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x)) / 1u), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, 0u | (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))), max((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, uvec2(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[0], _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[1], (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[1]) + 0u))).x + 1, min(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, _GLF_IDENTITY(1u * (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), 0u ^ (1u * (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))))), max((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))))) % GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x), ((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), max((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, min(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))), _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), max((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))))) % GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x)) / 1u)) | 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, 0u | (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, 0u ^ (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))))), (true ? (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, 0u | (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, 0u ^ (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))))) : _GLF_FUZZED(subgroup_base))), max((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, min(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, min(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))))), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, 1u * (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))), max((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))))) % GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x), ((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), max((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, _GLF_IDENTITY(min(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), min(min(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), min(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))))), _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), max((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))))) % GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x)) / 1u), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, 0u | (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))), max((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, _GLF_IDENTITY(min(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), max(min(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), min(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))))), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, 1u * (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))), max((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))))) % GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x), ((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), max((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, _GLF_IDENTITY(min(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), min(_GLF_IDENTITY(min(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), ~ (_GLF_IDENTITY(~ (min(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1)), _GLF_IDENTITY(0u, min(0u, 0u)) + _GLF_IDENTITY((~ (min(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1))), ((~ (min(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1)))) | ((~ (min(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1)))))))), _GLF_IDENTITY(min(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), (min(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1)) | 0u))))), _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), max((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1), (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, clamp(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x)) + 1))))) % GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x)) / 1u)) | 0u))))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec4((! ((injectionSwitch.x > injectionSwitch.y))), true, false, false))))), bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
  }
 else
  {
  }
 uint read = 0;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
        break;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 do
  {
   do
    {
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(1), _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7.2)), bool(false))), injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u, _GLF_IDENTITY(0u, 0u + (0u))), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4(uint(1), _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7.2)), bool(false))), injectionSwitch.x)), _GLF_IDENTITY(min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u * (min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), 1u, _GLF_IDENTITY(0u, 0u + (0u))), max(uvec4(uint(1), _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7.2)), bool(false))), injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u, _GLF_IDENTITY(0u, 0u + (0u))), _GLF_IDENTITY(uvec4(uint(1), _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7.2)), bool(false))), injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u, _GLF_IDENTITY(0u, 0u + (0u))), uvec4(1u, 1u, 1u, 1u) * (uvec4(uint(1), _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_IDENTITY(_GLF_FUZZED(-7.2), (_GLF_FUZZED(-7.2)) - abs(0.0))), bool(false))), injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u, _GLF_IDENTITY(0u, 0u + (0u))))))))), (_GLF_IDENTITY(uvec4(uint(1), uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.8) : 0.0)), injectionSwitch.x), (_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.8) : 0.0)), injectionSwitch.x)) + 0.0)), 1u, 0u), clamp(uvec4(uint(1), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1u, (1u) >> (113585u & 0u)), 0u), _GLF_IDENTITY(uvec4(uint(1), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x)), 1u, 0u), (uvec4(uint(1), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u, 0u))), 1u, 0u)) | (uvec4(uint(1), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> (0u | 0u)), 1u, _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0u, (0u) / 1u))), ~ (~ ((~ (_GLF_IDENTITY(0u, (0u) / 1u)))))))))), _GLF_IDENTITY(uvec4(uint(1), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec4(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size ^ GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size)), clamp(uvec4(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size ^ GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size)), uvec4(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size ^ GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size)), _GLF_IDENTITY(uvec4(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size ^ GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size)), clamp(uvec4(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size ^ _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, (true ? GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size : _GLF_FUZZED(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size))))), uvec4(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size ^ GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size)), uvec4(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size ^ GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size))))))) : _GLF_IDENTITY(uvec4(uint(1), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u), max(uvec4(uint(1), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u), uvec4(uint(1), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 0.0)))), 1u, 0u)))))))) >> (uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u))))), _GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), (true ? max(4, 4) : _GLF_FUZZED(54456)))), 64, _GLF_IDENTITY(4, _GLF_IDENTITY(max(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, 1 * (4)), 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(true, false || (true)) ? 4 : _GLF_IDENTITY(_GLF_FUZZED(-53095), (_GLF_FUZZED(-53095)) | (_GLF_FUZZED(-53095)))))), min(max(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, 1 * (4)), 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false)), (bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false))) && true))))), false || (true)) ? 4 : _GLF_FUZZED(_GLF_IDENTITY(-53095, (_GLF_IDENTITY(-53095, max(-53095, -53095))) * 1))))), _GLF_IDENTITY(max(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, 1 * (4)), 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(true, false || (true)) ? 4 : _GLF_FUZZED(-53095)))), 0 | (_GLF_IDENTITY(max(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, 1 * (4)), 4)), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(true, false || (true)) ? 4 : _GLF_FUZZED(_GLF_IDENTITY(-53095, ~ (~ (_GLF_IDENTITY(-53095, (-53095) * 1)))))), clamp((_GLF_IDENTITY(true, false || (true)) ? 4 : _GLF_FUZZED(-53095)), (_GLF_IDENTITY(true, false || (true)) ? 4 : _GLF_FUZZED(-53095)), (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)) ? 4 : _GLF_FUZZED(-53095), max(_GLF_IDENTITY(true, false || (true)) ? 4 : _GLF_FUZZED(-53095), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)) ? 4 : _GLF_FUZZED(-53095), (_GLF_IDENTITY(true, false || (true)) ? 4 : _GLF_FUZZED(-53095)) | (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)) ? 4 : _GLF_FUZZED(-53095), (true ? _GLF_IDENTITY(true, false || (true)) ? 4 : _GLF_FUZZED(-53095) : _GLF_FUZZED(55848)))))))))))), min(max(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, 1 * (4)), 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(true, false || (true)) ? 4 : _GLF_FUZZED(-53095)))), max(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, 1 * (4)), 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(true, false || (true)) ? 4 : _GLF_FUZZED(-53095))))))))))));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, true))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, true))), false, false)))));
   if(_GLF_DEAD(false))
    break;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))) || false))
  {
  }
 else
  {
   do
    {
     if(_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x % 2) == 0, ! (! ((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, uvec2(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[0], _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[1], (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[1]) | (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[1])))).x % 2) == 0))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, min(1, 1))); _injected_loop_counter ++)
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                {
                 return;
                }
               else
                {
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-628.118) : injectionSwitch.x)) > injectionSwitch.y))));
        }
       if(_GLF_DEAD(false))
        continue;
       subgroupAll(false);
       do
        {
         do
          {
           read = atomicLoad(buf[_GLF_struct_replacement_8.virtual_gid], _GLF_IDENTITY(4, (4) / 1), 64, 2);
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))))));
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
          continue;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          break;
         for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))
                continue;
               for(int _injected_loop_counter = (ivec2(46215, 34099).t & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 return;
                }
              }
            }
          }
         if(_GLF_DEAD(false))
          break;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), true && (bool(bvec3(false, true, true)))))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
                {
                 if(_GLF_DEAD(false))
                  return;
                 for(int _injected_loop_counter = (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) << 0) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   return;
                  }
                }
              }
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (_GLF_IDENTITY(! (true), true && (! (true)))))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                break;
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   do
                    {
                     return;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 if(_GLF_DEAD(false))
                  break;
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, false))))
                {
                 if(_GLF_DEAD(false))
                  break;
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       subgroupAll(false);
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        continue;
                      }
                    }
                  }
                 do
                  {
                   do
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          {
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)))) != 0); _injected_loop_counter --)
                            {
                             return;
                            }
                          }
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 continue;
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
                break;
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                    {
                     if(_GLF_DEAD(false))
                      {
                       do
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           return;
                          }
                         else
                          {
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                     return;
                    }
                   else
                    {
                    }
                  }
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   for(int _injected_loop_counter = ((0 & -466) << _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      return;
                    }
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((true)))))))))
                    {
                     return;
                    }
                   else
                    {
                    }
                  }
                }
              }
            }
          }
        }
       else
        {
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
        continue;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         read = _GLF_IDENTITY(atomicLoad(buf[_GLF_struct_replacement_8.virtual_gid], 4, 64, 2), min(atomicLoad(buf[_GLF_struct_replacement_8.virtual_gid], 4, 64, 2), _GLF_IDENTITY(atomicLoad(buf[_GLF_struct_replacement_8.virtual_gid], 4, 64, 2), (_GLF_IDENTITY(true, false || (true)) ? atomicLoad(buf[_GLF_struct_replacement_8.virtual_gid], 4, 64, 2) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(uvec2(_GLF_FUZZED(workgroup_size), (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | 0u))))))))));
        }
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = _GLF_IDENTITY(0, _GLF_IDENTITY((0), _GLF_IDENTITY(0 ^ ((0)), (0 ^ ((0))) ^ 0)) - 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY(0 | (_injected_loop_counter ++), _GLF_IDENTITY((_GLF_IDENTITY(0 | (_injected_loop_counter ++), 1 * (0 | (_injected_loop_counter ++)))) << 0, ((_GLF_IDENTITY(0 | (_injected_loop_counter ++), 1 * (0 | (_injected_loop_counter ++)))) << 0) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec3(bool(false), false, false), bvec3(bvec4(bvec3(bool(false), _GLF_IDENTITY(false, bool(bool(false))), false), false)))))))))), (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
           continue;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         do
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (false) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (false) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), false))) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (false) && true), false))) && true), bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))) || false), _GLF_IDENTITY((false) && true, false || ((false) && true))), false))) && true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8.7) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)) > injectionSwitch.y))))), true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (false) && true), false))) && true), bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))) || false), _GLF_IDENTITY((false) && true, false || ((false) && true))), false))) && true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8.7) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)) > injectionSwitch.y))))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (false) && true), false))) && true), bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))) || false), _GLF_IDENTITY((false) && true, false || ((false) && true))), false))) && true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8.7) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)) > injectionSwitch.y))))), true, false)))))) || false))), (injectionSwitch.x > injectionSwitch.y))))
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           else
            {
            }
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)))), true)))))))))
                break;
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 for(int _injected_loop_counter = (-62851 & int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, ~ (_GLF_IDENTITY(~ (_injected_loop_counter ++), (~ (_injected_loop_counter ++)) ^ 0))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     return;
                    }
                  }
                }
              }
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false || (! (false)), true && (_GLF_IDENTITY(false || (! (false)), bool(bvec4(false || (! (false)), false, false, false))))))), false || (_GLF_IDENTITY(! (! (false)), (! (! _GLF_IDENTITY((false), ((false)) && true))) && true))))), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || (! (false)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), (! (! _GLF_IDENTITY((false), ((false)) && true))) && true))))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || (! (false)))), false || (_GLF_IDENTITY(! (! (false)), (! (! _GLF_IDENTITY((false), ((false)) && true))) && true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)));
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       do
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(false ? _GLF_FUZZED(-48957) : _injected_loop_counter, (false ? _GLF_FUZZED(-48957) : _injected_loop_counter) | _GLF_IDENTITY((false ? _GLF_FUZZED(-48957) : _injected_loop_counter), int(ivec4(_GLF_IDENTITY((false ? _GLF_FUZZED(-48957) : _injected_loop_counter), (_GLF_IDENTITY((false ? _GLF_FUZZED(-48957) : _injected_loop_counter), clamp((false ? _GLF_FUZZED(-48957) : _injected_loop_counter), (false ? _GLF_FUZZED(-48957) : _injected_loop_counter), (false ? _GLF_FUZZED(-48957) : _injected_loop_counter)))) ^ 0), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))))) / 1) != 1); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             else
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1))))); _injected_loop_counter ++)
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      {
                       do
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            continue;
                           do
                            {
                             return;
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                        }
                       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! ((! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (! ((! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(! ((! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (! ((! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false))))))))));
                       if(_GLF_DEAD(false))
                        break;
                       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                        continue;
                       return;
                       if(_GLF_DEAD(false))
                        break;
                      }
                    }
                  }
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))
                  continue;
                 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) ^ 0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(_injected_loop_counter) : int(0))), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(_injected_loop_counter) : int(0)))))); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                    return;
                  }
                }
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
         if(_GLF_DEAD(false))
          break;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bool(_GLF_WRAPPED_IF_TRUE(true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
        {
         for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = ((_GLF_IDENTITY(1, 0 ^ (1)) << _GLF_IDENTITY(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), min(int(0), int(0)))) / 1), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (0 & 97658) + (int(0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                }
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 1.0))))) < injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   subgroupBarrier();
                  }
                 if(_GLF_DEAD(false))
                  return;
                }
               else
                {
                }
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                break;
              }
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) / 1), 0)) << _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            return;
          }
         for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), min(~ (int(2)), _GLF_IDENTITY(~ (int(2)), _GLF_IDENTITY(~ (~ (~ (int(2)))), (~ (~ (_GLF_IDENTITY(~ (int(2)), max(_GLF_IDENTITY(~ (int(2)), (~ (int(2))) ^ 0), ~ (int(2))))))) / 1)))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), _GLF_IDENTITY(min(~ (int(2)), _GLF_IDENTITY(~ _GLF_IDENTITY((int(2)), (true ? (int(2)) : _GLF_FUZZED(32277))), (0 | 0) | (~ _GLF_IDENTITY((int(2)), (true ? (int(2)) : _GLF_FUZZED(32277)))))), clamp(_GLF_IDENTITY(min(~ (int(2)), ~ (int(2))), (_GLF_IDENTITY(min(~ (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) >> 0)) / 1)), ~ (int(2))), (min(_GLF_IDENTITY(~ (int(2)), max(~ (int(2)), _GLF_IDENTITY(~ (int(2)), ~ (~ (~ (int(2))))))), ~ (int(2)))) ^ 0)) | (min(~ (int(2)), ~ (int(2))))), min(~ (int(2)), ~ (int(2))), min(~ (int(2)), ~ (int(2)))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), _GLF_IDENTITY(min(~ (int(2)), ~ (int(2))), clamp(_GLF_IDENTITY(min(~ (int(2)), ~ (int(2))), (_GLF_IDENTITY(min(~ (int(2)), ~ (int(2))), (min(~ (int(2)), ~ (int(2)))) ^ 0)) | (min(~ (int(2)), ~ (int(2))))), min(~ (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(int(2), int(ivec2(int(2), 1))), 0)), (int(ivec2(_GLF_IDENTITY(int(2), int(ivec2(int(2), 1))), 0))) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (int(2))), min(~ (int(2)), ~ (int(2)))))))), (_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), _GLF_IDENTITY(min(~ (int(2)), ~ _GLF_IDENTITY((_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(ivec2(int(2), 1)), (int(ivec2(int(2), 1))) >> 0))), 0 + ((_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(ivec2(int(2), 1)), (int(ivec2(int(2), 1))) >> 0)))))), clamp(_GLF_IDENTITY(min(~ (int(2)), ~ (int(2))), _GLF_IDENTITY((_GLF_IDENTITY(min(~ (int(2)), ~ (int(2))), (min(~ (int(2)), ~ (int(2)))) ^ 0)) | (min(~ (int(2)), ~ (int(2)))), clamp((_GLF_IDENTITY(min(~ (int(2)), ~ (int(2))), (min(~ (int(2)), ~ (int(2)))) ^ 0)) | (min(~ (int(2)), ~ (int(2)))), (_GLF_IDENTITY(min(~ (int(2)), ~ (int(2))), (min(~ (int(2)), ~ (int(2)))) ^ 0)) | (min(~ (int(2)), ~ (int(2)))), _GLF_IDENTITY((_GLF_IDENTITY(min(~ (int(2)), ~ (int(2))), (min(~ (int(2)), ~ (int(2)))) ^ 0)) | (min(~ (int(2)), ~ (int(2)))), 0 ^ ((_GLF_IDENTITY(min(~ (int(2)), ~ (int(2))), (min(~ (int(2)), ~ (int(2)))) ^ 0)) | (min(~ (int(2)), ~ (int(2))))))))), min(~ (int(2)), ~ (int(2))), min(~ (int(2)), ~ (int(2))))))))) ^ 0), _GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), _GLF_IDENTITY(min(~ (int(2)), ~ (int(2))), clamp(_GLF_IDENTITY(min(~ (int(2)), ~ (int(2))), (_GLF_IDENTITY(min(~ (int(2)), ~ (int(2))), (min(~ (int(2)), ~ (int(2)))) ^ 0)) | (min(~ (int(2)), ~ (int(2))))), min(~ (int(2)), ~ (int(2))), min(~ (_GLF_IDENTITY(int(2), clamp(_GLF_IDENTITY(int(2), 0 | (int(2))), int(2), int(2)))), ~ (int(2)))))))), _GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(2), clamp(int(2), int(2), _GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(-29601)))))), _GLF_IDENTITY(min(~ (int(2)), ~ (int(2))), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(~ (int(2)), min(_GLF_IDENTITY(~ (int(2)), (~ (int(2))) + int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(~ (int(2)), int(ivec4(~ (int(2)), 0, 0, 1))))), ~ (int(2))), (_GLF_IDENTITY(min(~ (int(2)), ~ (int(2))), (min(~ (int(2)), ~ (int(2)))) ^ 0)) | (min(_GLF_IDENTITY(~ (int(2)), min(_GLF_IDENTITY(~ (int(2)), 0 | (_GLF_IDENTITY(~ (int(2)), (~ (int(2))) | 0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (int(2)), ~ (_GLF_IDENTITY(~ (~ (int(2))), max(~ (~ (int(2))), ~ (~ (int(2))))))), (_GLF_IDENTITY(~ (int(2)), ~ (_GLF_IDENTITY(~ (~ (int(2))), max(~ (~ (int(2))), ~ (~ (int(2)))))))) | 0))), _GLF_IDENTITY(~ (int(2)), clamp(~ (int(2)), ~ (int(2)), ~ (int(2))))))), min(~ (int(2)), ~ (int(2))), min(~ _GLF_IDENTITY((int(2)), (_GLF_IDENTITY((int(2)), max((int(2)), (int(2))))) | ((int(2)))), ~ (int(2)))))))))))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != ((((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) >> 0))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), int(2))) + 0)), (_GLF_IDENTITY(_injected_loop_counter != ((((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) >> 0))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), int(2))) + 0)), bool(bvec4(_injected_loop_counter != ((((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) >> 0))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), int(2))) + 0)), false, false, false)))) || false)), (_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(_GLF_IDENTITY(6, (6) | (6)), (6) ^ 0))), max(1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(_GLF_IDENTITY(6, (6) | (6)), (6) ^ 0))), 1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(_GLF_IDENTITY(6, (6) | (6)), (6) ^ 0)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) | 0)), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(0, clamp(0, 0, 0)) + (int(6)))) | (int(6))), _GLF_IDENTITY(int(6), (int(6)) >> 0))), int(int(_GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(_GLF_IDENTITY(6, (6) | (_GLF_IDENTITY(6, ~ (~ (_GLF_IDENTITY(6, (6) | (6))))))), (6) ^ 0)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED(_injected_loop_counter)))), 0 + (int(6)))) | (int(6))), _GLF_IDENTITY(int(6), (int(6)) >> 0)), ((1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(6, (6) | _GLF_IDENTITY((6), 0 | ((6)))), max(_GLF_IDENTITY(6, (6) | (6)), _GLF_IDENTITY(6, (6) | (6)))), (6) ^ 0)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), 0 + (int(6)))) | (int(6))), _GLF_IDENTITY(int(6), (int(6)) >> 0))) | ((1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(_GLF_IDENTITY(6, _GLF_IDENTITY((6), (_GLF_IDENTITY((6), 1 * ((6)))) * (1 | 1)) | (6)), (_GLF_IDENTITY(6, 0 | (_GLF_IDENTITY(6, 0 ^ (_GLF_IDENTITY(6, 0 + (6))))))) ^ 0)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), 0 + (int(6)))) | (int(6))), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, (6) >> 0), 6))) - 0)), (int(6)) >> 0))))), min(((_GLF_IDENTITY(1, (1) | (1)) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(_GLF_IDENTITY(6, (6) | (6)), (6) ^ 0)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), 0 + (int(6)))) | (int(6))), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - 0), ~ (~ (_GLF_IDENTITY(int(6), (int(6)) - 0))))) >> 0))), ((1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(6, 1 * (6)), (6) | (6)), (6) ^ 0)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), 0 + (int(6)))) | (int(6))), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), clamp(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))), int(6)))) >> 0)))))))) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(_GLF_IDENTITY(floatBitsToInt(-719.084), ~ (~ (_GLF_IDENTITY(floatBitsToInt(-719.084), (_GLF_IDENTITY(floatBitsToInt(-719.084), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(floatBitsToInt(-719.084), ~ (~ (floatBitsToInt(-719.084))))), int(ivec2((_GLF_IDENTITY(floatBitsToInt(-719.084), ~ (~ (floatBitsToInt(-719.084))))), 1)))))) << 0))))) : 2))), _GLF_IDENTITY(int(2), 0 ^ (int(2))))) >> _GLF_IDENTITY(int(2), int(2))))) || _GLF_IDENTITY(false, (false) && true)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.4) : injectionSwitch.x)) > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               do
                {
                 do
                  {
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0, log(1.0), sin(0.0)))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, determinant(mat2(1.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-738.949) : injectionSwitch.y)))))))) || (false))));
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))))));
              }
             else
              {
              }
            }
           for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)), bool(bool(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))))))))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
               break;
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
              break;
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) - 0)), ~ (~ (int(0)))))), max((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), ~ (~ (int(0)))))), (1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), ~ (~ (int(0)))))))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false)))))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))
                    {
                     return;
                    }
                   else
                    {
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
              }
            }
           if(_GLF_DEAD(false))
            continue;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + sqrt(0.0)), 1.0))), vec3(0.0, 1.0, 0.0))), log(1.0), 0.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))) / _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
          return;
         return;
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = ((0 | 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (_GLF_IDENTITY(false ? _GLF_FUZZED(76259) : int(_GLF_IDENTITY(8, (8) | (8))), min(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(76259) : int(8), false ? _GLF_FUZZED(76259) : int(8)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(76259) : int(8)), 0 + ((false ? _GLF_IDENTITY(_GLF_FUZZED(76259), 0 | (_GLF_FUZZED(76259))) : int(8)))), ((false ? _GLF_FUZZED(76259) : int(8))) | (0 << _GLF_IDENTITY(int(6), int(6)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(int(8), (false ? _GLF_FUZZED(76259) : int(8))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(8), (false ? _GLF_FUZZED(76259) : int(8))), (_GLF_IDENTITY(int(8), (false ? _GLF_FUZZED(_GLF_IDENTITY(76259, int(ivec4(_GLF_IDENTITY(76259, (76259) << 0), 0, 1, 1)))) : int(8)))) / 1), _GLF_IDENTITY((0 | 0), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2((0 | 0), (0 | 0)), (ivec2((0 | 0), (0 | 0))) | (ivec2((0 | 0), (0 | 0))))), max(int(_GLF_IDENTITY(ivec2((0 | 0), (0 | 0)), (ivec2((0 | 0), (0 | 0))) | (ivec2((0 | 0), (0 | 0))))), int(_GLF_IDENTITY(ivec2((0 | 0), (0 | 0)), (ivec2((0 | 0), (0 | 0))) | (ivec2((0 | 0), (0 | 0))))))))))))), 1 * (~ (_GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(8, (true ? 8 : _GLF_FUZZED(48606))), _GLF_IDENTITY(_GLF_IDENTITY(int(int(8)), (int(int(8))) ^ 0), int(ivec4(_GLF_IDENTITY(int(int(8)), (int(int(8))) ^ 0), 1, 0, 1))))) << 0)), (int(_GLF_IDENTITY(8, (8) << 0))) ^ 0), (_GLF_IDENTITY(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, _GLF_IDENTITY(int(int(8)), (int(int(8))) ^ 0))) << 0)), (int(_GLF_IDENTITY(8, (8) << 0))) ^ 0)) >> 0), (false ? _GLF_FUZZED(_GLF_IDENTITY(76259, clamp(76259, 76259, _GLF_IDENTITY(76259, (76259) | (76259))))) : int(8))))))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               do
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))) && true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (false))) && true, _GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false))) && true), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false)))), false || (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec3(false || (false), false, true), bvec3(bvec4(bvec3(false || (false), false, true), false)))))), true && (false))))))))), true && (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false)))))))) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false))) && true)), bool(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false))) && true)), (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false))) && true))) || false), false, true))), true && (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, (false) || false)))) && true)))))))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))), true && (false))) && true, bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))), true && (false))) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))), true && (false))) && true, bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))), true && (false))) && true, bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)))))), true, true))))), true && _GLF_IDENTITY((false), bool(bool((false)))))) && true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false), ! (! ((_GLF_IDENTITY(false, true && (false))) && true))))), ((bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))), true && (false))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))), true && (false))) && true, bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))), true && (false))) && true, bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))), true && (false))) && true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true))) && true)))))) || false))))) && true))))
                  {
                   if(_GLF_DEAD(false))
                    break;
                  }
                 else
                  {
                   do
                    {
                     if(_GLF_DEAD(false))
                      break;
                     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         return;
                        }
                       else
                        {
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               else
                {
                }
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
              }
             return;
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = (_GLF_IDENTITY(1, min(1, 1)) | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                return;
              }
            }
          }
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      {
       do
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, sqrt(sqrt(0.0)), determinant(mat2(0.0, 1.0, 0.0, tan(0.0))))), vec2(1.0, 1.0) * (vec2(mat2(injectionSwitch, sqrt(sqrt(0.0)), determinant(mat2(0.0, 1.0, 0.0, tan(0.0)))))))).x))); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          continue;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 do
                  {
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     for(int _injected_loop_counter = (0 ^ (_GLF_IDENTITY(0 | 1, int(ivec4(_GLF_IDENTITY(0 | 1, (false ? _GLF_FUZZED(-55215) : 0 | 1)), 0, 0, 0))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)), (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) | (0))))) && true))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (0 << _GLF_IDENTITY(int(1), int(1))) ^ (_injected_loop_counter --))) * 1), (_GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --)))) + (0 << _GLF_IDENTITY(int(2), int(2)))))
                      {
                       return;
                      }
                     if(_GLF_DEAD(false))
                      break;
                     if(_GLF_DEAD(false))
                      break;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   do
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       do
                        {
                         return;
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          continue;
                        }
                       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      break;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     do
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        break;
                       do
                        {
                         return;
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      continue;
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), false)))))))
                    break;
                  }
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       else
        {
        }
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
            }
           if(_GLF_DEAD(false))
            return;
          }
        }
       else
        {
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
    }
   else
    {
    }
   do
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               continue;
               if(_GLF_DEAD(false))
                return;
              }
             return;
            }
           if(_GLF_DEAD(false))
            break;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false, true, false)))));
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, abs(1.0), sin(0.0), tan(0.0), 1.0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         do
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
            return;
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2925.0879)))))))), (bool(bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2925.0879))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) || (_GLF_WRAPPED_IF_TRUE(true))))
              {
               for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, max(1, 1))); _injected_loop_counter ++)
                {
                 return;
                }
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(false))
            continue;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) || false)))))));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
   atomicStore(checker[_GLF_struct_replacement_8.virtual_gid], read, 4, 64, _GLF_IDENTITY(4, 0 | (4)));
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  return;
 for(int _injected_loop_counter = (((_GLF_IDENTITY(0, 0 | (0)) ^ 1) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) + (16016 & 0)))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(99481) : int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) / 1)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       return;
      }
    }
  }
 do
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
}
