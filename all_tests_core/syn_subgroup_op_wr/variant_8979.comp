#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), abs(_GLF_IDENTITY(1.0, (1.0) / 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(83.27)), bool(false)))), vec3(mat2x3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-58.37)), bool(false))))), abs(1.0), 1.0), (true ? vec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 1.0) : _GLF_FUZZED(vec3(8.6, 3.3, 6000.8456)))), 1.0, 0.0, 0.0))))) > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y, true)))))))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x) / 1.0) > injectionSwitch.y, true))))))))), bool(bvec3((bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, true)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, true)))))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec2(0.1, 901.447) + -90.60)))).y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.8)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y) && true)), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), (_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), (vec2(1.0, 1.0) * (injectionSwitch)) - vec2(0.0, 0.0))) - vec2(0.0, 0.0))).x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), (_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), (vec2(1.0, 1.0) * (injectionSwitch)) - vec2(0.0, 0.0))) - vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), (_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), (vec2(1.0, 1.0) * (injectionSwitch)) - vec2(0.0, 0.0))) - vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), (_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), (vec2(1.0, 1.0) * (injectionSwitch)) - vec2(0.0, 0.0))) - vec2(0.0, 0.0))).x)) > injectionSwitch.y) && true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) && true))), bool(bvec4(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) && true))), true, false, false)))), false || (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), abs(1.0) * (injectionSwitch.y)))), true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec2(-32.85, -6.6).g)), bool(false))), true)))))))), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) && true, (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) && true, bool(bvec3((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) && true)))))))) && true))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8.3))), _GLF_IDENTITY(true, (true) || false))), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED((66.44 - 3.9)), max(_GLF_FUZZED((66.44 - 3.9)), _GLF_FUZZED((66.44 - 3.9))))), bool(false))), true)))))))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((66.44 - 3.9))), bool(false))), true))))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((66.44 - 3.9))), bool(false))), true))))))), true, false)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((66.44 - 3.9))), bool(false))), true))))))), true, false)), true))))), true, false, true)))))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0)) > injectionSwitch.y, _GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true), true)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false)))), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) && true))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), abs(1.0), 1.0), vec3(mat2x3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), abs(1.0), 1.0), (true ? vec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), abs(1.0), 1.0) : _GLF_FUZZED(vec3(8.6, 3.3, 6000.8456)))), 1.0, 0.0, 0.0))))) > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y, true)))))))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, true))))))))), bool(bvec3((bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, true))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec2(0.1, 901.447) + -90.60)))).y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.8)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) && true)), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) && true)))), (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) && true)))), false || (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)))), true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) && true))))))) && true))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8.3))), _GLF_IDENTITY(true, (true) || false))), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((66.44 - 3.9))), bool(false))), true)))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((66.44 - 3.9))), bool(false))), true)))))))), true, false, true)))))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false)))), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) && true))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), abs(1.0), 1.0), vec3(mat2x3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), abs(1.0), 1.0), (true ? vec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), abs(1.0), 1.0) : _GLF_FUZZED(vec3(8.6, 3.3, 6000.8456)))), 1.0, 0.0, 0.0))))) > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y, true)))))))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, true))))))))), bool(bvec3((bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, true))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec2(0.1, 901.447) + -90.60)))).y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.8)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) && true)), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) && true)))), (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) && true)))), false || (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)))), true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) && true))))))) && true))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8.3))), _GLF_IDENTITY(true, (true) || false))), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((66.44 - 3.9))), bool(false))), true)))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((66.44 - 3.9))), bool(false))), true)))))))), true, false, true)))))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false)))), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) && true))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), abs(1.0), 1.0), vec3(mat2x3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), abs(1.0), 1.0), (true ? vec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), abs(1.0), 1.0) : _GLF_FUZZED(vec3(8.6, 3.3, 6000.8456)))), 1.0, 0.0, 0.0))))) > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y, true)))))))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, true))))))))), bool(bvec3((bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, true))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec2(0.1, 901.447) + -90.60)))).y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.8)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) && true)), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) && true)))), (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) && true)))), false || (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)))), true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) && true))))))) && true))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8.3))), _GLF_IDENTITY(true, (true) || false))), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((66.44 - 3.9))), bool(false))), true)))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((66.44 - 3.9))), bool(false))), true)))))))), true, false, true)))))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false)))), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) && true))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), abs(1.0), 1.0), vec3(mat2x3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), abs(1.0), 1.0), (true ? vec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), abs(1.0), 1.0) : _GLF_FUZZED(vec3(8.6, 3.3, 6000.8456)))), 1.0, 0.0, 0.0))))) > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y, true)))))))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, true))))))))), bool(bvec3((bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, true))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec2(0.1, 901.447) + -90.60)))).y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.8)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) && true)), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) && true)))), (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) && true)))), false || (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)))), true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) && true))))))) && true))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8.3))), _GLF_IDENTITY(true, (true) || false))), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((66.44 - 3.9))), bool(false))), true)))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((66.44 - 3.9))), bool(false))), true)))))))), true, false, true)))))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false)))), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) && true))))))))))))))) || false), true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false, true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))).x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u)) / 1u);
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, 0u | (workgroup_id));
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))))))), max(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ (subgroup_size)) : _GLF_FUZZED(subgroup_local_id)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 0u, 1u)))), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u)) : _GLF_FUZZED(subgroup_local_id)))), max(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ (subgroup_size)) : _GLF_FUZZED(subgroup_local_id)))), subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(~ (subgroup_size), (true ? ~ (subgroup_size) : _GLF_FUZZED(workgroup_size)))) - 0u)))), (true ? ~ (~ (subgroup_size)) : _GLF_FUZZED(subgroup_local_id))))))), ~ (~ (~ (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((subgroup_size), min((subgroup_size), _GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))))), (true ? ~ (~ (subgroup_size)) : _GLF_FUZZED(subgroup_local_id)))), max(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ (subgroup_size)) : _GLF_FUZZED(subgroup_local_id)))), subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ (subgroup_size)) : _GLF_FUZZED(subgroup_local_id)))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ (subgroup_size)) : _GLF_FUZZED(subgroup_local_id))))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))))))))), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), 1u, 1u, 0u))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))) >> 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))) >> 0u), (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))) >> 0u)) / 1u), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))) >> 0u), (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))) >> 0u)) / 1u), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u, 0u))))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(10405u, clamp(_GLF_IDENTITY(10405u, ~ (~ (_GLF_IDENTITY(10405u, (10405u) << 0u)))), 10405u, 10405u))) : subgroup_size)), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | 0u)))), ((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(10405u, clamp(_GLF_IDENTITY(10405u, ~ (~ (_GLF_IDENTITY(10405u, (10405u) << 0u)))), 10405u, 10405u))) : subgroup_size)), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | 0u))))) * 1u), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))) && true)) ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(10405u) : subgroup_size)), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | 0u, max((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | 0u, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | 0u)))))))))), ~ (~ ((subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(10405u, clamp(_GLF_IDENTITY(10405u, ~ (~ (_GLF_IDENTITY(10405u, (10405u) << _GLF_IDENTITY(0u, ~ (~ (0u))))))), 10405u, 10405u))) : subgroup_size)), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | 0u)))), ((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(10405u, clamp(_GLF_IDENTITY(10405u, ~ (~ (_GLF_IDENTITY(10405u, (10405u) << 0u)))), 10405u, 10405u))) : subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(10405u, clamp(_GLF_IDENTITY(10405u, ~ (~ (_GLF_IDENTITY(10405u, (10405u) << 0u)))), 10405u, 10405u))) : subgroup_size))))), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | 0u))))) * 1u), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))) && true)) ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(10405u) : subgroup_size)), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), (subgroup_size) | 0u)) | 0u, max((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | 0u, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)) | _GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))))))))))))));
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(next_virtual_gid), clamp(uint(next_virtual_gid), uint(next_virtual_gid), uint(next_virtual_gid))), (uint(next_virtual_gid)) + 0u)))], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) && true), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) && true))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))), ((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))) && true)), true), true, false)))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), true), true, false)))))))))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(uint(buf[virtual_gid]))), 4, 64, 0);
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) ^ 0u) < subgroup_size), ! (! (! (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) ^ 0u) < subgroup_size))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) ^ 0u) < subgroup_size), ! (! (! (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) ^ 0u) < subgroup_size))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) ^ 0u) < subgroup_size), ! (! (! (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)) | 0u, ~ (~ (((subgroup_local_id + 1)) | 0u)))) ^ 0u) < subgroup_size))))))))))))
  {
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, max(read, read)), _GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(64, min(64, 64))), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (false ? _GLF_FUZZED(79067) : _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) ^ (0 << _GLF_IDENTITY(int(2), int(2)))))))) * _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, min(64, 64))) | 0), max(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, min(64, 64))) | 0), _GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, min(64, 64))) | 0))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, min(64, 64))) | 0))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, min(64, 64))) | 0)), (false ? _GLF_FUZZED(_GLF_IDENTITY(83380, clamp(83380, 83380, 83380))) : _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, min(64, 64))) | 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, min(64, 64))) | 0)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, min(64, 64))) | 0))) >> 0)) - 0))))) | ((~ (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, _GLF_IDENTITY(min(64, 64), (min(64, 64)) | (_GLF_IDENTITY(min(64, 64), (min(64, 64)) | 0))))) | 0)))))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, min(64, 64))) | 0))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY((_GLF_IDENTITY(64, min(64, 64))), (0 & -74895) + ((_GLF_IDENTITY(64, min(64, 64))))) | 0)))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, min(64, 64))) - 0), (_GLF_IDENTITY(64, min(64, 64))) | 0))), _GLF_IDENTITY(((~ (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, min(64, 64))) | 0)))) | ((~ (_GLF_IDENTITY(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, max(64, 64)), 64)), (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (64) >> 0)))) | 0)))), min(((~ (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, min(64, 64))) | 0)))) | ((~ (_GLF_IDENTITY(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, max(64, 64)), 64)), (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (64) >> 0)))) | 0)))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, min(64, 64))) | 0)))) | ((~ (_GLF_IDENTITY(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, max(64, 64)), 64)), (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (64) >> 0)))) | 0))))))))))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(64, min(64, 64))), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (false ? _GLF_FUZZED(79067) : _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) ^ (0 << _GLF_IDENTITY(int(2), int(2)))))))) * _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, min(64, 64))) | 0), max(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, min(64, 64))) | 0), _GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, min(64, 64))) | 0))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, min(64, 64))) | 0))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, min(64, 64))) | 0)), (false ? _GLF_FUZZED(_GLF_IDENTITY(83380, clamp(83380, 83380, 83380))) : _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, min(64, 64))) | 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, min(64, 64))) | 0)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, min(64, 64))) | 0))) >> 0)) - 0))))) | ((~ (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, _GLF_IDENTITY(min(64, 64), (min(64, 64)) | (_GLF_IDENTITY(min(64, 64), (min(64, 64)) | 0))))) | 0)))))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, min(64, 64))) | 0))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY((_GLF_IDENTITY(64, min(64, 64))), (0 & -74895) + ((_GLF_IDENTITY(64, min(64, 64))))) | 0)))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, min(64, 64))) - 0), (_GLF_IDENTITY(64, min(64, 64))) | 0))), _GLF_IDENTITY(((~ (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, min(64, 64))) | 0)))) | ((~ (_GLF_IDENTITY(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, max(64, 64)), 64)), (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (64) >> 0)))) | 0)))), min(((~ (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, min(64, 64))) | 0)))) | ((~ (_GLF_IDENTITY(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, max(64, 64)), 64)), (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (64) >> 0)))) | 0)))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, min(64, 64))) | 0)))) | ((~ (_GLF_IDENTITY(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, max(64, 64)), 64)), (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (64) >> 0)))) | 0)))))))))))))) ^ 0)), 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
    barrier();
   subgroupAll(false);
  }
 else
  {
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, _GLF_IDENTITY((read) << 0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(uint((uvec4(191950u, 78793u, _GLF_IDENTITY(73560u, (73560u) | (_GLF_IDENTITY(73560u, (73560u) - 0u))), _GLF_IDENTITY(37995u, (37995u) ^ 0u)) == uvec4(37288u, 56991u, 113873u, 50703u)))) : (_GLF_IDENTITY(read, (read) ^ 0u)) << 0u, max(false ? _GLF_FUZZED(uint((uvec4(191950u, _GLF_IDENTITY(78793u, (78793u) + 0u), 73560u, 37995u) == uvec4(37288u, 56991u, 113873u, 50703u)))) : (_GLF_IDENTITY(read, (read) ^ 0u)) << 0u, false ? _GLF_FUZZED(uint((uvec4(191950u, _GLF_IDENTITY(78793u, (78793u) - 0u), 73560u, 37995u) == uvec4(37288u, 56991u, 113873u, 50703u)))) : (_GLF_IDENTITY(read, (read) ^ 0u)) << 0u))))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(true);
  }
}
