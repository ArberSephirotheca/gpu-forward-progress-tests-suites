#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), true && (false))))
      barrier();
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))) && true))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), false, false), true))))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))) && true))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), false, false), true))))))))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_ONE(1.0, injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)))))
          barrier();
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(552.905), _GLF_FUZZED(vec4(-268.442, 5970.6464, -5.0, -7.4).y)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0) : _GLF_FUZZED(-1.2)))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), vec2(0.0, 0.0) + ((injectionSwitch) - vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)))).x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0)).x > injectionSwitch.y), true, true))))) || false)));
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-68.43), 1.0 * (_GLF_FUZZED(-68.43)))), max(_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-68.43), 1.0 * (_GLF_FUZZED(-68.43)))), max((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-68.43), 1.0 * (_GLF_FUZZED(-68.43)))), (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-68.43), 1.0 * (_GLF_FUZZED(-68.43)))))), _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-68.43), 1.0 * (_GLF_FUZZED(-68.43)))), float(mat3((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-68.43), 1.0 * (_GLF_FUZZED(-68.43)))), 0.0, 1.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0)))))))), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-68.43), 1.0 * (_GLF_FUZZED(-68.43)))), max(_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-68.43), 1.0 * (_GLF_FUZZED(-68.43)))), max((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-68.43), 1.0 * (_GLF_FUZZED(-68.43)))), (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-68.43), 1.0 * (_GLF_FUZZED(-68.43)))))), _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-68.43), 1.0 * (_GLF_FUZZED(-68.43)))), float(mat3((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-68.43), 1.0 * (_GLF_FUZZED(-68.43)))), 0.0, 1.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-68.43), 1.0 * (_GLF_FUZZED(-68.43)))), max(_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-68.43), 1.0 * (_GLF_FUZZED(-68.43)))), max((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-68.43), 1.0 * (_GLF_FUZZED(-68.43)))), (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-68.43), 1.0 * (_GLF_FUZZED(-68.43)))))), _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-68.43), 1.0 * (_GLF_FUZZED(-68.43)))), float(mat3((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-68.43), 1.0 * (_GLF_FUZZED(-68.43)))), 0.0, 1.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0)))))))), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-68.43), 1.0 * (_GLF_FUZZED(-68.43)))), max(_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-68.43), 1.0 * (_GLF_FUZZED(-68.43)))), max((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-68.43), 1.0 * (_GLF_FUZZED(-68.43)))), (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-68.43), 1.0 * (_GLF_FUZZED(-68.43)))))), _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-68.43), 1.0 * (_GLF_FUZZED(-68.43)))), float(mat3((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-68.43), 1.0 * (_GLF_FUZZED(-68.43)))), 0.0, 1.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0)))))))), 1.0), vec2(0.0, 0.0) + (vec2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-68.43), 1.0 * (_GLF_FUZZED(-68.43)))), max(_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-68.43), 1.0 * (_GLF_FUZZED(-68.43)))), max((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-68.43), 1.0 * (_GLF_FUZZED(-68.43)))), (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-68.43), 1.0 * (_GLF_FUZZED(-68.43)))))), _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-68.43), 1.0 * (_GLF_FUZZED(-68.43)))), float(mat3((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-68.43), 1.0 * (_GLF_FUZZED(-68.43)))), 0.0, 1.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0)))))))), 1.0))))))) > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))) && true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))) && true), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))) && true)) && true)) || false)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))) && true), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))) && true)) && true)) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))) && true)), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))) && true), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))) && true)) && true)) || false))) || false))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))) && true), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), float(mat3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), sqrt(1.0), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), float(mat3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), sqrt(1.0), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), float(mat3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), sqrt(1.0), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), float(mat3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), sqrt(1.0), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), float(mat3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), sqrt(1.0), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), float(mat3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), sqrt(1.0), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), abs(0.0), 1.0, 1.0, 1.0, 1.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0))), injectionSwitch.y))))))) && true)) && true)) || false))) || false))))))))
        barrier();
      }
     else
      {
      }
     barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(bool(false)))))));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false, false)), true && (bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))))), false, false, false))))), (bool(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y))))) || false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && ((bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), false)))))), false, false, false))), true && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), false)))))), false, false, _GLF_IDENTITY(false, true && (false))))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), false)))))), false, false, false))), true && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), false)))))), false, false, _GLF_IDENTITY(false, true && (false))))))), (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), mat2(1.0) * (injectionSwitch)))).y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))), false, false, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))), false, false, false)), false, false, false)))) || false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, false, true)))) && true)))), (bool(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, sqrt(1.0)))) < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0, 1.0, 0.0)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, sqrt(1.0)))) < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0, 1.0, 0.0)))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, sqrt(1.0)))) < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0, 1.0, 0.0)))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))) || false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-29.55) : injectionSwitch.y)))), (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, false || (false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, false || (false))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, false || (false))), false, false))), true, true))))), (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4328.8267)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))) < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), (bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))) || false)), true, true)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(false))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) / 1u))) + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u);
 for(int _injected_loop_counter = _GLF_IDENTITY(0, int(ivec3(0, 0, 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(true, (true) && true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), true, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), true && (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))))) && true))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), true, _GLF_IDENTITY(true, ! (! (true)))))), (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - _GLF_IDENTITY(0u, (0u) | (0u))), 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - _GLF_IDENTITY(0u, (0u) | (0u)))))) % subgroup_size);
 uint read = 0;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / 1.0)) || false))))), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((0), min((0), (0))) | (0), (_GLF_IDENTITY((0), _GLF_IDENTITY(min((0), (0)), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (min((0), (0))))) | (0)) - int(_GLF_ZERO(0.0, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 | 1)); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))))
              barrier();
             barrier();
            }
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++))), (true ? _injected_loop_counter ++ : _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), ~ (~ (_GLF_FUZZED(_injected_loop_counter))))) | (0 >> _GLF_IDENTITY(int(6), int(6)))))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) != 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_DEAD(false)))) || false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), true && (_GLF_DEAD(false))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), true))))) && _GLF_IDENTITY((_GLF_DEAD(false)), bool(bool((_GLF_DEAD(false)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)))).y, _GLF_IDENTITY(true, (true) || false) && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) + 0u, ((next_virtual_gid) + 0u) | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u), (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u)) ^ 0u)) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u), (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u)) ^ 0u)) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u), (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u)) ^ 0u)) / 1u)) / 1u)) >> 0u)) | (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u)))], uint(1), 4, 64, 4);
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(degrees(injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * ((true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(degrees(injectionSwitch)))), vec2(1.0, 1.0) * (mat2(1.0) * ((true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(degrees(injectionSwitch)))))))).y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2102.5871) : injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2102.5871) : injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2102.5871) : injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2102.5871) : injectionSwitch.y)), float(mat3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2102.5871) : injectionSwitch.y)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2102.5871) : injectionSwitch.y))))))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(false, true, true))), true, true, false)), bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false)), false, false, false))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec3(-80968, -70935, -99561).b) : _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1))))]), vec2(_GLF_FUZZED(-8632.3996), _GLF_FUZZED(5.4)), bvec2(false, false)))), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec3(-80968, -70935, -99561).b) : _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1))))]), vec2(_GLF_FUZZED(-8632.3996), _GLF_FUZZED(5.4)), bvec2(false, false)))))) * vec2(1.0, 1.0)).x > injectionSwitch.y)))), (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && (bool(injectionSwitch.x > injectionSwitch.y)), (true && (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9139.4055), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-10.51)), bvec2(true, false))), injectionSwitch)).y) - 0.0)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))))) || false))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))) && true))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), false || (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), min(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED((2.9 * vec3(55.02, -1.6, -3.8).t))), bool(false)))), min(injectionSwitch.y, injectionSwitch.y))))))))), bool(bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (true) || false))))), false, true)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), false, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), _GLF_IDENTITY(false, (false) && true), true))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, exp(0.0), 1.0, 0.0))), injectionSwitch.y, injectionSwitch.y))) && true)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true)))))))
        barrier();
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))) && true))), _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), float(mat2x3(float(float(injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 1.0)))))))))), bool(bvec2(_GLF_DEAD(false), false))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(4962.0924) : injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y))), (bool(bool((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y)))) || false)))))))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), false), bvec3(bvec3(bvec3(false, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false)))))))))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(vec3(0.0, 0.0, 0.0))) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(vec3(0.0, 0.0, 0.0))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(vec3(0.0, 0.0, 0.0))) > injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(vec3(0.0, 0.0, 0.0))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(vec3(0.0, 0.0, 0.0))) > injectionSwitch.y)), false), false)))))))))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)));
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(79271))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | 0))) >> _GLF_IDENTITY(int(6), int(6))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(((_GLF_IDENTITY(1, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) ? 1 : _GLF_FUZZED(79271))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | 0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(ivec3(_GLF_IDENTITY(int(6), (int(6)) | (int(6))), 0, (1 & 1)))), int(6))), int(ivec4(_GLF_IDENTITY(((_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (! (_GLF_IDENTITY(true, ! (! (true))))))))) ? 1 : _GLF_FUZZED(79271)), ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (! (_GLF_IDENTITY(true, ! (! (true))))))))) ? 1 : _GLF_FUZZED(79271))) | ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (! (_GLF_IDENTITY(true, ! (! (true))))))))) ? 1 : _GLF_FUZZED(79271))))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (int(6)) << 0)) | 0))) >> _GLF_IDENTITY(int(6), int(6))), (((_GLF_IDENTITY(1, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), ! (! (! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))))))))) ? 1 : _GLF_FUZZED(79271))) << _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (int(6)) << 0)) | 0)), max(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (int(6)) << 0)) | 0)), _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (int(6)) << 0)) | 0))))) >> _GLF_IDENTITY(int(6), int(6)))) + 0), 1, 1, 1))), 1, 1), min(ivec3(_GLF_IDENTITY(((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(79271))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | _GLF_IDENTITY(0, min(0, 0))))) >> _GLF_IDENTITY(int(6), int(6))), int(ivec4(_GLF_IDENTITY(((_GLF_IDENTITY(1, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (! (_GLF_IDENTITY(true, ! (! (true))))))))) ? 1 : _GLF_FUZZED(79271))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(ivec4(int(6), 1, 1, 1)), (int(ivec4(int(6), 1, 1, 1))) / 1))) << 0)) | 0))) >> _GLF_IDENTITY(int(6), int(6))), (((_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (! (_GLF_IDENTITY(true, ! (! (true))))))))) ? 1 : _GLF_FUZZED(79271)), clamp((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (! (_GLF_IDENTITY(true, ! (! (true))))))))) ? 1 : _GLF_FUZZED(79271)), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (! (_GLF_IDENTITY(true, ! (! (true))))))))) ? 1 : _GLF_FUZZED(79271)), _GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (! (_GLF_IDENTITY(true, ! (! (true))))))))) ? 1 : _GLF_FUZZED(79271)), ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (! (_GLF_IDENTITY(true, ! (! (true))))))))) ? 1 : _GLF_FUZZED(79271))) * 1)))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (int(6)) << 0)) | 0))) >> _GLF_IDENTITY(int(6), int(6)))) + 0), 1, 1, 1))), 1, 1), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(79271))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), 0 + (int(6)))) | 0))) >> _GLF_IDENTITY(int(6), int(6))), int(ivec4(_GLF_IDENTITY(((_GLF_IDENTITY(1, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (! ((true))))))), ! (! (! (_GLF_IDENTITY(true, ! (! (true))))))))) ? 1 : _GLF_FUZZED(79271))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << 0), int(ivec4(_GLF_IDENTITY(int(6), (int(6)) << 0), 1, 1, 1)))) | (_GLF_IDENTITY(int(6), (int(6)) << 0)))) | 0))) >> _GLF_IDENTITY(int(6), int(6))), (((_GLF_IDENTITY(1, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), bool(bvec4(! (_GLF_IDENTITY(true, ! (! (true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))))) ? 1 : _GLF_FUZZED(79271))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (int(6)) << 0)) | 0))) >> _GLF_IDENTITY(int(6), int(6)))) + 0), 1, 1, 1))), 1, 1), ivec3(1, 1, 1) * (ivec3(_GLF_IDENTITY(((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(79271))) << _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(6, 6))), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), min(int(6), int(6)))) | 0))) >> _GLF_IDENTITY(int(6), int(6))), int(ivec4(_GLF_IDENTITY(((_GLF_IDENTITY(1, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(! (true), true, false, true)), ! (! (bool(bvec4(! (true), true, false, true))))))))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (! (true))))), false || ((! (_GLF_IDENTITY(true, ! (! (true))))))))))) ? 1 : _GLF_FUZZED(79271))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(-45037) : int(6)))) << 0)) | 0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - (0 << _GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(-55259))))), (((_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (! (_GLF_IDENTITY(true, ! (! (true))))))))) ? 1 : _GLF_FUZZED(79271), min(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (! (_GLF_IDENTITY(true, ! (! (true))))))))) ? 1 : _GLF_FUZZED(79271), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (! (_GLF_IDENTITY(true, ! (! (true))))))))) ? 1 : _GLF_FUZZED(79271))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (int(6)) << 0)) | 0)), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (int(6)) << 0)) | 0))) | (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (int(6)) << 0)) | 0))))) >> _GLF_IDENTITY(int(6), int(6)))) + 0), 1, 1, 1))), 1, 1))))), ivec3(ivec3(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(79271))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | 0))) >> _GLF_IDENTITY(int(6), int(6))), int(ivec4(((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(79271))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | 0))) >> _GLF_IDENTITY(int(6), int(6))), 1, 1, 1))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(79271))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | 0))) >> _GLF_IDENTITY(int(6), int(6))), int(ivec4(((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(79271))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | 0))) >> _GLF_IDENTITY(int(6), int(6))), 1, 1, 1))), (_GLF_IDENTITY(((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(79271))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | 0))) >> _GLF_IDENTITY(int(6), int(6))), int(ivec4(((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(79271))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | 0))) >> _GLF_IDENTITY(int(6), int(6))), 1, 1, 1)))) - 0))), 1, 1)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch), (clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0))), vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)) / vec2(1.0, 1.0))) / vec2(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))))), 0.0, 1.0), (mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch), (clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0))), vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)) / vec2(1.0, 1.0))) / vec2(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))))), 0.0, 1.0)) * mat2(1.0)))).y)))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(((0 | 0) << _GLF_IDENTITY(int(6), int(6))), (((0 | 0) << _GLF_IDENTITY(int(6), int(6)))) ^ 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) < 1, (_injected_loop_counter < 1) && true)); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     else
      {
      }
    }
   if(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, clamp(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2)), subgroup_local_id % 2, subgroup_local_id % 2))), _GLF_IDENTITY(clamp((_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2)), _GLF_IDENTITY(subgroup_local_id % 2, (true ? subgroup_local_id % 2 : _GLF_FUZZED(subgroup_local_id))), subgroup_local_id % 2), max(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2)), (_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2))) ^ 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2)), ~ (~ (_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2))))))), subgroup_local_id % 2, subgroup_local_id % 2), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2)), _GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) % 2))) * _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))), subgroup_local_id % 2), _GLF_IDENTITY(0u | (clamp(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2)), subgroup_local_id % 2, subgroup_local_id % 2)), max(0u | (clamp(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2)), subgroup_local_id % 2, subgroup_local_id % 2)), 0u | (clamp(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2)), subgroup_local_id % 2, subgroup_local_id % 2))))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, clamp(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2)), subgroup_local_id % _GLF_IDENTITY(2, (false ? _GLF_FUZZED(int(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, false))), (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(0.0)))))), false || (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))))))))))))) && true)))))) : _GLF_IDENTITY(2, min(2, 2)))), _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(next_virtual_gid) : subgroup_local_id)) % 2))), ((_GLF_IDENTITY(subgroup_local_id % 2, clamp(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2)), _GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(int(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) || false)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))) || false))))) : _GLF_IDENTITY(2, min(2, 2)))), min(subgroup_local_id % _GLF_IDENTITY(2, (false ? _GLF_FUZZED(int(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y))))) && true)))))) : _GLF_IDENTITY(2, min(2, 2)))), _GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (false ? _GLF_FUZZED(int(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((true), bool(bvec3((true), false, true))))), false, _GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(vec4(injectionSwitch, 0.0, 1.0))))).y))))) && true)))))) : _GLF_IDENTITY(2, min(2, 2)))), min(subgroup_local_id % _GLF_IDENTITY(2, (false ? _GLF_FUZZED(int(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), true), false)), false)))))))))) : _GLF_IDENTITY(2, min(2, 2)))), subgroup_local_id % _GLF_IDENTITY(2, (false ? _GLF_FUZZED(int(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))) && (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)) && (true))), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true))))))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), bool(_GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), ! (! (bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), bool(_GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), ! (! (bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))))))))))), false, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (bool(bvec3(true, false, true))))))))))))))) : _GLF_IDENTITY(2, min(2, 2)))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(next_virtual_gid) : subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(next_virtual_gid) : subgroup_local_id))) >> 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) / 1u), next_virtual_gid))) : _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_id)))) ^ 0u))), (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(next_virtual_gid) : subgroup_local_id))) - _GLF_IDENTITY(0u, (0u) / (0u ^ 1u))))) % 2)))) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (false ? _GLF_FUZZED(atomicMin(num_workgroup, virtual_gid)) : subgroup_local_id % 2)), min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2)), subgroup_local_id % _GLF_IDENTITY(2, ~ (~ (2))), subgroup_local_id % _GLF_IDENTITY(2, 1 * (2))))), ((_GLF_IDENTITY(subgroup_local_id % 2, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ (subgroup_local_id))) + 0u) % 2, min(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY(0, 0 + (0)) ^ (2)), subgroup_local_id % 2)), subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) - 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) % 2, max(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), (2) | (2)), (subgroup_local_id % _GLF_IDENTITY(2, min(2, 2))) ^ 0u), subgroup_local_id % 2)))))) * _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), max(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (max(1u, 1u)))), _GLF_IDENTITY(1u, 0u + (1u)))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(126223u) : clamp((_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | 0u), min(subgroup_local_id % 2, subgroup_local_id % 2)), _GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (false ? _GLF_FUZZED(23168) : 2)), (true ? subgroup_local_id % 2 : _GLF_FUZZED(subgroup_local_id))), subgroup_local_id % 2), max(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(min(subgroup_local_id % 2, subgroup_local_id % 2), (min(subgroup_local_id % 2, subgroup_local_id % 2)) ^ 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 1u, 1u))) % 2, min(subgroup_local_id % 2, subgroup_local_id % 2))) ^ 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) % 2, min(subgroup_local_id % 2, subgroup_local_id % 2))))))), _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) % 2, subgroup_local_id % 2), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2)), _GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, int(ivec2(2, (1 ^ 0)))), (_GLF_IDENTITY(subgroup_local_id % 2, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) % 2))) * _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))), subgroup_local_id % 2), _GLF_IDENTITY(0u | (clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u) | (subgroup_local_id)) % 2, min(subgroup_local_id % 2, subgroup_local_id % _GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), (~ (2)) | 0))))), subgroup_local_id % 2, subgroup_local_id % 2)), max(0u | (clamp(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2)), subgroup_local_id % 2, subgroup_local_id % 2)), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))) | (clamp(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2)), subgroup_local_id % 2, subgroup_local_id % 2))))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, clamp(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2)), subgroup_local_id % _GLF_IDENTITY(2, (false ? _GLF_FUZZED(int(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) && true))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(0.0)))))), false || (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))))))))))))) && true)))))) : _GLF_IDENTITY(2, min(2, 2)))), _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(next_virtual_gid) : subgroup_local_id)) % 2))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, clamp(_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(min(subgroup_local_id % 2, subgroup_local_id % 2), (_GLF_IDENTITY(min(subgroup_local_id % 2, subgroup_local_id % 2), max(min(subgroup_local_id % 2, subgroup_local_id % 2), min(subgroup_local_id % 2, subgroup_local_id % 2)))) - (0u | 0u))), _GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))) ? _GLF_FUZZED(int(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), ((_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) || false)) && true)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))) || false))))) : _GLF_IDENTITY(2, min(2, 2)))), min(subgroup_local_id % _GLF_IDENTITY(2, (false ? _GLF_IDENTITY(_GLF_FUZZED(int(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y))))) && true)))))), (_GLF_FUZZED(int(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, sqrt(1.0), abs(1.0), log(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), (true ? float(mat4x3(injectionSwitch.x, sqrt(1.0), abs(1.0), log(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)) : _GLF_FUZZED(928.136)))) < injectionSwitch.y)) && (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))), (_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y)))), false || (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y))))))) && true))))))) - (0 >> _GLF_IDENTITY(int(3), int(3)))) : _GLF_IDENTITY(2, min(2, 2)))), _GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (false ? _GLF_FUZZED(_GLF_IDENTITY(int(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(6.8) : dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))))), _GLF_ZERO(0.0, injectionSwitch.x)))).y)) && (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((true), bool(bvec3((true), false, true))))), false, _GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(vec4(injectionSwitch, 0.0, 1.0))))).y))))) && true))))), 0 ^ (int(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(6.8) : dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))))), _GLF_ZERO(0.0, injectionSwitch.x)))).y)) && (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((true), bool(bvec3((true), false, true))))), false, _GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(vec4(injectionSwitch, 0.0, 1.0))))).y))))) && true)))))))) : _GLF_IDENTITY(2, min(2, 2)))), min(subgroup_local_id % _GLF_IDENTITY(2, (false ? _GLF_FUZZED(int(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(false, (false) || false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false || (! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), true && (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))), true, _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), true))))))), (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))) && true)), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), true && (bool(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y))))) && true)), true), false)), false)))))))))) : _GLF_IDENTITY(2, min(2, 2)))), subgroup_local_id % _GLF_IDENTITY(2, (false ? _GLF_FUZZED(int(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))) && (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)) && (true))), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true))))))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), bool(_GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), ! (! (bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), bool(_GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), ! (! (bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))))))))))), false, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (bool(bvec3(true, false, true))))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), false, false)))) && (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)) && (true))), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true))))))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), bool(_GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), ! (! (bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))))), ! (! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), bool(_GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), ! (! (bool(bool(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8335.2599)), float(injectionSwitch.x), bool(true))) : _GLF_FUZZED(-8.9))) < injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8335.2599)), float(injectionSwitch.x), bool(true))) : _GLF_FUZZED(-8.9))) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8335.2599)), float(injectionSwitch.x), bool(true))) : _GLF_FUZZED(-8.9))) < injectionSwitch.y)) && true)))) && (true)))))))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), true)), (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), true))) || false))) && (true)), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) && (true))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true, true, true)), bool(bvec4(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true, true, true)), false, false, true))))))))))))))))), false, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (bool(bvec3(true, false, true)))))))))))) && true)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))) && (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)) && (true))), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true))))))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), bool(_GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), ! (! (bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), bool(_GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), ! (! (bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))))))))))), false, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (bool(bvec3(true, false, true))))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), false, false)))) && (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)) && (true))), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true))))))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), bool(_GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), ! (! (bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))))), ! (! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), bool(_GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), ! (! (bool(bool(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8335.2599)), float(injectionSwitch.x), bool(true))) : _GLF_FUZZED(-8.9))) < injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8335.2599)), float(injectionSwitch.x), bool(true))) : _GLF_FUZZED(-8.9))) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8335.2599)), float(injectionSwitch.x), bool(true))) : _GLF_FUZZED(-8.9))) < injectionSwitch.y)) && true)))) && (true)))))))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), true)), (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), true))) || false))) && (true)), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) && (true))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true, true, true)), bool(bvec4(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true, true, true)), false, false, true))))))))))))))))), false, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (bool(bvec3(true, false, true)))))))))))) && true))))))) : _GLF_IDENTITY(2, min(2, 2)))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(next_virtual_gid) : subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(next_virtual_gid) : subgroup_local_id))) >> 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) / 1u), ~ (~ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) / 1u)))), next_virtual_gid))) : _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_id)))) ^ 0u))), (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(next_virtual_gid) : subgroup_local_id))) - _GLF_IDENTITY(0u, (0u) / (0u ^ 1u))))) % 2))), ((_GLF_IDENTITY(subgroup_local_id % 2, clamp(_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(min(subgroup_local_id % 2, subgroup_local_id % 2), (_GLF_IDENTITY(min(subgroup_local_id % 2, subgroup_local_id % 2), max(min(subgroup_local_id % 2, subgroup_local_id % 2), min(subgroup_local_id % 2, subgroup_local_id % 2)))) - (0u | 0u))), _GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))) ? _GLF_FUZZED(int(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), ((_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) || false)) && true)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))) || false))))) : _GLF_IDENTITY(2, min(2, 2)))), min(subgroup_local_id % _GLF_IDENTITY(2, (false ? _GLF_IDENTITY(_GLF_FUZZED(int(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y))))) && true)))))), (_GLF_FUZZED(int(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, sqrt(1.0), abs(1.0), log(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), (true ? float(mat4x3(injectionSwitch.x, sqrt(1.0), abs(1.0), log(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)) : _GLF_FUZZED(928.136)))) < injectionSwitch.y)) && (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))), (_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y)))), false || (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y))))))) && true))))))) - (0 >> _GLF_IDENTITY(int(3), int(3)))) : _GLF_IDENTITY(2, min(2, 2)))), _GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (false ? _GLF_FUZZED(_GLF_IDENTITY(int(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(6.8) : dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))))), _GLF_ZERO(0.0, injectionSwitch.x)))).y)) && (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((true), bool(bvec3((true), false, true))))), false, _GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(vec4(injectionSwitch, 0.0, 1.0))))).y))))) && true))))), 0 ^ (int(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(6.8) : dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))))), _GLF_ZERO(0.0, injectionSwitch.x)))).y)) && (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((true), bool(bvec3((true), false, true))))), false, _GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(vec4(injectionSwitch, 0.0, 1.0))))).y))))) && true)))))))) : _GLF_IDENTITY(2, min(2, 2)))), min(subgroup_local_id % _GLF_IDENTITY(2, (false ? _GLF_FUZZED(int(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(false, (false) || false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false || (! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), true && (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))), true, _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), true))))))), (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))) && true)), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), true && (bool(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y))))) && true)), true), false)), false)))))))))) : _GLF_IDENTITY(2, min(2, 2)))), subgroup_local_id % _GLF_IDENTITY(2, (false ? _GLF_FUZZED(int(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))) && (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)) && (true))), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true))))))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), bool(_GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), ! (! (bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), bool(_GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), ! (! (bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))))))))))), false, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (bool(bvec3(true, false, true))))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), false, false)))) && (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)) && (true))), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true))))))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), bool(_GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), ! (! (bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))))), ! (! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), bool(_GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), ! (! (bool(bool(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8335.2599)), float(injectionSwitch.x), bool(true))) : _GLF_FUZZED(-8.9))) < injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8335.2599)), float(injectionSwitch.x), bool(true))) : _GLF_FUZZED(-8.9))) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8335.2599)), float(injectionSwitch.x), bool(true))) : _GLF_FUZZED(-8.9))) < injectionSwitch.y)) && true)))) && (true)))))))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), true)), (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), true))) || false))) && (true)), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) && (true))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true, true, true)), bool(bvec4(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true, true, true)), false, false, true))))))))))))))))), false, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (bool(bvec3(true, false, true)))))))))))) && true)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))) && (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)) && (true))), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true))))))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), bool(_GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), ! (! (bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), bool(_GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), ! (! (bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))))))))))), false, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (bool(bvec3(true, false, true))))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), false, false)))) && (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)) && (true))), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true))))))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), bool(_GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), ! (! (bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))))), ! (! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), bool(_GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), ! (! (bool(bool(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8335.2599)), float(injectionSwitch.x), bool(true))) : _GLF_FUZZED(-8.9))) < injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8335.2599)), float(injectionSwitch.x), bool(true))) : _GLF_FUZZED(-8.9))) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8335.2599)), float(injectionSwitch.x), bool(true))) : _GLF_FUZZED(-8.9))) < injectionSwitch.y)) && true)))) && (true)))))))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), true)), (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), true))) || false))) && (true)), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) && (true))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true, true, true)), bool(bvec4(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true, true, true)), false, false, true))))))))))))))))), false, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (bool(bvec3(true, false, true)))))))))))) && true))))))) : _GLF_IDENTITY(2, min(2, 2)))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(next_virtual_gid) : subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(next_virtual_gid) : subgroup_local_id))) >> 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) / 1u), ~ (~ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) / 1u)))), next_virtual_gid))) : _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_id)))) ^ 0u))), (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(next_virtual_gid) : subgroup_local_id))) - _GLF_IDENTITY(0u, (0u) / (0u ^ 1u))))) % 2)))) | ((_GLF_IDENTITY(subgroup_local_id % 2, clamp(_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(min(subgroup_local_id % 2, subgroup_local_id % 2), (_GLF_IDENTITY(min(subgroup_local_id % 2, subgroup_local_id % 2), max(min(subgroup_local_id % 2, subgroup_local_id % 2), min(subgroup_local_id % 2, subgroup_local_id % 2)))) - (0u | 0u))), _GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))) ? _GLF_FUZZED(int(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), ((_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) || false)) && true)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))) || false))))) : _GLF_IDENTITY(2, min(2, 2)))), min(subgroup_local_id % _GLF_IDENTITY(2, (false ? _GLF_IDENTITY(_GLF_FUZZED(int(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y))))) && true)))))), (_GLF_FUZZED(int(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, sqrt(1.0), abs(1.0), log(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), (true ? float(mat4x3(injectionSwitch.x, sqrt(1.0), abs(1.0), log(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)) : _GLF_FUZZED(928.136)))) < injectionSwitch.y)) && (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))), (_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y)))), false || (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y))))))) && true))))))) - (0 >> _GLF_IDENTITY(int(3), int(3)))) : _GLF_IDENTITY(2, min(2, 2)))), _GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (false ? _GLF_FUZZED(_GLF_IDENTITY(int(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(6.8) : dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))))), _GLF_ZERO(0.0, injectionSwitch.x)))).y)) && (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((true), bool(bvec3((true), false, true))))), false, _GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(vec4(injectionSwitch, 0.0, 1.0))))).y))))) && true))))), 0 ^ (int(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(6.8) : dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))))), _GLF_ZERO(0.0, injectionSwitch.x)))).y)) && (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((true), bool(bvec3((true), false, true))))), false, _GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(vec4(injectionSwitch, 0.0, 1.0))))).y))))) && true)))))))) : _GLF_IDENTITY(2, min(2, 2)))), min(subgroup_local_id % _GLF_IDENTITY(2, (false ? _GLF_FUZZED(int(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(false, (false) || false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false || (! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), true && (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))), true, _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), true))))))), (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))) && true)), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), true && (bool(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y))))) && true)), true), false)), false)))))))))) : _GLF_IDENTITY(2, min(2, 2)))), subgroup_local_id % _GLF_IDENTITY(2, (false ? _GLF_FUZZED(int(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))) && (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)) && (true))), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true))))))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), bool(_GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), ! (! (bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), bool(_GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), ! (! (bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))))))))))), false, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (bool(bvec3(true, false, true))))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), false, false)))) && (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)) && (true))), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true))))))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), bool(_GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), ! (! (bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))))), ! (! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), bool(_GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), ! (! (bool(bool(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8335.2599)), float(injectionSwitch.x), bool(true))) : _GLF_FUZZED(-8.9))) < injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8335.2599)), float(injectionSwitch.x), bool(true))) : _GLF_FUZZED(-8.9))) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8335.2599)), float(injectionSwitch.x), bool(true))) : _GLF_FUZZED(-8.9))) < injectionSwitch.y)) && true)))) && (true)))))))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), true)), (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), true))) || false))) && (true)), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) && (true))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true, true, true)), bool(bvec4(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true, true, true)), false, false, true))))))))))))))))), false, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (bool(bvec3(true, false, true)))))))))))) && true)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))) && (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)) && (true))), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true))))))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), bool(_GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), ! (! (bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), bool(_GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), ! (! (bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))))))))))), false, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (bool(bvec3(true, false, true))))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), false, false)))) && (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)) && (true))), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true))))))), (bool(bvec4(! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), bool(_GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), ! (! (bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))))), ! (! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), bool(_GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), ! (! (bool(bool(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8335.2599)), float(injectionSwitch.x), bool(true))) : _GLF_FUZZED(-8.9))) < injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8335.2599)), float(injectionSwitch.x), bool(true))) : _GLF_FUZZED(-8.9))) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8335.2599)), float(injectionSwitch.x), bool(true))) : _GLF_FUZZED(-8.9))) < injectionSwitch.y)) && true)))) && (true)))))))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), true)), (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), true))) || false))) && (true)), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) && (true))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true, true, true)), bool(bvec4(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true, true, true)), false, false, true))))))))))))))))), false, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (bool(bvec3(true, false, true)))))))))))) && true))))))) : _GLF_IDENTITY(2, min(2, 2)))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(next_virtual_gid) : subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(next_virtual_gid) : subgroup_local_id))) >> 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) / 1u), ~ (~ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) / 1u)))), next_virtual_gid))) : _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_id)))) ^ 0u))), (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(next_virtual_gid) : subgroup_local_id))) - _GLF_IDENTITY(0u, (0u) / (0u ^ 1u))))) % 2)))))) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(ivec4(37206, -75219, 54565, -77205).r))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (false ? _GLF_FUZZED(atomicMin(num_workgroup, virtual_gid)) : subgroup_local_id % 2)), min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2)), subgroup_local_id % _GLF_IDENTITY(2, ~ (~ (2))), subgroup_local_id % _GLF_IDENTITY(2, 1 * (2))))), ((_GLF_IDENTITY(subgroup_local_id % 2, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ (subgroup_local_id))) >> 0u)) + _GLF_IDENTITY(0u, min(0u, 0u))) % 2, min(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY(0, _GLF_IDENTITY(0, ~ (~ (0))) + (0)) ^ (2)), subgroup_local_id % 2)), subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), _GLF_IDENTITY((_GLF_IDENTITY(2, (2) - 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | ((_GLF_IDENTITY(2, (2) - 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) % 2, max(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), (2) | (2)), (subgroup_local_id % _GLF_IDENTITY(2, min(2, 2))) ^ 0u), subgroup_local_id % 2)))))) * _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), max(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (max(1u, 1u)))), _GLF_IDENTITY(1u, 0u + (1u)))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))))))) == 0)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       subgroupAll(false);
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       _GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (0 | 0) ^ (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, int(ivec2(64, 0))))))), 2), ~ (~ (read = atomicLoad(buf[virtual_gid], 4, 64, 2))));
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     for(int _injected_loop_counter = (_GLF_IDENTITY(0, max(0, 0)) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), clamp(int(5), _GLF_IDENTITY(int(5), (int(5)) | 0), int(5))), int(5)), _GLF_IDENTITY((_GLF_IDENTITY(int(5), int(5))), (true ? (_GLF_IDENTITY(int(5), int(5))) : _GLF_FUZZED(-94677))) | 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true))))))))))
        {
         for(int _injected_loop_counter = ((0 & 44563) & 75232); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) != 1)) && true)))))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
      }
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(_GLF_IDENTITY(atan(-3.8, tan(5276.8733)), min(atan(-3.8, tan(5276.8733)), _GLF_IDENTITY(atan(-3.8, tan(5276.8733)), float(vec2(atan(-3.8, tan(5276.8733)), 1.0)))))) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1351.0734)), float(injectionSwitch.y), bool(true)))))))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true) && _GLF_IDENTITY(true, (true) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                barrier();
               barrier();
              }
             barrier();
            }
           subgroupAll(false);
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-6.3, (-6.3) + 0.0)) : injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(5382.7361)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(int(ivec2(1 << _GLF_IDENTITY(int(0), int(0)), 0)), int(ivec3(_GLF_IDENTITY(int(ivec2(1 << _GLF_IDENTITY(int(0), int(0)), 0)), min(int(ivec2(1 << _GLF_IDENTITY(int(0), int(0)), 0)), int(ivec2(1 << _GLF_IDENTITY(int(0), int(0)), 0)))), 1, (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), ~ (~ (int(2))))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(int(0), (int(0)) << 0))), _GLF_IDENTITY(int(0), (int(0)) | 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(int(0), (int(0)) << 0))), _GLF_IDENTITY(int(0), (int(0)) | 0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(int(0), (int(0)) << 0))), _GLF_IDENTITY(int(0), (int(0)) | 0))), int(ivec3(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(int(0), (int(0)) << 0))), _GLF_IDENTITY(int(0), (int(0)) | 0))), 1, 0))))))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), (int(0)) / 1)) | (_GLF_IDENTITY(int(0), _GLF_IDENTITY((int(0)) << 0, ((int(0)) << 0) | 0)))), _GLF_IDENTITY(int(0), (int(0)) | 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), 0 ^ (int(0)))) ^ (0 & (~ -46942))), (int(0)) | (_GLF_IDENTITY(int(0), (int(0)) << 0))), _GLF_IDENTITY(int(0), (int(0)) | 0))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * 1.0) > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(int(0), (int(0)) << 0))), _GLF_IDENTITY(int(0), (int(0)) | 0))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(int(0), (int(0)) << 0))), _GLF_IDENTITY(int(0), (int(0)) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(int(0), (int(0)) << 0))), _GLF_IDENTITY(int(0), (int(0)) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(int(0), (int(0)) << 0))), _GLF_IDENTITY(int(0), (int(0)) | 0))))), int(ivec3(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(int(0), (int(0)) << 0))), _GLF_IDENTITY(int(0), (int(0)) | 0))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(int(0), (int(0)) << 0))), _GLF_IDENTITY(int(0), (int(0)) | 0)))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, 0))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(int(0), (int(0)) << 0))), int(0))), _GLF_IDENTITY((true ? ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) << 0), max(_GLF_IDENTITY(int(0), (int(0)) << 0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) << 0), int(ivec2(_GLF_IDENTITY(int(0), (int(0)) << 0), 1))))))), int(0))) : _GLF_FUZZED(84761)), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((true ? ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) << 0), max(_GLF_IDENTITY(int(0), (int(0)) << 0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) << 0), int(ivec2(_GLF_IDENTITY(int(0), (int(0)) << 0), 1))))))), int(0))) : _GLF_FUZZED(84761)), ((true ? ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) << 0), max(_GLF_IDENTITY(int(0), (int(0)) << 0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) << 0), int(ivec2(_GLF_IDENTITY(int(0), (int(0)) << 0), 1))))))), int(0))) : _GLF_FUZZED(84761))) / 1), 0, 0, 1), min(ivec4(_GLF_IDENTITY((true ? ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) << 0), max(_GLF_IDENTITY(int(0), (int(0)) << 0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) << 0), int(ivec2(_GLF_IDENTITY(int(0), (int(0)) << 0), 1))))))), int(0))) : _GLF_FUZZED(84761)), ((true ? ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) << 0), max(_GLF_IDENTITY(int(0), (int(0)) << 0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) << 0), int(ivec2(_GLF_IDENTITY(int(0), (int(0)) << 0), 1))))))), int(0))) : _GLF_FUZZED(84761))) / 1), 0, 0, 1), ivec4(_GLF_IDENTITY((true ? ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) << 0), max(_GLF_IDENTITY(int(0), (int(0)) << 0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) << 0), int(ivec2(_GLF_IDENTITY(int(0), (int(0)) << 0), 1))))))), int(0))) : _GLF_FUZZED(84761)), ((true ? ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) << 0), max(_GLF_IDENTITY(int(0), (int(0)) << 0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) << 0), int(ivec2(_GLF_IDENTITY(int(0), (int(0)) << 0), 1))))))), int(0))) : _GLF_FUZZED(84761))) / 1), 0, 0, 1))))))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))), ((1 << _GLF_IDENTITY(int(0), int(0)))) << 0) >> _GLF_IDENTITY(int(0), int(0))))), (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter) | 0, ((_injected_loop_counter) | 0) + 0)) != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), (true ? _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, (0) << 0), 0)), (false ? _GLF_FUZZED(-19635) : int(ivec2(0, 0)))) : _GLF_FUZZED(_injected_loop_counter))))), (_GLF_IDENTITY(int(0), _GLF_IDENTITY((int(0)), ((int(0))) << 0) | 0)) >> 0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))))) || false))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1, (-1115 & 0) ^ (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | 0))))) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) | 0)))), (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0) != (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), (true ? _GLF_IDENTITY(int(ivec2(0, 0)), (false ? _GLF_FUZZED(-19635) : int(ivec2(0, 0)))) : _GLF_FUZZED(_injected_loop_counter))))), (_GLF_IDENTITY(int(0), (int(0)) | 0)) >> 0), int(0))) >> _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(2617))), (int(0)) | _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), (true ? _GLF_IDENTITY(int(ivec2(0, 0)), (false ? _GLF_FUZZED(-19635) : int(ivec2(0, 0)))) : _GLF_FUZZED(_injected_loop_counter)))), (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), (true ? _GLF_IDENTITY(int(ivec2(0, 0)), (false ? _GLF_FUZZED(-19635) : int(ivec2(0, 0)))) : _GLF_FUZZED(_injected_loop_counter))))) | (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), (true ? _GLF_IDENTITY(int(ivec2(0, 0)), (false ? _GLF_FUZZED(-19635) : int(ivec2(0, 0)))) : _GLF_FUZZED(_injected_loop_counter))))))), (_GLF_IDENTITY(int(0), _GLF_IDENTITY((int(0)) | 0, max((int(0)) | 0, (int(0)) | 0)))) >> 0), int(0))) >> _GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(_injected_loop_counter) : (1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), (true ? _GLF_IDENTITY(int(ivec2(0, 0)), (false ? _GLF_FUZZED(-19635) : int(ivec2(0, 0)))) : _GLF_FUZZED(_injected_loop_counter))))), _GLF_IDENTITY((_GLF_IDENTITY(int(0), (int(0)) | 0)), clamp((_GLF_IDENTITY(int(0), (int(0)) | 0)), _GLF_IDENTITY((_GLF_IDENTITY(int(0), (int(0)) | 0)), 0 | ((_GLF_IDENTITY(int(0), (int(0)) | 0)))), (_GLF_IDENTITY(int(0), (int(0)) | 0)))) >> 0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) | (_GLF_IDENTITY(int(0), int(0))))))), max((_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(2617))), (int(0)) | _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), (true ? _GLF_IDENTITY(int(ivec2(0, 0)), (false ? _GLF_FUZZED(-19635) : int(ivec2(0, 0)))) : _GLF_FUZZED(_injected_loop_counter)))), (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), (true ? _GLF_IDENTITY(int(ivec2(0, 0)), (false ? _GLF_FUZZED(-19635) : int(ivec2(0, 0)))) : _GLF_FUZZED(_injected_loop_counter))))) | (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), (true ? _GLF_IDENTITY(int(ivec2(0, 0)), (false ? _GLF_FUZZED(-19635) : int(ivec2(0, 0)))) : _GLF_FUZZED(_injected_loop_counter))))))), (_GLF_IDENTITY(int(0), _GLF_IDENTITY((int(0)) | 0, max((int(0)) | 0, (int(0)) | 0)))) >> 0), int(0))) >> _GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(_injected_loop_counter) : (1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), (true ? _GLF_IDENTITY(int(ivec2(0, 0)), (false ? _GLF_FUZZED(-19635) : int(ivec2(0, 0)))) : _GLF_FUZZED(_injected_loop_counter))))), _GLF_IDENTITY((_GLF_IDENTITY(int(0), (int(0)) | 0)), clamp((_GLF_IDENTITY(int(0), (int(0)) | 0)), _GLF_IDENTITY((_GLF_IDENTITY(int(0), (int(0)) | 0)), 0 | ((_GLF_IDENTITY(int(0), (int(0)) | 0)))), (_GLF_IDENTITY(int(0), (int(0)) | 0)))) >> 0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) | (_GLF_IDENTITY(int(0), int(0))))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(2617))), (int(0)) | _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), (true ? _GLF_IDENTITY(int(ivec2(0, 0)), (false ? _GLF_FUZZED(-19635) : int(ivec2(0, 0)))) : _GLF_FUZZED(_injected_loop_counter)))), (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), (true ? _GLF_IDENTITY(int(ivec2(0, 0)), (false ? _GLF_FUZZED(-19635) : int(ivec2(0, 0)))) : _GLF_FUZZED(_injected_loop_counter))))) | (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), (true ? _GLF_IDENTITY(int(ivec2(0, 0)), (false ? _GLF_FUZZED(-19635) : int(ivec2(0, 0)))) : _GLF_FUZZED(_injected_loop_counter))))))), (_GLF_IDENTITY(int(0), _GLF_IDENTITY((int(0)) | 0, max((int(0)) | 0, (int(0)) | 0)))) >> 0), int(0))) >> _GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(_injected_loop_counter) : (1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), (true ? _GLF_IDENTITY(int(ivec2(0, 0)), (false ? _GLF_FUZZED(-19635) : int(ivec2(0, 0)))) : _GLF_FUZZED(_injected_loop_counter))))), _GLF_IDENTITY((_GLF_IDENTITY(int(0), (int(0)) | 0)), clamp((_GLF_IDENTITY(int(0), (int(0)) | 0)), _GLF_IDENTITY((_GLF_IDENTITY(int(0), (int(0)) | 0)), 0 | ((_GLF_IDENTITY(int(0), (int(0)) | 0)))), (_GLF_IDENTITY(int(0), (int(0)) | 0)))) >> 0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) | (_GLF_IDENTITY(int(0), int(0))))))))) | 0))))) || false))), true, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))))); _injected_loop_counter ++)
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0)), (true ? float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0)) : _GLF_FUZZED(-25.72)))) > injectionSwitch.y))));
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           read = atomicLoad(buf[virtual_gid], 4, 64, 2);
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.5)), float(1.0), bool(true))), injectionSwitch.y))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
              {
               barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))))) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])), _GLF_FUZZED(922.701)), vec2(_GLF_FUZZED(-527.233), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])), _GLF_FUZZED(922.701)), vec2(_GLF_FUZZED(-527.233), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])), _GLF_FUZZED(922.701)), vec2(_GLF_FUZZED(-527.233), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])), _GLF_FUZZED(922.701)), vec2(_GLF_FUZZED(-527.233), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])), _GLF_FUZZED(922.701)), vec2(_GLF_FUZZED(-527.233), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])), _GLF_FUZZED(922.701)), vec2(_GLF_FUZZED(-527.233), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))), float(_GLF_FUZZED(-64.05)), bool(false))))))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])), _GLF_FUZZED(922.701)), vec2(_GLF_FUZZED(-527.233), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])), _GLF_FUZZED(922.701)), vec2(_GLF_FUZZED(-527.233), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])), _GLF_FUZZED(922.701)), vec2(_GLF_FUZZED(-527.233), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])), _GLF_FUZZED(922.701)), vec2(_GLF_FUZZED(-527.233), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])), _GLF_FUZZED(922.701)), vec2(_GLF_FUZZED(-527.233), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])), _GLF_FUZZED(922.701)), vec2(_GLF_FUZZED(-527.233), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))), float(_GLF_FUZZED(-64.05)), bool(false))))))), true, false)))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), true, true)), bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY((bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), mat2x3(mat3x4(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)))))) > injectionSwitch.y)), true, true)))), bool(_GLF_IDENTITY(bool((bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), mat2x3(mat3x4(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)))))) > injectionSwitch.y)), true, true))))), false || (bool((bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), mat2x3(mat3x4(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)))))) > injectionSwitch.y)), true, true))))))))) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6680.9002) : injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), true, true)), bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY((bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), mat2x3(mat3x4(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)))))) > injectionSwitch.y)), true, true)))), bool(_GLF_IDENTITY(bool((bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), mat2x3(mat3x4(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)))))) > injectionSwitch.y)), true, true))))), false || (bool((bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), mat2x3(mat3x4(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)))))) > injectionSwitch.y)), true, true))))))))) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6680.9002) : injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), false))))) && true))))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)))))))), false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_FALSE(false), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_IF_FALSE(false), false), false, false))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_FALSE(false), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_IF_FALSE(false), false), false, false))))), true)))))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
          barrier();
        }
      }
    }
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))], read, _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, min(4, 4)))))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(4, _GLF_IDENTITY((4) | (_GLF_IDENTITY(4, min(4, 4))), max((4) | (_GLF_IDENTITY(4, min(4, 4))), (4) | (_GLF_IDENTITY(4, min(4, 4)))))))), (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) >> 0) | (4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) + 0))), (4) | (_GLF_IDENTITY(4, min(4, 4))))))) | (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, min(4, 4)))))))))), _GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (_GLF_IDENTITY(4, _GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), (_GLF_IDENTITY((4), _GLF_IDENTITY(((4)), (((4))) << _GLF_IDENTITY(0, (0) ^ (-4692 & 0))) + 0)) / 1), (4), (4))) ^ 0)) - 0)) | _GLF_IDENTITY(0, min(0, 0))));
 if(_GLF_DEAD(false))
  barrier();
}
