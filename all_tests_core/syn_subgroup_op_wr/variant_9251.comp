#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_19 {
 vec4 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_20 {
 _GLF_struct_19 _f0;
 uint num_workgroup;
 mat2x3 _f1;
} ;

struct _GLF_struct_17 {
 bool _f0;
 bvec4 _f1;
 ivec3 _f2;
 int _f3;
 mat4 _f4;
} ;

struct _GLF_struct_16 {
 mat3x4 _f0;
 mat2 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_18 {
 _GLF_struct_16 _f0;
 mat2 _f1;
 uvec4 _f2;
 _GLF_struct_17 _f3;
} ;

struct _GLF_struct_14 {
 bvec4 _f0;
 mat2x3 _f1;
 vec2 _f2;
 bool _f3;
 bool _f4;
 bvec2 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_15 {
 _GLF_struct_14 _f0;
} ;

struct _GLF_struct_21 {
 bvec2 _f0;
 _GLF_struct_15 _f1;
 mat2x4 _f2;
 mat4x2 _f3;
 _GLF_struct_18 _f4;
 _GLF_struct_20 _f5;
} ;

struct _GLF_struct_11 {
 mat2x4 _f0;
 vec4 _f1;
 mat3x2 _f2;
 mat4x2 _f3;
 float _f4;
} ;

struct _GLF_struct_12 {
 uvec4 _f0;
 bvec2 _f1;
 _GLF_struct_11 _f2;
} ;

struct _GLF_struct_9 {
 ivec3 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_8 {
 int _f0;
 mat3 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_7 {
 mat4 _f0;
 vec4 _f1;
 uvec2 _f2;
 mat2 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_10 {
 _GLF_struct_7 _f0;
 _GLF_struct_8 _f1;
 ivec3 _f2;
 _GLF_struct_9 _f3;
} ;

struct _GLF_struct_5 {
 uvec4 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_6 {
 bvec3 _f0;
 uvec2 _f1;
 _GLF_struct_5 _f2;
} ;

struct _GLF_struct_3 {
 bvec2 _f0;
} ;

struct _GLF_struct_2 {
 vec3 _f0;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
 mat4 _f1;
 vec3 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_0 {
 mat4 _f0;
 uint _f1;
 uvec4 _f2;
 uvec4 _f3;
 mat2 _f4;
 vec3 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_4 {
 mat2 _f0;
 mat4x3 _f1;
 uvec4 _f2;
 _GLF_struct_0 _f3;
 _GLF_struct_1 _f4;
 _GLF_struct_2 _f5;
 _GLF_struct_3 _f6;
} ;

struct _GLF_struct_13 {
 _GLF_struct_4 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_10 _f2;
 _GLF_struct_12 _f3;
 uint subgroup_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (1.0) * 1.0)) * (injectionSwitch)).y))))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, float(mat4x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, 1.0, round(length(normalize(abs(vec2(1.0, 1.0))))), abs(1.0), 0.0, 1.0, sin(0.0), 0.0)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec3(bvec4(bvec3(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(_GLF_struct_4(mat2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)))))), mat4x3(1.0), uvec4(1u), _GLF_struct_0(mat4(_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, length(0.0), abs(1.0), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0)))), 1u, uvec4(1u), _GLF_IDENTITY(uvec4(1u), ~ (~ (uvec4(1u)))), mat2(1.0), vec3(1.0), uvec3(_GLF_IDENTITY(1u, (1u) >> 0u))), _GLF_struct_1(mat3x2(1.0), mat4(1.0), vec3(1.0), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u)))), _GLF_struct_2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, abs(1.0)), (false ? _GLF_FUZZED(mat2x4(-887.995, -560.302, -56.80, 4.1, 8649.2196, 40.35, 0.4, -2.6)) : mat2x4(1.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, abs(1.0)))))), clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7645.8769)), bool(false))), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, abs(1.0)), (false ? _GLF_FUZZED(mat2x4(-887.995, -560.302, -56.80, 4.1, 8649.2196, 40.35, 0.4, -2.6)) : mat2x4(1.0, tan(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), abs(1.0)))))), clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7645.8769)), bool(false))), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) / 1.0))), _GLF_struct_3(bvec2(true))), _GLF_struct_6(bvec3(true), uvec2(1u), _GLF_struct_5(uvec4(1u), uvec4(_GLF_IDENTITY(1u, 0u | (1u))))), _GLF_struct_10(_GLF_struct_7(mat4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), min(vec4(1.0), _GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0))))) / vec4(1.0, 1.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), min(vec4(1.0), _GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0))))) / vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), min(vec4(1.0), _GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0))))) / vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), min(vec4(1.0), _GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0))))) / vec4(1.0, 1.0, 1.0, 1.0)))), uvec2(1u), mat2(1.0), vec2(_GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_struct_8(1, mat3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))), mat4x2(1.0)), ivec3(1), _GLF_struct_9(ivec3(1), vec2(1.0))), _GLF_struct_12(uvec4(1u), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))), true, true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))), true))), _GLF_struct_11(mat2x4(1.0), vec4(1.0), mat3x2(1.0), mat4x2(1.0), 1.0)), gl_SubgroupID);
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(true, true && (true)) && (! (true))))), true, false))))))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
    return;
   return;
  }
 _GLF_struct_21 _GLF_struct_replacement_21 = _GLF_struct_21(bvec2(true), _GLF_struct_15(_GLF_struct_14(bvec4(true), mat2x3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), vec2(1.0), true, true, bvec2(true), mat3x4(1.0))), mat2x4(1.0), mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8983.2802)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), float(mat2(1.0, 1.0, 1.0, 0.0)))), _GLF_struct_18(_GLF_struct_16(mat3x4(1.0), mat2(1.0), bvec2(_GLF_IDENTITY(true, false || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true), ! (! _GLF_IDENTITY(((true)), bool(bvec4(_GLF_IDENTITY(((true)), ! (! (((true))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY((true), ! (! ((true))))) || false), (_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) && true)) && true)) || false)))), mat2(1.0), uvec4(1u), _GLF_struct_17(true, bvec4(true), _GLF_IDENTITY(ivec3(1), ~ _GLF_IDENTITY((~ (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, ((-77354 | 2096) & 0), 0, 1)), clamp(int(ivec4(1, ((-77354 | 2096) & 0), 0, 1)), int(ivec4(1, ((-77354 | 2096) & 0), 0, 1)), int(ivec4(1, ((-77354 | 2096) & 0), 0, 1))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(1, ((-77354 | 2096) & 0), 0, 1)), ~ (~ (int(ivec4(1, ((-77354 | 2096) & 0), 0, 1))))), clamp(int(ivec4(1, ((-77354 | 2096) & 0), 0, 1)), int(ivec4(1, ((-77354 | 2096) & 0), 0, 1)), int(ivec4(1, ((-77354 | 2096) & 0), 0, 1))))), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, ((-77354 | 2096) & 0), 0, 1)), clamp(int(ivec4(1, ((-77354 | 2096) & 0), 0, 1)), int(ivec4(1, ((-77354 | 2096) & 0), 0, 1)), int(ivec4(1, ((-77354 | 2096) & 0), 0, 1))))) : _GLF_FUZZED(26833)))) - 0)))), (true ? _GLF_IDENTITY((~ (ivec3(1))), _GLF_IDENTITY(((_GLF_IDENTITY(~ (ivec3(1)), (false ? _GLF_FUZZED(ivec3(-23461, -74533, -45180)) : ~ (ivec3(1)))))) / _GLF_IDENTITY(ivec3(1, 1, 1), (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71554) : _GLF_IDENTITY(1, (1) | 0))), 1, 1), ~ (~ (ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71554) : _GLF_IDENTITY(1, (1) | 0))), 1, 1)))), _GLF_IDENTITY((true ? ivec3(1, 1, 1) : _GLF_IDENTITY(_GLF_FUZZED(ivec3(-50560, 80220, -44098)), (_GLF_FUZZED(ivec3(-50560, 80220, -44098))) ^ ivec3(0, 0, 0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((true ? ivec3(1, 1, 1) : _GLF_IDENTITY(_GLF_FUZZED(ivec3(-50560, 80220, -44098)), (_GLF_FUZZED(ivec3(-50560, 80220, -44098))) ^ ivec3(0, 0, 0))), min((true ? ivec3(1, 1, 1) : _GLF_IDENTITY(_GLF_FUZZED(ivec3(-50560, 80220, -44098)), (_GLF_FUZZED(ivec3(-50560, 80220, -44098))) ^ ivec3(0, 0, 0))), (true ? ivec3(1, 1, 1) : _GLF_IDENTITY(_GLF_FUZZED(ivec3(-50560, 80220, -44098)), (_GLF_FUZZED(ivec3(-50560, 80220, -44098))) ^ ivec3(0, 0, 0))))), ivec3(ivec3(_GLF_IDENTITY((true ? ivec3(1, 1, 1) : _GLF_IDENTITY(_GLF_FUZZED(ivec3(-50560, 80220, -44098)), (_GLF_FUZZED(ivec3(-50560, 80220, -44098))) ^ ivec3(0, 0, 0))), min((true ? ivec3(1, 1, 1) : _GLF_IDENTITY(_GLF_FUZZED(ivec3(-50560, 80220, -44098)), (_GLF_FUZZED(ivec3(-50560, 80220, -44098))) ^ ivec3(0, 0, 0))), (true ? ivec3(1, 1, 1) : _GLF_IDENTITY(_GLF_FUZZED(ivec3(-50560, 80220, -44098)), (_GLF_FUZZED(ivec3(-50560, 80220, -44098))) ^ ivec3(0, 0, 0)))))))), (true ? ivec3(1, 1, 1) : _GLF_IDENTITY(_GLF_FUZZED(ivec3(-50560, 80220, -44098)), (_GLF_FUZZED(ivec3(-50560, 80220, -44098))) ^ ivec3(0, 0, 0))), (true ? ivec3(1, 1, 1) : _GLF_IDENTITY(_GLF_FUZZED(ivec3(-50560, 80220, -44098)), (_GLF_FUZZED(ivec3(-50560, 80220, -44098))) ^ ivec3(0, 0, 0))))))) | (ivec3(1, 1, 1))), (false ? _GLF_FUZZED(ivec3(11582, _GLF_IDENTITY(42185, (false ? _GLF_FUZZED(-57971) : 42185)), -17519)) : _GLF_IDENTITY(((~ (ivec3(1)))) / ivec3(1, 1, 1), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((~ (ivec3(1))), (false ? _GLF_FUZZED(ivec3(155, 95857, _GLF_IDENTITY(44961, min(44961, _GLF_IDENTITY(44961, (44961) >> 0))))) : (~ (ivec3(1)))))) / ivec3(1, 1, 1), ivec3(ivec3((_GLF_IDENTITY((~ (ivec3(1))), (false ? _GLF_FUZZED(ivec3(155, 95857, _GLF_IDENTITY(44961, min(44961, _GLF_IDENTITY(44961, (44961) >> 0))))) : (~ (ivec3(1)))))) / ivec3(1, 1, 1))))), clamp((_GLF_IDENTITY((_GLF_IDENTITY((~ (ivec3(1))), (false ? _GLF_FUZZED(ivec3(155, 95857, _GLF_IDENTITY(44961, min(44961, _GLF_IDENTITY(44961, (44961) >> 0))))) : (~ (ivec3(1)))))) / ivec3(1, 1, 1), ivec3(ivec3((_GLF_IDENTITY((~ (ivec3(1))), (false ? _GLF_FUZZED(ivec3(155, 95857, _GLF_IDENTITY(44961, min(44961, _GLF_IDENTITY(44961, (44961) >> 0))))) : (~ (ivec3(1)))))) / ivec3(1, 1, 1))))), (_GLF_IDENTITY((_GLF_IDENTITY((~ (ivec3(1))), (false ? _GLF_FUZZED(ivec3(155, 95857, _GLF_IDENTITY(44961, min(44961, _GLF_IDENTITY(44961, (44961) >> 0))))) : (~ (ivec3(1)))))) / ivec3(1, 1, 1), ivec3(ivec3((_GLF_IDENTITY((~ (ivec3(1))), (false ? _GLF_FUZZED(ivec3(155, 95857, _GLF_IDENTITY(44961, min(44961, _GLF_IDENTITY(44961, (44961) >> 0))))) : (~ (ivec3(1)))))) / ivec3(1, 1, 1))))), (_GLF_IDENTITY((_GLF_IDENTITY((~ (ivec3(1))), (false ? _GLF_FUZZED(ivec3(155, 95857, _GLF_IDENTITY(44961, min(44961, _GLF_IDENTITY(44961, (44961) >> 0))))) : (~ (ivec3(1)))))) / ivec3(1, 1, 1), ivec3(ivec3((_GLF_IDENTITY((~ (ivec3(1))), (false ? _GLF_FUZZED(ivec3(155, 95857, _GLF_IDENTITY(44961, min(44961, _GLF_IDENTITY(44961, (44961) >> 0))))) : (~ (ivec3(1)))))) / ivec3(1, 1, 1))))))) - ivec3(0, 0, 0))))) : _GLF_FUZZED(clamp(ivec3(-27659, -14965, -16482), ivec3(_GLF_IDENTITY(-62654, (-62654) | 0), _GLF_IDENTITY(-50196, max(-50196, -50196)), -67068), ivec3(-30108, 77949, -34079)))))), 1, mat4(1.0))), _GLF_struct_20(_GLF_struct_19(vec4(1.0), vec3(1.0)), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])).x, mat2x3(1.0)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec2(true, true))), true))), false)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))))) || false)), (false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (workgroup_base) : _GLF_FUZZED(workgroup_size))))) + _GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_id, (_GLF_struct_replacement_13.subgroup_id) | (_GLF_struct_replacement_13.subgroup_id)) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_id * subgroup_size, (true ? _GLF_struct_replacement_13.subgroup_id * subgroup_size : _GLF_FUZZED(39908u))), _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_13.subgroup_id * subgroup_size, uint(uvec2(workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_id, clamp(_GLF_struct_replacement_13.subgroup_id, _GLF_struct_replacement_13.subgroup_id, _GLF_struct_replacement_13.subgroup_id)) * subgroup_size, 0u))), workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY((_GLF_struct_replacement_13.subgroup_id * subgroup_size) >> 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(161560u) : (_GLF_struct_replacement_13.subgroup_id * subgroup_size) >> 0u)))))), (max(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_13.subgroup_id * subgroup_size, uint(uvec2(workgroup_base + _GLF_struct_replacement_13.subgroup_id * subgroup_size, 0u))), workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_id * subgroup_size, (_GLF_struct_replacement_13.subgroup_id * subgroup_size) >> 0u))))) ^ 0u), (_GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_13.subgroup_id * subgroup_size, uint(uvec2(workgroup_base + _GLF_struct_replacement_13.subgroup_id * subgroup_size, 0u))), workgroup_base + _GLF_struct_replacement_13.subgroup_id * subgroup_size), (true ? max(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_13.subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_size)), uint(uvec2(workgroup_base + _GLF_struct_replacement_13.subgroup_id * subgroup_size, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(0u, 0u + (0u))))))), workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_id, max(_GLF_struct_replacement_13.subgroup_id, _GLF_struct_replacement_13.subgroup_id)) * subgroup_size) : _GLF_FUZZED((max(subgroup_local_id, 22832u) ^ _GLF_IDENTITY(uvec3(143642u, 93039u, 12145u), (uvec3(143642u, 93039u, 12145u)) >> uvec3(0u, 0u, 0u))[0]))))) >> 0u)) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) % subgroup_size), clamp(((subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)));
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 + (4))) | (4)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, 0 | _GLF_IDENTITY((64), clamp((64), (64), (64)))), 1 * (_GLF_IDENTITY(64, 0 ^ _GLF_IDENTITY((64), (_GLF_IDENTITY((64), 0 ^ (_GLF_IDENTITY((64), ~ (~ ((64))))))) ^ 0)))), _GLF_IDENTITY((false ? _GLF_FUZZED(-69030) : 64), max((false ? _GLF_FUZZED(-69030) : 64), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-69030) : 64, min(false ? _GLF_FUZZED(-69030) : 64, _GLF_IDENTITY(false ? _GLF_FUZZED(-69030) : 64, (false ? _GLF_FUZZED(-69030) : 64) >> 0)))), _GLF_IDENTITY(min((false ? _GLF_FUZZED(-69030) : 64), (false ? _GLF_FUZZED(-69030) : 64)), 0 ^ (min((false ? _GLF_FUZZED(-69030) : 64), (false ? _GLF_FUZZED(-69030) : 64)))))))), 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((true ? virtual_gid : _GLF_FUZZED((_GLF_IDENTITY(workgroup_id, (workgroup_id) * (1u | 1u)) ^ subgroup_local_id))), ((true ? virtual_gid : _GLF_FUZZED((workgroup_id ^ subgroup_local_id)))) + 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u) : _GLF_FUZZED((workgroup_id ^ subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u) : _GLF_FUZZED((workgroup_id ^ subgroup_local_id)))), (_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u) : _GLF_FUZZED((workgroup_id ^ subgroup_local_id))))) | 0u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u) : _GLF_FUZZED((workgroup_id ^ subgroup_local_id)))), (_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u) : _GLF_FUZZED((workgroup_id ^ subgroup_local_id))))) | 0u)))) / 1u)) >> 0u)], read, 4, 64, _GLF_IDENTITY(4, int(int(4))));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))) + vec2(0.0, 0.0))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(((false) && true), ! (_GLF_IDENTITY(! (((false) && true)), (! (((false) && true))) || false))) && true)), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), ! (! (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(((false) && true), ! (_GLF_IDENTITY(! (((false) && true)), (! (((false) && true))) || false))) && true)), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))) || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))) && true)), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))) && true))) && true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, sqrt(1.0), abs(1.0), 1.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (false ? _GLF_FUZZED(25.73) : dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))))))) || false))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) && true))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + sqrt(vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)))).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-0.7) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-40.94) : injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), clamp(float(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), float(mat3x2(float(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), 0.0, 1.0, 1.0, 0.0, 0.0))), float(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0))))))), true, true, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(5.8) : clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), true, true, false)), false, true), bvec3(bvec4(bvec3(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), (true ? float(injectionSwitch.y) : _GLF_FUZZED(4.9))), float(injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), true, true, false)), false, true), true)))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), true)), false || (bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), true))), true, false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), ! (! (! (false)))), false, false)))))))))), false || (bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), _GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))))], read, _GLF_IDENTITY(4, max(4, 4)), 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)) || false, ! (_GLF_IDENTITY(! ((true) || false), bool(bvec3(_GLF_IDENTITY(! ((true) || false), _GLF_IDENTITY((! ((true) || false)) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true), ! (! ((true))))), (! (_GLF_IDENTITY((true), ! (! ((true)))))) || false))))) || false), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((true), false || ((true))) || false, (_GLF_IDENTITY((true), false || ((true))) || false) && true))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec2((true), false)), false || (_GLF_IDENTITY(bool(bvec2((true), false)), _GLF_IDENTITY((bool(bvec2((true), false))) && true, true && ((bool(bvec2((true), false))) && true)))))), _GLF_IDENTITY(false || ((true)), (false || ((true))) && true)) || false))) || false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true), ! (! ((true))))), (! (_GLF_IDENTITY((true), ! (! ((true)))))) || false))))) || false), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((true), false || ((true))) || false, (_GLF_IDENTITY((true), false || ((true))) || false) && true))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec2((true), false)), false || (_GLF_IDENTITY(bool(bvec2((true), false)), _GLF_IDENTITY((bool(bvec2((true), false))) && true, true && ((bool(bvec2((true), false))) && true)))))), _GLF_IDENTITY(false || ((true)), (false || ((true))) && true)) || false))) || false)))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true), ! (! ((true))))), (! (_GLF_IDENTITY((true), ! (! ((true)))))) || false))))) || false), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((true), false || ((true))) || false, (_GLF_IDENTITY((true), false || ((true))) || false) && true))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec2((true), false)), false || (_GLF_IDENTITY(bool(bvec2((true), false)), _GLF_IDENTITY((bool(bvec2((true), false))) && true, true && ((bool(bvec2((true), false))) && true)))))), _GLF_IDENTITY(false || ((true)), (false || ((true))) && true)) || false))) || false)))), false)), ! (! (bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true), ! (! ((true))))), (! (_GLF_IDENTITY((true), ! (! ((true)))))) || false))))) || false), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((true), false || ((true))) || false, (_GLF_IDENTITY((true), false || ((true))) || false) && true))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec2((true), false)), false || (_GLF_IDENTITY(bool(bvec2((true), false)), _GLF_IDENTITY((bool(bvec2((true), false))) && true, true && ((bool(bvec2((true), false))) && true)))))), _GLF_IDENTITY(false || ((true)), (false || ((true))) && true)) || false))) || false)))), false)))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true), ! (! ((true))))), (! (_GLF_IDENTITY((true), ! (! ((true)))))) || false))))) || false), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((true), false || ((true))) || false, (_GLF_IDENTITY((true), false || ((true))) || false) && true))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec2((true), false)), false || (_GLF_IDENTITY(bool(bvec2((true), false)), _GLF_IDENTITY((bool(bvec2((true), false))) && true, true && ((bool(bvec2((true), false))) && true)))))), _GLF_IDENTITY(false || ((true)), (false || ((true))) && true)) || false))) || false)))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true), ! (! ((true))))), (! (_GLF_IDENTITY((true), ! (! ((true)))))) || false))))) || false), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((true), false || ((true))) || false, (_GLF_IDENTITY((true), false || ((true))) || false) && true))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec2((true), false)), false || (_GLF_IDENTITY(bool(bvec2((true), false)), _GLF_IDENTITY((bool(bvec2((true), false))) && true, true && ((bool(bvec2((true), false))) && true)))))), _GLF_IDENTITY(false || ((true)), (false || ((true))) && true)) || false))) || false)))), false)), ! (! (bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true), ! (! ((true))))), (! (_GLF_IDENTITY((true), ! (! ((true)))))) || false))))) || false), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((true), false || ((true))) || false, (_GLF_IDENTITY((true), false || ((true))) || false) && true))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec2((true), false)), false || (_GLF_IDENTITY(bool(bvec2((true), false)), _GLF_IDENTITY((bool(bvec2((true), false))) && true, true && ((bool(bvec2((true), false))) && true)))))), _GLF_IDENTITY(false || ((true)), (false || ((true))) && true)) || false))) || false)))), false)))))), true), true, true))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), true, true)))))));
   if(_GLF_DEAD(false))
    return;
  }
}
