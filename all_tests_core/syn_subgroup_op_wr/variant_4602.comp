#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true)))))))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true)))))))), false, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))), false, false, true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), 1.0, abs(0.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x)) > injectionSwitch.y)))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))) || false)))))), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true)), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! ((bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)))))), false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(! ((bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)))))), false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(! ((bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)))))), false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))) && true) && (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) - 0.0))))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-9.8), clamp(_GLF_FUZZED(-9.8), _GLF_FUZZED(-9.8), _GLF_IDENTITY(_GLF_FUZZED(-9.8), min(_GLF_IDENTITY(_GLF_FUZZED(-9.8), mix(float(_GLF_FUZZED(-9.8)), float(_GLF_FUZZED(9.0)), bool(false))), _GLF_FUZZED(-9.8)))))), bool(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bvec2(! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true)), (_GLF_IDENTITY(bool(bvec2(! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true)), (bool(bvec2(! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true))) && true)) && true)))))))))))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false, false)))), false, true)), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)))))), false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))).x, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(954.821, -4484.0243)))).x > injectionSwitch.y)) && true)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-9.8)), min(float(_GLF_FUZZED(-9.8)), _GLF_IDENTITY(float(_GLF_FUZZED(-9.8)), (_GLF_IDENTITY(float(_GLF_FUZZED(-9.8)), float(mat3(float(_GLF_FUZZED(-9.8)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))) / 1.0))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) || false)))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true)), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)))))))))))), false, true))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))))))), ((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true)), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)))))))))))), false, true))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))))))))) && true), _GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y), float(_GLF_FUZZED(-9.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))))))), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.8), _GLF_FUZZED(-3941.6933)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-6984.9339)), float((injectionSwitch)[0]), bool(true))), (injectionSwitch)[1]), bvec2(true, true))).y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), false || (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true))))), false, true)), _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-752.054))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), false, false)))))), false, true))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! ((bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)))))), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-9.8, max(-9.8, -9.8)))), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))), (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.8)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.8)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true, false))))))))))))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.8)), bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y)))))))))))))))) && true))))))))))) || false)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), true, false, false)))))) || false)), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 1.0)), (false ? _GLF_FUZZED(-9.1) : float(vec2(injectionSwitch.y, 1.0))))))), (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))) || false))), false, false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))) || false, false || ((false) || false))))), bool(bvec3((false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), false, false))))))) || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, exp(0.0), 1.0, sin(0.0), 0.0, sqrt(0.0), 1.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), abs(1.0), 1.0, tan(0.0), 1.0)), (float(mat4x3(injectionSwitch.x, exp(0.0), 1.0, sin(0.0), 0.0, sqrt(0.0), 1.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), abs(1.0), 1.0, tan(0.0), 1.0))) - 0.0)) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, exp(0.0), 1.0, sin(0.0), 0.0, sqrt(0.0), 1.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), abs(1.0), 1.0, tan(0.0), 1.0)), (float(mat4x3(injectionSwitch.x, exp(0.0), 1.0, sin(0.0), 0.0, sqrt(0.0), 1.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), abs(1.0), 1.0, tan(0.0), 1.0))) - 0.0)) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, exp(0.0), 1.0, sin(0.0), 0.0, sqrt(0.0), 1.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), abs(1.0), 1.0, tan(0.0), 1.0)), (float(mat4x3(injectionSwitch.x, exp(0.0), 1.0, sin(0.0), 0.0, sqrt(0.0), 1.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), abs(1.0), 1.0, tan(0.0), 1.0))) - 0.0)) > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, exp(0.0), 1.0, sin(0.0), 0.0, sqrt(0.0), 1.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), abs(1.0), 1.0, tan(0.0), 1.0)), (float(mat4x3(injectionSwitch.x, exp(0.0), 1.0, sin(0.0), 0.0, sqrt(0.0), 1.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), abs(1.0), 1.0, tan(0.0), 1.0))) - 0.0)) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, exp(0.0), 1.0, sin(0.0), 0.0, sqrt(0.0), 1.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), abs(1.0), 1.0, tan(0.0), 1.0)), (float(mat4x3(injectionSwitch.x, exp(0.0), 1.0, sin(0.0), 0.0, sqrt(0.0), 1.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), abs(1.0), 1.0, tan(0.0), 1.0))) - 0.0)) > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-946.441), _GLF_FUZZED(_GLF_IDENTITY(-9.8, (-9.8) - abs(0.0)))), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, int(ivec3(1, 1, 0)))]), bvec2(true, true))) : _GLF_FUZZED(vec2(8.4, 8974.8990)))).y), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))), mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), vec2(mat3x4((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), 1.0, 1.0, cos(0.0), 1.0, log(sqrt(1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0))))) / vec2(1.0, 1.0)).x > injectionSwitch.y)) || false), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-946.441), _GLF_FUZZED(_GLF_IDENTITY(-9.8, (-9.8) - abs(0.0)))), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, int(ivec3(1, 1, 0)))]), bvec2(true, true))) : _GLF_FUZZED(vec2(8.4, _GLF_IDENTITY(8974.8990, clamp(_GLF_IDENTITY(8974.8990, min(8974.8990, 8974.8990)), 8974.8990, _GLF_IDENTITY(8974.8990, mix(float(8974.8990), float(_GLF_FUZZED(-723.485)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))).y), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))), mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), vec2(mat3x4((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), 1.0, 1.0, cos(0.0), 1.0, log(sqrt(1.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8.2))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), 0.0, 0.0, 1.0, 0.0))))) / vec2(1.0, 1.0)).x > injectionSwitch.y)) || false)) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch)) : _GLF_FUZZED(vec2(54.17, -655.944)))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), (false ? _GLF_FUZZED(0.4) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.5), _GLF_FUZZED((-354.318 * 67.85))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bool(false))) || (false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bool(false))) || (false))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bool(false))) || (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bool(false))) || (false))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bool(false))) || (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))))))))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4.2) : _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x)) < injectionSwitch.y)), false))))), true, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))), false))), true, true), true)), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(false, (false) && true)))), true, true), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(false, (false) && true)))), true, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(false, (false) && true)))), true, true), true))))), true))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bool(bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), true, true), true)), true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))), false))), true, true), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(false, (false) && true)))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(false, (false) && true)))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(false, (false) && true)))), true, true), true))), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, true)))), true))), true)), true)))))), false)))), true))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7.8, -1.5)) : injectionSwitch))) + abs(vec2(0.0, 0.0))).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec2((! (false)), true), bvec2(bvec3(bvec2((! (false)), true), false))))))) || false)))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)) * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(1u, ~ (~ (1u))) * (workgroup_id));
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))) && true))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(0u | (subgroup_local_id), clamp(_GLF_IDENTITY(0u | (subgroup_local_id), (0u | (subgroup_local_id)) >> 0u), _GLF_IDENTITY(0u | (subgroup_local_id), max(0u | (subgroup_local_id), 0u | (subgroup_local_id))), 0u | (subgroup_local_id))), (_GLF_IDENTITY(0u | (subgroup_local_id), (0u | (subgroup_local_id)) | (0u | (subgroup_local_id)))) | 0u)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u), 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u)))) / 1u)) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(0u | (subgroup_local_id), clamp(_GLF_IDENTITY(0u | (subgroup_local_id), (0u | (subgroup_local_id)) >> 0u), _GLF_IDENTITY(0u | (subgroup_local_id), max(0u | (subgroup_local_id), 0u | (subgroup_local_id))), 0u | (subgroup_local_id))), (_GLF_IDENTITY(0u | (subgroup_local_id), (0u | (subgroup_local_id)) | (0u | (subgroup_local_id)))) | 0u)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u), 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u)))) / 1u)) >> 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(0u | (subgroup_local_id), clamp(_GLF_IDENTITY(0u | (subgroup_local_id), (0u | (subgroup_local_id)) >> 0u), _GLF_IDENTITY(0u | (subgroup_local_id), max(0u | (subgroup_local_id), 0u | (subgroup_local_id))), 0u | (subgroup_local_id))), (_GLF_IDENTITY(0u | (subgroup_local_id), (0u | (subgroup_local_id)) | (0u | (subgroup_local_id)))) | 0u)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u), 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u)))) / 1u)) >> 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(0u | (subgroup_local_id), clamp(_GLF_IDENTITY(0u | (subgroup_local_id), (0u | (subgroup_local_id)) >> 0u), _GLF_IDENTITY(0u | (subgroup_local_id), max(0u | (subgroup_local_id), 0u | (subgroup_local_id))), 0u | (subgroup_local_id))), (_GLF_IDENTITY(0u | (subgroup_local_id), (0u | (subgroup_local_id)) | (0u | (subgroup_local_id)))) | 0u)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u), 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u)))) / 1u)) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(0u | (subgroup_local_id), clamp(_GLF_IDENTITY(0u | (subgroup_local_id), (0u | (subgroup_local_id)) >> 0u), _GLF_IDENTITY(0u | (subgroup_local_id), max(0u | (subgroup_local_id), 0u | (subgroup_local_id))), 0u | (subgroup_local_id))), (_GLF_IDENTITY(0u | (subgroup_local_id), (0u | (subgroup_local_id)) | (0u | (subgroup_local_id)))) | 0u)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u), 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u)))) / 1u)) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(0u | (subgroup_local_id), clamp(_GLF_IDENTITY(0u | (subgroup_local_id), (0u | (subgroup_local_id)) >> 0u), _GLF_IDENTITY(0u | (subgroup_local_id), max(0u | (subgroup_local_id), 0u | (subgroup_local_id))), 0u | (subgroup_local_id))), (_GLF_IDENTITY(0u | (subgroup_local_id), (0u | (subgroup_local_id)) | (0u | (subgroup_local_id)))) | 0u)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u), 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u)))) / 1u)) >> 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(0u | (subgroup_local_id), clamp(_GLF_IDENTITY(0u | (subgroup_local_id), (0u | (subgroup_local_id)) >> 0u), _GLF_IDENTITY(0u | (subgroup_local_id), max(0u | (subgroup_local_id), 0u | (subgroup_local_id))), 0u | (subgroup_local_id))), (_GLF_IDENTITY(0u | (subgroup_local_id), (0u | (subgroup_local_id)) | (0u | (subgroup_local_id)))) | 0u)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u), 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u)))) / 1u)) >> 0u)))))))) % subgroup_size), 0u ^ (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, ~ (~ (0u))) | _GLF_IDENTITY((subgroup_local_id), uint(_GLF_IDENTITY(uvec3((subgroup_local_id), 1u, _GLF_IDENTITY(1u, min(1u, 1u))), max(uvec3((subgroup_local_id), _GLF_IDENTITY(1u, (1u) / 1u), 1u), uvec3((subgroup_local_id), 1u, 1u)))))) + 1, (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 0)), 0 | (int(ivec2(1, 0))))))), _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) + 0u)) >> 0u)) % subgroup_size))), min(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (subgroup_local_id), (0u | (subgroup_local_id)) | (_GLF_IDENTITY(0u | (subgroup_local_id), _GLF_IDENTITY(uint(uvec2(0u | (subgroup_local_id), _GLF_IDENTITY(1u, ~ (~ (1u))))), max(uint(uvec2(0u | (subgroup_local_id), 1u)), uint(uvec2(0u | (subgroup_local_id), 1u)))))))) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u)) >> 0u)) % subgroup_size), 0u ^ (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)) + 1, _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))) + 0u), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u)) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), 0u + (_GLF_FUZZED(virtual_gid))) : subgroup_local_id)) + 1, _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))) + 0u), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u)) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u)))))))))) >> 0u)) % subgroup_size))), workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (subgroup_local_id), 0u ^ (0u | (subgroup_local_id)))) + 1, (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id + 1))) + 0u)) >> 0u)) % subgroup_size), 0u ^ (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), (subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1))))) << 0u)) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), (subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1))))) | (subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))))))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0), (ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0)) / ivec3(1, 1, 1))))))), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0), (ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0)) / ivec3(1, 1, 1))))))), 0u + ((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0), (ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0)) / ivec3(1, 1, 1)))))))))) | (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0), (ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0)) / ivec3(1, 1, 1))))))), min(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0), (ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0)) / ivec3(1, 1, 1))))))), ((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0), (ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0)) / ivec3(1, 1, 1)))))))) | 0u), (subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0), (ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0)) / ivec3(1, 1, 1))))))))))) + 0u)) >> 0u)) % subgroup_size), min(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), (subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1))))) << 0u)) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), (subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1))))) | (subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))))))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0), (ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0)) / ivec3(1, 1, 1))))))), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0), (ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0)) / ivec3(1, 1, 1))))))), 0u + ((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0), (ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0)) / ivec3(1, 1, 1)))))))))) | (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0), (ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0)) / ivec3(1, 1, 1))))))), min(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0), (ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0)) / ivec3(1, 1, 1))))))), ((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0), (ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0)) / ivec3(1, 1, 1)))))))) | 0u), (subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0), (ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0)) / ivec3(1, 1, 1))))))))))) + 0u)) >> 0u)) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), (subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1))))) << 0u)) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), (subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1))))) | (subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))))))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0), (ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0)) / ivec3(1, 1, 1))))))), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0), (ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0)) / ivec3(1, 1, 1))))))), 0u + ((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0), (ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0)) / ivec3(1, 1, 1)))))))))) | (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0), (ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0)) / ivec3(1, 1, 1))))))), min(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0), (ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0)) / ivec3(1, 1, 1))))))), ((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0), (ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0)) / ivec3(1, 1, 1)))))))) | 0u), (subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0), (ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0)) / ivec3(1, 1, 1))))))))))) + 0u)) >> 0u)) % subgroup_size), (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), (subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1))))) << 0u)) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), (subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1))))) | (subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))))))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0), (ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0)) / ivec3(1, 1, 1))))))), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0), (ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0)) / ivec3(1, 1, 1))))))), 0u + ((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0), (ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0)) / ivec3(1, 1, 1)))))))))) | (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0), (ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0)) / ivec3(1, 1, 1))))))), min(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0), (ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0)) / ivec3(1, 1, 1))))))), ((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0), (ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0)) / ivec3(1, 1, 1)))))))) | 0u), (subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0), (ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(0), int(0))), 0)) / ivec3(1, 1, 1))))))))))) + 0u)) >> 0u)) % subgroup_size)) - 0u)))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7662.3635), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-1130.0953 * 6.8))), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7662.3635), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((_GLF_IDENTITY(-1130.0953 * 6.8, mix(float(_GLF_IDENTITY(-1130.0953 * 6.8, max(-1130.0953 * 6.8, -1130.0953 * 6.8))), float(_GLF_FUZZED(-77.57)), bool(false)))))), bvec2(true, false)))) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-86.50))), injectionSwitch[1])).y, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) * _GLF_IDENTITY(1.0, max(1.0, 1.0))))), _GLF_IDENTITY(1.0, length(0.0) + (1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), (vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), clamp(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(determinant(mat4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0), mat2x4(_GLF_IDENTITY(mat3x4(mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), transpose(transpose(mat3x4(mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))))), max(float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0), mat2x4(_GLF_IDENTITY(mat3x4(mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), transpose(transpose(mat3x4(mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))))), float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0), mat2x4(_GLF_IDENTITY(mat3x4(mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), transpose(transpose(mat3x4(mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))))))))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), max(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))))))) * round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), mix(vec2((normalize(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-6466.5381)), vec2(_GLF_FUZZED(9438.8744), (normalize(vec2(1.0, 1.0)))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) / vec3(1.0, 1.0, 1.0))), (float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, log(1.0), 0.0), mix(vec3(_GLF_FUZZED(vec2(4.3, -2124.2656).g), _GLF_FUZZED(3114.7180), (vec3(injectionSwitch.y, log(1.0), 0.0))[2]), vec3((vec3(injectionSwitch.y, log(1.0), 0.0))[0], _GLF_IDENTITY((vec3(injectionSwitch.y, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0))[1], clamp((vec3(injectionSwitch.y, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0))[1], (vec3(injectionSwitch.y, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0))[1], (vec3(injectionSwitch.y, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0))[1])), _GLF_FUZZED(-90.33)), bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, false)), bool(bvec4(bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, false)), true, false, true))))))))), true, false))))), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.8)), float(1.0), bool(true)))) * sqrt(1.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(ldexp(1991.5120, -27053))))))))), (vec3(injectionSwitch.y, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) ? _GLF_FUZZED(57.24) : 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(8.5))))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)))) / vec3(1.0, 1.0, 1.0)))) - _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(4.4)))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false)))))))), false))), true, false, false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y)))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], clamp(_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], buf[virtual_gid])), buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) * 1u))), _GLF_IDENTITY(uint(uvec3(buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))], 0u, 1u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 1u)), ~ (~ _GLF_IDENTITY((uint(uvec3(buf[virtual_gid], 0u, 1u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((uint(uvec3(buf[virtual_gid], 0u, 1u))), clamp((uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY((uint(uvec3(buf[virtual_gid], 0u, 1u))), clamp((uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY((uint(uvec3(buf[virtual_gid], 0u, 1u))), clamp((uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))))), (_GLF_IDENTITY((uint(uvec3(buf[virtual_gid], 0u, 1u))), clamp((uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u)))))) | 0u)) << 0u)) - 0u)))))), 1u, 1u, 1u)), (uint(uvec4(_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 1u)), ~ (~ _GLF_IDENTITY((uint(uvec3(buf[virtual_gid], 0u, 1u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((uint(uvec3(buf[virtual_gid], 0u, 1u))), clamp((uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY((uint(uvec3(buf[virtual_gid], 0u, 1u))), clamp((uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY((uint(uvec3(buf[virtual_gid], 0u, 1u))), clamp((uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))))), (_GLF_IDENTITY((uint(uvec3(buf[virtual_gid], 0u, 1u))), clamp((uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u)))))) | 0u)) << 0u)) - 0u)))))), 1u, 1u, 1u))) | (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 1u)), ~ (~ _GLF_IDENTITY((uint(uvec3(buf[virtual_gid], 0u, 1u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((uint(uvec3(buf[virtual_gid], 0u, 1u))), clamp((uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY((uint(uvec3(buf[virtual_gid], 0u, 1u))), clamp((uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY((uint(uvec3(buf[virtual_gid], 0u, 1u))), clamp((uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))))), (_GLF_IDENTITY((uint(uvec3(buf[virtual_gid], 0u, 1u))), clamp((uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u)))))) | 0u)) << 0u)) - 0u)))))), 1u, 1u, 1u)), max(uint(uvec4(_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 1u)), ~ (~ _GLF_IDENTITY((uint(uvec3(buf[virtual_gid], 0u, 1u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((uint(uvec3(buf[virtual_gid], 0u, 1u))), clamp((uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY((uint(uvec3(buf[virtual_gid], 0u, 1u))), clamp((uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY((uint(uvec3(buf[virtual_gid], 0u, 1u))), clamp((uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))))), (_GLF_IDENTITY((uint(uvec3(buf[virtual_gid], 0u, 1u))), clamp((uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u)))))) | 0u)) << 0u)) - 0u)))))), 1u, 1u, 1u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 1u)), ~ (~ _GLF_IDENTITY((uint(uvec3(buf[virtual_gid], 0u, 1u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((uint(uvec3(buf[virtual_gid], 0u, 1u))), clamp((uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY((uint(uvec3(buf[virtual_gid], 0u, 1u))), clamp((uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY((uint(uvec3(buf[virtual_gid], 0u, 1u))), clamp((uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))))), (_GLF_IDENTITY((uint(uvec3(buf[virtual_gid], 0u, 1u))), clamp((uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u)))))) | 0u)) << 0u)) - 0u)))))), 1u, 1u, 1u)), uint(uvec2(uint(uvec4(_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 1u)), ~ (~ _GLF_IDENTITY((uint(uvec3(buf[virtual_gid], 0u, 1u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((uint(uvec3(buf[virtual_gid], 0u, 1u))), clamp((uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY((uint(uvec3(buf[virtual_gid], 0u, 1u))), clamp((uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY((uint(uvec3(buf[virtual_gid], 0u, 1u))), clamp((uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))))), (_GLF_IDENTITY((uint(uvec3(buf[virtual_gid], 0u, 1u))), clamp((uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u))), (uint(uvec3(buf[virtual_gid], 0u, 1u)))))) | 0u)) << 0u)) - 0u)))))), 1u, 1u, 1u)), 0u))))))))), _GLF_IDENTITY(4, _GLF_IDENTITY(0 + (4), int(ivec3(_GLF_IDENTITY(0 + (4), (0 + (4)) | (0 + (4))), int(_GLF_ZERO(0.0, injectionSwitch.x)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))))), _GLF_IDENTITY(64, 0 ^ (64)), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true)))))) || false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-0.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y) || false)))), false))))))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && _GLF_IDENTITY(true, true && (true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))) && true)) || false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))) / 1.0))))), injectionSwitch.x))) - abs(0.0)) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false)))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(1.0), 1.0, 1.0, 1.0)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.4, 0.4)))).y)))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.6)), bool(false)))), float(_GLF_FUZZED(-3.3)), bool(false))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(float(false))), bool(false))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (1.0) / sqrt(1.0)), 1.0)).x > injectionSwitch.y))))))), false, false, true)))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - _GLF_IDENTITY(sqrt(tan(vec2(0.0, 0.0))), (_GLF_IDENTITY(sqrt(tan(vec2(0.0, 0.0))), max(sqrt(tan(vec2(0.0, 0.0))), sqrt(tan(vec2(0.0, 0.0)))))) / vec2(1.0, 1.0))).y), float(_GLF_FUZZED(float(false))), bool(false)))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, sin(0.0), 1.0, 1.0, 0.0, 1.0), mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x4(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, sin(0.0), 1.0, 1.0, 0.0, 1.0)))), min(vec2(_GLF_IDENTITY(mat2x4(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, sin(0.0), 1.0, 1.0, 0.0, 1.0), mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x4(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, sin(0.0), 1.0, 1.0, 0.0, 1.0)))), vec2(_GLF_IDENTITY(mat2x4(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, sin(0.0), 1.0, 1.0, 0.0, 1.0), mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x4(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, sin(0.0), 1.0, 1.0, 0.0, 1.0))))))))) - sqrt(tan(vec2(0.0, 0.0)))).y), float(_GLF_FUZZED(float(false))), bool(false))))) && true)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))))), false, false, true))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false)))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (4) | (4)), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true), true, true)))), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
}
