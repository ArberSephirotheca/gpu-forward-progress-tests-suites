#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false)), ! (! (bool(bvec3(false, false, false)))))) && true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false))), bool(bvec2((bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! _GLF_IDENTITY((bool(bvec3(false, false, false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec3(false, false, false))), ! (_GLF_IDENTITY(! ((bool(bvec3(false, false, false)))), bool(bvec3(! ((bool(bvec3(false, false, false)))), true, false))))), false || ((bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY((bool(bvec3(false, false, false))), false || ((bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))))))) && true))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(! (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && true))), false)), bvec2(bvec3(bvec2(bvec2(! (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))))))) && true))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec4(bvec3(bvec3(false, false, false)), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) && true))), false), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && true))), false)))), true))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && true))), (! (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), false), false)))), ! (! (bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), false, _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(409.640)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, sqrt(0.0), 1.0), (true ? vec4(injectionSwitch, sqrt(0.0), 1.0) : _GLF_FUZZED(vec4(-8.2, -1.5, -9.3, 8791.6521))))), (vec2(_GLF_IDENTITY(vec4(injectionSwitch, sqrt(0.0), 1.0), (true ? vec4(injectionSwitch, sqrt(0.0), 1.0) : _GLF_FUZZED(vec4(-8.2, -1.5, -9.3, 8791.6521)))))) / vec2(1.0, 1.0))).y)))))))))))) && true)))) && true), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(false, false, false))), ! (_GLF_IDENTITY(! (! (bool(bvec3(false, false, false)))), false || (! (! (bool(bvec3(false, false, false))))))))))) && true))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(! (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && true))), false)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && true))), false))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), ! (! _GLF_IDENTITY((bool(bvec3(false, false, false))), ((bool(bvec3(false, false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), (bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))) && true)))))), bvec2(bvec4(bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), false || (bool(bvec3(false, false, false)))), (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(bvec3(false, false, false)))))) && true))), false))), true, true))), false)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), ! (! _GLF_IDENTITY((bool(bvec3(false, false, false))), ((bool(bvec3(false, false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), (bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))) && true)))))), bvec2(bvec4(bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), false || (bool(bvec3(false, false, false)))), (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(bvec3(false, false, false)))))) && true))), false))), true, true))), false)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), ! (! _GLF_IDENTITY((bool(bvec3(false, false, false))), ((bool(bvec3(false, false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), (bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))) && true)))))), bvec2(bvec4(bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), false || (bool(bvec3(false, false, false)))), (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(bvec3(false, false, false)))))) && true))), false))), true, true))), false)), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), ! (! _GLF_IDENTITY((bool(bvec3(false, false, false))), ((bool(bvec3(false, false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), (bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))) && true)))))), bvec2(bvec4(bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), false || (bool(bvec3(false, false, false)))), (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(bvec3(false, false, false)))))) && true))), false))), true, true))), false)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), ! (! _GLF_IDENTITY((bool(bvec3(false, false, false))), ((bool(bvec3(false, false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), (bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))) && true)))))), bvec2(bvec4(bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), false || (bool(bvec3(false, false, false)))), (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(bvec3(false, false, false)))))) && true))), false))), true, true))), false)), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && _GLF_IDENTITY(true, bool(bool(true))), ((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && true) && true)))), false), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && true)), true && (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && true))))), false)))), true))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && true))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), bool(bool((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))))))))) && true))), false)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))), ! (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))))))) && true))), false))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && true)), (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec4(bool(bvec4((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), bvec2(bvec4(bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && true))), false))), true, true))), false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && true)), (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec4(bool(bvec4((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), bvec2(bvec4(bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && true))), false))), true, true))), false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && true)), (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec4(bool(bvec4((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), bvec2(bvec4(bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && true))), false))), true, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && true)), (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec4(bool(bvec4((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), bvec2(bvec4(bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && true))), false))), true, true))), false), false))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && true)), (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec4(bool(bvec4((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), bvec2(bvec4(bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && true))), false))), true, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && true)), (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec4(bool(bvec4((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), bvec2(bvec4(bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && true))), false))), true, true))), false), false))))), true)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && true)), (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec4(bool(bvec4((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), bvec2(bvec4(bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && true))), false))), true, true))), false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && true)), (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec4(bool(bvec4((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), bvec2(bvec4(bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && true))), false))), true, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && true)), (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec4(bool(bvec4((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), bvec2(bvec4(bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && true))), false))), true, true))), false), false))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && true)), (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec4(bool(bvec4((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), bvec2(bvec4(bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && true))), false))), true, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && true)), (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec4(bool(bvec4((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), bvec2(bvec4(bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && true))), false))), true, true))), false), false))))), true)))))), false)))))))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(false, false, false))), ! (! (! (bool(bvec3(false, false, false))))))))) && true)) && true) && true)))), false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(false, false, false))), ! (! (! (bool(bvec3(false, false, false))))))))) && true)) && true) && true)))), false), bvec2(bvec3(bvec2(! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(false, false, false))), ! (! (! (bool(bvec3(false, false, false))))))))) && true)) && true) && true)))), false), true))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(false, false, false))), ! (! (! (bool(bvec3(false, false, false))))))))) && true)) && true) && true)))), false), bvec2(bvec3(bvec2(! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(false, false, false))), ! (! (! (bool(bvec3(false, false, false))))))))) && true)) && true) && true)))), false), true))))), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(false, false, false))), ! (! (! (bool(bvec3(false, false, false))))))))) && true)) && true) && true)))), false), bvec2(bvec3(bvec2(! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(false, false, false))), ! (! (! (bool(bvec3(false, false, false))))))))) && true)) && true) && true)))), false), true))))), false, true)), true))))), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))) && true))), false)))), true))))), true)))))) || false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec2(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y)), false)), true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(vec2(2.3, 1.5))))) + vec2(0.0, 0.0)), injectionSwitch)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(1.0), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))) + ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0])), _GLF_FUZZED(29.92)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(-87.82))), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), (true && (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false))))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) / (1u ^ 0u)))), (gl_WorkGroupSize.x) << 0u), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(0u, 0u, 0u) + (uvec3(gl_WorkGroupSize)))), uvec3(0u, 0u, 0u) + (uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(0u, 0u, 0u) + (uvec3(gl_WorkGroupSize))))))).x, gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), 0u + (_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(0u, 0u, 0u) + (uvec3(gl_WorkGroupSize)))), uvec3(0u, 0u, 0u) + (uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(0u, 0u, 0u) + (uvec3(gl_WorkGroupSize))))))).x, gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))), (gl_WorkGroupSize.x) << 0u), 0u), clamp(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x)), _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (_GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (true ? min(gl_WorkGroupSize.x, gl_WorkGroupSize.x) : _GLF_FUZZED(subgroup_size)))) | (_GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), clamp(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))))), (gl_WorkGroupSize.x) << 0u), 0u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))))), (gl_WorkGroupSize.x) << _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))), 0u), _GLF_IDENTITY((true ? uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), (gl_WorkGroupSize.x) << 0u), 0u) : _GLF_FUZZED(uvec2(184881u, 140739u))), (false ? _GLF_FUZZED(uvec2(74418u, 114661u)) : (true ? uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), (gl_WorkGroupSize.x) << 0u), 0u) : _GLF_FUZZED(uvec2(184881u, 140739u)))))), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) | (min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)).x)))), _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), (gl_WorkGroupSize.x) << 0u), 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0u, (0u) | 0u))), uint(uint(_GLF_IDENTITY((~ (_GLF_IDENTITY(0u, (0u) | 0u))), 1u * ((~ (_GLF_IDENTITY(0u, (0u) | 0u))))))))))) * (gl_WorkGroupSize)).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) * uvec3(1u, 1u, 1u)) / uvec3(1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u)), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | 0u)))))) * (gl_WorkGroupSize)).x) / 1u), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))) + uvec3(_GLF_IDENTITY(0u, 0u + (0u)), 0u, 0u)))).x) | (gl_WorkGroupSize.x))) | 0u), gl_WorkGroupSize.x));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), false, false, true))))))))))), true))), false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7478.3663, -11.71)) : injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7478.3663, -11.71)) : injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, true))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(uvec4(170448u, _GLF_IDENTITY(182859u, (182859u) << 0u), 14429u, _GLF_IDENTITY(150153u, (150153u) - 0u)).x))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), 0u ^ (uint(6u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) / 1u) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)) << 0u)))) % _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))))))));
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, (0 | 0), int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(ivec3(1, (0 | 0), int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec3(1, (0 | 0), int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), injectionSwitch.x))), ivec3(_GLF_IDENTITY(1, (1) >> 0), (0 | 0), int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (int(_GLF_IDENTITY(ivec3(1, (0 | 0), int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(ivec3(1, (0 | 0), int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec3(1, (_GLF_IDENTITY(0 | 0, min(0 | 0, 0 | 0))), int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec3(1, (0 | 0), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | (int(_GLF_ZERO(0.0, injectionSwitch.x))))))))) << 0), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, (0 | 0), int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(ivec3(1, (0 | 0), int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec3(1, (0 | 0), int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec3(1, (0 | 0), int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (int(_GLF_IDENTITY(ivec3(1, (0 | 0), int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(ivec3(1, (0 | 0), int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec3(1, (0 | 0), int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec3(1, (0 | 0), int(_GLF_ZERO(0.0, injectionSwitch.x))))))) << 0)) ^ 0))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(min(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)], (false ? _GLF_FUZZED(workgroup_id) : buf[virtual_gid])), _GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid]))), (min(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)], (false ? _GLF_FUZZED(workgroup_id) : buf[virtual_gid])), _GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])))) | (min(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)], (false ? _GLF_FUZZED(workgroup_id) : buf[virtual_gid])), _GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])))))), 4, 64, _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (true ? ~ (0) : _GLF_FUZZED(9905))))))));
 if(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1)) < subgroup_size)
  {
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (read), uint(uvec3(~ (read), 1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uvec4(4u, 0u, 1u, 0u), (uvec4(4u, 0u, 1u, 0u)) | (uvec4(4u, 0u, 1u, 0u)))))), uint(4u))))))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (read), uint(uvec3(~ (read), 1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 1u, 0u)))), uint(4u))))))), _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED((~ read)))) | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((read), ((read)) * uint(_GLF_ONE(1.0, injectionSwitch.y))), uint(uvec3(~ (read), 1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(_GLF_IDENTITY(4u, ~ (~ (4u))), 0u, 1u, 0u)))), uint(4u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (read), uint(uvec3(~ _GLF_IDENTITY((read), min((read), _GLF_IDENTITY((read), ~ (_GLF_IDENTITY(~ ((read)), min(~ ((read)), ~ ((read)))))))), 1u, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 1u, 0u)))), uint(4u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 1u, 0u)))), uint(4u))), ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 1u, 0u)))), uint(4u)))) << 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 1u, 0u)))), uint(4u))), ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 1u, 0u)))), uint(4u)))) << 0u)), (uint(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 1u, 0u)))), uint(4u))), ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 1u, 0u)))), uint(4u)))) << 0u))) | (uint(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 1u, 0u)))), uint(4u))), ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 1u, 0u)))), uint(4u)))) << 0u))))) | 0u)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 1u, 0u)))), uint(4u))), ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 1u, 0u)))), uint(4u)))) << 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 1u, 0u)))), uint(4u))), ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 1u, 0u)))), uint(4u)))) << 0u)), (uint(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 1u, 0u)))), uint(4u))), ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 1u, 0u)))), uint(4u)))) << 0u))) | (uint(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 1u, 0u)))), uint(4u))), ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 1u, 0u)))), uint(4u)))) << 0u))))) | 0u)), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 1u, 0u)))), uint(4u))), ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 1u, 0u)))), uint(4u)))) << 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 1u, 0u)))), uint(4u))), ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 1u, 0u)))), uint(4u)))) << 0u)), (uint(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 1u, 0u)))), uint(4u))), ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 1u, 0u)))), uint(4u)))) << 0u))) | (uint(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 1u, 0u)))), uint(4u))), ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 1u, 0u)))), uint(4u)))) << 0u))))) | 0u))) - 0u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 1u, 0u)))), uint(4u))), ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 1u, 0u)))), uint(4u)))) << 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 1u, 0u)))), uint(4u))), ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 1u, 0u)))), uint(4u)))) << 0u)), (uint(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 1u, 0u)))), uint(4u))), ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 1u, 0u)))), uint(4u)))) << 0u))) | (uint(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 1u, 0u)))), uint(4u))), ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 1u, 0u)))), uint(4u)))) << 0u))))) | 0u))))))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (read), uint(uvec3(~ (read), 1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 1u, 0u)))), uint(4u))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (read), uint(uvec3(~ (read), 1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 1u, 0u)))), uint(4u))))))), ((_GLF_IDENTITY(~ (read), uint(uvec3(~ (read), 1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 1u, 0u)))), uint(4u)))))))) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), (_GLF_IDENTITY(~ (read), uint(uvec3(~ (read), 1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 1u, 0u)))), uint(4u)))))))))) << 0u), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (read), uint(uvec3(~ (read), 1u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, _GLF_IDENTITY(0u, 0u ^ (0u)), 1u, 0u)))), max(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, _GLF_IDENTITY(0u, 0u ^ (0u)), 1u, 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, 0u | (4u)), uint(uvec4(4u, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (true ? _GLF_IDENTITY(0u, 0u ^ (0u)) : _GLF_FUZZED((subgroup_id | num_workgroup)))), _GLF_IDENTITY(0u, 0u ^ (0u)))), 1u, 0u)))))), uint(4u))))))), ((_GLF_IDENTITY(~ (read), uint(uvec3(~ (read), 1u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, _GLF_IDENTITY(0u, 0u ^ (0u)), 1u, 0u)))), max(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, _GLF_IDENTITY(0u, 0u ^ (0u)), 1u, 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, 0u | (4u)), uint(uvec4(4u, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (true ? _GLF_IDENTITY(0u, 0u ^ (0u)) : _GLF_FUZZED((subgroup_id | num_workgroup)))), _GLF_IDENTITY(0u, 0u ^ (0u)))), 1u, 0u)))))), uint(4u)))))))) | ((_GLF_IDENTITY(~ (read), uint(uvec3(~ (read), 1u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, _GLF_IDENTITY(0u, 0u ^ (0u)), 1u, 0u)))), max(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, _GLF_IDENTITY(0u, 0u ^ (0u)), 1u, 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, 0u | (4u)), uint(uvec4(4u, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (true ? _GLF_IDENTITY(0u, 0u ^ (0u)) : _GLF_FUZZED((subgroup_id | num_workgroup)))), _GLF_IDENTITY(0u, 0u ^ (0u)))), 1u, 0u)))))), uint(4u)))))))))) >> 0u)))), 0u | (read)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read, (true ? read : _GLF_FUZZED(127176u))), clamp(_GLF_IDENTITY(read, (true ? read : _GLF_FUZZED(127176u))), _GLF_IDENTITY(read, (true ? read : _GLF_FUZZED(127176u))), _GLF_IDENTITY(read, (true ? read : _GLF_FUZZED(127176u))))), 0u | (read))))), 4, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(38860) : 64)), _GLF_IDENTITY(4, (4) * 1));
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.8, -5.5)) : injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(log(vec2(-593.939, -788.002))))))).x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), _GLF_IDENTITY((bool(bvec4(false, false, false, false))), bool(bvec4((bool(bvec4(false, false, false, _GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    barrier();
  }
}
