#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), false || (_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), bool(bvec2(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, false, true))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), true && (_GLF_IDENTITY(false, (false) || false))), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(clamp(-416.171, -81.57, -29.14)) : injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), false || (bool(bvec3(_GLF_DEAD(false), false, true))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), true && ((_GLF_IDENTITY(false, ! (! (false))))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(0.7)), bvec2(false, false))) : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) * 1.0, max((_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) * 1.0, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) * 1.0))), true && (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, round(length(normalize(1.0))), sin(0.0), 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0, sqrt(1.0), 0.0, sin(0.0), 1.0))), injectionSwitch[1])).y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))))))) && true), false)))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))))))) && true), false))))))))) && true)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, cos(tan(0.0)) * (injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, cos(tan(0.0)) * (injectionSwitch.x)) > injectionSwitch.y)) && true))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7263.3642), _GLF_FUZZED((-3.5 + -1.8))), bvec2(false, false))).x > injectionSwitch.y)), false || ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), false || (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-7223.1932)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) + 0.0)), bool(true)))), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))) && true), _GLF_IDENTITY(false || (((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (false || _GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), bool(bvec2((((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true))))))))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))) && true))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(0.4))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, true))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), bool(bvec2(((injectionSwitch.x < injectionSwitch.y)), false))) && true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)))))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)))))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.9) : injectionSwitch.y))) * 1.0))), ! (! (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)))))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)))))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))))))))), clamp(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)))))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))))))))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)))))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))))))))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)))))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))))))))))))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + log(1.0))) / cos(0.0)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), true && (! (! (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(false, false || (false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), (vec4(1.0, 0.0, 0.0, 1.0)) + vec4(0.0, 0.0, 0.0, 0.0)), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)))))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)))))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), (dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))) - 0.0), dot(vec4(1.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 0.0), max(vec4(0.0, 1.0, 1.0, 0.0), vec4(0.0, 1.0, 1.0, 0.0)))))))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), float(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)))))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)), true, false))), true, false)))), true, false))))))), true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false))))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 1.0))), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 1.0)))))), true && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 1.0))), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 1.0)))))))))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) || _GLF_IDENTITY(false, ! (! (false)))))), true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), true && (bool(bool((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), false, false), false)))))))))))), bool(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), true && (bool(bool((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))) || false))))) || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), true && (bool((false))))))))))), true)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false, true))), false, true)))))) && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))), true)))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))) && true), ! (! (! (! (false)))))) || false))))), true)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false) && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-73.27)), _GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(false), false || (bool(false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(false), false || (bool(false))), true), false, false)))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))) || false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && true))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) / mat2(1.0, 1.0, 1.0, 1.0)) * ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) / mat2(1.0, 1.0, 1.0, 1.0)) * ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))[0], 0.0 + ((_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y))) / mat2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, cos(0.0), 0.0, 1.0))))), 1.0, 1.0)) * ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))[0])), _GLF_FUZZED(7064.8754)), vec2(_GLF_FUZZED(70.35), (_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) / mat2(1.0, 1.0, 1.0, 1.0)) * ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) ^ 0)])))))[1]), bvec2(false, true))))))).x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, (false) || false)))))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bvec3((false) || false, true, false), bvec3(bvec4(bvec3((false) || false, true, false), false)))))) && _GLF_IDENTITY(true, ! (! (true)))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bvec3((false) || false, true, false), bvec3(bvec4(bvec3((false) || false, true, false), false)))))) && _GLF_IDENTITY(true, ! (! (true)))))) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bvec3((false) || false, true, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))) || false, true, false), false)))))) && _GLF_IDENTITY(true, ! (! (true)))))) || false))) && true)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bvec3((false) || false, _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec4(bvec3((false) || false, true, false), false)))))) && _GLF_IDENTITY(true, ! (! (true)))))) || false)), false, true))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch.x, round(length(normalize(exp(vec2(0.0, 0.0))))), 0.0, 0.0, 0.0, 1.0, abs(1.0), 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0), (mat4(injectionSwitch.x, round(length(normalize(exp(vec2(0.0, 0.0))))), 0.0, 0.0, 0.0, 1.0, abs(1.0), 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), (mat4(injectionSwitch.x, round(length(normalize(exp(vec2(0.0, 0.0))))), 0.0, 0.0, 0.0, 1.0, abs(1.0), 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(-5.9) : float(_GLF_IDENTITY(mat4(injectionSwitch.x, round(length(normalize(exp(vec2(0.0, 0.0))))), 0.0, 0.0, 0.0, 1.0, abs(1.0), 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), (mat4(injectionSwitch.x, round(length(normalize(exp(vec2(0.0, 0.0))))), 0.0, 0.0, 0.0, 1.0, abs(1.0), 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) - vec2(0.0, 0.0)).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), max(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), 0.0, 0.0, 0.0, 0.0, abs(1.0), abs(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, 0.0)), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 0.0)), clamp(_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), max(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), 0.0, 0.0, 0.0, 0.0, abs(1.0), abs(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, 0.0)), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 0.0)), max(float(mat3x4(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), max(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), 0.0, 0.0, 0.0, 0.0, abs(1.0), abs(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, 0.0)), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 0.0)), float(mat3x4(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), max(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), 0.0, 0.0, 0.0, 0.0, abs(1.0), abs(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, 0.0)), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 0.0)))), float(mat3x4(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), max(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), 0.0, 0.0, 0.0, 0.0, abs(1.0), abs(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, 0.0)), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 0.0)), float(mat3x4(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), max(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), 0.0, 0.0, 0.0, 0.0, abs(1.0), abs(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, 0.0)), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 0.0))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1401.5968)), float(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, 1.0, log(1.0))))), bool(true)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(bool(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), true, false, true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[1], (false ? _GLF_FUZZED(-3799.0254) : injectionSwitch[1])))).y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 1.0, abs(1.0), 0.0)), (false ? _GLF_FUZZED(vec2(-3.9, 1312.1906)) : _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 1.0, abs(1.0), 0.0)), mix(vec2((vec2(mat2x3(injectionSwitch, 1.0, 1.0, abs(1.0), 0.0)))[0], (vec2(mat2x3(injectionSwitch, 1.0, 1.0, abs(1.0), 0.0)))[1]), vec2(_GLF_FUZZED(-3.1), _GLF_FUZZED(-380.322)), bvec2(false, false)))))).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(false)))) && true)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)) * (0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, abs(1.0), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), min(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 1.0, 1.0, 0.0, cos(0.0), 0.0, 1.0, 0.0), transpose(transpose(mat3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), min(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 1.0, 1.0, 0.0, cos(0.0), 0.0, 1.0, 0.0)))))))), dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) + vec3(0.0, 0.0, 0.0)), vec3(1.0, abs(1.0), 0.0))), 0.0, 1.0, 1.0, abs(1.0), 0.0, log(1.0), 1.0, 1.0))), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.0)), float(injectionSwitch.y), bool(true))), 1.0, 1.0)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))), false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)).x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (_GLF_IDENTITY(! (bool(false)), (! (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + log(1.0)), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), min(0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), max(injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), min(0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), min(0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), max(injectionSwitch.x, injectionSwitch.x))) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), min(0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))), bool(bvec4(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) || false)), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) || false)), false)))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), bool(bool(false)))))) && true)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6.0)), bool(false)))), float(_GLF_FUZZED(4258.3591)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), vec2(_GLF_FUZZED(-667.105), _GLF_FUZZED(-6.4)), bvec2(false, false))).x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) / 1.0)) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x, injectionSwitch.x)) / 1.0)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) - sqrt(0.0))) > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), (injectionSwitch.x < injectionSwitch.y))))))))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(min(injectionSwitch[0], injectionSwitch[0]), _GLF_IDENTITY(min(min(injectionSwitch[0], injectionSwitch[0]), min(injectionSwitch[0], injectionSwitch[0])), max(min(min(injectionSwitch[0], injectionSwitch[0]), min(injectionSwitch[0], injectionSwitch[0])), min(min(injectionSwitch[0], injectionSwitch[0]), min(injectionSwitch[0], injectionSwitch[0])))))), injectionSwitch[1])).x, (injectionSwitch.x) * 1.0), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, true, true, true))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1], (false ? _GLF_FUZZED(-75.39) : injectionSwitch[1])))).x, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat2(injectionSwitch[0], _GLF_IDENTITY(dot(vec3(1.0, abs(1.0), 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, abs(1.0), 1.0), vec3(0.0, 0.0, 0.0))), sin(0.0), abs(1.0)))), injectionSwitch[1]))[1], (false ? _GLF_FUZZED(-75.39) : injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) - 0)])))).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1], (false ? _GLF_FUZZED(-75.39) : injectionSwitch[1])))).x)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))[1])))).x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(148344u)), _GLF_FUZZED((443.502))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x, injectionSwitch.x)) > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), (false ? _GLF_FUZZED(748.648) : max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), (false ? _GLF_FUZZED(748.648) : max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)))) > injectionSwitch.y)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4595.9872), _GLF_FUZZED(-0.8)), vec2(_GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), vec2(mat4((injectionSwitch), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))), (injectionSwitch)))[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true))), true, false))))))).y)), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), clamp(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4595.9872), _GLF_FUZZED(-0.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y)), (! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4595.9872), _GLF_IDENTITY(_GLF_FUZZED(-0.8), max(_GLF_IDENTITY(_GLF_FUZZED(-0.8), max(_GLF_FUZZED(-0.8), _GLF_FUZZED(-0.8))), _GLF_FUZZED(-0.8)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y))) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false || (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4595.9872), _GLF_FUZZED(-0.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4595.9872), _GLF_FUZZED(-0.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y))))), (! (! (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6.8) : injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4595.9872), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-0.8, clamp(-0.8, _GLF_IDENTITY(-0.8, (-0.8) * 1.0), -0.8))), max(_GLF_IDENTITY(_GLF_FUZZED(-0.8), max(_GLF_FUZZED(-0.8), _GLF_FUZZED(-0.8))), _GLF_IDENTITY(_GLF_FUZZED(-0.8), max(_GLF_IDENTITY(_GLF_FUZZED(-0.8), mix(float(_GLF_FUZZED(-0.8)), float(_GLF_FUZZED(-87.02)), bool(false))), _GLF_FUZZED(-0.8)))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(false || (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4595.9872), _GLF_FUZZED(-0.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4595.9872), _GLF_FUZZED(-0.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y))))), (! (! (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6.8) : injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4595.9872), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-0.8, clamp(-0.8, _GLF_IDENTITY(-0.8, (-0.8) * 1.0), -0.8))), max(_GLF_IDENTITY(_GLF_FUZZED(-0.8), max(_GLF_FUZZED(-0.8), _GLF_FUZZED(-0.8))), _GLF_IDENTITY(_GLF_FUZZED(-0.8), max(_GLF_IDENTITY(_GLF_FUZZED(-0.8), mix(float(_GLF_FUZZED(-0.8)), float(_GLF_FUZZED(-87.02)), bool(false))), _GLF_FUZZED(-0.8)))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec4(bvec2(bvec2(bvec2(false || (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4595.9872), _GLF_FUZZED(-0.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4595.9872), _GLF_FUZZED(-0.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y))))), (! (! (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6.8) : injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4595.9872), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-0.8, clamp(-0.8, _GLF_IDENTITY(-0.8, (-0.8) * 1.0), -0.8))), max(_GLF_IDENTITY(_GLF_FUZZED(-0.8), max(_GLF_FUZZED(-0.8), _GLF_FUZZED(-0.8))), _GLF_IDENTITY(_GLF_FUZZED(-0.8), max(_GLF_IDENTITY(_GLF_FUZZED(-0.8), mix(float(_GLF_FUZZED(-0.8)), float(_GLF_FUZZED(-87.02)), bool(false))), _GLF_FUZZED(-0.8)))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true))))), bool(bool(bool(bvec2(false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4595.9872), _GLF_FUZZED(-0.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y)), (! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4595.9872), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-0.8, (-0.8) / cos(0.0))), max(_GLF_IDENTITY(_GLF_FUZZED(-0.8), max(_GLF_FUZZED(-0.8), _GLF_FUZZED(-0.8))), _GLF_FUZZED(-0.8)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(determinant(mat2(6405.8384, -2607.8567, 344.139, 3.0)))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (workgroup_size) - 0u) * _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9603.9366))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, log(1.0), 1.0)), (false ? _GLF_FUZZED(6.5) : float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9603.9366))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, log(1.0), 1.0))))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.4), _GLF_FUZZED(832.706)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat4x3((injectionSwitch)[1], 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))), bvec2(true, true))).y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 0u, 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 0u, 0u))), uint(uvec2(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 0u, 0u))), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 0u, 0u))), (_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 0u, 0u)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), (uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))) | (uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))))), ~ (~ (subgroup_id * subgroup_size))), clamp(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), subgroup_id * subgroup_size)) + subgroup_local_id, max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), 1u, 1u, 0u), ~ (~ (uvec4(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), 1u, 1u, 0u))))))) - 0u) + subgroup_local_id) >> 0u)) >> 0u, (_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).y, true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), max(injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).y, true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), max(injectionSwitch, injectionSwitch)).y)))) && true, (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).y, true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), max(injectionSwitch, injectionSwitch)).y)))) && true, ! (! (((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0))) + vec2(0.0, 0.0))) + vec2(0.0, 0.0)).y, true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), max(injectionSwitch, injectionSwitch)).y)))) && true)))) || false))) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) >> _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), (_GLF_IDENTITY(0u, (0u) >> 0u)) | (_GLF_IDENTITY(0u, (0u) >> 0u))), 1u)), min(uint(uvec2(_GLF_IDENTITY(0u, (0u) >> 0u), 1u)), uint(uvec2(_GLF_IDENTITY(0u, (0u) >> 0u), 1u)))))), ((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size) | (subgroup_id * subgroup_size)) + subgroup_local_id, (true ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)), (true ? min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), clamp(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), _GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), _GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), _GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), 0u ^ (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) : _GLF_FUZZED(num_workgroup)))) * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) | 0u), (subgroup_local_id) >> 0u), 1u * (subgroup_local_id)), (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), subgroup_id)) * subgroup_size)), 1u * (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) | (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), subgroup_id)) * subgroup_size)))) + subgroup_local_id) * _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (1u), (false ? _GLF_FUZZED(workgroup_id) : uint(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))))), ~ (~ (1u)))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), subgroup_id)) * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), subgroup_id)) * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), subgroup_id)) * subgroup_size))) * 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), subgroup_id)) * subgroup_size)), 1u * (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), subgroup_id)) * subgroup_size)))))) + subgroup_local_id) * _GLF_IDENTITY(1u, ~ (~ (1u))), ((_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)))) + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), subgroup_id)) * subgroup_size)) + subgroup_local_id) * _GLF_IDENTITY(1u, ~ (~ (1u)))) >> 0u)), (true ? _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) - 0u, ~ (_GLF_IDENTITY(~ ((subgroup_id) - 0u), uint(uvec4(~ ((subgroup_id) - 0u), 0u, 1u, 1u)))))))) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), subgroup_id * subgroup_size)), _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size))) | (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), subgroup_id)) * subgroup_size)), (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, 0u + _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))))) + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), min(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), subgroup_id)) * subgroup_size))) ^ 0u) + subgroup_local_id) * _GLF_IDENTITY(1u, ~ (~ (1u)))) : _GLF_FUZZED(subgroup_id)))))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) - 0u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_local_id)) : _GLF_FUZZED(uvec3(31386u, 117032u, 133606u)[2])))) >> 0u) << 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_id * subgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(0u, ~ (~ (0u)))))) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y)))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(asin(-770.595)))))) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), true, true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-137.418, clamp(-137.418, _GLF_IDENTITY(-137.418, (-137.418) - sqrt(0.0)), -137.418)), -3.6)))), injectionSwitch, injectionSwitch)).y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))) + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), min(_GLF_IDENTITY(~ (1), ~ (~ (~ (1)))), ~ (1)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(min(~ (~ (1)), ~ (~ (1))), (_GLF_IDENTITY(min(~ (~ (1)), ~ (~ (1))), _GLF_IDENTITY((min(~ (~ (1)), ~ (~ (1)))) | (min(~ (~ (1)), ~ (~ (1)))), ((min(~ (~ (1)), ~ (~ (1)))) | (min(~ (~ (1)), ~ (~ (1))))) >> 0))) - 0)), 0 | (_GLF_IDENTITY(~ (~ (1)), min(~ (~ (1)), _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) >> _GLF_IDENTITY(0, min(0, 0))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (~ (1))) << _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) - 0))), (0) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, 1))), 0 | (int(_GLF_IDENTITY(1, min(1, 1))))))))) - 0), (true ? (_GLF_IDENTITY(~ (~ _GLF_IDENTITY(_GLF_IDENTITY((1), clamp((1), (1), (1))), (false ? _GLF_FUZZED(91423) : (1)))), min(_GLF_IDENTITY(~ (~ _GLF_IDENTITY(_GLF_IDENTITY((1), clamp((1), (1), (1))), (false ? _GLF_FUZZED(91423) : (1)))), (false ? _GLF_FUZZED(68889) : ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((1), clamp((1), (1), (1))), (false ? _GLF_FUZZED(_GLF_IDENTITY(91423, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 91423 : _GLF_FUZZED(-77200)))) : (1)))))), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((1), clamp((1), (1), _GLF_IDENTITY((1), ((1)) | ((1))))), (false ? _GLF_FUZZED(91423) : (1))))))) << 0 : _GLF_FUZZED(-7126))), (true ? (~ _GLF_IDENTITY((~ _GLF_IDENTITY((1), ((1)) / 1)), (false ? _GLF_FUZZED((7187 | -66185)) : (~ (1))))) << 0 : _GLF_FUZZED(42033))), max(_GLF_IDENTITY(_GLF_IDENTITY((~ (~ (1))) << _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) - 0), (true ? (_GLF_IDENTITY(~ (~ _GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY(clamp((1), (1), (1)), (clamp((1), (1), (1))) / 1)), (false ? _GLF_FUZZED(91423) : (1)))), min(_GLF_IDENTITY(~ (~ _GLF_IDENTITY(_GLF_IDENTITY((1), clamp((1), (1), (1))), (false ? _GLF_FUZZED(91423) : (1)))), (false ? _GLF_FUZZED(68889) : ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((1), clamp((1), (1), (1))), (false ? _GLF_FUZZED(91423) : (_GLF_IDENTITY(1, 1 * (1)))))))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY(_GLF_IDENTITY((1), clamp((1), (1), (1))), (false ? _GLF_FUZZED(91423) : (1)))), (-69822 & (0 << _GLF_IDENTITY(int(7), int(7)))) ^ (~ (~ _GLF_IDENTITY(_GLF_IDENTITY((1), clamp((1), (1), (1))), (false ? _GLF_FUZZED(91423) : (1))))))))) << 0 : _GLF_FUZZED(-7126))), (true ? (~ _GLF_IDENTITY((~ (1)), (false ? _GLF_FUZZED((7187 | -66185)) : (~ (1))))) << 0 : _GLF_FUZZED(42033))), _GLF_IDENTITY(_GLF_IDENTITY((~ (~ (1))) << _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) - 0), (true ? (_GLF_IDENTITY(~ (~ _GLF_IDENTITY(_GLF_IDENTITY((1), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))), ((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y))))) >> 0), (1), (1))), (false ? _GLF_FUZZED(91423) : (1)))), _GLF_IDENTITY(min(_GLF_IDENTITY(~ (~ _GLF_IDENTITY(_GLF_IDENTITY((1), clamp((1), (1), (1))), (false ? _GLF_FUZZED(91423) : (1)))), (false ? _GLF_FUZZED(68889) : ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((1), clamp((1), (1), (1))), (false ? _GLF_FUZZED(91423) : (1)))))), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((1), clamp((1), (1), (1))), (false ? _GLF_FUZZED(91423) : (1))))), (_GLF_IDENTITY(true, false || (true)) ? min(_GLF_IDENTITY(~ (~ _GLF_IDENTITY(_GLF_IDENTITY((1), clamp((1), (1), (1))), (false ? _GLF_FUZZED(91423) : (1)))), (false ? _GLF_FUZZED(68889) : _GLF_IDENTITY(~ (~ _GLF_IDENTITY(_GLF_IDENTITY((1), clamp((1), (1), (1))), (false ? _GLF_FUZZED(91423) : (1)))), (~ (~ _GLF_IDENTITY(_GLF_IDENTITY((1), clamp((1), (1), (1))), (false ? _GLF_FUZZED(91423) : (1))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((1), clamp((1), (_GLF_IDENTITY(1, (52016 & 0) ^ (1))), (1))), (false ? _GLF_FUZZED(91423) : (1))))) : _GLF_FUZZED(79501))))) << 0 : _GLF_FUZZED(-7126))), (true ? (~ _GLF_IDENTITY((~ (1)), (false ? _GLF_FUZZED(_GLF_IDENTITY((7187 | -66185), ((7187 | -66185)) << 0)) : (~ (1))))) << 0 : _GLF_FUZZED(42033)))))))) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, ~ (~ (1))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (1)), min(~ (~ (1)), ~ (~ (1)))), _GLF_IDENTITY(_GLF_IDENTITY((~ (~ (1))) << 0, (true ? _GLF_IDENTITY((~ _GLF_IDENTITY((~ _GLF_IDENTITY((1), (false ? _GLF_FUZZED(91423) : (1)))), ((~ _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) / 1), _GLF_IDENTITY((false ? _GLF_FUZZED(91423) : (1)), (_GLF_IDENTITY((false ? _GLF_FUZZED(91423) : (1)), min((false ? _GLF_FUZZED(91423) : (1)), (false ? _GLF_FUZZED(91423) : (1))))) | 0)))) * 1)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) / 1) | ((~ _GLF_IDENTITY((~ _GLF_IDENTITY((1), (_GLF_IDENTITY(false ? _GLF_FUZZED(91423) : (1), (_GLF_IDENTITY(false ? _GLF_FUZZED(91423) : (1), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (false ? _GLF_FUZZED(91423) : (1)))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(91423) : (1), (false ? _GLF_FUZZED(91423) : (1)) ^ (0 << _GLF_IDENTITY(int(6), int(6))))))))), ((~ _GLF_IDENTITY((1), (false ? _GLF_FUZZED(91423) : (1))))) * 1)))) << 0 : _GLF_FUZZED(_GLF_IDENTITY(-7126, int(ivec2(-7126, (0 << _GLF_IDENTITY(int(2), int(2))))))))), (true ? (~ _GLF_IDENTITY((~ (1)), (false ? _GLF_FUZZED((7187 | -66185)) : (~ _GLF_IDENTITY((_GLF_IDENTITY(1, 0 ^ (1))), ((_GLF_IDENTITY(1, 0 ^ (1)))) / 1))))) << 0 : _GLF_FUZZED(42033)))))) % subgroup_size)) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u)));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! ((false))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY((false), ! (! ((false))))), false, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, false), true))))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), false || (bool(false))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! ((true)))), (! (true)) || false))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), false || (bool(false))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! ((true)))), (! (true)) || false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true && (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), false || (bool(false))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! ((true)))), (! (true)) || false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), false || ((false)))))) || _GLF_IDENTITY(false, (false) || false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY((false), false || ((false)))))) || _GLF_IDENTITY(false, (false) || false)))) || false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false)))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bool((false)))) && true), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))) && true))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (! (_GLF_IDENTITY(false, bool(bool(false))))) && true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))), true, false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, sin(0.0), 1.0, sqrt(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, sin(0.0), 1.0, sqrt(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) - mat4x3(0.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 1.0, 0.0, cos(sin(0.0)), 0.0))), 0.0))), (false ? _GLF_FUZZED(3.2) : float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, sin(0.0), 1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(float(-67181))), bool(false))), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + _GLF_ZERO(0.0, injectionSwitch.x))), (mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, sin(0.0), 1.0, sqrt(1.0), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false || (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false || (false))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false || (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)) && (false)), false || (false)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, ! (! (false))))))))) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), false, false))))))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(max(uint(1), uint(1)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(max(uint(1), uint(1)), ~ (~ (max(uint(1), uint(1))))), min(_GLF_IDENTITY(_GLF_IDENTITY(max(uint(1), uint(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, int(ivec4(1, 0, 0, 0)))), (_GLF_IDENTITY(min(1, _GLF_IDENTITY(1, int(ivec4(1, 0, 0, 0)))), max(min(1, _GLF_IDENTITY(1, int(ivec4(1, 0, 0, 0)))), _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, int(ivec4(1, 0, 0, 0)))), int(ivec3(min(1, _GLF_IDENTITY(1, int(ivec4(1, 0, 0, 0)))), 1, 0)))))) >> (0 ^ 0))))), ~ (~ (max(uint(1), uint(1))))), (_GLF_IDENTITY(max(uint(1), uint(1)), ~ (~ (max(uint(1), uint(1)))))) - 0u), _GLF_IDENTITY(max(uint(1), uint(1)), ~ (~ (max(_GLF_IDENTITY(uint(1), (uint(1)) ^ 0u), uint(1)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), _GLF_IDENTITY(max(uint(1), uint(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, (false ? _GLF_FUZZED(56853) : 0))), 1, 1)))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(max(uint(1), uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (~ (max(uint(1), uint(1))))), min(_GLF_IDENTITY(_GLF_IDENTITY(max(uint(1), uint(1)), ~ (~ (max(uint(1), uint(1))))), (_GLF_IDENTITY(max(uint(1), uint(1)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (max(uint(1), _GLF_IDENTITY(uint(1), 0u | (uint(1))))), ~ (~ (_GLF_IDENTITY(~ (max(uint(1), _GLF_IDENTITY(uint(1), 0u | (uint(1))))), max(~ (max(uint(1), _GLF_IDENTITY(uint(1), 0u | (uint(1))))), ~ (max(uint(1), _GLF_IDENTITY(uint(1), 0u | (uint(1))))))))))), min(_GLF_IDENTITY((~ (max(uint(1), _GLF_IDENTITY(uint(1), 0u | (uint(1)))))), ~ (~ (_GLF_IDENTITY((~ (max(uint(1), _GLF_IDENTITY(uint(1), 0u | (uint(1)))))), ((~ (max(uint(1), _GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u)) - 0u)))))) ^ 0u)))), (~ (max(uint(1), _GLF_IDENTITY(uint(1), 0u | (uint(1)))))))))) - 0u), _GLF_IDENTITY(max(uint(1), uint(1)), ~ (~ (max(uint(1), uint(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 0, 0, 1))))))))))))), (false ? _GLF_FUZZED(next_virtual_gid) : 0u | (_GLF_IDENTITY(_GLF_IDENTITY(max(uint(1), uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (~ (max(uint(1), uint(1))))), min(_GLF_IDENTITY(_GLF_IDENTITY(max(uint(1), uint(1)), _GLF_IDENTITY(~ (~ (max(uint(1), uint(1)))), (~ (~ (max(uint(1), uint(1))))) << (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))), (_GLF_IDENTITY(max(uint(1), uint(1)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (max(uint(_GLF_IDENTITY(1, (1) | 0)), _GLF_IDENTITY(uint(1), 0u | (uint(1))))), ~ (~ (_GLF_IDENTITY(~ (max(uint(1), _GLF_IDENTITY(uint(1), 0u | (uint(1))))), max(~ (max(uint(1), _GLF_IDENTITY(uint(1), 0u | (uint(1))))), ~ (max(uint(1), _GLF_IDENTITY(uint(1), 0u | (uint(1))))))))))), min(_GLF_IDENTITY((~ (_GLF_IDENTITY(max(uint(1), _GLF_IDENTITY(uint(1), 0u | (uint(1)))), 0u | (max(uint(1), _GLF_IDENTITY(uint(1), 0u | (uint(1)))))))), ~ (~ (_GLF_IDENTITY((~ _GLF_IDENTITY((max(uint(1), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u, (0u) - 0u) | (uint(1))))), max((max(uint(1), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u, (0u) - 0u) | (uint(1))))), (max(uint(1), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u, (0u) - 0u) | (uint(1)))))))), ((~ (max(uint(1), _GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u)) - 0u)))))) ^ 0u)))), (~ (max(uint(1), _GLF_IDENTITY(uint(1), 0u | (uint(1)))))))))) - 0u), _GLF_IDENTITY(max(_GLF_IDENTITY(uint(1), min(uint(1), uint(1))), uint(1)), ~ (~ (max(uint(1), uint(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), (~ (1)) - 0), int(ivec4(~ (1), 0, 0, 1)))))))))))))))))), ((_GLF_IDENTITY(uint(1), _GLF_IDENTITY(max(uint(1), uint(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, (false ? _GLF_FUZZED(56853) : 0))), 1, 1)))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(max(uint(1), uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (~ (max(uint(1), uint(1))))), min(_GLF_IDENTITY(_GLF_IDENTITY(max(uint(1), uint(1)), ~ (~ (max(uint(1), uint(1))))), (_GLF_IDENTITY(max(uint(1), uint(1)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (max(uint(1), _GLF_IDENTITY(uint(1), 0u | (uint(1))))), ~ (~ (_GLF_IDENTITY(~ (max(uint(1), _GLF_IDENTITY(uint(1), 0u | (uint(1))))), max(~ (max(uint(1), _GLF_IDENTITY(uint(1), 0u | (uint(1))))), ~ (max(uint(1), _GLF_IDENTITY(uint(1), 0u | (uint(1))))))))))), min(_GLF_IDENTITY((~ (max(uint(1), _GLF_IDENTITY(uint(1), 0u | (uint(1)))))), ~ (~ (_GLF_IDENTITY((~ (max(uint(1), _GLF_IDENTITY(uint(1), 0u | (uint(1)))))), ((~ (max(uint(1), _GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u)) - 0u)))))) ^ 0u)))), (~ (max(uint(1), _GLF_IDENTITY(uint(1), 0u | (uint(1)))))))))) - 0u), _GLF_IDENTITY(max(uint(1), uint(1)), ~ (~ (max(uint(1), uint(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 0, 0, 1))))))))))))), (false ? _GLF_FUZZED(next_virtual_gid) : 0u | (_GLF_IDENTITY(_GLF_IDENTITY(max(uint(1), uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (~ (max(uint(1), uint(1))))), min(_GLF_IDENTITY(_GLF_IDENTITY(max(uint(1), uint(1)), _GLF_IDENTITY(~ (~ (max(uint(1), uint(1)))), (~ (~ (max(uint(1), uint(1))))) << (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))), (_GLF_IDENTITY(max(uint(1), uint(1)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (max(uint(_GLF_IDENTITY(1, (1) | 0)), _GLF_IDENTITY(uint(1), 0u | (uint(1))))), ~ (~ (_GLF_IDENTITY(~ (max(uint(1), _GLF_IDENTITY(uint(1), 0u | (uint(1))))), max(~ (max(uint(1), _GLF_IDENTITY(uint(1), 0u | (uint(1))))), ~ (max(uint(1), _GLF_IDENTITY(uint(1), 0u | (uint(1))))))))))), min(_GLF_IDENTITY((~ (_GLF_IDENTITY(max(uint(1), _GLF_IDENTITY(uint(1), 0u | (uint(1)))), 0u | (max(uint(1), _GLF_IDENTITY(uint(1), 0u | (uint(1)))))))), ~ (~ (_GLF_IDENTITY((~ _GLF_IDENTITY((max(uint(1), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u, (0u) - 0u) | (uint(1))))), max((max(uint(1), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u, (0u) - 0u) | (uint(1))))), (max(uint(1), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u, (0u) - 0u) | (uint(1)))))))), ((~ (max(uint(1), _GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u)) - 0u)))))) ^ 0u)))), (~ (max(uint(1), _GLF_IDENTITY(uint(1), 0u | (uint(1)))))))))) - 0u), _GLF_IDENTITY(max(_GLF_IDENTITY(uint(1), min(uint(1), uint(1))), uint(1)), ~ (~ (max(uint(1), uint(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), (~ (1)) - 0), int(ivec4(~ (1), 0, 0, 1))))))))))))))))))) / 1u) / 1u), _GLF_IDENTITY(4, (4) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 4);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, determinant(mat3(cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, exp(0.0)))).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bool(true && (false))))), true && (_GLF_IDENTITY(false, true && (false))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / (1u & 1u))) | (subgroup_local_id)) + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), uint(_GLF_IDENTITY(uvec4(min(subgroup_size, subgroup_size), 0u, 1u, 0u), ~ (~ (_GLF_IDENTITY(uvec4(min(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))), 0u, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(uvec4(min(subgroup_size, subgroup_size), 0u, 1u, 0u), uvec4(min(subgroup_size, subgroup_size), 0u, 1u, 0u), _GLF_IDENTITY(uvec4(min(subgroup_size, subgroup_size), 0u, 1u, 0u), uvec4(1u, 1u, 1u, 1u) * (uvec4(min(subgroup_size, subgroup_size), 0u, 1u, 0u))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, false || (_GLF_IDENTITY((false), ((false)) && true) && true))), ! (_GLF_IDENTITY(! (! ((false) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! ((false) && true)), true && (! (! ((false) && true))))), true && (! (_GLF_IDENTITY(! (! ((false) && true)), true && (! (! ((false) && true))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, false))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), false)))))), false))), bool(_GLF_IDENTITY(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, false)))))))) || false))), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, false, true))), ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ! (! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, max((injectionSwitch.y) - 0.0, _GLF_IDENTITY((injectionSwitch.y) - 0.0, float(float((injectionSwitch.y) - 0.0))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, max((injectionSwitch.y) - 0.0, _GLF_IDENTITY((injectionSwitch.y) - 0.0, float(float((injectionSwitch.y) - 0.0)))))))))) && true))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, false, true))), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, float(mat2x3((injectionSwitch.y) - 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) && true)))))))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
            barrier();
           barrier();
          }
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2139.4621))), max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2139.4621))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2139.4621))))), injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(49.13)), bool(false)))) + (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? injectionSwitch : _GLF_FUZZED(vec2(-4.0, 20.61)))))).x, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x)))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(3.8)), min(_GLF_IDENTITY(float(_GLF_FUZZED(3.8)), mix(float(float(_GLF_FUZZED(3.8))), float(_GLF_FUZZED(590.665)), bool(false))), float(_GLF_FUZZED(3.8)))), float(float(_GLF_ZERO(0.0, injectionSwitch.x))), bool(true))), _GLF_IDENTITY(float(_GLF_FUZZED(49.13)), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(float(_GLF_FUZZED(49.13)), mix(float(_GLF_FUZZED(-4.5)), float(float(_GLF_FUZZED(49.13))), bool(true))) : _GLF_FUZZED(dot(vec4(-4602.1358, -71.29, -11.94, -5.8), vec4(-7.9, 2.0, 5.1, -57.87))))), bool(false)))) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)), (_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? injectionSwitch : _GLF_FUZZED(vec2(-4.0, 20.61)))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(_GLF_IDENTITY(49.13, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-7406.7114, (-7406.7114) / 1.0))), float(49.13), bool(true))))), bool(false)))) + (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))))), false))) ? injectionSwitch : _GLF_FUZZED(vec2(-4.0, 20.61)))))).x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, _GLF_IDENTITY((0 ^ 0), 1 * (_GLF_IDENTITY((0 ^ 0), ((0 ^ 0)) | ((0 ^ 0))))) ^ _GLF_IDENTITY((4), max((4), _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) << 0)), 0 ^ ((4)))))), _GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, ~ (~ (64))))), 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_IDENTITY(true, ! (! (true))), false))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec2(false, true))) || (false)))))), bool(bvec3(! (false), true, false)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && true)), true && (! _GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), bool(bvec2(bool(bool((false))), false))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true))), (! ((! (false)))) || false)), true && ((_GLF_IDENTITY(! ((! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true))), (! ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), false))))))))))) || false)))))))))), _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) && true))) && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) && true))), bool(bool(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) && true))), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) && true))), bool(bool(false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) && true)))))))))))), _GLF_IDENTITY(! (! (false)), true && (! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (! (_GLF_IDENTITY((! (false)), ((! (false))) && true))) || false))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false)))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false)))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (! (bool(bvec4(false, false, false, true))))))) && true), (_GLF_IDENTITY(false, (false) && true)) && _GLF_IDENTITY(true, (true) || false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))), injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))), ! (! (bool(bvec2(false, true))))))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec4(bvec2(bvec2(bvec2(false, true))), false, false))))), ! (! (_GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) && true))), (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))) && true))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((4), min(_GLF_IDENTITY((4), int(ivec2((4), 0))), _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(floatBitsToInt(-10.58)) : 4)), 4, 4))), 0 ^ ((4))))), max((_GLF_IDENTITY(4, min(4, 4))), _GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), (4), _GLF_IDENTITY(_GLF_IDENTITY((4), int(ivec4((4), 1, 1, 1))), min(_GLF_IDENTITY((4), int(ivec4((4), 1, 1, 1))), _GLF_IDENTITY((4), int(ivec4((4), 1, 1, 1))))))), max(_GLF_IDENTITY((4), ((4)) - 0), (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, 1 * (4)), 4))))))))), 64, 4);
   subgroupAll(_GLF_IDENTITY(true, ! (! (true))));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.8))) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, 0.0, cos(sin(0.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, sqrt(1.0))))), (true ? vec2(mat4x2(injectionSwitch, 1.0, 0.0, cos(sin(0.0)), 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(102.887)))), float(_GLF_FUZZED(6.1)), bool(_GLF_IDENTITY(false, true && (false))))))), injectionSwitch.x), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), sqrt(1.0))))))) : _GLF_FUZZED(vec2(47.93, 62.18)))), (true ? _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, 0.0, cos(sin(0.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (false ? _GLF_FUZZED(mod(length(injectionSwitch), -1.3)) : min(1.0, 1.0)))), _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- 0.1))), float(1.0), bool(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), true && (bool((injectionSwitch.x < injectionSwitch.y))))), false || (bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), true && (bool((injectionSwitch.x < injectionSwitch.y)))))))), bool(bool(! (injectionSwitch.x < injectionSwitch.y))))) && true)))))))), 0.0, 0.0, 0.0, 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(dot(vec4(6.7, -934.816, 6.4, -5.9), vec4(-7083.8505, 357.712, 0.2, 4.0))) : determinant(mat3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- 0.1))), float(1.0), bool(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, true, false)), true && (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, true, false)), true && (bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, true, false))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), true && (bool((injectionSwitch.x < injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), true && (bool((injectionSwitch.x < injectionSwitch.y)))))))), false || (bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), true && (bool((injectionSwitch.x < injectionSwitch.y)))))))), bool(bool(! (injectionSwitch.x < injectionSwitch.y))))) && true)))))))), 0.0, 0.0, 0.0, 1.0)))), 0.0, 0.0, sqrt(1.0))))), (true ? vec2(mat4x2(injectionSwitch, 1.0, 0.0, cos(sin(0.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, sqrt(1.0))))) : _GLF_FUZZED(vec2(47.93, 62.18)))) : _GLF_FUZZED(vec2(0.6, 393.367))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), false || (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), vec2(injectionSwitch[0], injectionSwitch[1])).y)) && true)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, 1.0 * (injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(300.654, 1.0 * (300.654))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0]))))) / 1.0)), float(_GLF_FUZZED(_GLF_IDENTITY(-275.510, (-275.510) - length(vec2(0.0, 0.0))))), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false)))) && true)))), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), vec2(mat2(_GLF_IDENTITY((injectionSwitch), vec2(vec4((injectionSwitch), 1.0, 1.0))), sqrt(1.0), 1.0)))))[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-275.510)), bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2.3)), vec2(_GLF_FUZZED(-560.466), _GLF_IDENTITY((injectionSwitch)[1], float(mat3((injectionSwitch)[1], 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 1.0)))), bvec2(false, true))))[0], mix(_GLF_IDENTITY(float((injectionSwitch)[0]), (_GLF_IDENTITY(float((injectionSwitch)[0]), mix(float(_GLF_FUZZED(2532.0435)), float(_GLF_IDENTITY(float((injectionSwitch)[0]), max(float((injectionSwitch)[0]), float((injectionSwitch)[0])))), bool(true)))) / 1.0), float(_GLF_FUZZED(-275.510)), bool(false))))), (injectionSwitch)[0])), _GLF_FUZZED(1.3)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(300.654, 1.0 * (300.654))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0]))))) / 1.0)), float(_GLF_FUZZED(_GLF_IDENTITY(-275.510, (-275.510) - length(vec2(0.0, 0.0))))), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false)))) && true)))), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), vec2(mat2(_GLF_IDENTITY((injectionSwitch), vec2(vec4((injectionSwitch), 1.0, 1.0))), sqrt(1.0), 1.0)))))[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-275.510)), bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2.3)), vec2(_GLF_FUZZED(-560.466), _GLF_IDENTITY((injectionSwitch)[1], float(mat3((injectionSwitch)[1], 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 1.0)))), bvec2(false, true))))[0], mix(_GLF_IDENTITY(float((injectionSwitch)[0]), (_GLF_IDENTITY(float((injectionSwitch)[0]), mix(float(_GLF_FUZZED(2532.0435)), float(_GLF_IDENTITY(float((injectionSwitch)[0]), max(float((injectionSwitch)[0]), float((injectionSwitch)[0])))), bool(true)))) / 1.0), float(_GLF_FUZZED(-275.510)), bool(false))))), (injectionSwitch)[0])), _GLF_FUZZED(1.3)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))[0], max((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(300.654, 1.0 * (300.654))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0]))))) / 1.0)), float(_GLF_FUZZED(_GLF_IDENTITY(-275.510, (-275.510) - length(vec2(0.0, 0.0))))), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false)))) && true)))), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), vec2(mat2(_GLF_IDENTITY((injectionSwitch), vec2(vec4((injectionSwitch), 1.0, 1.0))), sqrt(1.0), 1.0)))))[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-275.510)), bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2.3)), vec2(_GLF_FUZZED(-560.466), _GLF_IDENTITY((injectionSwitch)[1], float(mat3((injectionSwitch)[1], 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 1.0)))), bvec2(false, true))))[0], mix(_GLF_IDENTITY(float((injectionSwitch)[0]), (_GLF_IDENTITY(float((injectionSwitch)[0]), mix(float(_GLF_FUZZED(2532.0435)), float(_GLF_IDENTITY(float((injectionSwitch)[0]), max(float((injectionSwitch)[0]), float((injectionSwitch)[0])))), bool(true)))) / 1.0), float(_GLF_FUZZED(-275.510)), bool(false))))), (injectionSwitch)[0])), _GLF_FUZZED(1.3)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(300.654, 1.0 * (300.654))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0]))))) / 1.0)), float(_GLF_FUZZED(_GLF_IDENTITY(-275.510, (-275.510) - length(vec2(0.0, 0.0))))), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false)))) && true)))), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), vec2(mat2(_GLF_IDENTITY((injectionSwitch), vec2(vec4((injectionSwitch), 1.0, 1.0))), sqrt(1.0), 1.0)))))[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-275.510)), bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2.3)), vec2(_GLF_FUZZED(-560.466), _GLF_IDENTITY((injectionSwitch)[1], float(mat3((injectionSwitch)[1], 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 1.0)))), bvec2(false, true))))[0], mix(_GLF_IDENTITY(float((injectionSwitch)[0]), (_GLF_IDENTITY(float((injectionSwitch)[0]), mix(float(_GLF_FUZZED(2532.0435)), float(_GLF_IDENTITY(float((injectionSwitch)[0]), max(float((injectionSwitch)[0]), float((injectionSwitch)[0])))), bool(true)))) / 1.0), float(_GLF_FUZZED(-275.510)), bool(false))))), (injectionSwitch)[0])), _GLF_FUZZED(1.3)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))[0])), _GLF_FUZZED(-9711.7941)), vec2(_GLF_FUZZED(-9.2), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(300.654, 1.0 * (300.654))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0]))))) / 1.0)), float(_GLF_FUZZED(_GLF_IDENTITY(-275.510, (-275.510) - length(vec2(0.0, 0.0))))), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false)))) && true)))), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), vec2(mat2(_GLF_IDENTITY((injectionSwitch), vec2(vec4((injectionSwitch), 1.0, 1.0))), sqrt(1.0), 1.0)))))[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-275.510)), bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2.3)), vec2(_GLF_FUZZED(-560.466), _GLF_IDENTITY((injectionSwitch)[1], float(mat3((injectionSwitch)[1], 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 1.0)))), bvec2(false, true))))[0], mix(_GLF_IDENTITY(float((injectionSwitch)[0]), (_GLF_IDENTITY(float((injectionSwitch)[0]), mix(float(_GLF_FUZZED(2532.0435)), float(_GLF_IDENTITY(float((injectionSwitch)[0]), max(float((injectionSwitch)[0]), float((injectionSwitch)[0])))), bool(true)))) / 1.0), float(_GLF_FUZZED(-275.510)), bool(false))))), (injectionSwitch)[0])), _GLF_FUZZED(1.3)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))[1]), bvec2(false, true))).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
