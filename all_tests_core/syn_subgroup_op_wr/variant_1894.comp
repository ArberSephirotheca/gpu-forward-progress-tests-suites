#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) || false)), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) || false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), clamp(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))).x, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x), 0u ^ ((_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), max(min(gl_WorkGroupSize, gl_WorkGroupSize), min(gl_WorkGroupSize, gl_WorkGroupSize)))) << uvec3(0u, 0u, 0u))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), max(min(gl_WorkGroupSize, gl_WorkGroupSize), min(gl_WorkGroupSize, gl_WorkGroupSize)))) << uvec3(0u, 0u, 0u)))))).x, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), ~ (_GLF_IDENTITY(~ (min(gl_WorkGroupSize, gl_WorkGroupSize)), ~ (_GLF_IDENTITY(~ (~ (min(gl_WorkGroupSize, gl_WorkGroupSize))), uvec3(_GLF_IDENTITY(uvec4(~ (~ (min(gl_WorkGroupSize, gl_WorkGroupSize))), 1u), (uvec4(~ (~ (min(gl_WorkGroupSize, gl_WorkGroupSize))), 1u)) << (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(7u), uvec4(7u))))))))))).x, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), ~ (_GLF_IDENTITY(~ (min(gl_WorkGroupSize, gl_WorkGroupSize)), ~ (~ (~ (min(gl_WorkGroupSize, gl_WorkGroupSize)))))))).x) * 1u)), (_GLF_IDENTITY(true ? (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), _GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize)))))), ~ (~ (~ (min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec3(uvec3(gl_WorkGroupSize)))))), gl_WorkGroupSize)))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize)))))), ~ (~ (~ (min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec3(uvec3(gl_WorkGroupSize)))))), gl_WorkGroupSize))))))) | uvec3(0u, 0u, 0u)))).x) : _GLF_FUZZED(subgroup_id), min(true ? (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), _GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize)))))), ~ (~ (~ (min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec3(uvec3(gl_WorkGroupSize)))))), gl_WorkGroupSize)))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize)))))), ~ (~ (~ (min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec3(uvec3(gl_WorkGroupSize)))))), gl_WorkGroupSize))))))) | uvec3(0u, 0u, 0u)))).x) : _GLF_FUZZED(subgroup_id), _GLF_IDENTITY(true ? (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), _GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize)))))), ~ (~ (~ (min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec3(uvec3(gl_WorkGroupSize)))))), gl_WorkGroupSize)))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize)))))), ~ (~ (~ (min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec3(uvec3(gl_WorkGroupSize)))))), gl_WorkGroupSize))))))) | uvec3(0u, 0u, 0u)))).x) : _GLF_FUZZED(subgroup_id), 0u + (true ? (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), _GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize)))))), ~ (~ (~ (min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec3(uvec3(gl_WorkGroupSize)))))), gl_WorkGroupSize)))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize)))))), ~ (~ (~ (min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec3(uvec3(gl_WorkGroupSize)))))), gl_WorkGroupSize))))))) | uvec3(0u, 0u, 0u)))).x) : _GLF_FUZZED(subgroup_id))))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u))), uvec3(1u, 1u, 1u) * (min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u)))))))).x, min(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u))) | uvec3(0u, 0u, 0u)), (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))))), gl_WorkGroupSize)).x, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), clamp(_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), clamp(min(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(139212u, 6611u, 15667u)))), gl_WorkGroupSize), min(gl_WorkGroupSize, gl_WorkGroupSize), _GLF_IDENTITY(min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - (uvec3(0u, 0u, 0u) & uvec3(100641u, 141330u, 169472u)))), max(min(gl_WorkGroupSize, gl_WorkGroupSize), min(gl_WorkGroupSize, gl_WorkGroupSize))))), min(gl_WorkGroupSize, gl_WorkGroupSize), min(gl_WorkGroupSize, gl_WorkGroupSize)))).x)))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), clamp(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), clamp(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))))) ^ (uvec3(47429u, 137411u, 125494u) & uvec3(0u, 0u, 0u))).x, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x), 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)), gl_WorkGroupSize))) + uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)), gl_WorkGroupSize)).x))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), max(min(gl_WorkGroupSize, gl_WorkGroupSize), min(gl_WorkGroupSize, gl_WorkGroupSize)))) << uvec3(0u, 0u, 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), max(min(gl_WorkGroupSize, gl_WorkGroupSize), min(gl_WorkGroupSize, gl_WorkGroupSize)))) << uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), _GLF_IDENTITY((_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), max(min(gl_WorkGroupSize, gl_WorkGroupSize), min(gl_WorkGroupSize, gl_WorkGroupSize)))), uvec3(1u, 1u, 1u) * ((_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), max(min(gl_WorkGroupSize, gl_WorkGroupSize), min(gl_WorkGroupSize, gl_WorkGroupSize)))))) << uvec3(0u, 0u, 0u)))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))).x, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), ~ (_GLF_IDENTITY(~ (min(gl_WorkGroupSize, gl_WorkGroupSize)), ~ (_GLF_IDENTITY(~ (~ (min(gl_WorkGroupSize, gl_WorkGroupSize))), uvec3(_GLF_IDENTITY(uvec4(~ (~ _GLF_IDENTITY((min(gl_WorkGroupSize, gl_WorkGroupSize)), (_GLF_IDENTITY((min(gl_WorkGroupSize, gl_WorkGroupSize)), (false ? _GLF_FUZZED((uvec3(66888u, 133095u, 28359u) ^ uvec3(98006u, 6858u, 26514u))) : _GLF_IDENTITY((min(gl_WorkGroupSize, gl_WorkGroupSize)), ((min(gl_WorkGroupSize, gl_WorkGroupSize))) * uvec3(1u, 1u, 1u))))) | ((min(gl_WorkGroupSize, gl_WorkGroupSize))))), 1u), (uvec4(~ (~ (min(gl_WorkGroupSize, gl_WorkGroupSize))), 1u)) << (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(7u), uvec4(7u)), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4(7u), uvec4(7u))))))))))))).x, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), ~ (_GLF_IDENTITY(~ (min(gl_WorkGroupSize, gl_WorkGroupSize)), ~ (~ (~ (min(gl_WorkGroupSize, gl_WorkGroupSize)))))))).x) * 1u)), (_GLF_IDENTITY(true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), _GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize)))))), ~ (~ (~ (min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec3(uvec3(gl_WorkGroupSize)))), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec3(uvec3(gl_WorkGroupSize))))) + uvec3(0u, 0u, 0u)))), gl_WorkGroupSize)))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize)))))), ~ (~ (~ (min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec3(uvec3(gl_WorkGroupSize)))))), gl_WorkGroupSize))))))) | uvec3(0u, 0u, 0u)))).x), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), _GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize)))))), ~ (~ (~ (min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec3(uvec3(gl_WorkGroupSize)))), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec3(uvec3(gl_WorkGroupSize))))) + uvec3(0u, 0u, 0u)))), gl_WorkGroupSize)))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize)))))), ~ (~ (~ (min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec3(uvec3(gl_WorkGroupSize)))))), gl_WorkGroupSize))))))) | uvec3(0u, 0u, 0u)))).x))) : _GLF_FUZZED(subgroup_id), min(true ? (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), _GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize)))))), ~ (~ (~ (min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec3(uvec3(gl_WorkGroupSize)))))), gl_WorkGroupSize)))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize)))))), ~ (~ (~ (min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec3(uvec3(gl_WorkGroupSize)))))), gl_WorkGroupSize))))))) | uvec3(0u, 0u, 0u)))).x) : _GLF_FUZZED(subgroup_id), _GLF_IDENTITY(true ? (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), _GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize))))), ~ (~ (~ ((_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize)))))))))))), _GLF_IDENTITY(~ (~ (~ (min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec3(uvec3(gl_WorkGroupSize)))))), gl_WorkGroupSize)))), (~ (~ (~ (min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec3(uvec3(gl_WorkGroupSize)))))), gl_WorkGroupSize))))) | uvec3(0u, 0u, 0u)))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize)))))), ~ (~ (~ (min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (uvec3(gl_WorkGroupSize)) | uvec3(0u, 0u, 0u))))))), gl_WorkGroupSize))))))) | uvec3(0u, 0u, 0u)))).x) : _GLF_FUZZED(subgroup_id), 0u + (true ? (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), _GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), uvec3(_GLF_IDENTITY(0u, (0u) >> (50261u & 0u)), 0u, 0u) ^ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize)))))), ~ (~ (~ (min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec3(uvec3(gl_WorkGroupSize)))))), gl_WorkGroupSize)))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize)))))), ~ (~ (~ (min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec3(uvec3(gl_WorkGroupSize)))))), gl_WorkGroupSize))))))) | uvec3(0u, 0u, 0u)))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), _GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), uvec3(_GLF_IDENTITY(0u, (0u) >> (50261u & 0u)), 0u, 0u) ^ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize)))))), ~ (~ (~ (min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec3(uvec3(gl_WorkGroupSize)))))), gl_WorkGroupSize)))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize)))))), ~ (~ (~ (min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec3(uvec3(gl_WorkGroupSize)))))), gl_WorkGroupSize))))))) | uvec3(0u, 0u, 0u)))).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), _GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), uvec3(_GLF_IDENTITY(0u, (0u) >> (50261u & 0u)), 0u, 0u) ^ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize)))))), ~ (~ (~ (min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec3(uvec3(gl_WorkGroupSize)))))), gl_WorkGroupSize)))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize)))))), ~ (~ (~ (min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec3(uvec3(gl_WorkGroupSize)))))), gl_WorkGroupSize))))))) | uvec3(0u, 0u, 0u)))).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))))), _GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), uvec3(_GLF_IDENTITY(0u, (0u) >> (50261u & 0u)), 0u, 0u) ^ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize)))))), ~ (~ (~ (min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec3(uvec3(gl_WorkGroupSize)))))), gl_WorkGroupSize)))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize)))))), ~ (~ (~ (min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec3(uvec3(gl_WorkGroupSize)))))), gl_WorkGroupSize))))))) | uvec3(0u, 0u, 0u)))).x))) : _GLF_FUZZED(subgroup_id))))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u))), uvec3(1u, 1u, 1u) * (min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u)))))), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u))), uvec3(1u, 1u, 1u) * (min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u))))))) / uvec3(1u, 1u, 1u)))).x, min(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(uvec3(uvec3(gl_WorkGroupSize))), (uvec3(uvec3(uvec3(gl_WorkGroupSize)))) / uvec3(1u, 1u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u))) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u))))))) ^ (uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(_GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 0u), uvec3(0u, 0u, 0u))))))), gl_WorkGroupSize)).x, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), clamp(_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), clamp(min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(139212u, 6611u, 15667u)))), (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(139212u, 6611u, 15667u))))) | uvec3(0u, 0u, 0u)), gl_WorkGroupSize), min(gl_WorkGroupSize, gl_WorkGroupSize), _GLF_IDENTITY(min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - (uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u))) & uvec3(100641u, 141330u, 169472u)))), max(min(gl_WorkGroupSize, gl_WorkGroupSize), min(gl_WorkGroupSize, gl_WorkGroupSize))))), min(gl_WorkGroupSize, gl_WorkGroupSize), min(gl_WorkGroupSize, gl_WorkGroupSize)))).x))))));
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) / 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY((~ (workgroup_base)), max((~ (workgroup_base)), _GLF_IDENTITY((~ (workgroup_base)), (true ? (~ (workgroup_base)) : _GLF_FUZZED(workgroup_id))))), ((~ _GLF_IDENTITY((workgroup_base), clamp(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), (workgroup_base), (workgroup_base))))) / 1u)))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), min(_GLF_IDENTITY((subgroup_id * subgroup_size), (false ? _GLF_FUZZED(workgroup_id) : (subgroup_id * subgroup_size))), (subgroup_id * subgroup_size))) >> 0u)), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))) >> 0u)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), max(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))))), (subgroup_id * subgroup_size) >> 0u))))))) / 1u, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, ((subgroup_id * subgroup_size) >> 0u) | ((subgroup_id * subgroup_size) >> 0u)))), ((_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) - (0u & 139780u)), 0u)) >> _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) >> 0u))), (_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) >> 0u)))) << 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))))), (subgroup_id * subgroup_size) ^ 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))))), (subgroup_id * subgroup_size) ^ 0u))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))) >> 0u)), ~ (~ ((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), (subgroup_id * subgroup_size) >> 0u))))))) / _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) + (1u ^ 1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (1u) + (1u ^ 1u)))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_id * subgroup_size) >> 0u)), ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), uint(0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, ((subgroup_id * subgroup_size) >> 0u) << 0u))), ~ (~ ((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), (subgroup_id * subgroup_size) >> 0u))))))) / 1u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)), _GLF_IDENTITY(((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(4u), uint(4u)), (true ? 0u >> _GLF_IDENTITY(uint(4u), uint(4u)) : _GLF_FUZZED(workgroup_base)))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)), ~ (~ ((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), (subgroup_id * subgroup_size) >> 0u)))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))), (true ? (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) : _GLF_FUZZED(workgroup_id)))) >> 0u) >> _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)), ~ (~ ((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), (subgroup_id * subgroup_size) >> 0u)))))), max(((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)), ~ (~ ((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 0u, 1u)), (uint(uvec4(subgroup_id, 0u, 0u, 1u))) | (uint(uvec4(subgroup_id, 0u, 0u, 1u))))) * subgroup_size) >> 0u)))))), ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> 0u)), ~ (~ ((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), (subgroup_id * subgroup_size) >> 0u))))))))))) / 1u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))) | _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))) >> 0u)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), ~ (~ (subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))), (subgroup_id * subgroup_size) >> 0u)))))), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))) >> 0u)), ~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), (subgroup_id * subgroup_size) >> 0u)))), max((~ ((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), (subgroup_id * subgroup_size) >> 0u)))), (~ ((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), (subgroup_id * subgroup_size) >> 0u))))))))) ^ 0u)) / 1u) << 0u)))) - _GLF_IDENTITY(0u, (0u) ^ 0u))) + subgroup_local_id;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-4033.8376)), _GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y))), max(_GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y))), _GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), max(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-4033.8376)), _GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (_GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y))))), bool(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), false || (bool(bvec2(true, true))))), (injectionSwitch.x < injectionSwitch.y)))), float(mat4x2(mix(float(_GLF_FUZZED(-4033.8376)), _GLF_IDENTITY(float(injectionSwitch.y), _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))) * (_GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), 1.0, sqrt(0.0), 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-4033.8376), float(_GLF_IDENTITY(mat2x3(_GLF_FUZZED(-4033.8376), round(length(normalize(1.0))), sqrt(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), cos(0.0), 0.0, 0.0), transpose(transpose(mat2x3(_GLF_FUZZED(-4033.8376), round(length(normalize(1.0))), sqrt(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), cos(0.0), 0.0, 0.0))))))), _GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) - 0.0), max(float(injectionSwitch.y), float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0, 0.0, 0.0, 0.0)), (float(mat4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-4033.8376), max(_GLF_IDENTITY(_GLF_FUZZED(-4033.8376), mix(float(_GLF_FUZZED(7.8)), float(_GLF_IDENTITY(_GLF_FUZZED(-4033.8376), (_GLF_FUZZED(-4033.8376)) * 1.0)), bool(true))), _GLF_FUZZED(-4033.8376)))), float(injectionSwitch.y), bool(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))), false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), false || (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), false || (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), injectionSwitch.y)))))), false || ((injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), false || (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))))))), bool(bvec3(! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), false || (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), false || ((injectionSwitch.x < injectionSwitch.y)))), false || (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), (((injectionSwitch.x < injectionSwitch.y))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), false || _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))), (! ((! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))) || false))))))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), false || (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), false || (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))))))))))) || false, ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), false || (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), false || (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))))))))))) || false), (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), false || (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), true && ((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))))), false || (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) || false)), false || (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), (((injectionSwitch.x < injectionSwitch.y))) || false))))))))))))) || false)) && true))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), false || (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), false || (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), false || (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), false || (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))))))))))) || false)))), true && (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), false || (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), false || (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), false || (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), false || (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))))))))))) || false)))), (! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1350.0626, 89.41)))).y), _GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false || ((injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), false || (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-7.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(float(false))), bvec2(false, false))).y), _GLF_IDENTITY(false, false || (false)) || ((injectionSwitch.x < injectionSwitch.y))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), false || ((injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), false || (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), false || (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))))), (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), false || (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))))) && true))))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), false || (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 1.0, sqrt(1.0), 1.0, log(1.0), log(1.0), 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0)), clamp(float(mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 1.0, sqrt(1.0), 1.0, log(1.0), log(1.0), 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0)), float(mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 1.0, sqrt(1.0), 1.0, log(1.0), log(1.0), 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0)), float(mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 1.0, sqrt(1.0), 1.0, log(1.0), log(1.0), 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0))))) < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), false || _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), true && (((injectionSwitch.x < injectionSwitch.y)))))))) && true)))), ((! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), true && (((injectionSwitch.x < injectionSwitch.y)))))))) && true))))) && true))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), false || _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), true && (((injectionSwitch.x < injectionSwitch.y)))))))) && true)))), ((! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), true && (((injectionSwitch.x < injectionSwitch.y)))))))) && true))))) && true)))))) || false)))))) || false))))) || false))))))))))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0))) + 0.0))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (false) || false) || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true))))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((virtual_gid)))), 0u ^ (subgroup_id)))) * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), uint(uvec4(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 0u, 1u)))) | (workgroup_base + subgroup_id * subgroup_size)) + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, max(1, 1)), 0), (true ? ivec2(_GLF_IDENTITY(1, max(1, 1)), 0) : _GLF_FUZZED(ivec2(93959, 40722))))))) % subgroup_size);
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), 0u | (uint(1))), 4, 64, 4);
 uint read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])), min(_GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])), _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(0u + (buf[virtual_gid]), (_GLF_IDENTITY(0u + (buf[virtual_gid]), clamp(0u + (buf[virtual_gid]), 0u + (buf[virtual_gid]), 0u + (buf[virtual_gid])))) | (0u + (buf[virtual_gid])))), min(_GLF_IDENTITY(buf[virtual_gid], 0u + (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), max(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), uint(uvec2(_GLF_IDENTITY(uint(4u), uint(4u)), 0u))))))))), _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(0u + (buf[_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))]), ~ (~ (0u + (buf[_GLF_IDENTITY(virtual_gid, 1u * (_GLF_IDENTITY(virtual_gid, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), 0.0)), min(_GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), 0.0)), (false ? _GLF_FUZZED(3.5) : float(mat2x4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), 0.0)))), float(mat2x4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), 0.0))))), injectionSwitch.x)) | (virtual_gid))))]))))))))), 4, _GLF_IDENTITY(64, min(_GLF_IDENTITY(_GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))))))), _GLF_IDENTITY((64), ((64)) / 1) | 0), 64)), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) + 0u, 1u * ((subgroup_local_id) + 0u))), (_GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), true))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) : _GLF_FUZZED(subgroup_size))) + _GLF_IDENTITY(1, 0 + (1)) < _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))
  {
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(packHalf2x16(_GLF_IDENTITY(acosh(vec2(4.2, -658.093)), clamp(acosh(vec2(4.2, -658.093)), acosh(vec2(4.2, -658.093)), acosh(vec2(4.2, -658.093))))), ~ (~ (_GLF_IDENTITY(packHalf2x16(_GLF_IDENTITY(acosh(vec2(4.2, -658.093)), clamp(acosh(vec2(4.2, -658.093)), acosh(vec2(4.2, -658.093)), acosh(vec2(4.2, -658.093))))), clamp(packHalf2x16(_GLF_IDENTITY(acosh(vec2(4.2, -658.093)), clamp(acosh(vec2(4.2, -658.093)), acosh(vec2(4.2, -658.093)), acosh(vec2(4.2, -658.093))))), packHalf2x16(_GLF_IDENTITY(acosh(vec2(4.2, -658.093)), clamp(acosh(vec2(4.2, -658.093)), acosh(vec2(4.2, -658.093)), acosh(vec2(4.2, -658.093))))), packHalf2x16(_GLF_IDENTITY(acosh(vec2(4.2, -658.093)), clamp(acosh(vec2(4.2, -658.093)), acosh(vec2(4.2, -658.093)), acosh(vec2(4.2, -658.093))))))))))), (_GLF_FUZZED(_GLF_IDENTITY(packHalf2x16(_GLF_IDENTITY(acosh(vec2(4.2, -658.093)), (acosh(vec2(4.2, -658.093))) - tan(vec2(0.0, 0.0)))), (packHalf2x16(_GLF_IDENTITY(acosh(vec2(_GLF_IDENTITY(4.2, (4.2) - tan(0.0)), -658.093)), (acosh(vec2(4.2, -658.093))) - tan(vec2(0.0, 0.0))))) ^ 0u))) | (_GLF_IDENTITY(_GLF_FUZZED(packHalf2x16(acosh(vec2(4.2, _GLF_IDENTITY(-658.093, mix(float(-658.093), float(_GLF_FUZZED(float(_GLF_IDENTITY(true, (true) && true)))), bool(false))))))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(packHalf2x16(acosh(vec2(4.2, -658.093)))), 0u | (_GLF_FUZZED(packHalf2x16(acosh(vec2(4.2, -658.093)))))), (_GLF_IDENTITY(_GLF_FUZZED(packHalf2x16(acosh(vec2(4.2, -658.093)))), clamp(_GLF_FUZZED(packHalf2x16(acosh(vec2(4.2, -658.093)))), _GLF_FUZZED(packHalf2x16(acosh(vec2(4.2, -658.093)))), _GLF_IDENTITY(_GLF_FUZZED(packHalf2x16(acosh(vec2(4.2, -658.093)))), min(_GLF_FUZZED(packHalf2x16(acosh(vec2(4.2, -658.093)))), _GLF_FUZZED(packHalf2x16(acosh(vec2(4.2, -658.093))))))))) | (_GLF_FUZZED(packHalf2x16(acosh(vec2(4.2, -658.093)))))), _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | 0u))))))))) : _GLF_IDENTITY(read, (_GLF_IDENTITY(true, false || (true)) ? read : _GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), clamp(_GLF_FUZZED(next_virtual_gid), _GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), uint(_GLF_IDENTITY(uvec4(_GLF_FUZZED(next_virtual_gid), 1u, 1u, 1u), min(uvec4(_GLF_FUZZED(next_virtual_gid), 1u, _GLF_IDENTITY(1u, (1u) - 0u), 1u), _GLF_IDENTITY(uvec4(_GLF_FUZZED(next_virtual_gid), 1u, 1u, 1u), (uvec4(_GLF_FUZZED(next_virtual_gid), 1u, 1u, 1u)) ^ uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), clamp(_GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid))))))))), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), (_GLF_IDENTITY(4, min(4, 4))) * 1), (4) >> 0), (4) >> (_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (true ? _GLF_IDENTITY(int(6), int(6)) : _GLF_FUZZED(9099))) : _GLF_FUZZED(-62834)))))), clamp(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(6)), min(0 >> _GLF_IDENTITY(int(6), int(6)), 0 >> _GLF_IDENTITY(int(6), int(6)))), 0 >> _GLF_IDENTITY(int(6), int(6)), 0 >> _GLF_IDENTITY(int(6), int(6)))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, 0u | (_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (true ? _GLF_IDENTITY(uint(3u), uint(3u)) : _GLF_FUZZED(subgroup_id)))))) | (_GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))], read, _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, 0 | (4)))))), 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}
