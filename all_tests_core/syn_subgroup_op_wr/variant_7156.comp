#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_16 {
 ivec4 _f0;
 bvec3 _f1;
 mat3 _f2;
 bool _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_17 {
 uint workgroup_id;
 _GLF_struct_16 _f0;
 vec3 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_14 {
 mat2x3 _f0;
 vec2 _f1;
 bvec2 _f2;
 mat4x3 _f3;
 mat4x3 _f4;
 uint _f5;
} ;

struct _GLF_struct_15 {
 int _f0;
 _GLF_struct_14 _f1;
} ;

struct _GLF_struct_12 {
 vec4 _f0;
 int _f1;
} ;

struct _GLF_struct_11 {
 mat4x2 _f0;
 uint _f1;
 bvec4 _f2;
 uint _f3;
 uint _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_13 {
 uint _f0;
 vec4 _f1;
 _GLF_struct_11 _f2;
 _GLF_struct_12 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_9 {
 bvec2 _f0;
 vec3 _f1;
 vec3 _f2;
 mat4x2 _f3;
 uvec4 _f4;
 ivec3 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_10 {
 _GLF_struct_9 _f0;
} ;

struct _GLF_struct_7 {
 vec3 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_6 {
 ivec3 _f0;
} ;

struct _GLF_struct_5 {
 uint _f0;
 vec4 _f1;
 uvec3 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_8 {
 _GLF_struct_5 _f0;
 ivec3 _f1;
 mat3 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_7 _f4;
} ;

struct _GLF_struct_18 {
 _GLF_struct_8 _f0;
 _GLF_struct_10 _f1;
 _GLF_struct_13 _f2;
 _GLF_struct_15 _f3;
 _GLF_struct_17 _f4;
 uvec2 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_2 {
 mat3 _f0;
 uvec4 _f1;
 mat4 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
 uint read;
 mat3x4 _f1;
 mat3x4 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_1 {
 ivec4 _f0;
 _GLF_struct_0 _f1;
} ;

struct _GLF_struct_4 {
 bool _f0;
 _GLF_struct_1 _f1;
 float _f2;
 _GLF_struct_3 _f3;
 vec3 _f4;
 vec2 _f5;
 bvec3 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), true)))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(90.15)), bool(false))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(bool(bvec3(bool(bool(true)), false, true)), bool(bvec3(bool(bvec3(bool(bool(true)), false, true)), true, true))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), true))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))), true))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), true))), false || (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), true)))))) && true)), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), true)))), true)), ! (! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), true), true, true))), true, true)))))), true))))))) && true))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_18 _GLF_struct_replacement_18 = _GLF_struct_18(_GLF_struct_8(_GLF_struct_5(1u, vec4(1.0), uvec3(1u), bvec2(true)), ivec3(1), mat3(1.0), _GLF_struct_6(ivec3(1)), _GLF_struct_7(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), min(_GLF_IDENTITY(vec3(1.0), (true ? vec3(1.0) : _GLF_FUZZED(vec3(98.13, 9.5, -8320.3926)))), _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), clamp(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), _GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), _GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))))))), max(_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(vec3(mat4x3(vec3(1.0), 0.0, sqrt(0.0), 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))))), 1.0, 1.0, 0.0, 1.0, 0.0)), clamp(vec3(mat4x3(vec3(1.0), 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)), vec3(mat4x3(vec3(1.0), 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)), vec3(mat4x3(vec3(1.0), 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), vec3(1.0))), bvec3(_GLF_IDENTITY(true, true && (true))))), _GLF_struct_10(_GLF_struct_9(bvec2(true), vec3(1.0), vec3(1.0), mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), uvec4(1u), ivec3(1), mat4(1.0))), _GLF_struct_13(1u, vec4(1.0), _GLF_struct_11(mat4x2(1.0), 1u, bvec4(true), 1u, 1u, bvec2(true)), _GLF_struct_12(vec4(1.0), 1), bvec2(true)), _GLF_struct_15(1, _GLF_struct_14(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), mix(float(_GLF_FUZZED(9.7)), float(float(_GLF_IDENTITY(float(1.0), (float(1.0)) / 1.0))), bool(true))))), bvec2(true), mat4x3(1.0), mat4x3(1.0), 1u)), _GLF_struct_17(gl_WorkGroupID.x, _GLF_struct_16(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), clamp(1, 1, 1)), 1)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1, 1)), 1)), (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))) << 0), 0, 0, 1), clamp(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(1, (1) | 0)) * 1)))) >> 0), min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))) << 0), 0, 0, 1), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), (false ? _GLF_FUZZED(-61835) : _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))) | (_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (_GLF_IDENTITY(1, clamp(1, 1, 1)))), 1)))))), _GLF_IDENTITY((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (_GLF_IDENTITY(clamp(1, 1, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1))), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1), 0 ^ _GLF_IDENTITY((clamp(1, 1, 1)), (_GLF_IDENTITY((clamp(1, 1, 1)), max((clamp(1, 1, 1)), (clamp(1, 1, 1))))) + 0)))))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), 1))) << 0, ((_GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (_GLF_IDENTITY(clamp(1, 1, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1))), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1), 0 ^ _GLF_IDENTITY((clamp(1, 1, 1)), ((clamp(1, 1, 1))) / 1)))))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), 1), (true ? min(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), _GLF_IDENTITY((_GLF_IDENTITY(clamp(1, 1, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1))), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1), 0 ^ (clamp(1, 1, 1))))))), (true ? (_GLF_IDENTITY(clamp(1, 1, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1))), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1), 0 ^ (clamp(1, 1, 1))))))) : _GLF_FUZZED((30218 | 48076)))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), 1) : _GLF_FUZZED((+ -37614)))))) << 0) + 0)), 0, 0, 1), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), clamp(1, 1, 1)), 1)), (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) / 1), 1, 1)), 1))) << _GLF_IDENTITY(0, (0) >> 0)), 0, 0, 1)))), (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(bitCount(subgroup_local_id)))), 1, 1)), 1))) << 0), 0, 0, 1), clamp(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) >> 0))) * 1), 1))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(182.969), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-911.702)), bvec2(true, false))).x < injectionSwitch.y)) ? (_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) >> 0))) * 1), 1))) : _GLF_FUZZED(14963))) << 0), 0, 0, 1), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (_GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) ^ 0)) + 0)), 1))) << 0), 0, 0, 1), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (1)), 1, 1)), min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))) << 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (1)), 1, 1)), min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (1 ^ 1) | (_GLF_IDENTITY(1, clamp(1, 1, 1)))), 1)), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (1)), 1, 1)), min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), max(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, 0.0), (mat2(injectionSwitch.x, 0.0, 0.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))))))) | (1), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (1), ~ (~ ((_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (1))))) / 1)), 1, 1)), min(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, 1, (-11672 & 0)))), clamp(1, 1, 1)), 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (1)), 1, 1)), min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (1 ^ 1) | (_GLF_IDENTITY(1, clamp(1, 1, 1)))), 1)), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (1)), 1, 1)), min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), max(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, 0.0), (mat2(injectionSwitch.x, 0.0, 0.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))))))) | (1), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (1), ~ (~ ((_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (1))))) / 1)), 1, 1)), min(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, 1, (-11672 & 0)))), clamp(1, 1, 1)), 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (1)), 1, 1)), min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (1 ^ 1) | (_GLF_IDENTITY(1, clamp(1, 1, 1)))), 1)), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (1)), 1, 1)), min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), max(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, 0.0), (mat2(injectionSwitch.x, 0.0, 0.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))))))) | (1), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (1), ~ (~ ((_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (1))))) / 1)), 1, 1)), min(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, 1, (-11672 & 0)))), clamp(1, 1, 1)), 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (1)), 1, 1)), min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)))))))) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (1 ^ 1) | (_GLF_IDENTITY(1, clamp(1, 1, 1)))), 1)), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (1)), 1, 1)), min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), max(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, 0.0), (mat2(injectionSwitch.x, 0.0, 0.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))))))) | (1), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (1), ~ (~ ((_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (1))))) / 1)), 1, 1)), min(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, 1, (-11672 & 0)))), clamp(1, 1, 1)), 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (1)), 1, 1)), min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))))))) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1), (min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)) << 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (1)), 1, 1)), min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (1)), 1, 1)), min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))) << 0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) - 0), (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), min(float(mat2x3(0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), float(mat2x3(0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), injectionSwitch.x)))) | (1)), int(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (1)), 0, 0, 0))), 1, 1)), min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))) << 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)))) | (1)), 1, 1)), min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)))) | (1)), 1, 1)), min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)))) | (1)), 1, 1)), min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)))))) | 0)) * int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 1.0))), 0.0)))), injectionSwitch.x)))) | (1)), 1, 1)), min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))) << 0))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, max(1, 1)))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (1)), 1, 1)), _GLF_IDENTITY(min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1), int(int(_GLF_IDENTITY(min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1), 0 + (min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)))))))))) << 0)))))))), 0, 0, 1))))) - 0))), bvec3(true), mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), _GLF_IDENTITY(1.0, 0.0 + (1.0)))), (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), _GLF_IDENTITY(1.0, 0.0 + (1.0))))) * round(length(normalize(vec3(1.0, 1.0, 1.0)))))), true, uvec4(1u)), vec3(1.0), mat3(1.0)), _GLF_IDENTITY(uvec2(1u), ~ (~ _GLF_IDENTITY((uvec2(1u)), min((uvec2(1u)), _GLF_IDENTITY((uvec2(1u)), max((uvec2(1u)), (uvec2(1u)))))))), mat3(1.0));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(_GLF_struct_replacement_18._f4.workgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_18._f4.workgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_18._f4.workgroup_id, (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), min(_GLF_IDENTITY(uint(6u), (uint(6u)) >> 0u), uint(6u))))) | _GLF_IDENTITY((_GLF_struct_replacement_18._f4.workgroup_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_struct_replacement_18._f4.workgroup_id) : _GLF_FUZZED(subgroup_id))))) ^ (0u | 0u))) / 1u), (_GLF_IDENTITY(true ? workgroup_size * _GLF_IDENTITY(_GLF_struct_replacement_18._f4.workgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_18._f4.workgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_18._f4.workgroup_id, (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) | (_GLF_struct_replacement_18._f4.workgroup_id))) ^ (0u | 0u))) / 1u) : _GLF_FUZZED(subgroup_id), (true ? workgroup_size * _GLF_IDENTITY(_GLF_struct_replacement_18._f4.workgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_18._f4.workgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_18._f4.workgroup_id, (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) | (_GLF_struct_replacement_18._f4.workgroup_id))) ^ (0u | 0u))) / 1u) : _GLF_FUZZED(subgroup_id)) | 0u))), (true ? workgroup_size * _GLF_IDENTITY(_GLF_struct_replacement_18._f4.workgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_18._f4.workgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_18._f4.workgroup_id, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_struct_replacement_18._f4.workgroup_id))) ^ (_GLF_IDENTITY(0u, min(0u, 0u)) | 0u))) / 1u) : _GLF_FUZZED(140392u)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (workgroup_base + subgroup_id * subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u))) + (workgroup_base + subgroup_id * subgroup_size), ~ (~ (0u + (workgroup_base + subgroup_id * subgroup_size))))) - 0u)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x))) * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size))))))))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, int(ivec2(1, 0)))))) | (subgroup_local_id + 1))) * 1u)) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(true, _GLF_struct_1(ivec4(1), _GLF_struct_0(bvec2(true), atomicLoad(buf[virtual_gid], 4, 64, 0), mat3x4(1.0), mat3x4(1.0), vec2(1.0))), 1.0, _GLF_struct_3(_GLF_struct_2(mat3(1.0), uvec4(1u), mat4(1.0), mat2x4(1.0))), _GLF_IDENTITY(vec3(1.0), max(_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) + sqrt(vec3(0.0, 0.0, 0.0))), vec3(1.0))), _GLF_IDENTITY(vec2(1.0), (true ? vec2(1.0) : _GLF_FUZZED(injectionSwitch))), bvec3(true));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec4(bool(bvec3(false, true, true)), true, true, false))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)), bool(bvec2(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)), false))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)), bool(bvec2(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)), false))))), true, true, false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(51.26)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(virtual_gid, 1u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), ~ (~ (_GLF_IDENTITY(uint(0u), 0u ^ (uint(0u))))))) >> 0u)) - 0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), min((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - _GLF_IDENTITY(0u, (0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), max(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), uint(0u)))))))))), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), 0u ^ (_GLF_IDENTITY(uint(0u), 0u | (uint(0u)))))), _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) << (99109u & 0u)))), _GLF_IDENTITY(uint(0u), uint(0u)))))))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u)), (1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))) << 0u)) >> _GLF_IDENTITY(uint(0u), uint(0u))))), 0u)), min(_GLF_IDENTITY(uint(uvec4(virtual_gid, 1u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | 0u)), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | 0u)), max(uint(_GLF_IDENTITY(0u, (0u) | 0u)), uint(_GLF_IDENTITY(0u, (0u) | 0u)))), uint(_GLF_IDENTITY(0u, (0u) | 0u)))), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, max(0u, 0u))), uint(0u)), min((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : 1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) << 0u)), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY((uint(0u)) + 0u, (_GLF_IDENTITY((uint(0u)) + 0u, clamp((uint(0u)) + 0u, _GLF_IDENTITY((uint(0u)) + 0u, 0u | ((uint(0u)) + 0u)), (uint(0u)) + 0u))) - 0u)), (uint(0u)) - 0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), (1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), 0u)), uint(uvec4(uint(uvec4(virtual_gid, 1u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u)), max(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u)), _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))))) ^ 0u)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))), uint(0u)), max(_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(_GLF_IDENTITY(0u, (0u) << 0u))) - 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))), (~ (_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u)))) ^ 0u)))) | (_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))))) >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) | 0u))), min((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(_GLF_IDENTITY(0u, (0u) - 0u))) - 0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) / 1u))))) ^ 0u)), (1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), uint(0u)))), (1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), ~ (~ (_GLF_IDENTITY(uint(0u), 0u | (uint(0u)))))), clamp(uint(0u), uint(0u), uint(0u)))), max((_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), uint(0u)))), (_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), uint(0u)))))) - 0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), 0u)), 0u, 1u, 1u))), _GLF_IDENTITY(uint(uvec4(virtual_gid, 1u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))))))), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), min((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), 0u | (uint(0u)))) << 0u)) - 0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), (1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), 0u)), (uint(uvec4(virtual_gid, 1u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) - 0u), max(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), min((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (true ? _GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(107677u) : uint(0u))) : _GLF_FUZZED(subgroup_local_id))), (uint(0u)) - 0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))))) | (0u))), (uint(0u)) - 0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u)), (1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))) | (1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uvec2(uint(0u), 1u))), (uint(0u)) - 0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), 0u))) / 1u))), clamp(uint(uvec4(virtual_gid, 1u, ((_GLF_IDENTITY(1u, ~ (~ (1u))) << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u)), uint(uvec4(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), 1u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))), _GLF_IDENTITY(min((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))), _GLF_IDENTITY(min(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u ^ (0u))), min(uint(_GLF_IDENTITY(0u, 0u ^ (0u))), uint(_GLF_IDENTITY(0u, 0u ^ (0u))))), (uint(0u)) - 0u))), 0u + ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u)), min(1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u)), 1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))))))), (1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u)))), max(min(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u ^ (0u))), min(uint(_GLF_IDENTITY(0u, 0u ^ (0u))), uint(_GLF_IDENTITY(0u, 0u ^ (0u))))), (uint(0u)) - 0u))), 0u + ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u)), min(1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u)), 1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))))))), (1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u)))), min(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u ^ (0u))), min(uint(_GLF_IDENTITY(0u, 0u ^ (0u))), uint(_GLF_IDENTITY(0u, 0u ^ (0u))))), (uint(0u)) - 0u))), 0u + ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u)), min(1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u)), 1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))))))), (1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))))))), 0u ^ (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u)))) | 0u)) - _GLF_IDENTITY(0u, min(0u, 0u)))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - _GLF_IDENTITY(0u, min(0u, 0u)))))), 0u + (_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))))), min(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))), 0u + ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))))), (1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u)))))) - 0u)))))))), (min((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))), min(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u ^ (0u))), min(uint(_GLF_IDENTITY(0u, 0u ^ (0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), min(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, 0u ^ (0u)))) : _GLF_FUZZED(subgroup_size)))))), (uint(0u)) - 0u))), 0u + ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u)), min(1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u)), 1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))))))), (1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))))), 0u ^ (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - _GLF_IDENTITY(0u, min(0u, 0u)))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - _GLF_IDENTITY(0u, min(0u, 0u)))))), 0u + (_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))))), min(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))), 0u + ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))))), (1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u)))))) - 0u))))))))) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u)), uint(uvec4(virtual_gid, 1u, ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u)))))], _GLF_struct_replacement_4._f1._f1.read, _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, 1 * (4))) / 1) : _GLF_FUZZED(-11124))), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4._f1._f1.read, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_4._f1._f1.read, (_GLF_struct_replacement_4._f1._f1.read) / 1u)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (0u) | (0u)), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_struct_replacement_4._f1._f1.read) ^ 0u))), uint(uvec4(_GLF_struct_replacement_4._f1._f1.read, 1u, 1u, 0u))), _GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, _GLF_IDENTITY(4, _GLF_IDENTITY(0 | (4), (0 | (4)) | (0 | _GLF_IDENTITY((4), (_GLF_IDENTITY((4), _GLF_IDENTITY(((4)) - 0, (_GLF_IDENTITY(((4)) - 0, ~ (~ (((4)) - 0)))) - 0))) - ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(ivec3(int(5), (0 | 0), (64306 & (0 << _GLF_IDENTITY(int(6), int(6))))))), int(5))) << _GLF_IDENTITY(int(5), int(5))))))));
   subgroupAll(_GLF_IDENTITY(true, (true) || false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)), false || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * cos(0.0)) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, (false) && true))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  return;
}
