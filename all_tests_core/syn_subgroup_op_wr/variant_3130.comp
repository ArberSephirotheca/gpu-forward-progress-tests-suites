#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 do
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  return;
 for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) - 0) : _GLF_FUZZED(98098))))) << _GLF_IDENTITY(int(5), int(5))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(5), int(5))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && (_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (true ? _GLF_IDENTITY(5, (_GLF_IDENTITY(5, clamp(5, 5, 5))) << 0) : _GLF_FUZZED(_injected_loop_counter)))))), ! (! (_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(int(int(5)))), int(5)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) / 1)) >> 0)), bool(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | (int(5))), int(5)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, 1, 0)))), false)))) || false, bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(5), int(5))), bool(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, clamp(5, 5, _GLF_IDENTITY(5, max(5, 5)))))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), max(int(5), _GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(min(_injected_loop_counter, _injected_loop_counter)) : int(5))))), int(5)), (_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(17799) : int(5))))) | int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-808.272)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))))), 1, 1, 0)))), false)))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(5), int(5))), bool(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, _GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) ^ 0)) >> 0))))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, 1, 0)))), false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(5), int(5))), bool(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, _GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) ^ 0)) >> 0))))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, 1, 0)))), false)))), true && ((_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(5), int(5))), _GLF_IDENTITY(bool(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, min(5, _GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) ^ 0)) >> _GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, (0) | 0))))))), (0 | 0) ^ (int(_GLF_IDENTITY(5, min(5, _GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) ^ 0)) >> _GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, (0) | 0)))))))))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, 1, 0)))), false)), bool(_GLF_IDENTITY(bool(bool(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, min(5, _GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) ^ 0)) >> _GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, (0) | 0))))))), (0 | 0) ^ (int(_GLF_IDENTITY(5, min(5, _GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) ^ 0)) >> _GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, (0) | 0)))))))))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, 1, 0)))), false))), ! (! (bool(bool(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, min(5, _GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) ^ 0)) >> _GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, (0) | 0))))))), (0 | 0) ^ (int(_GLF_IDENTITY(5, min(5, _GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) ^ 0)) >> _GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, (0) | 0)))))))))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, 1, 0)))), false))))))))))))))) || false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)) || false)))), _GLF_IDENTITY(false, (false) && true) || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch.x) : _GLF_FUZZED(-91.12))) + 0.0) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + 0.0, mix(float(_GLF_FUZZED(-0.4)), float((injectionSwitch.x) + 0.0), bool(true)))) > injectionSwitch.y) || false)), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)) || false, ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)) || false, ! (! (((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)) || false)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1.7) : injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1.6)), bvec2(true, false))).x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) || false)))))
          break;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
        }
       if(_GLF_DEAD(false))
        continue;
       return;
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      break;
    }
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_IDENTITY(false, (false) || false) || (bool(bvec4(false, true, false, true)))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-55551) : 0)), int(_GLF_ONE(1.0, injectionSwitch.y)))))); _injected_loop_counter --)
    {
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false)))) && true), (! (false)) || false)))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) || false)))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), true && (! (false))))), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! (false)) || false))))))))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (false), (! (false)) || false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false || (_GLF_IDENTITY(! (false), (! (false)) || false)), (false || (_GLF_IDENTITY(! (false), (! (false)) || false))) && true))), false || (bool(bool(_GLF_IDENTITY(false || (_GLF_IDENTITY(! (false), (! (false)) || false)), _GLF_IDENTITY((false || (_GLF_IDENTITY(! (false), (! (false)) || false))) && true, bool(bool((false || (_GLF_IDENTITY(! (false), (! (false)) || false))) && true))))))))))))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) || false))))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec4(bvec2(! (false), false), true, false))))), false || (_GLF_IDENTITY(! (false), (! (false)) || false)))))))), true), false), false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) * 1u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))))))
  return;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (-18429 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      continue;
     return;
     if(_GLF_DEAD(false))
      break;
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size));
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / exp(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))), injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
      continue;
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 1u))), workgroup_base)) + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size))), (true ? ~ (~ (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size))) : _GLF_FUZZED(subgroup_local_id))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_TRUE(true), true), bvec2(bvec4(bvec2(_GLF_WRAPPED_IF_TRUE(true), true), false, true))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))), (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))) && true)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))), (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))) && true)), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))), (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))) && true)), false))))))))) || _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
  return;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 0.0, 1.0, 0.0, determinant(mat2(abs(1.0), 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2x4(injectionSwitch.y, 0.0, 1.0, 0.0, determinant(mat2(abs(1.0), 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0) : _GLF_FUZZED(mat2x4(-0.8, 8842.3557, 55.76, 48.64, -8.2, -236.888, 383.613, 8.0))))))))), false || _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bool((false)))))))))))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, log(1.0), 0.0, 1.0, 0.0), transpose(transpose(mat3x2(injectionSwitch, log(1.0), 0.0, 1.0, 0.0)))))).y))));
 uint read = 0;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   subgroupAll(false);
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(_GLF_IDENTITY(2, 1 * (2)), clamp(2, 2, 2)) : _GLF_FUZZED(44594)))) | (2)));
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true))))), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))), true)), true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, (false) && true), false), true)), true))))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true))), false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true))), false)))))))), false)))), true)))))))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)) != 0)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))); _injected_loop_counter --)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(447.468), _GLF_FUZZED(104.892)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)) || (_GLF_DEAD(false))))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)), (bool(bvec4(bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false))) && true))))
        return;
      }
    }
   for(int _injected_loop_counter = (0 & _GLF_IDENTITY(41026, _GLF_IDENTITY(int(ivec3(41026, (0 << _GLF_IDENTITY(int(8), int(8))), 0)), 0 | (int(ivec3(41026, (0 << _GLF_IDENTITY(int(8), int(8))), 0)))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter))), 0 ^ ((_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)))))) < 1), ! (! ((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter))), 0 ^ ((_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)))))) < 1)))) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter))), 0 ^ ((_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)))))) < 1), ! (! ((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter))), 0 ^ ((_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)))))) < 1)))) && true)), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter))), 0 ^ ((_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)))))) < 1), ! (! ((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter))), 0 ^ ((_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)))))) < 1)))) && true))) || false), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter))), 0 ^ ((_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)))))) < 1), ! (! ((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter))), 0 ^ ((_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)))))) < 1)))) && true)), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter))), 0 ^ ((_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)))))) < 1), ! (! ((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter))), 0 ^ ((_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)))))) < 1)))) && true))) || false), true, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter))), 0 ^ ((_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)))))) < 1), ! (! ((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter))), 0 ^ ((_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)))))) < 1)))) && true)), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter))), 0 ^ ((_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)))))) < 1), ! (! ((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter))), 0 ^ ((_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)))))) < 1)))) && true))) || false), true, true))))))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       return;
      }
     if(_GLF_DEAD(false))
      continue;
    }
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 0.0)))) * sqrt(1.0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) * 1))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            return;
           break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             continue;
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             return;
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            break;
          }
         else
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))))
      break;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
    return;
  }
 else
  {
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    return;
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), bool(bool(! (false))))))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    return;
  }
 subgroupBarrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(degrees(_GLF_IDENTITY(-91.66, (true ? -91.66 : _GLF_FUZZED(-7.6))))) : injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x) + 0.0) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y)))), (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y))))) || false))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y)))), (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y))))) || false))), ! (! (bool(bool(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y)))), (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y))))) || false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y)))), (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y))))) || false))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y)))), (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y))))) || false))), ! (! (bool(bool(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y)))), (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y))))) || false)))))))))), (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y)))), (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(false))), true && (bool(false))))) : injectionSwitch.y))))) || false))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), _GLF_IDENTITY(float(_GLF_FUZZED(-257.015)), max(float(_GLF_FUZZED(-257.015)), float(_GLF_FUZZED(-257.015)))), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y, clamp(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), _GLF_IDENTITY(float(_GLF_FUZZED(-257.015)), max(float(_GLF_FUZZED(-257.015)), float(_GLF_FUZZED(-257.015)))), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y, float(mat4(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), _GLF_IDENTITY(float(_GLF_FUZZED(-257.015)), max(float(_GLF_FUZZED(-257.015)), float(_GLF_FUZZED(-257.015)))), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y, clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), _GLF_IDENTITY(float(_GLF_FUZZED(-257.015)), max(float(_GLF_FUZZED(-257.015)), float(_GLF_FUZZED(-257.015)))), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y, false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), _GLF_IDENTITY(float(_GLF_FUZZED(-257.015)), max(float(_GLF_FUZZED(-257.015)), float(_GLF_FUZZED(-257.015)))), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y, false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), _GLF_IDENTITY(float(_GLF_FUZZED(-257.015)), max(float(_GLF_FUZZED(-257.015)), float(_GLF_FUZZED(-257.015)))), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, log(1.0)))), false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), _GLF_IDENTITY(float(_GLF_FUZZED(-257.015)), max(float(_GLF_FUZZED(-257.015)), float(_GLF_FUZZED(-257.015)))), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y, false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), _GLF_IDENTITY(float(_GLF_FUZZED(-257.015)), max(float(_GLF_FUZZED(-257.015)), float(_GLF_FUZZED(-257.015)))), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y)))))), (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), max(_GLF_FUZZED(degrees(-91.66)), _GLF_FUZZED(degrees(-91.66))))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))) : injectionSwitch.y))))) || false))), ! (! (bool(bool(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y)))), ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y)))))) || false))) || false))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y)))), (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y))))) || false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y)))), (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y))))) || false))), ! (! (bool(bool(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y)))), (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y))))) || false)))))))), (! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y), (true ? (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y) : _GLF_FUZZED(-1.4)))))), (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), _GLF_IDENTITY(bool(bvec2((bool(false)), true)), false || (bool(bvec2((bool(false)), true)))))))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))) || false))), ! (! (bool(bool(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(degrees(-91.66), max(degrees(-91.66), degrees(-91.66))))), float(_GLF_FUZZED(_GLF_IDENTITY(-257.015, clamp(-257.015, -257.015, _GLF_IDENTITY(-257.015, (-257.015) - 0.0))))), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y)))), (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y))))) || false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y)))), (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y))))) || false))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, ! (! (true))) && (bool(false))))) : injectionSwitch.y)))), (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y))))) || false))), ! (! (bool(bool(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y)))), (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y))))) || false)))))))))), (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y)))), (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, (false) || false) ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(degrees(-91.66))), mix(float(float(_GLF_FUZZED(degrees(-91.66)))), float(_GLF_FUZZED(-73.54)), bool(false))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(false))), true && (bool(false))))) : injectionSwitch.y))))) || false))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), _GLF_IDENTITY(float(_GLF_FUZZED(-257.015)), max(float(_GLF_FUZZED(-257.015)), float(_GLF_FUZZED(-257.015)))), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y, clamp(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), _GLF_IDENTITY(float(_GLF_FUZZED(-257.015)), max(float(_GLF_FUZZED(-257.015)), float(_GLF_FUZZED(-257.015)))), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y, float(mat4(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(-257.015)), max(float(_GLF_FUZZED(-257.015)), float(_GLF_FUZZED(-257.015)))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(-257.015)), max(float(_GLF_FUZZED(-257.015)), float(_GLF_FUZZED(-257.015)))), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(float(_GLF_FUZZED(-257.015)), max(float(_GLF_FUZZED(-257.015)), float(_GLF_FUZZED(-257.015)))), 1.0), (true ? vec2(_GLF_IDENTITY(float(_GLF_FUZZED(-257.015)), max(float(_GLF_FUZZED(-257.015)), float(_GLF_FUZZED(-257.015)))), 1.0) : _GLF_FUZZED(injectionSwitch)))))))), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y, clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), _GLF_IDENTITY(float(_GLF_FUZZED(-257.015)), max(float(_GLF_FUZZED(-257.015)), float(_GLF_FUZZED(-257.015)))), _GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), true && ((bool(false))))))) : injectionSwitch.y, false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), _GLF_IDENTITY(float(_GLF_FUZZED(-257.015)), max(float(_GLF_FUZZED(-257.015)), float(_GLF_FUZZED(-257.015)))), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y, false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), _GLF_IDENTITY(float(_GLF_FUZZED(-257.015)), max(float(_GLF_FUZZED(-257.015)), float(_GLF_FUZZED(-257.015)))), _GLF_IDENTITY(bool(false), true && (bool(false))))), min(_GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), _GLF_IDENTITY(float(_GLF_FUZZED(-257.015)), max(float(_GLF_FUZZED(-257.015)), float(_GLF_FUZZED(-257.015)))), _GLF_IDENTITY(bool(false), true && (bool(false))))), _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), _GLF_IDENTITY(float(_GLF_FUZZED(-257.015)), max(float(_GLF_FUZZED(-257.015)), float(_GLF_FUZZED(-257.015)))), _GLF_IDENTITY(bool(false), true && (bool(false))))))) : injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, log(1.0)))), false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), _GLF_IDENTITY(float(_GLF_FUZZED(-257.015)), max(float(_GLF_FUZZED(-257.015)), float(_GLF_FUZZED(-257.015)))), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y, false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), _GLF_IDENTITY(float(_GLF_FUZZED(-257.015)), max(float(_GLF_IDENTITY(_GLF_FUZZED(-257.015), clamp(_GLF_FUZZED(-257.015), _GLF_FUZZED(-257.015), _GLF_FUZZED(-257.015)))), float(_GLF_FUZZED(-257.015)))), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y)))))), (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), max(_GLF_FUZZED(degrees(-91.66)), _GLF_FUZZED(degrees(-91.66))))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(bool(false), ! (! (bool(false))))), bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(bool(false), ! (! (bool(false))))), bool(bvec3(true && (_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false, false))))))))) : injectionSwitch.y))))) || false))), ! (! (bool(bool(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(false)), true && ((bool(false))))), bool(bool(! (_GLF_IDENTITY((bool(false)), true && ((bool(false))))))))))))) : injectionSwitch.y)))), ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(true && (bool(false)), true && (true && _GLF_IDENTITY((bool(false)), _GLF_IDENTITY(bool(bool((bool(false)))), bool(bvec4(bool(bool((bool(false)))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) : _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(_GLF_IDENTITY(-91.66, mix(float(_GLF_FUZZED(9662.5201)), float(-91.66), bool(true)))))), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), false || (bool(false)))))))))) : injectionSwitch.y))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(_GLF_IDENTITY(-257.015, clamp(_GLF_IDENTITY(-257.015, mix(float(-257.015), float(_GLF_FUZZED(8.0)), bool(false))), -257.015, _GLF_IDENTITY(-257.015, mix(float(-257.015), float(_GLF_FUZZED(vec3(-7.3, 2.2, 4.9).s)), bool(false))))))), _GLF_IDENTITY(bool(false), true && (bool(false))))) : injectionSwitch.y)))))) || false))) || false))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && _GLF_IDENTITY((_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), bool(false))) : injectionSwitch.y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), clamp(_GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), (_GLF_FUZZED(degrees(-91.66))) - 0.0), _GLF_FUZZED(degrees(-91.66)), _GLF_FUZZED(degrees(-91.66))))), float(_GLF_FUZZED(-257.015)), bool(false))) : injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat3(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, exp(0.0), 1.0, 1.0))))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_IDENTITY(_GLF_FUZZED(-257.015), (_GLF_FUZZED(_GLF_IDENTITY(-257.015, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(-257.015, (_GLF_IDENTITY(-257.015, (-257.015) + 0.0)) + 0.0) : _GLF_FUZZED(8925.4086))))) / 1.0)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), true && (bool(bvec2(false, true)))))))))) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4136.4907), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(13044u))), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4136.4907), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(13044u))), bvec2(true, false)))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), bool(false))) : injectionSwitch.y), clamp((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), bool(false))), (false ? _GLF_FUZZED(float((bvec3(false, false, true) == bvec3(true, false, false)))) : _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(degrees(-91.66))), (float(_GLF_FUZZED(degrees(-91.66)))) - 0.0), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), (bool(false)) || false))))) : injectionSwitch.y, clamp(false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), bool(false))), (false ? _GLF_FUZZED(float((bvec3(false, false, true) == bvec3(true, false, false)))) : _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(degrees(-91.66))), (float(_GLF_FUZZED(degrees(-91.66)))) - 0.0), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), (bool(false)) || false))))) : injectionSwitch.y, _GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), bool(false))), (false ? _GLF_FUZZED(float((bvec3(false, false, true) == bvec3(true, false, false)))) : _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(degrees(-91.66))), (float(_GLF_FUZZED(degrees(-91.66)))) - 0.0), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), (bool(false)) || false))))) : injectionSwitch.y, float(mat4(false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), bool(false))), (false ? _GLF_FUZZED(float((bvec3(false, false, true) == bvec3(true, false, false)))) : _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(degrees(-91.66))), (float(_GLF_FUZZED(degrees(-91.66)))) - 0.0), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), (bool(false)) || false))))) : injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), bool(false))), (false ? _GLF_FUZZED(float((bvec3(false, false, true) == bvec3(true, false, false)))) : _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(degrees(-91.66))), (float(_GLF_FUZZED(degrees(-91.66)))) - 0.0), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), (bool(false)) || false))))) : injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), bool(false))), (false ? _GLF_FUZZED(float((bvec3(false, false, true) == bvec3(true, false, false)))) : _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(degrees(-91.66))), (float(_GLF_FUZZED(degrees(-91.66)))) - 0.0), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), (bool(false)) || false))))) : injectionSwitch.y) / 1.0)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), bool(false))) : injectionSwitch.y), (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), _GLF_IDENTITY(float(_GLF_FUZZED(-257.015)), mix(float(float(_GLF_FUZZED(-257.015))), float(_GLF_FUZZED((4867.5417))), bool(false))), bool(false))) : injectionSwitch.y)))), true)))))))), true && (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), (true ? _GLF_FUZZED(degrees(-91.66)) : _GLF_FUZZED(2.8)))), float(_GLF_FUZZED(-257.015)), bool(false))) : injectionSwitch.y))))))), true && ((_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), bool(false))) : injectionSwitch.y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), clamp(_GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), (_GLF_FUZZED(degrees(-91.66))) - 0.0), _GLF_FUZZED(degrees(-91.66)), _GLF_FUZZED(degrees(-91.66))))), float(_GLF_FUZZED(-257.015)), bool(false))) : injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat3(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, exp(0.0), 1.0, 1.0))))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_IDENTITY(_GLF_FUZZED(-257.015), (_GLF_FUZZED(_GLF_IDENTITY(-257.015, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(-257.015, (_GLF_IDENTITY(-257.015, (-257.015) + 0.0)) + 0.0) : _GLF_FUZZED(8925.4086))))) / 1.0)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), true && (bool(bvec2(false, true)))))))))) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4136.4907), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(13044u))), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4136.4907), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(13044u))), bvec2(true, false)))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), bool(false))) : injectionSwitch.y), clamp((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), bool(false))), (false ? _GLF_FUZZED(float((bvec3(false, false, true) == bvec3(true, false, false)))) : _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(degrees(-91.66))), (float(_GLF_FUZZED(degrees(-91.66)))) - 0.0), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), (bool(false)) || false))))) : injectionSwitch.y, clamp(false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), bool(false))), (false ? _GLF_FUZZED(float((bvec3(false, false, true) == bvec3(true, false, false)))) : _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(degrees(-91.66))), (float(_GLF_FUZZED(degrees(-91.66)))) - 0.0), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), (bool(false)) || false))))) : injectionSwitch.y, _GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), bool(false))), (false ? _GLF_FUZZED(float((bvec3(false, false, true) == bvec3(true, false, false)))) : _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(degrees(-91.66))), (float(_GLF_FUZZED(degrees(-91.66)))) - 0.0), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), (bool(false)) || false))))) : injectionSwitch.y, float(mat4(false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), bool(false))), (false ? _GLF_FUZZED(float((bvec3(false, false, true) == bvec3(true, false, false)))) : _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(degrees(-91.66))), (float(_GLF_FUZZED(degrees(-91.66)))) - 0.0), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), (bool(false)) || false))))) : injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), bool(false))), (false ? _GLF_FUZZED(float((bvec3(false, false, true) == bvec3(true, false, false)))) : _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(degrees(-91.66))), (float(_GLF_FUZZED(degrees(-91.66)))) - 0.0), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), (bool(false)) || false))))) : injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), bool(false))), (false ? _GLF_FUZZED(float((bvec3(false, false, true) == bvec3(true, false, false)))) : _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(degrees(-91.66))), (float(_GLF_FUZZED(degrees(-91.66)))) - 0.0), float(_GLF_FUZZED(-257.015)), _GLF_IDENTITY(bool(false), (bool(false)) || false))))) : injectionSwitch.y) / 1.0)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), float(_GLF_FUZZED(-257.015)), bool(false))) : injectionSwitch.y), (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_FUZZED(degrees(-91.66))), _GLF_IDENTITY(float(_GLF_FUZZED(-257.015)), mix(float(float(_GLF_FUZZED(-257.015))), float(_GLF_FUZZED((4867.5417))), bool(false))), bool(false))) : injectionSwitch.y)))), true)))))))), true && (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(degrees(-91.66)), (true ? _GLF_FUZZED(degrees(-91.66)) : _GLF_FUZZED(2.8)))), float(_GLF_FUZZED(-257.015)), bool(false))) : injectionSwitch.y)))))))))) || false))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(0u, (0u) << (0u | 0u)) | 0u) | (_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid)))))], read, 4, 64, _GLF_IDENTITY(4, clamp(4, 4, 4)));
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (false)))), false || ((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)), (bool(bvec2(injectionSwitch.x < injectionSwitch.y, true))) && true))))))))), true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))) < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true, false, false))))
          return;
         return;
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9163.7544)), bool(false))))), injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
}
