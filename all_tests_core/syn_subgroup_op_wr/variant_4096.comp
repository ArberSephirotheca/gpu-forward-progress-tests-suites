#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), true, true, true)))) && true), true, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true)))))))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec3(_GLF_IDENTITY(! ((false)), false || (! ((false)))), true, false)))))))) && true)))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, true))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-16274) : _GLF_IDENTITY(2, min(2, 2)))), (0 >> _GLF_IDENTITY(int(8), int(8))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-16274) : _GLF_IDENTITY(2, min(2, 2)))), max(_GLF_IDENTITY(2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-16274) : _GLF_IDENTITY(2, min(2, 2)))), _GLF_IDENTITY(2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-16274) : _GLF_IDENTITY(2, min(2, 2))))))))), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)).y)))))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), (subgroup_local_id) | (subgroup_local_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | _GLF_IDENTITY(((subgroup_local_id + 1)), (_GLF_IDENTITY(((subgroup_local_id + 1)), (_GLF_IDENTITY(((subgroup_local_id + 1)), _GLF_IDENTITY(max(((subgroup_local_id + 1)), ((subgroup_local_id + 1))), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)) : max((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u)), ((subgroup_local_id + 1))))))) >> 0u)) * 1u)) % subgroup_size);
 for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED(11461)))))), clamp(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED(11461)))))), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED(11461)))))), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED(11461))))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED(11461))))))), clamp(_GLF_IDENTITY(1, (1) * ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED(11461))))))), _GLF_IDENTITY(1, (1) * ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED(11461)))), (int(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED(11461))))) | 0)))), _GLF_IDENTITY(1, (1) * ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED(11461)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED(11461)))))), clamp(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED(11461)))))), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED(11461)))))), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED(11461))))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED(11461))))))), clamp(_GLF_IDENTITY(1, (1) * ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED(11461))))))), _GLF_IDENTITY(1, (1) * ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED(11461)))), (int(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED(11461))))) | 0)))), _GLF_IDENTITY(1, (1) * ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED(11461)))))))))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED(11461)))))), clamp(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED(11461)))))), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED(11461)))))), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED(11461))))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED(11461))))))), clamp(_GLF_IDENTITY(1, (1) * ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED(11461))))))), _GLF_IDENTITY(1, (1) * ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED(11461)))), (int(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED(11461))))) | 0)))), _GLF_IDENTITY(1, (1) * ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED(11461))))))))))))))) >> 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1), int(int(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1)))) > _GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) - 0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), int(int((0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), 0 ^ ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | 0), int(7))))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(int(0 << _GLF_IDENTITY(int(7), int(7)))), (int(int(0 << _GLF_IDENTITY(int(7), int(7))))) | (int(int(0 << _GLF_IDENTITY(int(7), int(7)))))))), (0 << _GLF_IDENTITY(int(7), int(7)))))); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), _GLF_IDENTITY(~ (~ (~ (4))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(~ (~ (~ (4))), 1), (_GLF_IDENTITY(ivec2(~ (~ (~ (4))), 1), min(ivec2(_GLF_IDENTITY(~ (~ (~ (4))), (~ (~ (~ (4)))) * 1), 1), ivec2(~ (~ _GLF_IDENTITY((~ (4)), max((~ (4)), (~ (4))))), 1)))) << ivec2(0, 0)), (_GLF_IDENTITY(ivec2(~ (~ (~ (4))), 1), (_GLF_IDENTITY(ivec2(~ (~ (~ (4))), 1), min(ivec2(_GLF_IDENTITY(~ (~ (~ (4))), (~ (~ (~ (4)))) * 1), 1), ivec2(~ (~ _GLF_IDENTITY((~ (4)), max((~ (4)), (~ (4))))), 1)))) << ivec2(0, 0))) ^ ivec2(0, 0))))))), 64, 4);
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 1.0, 1.0, 1.0)), max(float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0)))))))), clamp(max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0)))))))), _GLF_IDENTITY(max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0)))))))), float(mat4(max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0)))))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0))), max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0))))))))))), 1.0, 1.0, 1.0, 1.0)), float(mat2x3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 1.0, 1.0, 1.0)), max(float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0)))))))), clamp(max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0)))))))), _GLF_IDENTITY(max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0)))))))), float(mat4(max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0)))))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0))), max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0))))))))))), 1.0, 1.0, 1.0, 1.0)), float(mat2x3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 1.0)))), clamp(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 1.0, 1.0, 1.0)), max(float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0)))))))), clamp(max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0)))))))), _GLF_IDENTITY(max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0)))))))), float(mat4(max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0)))))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0))), max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0))))))))))), 1.0, 1.0, 1.0, 1.0)), float(mat2x3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 1.0, 1.0, 1.0)), max(float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0)))))))), clamp(max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0)))))))), _GLF_IDENTITY(max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0)))))))), float(mat4(max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0)))))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0))), max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0))))))))))), 1.0, 1.0, 1.0, 1.0)), float(mat2x3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 1.0)))), min(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 1.0, 1.0, 1.0)), max(float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0)))))))), clamp(max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0)))))))), _GLF_IDENTITY(max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0)))))))), float(mat4(max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0)))))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0))), max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0))))))))))), 1.0, 1.0, 1.0, 1.0)), float(mat2x3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 1.0, 1.0, 1.0)), max(float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0)))))))), clamp(max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0)))))))), _GLF_IDENTITY(max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0)))))))), float(mat4(max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0)))))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0))), max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0))))))))))), 1.0, 1.0, 1.0, 1.0)), float(mat2x3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 1.0, 1.0, 1.0)), max(float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0)))))))), clamp(max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0)))))))), _GLF_IDENTITY(max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0)))))))), float(mat4(max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0)))))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0))), max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0))))))))))), 1.0, 1.0, 1.0, 1.0)), float(mat2x3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 1.0, 1.0, 1.0)), max(float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0)))))))), clamp(max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0)))))))), _GLF_IDENTITY(max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0)))))))), float(mat4(max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0)))))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0))), max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / round(length(normalize(cos(vec2(0.0, 0.0))))))))))), 1.0, 1.0, 1.0, 1.0)), float(mat2x3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 1.0))))))), injectionSwitch.y))))))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), bool(bvec2(! ((_GLF_DEAD(false))), true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
    }
   else
    {
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && (false)))))));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-66.74, 1.0))))) + vec2(0.0, 0.0)).x > injectionSwitch.y)) || false))))
      {
      }
     else
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | 0))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sin(0.0))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-14.17)), (_GLF_IDENTITY(float(_GLF_FUZZED(-14.17)), max(float(_GLF_FUZZED(-14.17)), _GLF_IDENTITY(float(_GLF_FUZZED(-14.17)), float(mat3x2(float(_GLF_FUZZED(-14.17)), 1.0, 0.0, 0.0, 0.0, 1.0)))))) - 0.0), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) * 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) * 1.0)))), bool(true))) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-14.17)), (_GLF_IDENTITY(float(_GLF_FUZZED(-14.17)), max(float(_GLF_FUZZED(-14.17)), _GLF_IDENTITY(float(_GLF_FUZZED(-14.17)), float(mat3x2(float(_GLF_FUZZED(-14.17)), 1.0, 0.0, 0.0, 0.0, 1.0)))))) - 0.0), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) * 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) * 1.0)))), bool(true))) > injectionSwitch.y)) || false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 1 * (int(1))))) & 1, (false ? _GLF_FUZZED(-18896) : ((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), min(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(int(1), int(1)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-62578) : 1 << _GLF_IDENTITY(int(1), int(1))))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 1 * (int(1))))) & 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | (-19363 & 0))); _injected_loop_counter --)
    {
     if(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)) < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) ^ 0u))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY((_injected_loop_counter ++), (_GLF_IDENTITY((_injected_loop_counter ++), ~ (~ ((_injected_loop_counter ++))))) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | 0)))) / int(_GLF_ONE(1.0, injectionSwitch.y))))
            {
             if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, (4) << 0));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       do
        {
         subgroupAll(false);
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))) || false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-1535.8247 - -33.22))), float(injectionSwitch.y), bool(true)))))))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) + 0.0) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-75.45, 31.28)) : injectionSwitch)).y, injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(vec3(0.0, 0.0, 0.0))), injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(vec3(0.0, 0.0, 0.0))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(vec3(0.0, 0.0, 0.0))), injectionSwitch.y)))), false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((false), ((false)) && true) && true)))
            barrier();
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))))[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))))).y, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3873.1081)), float(1.0), bool(true))), 1.0)), 1.0))))[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))), (false ? _GLF_FUZZED(injectionSwitch) : mix(vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) * sqrt(vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))[0], _GLF_FUZZED(3.8)), vec2(_GLF_IDENTITY(_GLF_FUZZED(0.3), mix(float(_GLF_FUZZED(-16.71)), float(_GLF_FUZZED(0.3)), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(true, (true) || false), false)))))))).y, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0)))) * mat2(1.0)))[0], _GLF_FUZZED(3.8)), _GLF_IDENTITY(vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), min(vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]))), bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), bool(bvec4(true, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), bool(bvec4(true, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))), false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), bool(bvec4(true, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))), false))), false, false, true))))))))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(36.91))), 1.0))))[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), false, true))), _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))).y)), 0.0, 0.0, 1.0)), (float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))))[0], _GLF_IDENTITY(_GLF_FUZZED(3.8), (_GLF_IDENTITY(_GLF_FUZZED(3.8), _GLF_IDENTITY(float(mat2(_GLF_FUZZED(3.8), 0.0, 0.0, 0.0)), (float(mat2(_GLF_FUZZED(3.8), 0.0, 0.0, 0.0))) / 1.0))) - 0.0)), vec2(_GLF_FUZZED(_GLF_IDENTITY(0.3, (true ? _GLF_IDENTITY(0.3, float(mat3x2(_GLF_IDENTITY(0.3, mix(float(_GLF_FUZZED(8.5)), float(0.3), bool(true))), 1.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(normalize(float(_injected_loop_counter)))))), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) >> 0)))], max((injectionSwitch)[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) >> 0)))], (injectionSwitch)[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) >> 0)))]))), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))))[0], _GLF_IDENTITY(_GLF_FUZZED(3.8), (_GLF_FUZZED(3.8)) - 0.0)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))))[0], _GLF_IDENTITY(_GLF_FUZZED(3.8), (_GLF_FUZZED(3.8)) - 0.0)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))).y, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch))) * sqrt(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), vec2(_GLF_IDENTITY(mat2(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), 0.0, 0.0), mat2(mat2(mat2(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), 0.0, 0.0))))))))))[0], _GLF_IDENTITY(_GLF_FUZZED(3.8), (_GLF_FUZZED(3.8)) - 0.0)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))).y, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch))) * sqrt(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), vec2(_GLF_IDENTITY(mat2(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), 0.0, 0.0), mat2(mat2(mat2(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), 0.0, 0.0))))))))))[0], _GLF_IDENTITY(_GLF_FUZZED(3.8), (_GLF_FUZZED(3.8)) - 0.0)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))).y, mix(float(_GLF_FUZZED(2.2)), float(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch))) * sqrt(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), vec2(_GLF_IDENTITY(mat2(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), 0.0, 0.0), mat2(mat2(mat2(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), 0.0, 0.0))))))))))[0], _GLF_IDENTITY(_GLF_FUZZED(3.8), (_GLF_FUZZED(3.8)) - 0.0)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))).y), bool(true))), 1.0, 1.0, 0.0), transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch))) * sqrt(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), vec2(_GLF_IDENTITY(mat2(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), 0.0, 0.0), mat2(mat2(mat2(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), 0.0, 0.0))))))))))[0], _GLF_IDENTITY(_GLF_FUZZED(3.8), (_GLF_FUZZED(3.8)) - 0.0)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))).y, mix(float(_GLF_FUZZED(2.2)), float(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch))) * sqrt(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), vec2(_GLF_IDENTITY(mat2(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), 0.0, 0.0), mat2(mat2(mat2(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), 0.0, 0.0))))))))))[0], _GLF_IDENTITY(_GLF_FUZZED(3.8), (_GLF_FUZZED(3.8)) - 0.0)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))).y), bool(true))), 1.0, 1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) - 0.0)) / 1.0), max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))), vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)))), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), max(sqrt(vec2(1.0, 1.0)), sqrt(vec2(1.0, 1.0))))))) + sin(vec2(0.0, 0.0)))[0], _GLF_FUZZED(3.8)), _GLF_IDENTITY(vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1])) * mat2(1.0)), bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(((bvec2(true, true) != bvec2(false, true)) ? -662.463 : -5.0))), bool(false))), 1.0))))[0], _GLF_FUZZED(3.8)), vec2(_GLF_IDENTITY(_GLF_FUZZED(0.3), (false ? _GLF_FUZZED(8680.1824) : _GLF_IDENTITY(_GLF_FUZZED(0.3), (_GLF_FUZZED(0.3)) / 1.0))), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))))).y)), 0.0, 0.0, 1.0))) - 0.0)), _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))))[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))))).y, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3873.1081)), float(1.0), bool(true))), 1.0)), 1.0))))[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))), (false ? _GLF_FUZZED(injectionSwitch) : mix(vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) * sqrt(vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))[0], _GLF_FUZZED(3.8)), vec2(_GLF_IDENTITY(_GLF_FUZZED(0.3), mix(float(_GLF_FUZZED(-16.71)), float(_GLF_FUZZED(0.3)), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(true, (true) || false), false)))))))).y, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0)))) * mat2(1.0)))[0], _GLF_FUZZED(3.8)), _GLF_IDENTITY(vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), min(vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]))), bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), bool(bvec4(true, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), bool(bvec4(true, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))), false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), bool(bvec4(true, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))), false))), false, false, true))))))))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(36.91))), 1.0))))[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), false, true))), _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))).y)), 0.0, 0.0, 1.0)), (float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))))[0], _GLF_IDENTITY(_GLF_FUZZED(3.8), (_GLF_IDENTITY(_GLF_FUZZED(3.8), _GLF_IDENTITY(float(mat2(_GLF_FUZZED(3.8), 0.0, 0.0, 0.0)), (float(mat2(_GLF_FUZZED(3.8), 0.0, 0.0, 0.0))) / 1.0))) - 0.0)), vec2(_GLF_FUZZED(_GLF_IDENTITY(0.3, (true ? _GLF_IDENTITY(0.3, float(mat3x2(_GLF_IDENTITY(0.3, mix(float(_GLF_FUZZED(8.5)), float(0.3), bool(true))), 1.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(normalize(float(_injected_loop_counter)))))), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) >> 0)))], max((injectionSwitch)[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) >> 0)))], (injectionSwitch)[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) >> 0)))]))), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))))[0], _GLF_IDENTITY(_GLF_FUZZED(3.8), (_GLF_FUZZED(3.8)) - 0.0)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))))[0], _GLF_IDENTITY(_GLF_FUZZED(3.8), (_GLF_FUZZED(3.8)) - 0.0)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))).y, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch))) * sqrt(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), vec2(_GLF_IDENTITY(mat2(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), 0.0, 0.0), mat2(mat2(mat2(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), 0.0, 0.0))))))))))[0], _GLF_IDENTITY(_GLF_FUZZED(3.8), (_GLF_FUZZED(3.8)) - 0.0)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))).y, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch))) * sqrt(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), vec2(_GLF_IDENTITY(mat2(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), 0.0, 0.0), mat2(mat2(mat2(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), 0.0, 0.0))))))))))[0], _GLF_IDENTITY(_GLF_FUZZED(3.8), (_GLF_FUZZED(3.8)) - 0.0)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))).y, mix(float(_GLF_FUZZED(2.2)), float(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch))) * sqrt(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), vec2(_GLF_IDENTITY(mat2(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), 0.0, 0.0), mat2(mat2(mat2(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), 0.0, 0.0))))))))))[0], _GLF_IDENTITY(_GLF_FUZZED(3.8), (_GLF_FUZZED(3.8)) - 0.0)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))).y), bool(true))), 1.0, 1.0, 0.0), transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch))) * sqrt(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), vec2(_GLF_IDENTITY(mat2(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), 0.0, 0.0), mat2(mat2(mat2(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), 0.0, 0.0))))))))))[0], _GLF_IDENTITY(_GLF_FUZZED(3.8), (_GLF_FUZZED(3.8)) - 0.0)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))).y, mix(float(_GLF_FUZZED(2.2)), float(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch))) * sqrt(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), vec2(_GLF_IDENTITY(mat2(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), 0.0, 0.0), mat2(mat2(mat2(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), 0.0, 0.0))))))))))[0], _GLF_IDENTITY(_GLF_FUZZED(3.8), (_GLF_FUZZED(3.8)) - 0.0)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))).y), bool(true))), 1.0, 1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) - 0.0)) / 1.0), max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))), vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)))), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), max(sqrt(vec2(1.0, 1.0)), sqrt(vec2(1.0, 1.0))))))) + sin(vec2(0.0, 0.0)))[0], _GLF_FUZZED(3.8)), _GLF_IDENTITY(vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1])) * mat2(1.0)), bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(((bvec2(true, true) != bvec2(false, true)) ? -662.463 : -5.0))), bool(false))), 1.0))))[0], _GLF_FUZZED(3.8)), vec2(_GLF_IDENTITY(_GLF_FUZZED(0.3), (false ? _GLF_FUZZED(8680.1824) : _GLF_IDENTITY(_GLF_FUZZED(0.3), (_GLF_FUZZED(0.3)) / 1.0))), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))))).y)), 0.0, 0.0, 1.0))) - 0.0)), true)), (bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))))[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))))).y, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3873.1081)), float(1.0), bool(true))), 1.0)), 1.0))))[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))), (false ? _GLF_FUZZED(injectionSwitch) : mix(vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) * sqrt(vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))[0], _GLF_FUZZED(3.8)), vec2(_GLF_IDENTITY(_GLF_FUZZED(0.3), mix(float(_GLF_FUZZED(-16.71)), float(_GLF_FUZZED(0.3)), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(true, (true) || false), false)))))))).y, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0)))) * mat2(1.0)))[0], _GLF_FUZZED(3.8)), _GLF_IDENTITY(vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), min(vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]))), bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), bool(bvec4(true, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), bool(bvec4(true, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))), false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), bool(bvec4(true, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))), false))), false, false, true))))))))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(36.91))), 1.0))))[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), false, true))), _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))).y)), 0.0, 0.0, 1.0)), (float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))))[0], _GLF_IDENTITY(_GLF_FUZZED(3.8), (_GLF_IDENTITY(_GLF_FUZZED(3.8), _GLF_IDENTITY(float(mat2(_GLF_FUZZED(3.8), 0.0, 0.0, 0.0)), (float(mat2(_GLF_FUZZED(3.8), 0.0, 0.0, 0.0))) / 1.0))) - 0.0)), vec2(_GLF_FUZZED(_GLF_IDENTITY(0.3, (true ? _GLF_IDENTITY(0.3, float(mat3x2(_GLF_IDENTITY(0.3, mix(float(_GLF_FUZZED(8.5)), float(0.3), bool(true))), 1.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(normalize(float(_injected_loop_counter)))))), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) >> 0)))], max((injectionSwitch)[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) >> 0)))], (injectionSwitch)[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) >> 0)))]))), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))))[0], _GLF_IDENTITY(_GLF_FUZZED(3.8), (_GLF_FUZZED(3.8)) - 0.0)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))))[0], _GLF_IDENTITY(_GLF_FUZZED(3.8), (_GLF_FUZZED(3.8)) - 0.0)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))).y, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch))) * sqrt(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), vec2(_GLF_IDENTITY(mat2(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), 0.0, 0.0), mat2(mat2(mat2(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), 0.0, 0.0))))))))))[0], _GLF_IDENTITY(_GLF_FUZZED(3.8), (_GLF_FUZZED(3.8)) - 0.0)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))).y, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch))) * sqrt(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), vec2(_GLF_IDENTITY(mat2(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), 0.0, 0.0), mat2(mat2(mat2(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), 0.0, 0.0))))))))))[0], _GLF_IDENTITY(_GLF_FUZZED(3.8), (_GLF_FUZZED(3.8)) - 0.0)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))).y, mix(float(_GLF_FUZZED(2.2)), float(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch))) * sqrt(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), vec2(_GLF_IDENTITY(mat2(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), 0.0, 0.0), mat2(mat2(mat2(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), 0.0, 0.0))))))))))[0], _GLF_IDENTITY(_GLF_FUZZED(3.8), (_GLF_FUZZED(3.8)) - 0.0)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))).y), bool(true))), 1.0, 1.0, 0.0), transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch))) * sqrt(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), vec2(_GLF_IDENTITY(mat2(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), 0.0, 0.0), mat2(mat2(mat2(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), 0.0, 0.0))))))))))[0], _GLF_IDENTITY(_GLF_FUZZED(3.8), (_GLF_FUZZED(3.8)) - 0.0)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))).y, mix(float(_GLF_FUZZED(2.2)), float(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch))) * sqrt(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), vec2(_GLF_IDENTITY(mat2(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), 0.0, 0.0), mat2(mat2(mat2(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x4(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0), abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 1.0, tan(0.0), 0.0, 0.0))))), 0.0, 0.0))))))))))[0], _GLF_IDENTITY(_GLF_FUZZED(3.8), (_GLF_FUZZED(3.8)) - 0.0)), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))).y), bool(true))), 1.0, 1.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) - 0.0)) / 1.0), max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))), vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)))), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), max(sqrt(vec2(1.0, 1.0)), sqrt(vec2(1.0, 1.0))))))) + sin(vec2(0.0, 0.0)))[0], _GLF_FUZZED(3.8)), _GLF_IDENTITY(vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1])) * mat2(1.0)), bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(((bvec2(true, true) != bvec2(false, true)) ? -662.463 : -5.0))), bool(false))), 1.0))))[0], _GLF_FUZZED(3.8)), vec2(_GLF_IDENTITY(_GLF_FUZZED(0.3), (false ? _GLF_FUZZED(8680.1824) : _GLF_IDENTITY(_GLF_FUZZED(0.3), (_GLF_FUZZED(0.3)) / 1.0))), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))))).y)), 0.0, 0.0, 1.0))) - 0.0)), true))) && true))))))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false)))) && true))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               barrier();
              }
            }
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) >> (0 & (3189 - 20035))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
              {
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(77.07) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(length(vec3(-1.5, -8.5, 28.10)))))) - 0.0))).x)) > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sin(log(1.0)))))))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                }
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
        }
       atomicStore(checker[virtual_gid], read, 4, 64, 4);
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(1, 0 + (1)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (_injected_loop_counter)) != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.1)), vec2(_GLF_FUZZED((5.6 / float(90454))), (injectionSwitch)[_GLF_IDENTITY(1, min(1, 1))]), bvec2(false, true)), vec2(1.0, 1.0) * (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.1)), _GLF_IDENTITY(vec2(_GLF_FUZZED((5.6 / float(90454))), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1]), max(vec2(_GLF_FUZZED((5.6 / float(90454))), (injectionSwitch)[1]), vec2(_GLF_FUZZED((5.6 / float(_GLF_IDENTITY(90454, 0 + (90454))))), (injectionSwitch)[1]))), bvec2(false, true))))).x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
           else
            {
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch, injectionSwitch)).y))) || false)))))))
                barrier();
              }
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         subgroupAll(true);
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true))))))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_IF_FALSE(false))))
            {
            }
           else
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, true))), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, true))), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))) && true)), bool(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))) && true)), true))))))))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)), (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)), ! (! (bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0 ^ 0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_FUZZED((-7.6 - 2424.6711)), _GLF_FUZZED((1.7))), vec2((_GLF_FUZZED(injectionSwitch))[0], (_GLF_FUZZED(injectionSwitch))[1]), bvec2(true, true))) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch) / vec2(1.0, 1.0)))))), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))))) * cos(vec2(0.0, 0.0))) / vec2(1.0, 1.0)).x < injectionSwitch.y)) ? _GLF_IDENTITY(0 ^ 0, (0 ^ 0) | 0) : _GLF_FUZZED(-74218)))), ((_GLF_IDENTITY(0 ^ 0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_FUZZED((-7.6 - 2424.6711)), _GLF_FUZZED((1.7))), vec2((_GLF_FUZZED(injectionSwitch))[0], (_GLF_FUZZED(injectionSwitch))[1]), bvec2(true, true))) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch) / vec2(1.0, 1.0)))))), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))))) * cos(vec2(0.0, 0.0))) / vec2(1.0, 1.0)).x < injectionSwitch.y)) ? _GLF_IDENTITY(0 ^ 0, (0 ^ 0) | 0) : _GLF_FUZZED(-74218))))) / 1), ((_GLF_IDENTITY(0 ^ 0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))), length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0))))))) * cos(vec2(0.0, 0.0))) / vec2(1.0, 1.0)).x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)) ? 0 ^ 0 : _GLF_FUZZED(_GLF_IDENTITY(-74218, (-74218) ^ (-39722 & 0))))))) >> (0 & -55127)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true))))))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         barrier();
        }
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), float(float(clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), (_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))) || false)); _injected_loop_counter ++)
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
}
