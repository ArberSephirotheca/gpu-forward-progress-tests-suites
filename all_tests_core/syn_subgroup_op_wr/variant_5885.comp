#version 460
struct _GLF_struct_3 {
 mat3 _f0;
 int _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_4 {
 bvec4 _f0;
 int _f1;
 _GLF_struct_3 _f2;
 ivec3 _f3;
 ivec3 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_1 {
 mat4x3 _f0;
 ivec4 _f1;
 uint virtual_gid;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
} ;

struct _GLF_struct_0 {
 mat3x2 _f0;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 _GLF_struct_2 _f1;
 mat4x2 _f2;
 uint _f3;
 _GLF_struct_4 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.x = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y = workgroup_id;
 uint workgroup_base = workgroup_size * GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_struct_0(mat3x2(1.0)), _GLF_struct_2(_GLF_struct_1(mat4x3(1.0), ivec4(1), workgroup_base + GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.x * subgroup_size + subgroup_local_id)), mat4x2(1.0), 1u, _GLF_struct_4(bvec4(true), 1, _GLF_struct_3(mat3(1.0), 1, mat2x4(1.0)), ivec3(1), ivec3(1), uvec4(1u)));
 uint next_virtual_gid = workgroup_base + GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.x * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read = atomicLoad(buf[_GLF_struct_replacement_5._f1._f0.virtual_gid], 4, 64, 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(checker[_GLF_struct_replacement_5._f1._f0.virtual_gid], read, 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   atomicStore(checker[_GLF_struct_replacement_5._f1._f0.virtual_gid], read, 4, 64, 4);
   subgroupAll(true);
  }
}
