#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(0, (false ? _GLF_FUZZED(ivec2(25383, -56256).t) : 0)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(1, (1) | (1)) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))))); _injected_loop_counter ++)
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, 0 | (4)) : _GLF_FUZZED(max(92638, -23918))))), int(4))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(int(6), int(6)))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uvec3 GLF_merged3_0_1_13_1_1_4_2_1_13num_workgroupreadsubgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, int(ivec2(0, 1)))); _injected_loop_counter --)
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
      }
    }
   else
    {
    }
  }
 uvec4 GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
  {
   GLF_merged3_0_1_13_1_1_4_2_1_13num_workgroupreadsubgroup_size.z = subgroup_size;
  }
 do
  {
   GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.y = GLF_merged3_0_1_13_1_1_4_2_1_13num_workgroupreadsubgroup_size.z;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, clamp(0, 0, 0))); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (~ (gl_NumWorkGroups.x)) << 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], uint(uvec2(gl_NumWorkGroups[2], 0u))))))).x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u)) >> (1u ^ 1u));
 GLF_merged3_0_1_13_1_1_4_2_1_13num_workgroupreadsubgroup_size.x = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true))))))))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) << 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)), true, true, true)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.w = workgroup_size;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(sign(-29.78)))), injectionSwitch.y))))))
            barrier();
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, false || (true))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false))))), (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), (injectionSwitch.x < injectionSwitch.y))))
                {
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               else
                {
                }
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                  }
                }
              }
             barrier();
            }
          }
         else
          {
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
            }
          }
         else
          {
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
            barrier();
          }
         else
          {
           do
            {
             for(int _injected_loop_counter = (((1 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, _GLF_IDENTITY((2) - 0, int(int((2) - 0))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 0 ^ (_GLF_IDENTITY(int(2), int(2))))) | (_GLF_IDENTITY(int(2), int(2))))) | 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))) | (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))) > (0 & (_GLF_IDENTITY(-60172 & _GLF_IDENTITY((46344 + 23400), clamp((46344 + 23400), _GLF_IDENTITY((46344 + 23400), ((46344 + 23400)) / 1), (46344 + 23400))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(-60172, ~ (~ (-60172))) & (46344 + 23400), (-60172 & (46344 + _GLF_IDENTITY(23400, (true ? 23400 : _GLF_FUZZED(_injected_loop_counter))))) / 1)))))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
                    barrier();
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = _GLF_IDENTITY(0, int(int(0))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)))); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, 1 * (_injected_loop_counter ++))) >> 0))
                    {
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)).x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.z = _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), 0u ^ (~ (workgroup_id))))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))) >> 0u), workgroup_id)), _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.w, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.w, 0u, 0u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.w, 0u, 0u), uvec3(1u, 1u, 1u) * (uvec3(GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.w, 0u, 0u)))))), min(_GLF_IDENTITY(uint(uvec3(GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.w, 0u, 0u)), (uint(uvec3(GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.w, 0u, 0u))) >> 0u), _GLF_IDENTITY(uint(uvec3(GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.w, 0u, 0u)), (uint(uvec3(GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.w, 0u, 0u))) | (_GLF_IDENTITY(uint(uvec3(GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.w, 0u, 0u)), min(uint(uvec3(GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.w, 0u, 0u)), uint(uvec3(GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.w, 0u, 0u))))))))) * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.z, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.z, uint(uvec3(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.z, (GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.z) | (GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.z)), 0u, 1u))), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.z, (GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.z) / 1u)) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.z, uint(uvec3(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.z, (GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.z) | (GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.z)), 0u, 1u))), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.z, (GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.z) / 1u)) - 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.z, uint(uvec3(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.z, (GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.z) | (GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.z)), 0u, 1u))), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.z, (GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.z) / 1u)) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.z, uint(uvec3(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.z, (GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.z) | (GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.z)), 0u, 1u))), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.z, (GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.z) / 1u)) - 0u), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.z, uint(uvec3(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.z, (GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.z) | (GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.z)), 0u, 1u))), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.z, (GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.z) / 1u)) - 0u), 1u, 0u)))))) ^ 0u)))), _GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged3_0_1_13_1_1_4_2_1_13num_workgroupreadsubgroup_size.x) : _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size, ~ (~ (GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size))).z), 0u | ((false ? _GLF_FUZZED(GLF_merged3_0_1_13_1_1_4_2_1_13num_workgroupreadsubgroup_size.x) : _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size, ~ (~ (GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size))).z))));
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.y;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), (! (_GLF_WRAPPED_IF_FALSE(false))) || false))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
                  barrier();
                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), clamp(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1))))) | (_GLF_IDENTITY(int(1), int(1)))))); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
              }
            }
           else
            {
             GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.x = subgroup_base;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
  }
 uint virtual_gid = workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.x + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.x + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (subgroup_local_id)) + 1, 0u + (subgroup_local_id + 1))) % GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.y, 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1))) % GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.y, clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u + (subgroup_local_id + 1), (0u + (subgroup_local_id + 1)) - 0u))) % GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.y, uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1))) % GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.y))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-50462))), 0u + (subgroup_local_id + 1))) % GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.y, (_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1))) % GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14subgroup_basesubgroup_sizeworkgroup_idworkgroup_size.y)))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(log(vec2(1.0, 1.0)))).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(log(vec2(1.0, 1.0)))).x > injectionSwitch.y))) && true)))
              barrier();
            }
           else
            {
            }
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = 0;
 GLF_merged3_0_1_13_1_1_4_2_1_13num_workgroupreadsubgroup_size.y = read;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = (_GLF_IDENTITY(0, (0) + 0) | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9266.6232)), float(injectionSwitch.y), bool(true))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))).y))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))).y))) && true))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))).y))) && true))))), false || (bool(bool(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))).y))) && true))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) || false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), true && (! (false)))))) || false), (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / exp(0.0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))), (bool(bool((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)), (float(mat4x3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))) / exp(0.0)))))).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))) && true)) || false))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), 0 | (_GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, ! (! (_injected_loop_counter != 0)))); _injected_loop_counter --)
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, log(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(788.730))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), min(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(transpose(transpose(mat3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (transpose(transpose(mat3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))))), _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, sin(0.0), 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, sin(0.0), 0.0))), 0.0))))), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)), 0.0)))), float(_GLF_IDENTITY(vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)), 0.0)))), 1.0), max(vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)), 0.0)))), 1.0), vec2(length(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-801.554)), bool(false))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)), 0.0)))), 1.0))))), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(length(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)), _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), (false ? _GLF_FUZZED(502.979) : round(length(normalize(vec2(1.0, 1.0)))))), 0.0, 0.0)))), mat3x4(mat4(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, log(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(4098.4321)), ((true ? 1.0 : _GLF_FUZZED(4098.4321))) - 0.0)))))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(length(vec3(0.0, 0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0), mat4(1.0) * (vec4(length(vec3(0.0, 0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(length(vec3(0.0, 0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)))))))), max(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, log(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 0.0), _GLF_IDENTITY(transpose(transpose(mat3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (transpose(transpose(mat3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))))), 0.0)), (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 0.0), _GLF_IDENTITY(transpose(transpose(mat3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (transpose(transpose(mat3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))))), (false ? _GLF_FUZZED(57.66) : _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 0.0), _GLF_IDENTITY(transpose(transpose(mat3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (transpose(transpose(mat3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))))))), 0.0))) * 1.0), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)), 0.0)))), float(_GLF_IDENTITY(vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)), 0.0)))), 1.0), max(vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)), 0.0)))), 1.0), vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x2(-9083.6165, -6246.9197, -6.7, -4825.3676, -995.968, -63.26, -6598.1178, 901.825)) : mat4x2(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), 1.0, 1.0))), 0.0)), 0.0)))), 1.0))))), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(length(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)), round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), 0.0, 0.0)))), mat3x4(mat4(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, log(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4098.4321))))))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(length(vec3(0.0, 0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(length(vec3(0.0, 0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)))))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, log(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (true ? _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(9927.2239)), bool(false))) : _GLF_FUZZED(-1.6))) / 1.0), 1.0, 1.0, 0.0), _GLF_IDENTITY(transpose(transpose(mat3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (transpose(transpose(mat3(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), max(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (vec4(0.0, 0.0, 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)))))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))))), 0.0)), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)), 0.0)))), float(_GLF_IDENTITY(vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0), (mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(float(_GLF_IDENTITY(mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0), (mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0), (mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(float(_GLF_IDENTITY(mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0), (mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0), (mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))), 0.0)), 0.0)))), 1.0), max(vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)), _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2.9)), float(0.0), bool(true))), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 0.0))))))), 1.0), _GLF_IDENTITY(vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)) - 0.0)) * 1.0)), 0.0)))), 1.0), clamp(_GLF_IDENTITY(vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)) - 0.0)) * 1.0)), 0.0)))), 1.0), (_GLF_IDENTITY(vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)) - 0.0)) * 1.0)), 0.0)))), 1.0), max(vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)) - 0.0)) * 1.0)), 0.0)))), 1.0), vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)) - 0.0)) * 1.0)), 0.0)))), 1.0)))) * vec2(1.0, 1.0)), vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)) - 0.0)) * 1.0)), 0.0)))), 1.0), vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)) - 0.0)) * 1.0)), 0.0)))), 1.0))))))), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(length(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), float(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)))), mat3x4(mat4(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, log(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4098.4321))))))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(length(vec3(0.0, 0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(length(vec3(0.0, 0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)))))))), clamp(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, log(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (true ? _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(9927.2239)), bool(false))) : _GLF_FUZZED(-1.6))) / 1.0), 1.0, 1.0, 0.0), _GLF_IDENTITY(transpose(transpose(mat3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (transpose(transpose(mat3(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), max(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (vec4(0.0, 0.0, 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)))))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))))), 0.0)), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)), 0.0)))), float(_GLF_IDENTITY(vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0), (mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(float(_GLF_IDENTITY(mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0), (mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0), (mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(float(_GLF_IDENTITY(mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0), (mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0), (mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))), 0.0)), 0.0)))), 1.0), max(vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)), _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2.9)), float(0.0), bool(true))), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 0.0))))))), 1.0), _GLF_IDENTITY(vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)) - 0.0)) * 1.0)), 0.0)))), 1.0), clamp(_GLF_IDENTITY(vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)) - 0.0)) * 1.0)), 0.0)))), 1.0), (_GLF_IDENTITY(vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)) - 0.0)) * 1.0)), 0.0)))), 1.0), max(vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)) - 0.0)) * 1.0)), 0.0)))), 1.0), vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)) - 0.0)) * 1.0)), 0.0)))), 1.0)))) * vec2(1.0, 1.0)), vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)) - 0.0)) * 1.0)), 0.0)))), 1.0), vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)) - 0.0)) * 1.0)), 0.0)))), 1.0))))))), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(length(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), float(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)))), mat3x4(mat4(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, log(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4098.4321))))))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(length(vec3(0.0, 0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(length(vec3(0.0, 0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)))))))), vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, log(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (true ? _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(9927.2239)), bool(false))) : _GLF_FUZZED(-1.6))) / 1.0), 1.0, 1.0, 0.0), _GLF_IDENTITY(transpose(transpose(mat3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (transpose(transpose(mat3(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), max(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (vec4(0.0, 0.0, 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)))))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))))), 0.0)), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)), 0.0)))), float(_GLF_IDENTITY(vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0), (mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(float(_GLF_IDENTITY(mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0), (mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0), (mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(float(_GLF_IDENTITY(mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0), (mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0), (mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))), 0.0)), 0.0)))), 1.0), max(vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)), _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2.9)), float(0.0), bool(true))), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 0.0))))))), 1.0), _GLF_IDENTITY(vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)) - 0.0)) * 1.0)), 0.0)))), 1.0), clamp(_GLF_IDENTITY(vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)) - 0.0)) * 1.0)), 0.0)))), 1.0), (_GLF_IDENTITY(vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)) - 0.0)) * 1.0)), 0.0)))), 1.0), max(vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)) - 0.0)) * 1.0)), 0.0)))), 1.0), vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)) - 0.0)) * 1.0)), 0.0)))), 1.0)))) * vec2(1.0, 1.0)), vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)) - 0.0)) * 1.0)), 0.0)))), 1.0), vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)) - 0.0)) * 1.0)), 0.0)))), 1.0))))))), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(length(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), float(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)))), mat3x4(mat4(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, log(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4098.4321))))))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(length(vec3(0.0, 0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(length(vec3(0.0, 0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)))))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, log(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (true ? _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(9927.2239)), bool(false))) : _GLF_FUZZED(-1.6))) / 1.0), 1.0, 1.0, 0.0), _GLF_IDENTITY(transpose(transpose(mat3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (transpose(transpose(mat3(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), max(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (vec4(0.0, 0.0, 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)))))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))))), 0.0)), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)), 0.0)))), float(_GLF_IDENTITY(vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0), (mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(float(_GLF_IDENTITY(mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0), (mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0), (mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(float(_GLF_IDENTITY(mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0), (mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0), (mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))), 0.0)), 0.0)))), 1.0), max(vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)), _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2.9)), float(0.0), bool(true))), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 0.0))))))), 1.0), _GLF_IDENTITY(vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)) - 0.0)) * 1.0)), 0.0)))), 1.0), clamp(_GLF_IDENTITY(vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)) - 0.0)) * 1.0)), 0.0)))), 1.0), (_GLF_IDENTITY(vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)) - 0.0)) * 1.0)), 0.0)))), 1.0), max(vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)) - 0.0)) * 1.0)), 0.0)))), 1.0), vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)) - 0.0)) * 1.0)), 0.0)))), 1.0)))) * vec2(1.0, 1.0)), vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)) - 0.0)) * 1.0)), 0.0)))), 1.0), vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)) - 0.0)) * 1.0)), 0.0)))), 1.0))))))), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(length(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), float(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)))), mat3x4(mat4(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, log(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4098.4321))))))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(length(vec3(0.0, 0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(length(vec3(0.0, 0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)))))))), (vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, log(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (true ? _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(9927.2239)), bool(false))) : _GLF_FUZZED(-1.6))) / 1.0), 1.0, 1.0, 0.0), _GLF_IDENTITY(transpose(transpose(mat3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (transpose(transpose(mat3(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), max(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (vec4(0.0, 0.0, 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)))))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))))), 0.0)), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)), 0.0)))), float(_GLF_IDENTITY(vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0), (mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(float(_GLF_IDENTITY(mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0), (mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0), (mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(float(_GLF_IDENTITY(mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0), (mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0), (mat4x2(float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))), 0.0)), 0.0)))), 1.0), max(vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)), _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2.9)), float(0.0), bool(true))), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 0.0))))))), 1.0), _GLF_IDENTITY(vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)) - 0.0)) * 1.0)), 0.0)))), 1.0), clamp(_GLF_IDENTITY(vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)) - 0.0)) * 1.0)), 0.0)))), 1.0), (_GLF_IDENTITY(vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)) - 0.0)) * 1.0)), 0.0)))), 1.0), max(vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)) - 0.0)) * 1.0)), 0.0)))), 1.0), vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)) - 0.0)) * 1.0)), 0.0)))), 1.0)))) * vec2(1.0, 1.0)), vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)) - 0.0)) * 1.0)), 0.0)))), 1.0), vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)) - 0.0)) * 1.0)), 0.0)))), 1.0))))))), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(length(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), float(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)))), mat3x4(mat4(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, log(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4098.4321))))))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(length(vec3(0.0, 0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(length(vec3(0.0, 0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0))))))))) - vec2(0.0, 0.0))))))).y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), true && (_GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))))), (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
          }
         do
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
            barrier();
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), int(ivec3(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), 1, 1))), _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) << 0)), min(int(6), int(6))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, bool(bool(_injected_loop_counter != 0)))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
      }
     if((subgroup_local_id % _GLF_IDENTITY(2, min(2, 2))) == 0)
      {
       subgroupAll(false);
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           GLF_merged3_0_1_13_1_1_4_2_1_13num_workgroupreadsubgroup_size.y = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) - 0u, _GLF_IDENTITY(min((virtual_gid) - 0u, (virtual_gid) - 0u), (min((virtual_gid) - 0u, (virtual_gid) - 0u)) | (min((virtual_gid) - 0u, _GLF_IDENTITY((virtual_gid) - 0u, 0u ^ ((virtual_gid) - 0u)))))))], uint(_GLF_IDENTITY(uvec2(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) - 0u, _GLF_IDENTITY(min((virtual_gid) - 0u, (virtual_gid) - 0u), (min((virtual_gid) - 0u, (virtual_gid) - 0u)) | (min((virtual_gid) - 0u, (virtual_gid) - _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(max(0u, 0u), uint(uint(max(0u, 0u)))))), uint(_GLF_IDENTITY(uvec2(uint(uint(_GLF_IDENTITY(max(0u, 0u), uint(uint(max(0u, 0u)))))), 1u), (uvec2(uint(uint(_GLF_IDENTITY(max(0u, 0u), uint(uint(max(0u, 0u)))))), 1u)) - uvec2(0u, 0u)))))))))))], _GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) << 0u)))), _GLF_IDENTITY((0u), uint(uvec2((0u), 1u))) | (0u)), 0u))), ~ (_GLF_IDENTITY(~ (uvec2(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) - 0u), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(2.0)), vec2(_GLF_FUZZED(-79.76), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY((virtual_gid), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((virtual_gid))))) - 0u, _GLF_IDENTITY(min((virtual_gid) - 0u, (virtual_gid) - 0u), (min(_GLF_IDENTITY((virtual_gid) - 0u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((virtual_gid) - 0u), _GLF_IDENTITY(uint(uint(~ ((virtual_gid) - 0u))), min(uint(uint(~ ((virtual_gid) - 0u))), uint(uint(~ ((virtual_gid) - 0u))))))), (~ (_GLF_IDENTITY(~ ((virtual_gid) - 0u), _GLF_IDENTITY(uint(uint(~ ((virtual_gid) - 0u))), min(uint(uint(~ ((virtual_gid) - 0u))), uint(uint(~ ((virtual_gid) - 0u)))))))) | 0u)), (_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? virtual_gid : _GLF_FUZZED(workgroup_size)))) - 0u)) | (min((virtual_gid) - _GLF_IDENTITY(0u, 0u ^ (0u)), (virtual_gid) - 0u)))))], 0u)), clamp(~ _GLF_IDENTITY((uvec2(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : (_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), virtual_gid, virtual_gid)), virtual_gid)), uint(uint(virtual_gid)))) : _GLF_FUZZED((vec3(877.456, 21.61, 2192.8584) , num_workgroup)))), clamp(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : (_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : (_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid)))) : _GLF_FUZZED((vec3(877.456, 21.61, 2192.8584) , num_workgroup)))), _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(subgroup_base) : (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, 0u))), uint(uint(virtual_gid)))), (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : (_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid)))) : _GLF_FUZZED((vec3(877.456, 21.61, 2192.8584) , num_workgroup)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : (_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid)))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0), injectionSwitch[1])))).y)) ? _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : (_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid)))) : _GLF_FUZZED((vec3(877.456, 21.61, 2192.8584) , num_workgroup)))))))) - 0u, _GLF_IDENTITY(_GLF_IDENTITY(min((virtual_gid) - 0u, (virtual_gid) - 0u), uint(uvec3(min((virtual_gid) - 0u, (virtual_gid) - 0u), 0u, 0u))), (min((virtual_gid) - 0u, (virtual_gid) - 0u)) | (min((virtual_gid) - 0u, (_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))) - 0u)))))], 0u)), max((uvec2(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : (_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), virtual_gid, virtual_gid)), virtual_gid)), uint(uint(virtual_gid)))) : _GLF_FUZZED((vec3(877.456, 21.61, 2192.8584) , num_workgroup)))), clamp(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : (_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : (_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid)))) : _GLF_FUZZED((vec3(877.456, 21.61, 2192.8584) , num_workgroup)))), _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(subgroup_base) : (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, 0u))), uint(uint(virtual_gid)))), (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : (_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid)))) : _GLF_FUZZED((vec3(877.456, 21.61, 2192.8584) , num_workgroup)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : (_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid)))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0), injectionSwitch[1])))).y)) ? _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : (_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid)))) : _GLF_FUZZED((vec3(877.456, 21.61, 2192.8584) , num_workgroup)))))))) - 0u, _GLF_IDENTITY(_GLF_IDENTITY(min((virtual_gid) - 0u, (virtual_gid) - 0u), uint(uvec3(min((virtual_gid) - 0u, (virtual_gid) - 0u), 0u, 0u))), (min((virtual_gid) - 0u, (virtual_gid) - 0u)) | (min((virtual_gid) - 0u, (_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))) - 0u)))))], 0u)), (uvec2(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : (_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), virtual_gid, virtual_gid)), virtual_gid)), uint(uint(virtual_gid)))) : _GLF_FUZZED((vec3(877.456, 21.61, 2192.8584) , num_workgroup)))), clamp(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : (_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : (_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid)))) : _GLF_FUZZED((vec3(877.456, 21.61, 2192.8584) , num_workgroup)))), _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(subgroup_base) : (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, 0u))), uint(uint(virtual_gid)))), (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : (_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid)))) : _GLF_FUZZED((vec3(877.456, 21.61, 2192.8584) , num_workgroup)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : (_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid)))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0), injectionSwitch[1])))).y)) ? _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : (_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid)))) : _GLF_FUZZED((vec3(877.456, 21.61, 2192.8584) , num_workgroup)))))))) - 0u, _GLF_IDENTITY(_GLF_IDENTITY(min((virtual_gid) - 0u, (virtual_gid) - 0u), uint(uvec3(min((virtual_gid) - 0u, (virtual_gid) - 0u), 0u, 0u))), (min((virtual_gid) - 0u, (virtual_gid) - 0u)) | (min((virtual_gid) - 0u, (_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))) - 0u)))))], 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(~ (uvec2(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, false)))))))))) ? _GLF_FUZZED(subgroup_base) : (virtual_gid))) - 0u, _GLF_IDENTITY(min((_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0u, (virtual_gid) - 0u), (min(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), _GLF_IDENTITY((virtual_gid), ((virtual_gid)) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))) - 0u, (virtual_gid) - 0u)) | (min((virtual_gid) - 0u, (virtual_gid) - 0u)))))], 0u)), ~ (~ (~ _GLF_IDENTITY((uvec2(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, (true ? _GLF_IDENTITY((injectionSwitch.y) / 1.0, ((injectionSwitch.y) / _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, 1.0, 1.0, 0.0, 0.0, 0.0)), (float(mat3x2(1.0, 1.0, 1.0, 0.0, 0.0, 0.0))) - 0.0))) + 0.0) : _GLF_FUZZED(-2923.0996)))), injectionSwitch.y)))) ? _GLF_FUZZED(subgroup_base) : (virtual_gid))) - 0u, _GLF_IDENTITY(min((virtual_gid) - 0u, _GLF_IDENTITY((virtual_gid), 1u * ((virtual_gid))) - 0u), (min((virtual_gid) - 0u, (virtual_gid) - 0u)) | (min((_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) - 0u, (virtual_gid) - 0u)))))], 0u)), uvec2(uvec4((uvec2(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, (true ? _GLF_IDENTITY((injectionSwitch.y) / 1.0, ((injectionSwitch.y) / _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, 1.0, 1.0, 0.0, 0.0, 0.0)), (float(mat3x2(1.0, 1.0, 1.0, 0.0, 0.0, 0.0))) - 0.0))) + 0.0) : _GLF_FUZZED(-2923.0996)))), injectionSwitch.y)))) ? _GLF_FUZZED(subgroup_base) : (virtual_gid))) - 0u, _GLF_IDENTITY(min((virtual_gid) - 0u, _GLF_IDENTITY((virtual_gid), 1u * ((virtual_gid))) - 0u), (min((virtual_gid) - 0u, (virtual_gid) - 0u)) | (min((_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) - 0u, (virtual_gid) - 0u)))))], 0u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)))))), _GLF_IDENTITY(uvec2(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec2(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, _GLF_IDENTITY(false, false || (false)))))))))))) ? _GLF_FUZZED(subgroup_base) : (virtual_gid))) - 0u, _GLF_IDENTITY(min((_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0u, (virtual_gid) - 0u), (min(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), _GLF_IDENTITY((virtual_gid), ((virtual_gid)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))) - 0u, (virtual_gid) - 0u)) | (min((virtual_gid) - 0u, (virtual_gid) - 0u)))))], 0u)), ~ (~ (~ _GLF_IDENTITY((uvec2(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)))) ? _GLF_FUZZED(subgroup_base) : (virtual_gid))) - 0u, _GLF_IDENTITY(min((virtual_gid) - 0u, _GLF_IDENTITY((virtual_gid), 1u * ((virtual_gid))) - 0u), (min((virtual_gid) - 0u, (virtual_gid) - 0u)) | (min((virtual_gid) - 0u, (virtual_gid) - 0u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)))) ? _GLF_FUZZED(subgroup_base) : (virtual_gid))) - 0u, _GLF_IDENTITY(min((virtual_gid) - 0u, _GLF_IDENTITY((virtual_gid), 1u * ((virtual_gid))) - 0u), (min((virtual_gid) - 0u, (virtual_gid) - 0u)) | (min((virtual_gid) - 0u, (virtual_gid) - 0u)))), _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)))) ? _GLF_FUZZED(subgroup_base) : (virtual_gid))) - 0u, _GLF_IDENTITY(min((virtual_gid) - 0u, _GLF_IDENTITY((virtual_gid), 1u * ((virtual_gid))) - 0u), (min((virtual_gid) - 0u, (virtual_gid) - 0u)) | (min((virtual_gid) - 0u, (virtual_gid) - 0u)))), _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)))) ? _GLF_FUZZED(subgroup_base) : (virtual_gid))) - 0u, _GLF_IDENTITY(min((virtual_gid) - 0u, _GLF_IDENTITY((virtual_gid), 1u * ((virtual_gid))) - 0u), (min((virtual_gid) - 0u, (virtual_gid) - 0u)) | (min((virtual_gid) - 0u, (virtual_gid) - 0u)))))))], 0u)), ((uvec2(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)))) ? _GLF_FUZZED(subgroup_base) : (virtual_gid))) - 0u, _GLF_IDENTITY(min((virtual_gid) - 0u, _GLF_IDENTITY((virtual_gid), 1u * ((virtual_gid))) - 0u), (min((virtual_gid) - 0u, (virtual_gid) - 0u)) | (min((virtual_gid) - 0u, (virtual_gid) - 0u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)))) ? _GLF_FUZZED(subgroup_base) : (virtual_gid))) - 0u, _GLF_IDENTITY(min((virtual_gid) - 0u, _GLF_IDENTITY((virtual_gid), 1u * ((virtual_gid))) - 0u), (min((virtual_gid) - 0u, (virtual_gid) - 0u)) | (min((virtual_gid) - 0u, (virtual_gid) - 0u)))), _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)))) ? _GLF_FUZZED(subgroup_base) : (virtual_gid))) - 0u, _GLF_IDENTITY(min((virtual_gid) - 0u, _GLF_IDENTITY((virtual_gid), 1u * ((virtual_gid))) - 0u), (min((virtual_gid) - 0u, (virtual_gid) - 0u)) | (min((virtual_gid) - 0u, (virtual_gid) - 0u)))), _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)))) ? _GLF_FUZZED(subgroup_base) : (virtual_gid))) - 0u, _GLF_IDENTITY(min((virtual_gid) - 0u, _GLF_IDENTITY((virtual_gid), 1u * ((virtual_gid))) - 0u), (min((virtual_gid) - 0u, (virtual_gid) - 0u)) | (min((virtual_gid) - 0u, (virtual_gid) - 0u)))))))], 0u))) / uvec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY(~ (uvec2(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, false)))))))))) ? _GLF_FUZZED(subgroup_base) : (virtual_gid))) - 0u, _GLF_IDENTITY(min((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0u)) - 0u, (virtual_gid) - 0u), (min(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) * 1u), ((virtual_gid)) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))) - 0u, (virtual_gid) - 0u)) | (min((virtual_gid) - 0u, (virtual_gid) - 0u)))))], 0u)), ~ (~ (~ (uvec2(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * 1.0), 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), (float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * 1.0), 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))) / 1.0)), injectionSwitch.y)))) ? _GLF_FUZZED(subgroup_base) : (virtual_gid))) - 0u, _GLF_IDENTITY(_GLF_IDENTITY(min((virtual_gid) - 0u, _GLF_IDENTITY((virtual_gid), 1u * ((virtual_gid))) - 0u), (_GLF_IDENTITY(min((virtual_gid) - 0u, _GLF_IDENTITY((virtual_gid), 1u * ((virtual_gid))) - 0u), (min((virtual_gid) - 0u, _GLF_IDENTITY((virtual_gid), 1u * ((virtual_gid))) - 0u)) ^ 0u)) ^ 0u), (min((virtual_gid) - 0u, (virtual_gid) - 0u)) | (_GLF_IDENTITY(min((virtual_gid) - 0u, (virtual_gid) - 0u), (min((virtual_gid) - 0u, (virtual_gid) - 0u)) * 1u)))))], 0u)))))) >> uvec2(0u, 0u)))), ~ (~ (uvec2(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec2(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, false)))))))))) ? _GLF_FUZZED(subgroup_base) : (virtual_gid))) - 0u, _GLF_IDENTITY(min((_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0u, (virtual_gid) - 0u), (min(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), _GLF_IDENTITY((virtual_gid), ((virtual_gid)) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))) - 0u, (virtual_gid) - 0u)) | (min((virtual_gid) - 0u, (virtual_gid) - 0u)))))], 0u)), _GLF_IDENTITY(~ (~ (~ (uvec2(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)))) ? _GLF_FUZZED(subgroup_base) : (virtual_gid))) - 0u, _GLF_IDENTITY(min((virtual_gid) - 0u, _GLF_IDENTITY((virtual_gid), 1u * ((virtual_gid))) - 0u), (min((virtual_gid) - 0u, (virtual_gid) - 0u)) | (min((virtual_gid) - 0u, (virtual_gid) - 0u)))))], 0u)))), ~ (~ (~ (~ (~ (uvec2(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) << (0u & uint(-79.96))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(subgroup_base) : (virtual_gid))) - 0u, _GLF_IDENTITY(min((virtual_gid) - 0u, _GLF_IDENTITY((virtual_gid), 1u * ((virtual_gid))) - 0u), (min((virtual_gid) - 0u, (virtual_gid) - 0u)) | (min((virtual_gid) - 0u, (virtual_gid) - 0u)))))], 0u)))))))), (_GLF_IDENTITY(~ (uvec2(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), false, true, false)))))))))) ? _GLF_FUZZED(subgroup_base) : (virtual_gid))) - _GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(min((_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0u, (virtual_gid) - 0u), (min(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), _GLF_IDENTITY((virtual_gid), ((virtual_gid)) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))) - 0u, (virtual_gid) - 0u)) | (min((virtual_gid) - 0u, (virtual_gid) - 0u)))))], 0u)), ~ (~ (~ (uvec2(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)))) ? _GLF_FUZZED(subgroup_base) : (virtual_gid))) - 0u, _GLF_IDENTITY(min((virtual_gid) - 0u, _GLF_IDENTITY((virtual_gid), 1u * ((virtual_gid))) - 0u), (_GLF_IDENTITY(min((virtual_gid) - 0u, (virtual_gid) - 0u), 0u ^ (min((virtual_gid) - 0u, (virtual_gid) - 0u)))) | (min((virtual_gid) - 0u, (virtual_gid) - 0u)))))], 0u)))))) >> uvec2(0u, 0u)))))))), ~ (uvec2(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : (virtual_gid))) - 0u, _GLF_IDENTITY(min((virtual_gid) - 0u, (virtual_gid) - 0u), (min((virtual_gid) - 0u, _GLF_IDENTITY((virtual_gid) - 0u, clamp((virtual_gid) - 0u, (virtual_gid) - 0u, (virtual_gid) - 0u)))) | (min((virtual_gid) - 0u, (virtual_gid) - 0u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : (virtual_gid))) - 0u, _GLF_IDENTITY(min((virtual_gid) - 0u, (virtual_gid) - 0u), (min((virtual_gid) - 0u, (virtual_gid) - 0u)) | (_GLF_IDENTITY(min((virtual_gid) - 0u, (virtual_gid) - 0u), ~ (~ (min((virtual_gid) - 0u, (virtual_gid) - 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : (virtual_gid))) - 0u, _GLF_IDENTITY(min((virtual_gid) - 0u, (virtual_gid) - 0u), (min((virtual_gid) - 0u, (virtual_gid) - 0u)) | (min((virtual_gid) - 0u, _GLF_IDENTITY((virtual_gid), min((virtual_gid), _GLF_IDENTITY((virtual_gid), ((virtual_gid)) | ((virtual_gid))))) - 0u)))), _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : (virtual_gid))) - 0u, _GLF_IDENTITY(min((virtual_gid) - 0u, (virtual_gid) - 0u), (min((virtual_gid) - 0u, (virtual_gid) - 0u)) | (min((virtual_gid) - 0u, (virtual_gid) - 0u)))))))], 0u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (4) | (4)))), min(_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), clamp(_GLF_IDENTITY((4) | (4), (true ? (4) | (4) : _GLF_FUZZED(50663))), (4) | (4), _GLF_IDENTITY((4) | (4), ~ (~ ((4) | (4))))))))), _GLF_IDENTITY(4, 0 | _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), _GLF_IDENTITY(int(ivec4((_GLF_IDENTITY(4, (4) | (4))), 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 0)), 0 + (int(ivec4((_GLF_IDENTITY(4, (4) | (4))), 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 0)))))))), 64, 2);
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
            {
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false))))))))), true, false, false))), (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 subgroupAll(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true))));
                }
               else
                {
                }
              }
             else
              {
              }
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       else
        {
        }
       GLF_merged3_0_1_13_1_1_4_2_1_13num_workgroupreadsubgroup_size.y = atomicLoad(buf[virtual_gid], 4, 64, 2);
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) || false)); _injected_loop_counter --)
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) ^ 0)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(0, (0) ^ 0)), clamp((_GLF_IDENTITY(0, (0) ^ 0)), (_GLF_IDENTITY(0, (0) ^ _GLF_IDENTITY(0, (0) >> 0))), (_GLF_IDENTITY(0, (0) ^ 0))))), (_GLF_IDENTITY(0, (0) << 0) | 0) ^ ((_GLF_IDENTITY((_GLF_IDENTITY(0, (0) ^ 0)), clamp((_GLF_IDENTITY(0, (0) ^ 0)), (_GLF_IDENTITY(0, (0) ^ 0)), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) ^ 0)), max((_GLF_IDENTITY(0, (0) ^ 0)), (_GLF_IDENTITY(0, (0) ^ 0))))))))) << 0) / 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, ! (! (_injected_loop_counter < 1))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, true && (_injected_loop_counter < 1))) && true))))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))) / 1.0)))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))), round(length(normalize(cos(vec4(0.0, 0.0, 0.0, 0.0))))), 1.0, sin(0.0), 0.0, 0.0, 1.0))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     subgroupBarrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         for(int _injected_loop_counter = ((0 | 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), ~ (~ (_GLF_IDENTITY(int(3), min(int(3), int(3))))))) ^ 0), _GLF_IDENTITY(int(3), max(_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), int(ivec2(int(3), (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(8), int(8)))))))), _GLF_IDENTITY(int(3), int(int(int(3)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (((1 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), ~ (_GLF_IDENTITY(~ (2), (~ (2)) | 0)))))) >> _GLF_IDENTITY(int(2), int(2))) & 1)); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - 0))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || false)))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
  }
 for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       for(int _injected_loop_counter = (_GLF_IDENTITY(0, max(0, 0)) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
          {
           barrier();
          }
         else
          {
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) / 1)) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1)))))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) / 1)) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1))))), (_injected_loop_counter != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) / 1)) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1)))))) && true))) || false); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), ! (! (false)))))
      barrier();
    }
   else
    {
     atomicStore(checker[_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid))], GLF_merged3_0_1_13_1_1_4_2_1_13num_workgroupreadsubgroup_size.y, 4, 64, 4);
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
  }
}
