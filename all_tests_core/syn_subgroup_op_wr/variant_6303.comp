#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_9 {
 mat3x4 _f0;
 float _f1;
 uvec3 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_8 {
 bvec2 _f0;
} ;

struct _GLF_struct_7 {
 bvec2 _f0;
 bvec3 _f1;
 mat2 _f2;
 int _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_10 {
 _GLF_struct_7 _f0;
 _GLF_struct_8 _f1;
 _GLF_struct_9 _f2;
} ;

struct _GLF_struct_5 {
 mat3 _f0;
 mat4 _f1;
 mat3 _f2;
 mat4 _f3;
 vec4 _f4;
 mat3x4 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_6 {
 mat4x2 _f0;
 _GLF_struct_5 _f1;
} ;

struct _GLF_struct_4 {
 mat4x3 _f0;
 uint workgroup_size;
} ;

struct _GLF_struct_11 {
 mat3 _f0;
 mat3x2 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_10 _f4;
 float _f5;
} ;

struct _GLF_struct_1 {
 mat2 _f0;
 ivec3 _f1;
 mat3 _f2;
 uvec3 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_0 {
 uvec3 _f0;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 uvec3 _f2;
 uint num_workgroup;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) && true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(_GLF_struct_0(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u))))), _GLF_struct_1(_GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat2x4(mat2(1.0)), (mat2x4(mat2(1.0))) * mat2(1.0)))), ivec3(1), _GLF_IDENTITY(mat3(1.0), mat3(mat3x4(mat3(1.0)))), uvec3(1u), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9818.9177)), float(1.0), bool(true)))), min(_GLF_IDENTITY(vec2(1.0), (vec2(1.0)) / vec2(1.0, 1.0)), vec2(1.0)))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u)), _GLF_IDENTITY(uvec3(uvec4(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))))))), (_GLF_IDENTITY(uvec3(uvec4(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1u), uint(uint(~ _GLF_IDENTITY((1u), min((1u), (1u))))))), 0u ^ (~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))))), (1u) >> 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(_GLF_IDENTITY(uvec3(uvec4(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), (1u) >> 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (false ? _GLF_FUZZED(uvec3(186246u, 9734u, 157658u)) : uvec3(uvec4(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(_GLF_IDENTITY(~ (1u), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((~ (1u)), ((~ (1u))) * 1u), (~ (~ (1u))) | (~ (~ (1u))))), ((_GLF_IDENTITY(~ _GLF_IDENTITY((~ (1u)), ((~ (1u))) * 1u), (~ (~ (1u))) | (~ (~ (1u)))))) | ((_GLF_IDENTITY(~ _GLF_IDENTITY((~ (1u)), ((~ (1u))) * 1u), (~ (~ (1u))) | (~ (~ (1u))))))))))))), _GLF_IDENTITY((1u) >> 0u, max((1u) >> 0u, (1u) >> 0u)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)), max(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)), uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)))), (false ? _GLF_FUZZED(bitfieldReverse(uvec3(3852u, 44415u, 127821u))) : _GLF_IDENTITY(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)), max(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)), uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u))))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)), max(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)), uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)))), (_GLF_IDENTITY(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)), max(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ _GLF_IDENTITY(1u, (1u) - 0u))), uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u))))) - uvec3(0u, 0u, 0u))), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)), max(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)), uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)))), (_GLF_IDENTITY(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)), max(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ _GLF_IDENTITY(1u, (1u) - 0u))), uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u))))) - uvec3(0u, 0u, 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)), max(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)), uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)))), (_GLF_IDENTITY(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)), max(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ _GLF_IDENTITY(1u, (1u) - 0u))), uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u))))) - uvec3(0u, 0u, 0u))), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)), max(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)), uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)))), (_GLF_IDENTITY(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)), max(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ _GLF_IDENTITY(1u, (1u) - 0u))), uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u))))) - uvec3(0u, 0u, 0u)))))), clamp((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)), max(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)), uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)))), (_GLF_IDENTITY(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)), max(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ _GLF_IDENTITY(1u, (1u) - 0u))), uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u))))) - uvec3(0u, 0u, 0u))), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)), max(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)), uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)))), (_GLF_IDENTITY(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)), max(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ _GLF_IDENTITY(1u, (1u) - 0u))), uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u))))) - uvec3(0u, 0u, 0u)))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)), max(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)), uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)))), (_GLF_IDENTITY(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)), max(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ _GLF_IDENTITY(1u, (1u) - 0u))), uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u))))) - uvec3(0u, 0u, 0u))), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)), max(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)), uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)))), (_GLF_IDENTITY(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)), max(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ _GLF_IDENTITY(1u, (1u) - 0u))), uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u))))) - uvec3(0u, 0u, 0u)))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)), max(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)), uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)))), (_GLF_IDENTITY(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)), max(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ _GLF_IDENTITY(1u, (1u) - 0u))), uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u))))) - uvec3(0u, 0u, 0u))), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)), max(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)), uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)))), (_GLF_IDENTITY(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u)), max(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ _GLF_IDENTITY(1u, (1u) - 0u))), uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (1u ^ 1u))))) - uvec3(0u, 0u, 0u))))))))) << 0u)))))))), uvec3(uvec4(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1u), clamp(_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))), ~ (1u), ~ (1u))), uint(uint(~ (1u)))))), clamp(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) << 0u))))))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u))))))) - 0u))), (_GLF_IDENTITY(1u, (1u) << (0u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> 0u)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), clamp(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))))), (_GLF_IDENTITY(1u, (1u) << (0u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), clamp(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))))), (_GLF_IDENTITY(1u, (1u) << (0u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), clamp(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))))), (_GLF_IDENTITY(1u, (1u) << (0u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), clamp(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))))), (_GLF_IDENTITY(1u, (1u) << (0u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), clamp(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))))), (_GLF_IDENTITY(1u, (1u) << (0u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> 0u)) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), clamp(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))))), (_GLF_IDENTITY(1u, (1u) << (0u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> 0u)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), clamp(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))))), (_GLF_IDENTITY(1u, (1u) << (0u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), clamp(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))))), (_GLF_IDENTITY(1u, (1u) << (0u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), clamp(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))))), (_GLF_IDENTITY(1u, (1u) << (0u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), clamp(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))))), (_GLF_IDENTITY(1u, (1u) << (0u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> 0u)) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), clamp(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))))), (_GLF_IDENTITY(1u, (1u) << (0u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> 0u))))) / 1u)))), min(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), 0u ^ ((1u)))) / 1u)))))), clamp(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ _GLF_IDENTITY((1u), 0u + (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))))))))))), (_GLF_IDENTITY(1u, (1u) << (0u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> 0u)), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1u), 0u + ((1u))), _GLF_IDENTITY(uint(uint(~ (1u))), ~ (~ (uint(uint(~ (1u))))))))), clamp(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))))))), (_GLF_IDENTITY(1u, (1u) << (0u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> 0u)))))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- 11.08)), _GLF_FUZZED((18.22 * vec3(-5295.8857, 1732.7169, -528.585)).s)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))))))) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))), _GLF_IDENTITY((uvec3(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u)))))) | uvec3(0u, 0u, 0u), ((uvec3(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u)))))) | uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((uvec3(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u)))))) | uvec3(0u, 0u, 0u), ((uvec3(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u)))))) | uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))))))) - uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(gl_NumWorkGroups.x, (true ? gl_NumWorkGroups.x : _GLF_FUZZED(79814u)))));
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(mat3(1.0), mat3x2(1.0), _GLF_struct_4(mat4x3(1.0), gl_WorkGroupSize.x), _GLF_struct_6(mat4x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(85.05)), vec2(_GLF_FUZZED(-695.067), (injectionSwitch)[1]), bvec2(false, true))).y), 1.0, 1.0, 0.0)))))), _GLF_struct_5(mat3(1.0), mat4(1.0), mat3(1.0), mat4(_GLF_IDENTITY(1.0, (1.0) - 0.0)), vec4(1.0), mat3x4(1.0), ivec2(1))), _GLF_struct_10(_GLF_struct_7(bvec2(_GLF_IDENTITY(true, bool(bool(true)))), _GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true))), mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-9.3, min(-9.3, -9.3)))), float(1.0), bool(true)))), 1, mat2x3(1.0)), _GLF_struct_8(bvec2(true)), _GLF_struct_9(mat3x4(1.0), 1.0, uvec3(1u), mat4x2(1.0))), 1.0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_struct_replacement_11._f2.workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, abs(0.0), 1.0)), min(vec2(mat2(injectionSwitch, abs(0.0), 1.0)), vec2(mat2(injectionSwitch, abs(0.0), 1.0))))).y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), true && (! (_GLF_WRAPPED_IF_TRUE(true)))))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 do
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               barrier();
              }
            }
          }
         else
          {
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, (1) | 0)) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))], clamp(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec2(buf[virtual_gid], 1u)), max(uint(uvec2(buf[virtual_gid], 1u)), uint(uvec2(buf[virtual_gid], 1u))))), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))], _GLF_IDENTITY(uint(uvec3(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) + 0u)], 0u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) | (1u)))))), (uint(uvec3(buf[virtual_gid], 0u, 1u))) >> 0u))))), ((_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))], clamp(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(1u, 0u ^ (1u)))))], _GLF_IDENTITY(uint(uvec2(buf[virtual_gid], 1u)), max(uint(uvec2(buf[virtual_gid], 1u)), uint(uvec2(buf[virtual_gid], 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | _GLF_IDENTITY(0u, (0u) - 0u)), (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | _GLF_IDENTITY(0u, (0u) - 0u))) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | 0u)), _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 1u)), (uint(uvec3(buf[virtual_gid], 0u, 1u))) >> 0u)))))) + 0u) << _GLF_IDENTITY((163247u & (0u | 0u)), (_GLF_IDENTITY((163247u & (0u | 0u)), min((163247u & (0u | 0u)), (163247u & (0u | 0u))))) - 0u)), 4, 64, 0);
 do
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) >> 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0) < 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), ((! (_GLF_IDENTITY(false, ! (! (false)))))) || false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1, (subgroup_local_id + 1) >> 0u)))))) < subgroup_size)
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(4, 0, _GLF_IDENTITY(1, clamp(1, 1, 1)), 1), (ivec4(4, 0, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), ~ (~ (clamp(1, 1, 1))))), 1)) - ivec4(0, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), (false ? _GLF_FUZZED((_injected_loop_counter << 46219)) : _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, max(0, 0)), 0)))), 0)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(ivec4(4, 0, 1, 1), (true ? _GLF_IDENTITY(ivec4(4, 0, 1, 1), (ivec4(4, 0, 1, 1)) ^ ivec4(0, 0, 0, 0)) : _GLF_FUZZED(ivec4(45639, -87831, 68119, 52510)))), ivec4(4, 0, _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (1))))), (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (1)))))) << 0), 1), ivec4(4, 0, 1, _GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(-65511), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(-65511), max(_GLF_FUZZED(-65511), _GLF_FUZZED(-65511)))))))))), (clamp(_GLF_IDENTITY(ivec4(4, 0, 1, 1), (true ? _GLF_IDENTITY(ivec4(4, 0, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)), 1), (ivec4(4, 0, _GLF_IDENTITY(1, 0 + (1)), 1)) ^ ivec4(0, 0, _GLF_IDENTITY(0, (0) | (0)), 0)) : _GLF_FUZZED(ivec4(_GLF_IDENTITY(45639, (45639) | 0), -87831, 68119, 52510)))), ivec4(4, 0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (1))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (1))))), int(ivec2(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (1))))), 0))), _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (1))))), (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (1)))))) * (0 | 1)), _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (1))))))), (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (1)))))) << 0), 1), ivec4(4, 0, 1, _GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(-65511), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(-65511), max(_GLF_FUZZED(-65511), _GLF_FUZZED(-65511))))))))))) + ivec4(0, 0, 0, 0))))));
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     subgroupAll(false);
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y)))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-91.89)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), float(_GLF_FUZZED(-97.18)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-91.89)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), float(_GLF_FUZZED(-97.18)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-91.89)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), float(_GLF_FUZZED(-97.18)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))))), true && (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), min(max(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(-567.489)), float(max(injectionSwitch.y, injectionSwitch.y)), bool(true)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-91.89)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, abs(0.0), 0.0, 1.0, 0.0, abs(1.0), 1.0, round(length(normalize(sqrt(vec2(1.0, 1.0))))), 0.0, sqrt(1.0)), (true ? mat3x4(injectionSwitch, 1.0, abs(0.0), 0.0, 1.0, 0.0, abs(1.0), 1.0, round(length(normalize(sqrt(vec2(1.0, 1.0))))), 0.0, sqrt(1.0)) : _GLF_FUZZED(mat3x4(277.581, 0.7, -3.6, -479.889, -5521.3253, 1.7, -5.4, -8006.0714, -493.093, 678.197, -2.6, 8.0))))), (vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, abs(0.0), 0.0, 1.0, 0.0, abs(1.0), 1.0, round(length(normalize(sqrt(vec2(1.0, 1.0))))), 0.0, sqrt(1.0)), (true ? mat3x4(injectionSwitch, 1.0, abs(0.0), 0.0, 1.0, 0.0, abs(1.0), 1.0, round(length(normalize(sqrt(vec2(1.0, 1.0))))), 0.0, sqrt(1.0)) : _GLF_FUZZED(mat3x4(277.581, 0.7, -3.6, -479.889, -5521.3253, 1.7, -5.4, -8006.0714, -493.093, 678.197, -2.6, 8.0)))))) - vec2(0.0, 0.0))).y))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, sqrt(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, sqrt(1.0), 1.0, 1.0, 1.0), _GLF_IDENTITY((mat4(injectionSwitch, 1.0, 1.0, 0.0, sqrt(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), 0.0, 1.0, sqrt(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, sqrt(1.0), 1.0, 1.0, 1.0)), transpose(_GLF_IDENTITY(transpose((mat4(injectionSwitch, 1.0, 1.0, 0.0, sqrt(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), 0.0, 1.0, sqrt(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, sqrt(1.0), 1.0, 1.0, 1.0))), transpose(transpose(transpose((mat4(injectionSwitch, 1.0, 1.0, 0.0, sqrt(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), 0.0, 1.0, sqrt(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, sqrt(1.0), 1.0, 1.0, 1.0)))))))) / mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(490.521)), float(1.0), bool(true))), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), length(0.0) + (_GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), _GLF_ONE(1.0, injectionSwitch.y))))).y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))).y))))), float(_GLF_FUZZED(-97.18)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y) && true, ((injectionSwitch.x > injectionSwitch.y) && true) || false))))))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-91.89)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(float(_GLF_FUZZED(-97.18)), min(float(_GLF_FUZZED(-97.18)), float(_GLF_FUZZED(-97.18)))), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-91.89)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-91.89)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-91.89)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-91.89)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), float(_GLF_FUZZED(-97.18)), bool(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(22.73, 7.9)) : injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y) && true))))))), true && (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.1)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(acos(604.133)) : injectionSwitch.y)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-91.89)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, sqrt(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, sqrt(1.0), 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, exp(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0))))), 1.0), (mat4(injectionSwitch, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, sqrt(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), sqrt(1.0), 1.0, 1.0, 1.0)) / mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED((length(vec2(2706.9220, -8.2))))))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))).y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), float(_GLF_FUZZED(-97.18)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ((injectionSwitch.x > injectionSwitch.y) && true) || false)))))))))))))), true && (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-91.89)), max(float(_GLF_FUZZED(-91.89)), _GLF_IDENTITY(float(_GLF_FUZZED(-91.89)), min(float(_GLF_FUZZED(-91.89)), float(_GLF_FUZZED(-91.89)))))), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6.9) : injectionSwitch.y)), injectionSwitch.y), (max(injectionSwitch.y, injectionSwitch.y)) / 1.0)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), float(_GLF_FUZZED(-97.18)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-91.89)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))), bool(true))), cos(sin(0.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.2))), injectionSwitch.y)), mix(float(_GLF_FUZZED(-91.89)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))), (true ? float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) : _GLF_FUZZED(132.940))), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))), mix(float(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)))))), float(_GLF_FUZZED(6.5)), bool(false))))), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), float(_GLF_FUZZED(-97.18)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))))) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))), true && (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(338.751)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(true))))), _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-91.89)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-91.89)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-91.89)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-91.89)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, sqrt(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, sqrt(1.0), 1.0, 1.0, 1.0), (mat4(injectionSwitch, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, sqrt(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, sqrt(1.0), 1.0, 1.0, 1.0)) / mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))).y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), float(_GLF_FUZZED(-97.18)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ((injectionSwitch.x > injectionSwitch.y) && true) || false))))), false || (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), abs(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0))).y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-91.89)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-91.89)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-91.89)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-91.89)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, sqrt(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, sqrt(1.0), 1.0, 1.0, 1.0), (mat4(injectionSwitch, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, sqrt(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, sqrt(1.0), 1.0, 1.0, 1.0)) / mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))).y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-91.89)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-91.89)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-91.89)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-91.89)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, sqrt(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, sqrt(1.0), 1.0, 1.0, 1.0), (mat4(injectionSwitch, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, sqrt(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, sqrt(1.0), 1.0, 1.0, 1.0)) / mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))).y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-91.89)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-91.89)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-91.89)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-91.89)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, sqrt(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, sqrt(1.0), 1.0, 1.0, 1.0), (mat4(injectionSwitch, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, sqrt(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, sqrt(1.0), 1.0, 1.0, 1.0)) / mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))).y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-91.89)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-91.89)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-91.89)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-91.89)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, sqrt(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, sqrt(1.0), 1.0, 1.0, 1.0), (mat4(injectionSwitch, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, sqrt(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, sqrt(1.0), 1.0, 1.0, 1.0)) / mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))).y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), float(_GLF_FUZZED(-97.18)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ((injectionSwitch.x > injectionSwitch.y) && true) || false)))))))))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       barrier();
      }
     barrier();
    }
   atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))) >> 0u), (true ? virtual_gid : _GLF_FUZZED(read)))], read, 4, 64, 4);
   for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))) | (int(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(clamp(-27355, 81007, 69226)) : _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), clamp(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y))))) | (int(_GLF_ONE(1.0, injectionSwitch.y))))))) | (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))) - 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, true && (_injected_loop_counter != 0))); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = ((0 >> _GLF_IDENTITY(int(7), int(7))) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
         subgroupAll(true);
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 << _GLF_IDENTITY(int(2), int(2))) | 0)); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, false, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, false, true))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true && (_GLF_DEAD(false))), false, false, true)))) && true))))
        barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
}
