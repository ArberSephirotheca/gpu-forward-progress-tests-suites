#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - log(1.0))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(log(1.0), (false ? _GLF_FUZZED(-724.997) : log(1.0))))), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, abs(sqrt(1.0)), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 0.0))).x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id), uint(uvec4(_GLF_IDENTITY((workgroup_size * workgroup_id), 1u * ((workgroup_size * workgroup_id))), 0u, 1u, 1u))) << 0u), _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size)) * workgroup_id));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(float(true), min(float(true), float(true))))), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-77.00)), float(injectionSwitch.x), bool(true)))), (min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(float(true))), mix(float(_GLF_FUZZED(-5.2)), float(_GLF_IDENTITY(float(_GLF_FUZZED(float(true))), (float(_GLF_FUZZED(float(true)))) / 1.0)), bool(true))), mix(float(_GLF_IDENTITY(float(_GLF_FUZZED(float(true))), mix(float(_GLF_FUZZED(-5.2)), float(_GLF_IDENTITY(float(_GLF_FUZZED(float(true))), (float(_GLF_FUZZED(float(true)))) / 1.0)), bool(true)))), float(_GLF_FUZZED(-3831.3773)), bool(false))), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-77.00)), float(injectionSwitch.x), bool(true))))) / 1.0)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 1.0))))), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(true))), bool(false))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(true))), bool(false))), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(true))), bool(false))), 0.0, 0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(8128.7820) : float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(true))), bool(false))), 0.0, 0.0, 0.0, 0.0, 1.0))))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-77.00)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))))))), (min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(float(true))), mix(float(_GLF_FUZZED(-5.2)), float(_GLF_IDENTITY(float(_GLF_FUZZED(float(true))), (float(_GLF_FUZZED(float(true)))) / 1.0)), bool(true))), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-77.00)), float(injectionSwitch.x), bool(true))))) / 1.0)) > injectionSwitch.y)))))))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(subgroup_id, subgroup_id), (false ? _GLF_FUZZED(subgroup_id) : min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))))))))) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(! (! (true && (false))), ! (_GLF_IDENTITY(! (! (! (true && (false)))), (! (! (! (true && (false))))) || false))))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), false)), (bool(bvec2(! (false), false))) && true), true && (_GLF_IDENTITY(bool(bvec2(! (false), false)), (bool(bvec2(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bool((false))))))), false))) && true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), false)), (bool(bvec2(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))), true, true))))), false))) && true), bool(bool(_GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, true && (false))), false)), (bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec4(bvec2(! (false), false), true, true))))) && true)))), false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), false)), bool(bvec3(bool(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false)), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, true && (false))), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, true && (false))), true, false)))))), false)), false, true))), (bool(bvec2(! _GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), true))))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), true))))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), true)))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))) && true), (_GLF_IDENTITY(bool(bvec2(! (false), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (false), (! (false)) || false))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false))) && true)) && true)) || false))), bool(bvec3((_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), false)), (bool(bvec2(! (false), false))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), false)), (bool(bvec2(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))), true, true))))), false))) && true), bool(bool(_GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), false)), (bool(bvec2(! (false), false))) && true)))), false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), false)), bool(bvec3(bool(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, true && (false))), true, _GLF_IDENTITY(false, (false) || false)), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, true && (false))), true, false)))))), false)), false, true))), (bool(bvec2(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false))) && true), (_GLF_IDENTITY(bool(bvec2(! (false), false)), (bool(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false))) && true)) && true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), false, true)))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), false)), (bool(bvec2(! (false), false))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), false)), (bool(bvec2(! (false), false))) && true), bool(bool(_GLF_IDENTITY(bool(bvec2(! (false), false)), (_GLF_IDENTITY(bool(bvec2(! (false), false)), bool(bvec4(bool(bvec2(! (false), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) && true)))), false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), false)), bool(bvec3(bool(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec2(true && (false), false))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (true && (false))))), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, true && (false))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))))))))), false)), false, true))), (bool(bvec2(! _GLF_IDENTITY((false), bool(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))) && true), (_GLF_IDENTITY(bool(bvec2(! (false), false)), (bool(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false))) && true)) && true)) || false)))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)), bvec2(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), false)), (bool(bvec2(! (false), false))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), false)), bvec2(bvec3(bvec2(bvec2(! (false), false)), false)))))), (bool(bvec2(! (false), false))) && true), bool(bool(_GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))) && true)), false)), (bool(bvec2(! (false), _GLF_IDENTITY(false, false || (false))))) && true)))), false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), false)), bool(bvec3(bool(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, true && (false))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(false, true && (false))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))))))), bvec3(bvec4(bvec3(bvec3((_GLF_IDENTITY(false, true && (false))), true, false)), true))))))), false)), false, true))), (bool(bvec2(! _GLF_IDENTITY((false), bool(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))) && true), (_GLF_IDENTITY(bool(bvec2(! (false), false)), (bool(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false))) && true)) && true)) || false)))), (injectionSwitch.x > injectionSwitch.y)), false))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), false)), (bool(bvec2(! (false), false))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), false)), (bool(bvec2(! (false), false))) && true), bool(bool(_GLF_IDENTITY(bool(bvec2(! (false), false)), (bool(bvec2(! (false), false))) && true)))), false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), false)), bool(bvec3(bool(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))), true && (false))), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, true && (false))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))))))))), false)), false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY((bool(bvec2(! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(bvec2((false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4.5)), vec2(_GLF_FUZZED(vec4(54.22, -4.6, 5.1, -5.9).x), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))))), false))), ! (! ((bool(bvec2(! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(bvec2((false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4.5)), vec2(_GLF_FUZZED(vec4(54.22, -4.6, 5.1, -5.9).x), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))))), false)))))) && true), (_GLF_IDENTITY(bool(bvec2(! (false), false)), (bool(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false))) && true)) && true)) || false)))), (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), false)), (bool(bvec2(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false)))))), false))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), false)), bvec2(bvec3(bvec2(bvec2(! (false), false)), false)))))), (bool(bvec2(! (false), false))) && true), bool(bool(_GLF_IDENTITY(bool(bvec2(! (false), false)), _GLF_IDENTITY((bool(bvec2(! (false), false))) && true, ! (_GLF_IDENTITY(! ((bool(bvec2(! (false), false))) && true), bool(bvec4(! ((bool(bvec2(! (false), false))) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), false, true, true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), false)), bool(bvec3(bool(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, true && (false))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(false, true && (false))), true, false)), bvec3(bvec4(bvec3(bvec3((_GLF_IDENTITY(false, true && (false))), true, false)), true))))))), false)), false, true))), (bool(bvec2(! _GLF_IDENTITY((false), bool(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))) && true), (_GLF_IDENTITY(bool(bvec2(! (false), false)), (bool(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false))) && true)) && true)) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), false)), bool(bvec3(bool(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, true && (false))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(false, true && (false))), true, false)), bvec3(bvec4(bvec3(bvec3((_GLF_IDENTITY(false, true && (false))), true, false)), true))))))), false)), false, true))), (bool(bvec2(! _GLF_IDENTITY((false), bool(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))) && true), (_GLF_IDENTITY(bool(bvec2(! (false), false)), (bool(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false))) && true)) && true)) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), false)), bool(bvec3(bool(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, true && (false))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(false, true && (false))), true, false)), bvec3(bvec4(bvec3(bvec3((_GLF_IDENTITY(false, true && (false))), true, false)), true))))))), false)), false, true))), (bool(bvec2(! _GLF_IDENTITY((false), bool(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))) && true), (_GLF_IDENTITY(bool(bvec2(! (false), false)), (bool(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false))) && true)) && true)) || false)))), (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), false)), bool(bvec3(bool(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, true && (false))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(false, true && (false))), true, false)), bvec3(bvec4(bvec3(bvec3((_GLF_IDENTITY(false, true && (false))), true, false)), true))))))), false)), false, true))), (bool(bvec2(! _GLF_IDENTITY((false), bool(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))) && true), (_GLF_IDENTITY(bool(bvec2(! (false), false)), (bool(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false))) && true)) && true)) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), false)), bool(bvec3(bool(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, true && (false))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(false, true && (false))), true, false)), bvec3(bvec4(bvec3(bvec3((_GLF_IDENTITY(false, true && (false))), true, false)), true))))))), false)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))), true))), (bool(bvec2(! _GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), true, true), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))) && true), (_GLF_IDENTITY(bool(bvec2(! (false), false)), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), false))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), false))), false))))))))))), _GLF_IDENTITY(bool(bvec3((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), false))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), false))), false))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec3((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), false))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), false))), false))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) && true)) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), false)), bool(bvec3(bool(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, true && (false))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(false, true && (false))), true, false)), bvec3(bvec4(bvec3(bvec3((_GLF_IDENTITY(false, true && (false))), true, false)), true))))))), false)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))), true))), (bool(bvec2(! _GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), true, true), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))) && true), (_GLF_IDENTITY(bool(bvec2(! (false), false)), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), false))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), false))), false))))))))))), _GLF_IDENTITY(bool(bvec3((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), false))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), false))), false))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec3((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), false))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), false))), false))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) && true)) && true))), bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), false)), bool(bvec3(bool(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, true && (false))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(false, true && (false))), true, false)), bvec3(bvec4(bvec3(bvec3((_GLF_IDENTITY(false, true && (false))), true, false)), true))))))), false)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))), true))), (bool(bvec2(! _GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), true, true), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))) && true), (_GLF_IDENTITY(bool(bvec2(! (false), false)), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), false))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), false))), false))))))))))), _GLF_IDENTITY(bool(bvec3((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), false))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), false))), false))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec3((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), false))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false), false))), false))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) && true)) && true)))))))) || false))))) && true))))))), (injectionSwitch.x > injectionSwitch.y)), false))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), false)), (bool(bvec2(! (false), false))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), false)), (_GLF_IDENTITY(bool(bvec2(! (false), false)), ! (! (bool(bvec2(! (false), false)))))) && true), bool(bool(_GLF_IDENTITY(bool(bvec2(! (false), false)), (bool(bvec2(! (false), false))) && true)))), false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), false)), bool(bvec3(bool(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, true && (false))), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, true && (false))), true, false)))))), false)), false, true))), (bool(bvec2(! _GLF_IDENTITY((false), bool(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))) && true), (_GLF_IDENTITY(bool(bvec2(! (false), false)), (bool(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false))) && true)) && true)) || false)))), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), false)), (bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (false), false))))))))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), false)), (bool(bvec2(! (false), _GLF_IDENTITY(false, true && (false))))) && true), bool(bool(_GLF_IDENTITY(bool(bvec2(! (false), false)), (bool(bvec2(! (false), false))) && true)))), false, true, true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), false)), bool(bvec3(bool(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true && (false), ! (! (true && (false)))))), false || (bool(bool(_GLF_IDENTITY(true && (false), ! (! (true && (false))))))))))), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, true && (false))), true, _GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false)), false, true))), (bool(bvec2(! _GLF_IDENTITY((false), bool(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))) && true), (_GLF_IDENTITY(bool(bvec2(! (false), false)), (bool(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false))) && true)) && true)) || false, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, true && (false))), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, true && (false))), true, false)))))), false)), (bool(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, true && (false))), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, true && (false))), true, false)))))), false))) || false), false, true))), _GLF_IDENTITY((bool(bvec2(! _GLF_IDENTITY((false), bool(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))) && true, true && ((bool(bvec2(! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, true))), bool(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), mat2(1.0) * (vec2((injectionSwitch)[0], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(float(-71130)), _GLF_FUZZED(78.24)), bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (bool(bvec4(false, false, false, false))))))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (bool(bvec4(false, false, false, false)))))))))))), false))).y))))), false))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), false)), (bool(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bool(! (false))))))), false))) && true), ! (! (_GLF_IDENTITY(bool(bvec2(! (false), false)), (bool(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false))) && true))))) && true)) || false) || false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3491.5701) : injectionSwitch.y)))), false), bvec2(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), _GLF_IDENTITY(false, (false) && true))), (bool(bvec2(! (false), false))) && true), _GLF_IDENTITY((bool(bvec2(! (false), false))) && true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(! (false), false))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(! (false), false))) && true, true && ((bool(bvec2(! (false), false))) && true))), ! (! (! (_GLF_IDENTITY((bool(bvec2(! (false), false))) && true, true && ((bool(bvec2(! (false), false))) && true)))))))), (_GLF_IDENTITY((bool(bvec2(! (false), false))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(! (false), false))) && true, true && ((bool(bvec2(! (false), false))) && true))), ! (! (! (_GLF_IDENTITY((bool(bvec2(! (false), false))) && true, true && ((bool(bvec2(! (_GLF_IDENTITY(false, false || (false))), false))) && true))))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! _GLF_IDENTITY((false), false || ((false))), false)), (bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (false), false)))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)), bool(bool(_GLF_IDENTITY(bool(bvec2(! (false), false)), (bool(bvec2(! (false), false))) && true)))), false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), false)), bool(bvec3(bool(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (true && (false))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (true), true && (! (true))))), ! (! (! (! (_GLF_IDENTITY(! (true), true && (! (true))))))))))), false), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, true && (false))), true, false)))))), false)), false, true))), (bool(bvec2(! _GLF_IDENTITY((false), bool(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))) && true), (_GLF_IDENTITY(bool(bvec2(! (false), false)), (bool(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! _GLF_IDENTITY((false), bool(bvec4((false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false))) && true)) && true)) || false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false)))))), false, false, false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, true)))))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_IDENTITY(false, ! (! (false)))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(uvec2(6515u, 91004u)[0]) : _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) ^ 0u) * subgroup_size)) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))), false, false, true)), ! (! _GLF_IDENTITY((bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))), false, false, true))), false || (_GLF_IDENTITY((bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))), false, false, true))), bool(bool(_GLF_IDENTITY((bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))), false, false, true))), ! (! ((bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))), false, false, true)))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) >> 0)), 0u ^ (uint(_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-19129, (-19129) + 0)) : 0)))))), _GLF_IDENTITY(4, int(int(4))), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | 0)) + (1 ^ 1), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) | 0)) + (1 ^ 1), 0 | ((_GLF_IDENTITY(4, (4) | 0)) + (1 ^ 1))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) | 0)), 0 ^ ((_GLF_IDENTITY(4, (4) | 0)))), (_GLF_IDENTITY(4, (4) | 0)))) + (_GLF_IDENTITY(1, 0 ^ (1)) ^ 1)), (_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) | 0)), 0 ^ ((_GLF_IDENTITY(4, (4) | 0)))), (_GLF_IDENTITY(4, (4) | 0)))) + (_GLF_IDENTITY(1, 0 ^ (1)) ^ 1))) - 0), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) + (1 ^ 1)))), 64, 0);
 if(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)))))))))
    return;
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   subgroupAll(false);
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, ! (! (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, 1.0, cos(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), tan(0.0), 1.0, 0.0, abs(0.0)), mat3(mat3x4(mat3(injectionSwitch.x, 0.0, 1.0, cos(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), tan(0.0), 1.0, 0.0, abs(0.0))))))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (false), (! (false)) || false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, ! (! (false))))), false), bvec2(bvec3(bvec2(! (! (_GLF_IDENTITY(false, ! (! (false))))), false), false))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(true);
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
}
