#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (! (! (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true), true && (_GLF_WRAPPED_IF_FALSE(false))))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * abs(1.0)) : _GLF_FUZZED(5970.7712))))), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, int(ivec3(0, 1, 1)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-49.24))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (true && (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   do
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         else
          {
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(vec2(8401.4791, -54.87)[0]) : injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))), 0.0)), 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3(_GLF_FUZZED(60.59), _GLF_IDENTITY(_GLF_FUZZED(416.144), min(_GLF_FUZZED(416.144), _GLF_FUZZED(416.144))), (_GLF_IDENTITY(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0)))), vec3(0.0, 0.0, 0.0) + (vec3(0.0, 1.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0)))))))[2]), vec3((_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0))))[0], (vec3(0.0, 1.0, 0.0))[1], _GLF_FUZZED(49.96)), bvec3(true, true, false))), vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(sin(9.5)))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), vec3(0.0, 1.0, 0.0))))))).y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), min(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), mix(vec3((vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0))[0], _GLF_FUZZED(float(false)), _GLF_FUZZED(-38.43)), vec3(_GLF_FUZZED(62.08), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0))[1], (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0))[2]), bvec3(false, true, true)))))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))))), ! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))))))))))), bool(bvec2(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))))), ! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))))))))))), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))))), ! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))))))))))), bool(bvec2(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))))), ! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))))))))))), true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-2057.2588), max(_GLF_IDENTITY(_GLF_FUZZED(-2057.2588), (true ? _GLF_FUZZED(-2057.2588) : _GLF_FUZZED(-2569.0368))), _GLF_FUZZED(-2057.2588))))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(-2057.2588)), min(_GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(-2057.2588)), 0.0 + ((true ? 0.0 : _GLF_FUZZED(-2057.2588)))), (true ? 0.0 : _GLF_FUZZED(-2057.2588))))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)), vec3(0.0, 1.0, 0.0))))))).y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, false || (true)) ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.2)), float(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0)))), bool(true))), injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))))), ! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(54.25) : 0.0)), 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))))))))))), bool(bvec2(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y))))), true && (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), _GLF_IDENTITY((vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))))))), ! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), false || (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(-2057.2588)), (_GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(-2057.2588)), max((true ? 0.0 : _GLF_FUZZED(-2057.2588)), (true ? 0.0 : _GLF_FUZZED(-2057.2588))))) - log(1.0))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))))))))))), true)))) && true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), min(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), mix(vec3((vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0))[0], _GLF_FUZZED(float(false)), _GLF_FUZZED(-38.43)), vec3(_GLF_FUZZED(62.08), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0))[1], (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0))[2]), bvec3(false, true, true)))))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))))), ! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))))))))))), bool(bvec2(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))))), ! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))))))))))), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))))), ! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))))))))))), bool(bvec2(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))))), ! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))))))))))), true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-2057.2588), max(_GLF_IDENTITY(_GLF_FUZZED(-2057.2588), (true ? _GLF_FUZZED(-2057.2588) : _GLF_FUZZED(-2569.0368))), _GLF_FUZZED(-2057.2588))))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(-2057.2588)), min(_GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(-2057.2588)), 0.0 + ((true ? 0.0 : _GLF_FUZZED(-2057.2588)))), (true ? 0.0 : _GLF_FUZZED(-2057.2588))))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)), vec3(0.0, 1.0, 0.0))))))).y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, false || (true)) ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.2)), float(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0)))), bool(true))), injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))))), ! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(54.25) : 0.0)), 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))))))))))), bool(bvec2(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y))))), true && (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), _GLF_IDENTITY((vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))))))), ! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), false || (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(-2057.2588)), (_GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(-2057.2588)), max((true ? 0.0 : _GLF_FUZZED(-2057.2588)), (true ? 0.0 : _GLF_FUZZED(-2057.2588))))) - log(1.0))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))))))))))), true)))) && true)))))), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 1.0))))), 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, ! (! (true))) ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), min(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), mix(vec3((vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0))[0], _GLF_FUZZED(float(false)), _GLF_FUZZED(-38.43)), vec3(_GLF_FUZZED(62.08), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0))[1], (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0))[2]), bvec3(false, true, true)))))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)) && true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), clamp(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (false ? _GLF_FUZZED(vec3(9.6, 61.96, 68.98)) : vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0))), vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0))))), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) + 0.0), 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) + 0.0), 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)) && true)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, true && (true)) ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))))))))))), bool(bvec2(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))))).y)), ! (! (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (false ? _GLF_FUZZED(470.296) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)))) > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (false ? _GLF_FUZZED(470.296) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)))) > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y))), ! (! (! (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (false ? _GLF_FUZZED(470.296) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)))) > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))))))))))), ! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(-2057.2588), (false ? _GLF_FUZZED(21.44) : true ? 0.0 : _GLF_FUZZED(-2057.2588))))), _GLF_IDENTITY(1.0, (1.0) / determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), vec3(mat2x3(vec3(0.0, 1.0, 0.0), 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0)))) / vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))))))))))), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 1.0, sin(0.0), tan(tan(0.0)), 0.0, sqrt(0.0), 0.0, 0.0)))))))))).y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))))))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))))), ! (! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-2057.2588), min(_GLF_FUZZED(-2057.2588), _GLF_IDENTITY(_GLF_FUZZED(-2057.2588), (true ? _GLF_FUZZED(-2057.2588) : _GLF_FUZZED(-3417.5382))))))), 1.0, 0.0), _GLF_IDENTITY((vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)), vec3(_GLF_IDENTITY(mat4(_GLF_IDENTITY((vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)), vec3(mat3((vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, abs(1.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), sqrt(0.0), log(1.0)))), _GLF_IDENTITY(dot(vec4(0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0), vec4(0.0, 0.0, 1.0, log(1.0))), dot(vec4(0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0), vec4(0.0, 0.0, 1.0, log(1.0)))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, log(1.0), cos(0.0), 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat4(_GLF_IDENTITY((vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)), vec3(mat3((vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, abs(1.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), sqrt(0.0), log(1.0)))), _GLF_IDENTITY(dot(vec4(0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0), vec4(0.0, 0.0, 1.0, log(1.0))), dot(vec4(0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0), vec4(0.0, 0.0, 1.0, log(1.0)))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, log(1.0), cos(0.0), 1.0, 0.0, 1.0, 1.0)))))))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.8)), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-49.12) : 0.0))), bool(true)))))))))).y))))), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))))))))))), bool(bvec2(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y, false, false, false))))), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588)))) / exp(0.0)), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))))), ! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y, false, false, false))))), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588)))) / exp(0.0)), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))))), ! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y, false, false, false))))), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588)))) / exp(0.0)), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))))), ! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))), true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_FUZZED(743.618)), bool(false))), 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-2057.2588), max(_GLF_IDENTITY(_GLF_FUZZED(-2057.2588), (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(-2057.2588) : _GLF_FUZZED(-2569.0368))), _GLF_FUZZED(-2057.2588))))), 1.0, 0.0), _GLF_IDENTITY(vec3(mat2x4(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-2057.2588), max(_GLF_IDENTITY(_GLF_FUZZED(-2057.2588), (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(-2057.2588) : _GLF_FUZZED(-2569.0368))), _GLF_FUZZED(-2057.2588))))), 1.0, 0.0), tan(0.0), 1.0, 0.0, 1.0, 1.0)), vec3(0.0, 0.0, 0.0) + (vec3(mat2x4(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-2057.2588), max(_GLF_IDENTITY(_GLF_FUZZED(-2057.2588), (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(-2057.2588) : _GLF_FUZZED(-2569.0368))), _GLF_FUZZED(-2057.2588))))), 1.0, 0.0), tan(0.0), 1.0, 0.0, 1.0, 1.0))))), (vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(-2057.2588)), min(_GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(-2057.2588)), 0.0 + ((true ? 0.0 : _GLF_FUZZED(-2057.2588)))), (true ? 0.0 : _GLF_FUZZED(-2057.2588))))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, float(_GLF_IDENTITY(vec3((0.0) - 0.0, 1.0, cos(0.0)), mat3(1.0) * (vec3((0.0) - 0.0, 1.0, cos(0.0)))))))), vec3(0.0, 1.0, 0.0))))))).y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))) ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, false || (true)) ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.2)), float(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0)))), bool(true))), injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))))), ! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(54.25) : 0.0)), 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), _GLF_IDENTITY((vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)), (true ? (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) : _GLF_FUZZED(vec3(4435.9191, 4116.3290, -855.256)))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), (log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(-2057.2588), (true ? true ? 0.0 : _GLF_FUZZED(-2057.2588) : _GLF_FUZZED(-846.287))))), 1.0, 0.0)) * _GLF_IDENTITY(mat3(_GLF_ONE(1.0, injectionSwitch.y)), (mat3(_GLF_ONE(1.0, injectionSwitch.y))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))) + 0.0)))).y)))))))))))), bool(bvec2(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(-2057.2588, max(-2057.2588, -2057.2588))))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y))))), true && (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), _GLF_IDENTITY((vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), _GLF_IDENTITY((vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)), mat3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y)))) * ((vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(-2057.2588, max(-2057.2588, -2057.2588))))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) - tan(0.0))))))).y) && true))), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))))))), ! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * (vec3(0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0))))))).y)), false || (((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y, false))))))), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2057.2588))), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(-2057.2588)), (_GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(-2057.2588)), max((true ? 0.0 : _GLF_FUZZED(-2057.2588)), (true ? 0.0 : _GLF_FUZZED(-2057.2588))))) - log(1.0))), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(42.65)), float(0.0), bool(true))))), 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))).y)))))))))))), true)))) && true)))))))))) || false))))))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(486.678, -5740.2744)))))), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3.1)))) - _GLF_IDENTITY(0.0, (0.0) + 0.0))), (_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3.1)))) - 0.0)), mix(float(_GLF_FUZZED(-0.9)), float(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3.1)))) - 0.0))), bool(true)))) - _GLF_IDENTITY(tan(0.0), mix(float(_GLF_IDENTITY(tan(0.0), (tan(0.0)) + 0.0)), float(_GLF_FUZZED(4.6)), bool(false))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), true))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(virtual_gid) : ~ (workgroup_base)))))), max(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(virtual_gid) : ~ (workgroup_base)))))), (true ? (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(virtual_gid) : ~ (workgroup_base)))))) : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(virtual_gid) : ~ (workgroup_base)))))))) ^ 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (workgroup_base) | (workgroup_base)))) + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), uint(uint((subgroup_local_id + 1) % subgroup_size))));
 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), clamp((int(8)), (int(8)), (int(8)))) >> 0), 1, 0, 0), max(ivec4(_GLF_IDENTITY(int(8), (int(8)) >> 0), 1, 0, 0), ivec4(_GLF_IDENTITY(int(8), (int(8)) >> _GLF_IDENTITY(0, (0) | (0))), 1, 0, 0))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
      }
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))))), 0 + (1))), 4, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (~ (64)) << 0))), 4);
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY((virtual_gid), ((virtual_gid)) | ((virtual_gid)))) - 0u) + 0u), virtual_gid, virtual_gid)), (virtual_gid) - 0u)], _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(8329))), 64, 0);
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1), _GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter) | (_injected_loop_counter), (_GLF_IDENTITY((_injected_loop_counter) | (_injected_loop_counter), ((_injected_loop_counter) | (_injected_loop_counter)) | 0)) | (_GLF_IDENTITY((_injected_loop_counter) | (_injected_loop_counter), ~ (~ ((_injected_loop_counter) | (_injected_loop_counter))))))), _injected_loop_counter)) != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (! (! (_GLF_WRAPPED_IF_FALSE(false)))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                     else
                      {
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true)), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true))))))));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
            }
          }
         else
          {
           barrier();
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   for(int _injected_loop_counter = ((-85281 ^ _GLF_IDENTITY(98084, (98084) | (98084))) & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                    }
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))) && true)), bool(bool(false)))))
                    barrier();
                  }
                 else
                  {
                  }
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                }
              }
             else
              {
              }
            }
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, min(8, 8))), ~ (~ (int(8)))), clamp(int(8), int(8), int(8)))), (_GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(int(8), ~ (~ (int(8)))), clamp(int(8), _GLF_IDENTITY(int(8), min(int(8), int(8))), int(8))))) | (_GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(int(8), ~ (~ (int(8)))), clamp(int(8), int(8), int(8))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - 0))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-70.01), _GLF_FUZZED(5.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-70.01), _GLF_FUZZED(5.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))) && true)));
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false))))));
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true)))))) || false), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), ((~ (int(5)))) ^ 0)))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, max(_GLF_IDENTITY(5, clamp(5, 5, 5)), 5))), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-4.7)), bool(false))), _GLF_FUZZED(6.4)), vec2(_GLF_FUZZED(-468.584), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-4.7)), bool(false))), _GLF_FUZZED(6.4)), vec2(_GLF_FUZZED(-468.584), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)), true && (! ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-4.7)), bool(false))), _GLF_FUZZED(6.4)), vec2(_GLF_FUZZED(-468.584), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)))))))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(true, ! (! (true))))), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))))), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(clamp(5.8, 3205.0746, -9885.4537)))), min(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, injectionSwitch.y)) : _GLF_FUZZED(clamp(5.8, 3205.0746, -9885.4537)))), _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(clamp(5.8, 3205.0746, -9885.4537))))))))), ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(clamp(5.8, 3205.0746, -9885.4537)))), min(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, injectionSwitch.y)) : _GLF_FUZZED(clamp(5.8, 3205.0746, -9885.4537)))), _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(clamp(5.8, 3205.0746, -9885.4537)))))))))) && true))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, tan(0.0), 1.0, sqrt(0.0))))))))
        barrier();
      }
     else
      {
       if(subgroup_local_id + 1 < subgroup_size)
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 for(int _injected_loop_counter = (62028 & (0 | _GLF_IDENTITY(0, int(ivec3(0, _GLF_IDENTITY(0, 0 | (0)), 1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))), int(0))))) >> _GLF_IDENTITY(int(0), int(0))), (((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))), int(0))))) >> _GLF_IDENTITY(int(0), int(0)))) | (((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))), int(0))))) >> _GLF_IDENTITY(int(0), int(0))))) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             for(int _injected_loop_counter = (_GLF_IDENTITY(72601 & 0, min(72601 & 0, 72601 & 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 << _GLF_IDENTITY(int(2), int(2))), false || (_injected_loop_counter != (0 << _GLF_IDENTITY(int(2), int(2)))))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))
              barrier();
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             do
              {
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ _GLF_IDENTITY(0, clamp(0, 0, 0))), _injected_loop_counter)) != 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))));
         atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (_GLF_IDENTITY(1 ^ 1, (1 ^ 1) ^ 0)) | (4)), 64, 4);
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter))) / 1) != (_GLF_IDENTITY(4082 & 0, (4082 & 0) * 1))); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY((true) || false, ! (! ((true) || false))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (! (injectionSwitch.x > injectionSwitch.y)))))))
              barrier();
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               subgroupAll(false);
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.8)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), bool(true)))))))
            barrier();
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), true && ((! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))), false)))))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-886.877)), float(injectionSwitch.x), bool(true))))), injectionSwitch.x)) > injectionSwitch.y))) || false)), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))) || false, bool(bvec4((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))) || false, false, true, true))))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))))
                barrier();
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) | (0))); _injected_loop_counter --)
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec3(bool(bvec3(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), (! (true)) && true)) && true))))), false, _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(bool((injectionSwitch.x > injectionSwitch.y)), true, true, false)))))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool((injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(bool((injectionSwitch.x > injectionSwitch.y)), true), false, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(bvec2(bool((injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(bool((injectionSwitch.x > injectionSwitch.y)), true), false, false))))))), false || _GLF_IDENTITY((_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(bool((injectionSwitch.x > injectionSwitch.y)), true, true, false)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(bool((injectionSwitch.x > injectionSwitch.y)), true, true, false)))), true && ((_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(bool((injectionSwitch.x > injectionSwitch.y)), true, true, false)))))), true, true, false))))))))))))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
            {
            }
           else
            {
             for(int _injected_loop_counter = ((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), min(int(8), int(8)))), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), min(int(8), int(8)))), int(ivec4(0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), min(int(8), int(8)))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(42541))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (int(1)) - 0))), _GLF_IDENTITY(0, max(0, 0)))))) | 0)) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             else
              {
              }
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
            {
            }
           else
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               atomicStore(checker[virtual_gid], read, 4, 64, 4);
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y)))) && true))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 else
                  {
                  }
                }
              }
             else
              {
              }
            }
           else
            {
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY((false) || false, ((false) || false) && true)))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) < (_GLF_IDENTITY((_GLF_IDENTITY(1, 0 + (1)) << _GLF_IDENTITY(int(4), int(4))), int(ivec4((_GLF_IDENTITY(1, 0 + (1)) << _GLF_IDENTITY(int(4), int(4))), 1, 0, 1))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
          }
         do
          {
           for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY((int(7)) ^ 0, ((int(7)) ^ 0) | 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) && true))))
                      barrier();
                    }
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), (! ((! (false)))) && true)) && true)))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)), true)))))));
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || (true))))
                      {
                       barrier();
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3379.2751) : _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y))));
                  }
                }
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), min(~ (_injected_loop_counter), ~ (_injected_loop_counter)))))) << 0) < 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))))))))
                  {
                   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       else
                        {
                        }
                       barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                    }
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
                      barrier();
                     barrier();
                    }
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                }
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), false || (! (! (_GLF_IDENTITY(false, false || (false)))))))))), (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
                          barrier();
                         barrier();
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                    }
                   else
                    {
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, exp(0.0) * (injectionSwitch.y))))))
                    barrier();
                  }
                 else
                  {
                   do
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       for(int _injected_loop_counter = ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) | (1))), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(-52583))))))); _injected_loop_counter --)
                        {
                         barrier();
                        }
                      }
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   subgroupAll(true);
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0)))))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), (bool(bvec4(_GLF_DEAD(false), false, false, false))) && true)))
                  barrier();
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                    }
                   else
                    {
                    }
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(false)))));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true)))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 1)); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))), false, true))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))), false, true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false, false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), true))))))))), false || ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, determinant(mat4(1.0, round(length(normalize(1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false, false, _GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), false || ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(false, true && (false)) || ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, (false) && true), false, _GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), false || ((injectionSwitch.x > injectionSwitch.y))))))))))), bool(bvec4((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false, bool(bool(false)))), bvec2(bvec2(bvec2((injectionSwitch.x < injectionSwitch.y), false)))), false)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x < injectionSwitch.y), false)))), bvec2(bvec2(bvec2((injectionSwitch.x < injectionSwitch.y), false)))), false)), true)))))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(39.28)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))), ((1 << _GLF_IDENTITY(int(4), int(4)))) / 1) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(int(4), 1 * _GLF_IDENTITY((int(4)), 0 ^ ((int(4))))), int(4), int(4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))[0], injectionSwitch[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(mix(-32100, 39818, true))))])).x > injectionSwitch.y)))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
}
