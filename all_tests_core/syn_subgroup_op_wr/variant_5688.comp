#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_2 {
 bvec3 _f0;
 vec2 _f1;
 uint subgroup_local_id;
 ivec2 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_3 {
 mat3x2 _f0;
 bvec4 _f1;
 _GLF_struct_2 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_0 {
 ivec3 _f0;
 mat2x3 _f1;
 mat2x4 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_4 {
 bvec4 _f0;
 _GLF_struct_1 _f1;
 mat3x2 _f2;
 _GLF_struct_3 _f3;
 ivec4 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false, false)))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) < injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
  }
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(bvec4(true), _GLF_struct_1(_GLF_struct_0(ivec3(1), mat2x3(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-6.3)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(-6.3)), (true ? float(_GLF_FUZZED(-6.3)) : _GLF_FUZZED(-1.6))), max(_GLF_IDENTITY(float(_GLF_FUZZED(-6.3)), (true ? float(_GLF_FUZZED(-6.3)) : _GLF_FUZZED(-1.6))), _GLF_IDENTITY(float(_GLF_FUZZED(-6.3)), (true ? float(_GLF_FUZZED(-6.3)) : _GLF_FUZZED(-1.6))))), float(_GLF_FUZZED(-6.3)), float(_GLF_FUZZED(-6.3)))), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, cos(0.0), tan(0.0), 1.0), transpose(transpose(mat2(1.0, cos(0.0), tan(0.0), 1.0))))))), mix(float(_GLF_FUZZED(92.01)), float(_GLF_IDENTITY(max(1.0, 1.0), mix(float(max(1.0, 1.0)), float(_GLF_FUZZED(9169.2195)), bool(false)))), bool(true))))), (false ? _GLF_FUZZED(663.545) : 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, cos(0.0), tan(0.0), 1.0), transpose(transpose(mat2(1.0, cos(0.0), tan(0.0), 1.0))))))), (false ? _GLF_FUZZED(max(739.287, 4682.1837)) : max(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, cos(0.0), tan(0.0), 1.0), transpose(transpose(mat2(1.0, cos(0.0), tan(0.0), 1.0))))))))), mix(float(_GLF_FUZZED(92.01)), float(_GLF_IDENTITY(max(1.0, 1.0), mix(float(max(1.0, 1.0)), float(_GLF_FUZZED(9169.2195)), bool(false)))), bool(true))))), (_GLF_IDENTITY((_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, cos(0.0), tan(0.0), 1.0), transpose(transpose(mat2(1.0, cos(0.0), tan(0.0), 1.0))))))), (false ? _GLF_FUZZED(max(739.287, 4682.1837)) : max(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, cos(0.0), tan(0.0), 1.0), transpose(transpose(mat2(1.0, cos(0.0), tan(0.0), 1.0))))))))), mix(float(_GLF_FUZZED(92.01)), float(_GLF_IDENTITY(max(1.0, 1.0), mix(float(max(1.0, 1.0)), float(_GLF_FUZZED(9169.2195)), bool(false)))), bool(true))))), float(vec4((_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, cos(0.0), tan(0.0), 1.0), transpose(transpose(mat2(1.0, cos(0.0), tan(0.0), 1.0))))))), (false ? _GLF_FUZZED(max(739.287, 4682.1837)) : max(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, cos(0.0), tan(0.0), 1.0), transpose(transpose(mat2(1.0, cos(0.0), tan(0.0), 1.0))))))))), mix(float(_GLF_FUZZED(92.01)), float(_GLF_IDENTITY(max(1.0, 1.0), mix(float(max(1.0, 1.0)), float(_GLF_FUZZED(9169.2195)), bool(false)))), bool(true))))), 1.0, 0.0, 0.0)))) - 0.0))))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(28.99)), float(injectionSwitch.x), bool(true))) < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))).y)))))), mat2x4(1.0), mat2(1.0))), mat3x2(1.0), _GLF_struct_3(mat3x2(1.0), bvec4(true), _GLF_struct_2(bvec3(true), vec2(1.0), gl_SubgroupInvocationID, ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) + 0)), _GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))), mat4x2(1.0)), ivec4(1));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-17.62, -142.317)))).y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.4), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(((mat2x3(-7566.4099, 7.9, -4435.4264, 2.5, -1.4, 38.24) != mat2x3(-398.430, 4842.4356, 5.4, 903.887, -845.732, 976.753)) ? (3.9 * 127.194) : -95.72))), bvec2(true, false))).y, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-67.79), _GLF_FUZZED(4.3)), min(vec2(_GLF_FUZZED(-67.79), _GLF_FUZZED(4.3)), vec2(_GLF_FUZZED(-67.79), _GLF_FUZZED(4.3)))), bvec2(false, false))).y, cos(0.0), 1.0, 1.0)), (float(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-3673.5087)), float(0.0), bool(true)), (true ? mix(float(_GLF_FUZZED(-3673.5087)), float(0.0), bool(true)) : _GLF_FUZZED(34.26)))), 0.0))).y, cos(0.0), 1.0, 1.0))) + 0.0))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, false, true))) && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, (true ? workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size : _GLF_FUZZED(workgroup_id))) + _GLF_struct_replacement_4._f3._f2.subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))) && true))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_struct_replacement_4._f3._f2.subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_struct_replacement_4._f3._f2.subgroup_local_id + 1)), clamp(((_GLF_struct_replacement_4._f3._f2.subgroup_local_id + 1)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4._f3._f2.subgroup_local_id, min(_GLF_IDENTITY(_GLF_struct_replacement_4._f3._f2.subgroup_local_id, (_GLF_struct_replacement_4._f3._f2.subgroup_local_id) - 0u), _GLF_IDENTITY(_GLF_struct_replacement_4._f3._f2.subgroup_local_id, (_GLF_struct_replacement_4._f3._f2.subgroup_local_id) >> 0u))), (_GLF_IDENTITY(_GLF_struct_replacement_4._f3._f2.subgroup_local_id, (_GLF_struct_replacement_4._f3._f2.subgroup_local_id) | (_GLF_IDENTITY(_GLF_struct_replacement_4._f3._f2.subgroup_local_id, (_GLF_struct_replacement_4._f3._f2.subgroup_local_id) | 0u)))) >> 0u) + 1)), (_GLF_IDENTITY((_GLF_struct_replacement_4._f3._f2.subgroup_local_id + 1), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_4._f3._f2.subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, max(1, 1))))), max((_GLF_struct_replacement_4._f3._f2.subgroup_local_id + 1), (_GLF_struct_replacement_4._f3._f2.subgroup_local_id + 1))), (_GLF_IDENTITY((_GLF_struct_replacement_4._f3._f2.subgroup_local_id + 1), max((_GLF_struct_replacement_4._f3._f2.subgroup_local_id + 1), (_GLF_struct_replacement_4._f3._f2.subgroup_local_id + 1)))) / 1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(((_GLF_struct_replacement_4._f3._f2.subgroup_local_id + 1)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(199684u, _GLF_IDENTITY(9496u, (9496u) << 0u))) : uvec2(((_GLF_struct_replacement_4._f3._f2.subgroup_local_id + 1)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), ~ (~ (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))))), uvec2(0u, 0u) ^ (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(199684u, _GLF_IDENTITY(9496u, (9496u) << 0u))) : uvec2(((_GLF_struct_replacement_4._f3._f2.subgroup_local_id + 1)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), ~ (~ (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))))))))))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(((_GLF_struct_replacement_4._f3._f2.subgroup_local_id + 1)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(199684u, _GLF_IDENTITY(9496u, (_GLF_IDENTITY(9496u, max(_GLF_IDENTITY(9496u, (true ? _GLF_IDENTITY(9496u, clamp(9496u, 9496u, 9496u)) : _GLF_FUZZED(subgroup_size))), 9496u))) << 0u))) : uvec2(((_GLF_struct_replacement_4._f3._f2.subgroup_local_id + 1)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), ~ (~ (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))))))))), ~ (~ (uint(_GLF_IDENTITY(uvec2(((_GLF_struct_replacement_4._f3._f2.subgroup_local_id + 1)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(199684u, _GLF_IDENTITY(9496u, (9496u) << _GLF_IDENTITY(0u, min(0u, 0u))))) : uvec2(_GLF_IDENTITY(((_GLF_struct_replacement_4._f3._f2.subgroup_local_id + 1)), ~ (~ (((_GLF_struct_replacement_4._f3._f2.subgroup_local_id + 1))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), ~ (~ (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))))))))))))))), uint(_GLF_IDENTITY(uint(((_GLF_struct_replacement_4._f3._f2.subgroup_local_id + 1))), (uint(_GLF_IDENTITY(((_GLF_struct_replacement_4._f3._f2.subgroup_local_id + 1)), (_GLF_IDENTITY(((_GLF_struct_replacement_4._f3._f2.subgroup_local_id + 1)), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_struct_replacement_4._f3._f2.subgroup_local_id + 1, min(_GLF_struct_replacement_4._f3._f2.subgroup_local_id + 1, _GLF_struct_replacement_4._f3._f2.subgroup_local_id + 1)))), (((_GLF_struct_replacement_4._f3._f2.subgroup_local_id + 1))) + _GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (0u) * 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((true ? 0u : _GLF_FUZZED(subgroup_size)), ((true ? 0u : _GLF_FUZZED(subgroup_size))) - 0u)) + (0u))), _GLF_IDENTITY(max(uint(_GLF_IDENTITY(0u, 0u + (0u))), uint(_GLF_IDENTITY(0u, 0u + (0u)))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(max(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), 0u ^ (_GLF_IDENTITY(0u, 0u + (0u))))) | (_GLF_IDENTITY(0u, 0u + (0u))))), uint(_GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 1u, (0u | 0u), (0u | 0u)))))))), (false ? _GLF_FUZZED(workgroup_id) : max(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, ((1u ^ 1u) >> _GLF_IDENTITY(uint(0u), uint(0u)))))), 0u + (0u))), uint(_GLF_IDENTITY(0u, 0u + (0u))))))))))), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(0u, (0u) - 0u)), ((false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)))))), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), 0u + ((workgroup_base))) >> 0u))), _GLF_IDENTITY(clamp(~ (_GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))), ~ (_GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))), ~ (_GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)))), (_GLF_IDENTITY(clamp(~ (_GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))), ~ (_GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))), ~ (_GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)))), (clamp(~ (_GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))), ~ (_GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))), ~ (_GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))))) | (clamp(~ (_GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))), ~ (_GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))), ~ (_GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))))))) | (clamp(~ (_GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))), ~ (_GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))), ~ (_GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))))))))) : _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) / 1u) - 0u))) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))) >> 0u))) - 0u)) * 1u))) << 0u))) | _GLF_IDENTITY(((_GLF_struct_replacement_4._f3._f2.subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(48755) : 1))) >> (_GLF_IDENTITY(0, (0) - (0 | 0)) << _GLF_IDENTITY(int(4), int(4)))))), _GLF_IDENTITY((((_GLF_IDENTITY(_GLF_struct_replacement_4._f3._f2.subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 0, _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), (((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))) | 0))), (int(_GLF_IDENTITY(ivec4(1, 1, 0, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), min(ivec4(1, 1, 0, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY(ivec4(1, 1, 0, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), ivec4(0, 0, 0, 0) ^ (ivec4(1, 1, 0, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))))))))) - 0)), 1)), (_GLF_struct_replacement_4._f3._f2.subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 0, _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), (((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))) | 0))), (int(_GLF_IDENTITY(ivec4(1, 1, 0, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), min(ivec4(1, 1, 0, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY(ivec4(1, 1, 0, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), ivec4(0, 0, 0, 0) ^ (ivec4(1, 1, 0, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))))))))) - 0)), 1))) >> 0u)))) ^ 0u, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((((_GLF_struct_replacement_4._f3._f2.subgroup_local_id + 1))) ^ 0u), max(((((_GLF_struct_replacement_4._f3._f2.subgroup_local_id + 1))) ^ 0u), _GLF_IDENTITY(((((_GLF_struct_replacement_4._f3._f2.subgroup_local_id + 1))) ^ 0u), (((((_GLF_struct_replacement_4._f3._f2.subgroup_local_id + 1))) ^ 0u)) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u))))), max(~ _GLF_IDENTITY(((((_GLF_struct_replacement_4._f3._f2.subgroup_local_id + 1))) ^ 0u), max(((((_GLF_struct_replacement_4._f3._f2.subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))) ^ 0u), _GLF_IDENTITY(((((_GLF_struct_replacement_4._f3._f2.subgroup_local_id + 1))) ^ 0u), (((((_GLF_IDENTITY(_GLF_struct_replacement_4._f3._f2.subgroup_local_id, (_GLF_struct_replacement_4._f3._f2.subgroup_local_id) >> 0u) + 1))) ^ 0u)) / _GLF_IDENTITY(1u, (1u) << 0u)))), ~ _GLF_IDENTITY(((((_GLF_struct_replacement_4._f3._f2.subgroup_local_id + 1))) ^ 0u), max(((((_GLF_struct_replacement_4._f3._f2.subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))) ^ 0u), _GLF_IDENTITY(((((_GLF_struct_replacement_4._f3._f2.subgroup_local_id + 1))) ^ 0u), (((((_GLF_struct_replacement_4._f3._f2.subgroup_local_id + 1))) ^ 0u)) / 1u))))))))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, length(0.0), _GLF_IDENTITY(abs(1.0), mix(float(_GLF_FUZZED(9.6)), float(abs(1.0)), bool(true))), 0.0)), float(mat4x3(float(vec4(0.0, length(0.0), abs(1.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), log(1.0), 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-0.2) : 0.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - determinant(mat2(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0)))), injectionSwitch.x)) | 0u), max((_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, length(0.0), abs(1.0), 0.0)), float(mat4x3(float(vec4(0.0, length(0.0), abs(1.0), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(10.84) : 0.0)))))), log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)), min(1.0, 1.0))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))), injectionSwitch.x)) | 0u, ~ (~ (_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(0.0, length(0.0), abs(1.0), 0.0), (vec4(0.0, length(0.0), abs(1.0), 0.0)) * mat4(_GLF_ONE(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, tan(0.0)), (_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, tan(0.0)), mat3(1.0) * (mat3(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, tan(0.0))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), injectionSwitch.y)))), float(mat4x3(float(vec4(0.0, length(0.0), abs(1.0), 0.0)), log(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))), injectionSwitch.x)), 1u * (_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_IDENTITY(_GLF_FUZZED((- 1.0)), clamp(_GLF_IDENTITY(_GLF_FUZZED((- 1.0)), max(_GLF_FUZZED((- 1.0)), _GLF_FUZZED((- 1.0)))), _GLF_FUZZED((- 1.0)), _GLF_IDENTITY(_GLF_FUZZED((- 1.0)), min(_GLF_FUZZED((- 1.0)), _GLF_FUZZED((- 1.0))))))), bool(false))), length(0.0), abs(1.0), 0.0), (vec4(0.0, length(0.0), abs(1.0), 0.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))), (float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((- 1.0))), bool(false))), length(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(acos(-70.27))))), abs(1.0), 0.0), (vec4(0.0, length(0.0), abs(1.0), 0.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) * 1.0), float(mat4x3(float(vec4(0.0, length(0.0), _GLF_IDENTITY(abs(1.0), float(vec3(abs(1.0), 1.0, 1.0))), 0.0)), log(1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))), injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((- 1.0))), bool(false))), length(0.0), abs(1.0), 0.0), (vec4(0.0, length(0.0), abs(1.0), 0.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))), float(mat4x3(float(vec4(0.0, length(0.0), abs(1.0), 0.0)), log(1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8.7) : 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0)))), injectionSwitch.x)), max(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((- 1.0))), bool(false))), length(0.0), abs(1.0), 0.0), (vec4(0.0, length(0.0), abs(1.0), 0.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))), float(mat4x3(float(vec4(0.0, length(0.0), abs(1.0), 0.0)), log(1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((- 1.0))), bool(false))), length(0.0), abs(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), 0.0), (vec4(0.0, length(0.0), abs(1.0), 0.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))), float(mat4x3(float(_GLF_IDENTITY(vec4(0.0, length(0.0), abs(1.0), 0.0), max(vec4(0.0, length(0.0), abs(1.0), 0.0), _GLF_IDENTITY(vec4(0.0, length(0.0), abs(1.0), 0.0), min(vec4(0.0, length(0.0), abs(1.0), 0.0), vec4(0.0, length(0.0), abs(1.0), 0.0)))))), log(1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))), injectionSwitch.x))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))) | 0u)))), _GLF_IDENTITY((uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, length(0.0), abs(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(2.4)), bool(false))), 1.0, 1.0))), 0.0)), float(mat4x3(float(vec4(0.0, length(0.0), abs(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))))), 0.0)), log(_GLF_IDENTITY(1.0, (1.0) * 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), injectionSwitch.x)) | 0u), ((uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, length(0.0), abs(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), round(length(normalize(1.0))) * (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), 0.0)), float(mat4x3(float(vec4(0.0, length(0.0), abs(1.0), 0.0)), _GLF_IDENTITY(log(1.0), clamp(log(1.0), _GLF_IDENTITY(log(1.0), (_GLF_IDENTITY(log(1.0), min(log(1.0), log(1.0)))) / _GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(-1554.7890) : 1.0), ((false ? _GLF_FUZZED(-1554.7890) : 1.0)) + 0.0))), log(1.0))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))), injectionSwitch.x)) | 0u)) >> 0u))) | (next_virtual_gid))], uint(1), 4, 64, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ _GLF_IDENTITY(0, (0) / 1)), _GLF_IDENTITY(_GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), max(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) ^ 0))))), 0 ^ (int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), min(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (_GLF_IDENTITY(4, (4) ^ 0)) >> 0))), max(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) ^ 0))))))), (0 << _GLF_IDENTITY(int(6), int(6))) + (_GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((abs(27111) % 29759)) : (4))) ^ 0), max(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) ^ 0))))), (true ? int(int(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), max(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) ^ 0))))) : _GLF_FUZZED(67502))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) + 0)), (~ (_GLF_IDENTITY(1, (1) + 0))) << 0)))])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))), ! (! (bool(_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))))))))))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, clamp(4, 4, 4))))), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, max(4, 4)), 4, 4)))), (~ (~ (_GLF_IDENTITY(4, clamp(4, 4, 4))))) ^ 0))))), 64, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(68984))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false)))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false)))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, _GLF_IDENTITY(true, (true) && true))))), (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, false, true))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, _GLF_IDENTITY(true, (true) && true)))))) || false), (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (true) && true)))))), bool(bvec4(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), false, false, _GLF_IDENTITY(true, (true) && true))))), false, false, false)))) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4._f3._f2.subgroup_local_id, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4._f3._f2.subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_struct_replacement_4._f3._f2.subgroup_local_id, (_GLF_struct_replacement_4._f3._f2.subgroup_local_id) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(_GLF_struct_replacement_4._f3._f2.subgroup_local_id, ~ (~ (_GLF_struct_replacement_4._f3._f2.subgroup_local_id))), _GLF_IDENTITY(_GLF_struct_replacement_4._f3._f2.subgroup_local_id, (_GLF_struct_replacement_4._f3._f2.subgroup_local_id) | (_GLF_struct_replacement_4._f3._f2.subgroup_local_id)))), (_GLF_IDENTITY(_GLF_struct_replacement_4._f3._f2.subgroup_local_id, max(_GLF_struct_replacement_4._f3._f2.subgroup_local_id, _GLF_struct_replacement_4._f3._f2.subgroup_local_id))) | (_GLF_struct_replacement_4._f3._f2.subgroup_local_id)))) + 1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_4._f3._f2.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_4._f3._f2.subgroup_local_id, (_GLF_struct_replacement_4._f3._f2.subgroup_local_id) | (_GLF_struct_replacement_4._f3._f2.subgroup_local_id))) | (_GLF_IDENTITY(_GLF_struct_replacement_4._f3._f2.subgroup_local_id, 0u | (_GLF_struct_replacement_4._f3._f2.subgroup_local_id)))) + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_struct_replacement_4._f3._f2.subgroup_local_id + 1)), max(~ (~ (_GLF_struct_replacement_4._f3._f2.subgroup_local_id + 1)), ~ (~ (_GLF_struct_replacement_4._f3._f2.subgroup_local_id + 1)))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_4._f3._f2.subgroup_local_id, (_GLF_struct_replacement_4._f3._f2.subgroup_local_id) >> 0u) + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (0 | 0) ^ (1)), 1, 1, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), 0 ^ ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))))), clamp(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (0 | 0) ^ (1)), 1, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), (ivec4(_GLF_IDENTITY(1, (0 | 0) ^ (1)), 1, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))) >> ivec4(0, 0, 0, 0)), ivec4(_GLF_IDENTITY(1, (0 | 0) ^ (1)), 1, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), ivec4(_GLF_IDENTITY(1, (0 | 0) ^ (1)), 1, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))))))))), min(~ (~ (_GLF_struct_replacement_4._f3._f2.subgroup_local_id + 1)), ~ (~ (_GLF_struct_replacement_4._f3._f2.subgroup_local_id + 1))))) << 0u)) | 0u)) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, 0 ^ (4)));
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bool(! (true))), bool(bvec3(bool(bool(! (true))), true, false)))))) && (false))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))), (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))), (injectionSwitch.x > injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_DEAD(false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(-65516) : 4)), 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(912.171)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))).y))))) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   subgroupAll(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, false)), bvec2(bvec3(bvec2(bvec2(true, false)), true))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(true, false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), bvec3(bvec4(bvec3(bvec2(true, false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true, false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), bvec3(bvec4(bvec3(bvec2(true, false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), true))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true, false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) || false)))), bvec3(bvec4(bvec3(bvec2(true, _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), true))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true, false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), bvec3(bvec4(bvec3(bvec2(true, false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), true))))), true))))))), false)))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, false), false), bvec3(bvec4(bvec3(bvec2(true, false), false), true))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) * 1.0) < injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) * 1.0) < injectionSwitch.y)), (bool(bool(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) * 1.0) < injectionSwitch.y))) && true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) - vec2(0.0, 0.0)).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) - vec2(0.0, 0.0)).x < injectionSwitch.y) || false)))), _GLF_IDENTITY(false, (false) || false)))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), _GLF_IDENTITY(false, (false) || false)), bvec2(bvec3(bvec2(true, false), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), false, true))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bvec2(bvec3(bvec2(true, false), false))))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, ! _GLF_IDENTITY(_GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY((! (true)), bool(bvec2((! (_GLF_IDENTITY(true, false || (true)))), true)))))), ! (_GLF_IDENTITY(! ((! (true))), bool(bvec2(! ((! (true))), false)))))), false), false)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) || _GLF_IDENTITY(false, bool(bvec2(false, false))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), true)), bvec2(bvec3(bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, false), false), bvec3(bvec4(bvec3(bvec2(true, false), false), true)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, mix(float(_GLF_FUZZED(-83.96)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, float(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- 7.6))), float(1.0), bool(true))), 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))) / 1.0)))))), false, true)), false)))))), false, _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))))), true), bvec2(bvec3(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), (bool(bvec4(true, true, true, false))) && true)), false), bvec2(bvec3(bvec2(true, false), false))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), ! (! (bool(bvec4(true, false, true, true)))))), (injectionSwitch.x < injectionSwitch.y)))))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)))), bvec2(bvec3(bvec2(true, false), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).y))))))))))), false, true))))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec3(bvec2(true, _GLF_IDENTITY(false, ! (! (false)))), false))), false))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (true), ! (! (! (true)))))), bool(bvec2(! ((! (true))), false)))))), false), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (true), ! (! (! (true)))))), bool(bvec2(! ((! (true))), false)))))), false), false), true)))))), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, sin(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)))), 0.0))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true))))), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (true), ! (! (! (true)))))), bool(bvec2(! ((! (true))), false)))))), false), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (true), ! (! (! (true)))))), bool(bvec2(! ((! (true))), false)))))), false), false), true)))))), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, sin(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)))), 0.0))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(true, true, false)), ! (! (bool(bvec3(true, true, false))))), (_GLF_IDENTITY(bool(bvec3(true, true, false)), ! (! (bool(bvec3(true, true, false)))))) && true)), false), false)))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))))), (injectionSwitch.x > injectionSwitch.y))), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(true, false), false), bvec3(bvec4(bvec3(bvec2(true, false), false), false))), bvec3(bvec4(bvec3(bvec2(true, false), false), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), false)))))), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), false || (bool(true)))))) || _GLF_IDENTITY(false, (false) && true)))), true), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))), true, false)))), false, true)), true), bvec2(bvec3(bvec2(bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) && _GLF_IDENTITY(true, bool(bool(true))))), _GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, false), false)), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(true, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(true, false), false)), false))), false, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(true, false), false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(true, _GLF_IDENTITY(false, false || (false))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(true, _GLF_IDENTITY(false, false || (false))), false))))), false))), false, true)))))))), false, true)), true), false))), false, false))))))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))), false, true))))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}
