#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(false || (false), false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), log(1.0), cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), log(1.0), cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), (false ? _GLF_FUZZED(-0.3) : float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), log(1.0), cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), log(1.0), cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))))))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), log(1.0), cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), log(1.0), cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), (false ? _GLF_FUZZED(-0.3) : float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), log(1.0), cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), log(1.0), cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))))))), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), log(1.0), cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), log(1.0), cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), (false ? _GLF_FUZZED(-0.3) : float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), log(1.0), cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), log(1.0), cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))))))))))) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(vec4(522.004, -27.27, 99.35, 5.4).p)), 1.0 * (_GLF_IDENTITY(float(_GLF_FUZZED(vec4(522.004, -27.27, 99.35, 5.4).p)), float(vec2(float(_GLF_FUZZED(vec4(522.004, -27.27, 99.35, 5.4).p)), 0.0))))), bool(false))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(vec2(-75.26, -8.4)))).y)))) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))) || false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) + 0.0), _GLF_FUZZED(204.513)), vec2(_GLF_FUZZED(float(80735)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])))).y), true && ((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])))).y))))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(float(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(_GLF_IDENTITY(mat4(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, exp(0.0), 1.0, sqrt(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, abs(0.0))), (float(mat3x4(injectionSwitch.x, 0.0, 0.0, exp(0.0), 1.0, sqrt(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, abs(0.0)))) + 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), min(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 1.0)), (dot(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), min(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, sin(0.0) + (1.0))), vec4(0.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 1.0))) + 0.0)), 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0)), round(length(normalize(1.0))) * (float(mat4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), min(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 1.0)), (dot(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), min(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, sin(0.0) + (1.0))), vec4(0.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 1.0))) + 0.0)), 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0))))) : _GLF_FUZZED(-94.63))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (true ? mat4(min(injectionSwitch.x, injectionSwitch.x), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec2(-7.5, 6.5), vec2(-8.2, 1.4))))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat4(372.275, 7.0, 635.242, -7.4, 78.68, -1.3, 102.822, 22.29, -2.7, 542.506, 4.6, 652.831, 3519.0058, 529.976, 4.7, 5.6)))))))), _GLF_IDENTITY(clamp(float(float(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(_GLF_IDENTITY(mat4(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0), (true ? mat4(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat4(372.275, 7.0, 635.242, -7.4, 78.68, -1.3, 102.822, 22.29, -2.7, 542.506, 4.6, 652.831, 3519.0058, 529.976, _GLF_IDENTITY(4.7, clamp(4.7, 4.7, 4.7)), 5.6)))))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_IDENTITY(mat4(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (true ? mat4(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat4(372.275, 7.0, 635.242, -7.4, 78.68, -1.3, 102.822, 22.29, -2.7, 542.506, 4.6, 652.831, 3519.0058, 529.976, 4.7, 5.6)))))))), float(float(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(_GLF_IDENTITY(mat4(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0), (true ? mat4(min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat4(372.275, 7.0, 635.242, -7.4, 78.68, -1.3, 102.822, 22.29, -2.7, 542.506, 4.6, 652.831, 3519.0058, 529.976, 4.7, 5.6))))))))), clamp(clamp(float(float(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(_GLF_IDENTITY(mat4(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0), (true ? mat4(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat4(372.275, 7.0, 635.242, -7.4, 78.68, -1.3, 102.822, 22.29, -2.7, 542.506, 4.6, 652.831, 3519.0058, 529.976, _GLF_IDENTITY(4.7, clamp(4.7, 4.7, 4.7)), 5.6)))))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_IDENTITY(mat4(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (true ? mat4(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat4(372.275, 7.0, 635.242, -7.4, 78.68, -1.3, 102.822, 22.29, -2.7, 542.506, 4.6, 652.831, 3519.0058, 529.976, 4.7, 5.6)))))))), float(float(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(_GLF_IDENTITY(mat4(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0), (true ? mat4(min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat4(372.275, 7.0, 635.242, -7.4, 78.68, -1.3, 102.822, 22.29, -2.7, 542.506, 4.6, 652.831, 3519.0058, 529.976, 4.7, 5.6))))))))), clamp(float(float(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(_GLF_IDENTITY(mat4(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0), (true ? mat4(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat4(372.275, 7.0, 635.242, -7.4, 78.68, -1.3, 102.822, 22.29, -2.7, 542.506, 4.6, 652.831, 3519.0058, 529.976, _GLF_IDENTITY(4.7, clamp(4.7, 4.7, 4.7)), 5.6)))))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_IDENTITY(mat4(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (true ? mat4(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat4(372.275, 7.0, 635.242, -7.4, 78.68, -1.3, 102.822, 22.29, -2.7, 542.506, 4.6, 652.831, 3519.0058, 529.976, 4.7, 5.6)))))))), float(float(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(_GLF_IDENTITY(mat4(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0), (true ? mat4(min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat4(372.275, 7.0, 635.242, -7.4, 78.68, -1.3, 102.822, 22.29, -2.7, 542.506, 4.6, 652.831, 3519.0058, 529.976, 4.7, 5.6))))))))), clamp(float(float(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(_GLF_IDENTITY(mat4(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0), (true ? mat4(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat4(372.275, 7.0, 635.242, -7.4, 78.68, -1.3, 102.822, 22.29, -2.7, 542.506, 4.6, 652.831, 3519.0058, 529.976, _GLF_IDENTITY(4.7, clamp(4.7, 4.7, 4.7)), 5.6)))))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_IDENTITY(mat4(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (true ? mat4(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat4(372.275, 7.0, 635.242, -7.4, 78.68, -1.3, 102.822, 22.29, -2.7, 542.506, 4.6, 652.831, 3519.0058, 529.976, 4.7, 5.6)))))))), float(float(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(_GLF_IDENTITY(mat4(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0), (true ? mat4(min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat4(372.275, 7.0, 635.242, -7.4, 78.68, -1.3, 102.822, 22.29, -2.7, 542.506, 4.6, 652.831, 3519.0058, 529.976, 4.7, 5.6)))))))))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(6.0, 5.3).t)), vec2(_GLF_FUZZED(-8.2), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, true && (true)) && ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))), bool(bvec4(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))), (! (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))) && true), true, false, true))))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), (! (! (_GLF_IDENTITY(false, (false) && true)))) && true)))), (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false) && true, ((false) && true) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false) && true, ((false) && true) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true) && true, ((false) && true) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (true) && true)), bool(bvec3(_GLF_IDENTITY((false) && true, ((false) && true) && true), false, true)))))), false, false))), false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false))) && true))), (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)), true && (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, false || (false)), false, true))), true)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            return;
           barrier();
           if(_GLF_DEAD(false))
            return;
          }
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED((-8.4 * 8297.8032))))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(78.60), _GLF_FUZZED(-7699.0326)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))), vec2(injectionSwitch[0], injectionSwitch[1])).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.2)), bool(false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.1))) > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 1.0, 0.0))) > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y)) ? _GLF_FUZZED(30.95) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6.4) : injectionSwitch.x)))) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y)) ? _GLF_FUZZED(30.95) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6.4) : injectionSwitch.x)))) > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y)) ? _GLF_FUZZED(30.95) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6.4) : injectionSwitch.x)))) > injectionSwitch.y), false, false), true))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y)) ? _GLF_FUZZED(30.95) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6.4) : injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(30.95) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6.4) : injectionSwitch.x)))) > injectionSwitch.y)))))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))), ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 1.0, abs(1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), tan(length(vec3(0.0, 0.0, 0.0))), 1.0, 1.0, 0.0)))) / _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), false))))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), ! (! (false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)), false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false, false))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), true)), false))))))))))) || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_id * subgroup_size, 0u)), min(_GLF_IDENTITY(uint(uvec2(subgroup_id * subgroup_size, 0u)), 0u + (uint(uvec2(subgroup_id * subgroup_size, 0u)))), _GLF_IDENTITY(uint(uvec2(subgroup_id * subgroup_size, 0u)), 0u | (uint(uvec2(subgroup_id * subgroup_size, 0u))))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), uint(uvec2((subgroup_size), 1u))), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY((subgroup_size), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uvec4((subgroup_size), 0u, 0u, ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), min(uint(uvec4((subgroup_size), 0u, 0u, ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), uint(uvec4((subgroup_size), 0u, 0u, ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))))), 1u), (uvec2((subgroup_size), 1u)) << _GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(uvec2(0u, 0u), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(0u, 0u), (true ? uvec2(0u, 0u) : _GLF_FUZZED(uvec2(169067u, 130303u))))))) / uvec2(1u, 1u))))))) << 0u), subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, (1u) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u), min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 0u))))))))))) : _GLF_FUZZED(num_workgroup), _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u), (true ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u) : _GLF_FUZZED((subgroup_id)))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u))), min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u))) : _GLF_FUZZED(num_workgroup), max(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u, 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u, 0u | ((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u))))))), min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u))) : _GLF_FUZZED(num_workgroup), clamp(true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u, 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u, 0u | ((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u))), uint(_GLF_IDENTITY(uvec3((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u, 0u | ((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u))), 1u, 1u), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u, 0u | ((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u))), 1u, 1u), (true ? uvec3((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u, 0u | ((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u))), 1u, 1u) : _GLF_FUZZED(uvec3(91111u, 166395u, 57935u)))))))))))), min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u))) : _GLF_FUZZED(num_workgroup), true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u, 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (~ (subgroup_size)) : _GLF_FUZZED(num_workgroup)))), 0u)))) * 1u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u, 0u | ((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u))))))), min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u))) : _GLF_FUZZED(num_workgroup), true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u, 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u, 0u | ((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u)), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u, 0u | ((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u, 0u | ((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u))))))))), min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u))) : _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) - 0u)))), true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u), min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u, uint(uvec4((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))))) : _GLF_FUZZED(num_workgroup)))), 0u | ((_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u), (true ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u) : _GLF_FUZZED((subgroup_id)))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u))), min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u))) : _GLF_FUZZED(num_workgroup), max(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u, 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u, 0u | ((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u))))))), min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u))) : _GLF_FUZZED(num_workgroup), clamp(true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u, 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u, 0u | ((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u))), uint(_GLF_IDENTITY(uvec3((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u, 0u | ((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u))), 1u, 1u), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u, 0u | ((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u))), 1u, 1u), (true ? uvec3((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u, 0u | ((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u))), 1u, 1u) : _GLF_FUZZED(uvec3(91111u, 166395u, 57935u)))))))))))), min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u))) : _GLF_FUZZED(num_workgroup), true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u, 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (~ (subgroup_size)) : _GLF_FUZZED(num_workgroup)))), 0u)))) * 1u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u, 0u | ((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u))))))), min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u))) : _GLF_FUZZED(num_workgroup), true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u, 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u, 0u | ((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u)), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u, 0u | ((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u, 0u | ((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u))))))))), min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u))) : _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) - 0u)))), true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u), min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u, uint(uvec4((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) * 1u, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))))) : _GLF_FUZZED(num_workgroup)))))) + 0u))))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, int(int(1)))), 4, 64, 4);
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, min(4, 4)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - _GLF_IDENTITY(0, min(0, 0))), (_GLF_IDENTITY(4, (4) - 0)) | 0))), 4)))), (_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, (4) - 0), 4), 0 | (_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, (4) - 0), 4), (clamp(4, _GLF_IDENTITY(4, (4) - 0), 4)) | (clamp(4, _GLF_IDENTITY(4, (4) - 0), 4))))))))) << 0)) / ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            return;
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         return;
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED((-63374 & -87671)))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, 0u | (read)), 4, 64, _GLF_IDENTITY(4, (4) | (4)));
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), false || (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))).y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0)))), transpose(transpose(transpose(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0))))))))))) > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((6.6 - 9.8))), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-405.186)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), false, false))))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))
          return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ 13.79)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(316.804)), bvec2(true, false))).x > injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, false, true))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))), false, false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, cos(0.0), 0.0, 1.0, 0.0))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, abs(0.0), 1.0, abs(1.0), 1.0, 1.0))), injectionSwitch.y)))), false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false), bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false)))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))))))))), true, true))))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6.6, -4.8)))).x < injectionSwitch.y)), false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).y, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y)) || false))))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), (! (! (_GLF_DEAD(false)))) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), true))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) && true))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(54.26, min(54.26, 54.26))) : injectionSwitch.y))))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false)))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(-675.525) : injectionSwitch[0])), injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), true)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), true)))), true, false, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), true)))), true, false, false)))))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false)), ! (! (false)))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
}
