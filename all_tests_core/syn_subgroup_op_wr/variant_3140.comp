#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_69 {
 float _f0;
} ;

struct _GLF_struct_68 {
 mat2 _f0;
 mat4x2 _f1;
 vec4 _f2;
 uvec3 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_67 {
 ivec2 _f0;
 mat2 _f1;
 uvec4 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_66 {
 mat2x4 _f0;
} ;

struct _GLF_struct_70 {
 _GLF_struct_66 _f0;
 float _f1;
 _GLF_struct_67 _f2;
 _GLF_struct_68 _f3;
 _GLF_struct_69 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_65 {
 ivec3 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_63 {
 mat2x4 _f0;
 bool _f1;
 vec4 _f2;
 ivec4 _f3;
 mat4x3 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_62 {
 mat2 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_61 {
 vec3 _f0;
 int _f1;
 vec4 _f2;
 vec3 _f3;
 ivec4 _f4;
 vec4 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_64 {
 uint next_virtual_gid;
 _GLF_struct_61 _f0;
 _GLF_struct_62 _f1;
 mat3 _f2;
 vec2 _f3;
 _GLF_struct_63 _f4;
 int _f5;
 int _f6;
} ;

struct _GLF_struct_59 {
 mat4x2 _f0;
 uint _f1;
} ;

struct _GLF_struct_60 {
 _GLF_struct_59 _f0;
} ;

struct _GLF_struct_71 {
 _GLF_struct_60 _f0;
 bvec3 _f1;
 uint _f2;
 _GLF_struct_64 _f3;
 _GLF_struct_65 _f4;
 _GLF_struct_70 _f5;
} ;

struct _GLF_struct_56 {
 mat2 _f0;
 int _f1;
 float _f2;
 float _f3;
} ;

struct _GLF_struct_55 {
 uvec3 _f0;
 mat4x3 _f1;
 vec3 _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_54 {
 mat4x3 _f0;
 uvec3 _f1;
 float _f2;
 uvec4 _f3;
 mat4x2 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_53 {
 float _f0;
 int _f1;
 mat4 _f2;
 vec2 _f3;
 bvec2 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_52 {
 vec2 _f0;
 ivec4 _f1;
 mat3 _f2;
 vec3 _f3;
 mat4x3 _f4;
 mat2 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_51 {
 bvec4 _f0;
 bvec2 _f1;
 uint _f2;
} ;

struct _GLF_struct_57 {
 _GLF_struct_51 _f0;
 _GLF_struct_52 _f1;
 _GLF_struct_53 _f2;
 _GLF_struct_54 _f3;
 _GLF_struct_55 _f4;
 mat2x3 _f5;
 _GLF_struct_56 _f6;
} ;

struct _GLF_struct_49 {
 mat4 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_48 {
 int _f0;
 mat2x3 _f1;
 vec4 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_47 {
 mat3 _f0;
 bvec2 _f1;
 ivec2 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_46 {
 int _f0;
 uvec3 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_45 {
 int _f0;
 mat3x2 _f1;
 mat4x2 _f2;
 mat2 _f3;
 bvec4 _f4;
 mat2 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_50 {
 _GLF_struct_45 _f0;
 ivec4 _f1;
 _GLF_struct_46 _f2;
 _GLF_struct_47 _f3;
 _GLF_struct_48 _f4;
 ivec3 _f5;
 _GLF_struct_49 _f6;
} ;

struct _GLF_struct_43 {
 bvec4 _f0;
} ;

struct _GLF_struct_42 {
 int _f0;
 mat4 _f1;
 uvec4 _f2;
 mat3 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_41 {
 ivec4 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_40 {
 uvec3 _f0;
 float _f1;
 vec2 _f2;
} ;

struct _GLF_struct_44 {
 _GLF_struct_40 _f0;
 vec3 _f1;
 ivec4 _f2;
 _GLF_struct_41 _f3;
 _GLF_struct_42 _f4;
 _GLF_struct_43 _f5;
} ;

struct _GLF_struct_58 {
 _GLF_struct_44 _f0;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base;
 uvec3 _f1;
 _GLF_struct_50 _f2;
 _GLF_struct_57 _f3;
 float _f4;
} ;

struct _GLF_struct_37 {
 vec3 _f0;
 mat3 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_36 {
 uvec2 _f0;
 mat3x4 _f1;
 mat4 _f2;
 bvec2 _f3;
 mat4x3 _f4;
 uint _f5;
 mat3 _f6;
} ;

struct _GLF_struct_38 {
 _GLF_struct_36 _f0;
 mat4x2 _f1;
 _GLF_struct_37 _f2;
} ;

struct _GLF_struct_34 {
 vec3 _f0;
 vec4 _f1;
 float _f2;
} ;

struct _GLF_struct_33 {
 uint _f0;
 mat2x4 _f1;
 ivec3 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_32 {
 int _f0;
 mat4x3 _f1;
 float _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_31 {
 uint _f0;
 mat4x3 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_30 {
 mat2x3 _f0;
 ivec4 _f1;
 uvec3 _f2;
 uint _f3;
 mat2 _f4;
 mat3x2 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_35 {
 _GLF_struct_30 _f0;
 _GLF_struct_31 _f1;
 _GLF_struct_32 _f2;
 mat4 _f3;
 _GLF_struct_33 _f4;
 _GLF_struct_34 _f5;
} ;

struct _GLF_struct_28 {
 mat2x3 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_27 {
 mat4x2 _f0;
 int _injected_loop_counter;
 ivec3 _f1;
 ivec2 _f2;
 mat3 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_29 {
 uint _f0;
 _GLF_struct_27 _f1;
 mat4x3 _f2;
 _GLF_struct_28 _f3;
} ;

struct _GLF_struct_25 {
 bvec4 _f0;
} ;

struct _GLF_struct_26 {
 uint _f0;
 _GLF_struct_25 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_39 {
 _GLF_struct_26 _f0;
 _GLF_struct_29 _f1;
 _GLF_struct_35 _f2;
 mat3x2 _f3;
 vec3 _f4;
 _GLF_struct_38 _f5;
} ;

struct _GLF_struct_22 {
 int _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_21 {
 int _f0;
 mat2x4 _f1;
 mat4x2 _f2;
 bvec3 _f3;
 uint subgroup_size;
 mat4x3 _f4;
} ;

struct _GLF_struct_23 {
 _GLF_struct_21 _f0;
 _GLF_struct_22 _f1;
 ivec4 _f2;
 uint _f3;
} ;

struct _GLF_struct_19 {
 float _f0;
 bvec2 _f1;
 float _f2;
 float _f3;
 mat4 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_18 {
 vec4 _f0;
 mat2 _f1;
 uvec2 _f2;
 uint _f3;
} ;

struct _GLF_struct_17 {
 mat4x2 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_20 {
 uvec2 _f0;
 _GLF_struct_17 _f1;
 _GLF_struct_18 _f2;
 _GLF_struct_19 _f3;
} ;

struct _GLF_struct_24 {
 _GLF_struct_20 _f0;
 _GLF_struct_23 _f1;
 vec4 _f2;
 ivec3 _f3;
 uint _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_16 {
 bool _f0;
 uvec3 GLF_merged3_0_1_4_1_1_14_2_1_14readworkgroup_baseworkgroup_size;
 uvec2 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_14 {
 mat4x2 _f0;
} ;

struct _GLF_struct_12 {
 mat3x2 _f0;
 ivec2 _f1;
 mat2x4 _f2;
 ivec2 _f3;
 uint _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_11 {
 float _f0;
 ivec2 _f1;
 uvec3 _f2;
 mat4 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_10 {
 mat4x2 _f0;
 uvec4 _f1;
 float _f2;
 mat2 _f3;
 mat4x3 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_9 {
 uvec4 _f0;
 uint _f1;
 vec3 _f2;
} ;

struct _GLF_struct_13 {
 uvec3 _f0;
 _GLF_struct_9 _f1;
 _GLF_struct_10 _f2;
 _GLF_struct_11 _f3;
 _GLF_struct_12 _f4;
} ;

struct _GLF_struct_15 {
 _GLF_struct_13 _f0;
 _GLF_struct_14 _f1;
 uint subgroup_base;
 bvec3 _f2;
} ;

struct _GLF_struct_6 {
 ivec2 _f0;
 mat3x4 _f1;
 mat4x3 _f2;
 ivec4 _f3;
 mat4x3 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_5 {
 vec4 _f0;
} ;

struct _GLF_struct_7 {
 ivec3 _f0;
 int _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_6 _f3;
} ;

struct _GLF_struct_3 {
 bvec4 _f0;
 vec3 _f1;
 mat2 _f2;
 ivec2 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_2 {
 bvec3 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_4 {
 _GLF_struct_2 _f0;
 ivec3 _f1;
 _GLF_struct_3 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_0 {
 int _f0;
 mat4 _f1;
 mat4 _f2;
 ivec2 _f3;
 float _f4;
 vec2 _f5;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_8 {
 _GLF_struct_1 _f0;
 uint subgroup_local_id;
 ivec4 _f1;
 mat3x4 _f2;
 _GLF_struct_4 _f3;
 _GLF_struct_7 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_16 _GLF_struct_replacement_16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_58 _GLF_struct_replacement_58;
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_24 _GLF_struct_replacement_24 = _GLF_struct_24(_GLF_struct_20(uvec2(1u), _GLF_struct_17(mat4x2(1.0), ivec3(1)), _GLF_struct_18(vec4(1.0), mat2(1.0), uvec2(1u), 1u), _GLF_struct_19(_GLF_IDENTITY(1.0, max(1.0, 1.0)), bvec2(true), 1.0, 1.0, mat4(1.0), _GLF_IDENTITY(mat4(1.0), (_GLF_IDENTITY(mat4(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(mat4(-2174.5378, -12.31, 80.89, -850.660, -5.3, 17.11, -5.4, -5.8, -909.413, -3.3, -89.68, -5508.0079, -5.0, 3932.3492, -67.80, -3.4)), (_GLF_FUZZED(mat4(-2174.5378, -12.31, 80.89, -850.660, -5.3, 17.11, -5.4, -5.8, -909.413, -3.3, -89.68, -5508.0079, -5.0, 3932.3492, -67.80, -3.4))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), transpose(transpose(_GLF_IDENTITY(_GLF_FUZZED(mat4(-2174.5378, -12.31, 80.89, -850.660, -5.3, 17.11, -5.4, -5.8, -909.413, -3.3, -89.68, -5508.0079, -5.0, 3932.3492, -67.80, -3.4)), (_GLF_FUZZED(mat4(-2174.5378, -12.31, 80.89, -850.660, -5.3, 17.11, -5.4, -5.8, -909.413, -3.3, -89.68, -5508.0079, -5.0, 3932.3492, -67.80, -3.4))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) : mat4(1.0)))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0), mat4x2(mat4x2(mat4x2(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), clamp(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0), mat4x2(mat4x2(mat4x2(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0), mat4x2(mat4x2(mat4x2(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0), mat4x2(mat4x2(mat4x2(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), float(mat2(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0), mat4x2(mat4x2(mat4x2(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 0.0, 0.0, 1.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_struct_23(_GLF_struct_21(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) >> (0 << _GLF_IDENTITY(int(5), int(5)))), max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) >> (0 << _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) >> (0 << _GLF_IDENTITY(int(5), int(5)))))), mat2x4(1.0), mat4x2(1.0), bvec3(true), gl_SubgroupSize, mat4x3(1.0)), _GLF_struct_22(1, uvec3(1u)), ivec4(1), 1u), vec4(1.0), ivec3(1), 1u, uvec3(1u));
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_1(_GLF_struct_0(1, mat4(1.0), mat4(1.0), ivec2(1), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), vec2(1.0))), gl_SubgroupInvocationID, ivec4(1), mat3x4(1.0), _GLF_struct_4(_GLF_struct_2(bvec3(true), mat2(1.0)), ivec3(_GLF_IDENTITY(1, (1) | 0)), _GLF_struct_3(bvec4(true), vec3(1.0), mat2(1.0), ivec2(1), _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.5)), float(1.0), bool(true)))), _GLF_IDENTITY(max(vec3(1.0), vec3(1.0)), mix(vec3((_GLF_IDENTITY(max(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(5626.6444) : 1.0))), vec3(1.0)), vec3(_GLF_IDENTITY(mat2(max(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(5626.6444) : 1.0))), vec3(1.0)), 0.0), (mat2(max(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(5626.6444) : 1.0))), vec3(1.0)), 0.0)) / mat2(1.0, 1.0, 1.0, 1.0)))))[0], _GLF_FUZZED(28.55), _GLF_FUZZED(vec3(4809.5259, 7.3, 1714.9975).s)), vec3(_GLF_FUZZED(vec4(603.523, _GLF_IDENTITY(-6865.2030, mix(float(_GLF_FUZZED(-5464.4677)), float(_GLF_IDENTITY(-6865.2030, mix(float(-6865.2030), float(_GLF_FUZZED(839.368)), bool(false)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1995.5902, -8276.7086).s), (max(vec3(1.0), vec3(1.0)))[1], (max(vec3(1.0), vec3(1.0)))[2]), bvec3(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, true && (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-92.02))) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))))))), mat4x2(1.0)), _GLF_struct_7(ivec3(1), 1, _GLF_struct_5(vec4(1.0)), _GLF_struct_6(ivec2(1), mat3x4(1.0), mat4x3(1.0), _GLF_IDENTITY(ivec4(1), (ivec4(1)) >> ivec4(0, 0, 0, 0)), mat4x3(1.0), mat2x4(1.0))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     do
      {
       _GLF_struct_replacement_58.GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.y = num_workgroup;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0)))), ((injectionSwitch) * mat2(1.0)) * mat2(1.0)), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y))))
  barrier();
 do
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | (int(4))), min(_GLF_IDENTITY(int(4), (int(4)) | (int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | (int(4))), max(_GLF_IDENTITY(int(4), (int(4)) | (int(4))), _GLF_IDENTITY(int(4), (int(4)) | (int(4))))))))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) >> 0))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)) != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
          barrier();
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   _GLF_struct_replacement_16.GLF_merged3_0_1_4_1_1_14_2_1_14readworkgroup_baseworkgroup_size.z = workgroup_size;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), false || (! (! (! (_GLF_DEAD(false)))))))))) || false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_struct_replacement_16.GLF_merged3_0_1_4_1_1_14_2_1_14readworkgroup_baseworkgroup_size.z * workgroup_id, (_GLF_struct_replacement_16.GLF_merged3_0_1_4_1_1_14_2_1_14readworkgroup_baseworkgroup_size.z * workgroup_id) | (_GLF_struct_replacement_16.GLF_merged3_0_1_4_1_1_14_2_1_14readworkgroup_baseworkgroup_size.z * workgroup_id));
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 _GLF_struct_replacement_16.GLF_merged3_0_1_4_1_1_14_2_1_14readworkgroup_baseworkgroup_size.y = workgroup_base;
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_struct_13(uvec3(1u), _GLF_struct_9(uvec4(1u), 1u, vec3(1.0)), _GLF_struct_10(mat4x2(1.0), _GLF_IDENTITY(uvec4(1u), ~ (_GLF_IDENTITY(~ (uvec4(1u)), ~ (_GLF_IDENTITY(~ (~ (uvec4(1u))), (~ (~ (uvec4(1u)))) ^ uvec4(0u, 0u, 0u, 0u)))))), 1.0, mat2(1.0), mat4x3(1.0), ivec3(1)), _GLF_struct_11(1.0, ivec2(1), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(0u | (1u), (true ? _GLF_IDENTITY(0u | (1u), (0u | (1u)) >> 0u) : _GLF_FUZZED(workgroup_id))), clamp(0u | (1u), 0u | (1u), _GLF_IDENTITY(0u | (1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(54960u) : _GLF_IDENTITY(0u | (1u), (0u | (1u)) << 0u)))))), ~ (~ (_GLF_IDENTITY(1u, 0u | _GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))))))), mat4(1.0), uvec2(1u)), _GLF_struct_12(mat3x2(1.0), ivec2(1), mat2x4(1.0), ivec2(1), 1u, uvec3(1u))), _GLF_struct_14(mat4x2(1.0)), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, 0u ^ (_GLF_struct_replacement_24._f1._f0.subgroup_size)), _GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_struct_replacement_24._f1._f0.subgroup_size), (clamp(_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, 0u ^ (_GLF_struct_replacement_24._f1._f0.subgroup_size)), _GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_struct_replacement_24._f1._f0.subgroup_size)) ^ (1u ^ 1u)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-4.4)), float(0.0), bool(true)), min(mix(float(_GLF_FUZZED(-4.4)), float(0.0), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-4.4)), float(0.0), bool(true)), max(mix(float(_GLF_FUZZED(-4.4)), float(0.0), bool(true)), mix(float(_GLF_FUZZED(-4.4)), float(0.0), bool(true))))))), 0.0)), injectionSwitch.x)) ^ (clamp(_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, 0u ^ (_GLF_struct_replacement_24._f1._f0.subgroup_size)), _GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, max(_GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_struct_replacement_24._f1._f0.subgroup_size))) ^ 0u)) | (_GLF_struct_replacement_24._f1._f0.subgroup_size)))))), 0u, 0u, (1u & _GLF_IDENTITY(_GLF_IDENTITY(1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (1u)), (_GLF_IDENTITY(1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (1u))) - 0u))))), 0u | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, 0u ^ (_GLF_struct_replacement_24._f1._f0.subgroup_size)), _GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_struct_replacement_24._f1._f0.subgroup_size), (clamp(_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, 0u ^ (_GLF_struct_replacement_24._f1._f0.subgroup_size)), _GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_struct_replacement_24._f1._f0.subgroup_size)) ^ (1u ^ 1u)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.4)), float(0.0), bool(true))), 0.0)), injectionSwitch.x)) ^ (clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, (_GLF_struct_replacement_24._f1._f0.subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u ^ (_GLF_struct_replacement_24._f1._f0.subgroup_size)), _GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, max(_GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_struct_replacement_24._f1._f0.subgroup_size))) ^ 0u)) | (_GLF_struct_replacement_24._f1._f0.subgroup_size)))))), 0u, 0u, (1u & _GLF_IDENTITY(_GLF_IDENTITY(1u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) | 0u), uint(5u))) | (1u)), (_GLF_IDENTITY(1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (1u))) - 0u))))), 0u | _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, 0u ^ (_GLF_struct_replacement_24._f1._f0.subgroup_size)), _GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_struct_replacement_24._f1._f0.subgroup_size), (clamp(_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, 0u ^ (_GLF_struct_replacement_24._f1._f0.subgroup_size)), _GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_struct_replacement_24._f1._f0.subgroup_size)) ^ (1u ^ 1u)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.4)), float(0.0), bool(true))), 0.0)), injectionSwitch.x)) ^ (clamp(_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, 0u ^ _GLF_IDENTITY((_GLF_struct_replacement_24._f1._f0.subgroup_size), (_GLF_IDENTITY((_GLF_struct_replacement_24._f1._f0.subgroup_size), max((_GLF_struct_replacement_24._f1._f0.subgroup_size), (_GLF_struct_replacement_24._f1._f0.subgroup_size)))) / 1u)), _GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, max(_GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_struct_replacement_24._f1._f0.subgroup_size))) ^ 0u)) | (_GLF_struct_replacement_24._f1._f0.subgroup_size)))))), 0u, 0u, (1u & _GLF_IDENTITY(_GLF_IDENTITY(1u, (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (uint(5u))))) | (1u)), (_GLF_IDENTITY(1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (1u))) - 0u))), uvec4(0u, 0u, 0u, 0u) + (uvec4(_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, 0u ^ (_GLF_struct_replacement_24._f1._f0.subgroup_size)), _GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_struct_replacement_24._f1._f0.subgroup_size), (clamp(_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, 0u ^ (_GLF_struct_replacement_24._f1._f0.subgroup_size)), _GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_struct_replacement_24._f1._f0.subgroup_size)) ^ (1u ^ 1u)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.4)), float(0.0), bool(true))), 0.0)), injectionSwitch.x)) ^ (clamp(_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, 0u ^ _GLF_IDENTITY((_GLF_struct_replacement_24._f1._f0.subgroup_size), (_GLF_IDENTITY((_GLF_struct_replacement_24._f1._f0.subgroup_size), max((_GLF_struct_replacement_24._f1._f0.subgroup_size), (_GLF_struct_replacement_24._f1._f0.subgroup_size)))) / 1u)), _GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, max(_GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_struct_replacement_24._f1._f0.subgroup_size))) ^ 0u)) | (_GLF_struct_replacement_24._f1._f0.subgroup_size)))))), 0u, 0u, (1u & _GLF_IDENTITY(_GLF_IDENTITY(1u, (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (uint(5u))))) | (1u)), (_GLF_IDENTITY(1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (1u))) - 0u)))))))), ((subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, 0u ^ (_GLF_struct_replacement_24._f1._f0.subgroup_size)), _GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_struct_replacement_24._f1._f0.subgroup_size), (clamp(_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, 0u ^ (_GLF_struct_replacement_24._f1._f0.subgroup_size)), _GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_struct_replacement_24._f1._f0.subgroup_size)) ^ (1u ^ 1u)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.4)), float(0.0), bool(true))), 0.0)), injectionSwitch.x)) ^ (clamp(_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, 0u ^ _GLF_IDENTITY((_GLF_struct_replacement_24._f1._f0.subgroup_size), (_GLF_IDENTITY((_GLF_struct_replacement_24._f1._f0.subgroup_size), max((_GLF_struct_replacement_24._f1._f0.subgroup_size), (_GLF_struct_replacement_24._f1._f0.subgroup_size)))) / 1u)), _GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, max(_GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_struct_replacement_24._f1._f0.subgroup_size))) ^ 0u)) | (_GLF_struct_replacement_24._f1._f0.subgroup_size)))))), 0u, 0u, (1u & _GLF_IDENTITY(_GLF_IDENTITY(1u, (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (uint(5u))))) | (1u)), (_GLF_IDENTITY(1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (1u))) - 0u))), uvec4(0u, 0u, 0u, 0u) + (uvec4(_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, 0u ^ (_GLF_struct_replacement_24._f1._f0.subgroup_size)), _GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_struct_replacement_24._f1._f0.subgroup_size), (clamp(_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, 0u ^ (_GLF_struct_replacement_24._f1._f0.subgroup_size)), _GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_struct_replacement_24._f1._f0.subgroup_size)) ^ (1u ^ 1u)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.4)), float(0.0), bool(true))), 0.0)), injectionSwitch.x)) ^ (clamp(_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, 0u ^ _GLF_IDENTITY((_GLF_struct_replacement_24._f1._f0.subgroup_size), (_GLF_IDENTITY((_GLF_struct_replacement_24._f1._f0.subgroup_size), max((_GLF_struct_replacement_24._f1._f0.subgroup_size), (_GLF_struct_replacement_24._f1._f0.subgroup_size)))) / 1u)), _GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, max(_GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_struct_replacement_24._f1._f0.subgroup_size))) ^ 0u)) | (_GLF_struct_replacement_24._f1._f0.subgroup_size)))))), 0u, 0u, (1u & _GLF_IDENTITY(_GLF_IDENTITY(1u, (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (uint(5u))))) | (1u)), (_GLF_IDENTITY(1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (1u))) - 0u))))))))) | ((subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, 0u ^ (_GLF_struct_replacement_24._f1._f0.subgroup_size)), _GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_struct_replacement_24._f1._f0.subgroup_size), (clamp(_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, 0u ^ (_GLF_struct_replacement_24._f1._f0.subgroup_size)), _GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_struct_replacement_24._f1._f0.subgroup_size)) ^ (1u ^ 1u)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.4)), float(0.0), bool(true))), 0.0)), injectionSwitch.x)) ^ (clamp(_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, 0u ^ _GLF_IDENTITY((_GLF_struct_replacement_24._f1._f0.subgroup_size), (_GLF_IDENTITY((_GLF_struct_replacement_24._f1._f0.subgroup_size), max((_GLF_struct_replacement_24._f1._f0.subgroup_size), (_GLF_struct_replacement_24._f1._f0.subgroup_size)))) / 1u)), _GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, max(_GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_struct_replacement_24._f1._f0.subgroup_size))) ^ 0u)) | (_GLF_struct_replacement_24._f1._f0.subgroup_size)))))), 0u, 0u, (1u & _GLF_IDENTITY(_GLF_IDENTITY(1u, (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (uint(5u))))) | (1u)), (_GLF_IDENTITY(1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (1u))) - 0u))), uvec4(0u, 0u, 0u, 0u) + (uvec4(_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, 0u ^ (_GLF_struct_replacement_24._f1._f0.subgroup_size)), _GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_struct_replacement_24._f1._f0.subgroup_size), (clamp(_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, 0u ^ (_GLF_struct_replacement_24._f1._f0.subgroup_size)), _GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_struct_replacement_24._f1._f0.subgroup_size)) ^ (1u ^ 1u)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.4)), float(0.0), bool(true))), 0.0)), injectionSwitch.x)) ^ (clamp(_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, 0u ^ _GLF_IDENTITY((_GLF_struct_replacement_24._f1._f0.subgroup_size), (_GLF_IDENTITY((_GLF_struct_replacement_24._f1._f0.subgroup_size), max((_GLF_struct_replacement_24._f1._f0.subgroup_size), (_GLF_struct_replacement_24._f1._f0.subgroup_size)))) / 1u)), _GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_24._f1._f0.subgroup_size, max(_GLF_struct_replacement_24._f1._f0.subgroup_size, _GLF_struct_replacement_24._f1._f0.subgroup_size))) ^ 0u)) | (_GLF_struct_replacement_24._f1._f0.subgroup_size)))))), 0u, 0u, (1u & _GLF_IDENTITY(_GLF_IDENTITY(1u, (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (uint(5u))))) | (1u)), (_GLF_IDENTITY(1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (1u))) - 0u))))))))))))), bvec3(true));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = ((0 | (0 & -70489)) & _GLF_IDENTITY(-64114, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0)), float(mat2x4(float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)))), injectionSwitch.x)))) ^ (-64114))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) < 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7569.5419) : injectionSwitch.y))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 _GLF_struct_replacement_58.GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.w = _GLF_IDENTITY(_GLF_struct_replacement_15.subgroup_base, min(_GLF_struct_replacement_15.subgroup_base, _GLF_struct_replacement_15.subgroup_base));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))), true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, 0 + (_GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | (0 << _GLF_IDENTITY(int(7), int(7))))) / 1)))))))
    {
     barrier();
    }
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true)), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))) || false))) || false))))
    barrier();
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))));
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_struct_replacement_16.GLF_merged3_0_1_4_1_1_14_2_1_14readworkgroup_baseworkgroup_size.y + _GLF_struct_replacement_58.GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.w + _GLF_struct_replacement_8.subgroup_local_id;
 _GLF_struct_71 _GLF_struct_replacement_71 = _GLF_struct_71(_GLF_struct_60(_GLF_struct_59(mat4x2(1.0), 1u)), bvec3(true), 1u, _GLF_struct_64(_GLF_struct_replacement_16.GLF_merged3_0_1_4_1_1_14_2_1_14readworkgroup_baseworkgroup_size.y + _GLF_struct_replacement_58.GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.w + ((_GLF_struct_replacement_8.subgroup_local_id + 1) % _GLF_struct_replacement_24._f1._f0.subgroup_size), _GLF_struct_61(_GLF_IDENTITY(vec3(1.0), mat3(1.0) * (vec3(1.0))), _GLF_IDENTITY(1, 0 | (1)), vec4(1.0), vec3(1.0), ivec4(1), vec4(1.0), uvec3(1u)), _GLF_struct_62(mat2(1.0), vec3(1.0)), mat3(1.0), _GLF_IDENTITY(vec2(1.0), max(vec2(1.0), vec2(1.0))), _GLF_struct_63(mat2x4(1.0), true, vec4(1.0), ivec4(1), mat4x3(1.0), bvec3(true)), 1, 1), _GLF_struct_65(ivec3(1), ivec3(1)), _GLF_struct_70(_GLF_struct_66(mat2x4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))))) / 1.0))), 1.0, _GLF_struct_67(ivec2(1), _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), mat2(_GLF_IDENTITY(mat2x4(transpose(mat2(1.0))), transpose(transpose(mat2x4(transpose(mat2(1.0)))))))))), uvec4(1u), uvec4(1u)), _GLF_struct_68(mat2(1.0), mat4x2(1.0), vec4(1.0), uvec3(1u), uvec4(1u)), _GLF_struct_69(1.0), vec4(1.0)));
 _GLF_struct_replacement_58.GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.x = _GLF_struct_replacement_71._f3.next_virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 uint read = 0;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))))
  barrier();
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     _GLF_struct_replacement_16.GLF_merged3_0_1_4_1_1_14_2_1_14readworkgroup_baseworkgroup_size.x = _GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) | (read))) | (read));
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_58.GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.z = _GLF_struct_replacement_16.GLF_merged3_0_1_4_1_1_14_2_1_14readworkgroup_baseworkgroup_size.x, 0u | (_GLF_IDENTITY(_GLF_struct_replacement_58.GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.z = _GLF_struct_replacement_16.GLF_merged3_0_1_4_1_1_14_2_1_14readworkgroup_baseworkgroup_size.x, 0u ^ (_GLF_struct_replacement_58.GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.z = _GLF_struct_replacement_16.GLF_merged3_0_1_4_1_1_14_2_1_14readworkgroup_baseworkgroup_size.x)))), ~ (~ (_GLF_struct_replacement_58.GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.z = _GLF_struct_replacement_16.GLF_merged3_0_1_4_1_1_14_2_1_14readworkgroup_baseworkgroup_size.x))), _GLF_IDENTITY((false ? _GLF_FUZZED((+ workgroup_base)) : _GLF_struct_replacement_58.GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.z = _GLF_struct_replacement_16.GLF_merged3_0_1_4_1_1_14_2_1_14readworkgroup_baseworkgroup_size.x), (_GLF_IDENTITY((false ? _GLF_FUZZED((+ workgroup_base)) : _GLF_struct_replacement_58.GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.z = _GLF_struct_replacement_16.GLF_merged3_0_1_4_1_1_14_2_1_14readworkgroup_baseworkgroup_size.x), 0u ^ ((false ? _GLF_FUZZED((+ workgroup_base)) : _GLF_struct_replacement_58.GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.z = _GLF_struct_replacement_16.GLF_merged3_0_1_4_1_1_14_2_1_14readworkgroup_baseworkgroup_size.x)))) << 0u));
 atomicStore(buf[_GLF_IDENTITY(_GLF_struct_replacement_58.GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_58.GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base, (false ? _GLF_FUZZED((uvec4(48452u, 172427u, 180677u, 4756u) * virtual_gid)) : _GLF_struct_replacement_58.GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base)), _GLF_struct_replacement_58.GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base)).x], uint(1), 4, 64, 4);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id % 2) == 0, bool(bvec2((_GLF_struct_replacement_8.subgroup_local_id % 2) == 0, false))))
    {
     subgroupAll(false);
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x > injectionSwitch.y))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), bool(bool((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), false || (((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || false), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_IDENTITY(((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), false || (((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false))))))))), ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 0.0)), (true ? float(vec3(injectionSwitch.y, 0.0, 0.0)) : _GLF_FUZZED(61.65))))))) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     do
      {
       _GLF_struct_replacement_58.GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.z = atomicLoad(buf[virtual_gid], 4, 64, 2);
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0, max(0, 0)))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               barrier();
              }
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))));
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-67.71), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((733.392 + 19.87))), bvec2(true, false))).x > injectionSwitch.y))))))
            barrier();
           barrier();
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
          }
         else
          {
          }
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         for(int _injected_loop_counter = (1 & ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     subgroupAll(false);
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (true ? (injectionSwitch.x) : _GLF_FUZZED(-3751.5892))) * 1.0), 1.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0, 0.0, 1.0), (vec4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) * 1.0), 1.0, 0.0, 1.0)) * vec4(1.0, 1.0, 1.0, 1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0, 0.0, 1.0), (vec4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) * 1.0), 1.0, 0.0, 1.0)) * vec4(1.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(vec4(-26.15, -5.0, -86.45, -3.0)) : _GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(0.0, 1.0, 0.0))), 0.0, abs(0.0), 1.0, 1.0, sqrt(1.0), 0.0))).x) * 1.0), 1.0, 0.0, 1.0), (vec4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(float(1.0))), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))))).x) * 1.0), 1.0, 0.0, 1.0)) * vec4(1.0, 1.0, 1.0, 1.0)))) : _GLF_FUZZED(vec4(-51.18, -711.476, 8132.8743, 733.528)))))))) > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) | (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     _GLF_struct_replacement_58.GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.z = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (4)), (false ? _GLF_FUZZED(49264) : _GLF_IDENTITY(4, 0 | (4))))))), 64, 2);
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
      }
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))) ^ 0)); _GLF_IDENTITY(_injected_loop_counter --, (false ? _GLF_FUZZED(-42128) : _injected_loop_counter --)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), 0.0, sqrt(cos(0.0)), 1.0))) > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   for(_GLF_struct_39 _GLF_struct_replacement_39 = _GLF_struct_39(_GLF_struct_26(1u, _GLF_struct_25(bvec4(true)), vec3(1.0)), _GLF_struct_29(_GLF_IDENTITY(1u, (1u) | (1u)), _GLF_struct_27(mat4x2(1.0), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (1), (0 ^ (1)) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))), ivec3(1), ivec2(1), mat3(1.0), ivec2(1)), mat4x3(1.0), _GLF_struct_28(mat2x3(1.0), vec4(1.0))), _GLF_struct_35(_GLF_struct_30(mat2x3(1.0), ivec4(1), uvec3(1u), 1u, mat2(1.0), mat3x2(1.0), vec2(1.0)), _GLF_struct_31(1u, mat4x3(1.0), mat4x2(1.0)), _GLF_struct_32(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, ((1) / 1) / 1)))), mat4x3(1.0), 1.0, uvec2(1u)), mat4(1.0), _GLF_struct_33(1u, mat2x4(1.0), ivec3(1), mat3(1.0)), _GLF_struct_34(vec3(1.0), vec4(1.0), 1.0)), mat3x2(1.0), vec3(1.0), _GLF_struct_38(_GLF_struct_36(uvec2(1u), mat3x4(1.0), mat4(1.0), bvec2(true), mat4x3(1.0), 1u, mat3(1.0)), mat4x2(1.0), _GLF_struct_37(vec3(1.0), mat3(1.0), uvec2(1u)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_39._f1._f1._injected_loop_counter, (_GLF_struct_replacement_39._f1._f1._injected_loop_counter) << 0), _GLF_IDENTITY((_GLF_struct_replacement_39._f1._f1._injected_loop_counter), ~ (_GLF_IDENTITY(~ ((_GLF_struct_replacement_39._f1._f1._injected_loop_counter)), (~ ((_GLF_struct_replacement_39._f1._f1._injected_loop_counter))) | (~ ((_GLF_struct_replacement_39._f1._f1._injected_loop_counter)))))) - 0) != _GLF_IDENTITY(0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(82240) : 0))); _GLF_struct_replacement_39._f1._f1._injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       subgroupBarrier();
      }
     else
      {
      }
    }
  }
 for(int _injected_loop_counter = ((_GLF_IDENTITY(1, (1) | (1)) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   atomicStore(checker[virtual_gid], _GLF_struct_replacement_58.GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.z, 4, 64, 4);
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
