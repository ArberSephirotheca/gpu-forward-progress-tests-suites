#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   switch(_GLF_SWITCH(_GLF_IDENTITY(0, max(0, 0))))
    {
     case 44:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     uvec2 _GLF_SWITCH_4_0v;
     case 0:
     case 54:
     case 42:
     case 83:
     case 60:
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))))) || false))))))
        barrier();
       barrier();
      }
     case 17:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
      barrier();
     case 76:
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (_GLF_IDENTITY(false || (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false || (false))))))))
      barrier();
     barrier();
     break;
     default:
     1;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   switch(_GLF_SWITCH((_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0 >> _GLF_IDENTITY(int(4), int(4))), 1 * (int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0 >> _GLF_IDENTITY(int(4), int(4))))))))
    {
     case 2:
     {
      vec3 _GLF_SWITCH_3_0v;
      if(_GLF_DEAD(false))
       return;
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       switch(_GLF_SWITCH(0))
        {
         case 74:
         mat3x4(mat4x3(-0.1, 5796.7777, 42.05, 2.8, 450.473, -1.6, 1103.8726, 7987.7358, 5.2, -7.6, 0.1, 2.5));
         if(_GLF_DEAD(false))
          return;
         case 0:
         case 40:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         case 90:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         uint _GLF_SWITCH_3_1v;
         while((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(109070u, 114857u, 129756u), (uvec3(109070u, 114857u, 129756u)) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) ? uvec3(109070u, _GLF_IDENTITY(114857u, (114857u) | (114857u)), 129756u) : _GLF_FUZZED(uvec3(132839u, 146148u, 77393u).tts))) == uvec3(42503u, 123087u, 170965u)))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              return;
             barrier();
            }
           uvec4(115942u, 171197u, 115809u, 167924u);
           (findMSB(-45462) | abs(ivec2(-51262, -93087)));
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 1.0))), injectionSwitch.y))))))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              break;
            }
           40981;
           bvec2(false, false);
           (mat3(-5.7, -6605.3257, -9173.2064, -31.58, _GLF_IDENTITY(7.3, max(7.3, 7.3)), 8.1, -27.37, 9544.1072, _GLF_IDENTITY(65.60, float(vec3(65.60, 0.0, 0.0)))) * mat3(6.9, 4102.7812, -75.57, 757.798, 8.8, 450.470, -1.8, 799.540, -9615.7536));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           _GLF_IDENTITY(bitfieldInsert(-80913, 93622, 79734, _GLF_IDENTITY(ivec3(-39207, 94143, -46544), (_GLF_IDENTITY(ivec3(-39207, 94143, -46544), ivec3(ivec3(ivec3(-39207, 94143, -46544))))) | (ivec3(0, 0, 0) << _GLF_IDENTITY(ivec3(5), ivec3(5)))).s), (bitfieldInsert(-80913, 93622, 79734, _GLF_IDENTITY(ivec3(-39207, 94143, -46544), (_GLF_IDENTITY(ivec3(-39207, 94143, -46544), ivec3(ivec3(ivec3(-39207, 94143, -46544))))) | (_GLF_IDENTITY(ivec3(0, 0, 0) << _GLF_IDENTITY(ivec3(5), ivec3(5)), ivec3(ivec4(_GLF_IDENTITY(ivec3(0, 0, 0) << _GLF_IDENTITY(ivec3(5), ivec3(5)), ivec3(0, 0, 0) | (ivec3(0, 0, 0) << _GLF_IDENTITY(ivec3(5), ivec3(5)))), int(_GLF_ONE(1.0, injectionSwitch.y))))))).s)) / 1);
           if(_GLF_DEAD(false))
            continue;
          }
         case 37:
         mat4x2 _GLF_SWITCH_3_2v, _GLF_SWITCH_3_3v[43];
         while((subgroup_size >= _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))
          {
           ;
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            continue;
           ivec2(27944, -48833);
           float _GLF_SWITCH_3_4v, _GLF_SWITCH_3_5v;
           vec3 _GLF_SWITCH_3_6v[26];
           mat2x4 _GLF_SWITCH_3_7v[68], _GLF_SWITCH_3_8v[48], _GLF_SWITCH_3_9v;
           if(_GLF_DEAD(false))
            barrier();
           mat4x2 _GLF_SWITCH_3_10v[91];
           mat3x4(-3.5, 524.160, -7.2, 33.68, -36.55, 256.988, 678.261, -5.4, 0.9, -32.23, 0.6, 1.0);
          }
         case 73:
         {
          (- 42025);
         }
         break;
         case 83:
         mat2x4 _GLF_SWITCH_4_0v[5];
         default:
         if(_GLF_DEAD(false))
          barrier();
         1;
        }
      }
     }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(vec2(9.0, -2598.1601).g)), bool(false))), injectionSwitch[1])).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8.6)))) + 0.0))) > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), false), true, false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     case 0:
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     case 37:
     case 31:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     case 1:
     case 39:
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
      {
       switch(_GLF_SWITCH(0))
        {
         case 69:
         -634.914;
         case 0:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         case 58:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         case 56:
         case 29:
         case 47:
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         case 84:
         case 17:
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         case 49:
         case 50:
         case 81:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         break;
         case 9:
         if(true)
          {
           int _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v[76];
           if(_GLF_DEAD(false))
            barrier();
           for(           vec3(_GLF_IDENTITY(-3.0, clamp(-3.0, _GLF_IDENTITY(-3.0, (-3.0) / 1.0), -3.0)), -2.0, -91.59);
 false; bvec2(true, true))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
              barrier();
             while(true)
              {
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                return;
              }
             lessThanEqual(ivec3(-26532, -35336, 65328), ivec3(-78179, -89418, -99468));
             {
              if(_GLF_DEAD(false))
               continue;
              mat3x2 _GLF_SWITCH_3_3v, _GLF_SWITCH_3_4v[96];
              ;
              uint _GLF_SWITCH_3_5v[84];
              vec3 _GLF_SWITCH_3_6v[25];
              (mat3(-7072.8949, -45.04, -1.2, -695.178, 739.026, -8965.7886, _GLF_IDENTITY(-79.77, _GLF_IDENTITY((-79.77), ((-79.77)) * 1.0) - 0.0), 9.9, 11.54) * mat3(677.420, -1570.6866, -6.4, -2.9, -6678.9238, _GLF_IDENTITY(-7.4, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8.8) : -7.4)), 52.35, _GLF_IDENTITY(45.16, _GLF_IDENTITY(mix(float(_GLF_FUZZED((true ? 66.69 : 1.8))), float(45.16), bool(_GLF_IDENTITY(true, false || (true)))), max(_GLF_IDENTITY(mix(float(_GLF_FUZZED((true ? 66.69 : 1.8))), float(45.16), bool(_GLF_IDENTITY(true, false || (true)))), max(mix(float(_GLF_FUZZED((true ? 66.69 : 1.8))), float(45.16), bool(_GLF_IDENTITY(true, false || (true)))), mix(float(_GLF_FUZZED((true ? 66.69 : 1.8))), float(45.16), bool(_GLF_IDENTITY(true, false || (true)))))), _GLF_IDENTITY(mix(float(_GLF_FUZZED((true ? 66.69 : 1.8))), float(45.16), bool(_GLF_IDENTITY(true, false || (true)))), clamp(mix(float(_GLF_FUZZED((true ? 66.69 : 1.8))), float(45.16), bool(_GLF_IDENTITY(true, false || (true)))), mix(float(_GLF_FUZZED((true ? 66.69 : 1.8))), float(45.16), bool(_GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED((true ? 66.69 : 1.8))), float(45.16), bool(_GLF_IDENTITY(true, false || (true)))), float(mat3(mix(float(_GLF_FUZZED((true ? 66.69 : 1.8))), float(45.16), bool(_GLF_IDENTITY(true, false || (true)))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))))))), 4.0));
              if(_GLF_DEAD(false))
               return;
              uint _GLF_SWITCH_3_7v[87], _GLF_SWITCH_3_8v[21], _GLF_SWITCH_3_9v;
              mat4x2 _GLF_SWITCH_3_10v, _GLF_SWITCH_3_11v;
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              bool _GLF_SWITCH_3_12v;
              ((20459u / uvec3(61529u, 154670u, 60836u)) >> uvec3(66152u, 40379u, 130329u));
             }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             for(mat4x3 _GLF_SWITCH_3_13v, _GLF_SWITCH_3_14v; ((true ? mat4(3.7, -4.6, -7.5, -4.8, -49.07, 2560.4623, -434.669, 16.55, 199.349, 683.688, 8129.5181, -2844.8646, 593.817, 45.60, -3.2, -21.43) : mat4(-1851.0275, -6047.3701, -9.9, -5.5, -1.7, -8.9, -1.1, 21.54, -243.927, -5.9, -21.63, _GLF_IDENTITY(2.4, (_GLF_IDENTITY(_GLF_IDENTITY(2.4, min(2.4, 2.4)), 0.0 + (_GLF_IDENTITY(2.4, min(2.4, 2.4))))) + 0.0), 5.6, -9.2, -6.8, 1.6)) != mat4(-5432.8706, 1.1, 2.5, -47.86, -0.8, -47.14, 873.983, -44.24, -74.73, -22.61, 5.5, 295.960, -5.6, 48.34, 3195.6434, -26.12)); mat3(-2.1, 9.7, -68.48, 688.141, 204.456, -779.936, -7.8, -0.2, 6.2))
              {
               bvec2(false, false);
               if(_GLF_DEAD(false))
                barrier();
               bvec2 _GLF_SWITCH_3_15v[25];
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 barrier();
                }
               mat3x2(-8.1, -2198.3390, 2.8, -61.33, 2.5, 97.61);
               mat3(3007.4100, _GLF_IDENTITY(-5.0, min(_GLF_IDENTITY(-5.0, mix(float(-5.0), float(_GLF_FUZZED(4.5)), bool(false))), _GLF_IDENTITY(-5.0, clamp(-5.0, -5.0, -5.0)))), 7.8, 6.0, -6.0, 66.57, -885.347, 7844.3131, -22.57);
              }
             uvec2 _GLF_SWITCH_3_16v;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                return;
               barrier();
              }
             vec3 _GLF_SWITCH_3_17v;
             ;
            }
           mat2(mat3x2(4.7, _GLF_IDENTITY(313.854, clamp(313.854, 313.854, 313.854)), 1.7, 90.77, 9154.4847, 7.8));
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(false, (false) && true))))))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         default:
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
            return;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true, true))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         1;
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     break;
     if(_GLF_DEAD(false))
      barrier();
     default:
     1;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(subgroup_id) : gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec4(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, min(5u, 5u))), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u)))) / 1u), clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) + (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u) & 101921u)), workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size)), workgroup_base + subgroup_id * subgroup_size)), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), min(subgroup_id, subgroup_id))) << 0u) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size))) - 0u), uint(uvec4(workgroup_base + subgroup_id * subgroup_size, 1u, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u)))) / 1u), clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) + _GLF_IDENTITY((0u & 101921u), ((0u & 101921u)) + 0u)), workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), min(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))) - 0u) + ((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << (193139u & 0u))))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-953.268)), bool(false))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED((subgroup_local_id - num_workgroup))))], uint(1), 4, 64, 4);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   switch(_GLF_SWITCH(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / cos(0.0)), injectionSwitch.x), (_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / cos(0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) - sqrt(0.0)), min(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])))).x), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), max(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), float(_GLF_FUZZED(258.612)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))))))
    {
     case 0:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))))))) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     case 62:
     if(_GLF_DEAD(false))
      {
       switch(_GLF_SWITCH((0 ^ 0)))
        {
         case 45:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         (false ? ivec2(_GLF_IDENTITY(57225, (57225) * (1 & 1)), 88103) : (ivec2(65347, 80149) >> ivec2(_GLF_IDENTITY(-86597, max(-86597, _GLF_IDENTITY(-86597, ~ (~ (-86597))))), -9225)));
         case 12:
         (94.41 == -8680.7129);
         case 0:
         case 28:
         case 67:
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         case 96:
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         case 79:
         case 40:
         return;
         break;
         case 54:
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
          return;
         if(true)
          {
           ivec2 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v;
           (-2.9 + vec4(-5146.3410, -463.229, -9642.1268, -3997.1759));
           ;
           bitfieldExtract(workgroup_id, 21897, max(-16506, 16436));
           mat3 _GLF_SWITCH_4_3v[19];
           if(_GLF_DEAD(false))
            barrier();
           ;
           ;
           uvec2(38537u, 114844u);
          }
         else
          {
           int _GLF_SWITCH_4_4v[68], _GLF_SWITCH_4_5v[42], _GLF_SWITCH_4_6v;
           if(_GLF_DEAD(false))
            return;
           atan(-5.2);
           mat4 _GLF_SWITCH_4_7v;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           (ivec3(-57435, -47410, -91359) & 55651);
           mat4x3(7.7, _GLF_IDENTITY(-482.986, (-482.986) / cos(0.0)), 44.60, -4.8, -8.9, -115.021, -83.05, 29.99, -5496.7517, 7549.6478, 8.5, -832.664);
          }
         if(_GLF_DEAD(false))
          return;
         default:
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         1;
        }
      }
     case 15:
     case 30:
     case 89:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     case 46:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
          {
           case 23:
           while(false)
            {
             findLSB(min(uvec3(151742u, 119912u, 47709u), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))));
             (_GLF_IDENTITY(~ ivec2(-6062, 39596).r, ~ (~ (~ ivec2(-6062, 39596).r))));
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
             (mat4x2(-960.834, 9689.1045, -412.034, 74.09, 38.45, -1.2, 932.091, -1.1) / -950.730);
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
              continue;
            }
           if(_GLF_DEAD(false))
            barrier();
           case 60:
           uvec4(38304u, 39491u, 156956u, 69840u);
           case 0:
           case 4:
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            barrier();
           case 1:
           if(_GLF_DEAD(false))
            return;
           case 78:
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            return;
           case 95:
           case 54:
           barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
           break;
           case 26:
           if(_GLF_DEAD(false))
            return;
           {
            bvec3(true, false, true);
            if(_GLF_DEAD(false))
             barrier();
            virtual_gid;
            log(vec4(-1.2, -748.207, 126.368, 934.383));
            vec3 _GLF_SWITCH_4_0v[66], _GLF_SWITCH_4_1v;
           }
           default:
           1;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, false, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, false, false)))))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     case 21:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (true ? read : _GLF_FUZZED(workgroup_base))), 4, 64, _GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << _GLF_IDENTITY(0, (0) | 0)), (_GLF_IDENTITY(4, (4) << _GLF_IDENTITY(0, (0) | 0))) << 0), 4)));
     if(_GLF_DEAD(false))
      barrier();
     case 31:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false))))) || false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), false, true, true))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     case 69:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     subgroupAll(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))));
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, true, false))) || false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) || false)))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
        return;
       switch(_GLF_SWITCH(_GLF_IDENTITY(0, ~ (~ (0)))))
        {
         case 87:
         if(false)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), (true ? vec2(mat2(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(vec2(-321.392, -63.54))))).x > injectionSwitch.y))))
              return;
             barrier();
            }
           greaterThan(uvec3(33044u, 187878u, 51397u), uvec3(148565u, 198093u, 133445u));
           mat4x2(5.1, 52.28, 257.325, -5183.9509, 457.861, -8.6, -56.79, 1790.0666);
           mat4(_GLF_IDENTITY(-936.286, 1.0 * (-936.286)));
          }
         if(_GLF_DEAD(false))
          return;
         case 0:
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           return;
          }
         case 15:
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
          {
           switch(_GLF_SWITCH(0))
            {
             case 0:
             if(_GLF_DEAD(false))
              return;
             case 62:
             if(_GLF_DEAD(false))
              barrier();
             case 18:
             case 95:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             return;
             break;
             case 84:
             if(_GLF_DEAD(false))
              barrier();
             injectionSwitch;
             case 21:
             if(_GLF_DEAD(false))
              barrier();
             mat3x4(-1.6, -133.380, 30.21, -2.8, 3.0, -0.3, -3.9, 9.1, 246.479, 4.9, _GLF_IDENTITY(-6.7, 1.0 * (-6.7)), 1.4);
             if(_GLF_DEAD(false))
              return;
             default:
             1;
            }
          }
         barrier();
         break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         case 12:
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), bool(bvec4(bool((false)), false, true, false)))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         mat4x3(_GLF_IDENTITY(-6856.8157, _GLF_IDENTITY((-6856.8157) - 0.0, clamp((-6856.8157) - 0.0, (-6856.8157) - 0.0, (-6856.8157) - 0.0))), -3.8, 28.70, 5949.0956, 748.281, 9.3, -8.0, -765.242, -78.83, _GLF_IDENTITY(-24.79, float(_GLF_IDENTITY(mat2(-24.79, 1.0, 0.0, 1.0), (_GLF_IDENTITY(mat2(-24.79, 1.0, 0.0, 1.0), transpose(transpose(mat2(-24.79, 1.0, 0.0, 1.0))))) / mat2(1.0, 1.0, 1.0, 1.0)))), 39.63, -3614.3541);
         case 9:
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, (true) || false), true))), (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))) || false)))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                continue;
               barrier();
              }
             barrier();
            }
           ;
           uvec2 _GLF_SWITCH_3_0v;
           mat2x3(-4.9, -7484.8243, -0.6, -74.59, -479.032, -32.03);
           if(_GLF_DEAD(false))
            barrier();
           (_GLF_IDENTITY((ivec4(4990, 21258, 19710, -24387) + -90364), max((ivec4(4990, 21258, 19710, -24387) + -90364), (ivec4(4990, 21258, 19710, -24387) + -90364))) >> ivec4(37893, -83119, -73280, -71417));
           if(_GLF_DEAD(false))
            barrier();
           uint _GLF_SWITCH_3_1v[31], _GLF_SWITCH_3_2v[39], _GLF_SWITCH_3_3v;
          }
         while((8365.8066 != 880.428));
         default:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         1;
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-89.30, 249.610)))).x > injectionSwitch.y))))
      return;
     case 6:
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))))))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     for(     (mat2x3(-7.7, 1534.5970, 593.476, 65.81, -7.3, -4911.6683) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(9029.8605, -1604.1185, _GLF_IDENTITY(8.1, _GLF_IDENTITY(1.0, 1.0 * (1.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(8.1, _GLF_IDENTITY(float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(max(float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(-20.05) : float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), max(max(float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(-20.05) : float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), max(float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(-20.05) : float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(vec4(-288.801, -5.6, 5.0, 1.0), vec4(-75.58, 5.3, 45.13, 423.537))) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.3)), float(1.0), bool(true))))), 0.0, 1.0, 0.0))), min(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8.1, min(8.1, 8.1)), float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 0.0 + (_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))))), 0.0), (vec2(_GLF_IDENTITY(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(vec4(-288.801, -5.6, 5.0, 1.0), vec4(-75.58, 5.3, 45.13, 423.537))) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.3)), float(1.0), bool(true))))), 0.0, 1.0, 0.0))), min(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8.1, min(8.1, 8.1)), float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 0.0 + (_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))))), 0.0)) * mat2(1.0))), mix(float(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(vec4(-288.801, -5.6, 5.0, 1.0), vec4(-75.58, 5.3, 45.13, 423.537))) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.3)), float(1.0), bool(true))))), 0.0, 1.0, 0.0))), min(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8.1, min(8.1, 8.1)), float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 0.0 + (_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))))), 0.0), (vec2(_GLF_IDENTITY(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(vec4(-288.801, -5.6, 5.0, 1.0), vec4(-75.58, 5.3, 45.13, 423.537))) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.3)), float(1.0), bool(true))))), 0.0, 1.0, 0.0))), min(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8.1, min(8.1, 8.1)), float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 0.0 + (_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))))), 0.0)) * mat2(1.0)))), float(_GLF_FUZZED(-753.471)), bool(false))), _GLF_IDENTITY((float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 0.0 + (_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))), max(min(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 0.0 + (_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))), min(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 0.0 + (_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))))))), 0.0))) / 1.0, max((float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), clamp(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 0.0 + (_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))))), 0.0))) / 1.0, (float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), min(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8.1, (8.1) / 1.0), float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 0.0 + (_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(normalize(-50.93)))), 1.0, 1.0, 0.0, 1.0, 0.0))))))), 0.0))) / 1.0)))))), -8.9), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(9029.8605, -1604.1185, _GLF_IDENTITY(8.1, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(8.1, _GLF_IDENTITY(float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), max(float(mat2x4(8.1, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(8.7))))), 0.0, 1.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(-3035.2442)), float(float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), bool(true))), (false ? _GLF_FUZZED(-20.05) : float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))))), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), min(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8.1, min(8.1, 8.1)), float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 0.0 + (_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))))), 0.0)), _GLF_IDENTITY((float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), min(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 0.0 + (_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))))), 0.0))) / 1.0, max((float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), min(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(8.1, float(mat2x4(8.1, _GLF_IDENTITY(1.0, float(mat3x2(1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))), 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), max(float(mat4x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), float(mat4x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))))))), clamp((_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), max(float(mat4x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), float(mat4x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))))))), (_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), max(float(mat4x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), float(mat4x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), max(float(mat4x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), float(mat4x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))))))), ((_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), max(float(mat4x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), float(mat4x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))))))))) / 1.0)))))), 0.0))) / _GLF_IDENTITY(1.0, 0.0 + (1.0)), (float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(8.1, float(mat2x4(8.1, _GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0), (mat3(0.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 0.0))), min(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 0.0 + (_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))))), 0.0))) / 1.0)))))), -8.9), (mat2(9029.8605, -1604.1185, _GLF_IDENTITY(8.1, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(8.1, _GLF_IDENTITY(float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), max(float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(-20.05) : float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))))), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), min(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8.1, min(8.1, 8.1)), _GLF_IDENTITY(float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), max(_GLF_IDENTITY(float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), clamp(float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))), float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), 0.0 + (_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(44.69)), bool(false))), 1.0, 1.0, 0.0, 1.0, 0.0))))))), 0.0)), _GLF_IDENTITY((float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), min(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 0.0 + (_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))))), 0.0))) / 1.0, max((float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), min(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 0.0 + (_GLF_IDENTITY(8.1, float(mat2x4(8.1, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))))), 0.0))) / 1.0, (float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(272.716))), 1.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-13.98)), float(0.0), bool(true)))))), min(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 0.0 + (_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(894.439)), float(0.0), bool(true))), 1.0, 1.0, 0.0, 1.0, 0.0))))))), 0.0))) / 1.0)))))), -8.9)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(mat2(9029.8605, -1604.1185, _GLF_IDENTITY(8.1, 1.0 * (_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))))), _GLF_IDENTITY(-8.9, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(-8.9, clamp(-8.9, -8.9, -8.9)), 1.0)), float(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(-8.9, clamp(-8.9, -8.9, -8.9)), max(_GLF_IDENTITY(-8.9, clamp(-8.9, -8.9, -8.9)), _GLF_IDENTITY(_GLF_IDENTITY(-8.9, clamp(-8.9, -8.9, -8.9)), float(mat2x3(_GLF_IDENTITY(-8.9, clamp(-8.9, -8.9, -8.9)), 0.0, cos(0.0), 0.0, 1.0, 0.0))))), 1.0)), min(float(vec2(_GLF_IDENTITY(-8.9, clamp(-8.9, -8.9, -8.9)), 1.0)), float(vec2(_GLF_IDENTITY(-8.9, clamp(-8.9, -8.9, _GLF_IDENTITY(-8.9, clamp(_GLF_IDENTITY(-8.9, float(vec2(-8.9, 0.0))), -8.9, -8.9)))), 1.0)))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))))), (mat2(9029.8605, -1604.1185, _GLF_IDENTITY(8.1, 1.0 * (_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))))), _GLF_IDENTITY(-8.9, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(-8.9, clamp(-8.9, -8.9, -8.9)), 1.0)), float(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(-8.9, clamp(-8.9, -8.9, -8.9)), max(_GLF_IDENTITY(-8.9, clamp(-8.9, -8.9, -8.9)), _GLF_IDENTITY(_GLF_IDENTITY(-8.9, clamp(-8.9, -8.9, -8.9)), float(mat2x3(_GLF_IDENTITY(-8.9, clamp(-8.9, -8.9, -8.9)), 0.0, cos(0.0), 0.0, 1.0, 0.0))))), 1.0)), min(float(vec2(_GLF_IDENTITY(-8.9, clamp(-8.9, -8.9, -8.9)), 1.0)), float(vec2(_GLF_IDENTITY(-8.9, clamp(-8.9, -8.9, _GLF_IDENTITY(-8.9, clamp(_GLF_IDENTITY(-8.9, float(vec2(-8.9, 0.0))), -8.9, -8.9)))), 1.0)))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))))) / mat2(1.0, 1.0, 1.0, 1.0))) / mat2(1.0, 1.0, 1.0, 1.0), mat2(1.0) * (_GLF_IDENTITY((mat2(9029.8605, -1604.1185, _GLF_IDENTITY(_GLF_IDENTITY(8.1, 1.0 * (_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), max(_GLF_IDENTITY(8.1, 1.0 * (_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(8.1, 1.0 * (_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))))), -8.9)) / mat2(1.0, 1.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose((mat2(9029.8605, -1604.1185, _GLF_IDENTITY(8.1, 1.0 * (_GLF_IDENTITY(8.1, float(mat2x4(8.1, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), -8.9)) / mat2(1.0, 1.0, 1.0, 1.0)), transpose(transpose(transpose((mat2(9029.8605, -1604.1185, _GLF_IDENTITY(8.1, 1.0 * (_GLF_IDENTITY(8.1, _GLF_IDENTITY(float(mat2x4(8.1, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-95.62) : 1.0)), 1.0, 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5.7) : 1.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), clamp(float(mat2x4(8.1, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-95.62) : 1.0)), 1.0, 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5.7) : 1.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), float(mat2x4(8.1, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-95.62) : 1.0)), 1.0, 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5.7) : 1.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat2x4(8.1, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-95.62) : 1.0)), 1.0, 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5.7) : 1.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), mix(float(_GLF_IDENTITY(float(mat2x4(8.1, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-95.62) : 1.0)), 1.0, 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5.7) : 1.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), float(float(float(mat2x4(8.1, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-95.62) : 1.0)), 1.0, 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5.7) : 1.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))), float(_GLF_FUZZED(-32.84)), bool(false)))))))), _GLF_IDENTITY(-8.9, clamp(_GLF_IDENTITY(-8.9, float(mat3x4(-8.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, abs(1.0), 1.0))), _GLF_IDENTITY(-8.9, float(vec3(-8.9, 1.0, 1.0))), _GLF_IDENTITY(-8.9, max(-8.9, -8.9)))))) / mat2(1.0, 1.0, 1.0, 1.0)))))))))));
 _GLF_IDENTITY((_GLF_IDENTITY(115277u >= workgroup_size, ! (_GLF_IDENTITY(! (115277u >= workgroup_size), ! _GLF_IDENTITY((! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(115277u, (115277u) >> 0u) >= workgroup_size), ((_GLF_IDENTITY(115277u, (115277u) >> 0u) >= workgroup_size)) && true)), ((! _GLF_IDENTITY((_GLF_IDENTITY(115277u, (115277u) >> 0u) >= workgroup_size), ((_GLF_IDENTITY(115277u, (115277u) >> 0u) >= workgroup_size)) && true))) || false)), bool(bool((! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(115277u, (115277u) >> 0u) >= workgroup_size), ((_GLF_IDENTITY(115277u, (115277u) >> 0u) >= workgroup_size)) && true)), ((! _GLF_IDENTITY((_GLF_IDENTITY(115277u, (115277u) >> 0u) >= workgroup_size), ((_GLF_IDENTITY(115277u, (115277u) >> 0u) >= workgroup_size)) && true))) || false))))))))), ! (! ((_GLF_IDENTITY(115277u >= workgroup_size, ! (_GLF_IDENTITY(! (115277u >= workgroup_size), ! (! (! (_GLF_IDENTITY(115277u, (115277u) >> 0u) >= workgroup_size)))))))))); ivec4(-89388, -96549, -50831, 75272)[2])
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((327.066 / 7.5)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-62.02)), bvec2(true, false))).x > injectionSwitch.y))))
        return;
       mat3x4(625.796, -5.8, -7.2, -434.074, _GLF_IDENTITY(_GLF_IDENTITY(-81.41, 0.0 + (-81.41)), (-81.41) - 0.0), _GLF_IDENTITY(-512.708, clamp(-512.708, _GLF_IDENTITY(-512.708, min(_GLF_IDENTITY(-512.708, (-512.708) - 0.0), -512.708)), -512.708)), _GLF_IDENTITY(-62.04, (-62.04) - 0.0), -28.00, -688.465, 2519.8170, -4382.9382, 60.57);
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         continue;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           barrier();
          }
        }
       mat3(5.1, _GLF_IDENTITY(_GLF_IDENTITY(-9509.6322, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false))))) ? _GLF_IDENTITY(-9509.6322, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-9509.6322, mix(float(_GLF_FUZZED(-4.5)), float(-9509.6322), bool(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! ((true) || false))))))), 0.0), (vec2(_GLF_IDENTITY(-9509.6322, mix(float(_GLF_FUZZED(-4.5)), float(-9509.6322), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))), 0.0)) / vec2(1.0, 1.0)))) : _GLF_FUZZED(max(_GLF_IDENTITY(-74.29, min(-74.29, -74.29)), _GLF_IDENTITY(7.7, max(7.7, 7.7)))))), max(_GLF_IDENTITY(-9509.6322, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false))))) ? _GLF_IDENTITY(-9509.6322, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-9509.6322, mix(float(_GLF_FUZZED(-4.5)), float(-9509.6322), bool(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! ((true) || false))))))), 0.0), (vec2(_GLF_IDENTITY(-9509.6322, mix(float(_GLF_FUZZED(-4.5)), float(-9509.6322), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))), 0.0)) / vec2(1.0, 1.0)))) : _GLF_FUZZED(max(_GLF_IDENTITY(-74.29, min(-74.29, -74.29)), _GLF_IDENTITY(7.7, max(7.7, 7.7)))))), _GLF_IDENTITY(-9509.6322, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false))))) ? _GLF_IDENTITY(-9509.6322, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-9509.6322, mix(float(_GLF_FUZZED(-4.5)), float(-9509.6322), bool(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! ((true) || false))))))), 0.0), (vec2(_GLF_IDENTITY(-9509.6322, mix(float(_GLF_FUZZED(-4.5)), float(-9509.6322), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))), 0.0)) / vec2(1.0, 1.0)))) : _GLF_FUZZED(max(_GLF_IDENTITY(-74.29, min(-74.29, -74.29)), _GLF_IDENTITY(7.7, max(7.7, 7.7)))))))), 1.2, -7.9, -7.7, -2.4, 2.7, -5176.9992, -6.5);
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            continue;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          continue;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))
          barrier();
        }
       {
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           break;
          barrier();
         }
        if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-26.40)), vec2(_GLF_FUZZED((- 7.2)), (injectionSwitch)[1]), bvec2(false, true)))), clamp(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))))))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
         continue;
        if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec4(bool(bool(_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))
         barrier();
        mat4x2(-1.7, -1.4, 9465.5825, 29.68, -94.91, -1.1, -6.0, 758.985);
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(false))
           break;
          if(_GLF_DEAD(false))
           barrier();
          barrier();
         }
        if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
         barrier();
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         {
          if(_GLF_DEAD(false))
           barrier();
          barrier();
         }
        if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
         break;
        if(_GLF_DEAD(false))
         break;
        if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false)))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(false, true && (false)) || (false)))))))) || false), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))))
         {
          if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
           barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-304.037)), bool(false))) > injectionSwitch.y))))
             continue;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
               continue;
              barrier();
             }
            if(_GLF_DEAD(false))
             return;
            switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) << 0)))))
             {
              case 13:
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 barrier();
                barrier();
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y))))
               continue;
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
                if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  return;
                 }
                barrier();
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               break;
              uvec3 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
              case 29:
              mat3x4(98.04, -1.8, 13.01, -5.2, _GLF_IDENTITY(-5.2, float(mat2x4(-5.2, 0.0, 1.0, 1.0, sin(0.0), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), 41.80, 7.7, -9.8, -6.7, -8124.5541, _GLF_IDENTITY(-7.7, (true ? -7.7 : _GLF_FUZZED(0.9))), 73.64);
              case 0:
              case 61:
              case 8:
              case 5:
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(injectionSwitch.x, sqrt(0.0))), clamp(_GLF_IDENTITY(float(vec2(injectionSwitch.x, sqrt(0.0))), mix(float(_GLF_FUZZED(0.8)), float(float(vec2(injectionSwitch.x, sqrt(0.0)))), bool(true))), float(_GLF_IDENTITY(vec2(injectionSwitch.x, sqrt(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0), vec3(0.0, 1.0, 0.0)))))), (vec2(injectionSwitch.x, sqrt(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0), vec3(0.0, 1.0, 0.0))))))) * vec2(1.0, 1.0))), float(vec2(injectionSwitch.x, sqrt(0.0)))))) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-929.860))), injectionSwitch.y)), injectionSwitch.y), float(mat2x3(min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-929.860))), injectionSwitch.y)), injectionSwitch.y), 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0)), 1.0)))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(335.294)), bool(false)))), max((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-929.860), float(_GLF_IDENTITY(mat4x3(true ? injectionSwitch.y : _GLF_FUZZED(-929.860), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0), (true ? _GLF_IDENTITY(mat4x3(true ? injectionSwitch.y : _GLF_FUZZED(-929.860), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat4x3(true ? injectionSwitch.y : _GLF_FUZZED(-929.860), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))) : _GLF_FUZZED(mat4x3(8.7, -7.4, 7.0, -6603.4652, -0.8, -920.441, -974.123, 1.5, -43.47, -30.43, -2814.7964, 592.179)))))))), injectionSwitch.y)), injectionSwitch.y)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(335.294)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-84.83) : injectionSwitch.y)), (true ? injectionSwitch.y : _GLF_FUZZED(-929.860))), injectionSwitch.y)), injectionSwitch.y)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(335.294)), bool(false)))), 1.0 * ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-84.83) : injectionSwitch.y)), (true ? injectionSwitch.y : _GLF_FUZZED(-929.860))), injectionSwitch.y)), injectionSwitch.y)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(335.294)), bool(false)))))))) + 0.0), injectionSwitch.y))))))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                continue;
               }
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 return;
                barrier();
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              case 58:
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 break;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                if(_GLF_DEAD(false))
                 break;
                continue;
               }
              case 85:
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(false))
               break;
              case 25:
              if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
               barrier();
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                barrier();
               }
              case 31:
              barrier();
              break;
              if(_GLF_DEAD(false))
               return;
              default:
              if(_GLF_DEAD(false))
               barrier();
              1;
             }
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               return;
              barrier();
             }
           }
          if(_GLF_DEAD(false))
           continue;
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
           barrier();
          continue;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
         }
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         continue;
        if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
         {
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ 1.7)), _GLF_FUZZED(-0.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, length(tan(vec2(0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, 1.0)), mix(float(float(mat3(injectionSwitch.y, length(tan(vec2(0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, 1.0))), float(_GLF_FUZZED(-555.215)), bool(false)))))))))))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           continue;
          if(_GLF_DEAD(false))
           continue;
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           break;
          barrier();
         }
        if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
         break;
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
        ;
        if(greaterThan(ivec3(62043, -62953, 28325), ivec3(-16538, -76869, _GLF_IDENTITY(62528, _GLF_IDENTITY((_GLF_IDENTITY(62528, (false ? _GLF_FUZZED(25005) : 62528))), ((_GLF_IDENTITY(62528, (false ? _GLF_FUZZED(25005) : 62528)))) / 1) | (62528)))).p)
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           continue;
          ivec3(80533, 8873, _GLF_IDENTITY(-29678, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-29678, int(int(_GLF_IDENTITY(-29678, (-29678) + 0)))), min(_GLF_IDENTITY(-29678, int(_GLF_IDENTITY(int(_GLF_IDENTITY(-29678, (-29678) + 0)), (int(_GLF_IDENTITY(-29678, (-29678) + 0))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(-29678, (-29678) + 0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(_GLF_IDENTITY(-29678, (-29678) + 0)) : _GLF_FUZZED((+ 29016)))))))), _GLF_IDENTITY(_GLF_IDENTITY(-29678, int(int(_GLF_IDENTITY(-29678, (-29678) + 0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(-29678, int(int(_GLF_IDENTITY(-29678, (-29678) + 0)))), ~ (~ (_GLF_IDENTITY(-29678, int(int(_GLF_IDENTITY(-29678, (-29678) + 0))))))), _GLF_IDENTITY(-29678, int(int(_GLF_IDENTITY(-29678, (-29678) + 0)))))))), (_GLF_IDENTITY(true ? -29678 : _GLF_FUZZED(90052), min(true ? -29678 : _GLF_FUZZED(_GLF_IDENTITY(90052, 0 + (90052))), true ? -29678 : _GLF_FUZZED(90052)))))) | 0));
          if(_GLF_DEAD(false))
           continue;
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
           {
            if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(64.06)), bool(false))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0), (mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(64.06)), bool(false))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y))))
             {
              switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))).x))))
               {
                case 73:
                768.156;
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.3)), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.3)), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.3)), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))
                   return;
                  barrier();
                 }
                if(_GLF_DEAD(false))
                 return;
                case 7:
                vec4(6.2, -4082.5410, _GLF_IDENTITY(_GLF_IDENTITY(9654.5759, mix(float(9654.5759), float(_GLF_FUZZED(3.3)), bool(false))), mix(float(9654.5759), float(_GLF_FUZZED(float(-4422))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))), -3.7);
                case 0:
                case 66:
                case 70:
                if(_GLF_DEAD(false))
                 return;
                if(_GLF_DEAD(false))
                 return;
                if(_GLF_DEAD(false))
                 return;
                case 38:
                case 31:
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   break;
                  switch(_GLF_SWITCH(0))
                   {
                    case 42:
                    mat2x3(3463.0611, 7976.8865, 605.382, -6.9, 9.0, 1.1);
                    if(_GLF_DEAD(false))
                     continue;
                    case 0:
                    case 88:
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     continue;
                    if(_GLF_DEAD(false))
                     barrier();
                    case 83:
                    if(_GLF_DEAD(false))
                     barrier();
                    case 53:
                    case 35:
                    continue;
                    break;
                    if(_GLF_DEAD(false))
                     continue;
                    case 61:
                    subgroup_size;
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                      if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
                       continue;
                      barrier();
                     }
                    if(_GLF_DEAD(false))
                     return;
                    default:
                    1;
                   }
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(false))
                     continue;
                    barrier();
                   }
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                case 97:
                if(_GLF_DEAD(false))
                 break;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   return;
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     return;
                    barrier();
                   }
                  if(_GLF_DEAD(false))
                   break;
                  if(_GLF_DEAD(false))
                   barrier();
                  return;
                 }
                barrier();
                if(_GLF_DEAD(false))
                 break;
                break;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                case 45:
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  return;
                  if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
                   break;
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 continue;
                ivec2(70129, -9482);
                default:
                1;
               }
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                switch(_GLF_SWITCH(0))
                 {
                  case 0:
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   continue;
                  case 4:
                  case 16:
                  case 83:
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
                   barrier();
                  case 50:
                  case 88:
                  if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                   barrier();
                  case 47:
                  case 87:
                  case 10:
                  continue;
                  break;
                  default:
                  1;
                 }
               }
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
               barrier();
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 continue;
                switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                 {
                  case 78:
                  if(_GLF_DEAD(false))
                   continue;
                  (ivec2(21226, 998) & ivec2(50159, -62719));
                  case 0:
                  case 36:
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                     barrier();
                    return;
                    if(_GLF_DEAD(false))
                     return;
                   }
                  case 18:
                  case 26:
                  barrier();
                  break;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  case 66:
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  (next_virtual_gid % uvec2(_GLF_IDENTITY(136641u, clamp(_GLF_IDENTITY(136641u, (136641u) | (136641u)), _GLF_IDENTITY(136641u, (136641u) << 0u), _GLF_IDENTITY(136641u, 0u | (136641u)))), 165146u));
                  default:
                  1;
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
               }
              break;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_DEAD(false))
               continue;
             }
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            barrier();
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             continue;
           }
          if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
           return;
          if(_GLF_DEAD(false))
           barrier();
          _GLF_IDENTITY(_GLF_IDENTITY((-51564 / ivec4(-82085, -44432, -38373, -70393)), (_GLF_IDENTITY((-51564 / ivec4(-82085, -44432, -38373, -70393)), max((-51564 / ivec4(-82085, -44432, -38373, -70393)), (-51564 / ivec4(-82085, -44432, -38373, -70393))))) ^ ivec4(0, 0, 0, 0)), min((_GLF_IDENTITY(_GLF_IDENTITY(-51564, (false ? _GLF_FUZZED(55481) : -51564)), (-51564) / 1) / ivec4(-82085, -44432, -38373, -70393)), _GLF_IDENTITY((-51564 / ivec4(-82085, -44432, -38373, -70393)), min((-51564 / _GLF_IDENTITY(ivec4(-82085, -44432, -38373, -70393), (false ? _GLF_FUZZED(ivec4(91940, -75966, -46562, 22934)) : ivec4(-82085, -44432, -38373, -70393)))), (-51564 / ivec4(_GLF_IDENTITY(-82085, ~ (~ (-82085))), -44432, -38373, -70393))))));
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          if(_GLF_DEAD(false))
           barrier();
          ivec3(64020, -35705, 28159);
          ivec4 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v[42], _GLF_SWITCH_0_2v[23];
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
             barrier();
            barrier();
           }
          if(_GLF_DEAD(false))
           break;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            barrier();
            if(_GLF_DEAD(false))
             break;
           }
          bvec3 _GLF_SWITCH_0_3v[3], _GLF_SWITCH_0_4v[93], _GLF_SWITCH_0_5v;
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(64871u)), _GLF_FUZZED(94.96)), bvec2(false, false))).y))))
             barrier();
            return;
           }
          mat4x2 _GLF_SWITCH_0_6v;
          if(_GLF_DEAD(false))
           barrier();
         }
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             break;
            barrier();
           }
          return;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             break;
            barrier();
           }
         }
        if(_GLF_DEAD(false))
         continue;
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(false))
           return;
          return;
         }
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(false))
           continue;
          barrier();
         }
        if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
         barrier();
        if(_GLF_DEAD(false))
         return;
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(false))
           continue;
          break;
         }
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          break;
          if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
           continue;
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            barrier();
           }
         }
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(false))
           continue;
          continue;
          if(_GLF_DEAD(false))
           barrier();
         }
        {
         (ivec4(-99049, -42347, 58685, -95061) % ivec4(-42786, _GLF_IDENTITY(77010, ~ (~ (77010))), -739, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(16476, (16476) | (16476)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(16476, (16476) >> _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-66162))), 0)))), (false ? _GLF_FUZZED(-11740) : _GLF_IDENTITY((_GLF_IDENTITY(16476, (16476) >> 0)), ((_GLF_IDENTITY(16476, (16476) >> 0))) << _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), min(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(16476, (16476) >> 0)), (false ? _GLF_FUZZED(-11740) : _GLF_IDENTITY((_GLF_IDENTITY(16476, (16476) >> 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(16476, max(16476, 16476)), (16476) >> 0))) << int(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(16476, (_GLF_IDENTITY(_GLF_IDENTITY(16476, (16476) >> 0), (true ? _GLF_IDENTITY(16476, (16476) >> 0) : _GLF_FUZZED(15664)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(16476, (_GLF_IDENTITY(16476, (16476) >> 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (0 ^ 0)), _GLF_IDENTITY(_GLF_IDENTITY(16476, (_GLF_IDENTITY(16476, (16476) >> 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(16476, (_GLF_IDENTITY(16476, (16476) >> 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(16476, (_GLF_IDENTITY(16476, _GLF_IDENTITY((16476) >> 0, 1 * ((16476) >> 0)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(16476, (_GLF_IDENTITY(16476, _GLF_IDENTITY((16476) >> 0, _GLF_IDENTITY(int(ivec3((16476) >> 0, 0, 0)), (true ? int(ivec3((16476) >> 0, 0, 0)) : _GLF_FUZZED(-86152)))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(16476, (_GLF_IDENTITY(16476, _GLF_IDENTITY((16476) >> 0, _GLF_IDENTITY(int(ivec3((16476) >> 0, 0, 0)), (true ? int(ivec3((16476) >> 0, 0, 0)) : _GLF_FUZZED(-86152)))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(16476, (_GLF_IDENTITY(16476, _GLF_IDENTITY((16476) >> 0, _GLF_IDENTITY(int(ivec3((16476) >> 0, 0, 0)), (true ? int(ivec3((16476) >> 0, 0, 0)) : _GLF_FUZZED(-86152)))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))).y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(256.875), _GLF_IDENTITY((injectionSwitch)[1], float(mat3x4((injectionSwitch)[_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(25924) : 1)), _GLF_IDENTITY(1, int(ivec4(1, 0, 1, 1)))))], 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-7.3) : 1.0)), 1.0, 1.0)))))), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0 | 0) | (0))], _GLF_IDENTITY(_GLF_FUZZED(-30.89), _GLF_IDENTITY(float(float(_GLF_FUZZED(-30.89))), float(vec3(float(float(_GLF_FUZZED(-30.89))), 0.0, 1.0))))), bvec2(true, false))).y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
              barrier();
             break;
            }
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, false || ((_GLF_DEAD(false)) || false))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_DEAD(false))
            barrier();
           continue;
          }
         mat3x4 _GLF_SWITCH_0_7v, _GLF_SWITCH_0_8v[53], _GLF_SWITCH_0_9v[52];
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
            return;
           barrier();
          }
         ivec3 _GLF_SWITCH_0_10v[98];
         float _GLF_SWITCH_0_11v[2], _GLF_SWITCH_0_12v;
        }
        if(_GLF_DEAD(false))
         barrier();
        mat2x4 _GLF_SWITCH_0_13v;
        if(_GLF_DEAD(false))
         continue;
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             continue;
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             break;
            barrier();
           }
          break;
          if(_GLF_DEAD(false))
           barrier();
         }
       }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
        {
         if(_GLF_DEAD(false))
          break;
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))) || false), (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     default:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     1;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), true, false, true)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(1), int(1)))))
    {
     case 16:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))
      barrier();
     while(true)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, true && (false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), (! (_GLF_IDENTITY(false, bool(bool(false))))) || false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), (! (_GLF_IDENTITY(false, bool(bool(false))))) || false))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), (! (_GLF_IDENTITY(false, bool(bool(false))))) || false))))), true, false, false))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.9)), bool(false)))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         continue;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8201.5656), _GLF_FUZZED(-8101.3226)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))))
            {
             if(_GLF_DEAD(false))
              continue;
             barrier();
            }
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         continue;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         switch(_GLF_SWITCH(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_IDENTITY(int(int(_GLF_ZERO(0.0, injectionSwitch.x))), (int(int(_GLF_ZERO(0.0, injectionSwitch.x)))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))))
          {
           case 40:
           int _GLF_SWITCH_3_0v[30], _GLF_SWITCH_3_1v;
           case 23:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           findMSB(virtual_gid);
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               barrier();
              }
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
           case 0:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               barrier();
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              continue;
            }
           barrier();
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            break;
           break;
           case 95:
           (+ _GLF_SWITCH_3_1v);
           default:
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)))))))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             barrier();
            }
           1;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(true, false)))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       _GLF_IDENTITY(max(_GLF_IDENTITY(ivec2(-51951, 48292), (ivec2(-51951, 48292)) | (ivec2(-51951, 48292))), -71412), (max(_GLF_IDENTITY(ivec2(-51951, _GLF_IDENTITY(48292, (false ? _GLF_FUZZED(-45130) : _GLF_IDENTITY(48292, 0 | (48292))))), _GLF_IDENTITY((ivec2(-51951, 48292)) | (ivec2(-51951, 48292)), clamp((ivec2(-51951, 48292)) | (ivec2(-51951, 48292)), _GLF_IDENTITY((ivec2(-51951, 48292)) | (ivec2(-51951, 48292)), ((ivec2(-51951, 48292)) | (ivec2(-51951, 48292))) << ivec2(0, 0)), (ivec2(-51951, 48292)) | (ivec2(-51951, 48292))))), -71412)) - ivec2(0, 0));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               barrier();
              }
             barrier();
            }
           continue;
           if(_GLF_DEAD(false))
            barrier();
          }
         break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        continue;
       {
        if(_GLF_DEAD(false))
         return;
        if(_GLF_DEAD(false))
         continue;
        if(_GLF_DEAD(false))
         barrier();
        switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
         {
          case 70:
          if(_GLF_DEAD(false))
           barrier();
          vec3(-65.51, _GLF_IDENTITY(-7950.3482, min(-7950.3482, -7950.3482)), 8.1);
          case 54:
          if(_GLF_DEAD(false))
           break;
          mat4(226.119, -59.58, 0.1, -5066.1105, -288.243, -62.33, 22.29, -5.4, 3.2, 6.5, 8.6, -9.0, _GLF_IDENTITY(-5.2, (-5.2) / 1.0), 2.2, -384.689, -299.131);
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))))
           break;
          case 0:
          case 65:
          case 71:
          case 9:
          if(_GLF_DEAD(false))
           continue;
          case 99:
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-7.3, -91.63)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), mat2(1.0) * (vec2(vec2(injectionSwitch))))))).x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             break;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_DEAD(false))
               barrier();
              continue;
             }
            if(_GLF_DEAD(false))
             return;
            return;
           }
          if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
           continue;
          case 4:
          if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2961.1560))))) > injectionSwitch.y))))
           barrier();
          if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
           continue;
          if(_GLF_DEAD(false))
           break;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            barrier();
           }
          if(true)
           {
            if(_GLF_DEAD(false))
             return;
            switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
             {
              case 76:
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 barrier();
                break;
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               continue;
              ;
              if(_GLF_DEAD(false))
               barrier();
              case 53:
              if(_GLF_DEAD(false))
               return;
              outerProduct(vec2(-2.3, -7576.1811), _GLF_IDENTITY(vec4(-74.52, -6881.0886, -2.4, -7.5), min(vec4(-74.52, -6881.0886, -2.4, -7.5), _GLF_IDENTITY(vec4(-74.52, -6881.0886, -2.4, -7.5), (true ? vec4(-74.52, -6881.0886, -2.4, -7.5) : _GLF_FUZZED(vec4(1.7, 0.0, -2.2, 9.8)))))));
              case 0:
              packUnorm2x16(vec2(_GLF_IDENTITY(6.2, min(_GLF_IDENTITY(6.2, max(6.2, _GLF_IDENTITY(6.2, 1.0 * (_GLF_IDENTITY(6.2, max(6.2, 6.2)))))), 6.2)), -5.4));
              case 60:
              mat4x2(_GLF_IDENTITY(-1.6, (true ? _GLF_IDENTITY(-1.6, min(_GLF_IDENTITY(-1.6, 0.0 + (-1.6)), _GLF_IDENTITY(-1.6, clamp(-1.6, -1.6, -1.6)))) : _GLF_FUZZED(0.4))), _GLF_IDENTITY(5.5, (5.5) + 0.0), -205.206, -680.445, 44.32, 2.3, 8.5, 59.30);
              if(_GLF_DEAD(false))
               continue;
              case 64:
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  continue;
                 }
                if(_GLF_DEAD(false))
                 continue;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   return;
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                  barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)))))
                   return;
                  return;
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
                 continue;
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  break;
                 }
                barrier();
                if(_GLF_DEAD(false))
                 break;
               }
              if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               continue;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              break;
              default:
              if(_GLF_DEAD(false))
               barrier();
              1;
              if(_GLF_DEAD(false))
               break;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 break;
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  break;
                 }
                if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                 barrier();
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  break;
                  if(_GLF_DEAD(false))
                   break;
                 }
                barrier();
               }
             }
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              break;
             }
            if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
             barrier();
            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))))))))
             continue;
           }
          break;
          if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
           break;
          default:
          _GLF_IDENTITY(1, max(1, 1));
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            barrier();
            if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), (bool(bvec2(_GLF_DEAD(false), false))) || false)))
             barrier();
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
           break;
         }
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         {
          if(_GLF_DEAD(false))
           barrier();
          barrier();
         }
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
       }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       vec3(44.33, -8.9, 4.9);
       if(_GLF_DEAD(false))
        {
         switch(_GLF_SWITCH(0))
          {
           case 56:
           uvec3(100711u, 66500u, 71382u);
           case 1:
           subgroup_size;
           case 0:
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            break;
           case 72:
           case 40:
           case 91:
           case 34:
           case 8:
           if(_GLF_DEAD(false))
            {
             switch(_GLF_SWITCH(0))
              {
               case 0:
               case 29:
               case 86:
               case 48:
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, max(1, 1))])).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(446.785)))))))
                return;
               case 89:
               case 69:
               continue;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec3(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), false, true)))))
                  return;
                 barrier();
                }
               case 27:
               case 95:
               if(_GLF_DEAD(false))
                barrier();
               break;
               default:
               1;
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                return;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                continue;
              }
            }
           case 57:
           case 62:
           case 22:
           if(_GLF_DEAD(false))
            continue;
           case 47:
           barrier();
           break;
           if(_GLF_DEAD(false))
            barrier();
           default:
           if(_GLF_DEAD(false))
            barrier();
           1;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), true, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), true, true)), false, false))))))))))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        return;
       bvec2 _GLF_SWITCH_1_0v[84], _GLF_SWITCH_1_1v[42];
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), round(length(normalize(cos(0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))))
        barrier();
       if(_GLF_DEAD(false))
        continue;
       (mat3x4(_GLF_IDENTITY(-6283.8496, 1.0 * (-6283.8496)), -9.3, -17.93, -39.16, 2420.5636, -7549.6174, 290.913, 0.1, 6660.4100, 39.62, _GLF_IDENTITY(947.164, mix(float(947.164), float(_GLF_FUZZED((false ? 71.31 : 392.985))), bool(false))), 17.63) - fract(0.5));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        continue;
       mat4(-7.0, 6.2, _GLF_IDENTITY(-706.204, float(mat2x3(-706.204, sin(0.0), 1.0, abs(0.0), 1.0, 1.0))), _GLF_IDENTITY(-9987.2756, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-954.247, clamp(-954.247, -954.247, -954.247)))), float(-9987.2756), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), bool(bvec3(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), -9.4, -1.3, -980.558, 6167.0942, 9.5, _GLF_IDENTITY(-4.6, (false ? _GLF_FUZZED(vec3(-0.6, -8.0, 3.1)[2]) : -4.6)), -3356.4861, _GLF_IDENTITY(541.576, (541.576) + 0.0), 1.9, 6.7, 86.79, 6736.4193);
       mat3 _GLF_SWITCH_1_2v, _GLF_SWITCH_1_3v, _GLF_SWITCH_1_4v;
       ivec4(97616, _GLF_IDENTITY(97542, (97542) >> 0), 26415, -59412);
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     case 0:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     case 13:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     case 14:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     case 26:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false)))))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false)))))))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false)))))))), false), true), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false)))))))), false), true), true))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     atomicStore(checker[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)], read, 4, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(-17076) : 64)), 4);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     case 18:
     if(_GLF_DEAD(false))
      barrier();
     case 77:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     subgroupAll(true);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
      }
     default:
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && true, bool(bvec4((false) && true, true, false, true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false) && true, bool(bvec4((false) && true, _GLF_IDENTITY(true, ! (! (true))), false, true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((false) && true, bool(bvec4((false) && true, true, false, true))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)), false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), true)), false || (bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), true)))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (false) || _GLF_IDENTITY(false, bool(bool(false))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bool(! (false))))), (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))) && _GLF_IDENTITY(true, (true) || false))))) || false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     1;
    }
  }
}
