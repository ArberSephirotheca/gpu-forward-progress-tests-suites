#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (true ? _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)) : _GLF_FUZZED(uvec3(26685u, 186788u, 45621u)))), (_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(42729u, 157272u, 96988u)) : gl_WorkGroupID))) | (gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(52857u, 0u | (52857u)), 81165u, 36043u)) : gl_WorkGroupID))) | _GLF_IDENTITY((gl_WorkGroupID), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((gl_WorkGroupID)), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u), uvec3(0u)), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(uvec3(0u), uvec3(_GLF_IDENTITY(0u, max(0u, 0u)))))), max(_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(uvec3(0u), uvec3(0u)))), ~ (~ (uvec3(uvec3(_GLF_IDENTITY(uvec3(0u), uvec3(0u))))))), uvec3(uvec3(_GLF_IDENTITY(uvec3(0u), uvec3(0u)))))))) + (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), max(_GLF_IDENTITY((gl_WorkGroupID), ((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))) | (gl_WorkGroupID)) : _GLF_FUZZED(uvec3(97901u, 172271u, 135918u)))))) ^ (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))))), _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) << uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))))), ~ (~ ((gl_WorkGroupID))))), _GLF_IDENTITY(clamp(~ (_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), (true ? _GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, 0u) | ((gl_WorkGroupID))) : _GLF_FUZZED(uvec3(141813u, 158943u, 74784u)))), ~ (~ ((gl_WorkGroupID))))), ~ (_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))))), uvec3(uvec3(clamp(~ (_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), (true ? _GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, 0u) | ((gl_WorkGroupID))) : _GLF_FUZZED(uvec3(141813u, 158943u, 74784u)))), ~ (~ ((gl_WorkGroupID))))), ~ (_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID))))))))))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(~ ((gl_WorkGroupID)), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u)), uvec3(_GLF_IDENTITY(uvec3(uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))), max(uvec3(uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))), uvec3(uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), _GLF_IDENTITY(uvec3(0u), min(uvec3(0u), uvec3(0u)))))))))), min((_GLF_IDENTITY(uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u)), uvec3(_GLF_IDENTITY(uvec3(uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))), max(uvec3(uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))), uvec3(uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), _GLF_IDENTITY(uvec3(0u), min(uvec3(0u), uvec3(0u)))))))))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u)), uvec3(_GLF_IDENTITY(uvec3(uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))), max(uvec3(uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))), uvec3(uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), _GLF_IDENTITY(uvec3(0u), min(uvec3(0u), uvec3(0u)))))))))))) + (_GLF_IDENTITY(~ ((gl_WorkGroupID)), (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupID), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))), max(_GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), (gl_WorkGroupID))), (gl_WorkGroupID))))), ((~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))), max(_GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), (gl_WorkGroupID))), (gl_WorkGroupID)))))) - uvec3(0u, 0u, 0u)))), clamp(~ (_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID))))), _GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID))))), _GLF_IDENTITY(uvec3(uvec3(~ (_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID))))))), (false ? _GLF_FUZZED(uvec3(195527u, 39546u, 39851u)) : uvec3(uvec3(~ (_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))))))))), ~ (_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))))))) / uvec3(1u, 1u, 1u))))))))).x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u) * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))) * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id) + 0u), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, clamp((subgroup_local_id) | 0u, (subgroup_local_id) | 0u, (subgroup_local_id) | 0u))), subgroup_local_id)), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) + 0u), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), subgroup_size)) + subgroup_local_id)) / 1u)), _GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), clamp(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), _GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) ^ 0u))))), min(((_GLF_IDENTITY(0u, 0u ^ (0u)) << _GLF_IDENTITY(uint(1u), uint(1u)))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), min((0u << _GLF_IDENTITY(uint(1u), uint(1u))), (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))))) << 0u), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(1u), uint(1u)), (true ? 0u << _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(true, true))))) ? 0u << _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))) | (workgroup_id)))))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(1u), uint(1u)), (true ? 0u << _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(workgroup_id)))))) | 0u)), (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), 0u, 0u)), (uint(_GLF_IDENTITY(uvec4(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)) + subgroup_local_id, (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), min(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), _GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(num_workgroup))))))), uint(uvec4(_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(uint(1u), (true ? uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(num_workgroup))))), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) + 0u) | _GLF_IDENTITY((1u & 1u), min((1u & 1u), (1u & _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(1u, 1u))) * 1u))))), 0u, 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, min(1u, 1u))))), (_GLF_IDENTITY(uint(1u), min(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(1u)))))) | (_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(1u)) << 0u)) << 0u))))), 0u, 0u), (_GLF_IDENTITY(uvec4(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)) + subgroup_local_id, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(uvec4(_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(uint(1u), (true ? uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(num_workgroup))))), (_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) + 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) + 0u, ((_GLF_IDENTITY(1u, ~ (~ (1u)))) + 0u) ^ 0u), (_GLF_IDENTITY(1u, ~ (~ (1u)))) + 0u))) | _GLF_IDENTITY((1u & 1u), min((1u & 1u), (1u & _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(1u, 1u))) * 1u))))), 0u, 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, min(1u, 1u))))), (_GLF_IDENTITY(uint(1u), min(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(1u)))))) | (_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(1u)) << 0u)) << 0u))))), 0u, 0u), (uvec4(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)) + subgroup_local_id, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(uvec4(_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(uint(1u), (true ? uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(num_workgroup))))), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) + 0u) | _GLF_IDENTITY((1u & 1u), min((1u & 1u), (1u & _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(1u, 1u))) * 1u))))), 0u, 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, min(1u, 1u))))), (_GLF_IDENTITY(uint(1u), min(uint(1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, 1u)), (_GLF_IDENTITY(uint(uvec2(1u, 1u)), ~ (~ (uint(uvec2(1u, 1u)))))) ^ 0u))), 0u ^ (uint(1u)))))) | (_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(1u)) << 0u)) << 0u))))), 0u, 0u)) >> uvec4(0u, 0u, 0u, 0u))) ^ uvec4(0u, 0u, 0u, 0u)))) >> 0u));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (uint(0u))), uint(0u)))), 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, min(0u, 0u))), uint(uint(uint(0u)))), uint(0u))), ((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, min(0u, 0u))), uint(uint(uint(0u)))), uint(0u)))) >> 0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) + 0u), 0u))) | (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (_GLF_IDENTITY(0u, 0u + (0u)) << _GLF_IDENTITY(uint(0u), uint(0u)))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size))) ^ 0u), subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), uint(uvec3(clamp(subgroup_size, subgroup_size, subgroup_size), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, ~ (~ (0u))))))))), uint(uint(uint(_GLF_IDENTITY(0u, (0u) >> 0u))))), uint(0u)))), 0u, 0u))) | (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))))))) + ((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), _GLF_IDENTITY(uvec2(uvec3(_GLF_IDENTITY(uvec2(subgroup_size, 0u), max(uvec2(subgroup_size, 0u), uvec2(subgroup_size, 0u))), 0u)), max(uvec2(uvec3(_GLF_IDENTITY(uvec2(subgroup_size, 0u), max(uvec2(subgroup_size, 0u), uvec2(subgroup_size, 0u))), 0u)), uvec2(uvec3(_GLF_IDENTITY(uvec2(subgroup_size, 0u), max(uvec2(subgroup_size, 0u), uvec2(subgroup_size, 0u))), 0u))))))), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) - (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))))), 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) / 1u)), uvec3(uvec4(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), _GLF_IDENTITY(uvec2(uvec3(_GLF_IDENTITY(uvec2(subgroup_size, 0u), max(uvec2(subgroup_size, 0u), _GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) - uvec2(0u, 0u)))), 0u)), max(uvec2(uvec3(_GLF_IDENTITY(uvec2(subgroup_size, 0u), max(uvec2(subgroup_size, 0u), uvec2(subgroup_size, 0u))), 0u)), uvec2(uvec3(_GLF_IDENTITY(uvec2(subgroup_size, 0u), max(uvec2(subgroup_size, 0u), uvec2(subgroup_size, 0u))), 0u))))))), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))), uint(uvec4(0u, 1u, 1u, 0u)))) >> 0u))))), 0u, 0u), 0u)))), _GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (false ? _GLF_FUZZED(workgroup_base) : clamp(subgroup_size, subgroup_size, subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (false ? _GLF_FUZZED(workgroup_base) : clamp(subgroup_size, subgroup_size, subgroup_size))), ~ (~ (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (false ? _GLF_FUZZED(workgroup_base) : clamp(subgroup_size, subgroup_size, subgroup_size))))))) | (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (false ? _GLF_FUZZED(workgroup_base) : clamp(subgroup_size, subgroup_size, subgroup_size))))))) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), uint(0u)))), 0u, 0u))) | (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), 0u, 0u))), (true ? (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (false ? _GLF_FUZZED(workgroup_base) : clamp(subgroup_size, subgroup_size, subgroup_size))))) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), uint(0u)))), 0u, 0u))) | (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), 0u, 0u))) : _GLF_FUZZED(atomicMax(subgroup_id, workgroup_size)))))), _GLF_IDENTITY((true ? workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), uint(uvec3(_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))), uint(uvec3(clamp(subgroup_size, subgroup_size, subgroup_size), (0u << _GLF_IDENTITY(uint(7u), uint(7u))), _GLF_IDENTITY(1u, 0u ^ (1u))))), 1u, 0u))))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | 0u)), uint(uint(_GLF_IDENTITY(uint(0u), clamp(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u), uint(0u), uint(0u)))))), uint(0u)))), 0u, 0u))) | (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))) : _GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(0u, min(0u, 0u)), ~ (~ (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(0u, min(0u, 0u))))), false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(0u, min(0u, 0u))))))), uint(0u)))), 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))) : _GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(0u, min(0u, 0u)), ~ (~ (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(0u, min(0u, 0u))))), false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(0u, min(0u, 0u))))))), uint(0u)))), 0u, 0u))) >> 0u)))) : _GLF_FUZZED(workgroup_id)), (false ? _GLF_FUZZED(uvec3(12363u, 35651u, 5590u)[0]) : _GLF_IDENTITY((true ? workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), uint(uvec3(_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))), uint(uvec3(clamp(subgroup_size, subgroup_size, subgroup_size), (0u << _GLF_IDENTITY(uint(7u), uint(7u))), _GLF_IDENTITY(1u, 0u ^ (1u))))), 1u, 0u))))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | 0u)), uint(uint(_GLF_IDENTITY(uint(0u), clamp(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u), uint(0u), uint(0u)))))), uint(0u)))), 0u, 0u))) | (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))) : _GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(0u, min(0u, 0u)), ~ (~ (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(0u, min(0u, 0u))))), false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(0u, min(0u, 0u))))))), uint(0u)))), 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))) : _GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(0u, min(0u, 0u)), ~ (~ (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(0u, min(0u, 0u))))), false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(0u, min(0u, 0u))))))), uint(0u)))), 0u, 0u))) >> 0u)))) : _GLF_FUZZED(workgroup_id)), ((true ? workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), uint(uvec3(_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))), uint(uvec3(clamp(subgroup_size, subgroup_size, subgroup_size), (0u << _GLF_IDENTITY(uint(7u), uint(7u))), _GLF_IDENTITY(1u, 0u ^ (1u))))), 1u, 0u))))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | 0u)), uint(uint(_GLF_IDENTITY(uint(0u), clamp(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u), uint(0u), uint(0u)))))), uint(0u)))), 0u, 0u))) | (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))) : _GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(0u, min(0u, 0u)), ~ (~ (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(0u, min(0u, 0u))))), false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(0u, min(0u, 0u))))))), uint(0u)))), 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))) : _GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(0u, min(0u, 0u)), ~ (~ (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(0u, min(0u, 0u))))), false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(0u, min(0u, 0u))))))), uint(0u)))), 0u, 0u))) >> 0u)))) : _GLF_FUZZED(workgroup_id))) * 1u)))) + ((subgroup_local_id + 1) % subgroup_size), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u)))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u), _GLF_IDENTITY(0u, (0u) + 0u), 0u)), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, clamp((_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u)), 1u)))), _GLF_IDENTITY(0u, (0u) + 0u), 0u))) | 0u)), uint(0u)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) << _GLF_IDENTITY(0u, (0u) | (0u)))) >> 0u), uint(0u)))))), 0u, 0u))) | (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> (_GLF_IDENTITY(0u | 0u, (_GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY(0u, (0u) >> (0u | 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> (0u | 0u)), (true ? _GLF_IDENTITY(0u, (0u) >> (0u | 0u)) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)))), 0u)), clamp(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u))))), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)), 0u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u))))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u)))))) + 0u), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)), 0u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, 0u | ((0u) - 0u))))))), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)), 0u))))))), clamp(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u)))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u), _GLF_IDENTITY(0u, (0u) + 0u), 0u)), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, clamp((_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u)), 1u)))), _GLF_IDENTITY(0u, (0u) + 0u), 0u))) | 0u)), uint(0u)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) << _GLF_IDENTITY(0u, (0u) | (0u)))) >> 0u), uint(0u)))))), 0u, 0u))) | (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> (_GLF_IDENTITY(0u | 0u, (_GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY(0u, (0u) >> (0u | 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> (0u | 0u)), (true ? _GLF_IDENTITY(0u, (0u) >> (0u | 0u)) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)))), 0u)), clamp(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u))))), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)), 0u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u))))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u)))))) + 0u), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)), 0u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, 0u | ((0u) - 0u))))))), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)), 0u))))))), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u)))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u), _GLF_IDENTITY(0u, (0u) + 0u), 0u)), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, clamp((_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u)), 1u)))), _GLF_IDENTITY(0u, (0u) + 0u), 0u))) | 0u)), uint(0u)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) << _GLF_IDENTITY(0u, (0u) | (0u)))) >> 0u), uint(0u)))))), 0u, 0u))) | (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> (_GLF_IDENTITY(0u | 0u, (_GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY(0u, (0u) >> (0u | 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> (0u | 0u)), (true ? _GLF_IDENTITY(0u, (0u) >> (0u | 0u)) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)))), 0u)), clamp(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u))))), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)), 0u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u))))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u)))))) + 0u), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)), 0u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, 0u | ((0u) - 0u))))))), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)), 0u))))))), 0u ^ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u)))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u), _GLF_IDENTITY(0u, (0u) + 0u), 0u)), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, clamp((_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u)), 1u)))), _GLF_IDENTITY(0u, (0u) + 0u), 0u))) | 0u)), uint(0u)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) << _GLF_IDENTITY(0u, (0u) | (0u)))) >> 0u), uint(0u)))))), 0u, 0u))) | (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> (_GLF_IDENTITY(0u | 0u, (_GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY(0u, (0u) >> (0u | 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> (0u | 0u)), (true ? _GLF_IDENTITY(0u, (0u) >> (0u | 0u)) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)))), 0u)), clamp(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u))))), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)), 0u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u))))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u)))))) + 0u), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)), 0u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, 0u | ((0u) - 0u))))))), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)), 0u))))))))), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u)))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u), _GLF_IDENTITY(0u, (0u) + 0u), 0u)), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, clamp((_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u)), 1u)))), _GLF_IDENTITY(0u, (0u) + 0u), 0u))) | 0u)), uint(0u)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) << _GLF_IDENTITY(0u, (0u) | (0u)))) >> 0u), uint(0u)))))), 0u, 0u))) | (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> (_GLF_IDENTITY(0u | 0u, (_GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY(0u, (0u) >> (0u | 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> (0u | 0u)), (true ? _GLF_IDENTITY(0u, (0u) >> (0u | 0u)) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)))), 0u)), clamp(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u))))), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)), 0u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u))))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u)))))) + 0u), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)), 0u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, 0u | ((0u) - 0u))))))), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)), 0u))))))))) + ((subgroup_local_id + 1) % subgroup_size)), ((_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u)))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u), _GLF_IDENTITY(0u, (0u) + 0u), 0u)), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, clamp((_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u)), 1u)))), _GLF_IDENTITY(0u, (0u) + 0u), 0u))) | 0u)), uint(0u)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) << _GLF_IDENTITY(0u, (0u) | (0u)))) >> 0u), uint(0u)))))), 0u, 0u))) | (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> (_GLF_IDENTITY(0u | 0u, (_GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY(0u, (0u) >> (0u | 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> (0u | 0u)), (true ? _GLF_IDENTITY(0u, (0u) >> (0u | 0u)) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)))), 0u)), clamp(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u))))), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)), 0u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u))))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u)))))) + 0u), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)), 0u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, 0u | ((0u) - 0u))))))), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)), 0u))))))), clamp(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u)))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u), _GLF_IDENTITY(0u, (0u) + 0u), 0u)), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, clamp((_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u)), 1u)))), _GLF_IDENTITY(0u, (0u) + 0u), 0u))) | 0u)), uint(0u)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) << _GLF_IDENTITY(0u, (0u) | (0u)))) >> 0u), uint(0u)))))), 0u, 0u))) | (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> (_GLF_IDENTITY(0u | 0u, (_GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY(0u, (0u) >> (0u | 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> (0u | 0u)), (true ? _GLF_IDENTITY(0u, (0u) >> (0u | 0u)) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)))), 0u)), clamp(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u))))), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)), 0u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u))))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u)))))) + 0u), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)), 0u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, 0u | ((0u) - 0u))))))), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)), 0u))))))), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u)))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u), _GLF_IDENTITY(0u, (0u) + 0u), 0u)), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, clamp((_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u)), 1u)))), _GLF_IDENTITY(0u, (0u) + 0u), 0u))) | 0u)), uint(0u)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) << _GLF_IDENTITY(0u, (0u) | (0u)))) >> 0u), uint(0u)))))), 0u, 0u))) | (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> (_GLF_IDENTITY(0u | 0u, (_GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY(0u, (0u) >> (0u | 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> (0u | 0u)), (true ? _GLF_IDENTITY(0u, (0u) >> (0u | 0u)) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)))), 0u)), clamp(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u))))), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)), 0u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u))))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u)))))) + 0u), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)), 0u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, 0u | ((0u) - 0u))))))), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)), 0u))))))), 0u ^ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u)))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u), _GLF_IDENTITY(0u, (0u) + 0u), 0u)), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, clamp((_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u)), 1u)))), _GLF_IDENTITY(0u, (0u) + 0u), 0u))) | 0u)), uint(0u)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) << _GLF_IDENTITY(0u, (0u) | (0u)))) >> 0u), uint(0u)))))), 0u, 0u))) | (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> (_GLF_IDENTITY(0u | 0u, (_GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY(0u, (0u) >> (0u | 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> (0u | 0u)), (true ? _GLF_IDENTITY(0u, (0u) >> (0u | 0u)) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)))), 0u)), clamp(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u))))), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)), 0u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u))))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u)))))) + 0u), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)), 0u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, 0u | ((0u) - 0u))))))), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)), 0u))))))))), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u)))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u), _GLF_IDENTITY(0u, (0u) + 0u), 0u)), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, clamp((_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u, (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) + 0u)), 1u)))), _GLF_IDENTITY(0u, (0u) + 0u), 0u))) | 0u)), uint(0u)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) << _GLF_IDENTITY(0u, (0u) | (0u)))) >> 0u), uint(0u)))))), 0u, 0u))) | (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> (_GLF_IDENTITY(0u | 0u, (_GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY(0u, (0u) >> (0u | 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> (0u | 0u)), (true ? _GLF_IDENTITY(0u, (0u) >> (0u | 0u)) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)))), 0u)), clamp(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u))))), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)), 0u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u))))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u)))))) + 0u), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)), 0u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, 0u | ((0u) - 0u))))))), _GLF_IDENTITY(0u, (0u) >> (0u | 0u)), 0u))))))))) + ((subgroup_local_id + 1) % subgroup_size))) + 0u), uint(uvec4(~ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), min(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), ~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u))))))))) / 1u)), 0u, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), min(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), ~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u))))))))) / 1u)), 0u, 0u)), max(uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), min(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), ~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u))))))))) / 1u)), 0u, 0u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), min(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), ~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u))))))))) / 1u)), 0u, 0u))))))), (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), uint(0u)))), 0u, 0u))) | (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(0u), (uint(0u)) >> 0u), (1u ^ 0u), 0u), uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | (uvec3(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY((uint(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))), 0u)))) >> 0u, (false ? _GLF_FUZZED(packSnorm2x16(injectionSwitch)) : _GLF_IDENTITY((uint(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))), 0u)))) >> 0u, ((uint(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))), 0u)))) >> 0u) | ((uint(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))), 0u)))) >> 0u))))), (1u ^ 0u), 0u)))), max(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(0u), (uint(0u)) >> 0u), (1u ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) * 1u)) << (0u ^ 0u)), (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) / 1u)), min(min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, max(0u, 0u))), (true ? (_GLF_IDENTITY(0u, max(0u, 0u))) : _GLF_FUZZED(subgroup_local_id))) / 1u)), min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / _GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) / 1u)))))), 0u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(0u), (uint(0u)) >> 0u), (1u ^ 0u), 0u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(0u), (uint(0u)) >> 0u), (1u ^ 0u), 0u), clamp(uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | 0u)), (uint(0u)) >> 0u), (1u ^ 0u), 0u), uvec3(_GLF_IDENTITY(uint(0u), (uint(0u)) >> 0u), (1u ^ 0u), 0u), uvec3(_GLF_IDENTITY(uint(0u), (uint(0u)) >> 0u), (1u ^ 0u), 0u))), uvec3(_GLF_IDENTITY(uint(0u), (uint(0u)) >> 0u), (_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, (1u) + 0u))) ^ 0u), 0u)))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) >> 0u), (_GLF_IDENTITY(uint(0u), (uint(0u)) >> 0u)) << 0u), (1u ^ 0u), 0u), uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) * 1u)), uint(uint(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) * 1u)))))), _GLF_IDENTITY(0u, (0u) * 1u)))) | (uvec3(_GLF_IDENTITY(uint(0u), (uint(0u)) >> 0u), (1u ^ 0u), 0u))))))), uint(0u)))), 0u, 0u))))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) % subgroup_size)), 0u, 1u, 1u))))), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), 0u, 0u)), _GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), (56855u & 0u), 0u)))))) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(_GLF_IDENTITY(uint(0u), ~ (~ (_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))))))), uint(0u)), ~ (_GLF_IDENTITY(~ (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), uint(0u))) - 0u))))), (~ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), uint(0u)))) ^ _GLF_IDENTITY(0u, 1u * (0u))))))), 0u, 0u))) | (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), 0u, 0u))), 0u + ((uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)))) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(_GLF_IDENTITY(uint(0u), ~ (~ (_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))))))), uint(0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(_GLF_IDENTITY(uint(0u), ~ (~ (_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))))))), uint(0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(_GLF_IDENTITY(uint(0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), uint(0u))), ~ _GLF_IDENTITY((~ (uint(0u))), ((~ (uint(0u)))) >> _GLF_IDENTITY(0u, max(0u, 0u)))))))))), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(_GLF_IDENTITY(uint(0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u))))), min(~ (_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u))))), ~ (_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))))))))), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(_GLF_IDENTITY(uint(0u), ~ (~ (_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))))))), uint(0u)))) : _GLF_FUZZED(41825u))), ~ (_GLF_IDENTITY(~ (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), min(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), _GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))))), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), _GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(subgroup_local_id) : uint(0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), uint(0u))) - 0u))))), (~ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), uint(0u)))) ^ 0u))))), 0u, 0u))) | (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (0u << _GLF_IDENTITY(uint(0u), uint(0u))) : _GLF_FUZZED(workgroup_base)))), 0u, 0u))))))) + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(0u, max(0u, 0u))))), uint(0u)))), 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), uint(0u)))), 0u, 0u))) | (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), 0u, 0u)), ~ (~ (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), 0u, 0u)))))))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) - (0u | _GLF_IDENTITY(0u, (0u) - 0u)))))), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), uint(0u)))), 0u, 0u))) | (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u)))))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (1u | 1u) * (0u))) << (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), 0u))))) + ((subgroup_local_id + 1) % subgroup_size)) - (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u), uint(0u))))));
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, (4) | (4)));
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))))))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec2(0.0, 0.0))))), 1.0, 0.0), min(vec4(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec2(0.0, 0.0))))), 1.0, 0.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec2(0.0, 0.0))))), 1.0, 0.0), (vec4(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec2(0.0, 0.0))))), 1.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)))))).y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))) && true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false)))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), false || (bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), ! (! (bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))))) && true)), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0))))).y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), false || (bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))))))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), false || (bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, bool(bvec4(_injected_loop_counter > 0, true, false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true) && _GLF_IDENTITY(true, (true) || false)))))))))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), bool(bvec2(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), bool(bvec4(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true, true, true))), true)))))))) && true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - log(sqrt(1.0))) < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), false || (bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))))))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(distance(8497.3658, -163.367))))) / 1.0))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), (_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)) && true)))))))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(_injected_loop_counter)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), false || (bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.4))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, bool(_GLF_IDENTITY(bvec3(_injected_loop_counter > 0, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_injected_loop_counter > 0, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_injected_loop_counter > 0, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), _GLF_IDENTITY(true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), false || (bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), false || (bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), false || (bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), false || (bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))))), false, false), false)))))))))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, exp(0.0), 1.0, 1.0, round(length(normalize(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 1.0, 1.0, 0.0, 1.0, 0.0), _GLF_IDENTITY((mat4x3(injectionSwitch, 0.0, exp(0.0), 1.0, 1.0, round(length(normalize(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 1.0, 1.0, 0.0, 1.0, 0.0)) * mat4(1.0), transpose(transpose((mat4x3(injectionSwitch, 0.0, exp(0.0), 1.0, 1.0, round(length(normalize(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 1.0, 1.0, 0.0, 1.0, 0.0)) * mat4(1.0)))))), (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, exp(0.0), 1.0, 1.0, round(length(normalize(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 1.0, 1.0, 0.0, 1.0, 0.0), _GLF_IDENTITY((mat4x3(injectionSwitch, 0.0, exp(0.0), 1.0, 1.0, round(length(normalize(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 1.0, 1.0, 0.0, 1.0, 0.0)) * mat4(1.0), transpose(transpose((mat4x3(injectionSwitch, 0.0, exp(0.0), 1.0, 1.0, round(length(normalize(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 1.0, 1.0, 0.0, 1.0, 0.0)) * mat4(1.0))))))) + vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 0.0, log(1.0), 1.0, 1.0, sqrt(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0), mat3(1.0) * (mat4x3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 0.0, log(1.0), 1.0, 1.0, sqrt(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))) && true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), false || _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))))))))), ((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))))))))) && true)))))), ! (! ((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))) && true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), false || (bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), max(~ (0), ~ (0)))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(48.63)), bvec2(true, false))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))))))))))))))) && true))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), ! (! (bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))))) && true)), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0))))).y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), false || (bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))))))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), false || (bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, bool(bvec4(_injected_loop_counter > 0, true, false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true) && _GLF_IDENTITY(true, (true) || false)))))))))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), bool(bvec2(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), bool(bvec4(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true, true, true))), true)))))))) && true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - log(sqrt(1.0))) < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), false || (bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))))))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(distance(8497.3658, -163.367))))) / 1.0))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), (_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)) && true)))))))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(_injected_loop_counter)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), false || (bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.4))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, bool(_GLF_IDENTITY(bvec3(_injected_loop_counter > 0, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_injected_loop_counter > 0, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_injected_loop_counter > 0, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), _GLF_IDENTITY(true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), false || (bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), false || (bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), false || (bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), false || (bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))))), false, false), false)))))))))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, exp(0.0), 1.0, 1.0, round(length(normalize(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 1.0, 1.0, 0.0, 1.0, 0.0), _GLF_IDENTITY((mat4x3(injectionSwitch, 0.0, exp(0.0), 1.0, 1.0, round(length(normalize(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 1.0, 1.0, 0.0, 1.0, 0.0)) * mat4(1.0), transpose(transpose((mat4x3(injectionSwitch, 0.0, exp(0.0), 1.0, 1.0, round(length(normalize(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 1.0, 1.0, 0.0, 1.0, 0.0)) * mat4(1.0)))))), (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, exp(0.0), 1.0, 1.0, round(length(normalize(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 1.0, 1.0, 0.0, 1.0, 0.0), _GLF_IDENTITY((mat4x3(injectionSwitch, 0.0, exp(0.0), 1.0, 1.0, round(length(normalize(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 1.0, 1.0, 0.0, 1.0, 0.0)) * mat4(1.0), transpose(transpose((mat4x3(injectionSwitch, 0.0, exp(0.0), 1.0, 1.0, round(length(normalize(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 1.0, 1.0, 0.0, 1.0, 0.0)) * mat4(1.0))))))) + vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 0.0, log(1.0), 1.0, 1.0, sqrt(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0), mat3(1.0) * (mat4x3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 0.0, log(1.0), 1.0, 1.0, sqrt(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))) && true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), false || _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))))))))), ((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))))))))) && true)))))), ! (! ((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))) && true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), false || (bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), max(~ (0), ~ (0)))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(48.63)), bvec2(true, false))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))))))))))))))) && true)))))))))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) - 0)) >> 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) - 0)) >> 0), (_GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) - 0)) >> 0)) / 1))))
    {
     atomicStore(checker[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))], read, 4, 64, 4);
    }
   subgroupAll(true);
  }
}
