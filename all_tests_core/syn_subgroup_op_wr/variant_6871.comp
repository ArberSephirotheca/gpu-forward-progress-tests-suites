#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_6 {
 uvec4 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_4 {
 uint _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_3 {
 vec2 _f0;
 uvec4 _f1;
 mat4x2 _f2;
 vec3 _f3;
 uint _f4;
} ;

struct _GLF_struct_2 {
 mat2x4 _f0;
} ;

struct _GLF_struct_1 {
 uvec3 _f0;
 uint _f1;
 mat4 _f2;
 uvec4 _f3;
 uint _f4;
 uvec3 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_0 {
 uint workgroup_id;
 mat2 _f0;
 ivec2 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_5 {
 uvec2 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_3 _f4;
 _GLF_struct_4 _f5;
} ;

struct _GLF_struct_7 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 mat4 _f2;
 uint _f3;
 mat4x3 _f4;
 uint _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_DEAD(false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(false, true, true)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(135240u, 18486u, 149042u)) : uvec3(0u, 0u, 0u)))) >> (uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u))) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u)))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> (_GLF_IDENTITY(uvec3(1u, 1u, 1u), ~ (~ (uvec3(1u, 1u, 1u)))) ^ uvec3(1u, 1u, 1u)))) | uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) * 1u), 0u)), 0u, 0u))))), max(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), (false ? _GLF_FUZZED(uvec3(135240u, 18486u, 149042u)) : uvec3(0u, 0u, 0u)))) >> (uvec3(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u)))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) * 1u), 0u)), 0u, 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(135240u, 18486u, 149042u), (uvec3(135240u, 18486u, 149042u)) - uvec3(0u, 0u, 0u))) : uvec3(0u, 0u, 0u)))) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u)))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) * 1u), 0u)), 0u, 0u))))), min((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), (false ? _GLF_FUZZED(uvec3(135240u, 18486u, 149042u)) : uvec3(0u, 0u, 0u)))) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u)))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) * 1u), 0u)), 0u, 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), (false ? _GLF_FUZZED(uvec3(135240u, 18486u, 149042u)) : uvec3(0u, 0u, 0u)))) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u)))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) * 1u), 0u)), 0u, 0u))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(135240u, 18486u, 149042u), max(uvec3(135240u, 18486u, 149042u), _GLF_IDENTITY(uvec3(135240u, 18486u, 149042u), (_GLF_IDENTITY(uvec3(135240u, 18486u, 149042u), uvec3(uvec3(uvec3(135240u, 18486u, 149042u))))) - uvec3(0u, 0u, 0u))))) : uvec3(0u, 0u, 0u)))) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u)))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) * 1u), 0u)), 0u, 0u)))))), (~ ((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), (false ? _GLF_FUZZED(uvec3(135240u, 18486u, 149042u)) : uvec3(0u, 0u, 0u)))) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u)))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) * 1u), 0u)), 0u, 0u))))))) | uvec3(0u, 0u, 0u))))))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(135240u, 18486u, 149042u)) : uvec3(0u, 0u, 0u)))) >> (_GLF_IDENTITY(uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u)), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), ~ (~ (uvec3(1u, 1u, 1u))))))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) * 1u), 0u)), 0u, 0u))))), ((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(135240u, 18486u, 149042u)), (_GLF_FUZZED(uvec3(135240u, 18486u, 149042u))) ^ uvec3(0u, 0u, 0u)) : uvec3(0u, 0u, 0u)))) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u))), max((_GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(135240u, 18486u, 149042u)), (_GLF_FUZZED(uvec3(135240u, 18486u, 149042u))) ^ uvec3(0u, 0u, 0u)) : uvec3(0u, 0u, 0u)))) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(135240u, 18486u, 149042u)), (_GLF_FUZZED(uvec3(135240u, 18486u, 149042u))) ^ uvec3(0u, 0u, 0u)) : uvec3(0u, 0u, 0u)))) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u)))))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) * 1u), 0u)), 0u, 0u)))))) * uvec3(1u, 1u, 1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(135240u, 18486u, 149042u)) : uvec3(0u, 0u, 0u), min(false ? _GLF_FUZZED(uvec3(135240u, 18486u, 149042u)) : uvec3(0u, 0u, 0u), _GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(135240u, 18486u, 149042u)) : uvec3(0u, 0u, 0u), clamp(false ? _GLF_FUZZED(uvec3(135240u, 18486u, 149042u)) : uvec3(0u, 0u, 0u), false ? _GLF_FUZZED(uvec3(135240u, 18486u, 149042u)) : uvec3(0u, 0u, 0u), false ? _GLF_FUZZED(uvec3(135240u, 18486u, 149042u)) : uvec3(0u, 0u, 0u)))))))) >> (uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u))) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u)))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))) | uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) * 1u), 0u)), 0u, 0u))))), max(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), (false ? _GLF_FUZZED(uvec3(135240u, 18486u, 149042u)) : uvec3(0u, 0u, 0u)))) >> _GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u))), ((uvec3(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u)))) << uvec3(0u, 0u, 0u))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) * 1u), 0u)), 0u, 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), (false ? _GLF_FUZZED(uvec3(135240u, 18486u, 149042u)) : uvec3(0u, 0u, 0u)))) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u)))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) * 1u), 0u)), 0u, 0u))))), min((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), (false ? _GLF_FUZZED(uvec3(135240u, 18486u, 149042u)) : uvec3(0u, 0u, 0u)))) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(_GLF_IDENTITY(7u, ~ (~ (7u))))))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) * 1u), 0u)), 0u, 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) * 1u), 0u)), 0u, 0u)), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) * 1u), 0u)), 0u, 0u)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), (false ? _GLF_FUZZED(uvec3(135240u, 18486u, 149042u)) : uvec3(0u, 0u, 0u)))) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u)))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) - 0u) * 1u), 0u)), 0u, 0u))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), (false ? _GLF_FUZZED(uvec3(135240u, 18486u, 149042u)) : uvec3(0u, 0u, 0u)))) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u)))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) * 1u), 0u)), 0u, 0u)))))), (~ ((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), (false ? _GLF_FUZZED(uvec3(135240u, 18486u, 149042u)) : uvec3(0u, 0u, 0u)))) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u)))) ^ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) * 1u), 0u)), 0u, _GLF_IDENTITY(0u, (0u) << 0u)))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) * 1u), 0u)), 0u, _GLF_IDENTITY(0u, (0u) << 0u)))))))))) | uvec3(0u, 0u, 0u))))))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(135240u, 18486u, 149042u)) : uvec3(0u, 0u, 0u)))) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY(uvec3(7u), min(_GLF_IDENTITY(uvec3(7u), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(7u), (uvec3(7u)) >> uvec3(0u, 0u, 0u))), (true ? uvec3(_GLF_IDENTITY(uvec3(7u), (uvec3(7u)) >> uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(138521u, 25383u, 42998u)))))), _GLF_IDENTITY(uvec3(7u), max(uvec3(7u), uvec3(7u)))))))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) * 1u), 0u)), 0u, 0u))))), ((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(135240u, 18486u, 149042u)), (_GLF_FUZZED(uvec3(135240u, 18486u, _GLF_IDENTITY(149042u, (149042u) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))) ^ uvec3(0u, 0u, 0u)) : uvec3(0u, 0u, 0u)))) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u)))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) * 1u), 0u)), 0u, 0u), min(uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) * 1u), 0u)), 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) * 1u), 0u)), 0u, 0u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) * 1u), 0u)), 0u, 0u), max(uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) * 1u), 0u)), 0u, 0u), uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) * 1u), 0u)), 0u, 0u)))))))))))) * uvec3(1u, 1u, 1u)))) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))))) >> uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), ~ (~ (max(gl_WorkGroupSize, gl_WorkGroupSize)))), (_GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), ~ (~ (max(gl_WorkGroupSize, gl_WorkGroupSize))))) + _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u)))))), (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u))), uvec3(uvec3((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)))) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u))))))))))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))))), ~ (_GLF_IDENTITY(~ ((~ (max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)))))), clamp(~ ((~ (max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)))))), ~ ((~ (max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)))))), ~ ((~ (max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)))))))))), min(~ _GLF_IDENTITY((~ (max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))))), ~ (_GLF_IDENTITY(~ ((~ (max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)))))), clamp(~ ((~ (max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)))))), ~ ((~ (max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)))))), ~ ((~ (max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)))))))))), ~ _GLF_IDENTITY((~ (max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))))), ~ (_GLF_IDENTITY(~ ((~ (max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)))))), clamp(~ ((~ (max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)))))), ~ ((~ (max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)))))), ~ ((~ (max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)))))))))))))) : _GLF_FUZZED(uvec3(136541u, 67324u, 11898u))))), uvec3(0u, 0u, 0u) | (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(133830u, 122948u, 23652u)))), gl_WorkGroupSize)), (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), ~ (~ (max(gl_WorkGroupSize, gl_WorkGroupSize))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)))))), ~ (~ (max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))))))), max(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)))))), ~ (~ (max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))))))), _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)))))), ~ (~ (max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))))))))) : _GLF_FUZZED(uvec3(136541u, 67324u, 11898u)))))))).x, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], min(gl_WorkGroupSize[0], gl_WorkGroupSize[0])), gl_WorkGroupSize[1], gl_WorkGroupSize[2])), _GLF_IDENTITY(_GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), ~ (~ (max(gl_WorkGroupSize, gl_WorkGroupSize)))), (_GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), ~ (~ (max(gl_WorkGroupSize, gl_WorkGroupSize))))) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], min(gl_WorkGroupSize[0], gl_WorkGroupSize[0])), gl_WorkGroupSize[1], gl_WorkGroupSize[2])), _GLF_IDENTITY(_GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), ~ (~ (max(gl_WorkGroupSize, gl_WorkGroupSize)))), (_GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), ~ (~ (max(gl_WorkGroupSize, gl_WorkGroupSize))))) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], min(gl_WorkGroupSize[0], gl_WorkGroupSize[0])), gl_WorkGroupSize[1], gl_WorkGroupSize[2])), _GLF_IDENTITY(_GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), ~ (~ (max(gl_WorkGroupSize, gl_WorkGroupSize)))), (_GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), ~ (~ (max(gl_WorkGroupSize, gl_WorkGroupSize))))) + uvec3(0u, 0u, 0u)))) >> uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)), (gl_WorkGroupSize) << uvec3(0u, 0u, 0u))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u))), uvec3(uvec3((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)))))), (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u))))))))))), ~ (~ (max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))))))) : _GLF_FUZZED(uvec3(136541u, _GLF_IDENTITY(67324u, (false ? _GLF_FUZZED(subgroup_id) : 67324u)), 11898u))))), uvec3(0u, 0u, 0u) | (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), ~ (~ (max(gl_WorkGroupSize, gl_WorkGroupSize))))), (true ? _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)))))), ~ (~ (max(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))), (gl_WorkGroupSize) | _GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3((gl_WorkGroupSize)), uvec3(0u, 0u, 0u) + (uvec3((gl_WorkGroupSize))))), (uvec3(_GLF_IDENTITY(uvec3((gl_WorkGroupSize)), uvec3(0u, 0u, 0u) + (uvec3((gl_WorkGroupSize)))))) | (uvec3(_GLF_IDENTITY(uvec3((gl_WorkGroupSize)), uvec3(0u, 0u, 0u) + (uvec3((gl_WorkGroupSize)))))))))))))) : _GLF_FUZZED(uvec3(136541u, 67324u, 11898u)))))))).x) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u))), uint(5u)))), ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec4(169148u, 170459u, 197373u, 124955u)[2], min(uvec4(169148u, 170459u, 197373u, 124955u)[2], uvec4(169148u, 170459u, 197373u, 124955u)[2]))) : ~ (gl_WorkGroupSize.x)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_struct_5(uvec2(1u), _GLF_struct_0(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | (0u)), 0u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 1u, 1u)), _GLF_IDENTITY((uint(uvec3(1u, 1u, 1u))) | (uint(uvec3(1u, 1u, 1u))), ((uint(uvec3(1u, 1u, 1u))) | (uint(uvec3(1u, _GLF_IDENTITY(1u, (1u) + 0u), 1u)))) ^ 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 1u, 1u)), _GLF_IDENTITY((uint(uvec3(1u, 1u, 1u))) | (uint(uvec3(1u, 1u, 1u))), ((uint(uvec3(1u, 1u, 1u))) | (uint(uvec3(1u, 1u, 1u)))) ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 1u, 1u)), _GLF_IDENTITY((uint(uvec3(1u, 1u, 1u))) | (uint(uvec3(1u, 1u, 1u))), ((uint(uvec3(1u, 1u, 1u))) | (uint(uvec3(1u, 1u, 1u)))) ^ 0u))), uint(uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 1u, 1u)), _GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | 0u)) | (1u)), 1u, 1u))) | (uint(uvec3(1u, 1u, 1u))), ((uint(uvec3(1u, 1u, 1u))) | (uint(uvec3(1u, 1u, 1u)))) ^ 0u))), 0u, 1u)))) * 1u), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 1u, 1u)), _GLF_IDENTITY((uint(uvec3(1u, 1u, 1u))) | (uint(uvec3(1u, 1u, 1u))), _GLF_IDENTITY(((uint(uvec3(1u, 1u, 1u))) | (uint(_GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u | (1u)), 1u))), min(_GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u | (1u)), 1u))), (_GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u | (1u)), 1u))), (false ? _GLF_FUZZED(uvec3(39361u, 115846u, 195346u)) : uvec3(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u | (1u)), 1u)))))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u | (1u)), 1u))), (uvec3(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u | (1u)), 1u)))) ^ uvec3(0u, 0u, 0u))))))), min(((uint(uvec3(1u, 1u, 1u))) | (uint(_GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u | (1u)), 1u))), min(_GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u | (1u)), 1u))), (uvec3(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u | (1u)), 1u)))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u | (1u)), 1u))), (uvec3(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u | (1u)), 1u)))) ^ uvec3(0u, 0u, 0u))))))), ((uint(uvec3(_GLF_IDENTITY(1u, 0u + (1u)), 1u, 1u))) | (uint(_GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u | (1u)), 1u))), min(_GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u | (1u)), 1u))), (uvec3(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u)), 1u)), 0u | (1u)), 1u)))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u | (1u)), 1u))), (uvec3(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u | (1u)), 1u)))) ^ uvec3(0u, 0u, 0u))))))))) ^ 0u)))))))), mat2(1.0), ivec2(1), uvec2(1u)), _GLF_struct_1(uvec3(1u), 1u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * _GLF_IDENTITY(mat4(1.0), (false ? _GLF_FUZZED(mat4(6.4, 6.8, -8.9, -2907.7547, -90.11, 9435.9283, 3.7, 76.88, -95.34, 56.28, -6801.9335, -1.6, 9.8, 3.1, 95.43, 65.16)) : mat4(1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0)))), (mat4(1.0)) * mat4(1.0)), (_GLF_IDENTITY(mat4(1.0), (mat4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)))) * mat4(1.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-547.168)), float(1.0), bool(true))), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(5.9) : 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(5.9) : 1.0))) + tan(sqrt(0.0))), 1.0, 1.0, 1.0)), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(1.0))), _GLF_IDENTITY((_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(1.0))), (transpose(_GLF_IDENTITY(mat4(1.0), _GLF_IDENTITY((mat4(1.0)) * mat4(1.0), _GLF_IDENTITY(transpose(transpose(_GLF_IDENTITY((_GLF_IDENTITY(mat4(1.0), (false ? _GLF_FUZZED((true ? mat4(922.611, -5.0, 953.714, -91.57, 8564.8868, 4.2, 73.93, -96.34, -199.562, 2.2, 8328.0528, -18.48, -6.6, 9.1, 2.9, 5.6) : mat4(-558.933, -93.96, -3.8, -8.5, -6.7, 5860.9319, -0.1, 2551.4586, -8893.3255, -3.0, 1.5, -47.82, -40.35, -8.4, -807.588, -1.7))) : _GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0))))))) * mat4(1.0), ((mat4(1.0)) * mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (true ? _GLF_IDENTITY(transpose(transpose(_GLF_IDENTITY((_GLF_IDENTITY(mat4(1.0), (false ? _GLF_FUZZED((true ? mat4(922.611, -5.0, 953.714, -91.57, 8564.8868, 4.2, 73.93, -96.34, -199.562, 2.2, 8328.0528, -18.48, -6.6, 9.1, 2.9, 5.6) : mat4(-558.933, -93.96, -3.8, -8.5, -6.7, 5860.9319, -0.1, 2551.4586, -8893.3255, -3.0, 1.5, -47.82, -40.35, -8.4, -807.588, -1.7))) : _GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0))))))) * mat4(1.0), ((mat4(1.0)) * mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(mat4(-491.293, 206.689, -5827.7208, -9.9, -1099.1546, 9190.4021, -564.802, -9667.1135, -9.7, -238.398, -3.2, -241.414, -45.08, -808.490, -67.37, 3880.8375)) : transpose(transpose(_GLF_IDENTITY((_GLF_IDENTITY(mat4(1.0), (false ? _GLF_FUZZED((true ? mat4(922.611, -5.0, 953.714, -91.57, 8564.8868, 4.2, 73.93, -96.34, -199.562, 2.2, 8328.0528, -18.48, -6.6, 9.1, 2.9, 5.6) : mat4(-558.933, -93.96, -3.8, -8.5, -6.7, 5860.9319, -0.1, 2551.4586, -8893.3255, -3.0, 1.5, -47.82, -40.35, -8.4, -807.588, -1.7))) : _GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0))))))) * mat4(1.0), ((mat4(1.0)) * mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8.4) : _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / 1.0))), 0.0, 0.0)))))) : _GLF_FUZZED(mat4(7064.5615, 690.748, -36.99, -4.9, -86.68, -7.1, 4122.5462, 0.1, -6458.4449, -19.75, -1463.1882, 962.611, 8.1, 402.570, 3.4, 631.069)))))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), mat4(1.0) * (mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) + ((_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(1.0), (mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3607.0893)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) * mat4(1.0))), (transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), _GLF_IDENTITY((mat4(1.0)) * mat4(1.0), transpose(transpose(_GLF_IDENTITY((mat4(1.0)) * mat4(1.0), ((_GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0))))) * mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), (_GLF_IDENTITY(mat4(1.0), _GLF_IDENTITY((mat4(1.0)) * mat4(1.0), transpose(transpose(_GLF_IDENTITY((mat4(1.0)) * mat4(1.0), ((mat4(1.0)) * mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2252.5762)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0, 0.0, 0.0, 0.0, 0.0))))))) - mat4(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))))))))))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) - mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec2(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0))), 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) - mat4(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_IDENTITY(_GLF_FUZZED(9.7), float(vec4(_GLF_FUZZED(9.7), 1.0, 0.0, determinant(mat4(1.0, cos(0.0), 1.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), bool(false)))) - 0.0), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7.1))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.4) : 0.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), uvec4(1u), 1u, uvec3(1u), mat3(1.0)), _GLF_struct_2(mat2x4(1.0)), _GLF_struct_3(vec2(1.0), uvec4(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id)))), mat4x2(1.0), vec3(1.0), _GLF_IDENTITY(1u, (1u ^ 1u) + (1u))), _GLF_struct_4(1u, bvec4(true))), _GLF_struct_6(uvec4(1u), ivec3(1)), mat4(1.0), 1u, mat4x3(1.0), 1u);
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_7._f0._f1.workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))).x) * 1.0), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))).x) / 1.0))) > injectionSwitch.y)))))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))), false, false)))))), true)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, ~ (~ (0)))))) - 0) ^ (1)), _GLF_IDENTITY(max(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), min(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(1, 0 ^ (1)))))), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), int(ivec4(_GLF_IDENTITY(1, 0 ^ (1)), 0, 0, 0))), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), max(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), max(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(1, 0 ^ (1)))), _GLF_IDENTITY(1, 0 ^ (1))))))), (max(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(1, 0 ^ (1)))) ^ 0)), 1))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) << 0u)))))), clamp(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) / 1u), (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size))) | (subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED((num_workgroup --)))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED((num_workgroup --)))))))), 0u | (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))), (subgroup_size), (subgroup_size)))) >> (94267u & uint(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1u), (true ? (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) : _GLF_FUZZED((num_workgroup --)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 0.0, 1.0), min(vec4(injectionSwitch.x, 1.0, 0.0, 1.0), vec4(injectionSwitch.x, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 0.0, 1.0), min(vec4(injectionSwitch.x, 1.0, 0.0, 1.0), vec4(injectionSwitch.x, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 0.0, 1.0), min(vec4(injectionSwitch.x, 1.0, 0.0, 1.0), vec4(injectionSwitch.x, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y)), true)))) || false) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) / 1u) : _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u) | (subgroup_size)))))))))) | (subgroup_size)));
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, min(4, 4)));
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), clamp(~ (4), ~ (4), ~ (4))))), 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (false))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec4(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec4(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)))))), false))))), bvec3(bvec4(bvec3(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false))), true), false)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false)));
  }
 else
  {
   switch(_GLF_SWITCH((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED((87053 * 75324)) : _GLF_IDENTITY(0 << _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1) | (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY((int(0)) + 0, min(_GLF_IDENTITY((int(0)) + 0, ((int(0)) + 0) / 1), (int(0)) + 0))))), (_GLF_IDENTITY(0 | (0 << _GLF_IDENTITY(int(0), int(0))), (0 | (0 << _GLF_IDENTITY(int(0), int(0)))) * 1)) | (_GLF_IDENTITY(0 | (0 << _GLF_IDENTITY(int(0), int(0))), _GLF_IDENTITY(0 | (_GLF_IDENTITY(0 | (0 << _GLF_IDENTITY(int(0), int(0))), 0 | (0 | (0 << _GLF_IDENTITY(int(0), int(0)))))), (_GLF_IDENTITY(0 | (_GLF_IDENTITY(0 | (0 << _GLF_IDENTITY(int(0), int(0))), 0 | (0 | (0 << _GLF_IDENTITY(int(0), int(0)))))), (0 | (_GLF_IDENTITY(0 | _GLF_IDENTITY((0 << _GLF_IDENTITY(int(0), int(0))), clamp(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(0), int(0))), int(_GLF_IDENTITY(ivec2((0 << _GLF_IDENTITY(int(0), int(0))), 1), clamp(ivec2((0 << _GLF_IDENTITY(int(0), int(0))), 1), ivec2((0 << _GLF_IDENTITY(int(0), int(0))), 1), ivec2((0 << _GLF_IDENTITY(int(0), int(0))), 1))))), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(0), int(0))), clamp((0 << _GLF_IDENTITY(int(0), int(0))), (0 << _GLF_IDENTITY(int(0), int(0))), (0 << _GLF_IDENTITY(int(0), int(0))))), (0 << _GLF_IDENTITY(int(0), int(0))))), 0 | (0 | (0 << _GLF_IDENTITY(int(0), int(0))))))) << 0)) | (_GLF_IDENTITY(0 | (_GLF_IDENTITY(0 | (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-89603) : _GLF_IDENTITY(0, min(0, 0))))), int(0))), 0 | (0 | (0 << _GLF_IDENTITY(int(0), int(0)))))), clamp(0 | (_GLF_IDENTITY(0 | (0 << _GLF_IDENTITY(int(0), int(0))), 0 | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(max(-25702, -75630)) : 0)) | (0 << _GLF_IDENTITY(int(0), int(0)))))), 0 | (_GLF_IDENTITY(0 | (0 << _GLF_IDENTITY(int(0), int(0))), 0 | (0 | (0 << _GLF_IDENTITY(int(0), int(0)))))), 0 | (_GLF_IDENTITY(0 | (0 << _GLF_IDENTITY(int(0), int(0))), 0 | (0 | (0 << _GLF_IDENTITY(int(0), int(0)))))))))))))))))))
    {
     case 87:
     ivec3 _GLF_SWITCH_0_0v;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     case 19:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y) || false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          barrier();
         barrier();
        }
       barrier();
      }
     vec3 _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v;
     case 0:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false) || false)))) && true), (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false), ! (! ((false)))) || false)))) && true), (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_IDENTITY((bool(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false) || false)))) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))) || false, ((bool(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || ((false) || false)))) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))) || false) && true))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false) || false)))) && true), (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false), ! (! ((false)))) || false)))) && true), (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_IDENTITY((bool(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false) || false)))) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))) || false, ((bool(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || ((false) || false)))) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))) || false) && true)))) || false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))) || false), true, true)), true && (bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), true && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))) || false), true, true))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     case 93:
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
      barrier();
     atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, uint(uvec2(read, 1u))), 4, 64, 4);
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(20.72)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))))), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), vec2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.4) : 1.0))) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(mat2(vec2(0.0, 0.0), 0.0, 1.0)), vec2(mat4x3(vec2(mat2(vec2(0.0, 0.0), 0.0, 1.0)), 1.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), (vec2(0.0, 0.0)) * mat2(1.0)), (true ? _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch))))) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((true ? (15.84 - 6.8) : 1.8))), float(injectionSwitch.y), bool(true)))), ! (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)) + _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))))).x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))))), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), (true ? _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch))))) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))))), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), (true ? _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch))))) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)) + _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))))).x > injectionSwitch.y))))))), false || (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))))), injectionSwitch, injectionSwitch), (true ? clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(0.0, 0.0, 1.0, 0.0), (mat2(0.0, 0.0, 1.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0)))))), injectionSwitch, injectionSwitch) : _GLF_FUZZED(injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0)), vec2(0.0, 0.0))), _GLF_IDENTITY((vec2(0.0, 0.0)), ((vec2(0.0, 0.0))) + vec2(0.0, 0.0)) * mat2(1.0)), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(54.20)), bool(false)))))), (vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0)) * mat2(1.0)), (true ? _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch))))) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x4(1.0, 1.0, determinant(mat2(abs(1.0), 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, abs(1.0), 0.0)), clamp(_GLF_IDENTITY(float(mat3x4(1.0, 1.0, determinant(mat2(abs(1.0), 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, abs(1.0), 0.0)), (true ? float(mat3x4(1.0, 1.0, determinant(mat2(abs(1.0), 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, abs(1.0), 0.0)) : _GLF_FUZZED(15.38))), float(mat3x4(1.0, 1.0, determinant(mat2(abs(1.0), 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, abs(1.0), 0.0)), float(mat3x4(1.0, 1.0, determinant(mat2(abs(1.0), 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, abs(1.0), 0.0)))), min(_GLF_IDENTITY(float(mat3x4(1.0, 1.0, determinant(mat2(abs(1.0), 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, abs(1.0), 0.0)), clamp(_GLF_IDENTITY(float(mat3x4(1.0, 1.0, determinant(mat2(abs(1.0), 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, abs(1.0), 0.0)), (true ? float(mat3x4(1.0, 1.0, determinant(mat2(abs(1.0), 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, abs(1.0), 0.0)) : _GLF_FUZZED(15.38))), float(mat3x4(1.0, 1.0, determinant(mat2(abs(1.0), 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, abs(1.0), 0.0)), float(mat3x4(1.0, 1.0, determinant(mat2(abs(1.0), 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, abs(1.0), 0.0)))), _GLF_IDENTITY(float(mat3x4(1.0, 1.0, determinant(mat2(abs(1.0), 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, abs(1.0), 0.0)), clamp(_GLF_IDENTITY(float(mat3x4(1.0, 1.0, determinant(mat2(abs(1.0), 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, abs(1.0), 0.0)), (true ? float(mat3x4(1.0, 1.0, determinant(mat2(abs(1.0), 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, abs(1.0), 0.0)) : _GLF_FUZZED(15.38))), float(mat3x4(1.0, 1.0, determinant(mat2(abs(1.0), 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, abs(1.0), 0.0)), float(mat3x4(1.0, 1.0, determinant(mat2(abs(1.0), 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, abs(1.0), 0.0))))))))) + _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))))).x > injectionSwitch.y))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     case 12:
     case 41:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     subgroupAll(true);
     if(_GLF_DEAD(false))
      barrier();
     case 70:
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     break;
     case 67:
     if(true)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       3.5;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       _GLF_IDENTITY(vec4(177.105, 236.213, 2.8, -2934.2606), (true ? vec4(177.105, 236.213, 2.8, -2934.2606) : _GLF_FUZZED(asinh(vec4(6.4, -6.9, -1.0, 8253.8332)))));
       bvec3(false, _GLF_IDENTITY(true, false || (true)), true);
       while(true)
        {
         mat2 _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v[95];
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         {
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          mat3x2(60.73, -9.2, -8.3, 65.80, _GLF_IDENTITY(-5.3, clamp(-5.3, -5.3, -5.3)), -76.71);
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            barrier();
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            barrier();
            if(_GLF_DEAD(false))
             barrier();
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          mat2x4(3.0, 16.18, 8008.2248, 760.987, -3.6, 192.491, -321.897, 6978.5189);
          if(_GLF_DEAD(false))
           barrier();
          _GLF_IDENTITY(_GLF_IDENTITY(uvec3(38275u, 100473u, 192748u), (false ? _GLF_FUZZED(uvec3(31750u, 45177u, 34288u)) : uvec3(38275u, 100473u, 192748u))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(38275u, 100473u, 192748u), (false ? _GLF_FUZZED(uvec3(31750u, 45177u, 34288u)) : uvec3(38275u, 100473u, 192748u)))));
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false))), false || (_GLF_IDENTITY(false, (false) || false)))))
           {
            if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
             barrier();
            barrier();
           }
          bool _GLF_SWITCH_0_5v, _GLF_SWITCH_0_6v;
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, true, false))))))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            barrier();
           }
          if(_GLF_DEAD(false))
           barrier();
          mat3x2(4282.5133, -650.045, 6.9, 2.2, 1.0, 86.12);
          ;
          if(_GLF_DEAD(false))
           barrier();
          mat3x2 _GLF_SWITCH_0_7v;
          if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
             }
            barrier();
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
             barrier();
            barrier();
           }
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), true, false);
          if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
           barrier();
          uint _GLF_SWITCH_0_8v, _GLF_SWITCH_0_9v;
         }
         if((mat2x4(-1.1, -1.0, 8.3, 1.6, -334.087, -7.7, -2.0, 358.644) != mat2x4(545.502, 7470.5723, -7.9, 45.59, 900.805, 9172.2422, 4.4, -9.4)))
          {
           if(_GLF_DEAD(false))
            barrier();
           uvec2 _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v;
           (_GLF_IDENTITY(uvec4(114707u, 30024u, 59477u, 186789u), (uvec4(114707u, 30024u, 59477u, 186789u)) - (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(7u), uvec4(7u)))) , bvec4(true, true, false, false));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           uvec4(92291u, 157411u, _GLF_IDENTITY(108182u, 0u + (108182u)), 104584u);
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           abs(_GLF_IDENTITY(_GLF_IDENTITY(bitfieldReverse(-61584), (bitfieldReverse(-61584)) / 1), min(_GLF_IDENTITY(_GLF_IDENTITY(bitfieldReverse(-61584), (bitfieldReverse(-61584)) | (_GLF_IDENTITY(bitfieldReverse(-61584), (bitfieldReverse(-61584)) ^ int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-64701) : _GLF_IDENTITY(bitfieldReverse(-61584), (bitfieldReverse(-61584)) | (bitfieldReverse(-61584))))), bitfieldReverse(-61584))));
          }
         if(_GLF_DEAD(false))
          barrier();
         mat4x2(9.7, 608.587, -3852.4135, 755.102, 307.991, 3225.5613, -0.3, 8.1);
         if(_GLF_DEAD(false))
          barrier();
         _GLF_IDENTITY((- mat4(4.7, 1760.6524, _GLF_IDENTITY(36.04, max(36.04, 36.04)), 169.246, 6.1, 3207.9914, -884.123, 1373.3213, -3.3, -222.227, _GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED(84.22)), bool(false))), _GLF_IDENTITY(-6677.6629, (-6677.6629) / 1.0), 0.6, _GLF_IDENTITY(-5979.6980, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9062.3248)), bool(false))), clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9062.3248)), bool(false))), _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), (float(1.0)) - _GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(9062.3248)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9062.3248)), bool(false))), min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9062.3248)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9062.3248)), bool(false))), clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9062.3248)), bool(false))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9062.3248)), bool(false))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9062.3248)), bool(false))))))))) * (_GLF_IDENTITY(-5979.6980, (_GLF_IDENTITY(-5979.6980, min(-5979.6980, _GLF_IDENTITY(-5979.6980, mix(_GLF_IDENTITY(float(_GLF_FUZZED(65.93)), (float(_GLF_FUZZED(65.93))) / round(length(normalize(cos(vec3(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), max(float(float(0.0)), float(float(0.0))))), 0.0)))))), float(_GLF_IDENTITY(-5979.6980, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), ((injectionSwitch.x < injectionSwitch.y)) || false)) ? -5979.6980 : _GLF_FUZZED(-40.54)))), bool(true)))))) - 0.0))), _GLF_IDENTITY(-889.777, (-889.777) - 0.0), -1.2)), (false ? _GLF_FUZZED(mat4(mat2x4(-9.9, 555.838, 601.030, -4808.8173, -4.7, -614.867, -5.2, -3087.3106))) : (- mat4(4.7, 1760.6524, _GLF_IDENTITY(36.04, max(36.04, 36.04)), 169.246, 6.1, 3207.9914, -884.123, 1373.3213, -3.3, -222.227, 1.7, _GLF_IDENTITY(-6677.6629, (-6677.6629) / 1.0), 0.6, _GLF_IDENTITY(-5979.6980, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9062.3248)), bool(false))) * (_GLF_IDENTITY(-5979.6980, (_GLF_IDENTITY(-5979.6980, min(-5979.6980, _GLF_IDENTITY(-5979.6980, mix(_GLF_IDENTITY(float(_GLF_FUZZED(65.93)), (float(_GLF_FUZZED(65.93))) / round(length(normalize(cos(vec3(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(-5979.6980, (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, 0 ^ (0))], max(injectionSwitch[_GLF_IDENTITY(0, 0 ^ (0))], injectionSwitch[_GLF_IDENTITY(0, 0 ^ (0))])), injectionSwitch[1])))).y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)))), ((injectionSwitch.x < injectionSwitch.y)) || false)) ? -5979.6980 : _GLF_FUZZED(-40.54)))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0), vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), dot(vec4(0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), mix(float(_GLF_FUZZED(7805.4835)), float(dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), bool(true)))), 1.0), vec4(1.0, 0.0, 0.0, 0.0))) + (float(_GLF_IDENTITY(-5979.6980, (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), injectionSwitch[1])))).y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)))), ((injectionSwitch.x < injectionSwitch.y)) || false)) ? -5979.6980 : _GLF_FUZZED(-40.54)))))), bool(true)))))) - 0.0))), -889.777, -1.2))));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         while((bvec3(false, _GLF_IDENTITY(false, ! (! (false))), false) != _GLF_IDENTITY(bvec3(true, false, true), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true, false, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(true, false, true), true)), true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), true)))), false))), false)))))))
          {
           (8.4 / mat4x3(-90.03, 550.132, 119.970, _GLF_IDENTITY(-1.0, (-1.0) * 1.0), _GLF_IDENTITY(36.04, mix(float(36.04), float(_GLF_FUZZED(3578.7370)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), (true ? float(injectionSwitch.y) : _GLF_FUZZED(-0.5))))))), false)), bool(bvec3(bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true, true)))), true && (false))))), 3734.2028, -4.7, -187.007, -9.4, -1157.5153, -91.51, 3.8));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.5, min(1.5, 1.5)), _GLF_IDENTITY(-8.7, (false ? _GLF_FUZZED(5.6) : -8.7)), 80.49, 722.238, _GLF_IDENTITY(7.7, clamp(7.7, 7.7, _GLF_IDENTITY(7.7, mix(float(_GLF_FUZZED(-31.65)), float(7.7), bool(true))))), -908.500, 8.9, -3.1, _GLF_IDENTITY(7.4, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-67.86)), float(_GLF_IDENTITY(7.4, (true ? 7.4 : _GLF_FUZZED(24.97)))), bool(true)), clamp(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-67.86)), float(_GLF_IDENTITY(7.4, (true ? 7.4 : _GLF_FUZZED(24.97)))), bool(true)), (false ? _GLF_FUZZED(49.62) : mix(float(_GLF_FUZZED(-67.86)), float(_GLF_IDENTITY(7.4, (true ? 7.4 : _GLF_FUZZED(24.97)))), bool(true)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-67.86)), float(_GLF_IDENTITY(7.4, (true ? 7.4 : _GLF_FUZZED(24.97)))), bool(true)), clamp(mix(float(_GLF_FUZZED(-67.86)), float(_GLF_IDENTITY(7.4, (true ? 7.4 : _GLF_FUZZED(24.97)))), bool(true)), mix(float(_GLF_FUZZED(-67.86)), float(_GLF_IDENTITY(7.4, (true ? 7.4 : _GLF_FUZZED(24.97)))), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-67.86)), float(_GLF_IDENTITY(7.4, (true ? 7.4 : _GLF_FUZZED(24.97)))), bool(true)), clamp(mix(float(_GLF_FUZZED(-67.86)), float(_GLF_IDENTITY(7.4, (true ? 7.4 : _GLF_FUZZED(24.97)))), bool(true)), mix(float(_GLF_FUZZED(-67.86)), float(_GLF_IDENTITY(7.4, (true ? 7.4 : _GLF_FUZZED(24.97)))), bool(true)), mix(float(_GLF_FUZZED(-67.86)), float(_GLF_IDENTITY(7.4, (true ? 7.4 : _GLF_FUZZED(24.97)))), bool(true)))))), mix(float(_GLF_FUZZED(-67.86)), float(_GLF_IDENTITY(7.4, (true ? 7.4 : _GLF_FUZZED(24.97)))), bool(true)))))), transpose(transpose(mat3(_GLF_IDENTITY(1.5, (false ? _GLF_FUZZED(1.7) : 1.5)), _GLF_IDENTITY(-8.7, (-8.7) + 0.0), 80.49, _GLF_IDENTITY(722.238, mix(float(_GLF_FUZZED(-75.43)), float(_GLF_IDENTITY(722.238, (722.238) - 0.0)), bool(true))), _GLF_IDENTITY(7.7, clamp(7.7, 7.7, _GLF_IDENTITY(7.7, mix(float(_GLF_FUZZED(-31.65)), float(7.7), bool(true))))), -908.500, 8.9, -3.1, _GLF_IDENTITY(7.4, clamp(7.4, 7.4, 7.4))))));
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))) || false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false)))))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               barrier();
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, ! (! (true)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         _GLF_SWITCH_0_0v;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         if(false)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 1.0, tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 1.0, tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))))) && true))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(-29.28)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true))))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           injectionSwitch;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-83.38, min(-83.38, _GLF_IDENTITY(-83.38, min(-83.38, _GLF_IDENTITY(-83.38, 0.0 + (-83.38)))))))), float(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(48.58)), clamp(float(_GLF_FUZZED(48.58)), _GLF_IDENTITY(float(_GLF_FUZZED(48.58)), min(float(_GLF_FUZZED(48.58)), float(_GLF_FUZZED(48.58)))), float(_GLF_FUZZED(48.58)))), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x))), bool(true)))), bool(true))) > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
           ;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           _GLF_IDENTITY((-4325.8953 - mat4(4.0, -6.8, -28.65, -8.1, -11.62, -832.952, -1.5, 4.0, -168.721, 5168.6605, 44.56, 2.2, 45.75, -7.5, -7.2, -23.99)), transpose(transpose(_GLF_IDENTITY((-4325.8953 - mat4(4.0, -6.8, -28.65, -8.1, _GLF_IDENTITY(-11.62, 0.0 + (-11.62)), -832.952, -1.5, 4.0, -168.721, 5168.6605, 44.56, 2.2, 45.75, -7.5, -7.2, -23.99)), transpose(transpose((-4325.8953 - mat4(4.0, -6.8, -28.65, -8.1, -11.62, -832.952, -1.5, 4.0, -168.721, 5168.6605, 44.56, 2.2, 45.75, -7.5, -7.2, -23.99))))))));
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         for(         mat2(-3.5, -47.77, -5.7, _GLF_IDENTITY(-1.9, float(_GLF_IDENTITY(float(_GLF_IDENTITY(-1.9, mix(float(_GLF_IDENTITY(-1.9, max(-1.9, -1.9))), float(_GLF_FUZZED((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))) ? 88.89 : -408.924))), bool(false)))), (float(_GLF_IDENTITY(-1.9, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(-1.9, min(-1.9, -1.9)), max(-1.9, -1.9))), float(_GLF_FUZZED((false ? 88.89 : -408.924))), bool(false))))) * cos(0.0)))));
 any(bvec4(false, false, false, true)); mat4x3(mat2x4(652.632, 2.2, 218.588, 5.0, _GLF_IDENTITY(-0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.3) : -0.0)), -6.9, 2.8, 70.56)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (0.0) * 1.0), 1.0, abs(0.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(714.541) : 0.0)), 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 0.0, sqrt(0.0))), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.4)), bool(false)))) / 1.0)))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           true;
           if(_GLF_DEAD(false))
            barrier();
           int _GLF_SWITCH_0_13v, _GLF_SWITCH_0_14v;
           uvec2 _GLF_SWITCH_0_15v[80], _GLF_SWITCH_0_16v;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           mat3 _GLF_SWITCH_0_17v, _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v;
           if(_GLF_DEAD(false))
            barrier();
           mat4x2 _GLF_SWITCH_0_20v[13], _GLF_SWITCH_0_21v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           ;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0), max(vec4(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0), vec4(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0)))), min(vec2(_GLF_IDENTITY(vec4(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0), max(vec4(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0), vec4(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0)))), vec2(_GLF_IDENTITY(vec4(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0), max(vec4(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0), vec4(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0))))))).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       vec4(_GLF_IDENTITY(2.5, _GLF_IDENTITY(clamp(2.5, _GLF_IDENTITY(2.5, max(2.5, 2.5)), _GLF_IDENTITY(2.5, (true ? 2.5 : _GLF_FUZZED(log2(-498.511))))), float(vec2(clamp(2.5, _GLF_IDENTITY(2.5, max(2.5, 2.5)), _GLF_IDENTITY(2.5, (true ? 2.5 : _GLF_FUZZED(log2(-498.511))))), 1.0)))), -54.76, -7.9, -7.4);
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     case 71:
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) && true)))), (_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) && true))))) && true))), (injectionSwitch.x > injectionSwitch.y)))), ! (! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), true && ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((_GLF_IDENTITY(+ -8.4, clamp(_GLF_IDENTITY(+ -8.4, mix(float(+ -8.4), float(_GLF_FUZZED(3.2)), bool(false))), + -8.4, _GLF_IDENTITY(+ -8.4, mix(float(+ -8.4), float(_GLF_FUZZED(5585.5469)), bool(false))))))), _GLF_FUZZED(-2.6)), bvec2(false, false))).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     (mat3(_GLF_IDENTITY(-1721.2617, min(-1721.2617, -1721.2617)), -82.74, -6153.4976, -9253.8498, 84.13, 895.528, 2.6, 5525.4211, 484.843) / mat3(227.270, -8456.2713, -2.0, 7.3, -3.9, -11.95, 925.277, -232.788, 5.3));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     default:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (bool(true)))))))), false)))))
      barrier();
     1;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
