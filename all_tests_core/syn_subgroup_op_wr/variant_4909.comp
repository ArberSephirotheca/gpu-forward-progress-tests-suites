#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, 0u + (_GLF_IDENTITY(gl_WorkGroupID.x, 0u + (gl_WorkGroupID.x))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true, true, true)))))))))
            {
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               return;
              }
            }
           return;
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) / 1.0)))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          continue;
         do
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            break;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.7), _GLF_FUZZED(748.974)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || false)) && true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bool(! (true))), true && _GLF_IDENTITY((bool(bool(! (true)))), true && ((bool(bool(! (true)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), false)))) && true)), _GLF_IDENTITY(bool(bool(! (true))), true && _GLF_IDENTITY((bool(bool(! (true)))), true && ((bool(bool(! (true)))))))), bool(bvec3(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bool(! (true))), true && _GLF_IDENTITY((bool(bool(! (true)))), true && ((bool(bool(! (true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), true))).x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(float(injectionSwitch[0]))), injectionSwitch[1])).y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(float(injectionSwitch[0]))), injectionSwitch[1])).y) / 1.0)), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(float(injectionSwitch[0]))), injectionSwitch[1])).y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(float(injectionSwitch[0]))), injectionSwitch[1])).y) / 1.0))) && true))))
      continue;
     for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) * 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY((_injected_loop_counter --) ^ (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) << 0))), ((_injected_loop_counter --) ^ (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) << 0)))) >> 0)), (_injected_loop_counter --) >> 0))
      {
       if(_GLF_DEAD(false))
        break;
       return;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        continue;
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)));
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)))), min(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)))), subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) && true))))))
      return;
    }
   else
    {
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), clamp(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / 1u)))) / 1u))), _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ (clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))))), workgroup_base)))), _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, workgroup_base), (min(workgroup_base, workgroup_base)) << 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), clamp(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / 1u)))) / 1u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), workgroup_base)), (_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), workgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), workgroup_base)), (_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), workgroup_base))) << 0u))))), _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) >> 0u))), workgroup_base), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))) << 0u))))))) | 0u) + subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / 1u)))) / 1u))), _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), workgroup_base)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), workgroup_base)) : _GLF_FUZZED((virtual_gid - num_workgroup)))))), _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, workgroup_base), (min(workgroup_base, workgroup_base)) << 0u))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5517u) : clamp(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / 1u)))) / 1u), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / 1u)))) / 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / 1u)))) / 1u)))), 1u, 0u, 1u))))), _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), workgroup_base)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), workgroup_base)) : _GLF_FUZZED((virtual_gid - num_workgroup)))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), workgroup_base)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), workgroup_base)) : _GLF_FUZZED((virtual_gid - num_workgroup)))), 0u), ~ (~ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), workgroup_base)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), workgroup_base)) : _GLF_FUZZED((virtual_gid - num_workgroup)))), 0u)))))))), _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, workgroup_base), (min(workgroup_base, workgroup_base)) << 0u)))))))) + subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), clamp(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / 1u)))) / 1u))), _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), workgroup_base)))), _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, workgroup_base), _GLF_IDENTITY((min(workgroup_base, workgroup_base)), max(_GLF_IDENTITY((min(workgroup_base, workgroup_base)), uint(_GLF_IDENTITY(uvec3((min(workgroup_base, workgroup_base)), 1u, 1u), (uvec3((min(workgroup_base, workgroup_base)), 1u, 1u)) + uvec3(0u, 0u, 0u)))), (min(workgroup_base, workgroup_base)))) << 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), clamp(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / 1u)))) / 1u))), _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), workgroup_base)))), _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, workgroup_base), _GLF_IDENTITY((min(workgroup_base, workgroup_base)), max(_GLF_IDENTITY((min(workgroup_base, workgroup_base)), uint(_GLF_IDENTITY(uvec3((min(workgroup_base, workgroup_base)), 1u, 1u), (uvec3((min(workgroup_base, workgroup_base)), 1u, 1u)) + uvec3(0u, 0u, 0u)))), (min(workgroup_base, workgroup_base)))) << 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), clamp(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / 1u)))) / 1u))), _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), workgroup_base)))), _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, workgroup_base), _GLF_IDENTITY((min(workgroup_base, workgroup_base)), max(_GLF_IDENTITY((min(workgroup_base, workgroup_base)), uint(_GLF_IDENTITY(uvec3((min(workgroup_base, workgroup_base)), 1u, 1u), (uvec3((min(workgroup_base, workgroup_base)), 1u, 1u)) + uvec3(0u, 0u, 0u)))), (min(workgroup_base, workgroup_base)))) << 0u))))))) ^ 0u)) >> 0u) + subgroup_id * subgroup_size) / 1u))), 0u | (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (_GLF_IDENTITY(~ (workgroup_base), (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), ~ (~ ((_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))))))) | 0u)) | (~ (workgroup_base))))), 1u))), workgroup_base)) + _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), (0u | 0u), 1u, 1u), (uvec4(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), (0u | 0u), 1u, 1u)) ^ uvec4(0u, 0u, 0u, 0u)))) * subgroup_size)) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))) - 0u, (true ? (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))) - 0u : _GLF_FUZZED(virtual_gid))))], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) * 1), max(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), ~ (_GLF_IDENTITY(~ (~ (1)), ~ (~ (~ (~ (1))))))))), 1, 1), min(clamp(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), ~ (_GLF_IDENTITY(~ (~ (1)), ~ (~ (~ (~ (1))))))))), 1, 1), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), ~ (_GLF_IDENTITY(~ (~ (1)), ~ (~ (~ (~ (1))))))))), 1, 1), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), ~ (_GLF_IDENTITY(~ (~ (1)), ~ (~ (~ (~ (1))))))))), 1, 1), max(clamp(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), ~ (_GLF_IDENTITY(~ (~ (1)), ~ (~ (~ (~ (1))))))))), 1, 1), clamp(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), ~ (_GLF_IDENTITY(~ (~ (1)), ~ (~ (~ (~ (1))))))))), 1, 1)))) | 0)))), clamp(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), ~ (_GLF_IDENTITY(~ (~ (1)), _GLF_IDENTITY(~ (~ (~ (~ (1)))), min(~ (~ (~ (~ (1)))), ~ (~ (~ (~ (1))))))))))), 1, 1)), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), ~ (_GLF_IDENTITY(~ (~ (1)), ~ (~ _GLF_IDENTITY((~ (~ (1))), min((~ (~ (1))), (~ (~ (1))))))))))), 1, 1)), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(ivec3(1, 1, 1))))), ~ (~ (~ (~ (1))))))))), 1, 1)))), 1))), 4, 64, _GLF_IDENTITY(4, 0 | (4)));
  }
 else
  {
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, exp(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 0.0))))) && (_GLF_DEAD(false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), _GLF_IDENTITY(bool(bvec3(bool(bvec3(_GLF_DEAD(false), false, true)), true, false)), ! (! (bool(bvec3(bool(bvec3(_GLF_DEAD(false), false, true)), true, false))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), (bool(bvec4(_GLF_DEAD(false), false, true, false))) && true)), false || ((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), (bool(bvec4(_GLF_DEAD(false), false, true, false))) && true)))))))
        return;
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(false))
      break;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(67.29), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(float(160844u), min(float(160844u), float(160844u))))), bvec2(true, false))).y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       else
        {
        }
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         return;
        }
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5596.6369)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5596.6369)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
    return;
  }
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, max(0, 0))))))), max(_GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(4, (4) >> 0))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) | 0))), (4) >> _GLF_IDENTITY(0, (0) >> 0)), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), min(_GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(4, (4) >> 0)))), _GLF_IDENTITY(int(ivec4(max(_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, 0, 1), ~ (~ _GLF_IDENTITY((ivec3(4, 0, 1)), min((ivec3(4, 0, 1)), (ivec3(4, 0, 1)))))))), _GLF_IDENTITY((4), ((4)) ^ 0) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), min(_GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(4, (4) >> 0)))), 0, 1, 1)), max(int(_GLF_IDENTITY(ivec4(max(_GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), min(_GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(4, (4) >> _GLF_IDENTITY(0, (0) | (0))))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), min(_GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(4, (4) >> _GLF_IDENTITY(0, (0) | (0)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), min(_GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(4, (4) >> _GLF_IDENTITY(0, (0) | (0))))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), min(_GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(4, (4) >> _GLF_IDENTITY(0, (0) | (0)))))) / 1)))), 0, 1, 1), min(ivec4(max(_GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), min(_GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(4, (4) >> _GLF_IDENTITY(0, (0) | (0))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), min(_GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(4, (4) >> _GLF_IDENTITY(0, (0) | (0))))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), min(_GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(4, (4) >> _GLF_IDENTITY(0, (0) | (0))))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), min(_GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(4, (4) >> _GLF_IDENTITY(0, (0) | (0)))))))), 0, 1, 1), _GLF_IDENTITY(ivec4(max(_GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) * 1), _GLF_IDENTITY((4) >> 0, min((4) >> 0, (4) >> 0))), min(_GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(4, (4) >> _GLF_IDENTITY(0, (0) | (0)))))), 0, 1, 1), ivec4(_GLF_IDENTITY(1, max(1, 1)), 1, 1, 1) * (ivec4(max(_GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), min(_GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(4, (4) >> _GLF_IDENTITY(0, (0) | (0)))))), 0, 1, 1)))))), int(ivec4(max(_GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), min(_GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(4, (4) >> 0)))), 0, 1, _GLF_IDENTITY(1, (1) | (1)))))))), 64, 0);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false)), true && (bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false))))) || false)))
      {
      }
     else
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), bool(bool(_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), (! (true)) || false)) && true)))))), _GLF_IDENTITY((true), ! (! ((true)))) && true), true && (_GLF_IDENTITY(true, (true) && true)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(subgroup_local_id + 1 < subgroup_size)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         atomicStore(checker[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)], _GLF_IDENTITY(read, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | (_GLF_IDENTITY((read), clamp((read), _GLF_IDENTITY((read), max(_GLF_IDENTITY((read), ((read)) ^ 0u), (read))), _GLF_IDENTITY((_GLF_IDENTITY(read, (_GLF_IDENTITY(read, max(read, read))) << 0u)), (_GLF_IDENTITY((read), ~ (~ ((read))))) >> 0u))))) - 0u, _GLF_IDENTITY((_GLF_IDENTITY((read), ((read)) | ((read))) - 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, min(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, _GLF_IDENTITY((read), ((read)) | (_GLF_IDENTITY((read), _GLF_IDENTITY(uint(uvec2((read), (0u | 0u))), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2((read), (0u | 0u)))))))) - 0u))), 0u | ((_GLF_IDENTITY((read), ((read)) | ((read))) - 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, min(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, _GLF_IDENTITY((read), ((read)) | (_GLF_IDENTITY((read), _GLF_IDENTITY(uint(uvec2((read), (0u | 0u))), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2((read), (0u | 0u)))))))) - 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))), ((read)) | ((read))) - 0u, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, (_GLF_IDENTITY((read), ((read)) | ((read))) - 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, _GLF_IDENTITY(min(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, _GLF_IDENTITY((read), ((read)) | ((read))) - 0u), (true ? min(_GLF_IDENTITY((read), ((read)) | ((_GLF_IDENTITY(read, (read) >> 0u)))) - 0u, _GLF_IDENTITY((read), ((read)) | ((read))) - 0u) : _GLF_FUZZED(next_virtual_gid))))))), min((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, (_GLF_IDENTITY((read), ((read)) | ((read))) - 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, _GLF_IDENTITY(min(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, _GLF_IDENTITY((read), ((read)) | ((read))) - 0u), (true ? min(_GLF_IDENTITY((read), ((read)) | ((_GLF_IDENTITY(read, (read) >> 0u)))) - 0u, _GLF_IDENTITY((read), ((read)) | ((read))) - 0u) : _GLF_FUZZED(next_virtual_gid))))))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, (_GLF_IDENTITY((read), ((read)) | ((read))) - 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, _GLF_IDENTITY(min(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, _GLF_IDENTITY((read), ((read)) | ((read))) - 0u), (true ? min(_GLF_IDENTITY((read), ((read)) | ((_GLF_IDENTITY(read, (read) >> 0u)))) - 0u, _GLF_IDENTITY((read), ((read)) | ((read))) - 0u) : _GLF_FUZZED(next_virtual_gid)))))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, (_GLF_IDENTITY((read), ((read)) | ((read))) - 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, min(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, _GLF_IDENTITY((read), ((read)) | ((read))) - 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))), (_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))), min(_GLF_IDENTITY((read), ((read)) | ((read))), _GLF_IDENTITY((read), ((read)) | ((read)))))) | 0u) - 0u), (true ? (_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))), (_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))), min(_GLF_IDENTITY((read), ((read)) | ((read))), _GLF_IDENTITY((read), ((read)) | ((read)))))) | 0u) - 0u) : _GLF_FUZZED(read))) | (_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, min(_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))), ~ (~ (_GLF_IDENTITY((read), ((_GLF_IDENTITY(read, 0u ^ (read)))) | ((read)))))), 1u))) - 0u, _GLF_IDENTITY((read), ((read)) | ((read))) - 0u)))))))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, (_GLF_IDENTITY((read), ((read)) | ((read))) - 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | _GLF_IDENTITY(((read)), uint(uint(_GLF_IDENTITY(((read)), (((read))) * 1u))))) - 0u, min(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, _GLF_IDENTITY((read), ((read)) | ((read))) - 0u)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | _GLF_IDENTITY(((read)), (_GLF_IDENTITY(((read)), 1u * (((read))))) | (((read))))) - 0u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((read), _GLF_IDENTITY(((read)), (((read))) - 0u) | ((read))) - 0u, (_GLF_IDENTITY((read), ((read)) | ((read))) - 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, min(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, _GLF_IDENTITY((read), ((read)) | ((read))) - 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, (_GLF_IDENTITY(_GLF_IDENTITY((read), (_GLF_IDENTITY((read), ((read)) - 0u)) | ((read))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((read), _GLF_IDENTITY(((read)), (true ? ((read)) : _GLF_FUZZED(num_workgroup))) | _GLF_IDENTITY(((read)), (((read))) * 1u)), min(_GLF_IDENTITY((read), ((read)) | ((read))), _GLF_IDENTITY((read), ((read)) | ((read)))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY((read), _GLF_IDENTITY(((read)), (true ? ((read)) : _GLF_FUZZED(num_workgroup))) | _GLF_IDENTITY(((read)), (((read))) * 1u)), min(_GLF_IDENTITY((read), ((read)) | ((read))), _GLF_IDENTITY((read), ((read)) | ((read)))))), (_GLF_IDENTITY(_GLF_IDENTITY((read), _GLF_IDENTITY(((read)), (true ? ((read)) : _GLF_FUZZED(num_workgroup))) | _GLF_IDENTITY(((read)), (((read))) * 1u)), min(_GLF_IDENTITY((read), ((read)) | ((read))), _GLF_IDENTITY((read), ((read)) | ((read)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((read), _GLF_IDENTITY(((read)), (true ? ((read)) : _GLF_FUZZED(num_workgroup))) | _GLF_IDENTITY(((read)), (((read))) * 1u)), min(_GLF_IDENTITY((read), ((read)) | ((read))), _GLF_IDENTITY((read), ((read)) | ((read)))))), ((_GLF_IDENTITY(_GLF_IDENTITY((read), _GLF_IDENTITY(((read)), (true ? ((read)) : _GLF_FUZZED(num_workgroup))) | _GLF_IDENTITY(((read)), (((read))) * 1u)), min(_GLF_IDENTITY((read), ((read)) | ((read))), _GLF_IDENTITY((read), ((read)) | ((read))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY((read), _GLF_IDENTITY(((read)), (true ? ((read)) : _GLF_FUZZED(num_workgroup))) | _GLF_IDENTITY(((read)), (((read))) * 1u)), min(_GLF_IDENTITY((read), ((read)) | ((read))), _GLF_IDENTITY((read), ((read)) | ((read)))))))))) | 0u) - 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, min(_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | (_GLF_IDENTITY((read), ~ (_GLF_IDENTITY(~ ((read)), min(~ ((read)), _GLF_IDENTITY(~ ((read)), (~ ((read))) << 0u))))))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((read), ~ (~ ((read)))), ((read)) | ((read))), ~ (~ (_GLF_IDENTITY((read), ((read)) | ((read)))))), 1u))) - 0u, _GLF_IDENTITY((read), ((read)) | ((read))) - 0u)))))))))))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | _GLF_IDENTITY(((read)), (true ? ((read)) : _GLF_FUZZED(next_virtual_gid)))) - 0u, clamp(_GLF_IDENTITY((read), ((read)) | _GLF_IDENTITY(((read)), (true ? ((read)) : _GLF_FUZZED(next_virtual_gid)))) - 0u, _GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | _GLF_IDENTITY(((read)), (true ? ((read)) : _GLF_FUZZED(next_virtual_gid)))) - 0u, clamp(_GLF_IDENTITY((read), ((read)) | _GLF_IDENTITY(((read)), (true ? ((read)) : _GLF_FUZZED(next_virtual_gid)))) - 0u, _GLF_IDENTITY((read), ((read)) | _GLF_IDENTITY(((read)), (true ? ((read)) : _GLF_FUZZED(next_virtual_gid)))) - 0u, _GLF_IDENTITY((read), ((read)) | _GLF_IDENTITY(((read)), (true ? ((read)) : _GLF_FUZZED(next_virtual_gid)))) - 0u)), _GLF_IDENTITY((read), ((read)) | _GLF_IDENTITY(((read)), (true ? ((read)) : _GLF_FUZZED(next_virtual_gid)))) - 0u)), (_GLF_IDENTITY((read), ((read)) | ((read))) - 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, min(_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, max(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, _GLF_IDENTITY((read), ((read)) | ((read))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY((read), (_GLF_IDENTITY((read), max((read), (read)))) / 1u), ((read)) | ((read))) - 0u)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read, clamp(read, read, read))), ((read)) | ((read))) - 0u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((read), (false ? _GLF_FUZZED(virtual_gid) : (read))), ((read)) | ((read))) - 0u), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY((read), ((read)) | ((read))) - 0u), max(_GLF_IDENTITY((_GLF_IDENTITY((read), ((read)) | ((read))) - 0u), min((_GLF_IDENTITY((read), ((read)) | ((read))) - 0u), (_GLF_IDENTITY((read), ((read)) | ((_GLF_IDENTITY(read, (read) - 0u)))) - 0u))), _GLF_IDENTITY((_GLF_IDENTITY((read), _GLF_IDENTITY(((read)) | ((read)), (1u ^ 1u) ^ (((read)) | ((read))))) - 0u), (true ? (_GLF_IDENTITY((read), ((read)) | ((read))) - 0u) : _GLF_FUZZED(subgroup_id))))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-359.082), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(887.756)), bvec2(true, false))).y)), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u)))), min(uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY((read), ((read)) | ((read))) - _GLF_IDENTITY(0u, (0u) | (0u))), max(_GLF_IDENTITY((_GLF_IDENTITY((read), _GLF_IDENTITY(((read)) | ((read)), (false ? _GLF_FUZZED(atomicMin(subgroup_size, num_workgroup)) : ((read)) | ((read))))) - 0u), min((_GLF_IDENTITY((read), ((_GLF_IDENTITY(read, (read) << 0u))) | ((read))) - _GLF_IDENTITY(0u, 1u * (0u))), (_GLF_IDENTITY((read), ((read)) | ((read))) - 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, min(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, _GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, ~ (~ (_GLF_IDENTITY((read), ((read)) | ((read))) - 0u)))))), (true ? (_GLF_IDENTITY((read), ((read)) | ((read))) - 0u) : _GLF_FUZZED(subgroup_id))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((read), ((read)) | ((read))) - 0u), max(_GLF_IDENTITY((_GLF_IDENTITY((read), ((read)) | ((read))) - 0u), min((_GLF_IDENTITY((read), ((read)) | ((read))) - 0u), (_GLF_IDENTITY((read), ((read)) | ((read))) - 0u))), _GLF_IDENTITY((_GLF_IDENTITY((read), ((read)) | ((read))) - 0u), (true ? (_GLF_IDENTITY((read), ((read)) | ((read))) - 0u) : _GLF_FUZZED(subgroup_id))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((read), ((read)) | ((read))) - 0u), max(_GLF_IDENTITY((_GLF_IDENTITY((read), ((read)) | ((read))) - 0u), min((_GLF_IDENTITY((read), ((read)) | ((read))) - 0u), (_GLF_IDENTITY((read), ((read)) | ((read))) - 0u))), _GLF_IDENTITY((_GLF_IDENTITY((read), ((_GLF_IDENTITY(read, (read) | (read)))) | ((read))) - _GLF_IDENTITY(0u, 0u | (0u))), (true ? (_GLF_IDENTITY((read), ((read)) | ((read))) - 0u) : _GLF_FUZZED(subgroup_id)))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, min(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, _GLF_IDENTITY((read), ((read)) | ((_GLF_IDENTITY(read, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read), (uint(read)) / 1u)), uint(uvec3(uint(_GLF_IDENTITY(uint(read), (uint(read)) / 1u)), 0u, 0u))))))) - 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))), (_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | (_GLF_IDENTITY((read), ~ (~ ((read)))))), min(_GLF_IDENTITY((read), ((read)) | ((read))), _GLF_IDENTITY((read), ((read)) | ((read)))))) | 0u), ((1u ^ 1u) >> _GLF_IDENTITY(uint(5u), uint(5u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))), (_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | (_GLF_IDENTITY((read), (_GLF_IDENTITY((read), 0u ^ (_GLF_IDENTITY((read), ((read)) + 0u)))) >> 0u))), min(_GLF_IDENTITY((read), ((read)) | ((read))), _GLF_IDENTITY((read), ((read)) | ((read)))))) | 0u))) - 0u) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, min(_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((_GLF_IDENTITY(read, _GLF_IDENTITY(0u, (0u) - 0u) | (read))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((read), ((read)) | ((read)))), (~ (_GLF_IDENTITY((read), _GLF_IDENTITY(((read)) | ((read)), (((read)) | ((read))) + (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), 1u))) - 0u, _GLF_IDENTITY((read), ((read)) | ((read))) - 0u))), min((_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, min(_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((_GLF_IDENTITY(read, _GLF_IDENTITY(0u, (0u) - 0u) | (read))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((read), ((read)) | ((read)))), (~ (_GLF_IDENTITY((read), _GLF_IDENTITY(((read)) | ((read)), (((read)) | ((read))) + (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), 1u))) - 0u, _GLF_IDENTITY((read), ((read)) | ((read))) - 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, min(_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((_GLF_IDENTITY(read, _GLF_IDENTITY(0u, (0u) - 0u) | (read))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((read), ((read)) | ((read)))), (~ (_GLF_IDENTITY((read), _GLF_IDENTITY(((read)) | ((read)), (((read)) | ((read))) + (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), 1u))) - 0u, _GLF_IDENTITY((read), ((read)) | ((read))) - 0u))), clamp((_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, min(_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((_GLF_IDENTITY(read, _GLF_IDENTITY(0u, (0u) - 0u) | (read))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((read), ((read)) | ((read)))), (~ (_GLF_IDENTITY((read), _GLF_IDENTITY(((read)) | ((read)), (((read)) | ((read))) + (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), 1u))) - 0u, _GLF_IDENTITY((read), ((read)) | ((read))) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, min(_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((_GLF_IDENTITY(read, _GLF_IDENTITY(0u, (0u) - 0u) | (read))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((read), ((read)) | ((read)))), (~ (_GLF_IDENTITY((read), _GLF_IDENTITY(((read)) | ((read)), (((read)) | ((read))) + (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), 1u))) - 0u, _GLF_IDENTITY((read), ((read)) | ((read))) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))) - 0u, min(_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((read))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) | ((_GLF_IDENTITY(read, _GLF_IDENTITY(0u, (0u) - 0u) | (read))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((read), ((read)) | ((read)))), (~ (_GLF_IDENTITY((read), _GLF_IDENTITY(((read)) | ((read)), (((read)) | ((read))) + (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), 1u))) - 0u, _GLF_IDENTITY((read), ((read)) | ((read))) - 0u)))))))))))))))))))))) + _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u)))))) - 0u), max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u)))))) - 0u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u)))))) - 0u))))), 4, 64, 4);
        }
       for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) + 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       subgroupAll(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && true))))))))));
      }
     else
      {
       atomicStore(checker[virtual_gid], read, 4, 64, 4);
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             return;
            }
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))
            {
             return;
            }
           else
            {
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), 1, 1, 1), (ivec4(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), 1, 1, 1)) | (ivec4(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), 1, 1, 1)))))); _injected_loop_counter --)
        {
         subgroupAll(true);
        }
      }
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
}
