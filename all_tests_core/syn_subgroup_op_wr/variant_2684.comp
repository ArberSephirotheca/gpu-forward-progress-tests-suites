#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 mat3 _f0;
 uvec3 _f1;
 bvec4 _f2;
 vec4 _f3;
 uint _f4;
} ;

struct _GLF_struct_3 {
 vec4 _f0;
 uvec2 _f1;
 bvec3 _f2;
 mat3 _f3;
 int _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_2 {
 mat3x4 _f0;
 ivec4 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_5 {
 _GLF_struct_2 _f0;
 vec2 _f1;
 mat3x2 _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_4 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_6 {
 mat4x3 _f0;
 ivec4 _f1;
 int _f2;
 uint workgroup_size;
 _GLF_struct_5 _f3;
 uint _f4;
} ;

struct _GLF_struct_0 {
 mat4x3 _f0;
 mat2x4 _f1;
 vec4 _f2;
 uint read;
 bvec4 _f3;
 mat4 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 uvec3 _f1;
 vec4 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id;
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y = subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(mat4x3(1.0), ivec4(1), 1, gl_WorkGroupSize.x, _GLF_struct_5(_GLF_struct_2(mat3x4(1.0), ivec4(1), uvec2(1u)), vec2(1.0), mat3x2(1.0), _GLF_struct_3(vec4(1.0), uvec2(1u), bvec3(true), mat3(1.0), 1, ivec2(1)), _GLF_struct_4(mat3(1.0), uvec3(1u), bvec4(true), vec4(1.0), 1u), ivec4(1)), 1u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_struct_replacement_6.workgroup_size * workgroup_id;
 GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.z = workgroup_base;
 uint virtual_gid = GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.z + GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x * GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x + GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y;
 GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.y = virtual_gid;
 uint next_virtual_gid = GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.z + GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x * GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x + ((GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) % GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(_GLF_struct_0(mat4x3(1.0), mat2x4(1.0), vec4(1.0), atomicLoad(buf[GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.y], 4, 64, 0), bvec4(true), mat4(1.0), bvec3(true)), uvec3(1u), vec4(1.0));
 if(_GLF_DEAD(false))
  return;
 if(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1 < GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x)
  {
   atomicStore(checker[GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.y], _GLF_struct_replacement_1._f0.read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
  }
 else
  {
   atomicStore(checker[GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.y], _GLF_struct_replacement_1._f0.read, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
  }
}
