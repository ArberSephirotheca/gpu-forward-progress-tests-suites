#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED((uvec3(88947u, 188278u, 113670u) ^ uvec3(_GLF_IDENTITY(151618u, (151618u) | (151618u)), 138381u, 18877u))) : _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)))).x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size))) - 0u)) >> 0u) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u);
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, uint(uvec2((subgroup_size) / 1u, _GLF_IDENTITY(1u, (1u) << 0u)))))) >> (0u | 0u)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (subgroup_size) / 1u)) >> (0u | 0u)))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) / 1u));
 for(int _injected_loop_counter = (_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(~ (~ (1)), max(~ (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), (~ (1)) + 0)) >> 0)), ~ (~ (1))))), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-14766)))) << (0 << _GLF_IDENTITY(int(4), int(4)))))) ^ (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | (int(_GLF_IDENTITY(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, min(6, 6))) >> 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, min(6, 6))) >> 0), (_GLF_IDENTITY(6, (_GLF_IDENTITY(6, min(6, 6))) >> 0)) + 0))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, 0 | (0))); _injected_loop_counter --)
  {
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (false ? _GLF_FUZZED(workgroup_base) : next_virtual_gid))) - 0u)], uint(1), 4, 64, 4);
  }
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) >> 0), 64, 0);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((true), false || ((true))), (_GLF_IDENTITY((true), false || _GLF_IDENTITY(_GLF_IDENTITY(((true)), (((true))) || false), _GLF_IDENTITY(bool(bvec2(((true)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(((true)), false)), (bool(bvec2(((true)), false))) || false))))))) || false), true && (! _GLF_IDENTITY(_GLF_IDENTITY((true), false || _GLF_IDENTITY(((true)), ! (! (((true)))))), (_GLF_IDENTITY((true), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false) || ((true)))) || false)))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! _GLF_IDENTITY((true), _GLF_IDENTITY(false, ! (! (false))) || ((true))), true && (! _GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec2((true), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2((true), true)), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false, false)), (bool(bvec4(bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec3(bvec2((true), true), true)))), false, false, false))) && true))), false || ((true)))))), true)), (bool(bvec2((! _GLF_IDENTITY((true), false || (_GLF_IDENTITY(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) && true)) && true), ((true)) && true)))), true))) || false)))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) != 0); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))))
      {
       switch(_GLF_IDENTITY(_GLF_SWITCH((0 | 0)), (true ? _GLF_SWITCH((0 | 0)) : _GLF_FUZZED(-74335))))
        {
         case 32:
         if(true)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (true) || false)) && true), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), bool(bvec4(! ((true)), true, true, true)))))), (true) || false)) && true), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (true) || false)) && true), true), false)), true))))))) && true)))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                {
                 mat4x3(6.8);
                }
              }
             else
              {
              }
            }
           else
            {
            }
           do
            {
             _GLF_IDENTITY(uvec4(45857u, 148284u, 143060u, 103925u), max(uvec4(45857u, 148284u, 143060u, 103925u), uvec4(45857u, 148284u, 143060u, 103925u)));
            }
           while(_GLF_WRAPPED_LOOP(false));
           (uvec4(_GLF_IDENTITY(85628u, ~ (~ (85628u))), 93918u, 158814u, 144242u) / virtual_gid);
           mat3x4 _GLF_SWITCH_0_0v[17], _GLF_SWITCH_0_1v;
           uint _GLF_SWITCH_0_2v[34], _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v;
           if((_GLF_IDENTITY(_GLF_IDENTITY(mat2x3(371.860, 6.8, -441.976, 393.015, -54.41, 3.3) == mat2x3(-810.988, -5130.5849, -6.4, 6.5, -4.0, -7.3), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(mat2x3(371.860, 6.8, -441.976, 393.015, -54.41, 3.3) == mat2x3(-810.988, -5130.5849, -6.4, 6.5, _GLF_IDENTITY(-4.0, min(-4.0, _GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(-6.7)), float(-4.0), bool(true))))), -7.3), _GLF_IDENTITY((_GLF_IDENTITY(mat2x3(371.860, 6.8, -441.976, 393.015, -54.41, 3.3) == mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(-810.988, clamp(-810.988, -810.988, _GLF_IDENTITY(-810.988, (-810.988) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) / 1.0), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(-810.988, clamp(-810.988, -810.988, _GLF_IDENTITY(-810.988, (-810.988) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) / 1.0), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))), max(_GLF_IDENTITY(-810.988, clamp(-810.988, -810.988, _GLF_IDENTITY(-810.988, (-810.988) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) / 1.0), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))), _GLF_IDENTITY(-810.988, clamp(-810.988, -810.988, _GLF_IDENTITY(-810.988, (-810.988) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) / 1.0), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))))), _GLF_IDENTITY(-810.988, clamp(-810.988, -810.988, _GLF_IDENTITY(-810.988, (-810.988) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) / 1.0), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))), _GLF_IDENTITY(-810.988, clamp(-810.988, -810.988, _GLF_IDENTITY(-810.988, (-810.988) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) / 1.0), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))))), -5130.5849, -6.4, 6.5, -4.0, -7.3), (mat2x3(371.860, 6.8, -441.976, 393.015, -54.41, 3.3) == mat2x3(_GLF_IDENTITY(-810.988, clamp(-810.988, -810.988, _GLF_IDENTITY(-810.988, (-810.988) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) / 1.0), dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec3(0.0, 1.0, 0.0)))))), -5130.5849, -6.4, 6.5, -4.0, -7.3)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), ! (! ((mat2x3(371.860, 6.8, -441.976, 393.015, -54.41, 3.3) == mat2x3(_GLF_IDENTITY(-810.988, clamp(-810.988, -810.988, _GLF_IDENTITY(_GLF_IDENTITY(-810.988, (-810.988) / _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), (true ? _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), min(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))) : _GLF_FUZZED(-271.135))), (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) / 1.0), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0)))), min(_GLF_IDENTITY(-810.988, (-810.988) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) / 1.0), dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) / vec3(1.0, 1.0, 1.0)), vec3(0.0, 1.0, 0.0)))), _GLF_IDENTITY(-810.988, (-810.988) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) / 1.0), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))))), -5130.5849, -6.4, 6.5, -4.0, -7.3)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(mat2x3(371.860, 6.8, -441.976, 393.015, _GLF_IDENTITY(-54.41, mix(float(_GLF_FUZZED(-4.2)), float(_GLF_IDENTITY(-54.41, min(-54.41, -54.41))), bool(true))), 3.3) == mat2x3(-810.988, -5130.5849, -6.4, 6.5, -4.0, -7.3), _GLF_IDENTITY((mat2x3(371.860, 6.8, -441.976, 393.015, -54.41, 3.3) == mat2x3(_GLF_IDENTITY(-810.988, max(-810.988, -810.988)), _GLF_IDENTITY(-5130.5849, _GLF_IDENTITY(clamp(-5130.5849, -5130.5849, -5130.5849), (clamp(-5130.5849, -5130.5849, -5130.5849)) / 1.0)), -6.4, _GLF_IDENTITY(6.5, float(mat3x2(_GLF_IDENTITY(6.5, (6.5) + sin(0.0)), 1.0, 1.0, exp(0.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), (dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))) / 1.0), clamp(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, abs(1.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, abs(1.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), vec3(1.0, 0.0, 0.0))), 0.0)), clamp(float(mat4x3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, abs(1.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, abs(1.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), vec3(1.0, 0.0, 0.0))), 0.0)), float(mat4x3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, abs(1.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, abs(1.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), vec3(1.0, 0.0, 0.0))), 0.0)), float(mat4x3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, abs(1.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, abs(1.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), vec3(1.0, 0.0, 0.0))), 0.0))))), 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))), mix(float(_GLF_FUZZED(487.953)), float(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), bool(true))), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), dot(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))))), -4.0, -7.3)), ((mat2x3(371.860, 6.8, -441.976, 393.015, -54.41, 3.3) == mat2x3(_GLF_IDENTITY(-810.988, max(-810.988, -810.988)), _GLF_IDENTITY(-5130.5849, _GLF_IDENTITY(clamp(-5130.5849, -5130.5849, -5130.5849), (clamp(-5130.5849, -5130.5849, -5130.5849)) / 1.0)), -6.4, _GLF_IDENTITY(6.5, float(mat3x2(_GLF_IDENTITY(6.5, (6.5) + sin(0.0)), 1.0, 1.0, exp(0.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), (dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))) / 1.0), clamp(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, abs(1.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, abs(1.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), vec3(1.0, 0.0, 0.0))), 0.0)), clamp(float(mat4x3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, abs(1.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, abs(1.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), vec3(1.0, 0.0, 0.0))), 0.0)), float(mat4x3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, abs(1.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, abs(1.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), vec3(1.0, 0.0, 0.0))), 0.0)), float(mat4x3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, abs(1.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, abs(1.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), vec3(1.0, 0.0, 0.0))), 0.0))))), 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))), mix(float(_GLF_FUZZED(487.953)), float(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), bool(true))), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), dot(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))))), -4.0, -7.3))) && true) || _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) && true)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) && true))), (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) && true)))) || false))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(mat2x3(371.860, 6.8, -441.976, 393.015, -54.41, 3.3) == mat2x3(-810.988, -5130.5849, -6.4, 6.5, -4.0, -7.3), (mat2x3(371.860, 6.8, -441.976, 393.015, _GLF_IDENTITY(-54.41, (false ? _GLF_FUZZED(7.1) : -54.41)), _GLF_IDENTITY(3.3, min(3.3, _GLF_IDENTITY(3.3, mix(float(_GLF_FUZZED(-5.1)), float(3.3), bool(true)))))) == mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(-810.988, float(_GLF_IDENTITY(mat2(-810.988, exp(0.0), 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat2(-810.988, _GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), _GLF_IDENTITY(exp(0.0), mix(float(exp(0.0)), float(_GLF_FUZZED(-105.781)), bool(false))))), 1.0, 0.0)), transpose(transpose(transpose(_GLF_IDENTITY(mat2(-810.988, exp(0.0), 1.0, 0.0), mat2(mat3x2(mat2(-810.988, exp(0.0), 1.0, 0.0)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(max(-810.988, -810.988), clamp(max(-810.988, -810.988), max(-810.988, -810.988), max(-810.988, -810.988))), max(_GLF_IDENTITY(max(-810.988, -810.988), clamp(max(-810.988, -810.988), max(-810.988, -810.988), max(-810.988, -810.988))), _GLF_IDENTITY(max(-810.988, -810.988), clamp(max(-810.988, -810.988), max(-810.988, -810.988), max(-810.988, -810.988)))))), -5130.5849, -6.4, 6.5, -4.0, -7.3)) || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).y))), bool(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(-0.7, -8.7))))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).y))), true, false)))))) || false), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec2(! (_GLF_IDENTITY(mat2x3(371.860, 6.8, -441.976, _GLF_IDENTITY(393.015, min(393.015, 393.015)), -54.41, 3.3) == mat2x3(-810.988, -5130.5849, -6.4, 6.5, -4.0, _GLF_IDENTITY(-7.3, _GLF_IDENTITY(float(vec4(-7.3, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0)), (_GLF_IDENTITY(float(vec4(-7.3, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-768.493)), mix(float(_GLF_FUZZED(44.65)), float(float(_GLF_FUZZED(-768.493))), bool(true))), float(float(vec4(-7.3, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0))), bool(true)))) + 0.0))), (_GLF_IDENTITY(mat2x3(371.860, 6.8, _GLF_IDENTITY(-441.976, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (-441.976)), 393.015, -54.41, _GLF_IDENTITY(3.3, (true ? 3.3 : _GLF_FUZZED(1.6)))) == mat2x3(_GLF_IDENTITY(-810.988, (-810.988) / 1.0), -5130.5849, -6.4, 6.5, -4.0, -7.3), ! (! (mat2x3(371.860, 6.8, _GLF_IDENTITY(-441.976, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (-441.976), max(round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (-441.976), round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (-441.976)))), 393.015, -54.41, _GLF_IDENTITY(3.3, (true ? 3.3 : _GLF_FUZZED(1.6)))) == mat2x3(_GLF_IDENTITY(-810.988, (-810.988) / 1.0), -5130.5849, -6.4, 6.5, -4.0, -7.3))))) || _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true)), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true)), (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), false, _GLF_IDENTITY(true, false || (true)))))))))), true && (_GLF_IDENTITY(mat2x3(371.860, 6.8, -441.976, 393.015, -54.41, 3.3) == mat2x3(-810.988, -5130.5849, -6.4, _GLF_IDENTITY(6.5, max(6.5, 6.5)), -4.0, -7.3), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(mat2x3(371.860, 6.8, -441.976, 393.015, -54.41, 3.3) == mat2x3(-810.988, -5130.5849, -6.4, 6.5, _GLF_IDENTITY(-4.0, min(_GLF_IDENTITY(-4.0, min(-4.0, -4.0)), _GLF_IDENTITY(-4.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-6.7)), (float(_GLF_FUZZED(-6.7))) / exp(0.0)), _GLF_IDENTITY(float(-4.0), (float(-4.0)) - abs(0.0)), bool(true))))), -7.3), _GLF_IDENTITY((_GLF_IDENTITY(mat2x3(371.860, 6.8, -441.976, 393.015, -54.41, 3.3) == mat2x3(_GLF_IDENTITY(-810.988, clamp(-810.988, -810.988, _GLF_IDENTITY(-810.988, (-810.988) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) / 1.0), dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), vec3(0.0, 1.0, 0.0)))))), -5130.5849, -6.4, 6.5, -4.0, -7.3), (mat2x3(371.860, 6.8, -441.976, 393.015, -54.41, 3.3) == mat2x3(_GLF_IDENTITY(-810.988, clamp(-810.988, -810.988, _GLF_IDENTITY(-810.988, (-810.988) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), (dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))) : _GLF_FUZZED(sinh((4.5)))))), vec3(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 0.0))) / 1.0), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))), -5130.5849, -6.4, 6.5, -4.0, -7.3)) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-69.42)), vec2(_GLF_FUZZED(-49.16), _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], abs(1.0) * (_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0))), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(33.30)))))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (true) || false), true)), false || (bool(bvec2(_GLF_IDENTITY(true, (true) || false), true)))))))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), ! (! ((mat2x3(371.860, 6.8, -441.976, 393.015, -54.41, 3.3) == mat2x3(_GLF_IDENTITY(-810.988, clamp(-810.988, _GLF_IDENTITY(-810.988, (-810.988) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(-810.988, _GLF_IDENTITY((-810.988), clamp((-810.988), (-810.988), (-810.988))) / _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5791.8065) : 0.0))))) / 1.0), (_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0), 0.0)), (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) / 1.0)) - 0.0), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0)))), min(_GLF_IDENTITY(-810.988, (-810.988) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) / 1.0), dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) / vec3(1.0, 1.0, 1.0)), vec3(0.0, 1.0, 0.0)))), _GLF_IDENTITY(-810.988, (-810.988) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) / 1.0), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, (0.0) - tan(_GLF_IDENTITY(0.0, (0.0) - 0.0))), 1.0, 0.0)))))))), -5130.5849, -6.4, 6.5, -4.0, -7.3)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(mat2x3(371.860, 6.8, -441.976, 393.015, _GLF_IDENTITY(-54.41, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-4.2, (true ? -4.2 : _GLF_FUZZED(tanh(5.2)))))), float(_GLF_IDENTITY(-54.41, min(-54.41, -54.41))), _GLF_IDENTITY(bool(true), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))), (_GLF_IDENTITY(bool(true), ! (! (bool(true))))) && true), false))))), 3.3) == mat2x3(-810.988, -5130.5849, -6.4, 6.5, -4.0, -7.3), (mat2x3(371.860, 6.8, -441.976, 393.015, -54.41, 3.3) == mat2x3(-810.988, _GLF_IDENTITY(-5130.5849, _GLF_IDENTITY(clamp(-5130.5849, _GLF_IDENTITY(_GLF_IDENTITY(-5130.5849, (-5130.5849) / 1.0), (_GLF_IDENTITY(-5130.5849, (false ? _GLF_FUZZED(-976.008) : -5130.5849))) / 1.0), -5130.5849), (clamp(-5130.5849, -5130.5849, -5130.5849)) / 1.0)), -6.4, _GLF_IDENTITY(6.5, float(mat3x2(_GLF_IDENTITY(6.5, (6.5) + sin(0.0)), 1.0, 1.0, exp(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED(-5.8)), float(1.0), bool(true)))) - 0.0) : _GLF_FUZZED(float(true)))), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), clamp(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, 0.0)), mix(float(_GLF_FUZZED(487.953)), float(dot(vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), bool(true))), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), dot(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))))), -4.0, -7.3)) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))).y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) && true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(mat2x3(371.860, 6.8, -441.976, 393.015, -54.41, 3.3) == mat2x3(-810.988, -5130.5849, -6.4, 6.5, -4.0, -7.3), (mat2x3(371.860, 6.8, -441.976, 393.015, _GLF_IDENTITY(-54.41, (false ? _GLF_FUZZED(_GLF_IDENTITY(7.1, (_GLF_IDENTITY(7.1, max(7.1, 7.1))) - 0.0)) : -54.41)), _GLF_IDENTITY(_GLF_IDENTITY(3.3, min(3.3, _GLF_IDENTITY(3.3, mix(float(_GLF_FUZZED(-5.1)), float(3.3), bool(true))))), (_GLF_IDENTITY(3.3, _GLF_IDENTITY(min(3.3, _GLF_IDENTITY(3.3, mix(float(_GLF_FUZZED(-5.1)), float(3.3), bool(true)))), 1.0 * (min(3.3, _GLF_IDENTITY(3.3, mix(float(_GLF_FUZZED(-5.1)), float(3.3), bool(true)))))))) / 1.0)) == mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(-810.988, float(_GLF_IDENTITY(mat2(-810.988, exp(0.0), 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat2(-810.988, exp(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 1.0, 0.0)), transpose(transpose(transpose(mat2(-810.988, exp(0.0), 1.0, 0.0))))))))), _GLF_IDENTITY(max(-810.988, -810.988), clamp(max(-810.988, -810.988), max(-810.988, -810.988), max(-810.988, -810.988)))), -5130.5849, -6.4, 6.5, -4.0, -7.3)) || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, log(1.0)))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))), mat2(1.0) * (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED((3632.1397))), bool(false)))), float(_GLF_FUZZED(6.8)), bool(false))), injectionSwitch.y)) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))))))).y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-583.171)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true)))) * (injectionSwitch)))).y))), bool(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).y))), true, false)))))) || false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true)))))), bool(bvec2(! (_GLF_IDENTITY(mat2x3(371.860, 6.8, -441.976, _GLF_IDENTITY(393.015, min(393.015, 393.015)), -54.41, 3.3) == mat2x3(-810.988, -5130.5849, -6.4, 6.5, -4.0, _GLF_IDENTITY(-7.3, _GLF_IDENTITY(float(vec4(-7.3, determinant(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), (_GLF_IDENTITY(float(vec4(-7.3, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0)), mix(float(_GLF_FUZZED(-768.493)), float(float(vec4(-7.3, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(false))), float(0.0), bool(true))), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(22.03)), float(0.0), bool(true))), 0.0, 0.0))))), 0.0, 1.0))), bool(true)))) + 0.0))), (mat2x3(371.860, 6.8, _GLF_IDENTITY(-441.976, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (-441.976)), 393.015, -54.41, _GLF_IDENTITY(3.3, (true ? 3.3 : _GLF_FUZZED(1.6)))) == mat2x3(_GLF_IDENTITY(-810.988, (-810.988) / 1.0), -5130.5849, -6.4, 6.5, -4.0, -7.3)) || _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))) && true)), (injectionSwitch.x > injectionSwitch.y)))), false))), false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, false, false))))), false || (true)))), bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(mat2x3(371.860, 6.8, -441.976, 393.015, -54.41, 3.3) == mat2x3(-810.988, -5130.5849, -6.4, 6.5, -4.0, -7.3), (mat2x3(371.860, 6.8, -441.976, 393.015, _GLF_IDENTITY(-54.41, (false ? _GLF_FUZZED(_GLF_IDENTITY(7.1, (_GLF_IDENTITY(7.1, max(7.1, 7.1))) - 0.0)) : -54.41)), _GLF_IDENTITY(_GLF_IDENTITY(3.3, min(3.3, _GLF_IDENTITY(3.3, mix(float(_GLF_FUZZED(-5.1)), float(3.3), bool(true))))), (_GLF_IDENTITY(3.3, _GLF_IDENTITY(min(3.3, _GLF_IDENTITY(3.3, mix(float(_GLF_FUZZED(-5.1)), float(3.3), bool(true)))), 1.0 * (min(3.3, _GLF_IDENTITY(3.3, mix(float(_GLF_FUZZED(-5.1)), float(3.3), bool(true)))))))) / 1.0)) == mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(-810.988, float(_GLF_IDENTITY(mat2(-810.988, exp(0.0), 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat2(-810.988, exp(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 1.0, 0.0)), transpose(transpose(transpose(mat2(-810.988, exp(0.0), 1.0, 0.0))))))))), _GLF_IDENTITY(max(-810.988, -810.988), clamp(max(-810.988, -810.988), max(-810.988, -810.988), max(-810.988, -810.988)))), -5130.5849, -6.4, 6.5, -4.0, -7.3)) || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, log(1.0)))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))), mat2(1.0) * (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED((3632.1397))), bool(false)))), float(_GLF_FUZZED(6.8)), bool(false))), injectionSwitch.y)) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))))))).y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-583.171)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true)))) * (injectionSwitch)))).y))), bool(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).y))), true, false)))))) || false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true)))))), bool(bvec2(! (_GLF_IDENTITY(mat2x3(371.860, 6.8, -441.976, _GLF_IDENTITY(393.015, min(393.015, 393.015)), -54.41, 3.3) == mat2x3(-810.988, -5130.5849, -6.4, 6.5, -4.0, _GLF_IDENTITY(-7.3, _GLF_IDENTITY(float(vec4(-7.3, determinant(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), (_GLF_IDENTITY(float(vec4(-7.3, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0)), mix(float(_GLF_FUZZED(-768.493)), float(float(vec4(-7.3, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(false))), float(0.0), bool(true))), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(22.03)), float(0.0), bool(true))), 0.0, 0.0))))), 0.0, 1.0))), bool(true)))) + 0.0))), (mat2x3(371.860, 6.8, _GLF_IDENTITY(-441.976, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (-441.976)), 393.015, -54.41, _GLF_IDENTITY(3.3, (true ? 3.3 : _GLF_FUZZED(1.6)))) == mat2x3(_GLF_IDENTITY(-810.988, (-810.988) / 1.0), -5130.5849, -6.4, 6.5, -4.0, -7.3)) || _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))) && true)), (injectionSwitch.x > injectionSwitch.y)))), false))), false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, false, false))))), false || (true)))), ! (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(mat2x3(371.860, 6.8, -441.976, 393.015, -54.41, 3.3) == mat2x3(-810.988, -5130.5849, -6.4, 6.5, -4.0, -7.3), (mat2x3(371.860, 6.8, -441.976, 393.015, _GLF_IDENTITY(-54.41, (false ? _GLF_FUZZED(_GLF_IDENTITY(7.1, (_GLF_IDENTITY(7.1, max(7.1, 7.1))) - 0.0)) : -54.41)), _GLF_IDENTITY(_GLF_IDENTITY(3.3, min(3.3, _GLF_IDENTITY(3.3, mix(float(_GLF_FUZZED(-5.1)), float(3.3), bool(true))))), (_GLF_IDENTITY(3.3, _GLF_IDENTITY(min(3.3, _GLF_IDENTITY(3.3, mix(float(_GLF_FUZZED(-5.1)), float(3.3), bool(true)))), 1.0 * (min(3.3, _GLF_IDENTITY(3.3, mix(float(_GLF_FUZZED(-5.1)), float(3.3), bool(true)))))))) / 1.0)) == mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(-810.988, float(_GLF_IDENTITY(mat2(-810.988, exp(0.0), 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat2(-810.988, exp(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 1.0, 0.0)), transpose(transpose(transpose(mat2(-810.988, exp(0.0), 1.0, 0.0))))))))), _GLF_IDENTITY(max(-810.988, -810.988), clamp(max(-810.988, -810.988), max(-810.988, -810.988), max(-810.988, -810.988)))), -5130.5849, -6.4, 6.5, -4.0, -7.3)) || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, log(1.0)))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))), mat2(1.0) * (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED((3632.1397))), bool(false)))), float(_GLF_FUZZED(6.8)), bool(false))), injectionSwitch.y)) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))))))).y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-583.171)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true)))) * (injectionSwitch)))).y))), bool(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).y))), true, false)))))) || false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true)))))), bool(bvec2(! (_GLF_IDENTITY(mat2x3(371.860, 6.8, -441.976, _GLF_IDENTITY(393.015, min(393.015, 393.015)), -54.41, 3.3) == mat2x3(-810.988, -5130.5849, -6.4, 6.5, -4.0, _GLF_IDENTITY(-7.3, _GLF_IDENTITY(float(vec4(-7.3, determinant(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), (_GLF_IDENTITY(float(vec4(-7.3, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0)), mix(float(_GLF_FUZZED(-768.493)), float(float(vec4(-7.3, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(false))), float(0.0), bool(true))), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(22.03)), float(0.0), bool(true))), 0.0, 0.0))))), 0.0, 1.0))), bool(true)))) + 0.0))), (mat2x3(371.860, 6.8, _GLF_IDENTITY(-441.976, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (-441.976)), 393.015, -54.41, _GLF_IDENTITY(3.3, (true ? 3.3 : _GLF_FUZZED(1.6)))) == mat2x3(_GLF_IDENTITY(-810.988, (-810.988) / 1.0), -5130.5849, -6.4, 6.5, -4.0, -7.3)) || _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))) && true)), (injectionSwitch.x > injectionSwitch.y)))), false))), false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, false, false))))), false || (true))))))), true, true, false)))))))))))))
            {
            }
           ;
           ;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (true))))) ? _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))) : _GLF_FUZZED(mod(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
            {
            }
           else
            {
             notEqual(ivec4(1829, -40338, 42721, -37233), (ivec4(-56086, _GLF_IDENTITY(-34583, (-34583) + 0), -41862, 24456)));
            }
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   mat3x4(336.879, 7772.8375, 4606.9543, 18.09, -91.16, -10.74, 32.10, -855.816, 6.6, -9.0, 2.2, _GLF_IDENTITY(-5.3, float(mat2x3(-5.3, determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2965.3119) : 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), max(1.0, 1.0)), 0.0, sin(0.0), 0.0, 1.0)), 0.0, log(1.0), 0.0, 0.0))));
                  }
                 else
                  {
                  }
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 mat4x3(-6.7, -4.3, -282.963, -4.7, -26.94, 59.40, -8.8, _GLF_IDENTITY(-6.6, max(-6.6, _GLF_IDENTITY(-6.6, _GLF_IDENTITY((-6.6) / 1.0, max((-6.6) / 1.0, (-6.6) / 1.0))))), _GLF_IDENTITY(-1.8, (-1.8) + 0.0), -216.262, -49.77, 3.7);
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 _GLF_IDENTITY(_GLF_IDENTITY(ivec4(ivec2(-29685, 6900), ivec2(-58940, _GLF_IDENTITY(46066, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(46066, clamp(46066, 46066, 46066)))))), (ivec4(ivec2(-29685, 6900), ivec2(-58940, 46066))) - _GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0) | _GLF_IDENTITY(ivec4(0, 0, 0, 0), clamp(ivec4(0, 0, 0, 0), ivec4(0, 0, 0, 0), _GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) + ivec4(0, 0, 0, 0))))) ^ (ivec4(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | (_GLF_IDENTITY(0, min(0, 0)))), 0)))), (_GLF_IDENTITY(ivec4(ivec2(-29685, 6900), _GLF_IDENTITY(ivec2(-58940, 46066), (ivec2(-58940, 46066)) | (ivec2(-58940, 46066)))), (ivec4(ivec2(-29685, 6900), ivec2(-58940, 46066))) - _GLF_IDENTITY(ivec4(0, 0, 0, _GLF_IDENTITY(0, ~ (~ (0)))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 0, 0, 0) | ivec4(0, 0, 0, 0), ivec4(0, 0, 0, 0) | (ivec4(0, 0, 0, 0) | ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | ivec4(0, 0, 0, 0), ivec4(0, 0, 0, 0) | (ivec4(0, 0, 0, 0) | ivec4(0, 0, 0, 0)))) | (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | ivec4(0, 0, 0, 0), ivec4(0, 0, 0, 0) | (ivec4(0, 0, 0, 0) | ivec4(0, 0, 0, 0)))))) ^ (ivec4(0, 0, 0, 0))))) | ivec4(_GLF_IDENTITY(0, ~ (~ (0))), 0, 0, 0));
                }
               else
                {
                }
               do
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     ;
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while((_GLF_IDENTITY(-14.35, (_GLF_IDENTITY(-14.35, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(5.7) : -14.35))) / 1.0) > -4.7));
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             mat4(-5.9, 168.421, 90.54, 8123.2212, 61.36, -7080.0226, -9.6, 5.5, _GLF_IDENTITY(25.58, (25.58) * 1.0), -89.71, -5.0, _GLF_IDENTITY(-1.0, 0.0 + (-1.0)), -2.0, -7.9, 252.206, -4375.6720);
            }
           do
            {
             uvec2 _GLF_SWITCH_0_5v[52], _GLF_SWITCH_0_6v;
             do
              {
               while(false)
                {
                 ;
                 mat4x3 _GLF_SWITCH_0_7v[65];
                 ivec2 _GLF_SWITCH_0_8v[26];
                 vec2(_GLF_IDENTITY(-33.04, max(_GLF_IDENTITY(-33.04, 0.0 + (-33.04)), -33.04)), 1.1);
                 mat4x2 _GLF_SWITCH_0_9v;
                 mat3x2(_GLF_IDENTITY(-5.5, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(10.30) : -5.5)), -3376.5145, _GLF_IDENTITY(1.8, max(1.8, 1.8)), -0.0, -7.8, -547.955);
                 bvec3 _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v;
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))));
             uvec3 _GLF_SWITCH_0_13v;
             do
              {
               bvec3 _GLF_SWITCH_0_14v, _GLF_SWITCH_0_15v;
               mat3x2 _GLF_SWITCH_0_16v, _GLF_SWITCH_0_17v;
               vec2 _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v[34], _GLF_SWITCH_0_20v;
               mat2x3 _GLF_SWITCH_0_21v;
               uvec4 _GLF_SWITCH_0_22v, _GLF_SWITCH_0_23v;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 vec4(617.343, 1914.5791, -8650.1107, 1006.7560).zwwy;
                }
               else
                {
                }
               ;
               greaterThanEqual((max(_GLF_SWITCH_0_23v, subgroup_local_id) + uvec4(155378u, 142915u, 185828u, 81131u)), (_GLF_SWITCH_0_22v % _GLF_SWITCH_0_23v));
              }
             while(_GLF_WRAPPED_LOOP(false));
             do
              {
               ;
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false)))))));
             if(false)
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, bool(bvec4(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0)) | (_injected_loop_counter)) != 0, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), (true) && true), false, true)))); _injected_loop_counter --)
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = (_GLF_IDENTITY(0, (0) << int(_GLF_ZERO(0.0, injectionSwitch.x))) ^ int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       mat3(7.2, 695.066, 0.0, -482.775, 0.6, -3588.2922, 1175.6274, -9918.4758, _GLF_IDENTITY(_GLF_IDENTITY(12.88, 1.0 * (_GLF_IDENTITY(12.88, min(12.88, _GLF_IDENTITY(12.88, (12.88) / 1.0))))), 0.0 + (_GLF_IDENTITY(12.88, float(mat2(12.88, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(1.0, 1.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, sqrt(0.0), 1.0, 0.0), mat3(mat3(mat3(1.0, 1.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, sqrt(0.0), 1.0, 0.0))))), (float(_GLF_IDENTITY(mat3(1.0, 1.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, sqrt(0.0), 1.0, 0.0), mat3(mat3(mat3(1.0, 1.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, sqrt(0.0), 1.0, 0.0)))))) - 0.0))))))));
                      }
                    }
                  }
                }
               else
                {
                }
               bvec2 _GLF_SWITCH_0_24v, _GLF_SWITCH_0_25v;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter), min(_GLF_IDENTITY(clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter), (clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) / 1), _GLF_IDENTITY(clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter), clamp(clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter), clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter), clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)))))) < 1); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     _GLF_IDENTITY(mat4(98.99, -44.49, 417.828, -526.909, _GLF_IDENTITY(-1.8, max(_GLF_IDENTITY(-1.8, _GLF_ZERO(0.0, injectionSwitch.x) + (-1.8)), -1.8)), 3120.4760, _GLF_IDENTITY(-24.83, (false ? _GLF_IDENTITY(_GLF_FUZZED(-4.2), clamp(_GLF_FUZZED(-4.2), _GLF_IDENTITY(_GLF_FUZZED(-4.2), (false ? _GLF_FUZZED(952.470) : _GLF_FUZZED(-4.2))), _GLF_IDENTITY(_GLF_FUZZED(-4.2), clamp(_GLF_FUZZED(-4.2), _GLF_FUZZED(-4.2), _GLF_IDENTITY(_GLF_FUZZED(-4.2), min(_GLF_FUZZED(-4.2), _GLF_FUZZED(-4.2))))))) : -24.83)), -82.34, _GLF_IDENTITY(6.0, (_GLF_IDENTITY(6.0, clamp(6.0, 6.0, 6.0))) / 1.0), -756.213, -75.70, -2049.2405, -425.199, 766.378, 1676.4070, 0.6), transpose(_GLF_IDENTITY(transpose(mat4(98.99, -44.49, 417.828, -526.909, _GLF_IDENTITY(-1.8, max(_GLF_IDENTITY(-1.8, _GLF_ZERO(0.0, injectionSwitch.x) + (-1.8)), -1.8)), 3120.4760, _GLF_IDENTITY(-24.83, (false ? _GLF_FUZZED(-4.2) : -24.83)), -82.34, 6.0, -756.213, -75.70, -2049.2405, -425.199, 766.378, 1676.4070, 0.6)), (transpose(mat4(98.99, -44.49, 417.828, -526.909, _GLF_IDENTITY(-1.8, max(_GLF_IDENTITY(-1.8, _GLF_ZERO(0.0, injectionSwitch.x) + _GLF_IDENTITY((-1.8), _GLF_IDENTITY(float(mat2x4((-1.8), 1.0, 0.0, abs(1.0), 0.0, determinant(mat4(0.0, 1.0, exp(0.0), _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, cos(length(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, tan(0.0), 0.0)), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), mix(float(_GLF_FUZZED(8.3)), float(float(mat2x4((-1.8), 1.0, 0.0, abs(1.0), 0.0, determinant(mat4(0.0, 1.0, exp(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, tan(0.0), 0.0)), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))), bool(true))))), -1.8)), 3120.4760, _GLF_IDENTITY(-24.83, (false ? _GLF_FUZZED(-4.2) : -24.83)), -82.34, 6.0, -756.213, -75.70, _GLF_IDENTITY(-2049.2405, (true ? -2049.2405 : _GLF_FUZZED(-7381.2964))), -425.199, 766.378, 1676.4070, 0.6))) / mat4(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0), mat3x2(mat3(mat3x2(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))))));
                    }
                   else
                    {
                    }
                  }
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 (exp(vec3(_GLF_IDENTITY(-75.04, max(-75.04, -75.04)), 91.40, _GLF_IDENTITY(6.3, mix(float(6.3), float(_GLF_FUZZED(2.2)), bool(false))))) * -825.675);
                }
               ivec3(81704, _GLF_IDENTITY(-30989, int(ivec2(_GLF_IDENTITY(-30989, clamp(_GLF_IDENTITY(-30989, (-30989) ^ 0), -30989, -30989)), 0))), 30313);
               _GLF_SWITCH_0_13v;
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, (_injected_loop_counter != 0) || _GLF_IDENTITY(false, false || (false)))); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       ;
                      }
                     else
                      {
                      }
                    }
                   else
                    {
                    }
                  }
                }
               float _GLF_SWITCH_0_26v, _GLF_SWITCH_0_27v, _GLF_SWITCH_0_28v[60];
               ivec3 _GLF_SWITCH_0_29v, _GLF_SWITCH_0_30v[37];
              }
             else
              {
               mat2x4 _GLF_SWITCH_0_31v[33];
              }
            }
           while(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))));
           mat3 _GLF_SWITCH_0_32v[59], _GLF_SWITCH_0_33v[9], _GLF_SWITCH_0_34v[50];
           do
            {
             do
              {
               for(ivec4 _GLF_SWITCH_0_35v, _GLF_SWITCH_0_36v; (mat2x4(81.69, 7.1, -74.70, -17.88, 9.4, -1450.0861, 2.8, 6375.6543) == mat2x4(876.147, 35.42, 269.273, 471.211, _GLF_IDENTITY(13.15, 0.0 + (13.15)), 4659.2525, 5.0, -6.3)); uvec3(183177u, 8359u, _GLF_IDENTITY(_GLF_IDENTITY(196925u, uint(_GLF_IDENTITY(uvec4(196925u, (1u | 0u), 1u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), uvec2(uvec3(uvec2(0u, 0u), 0u)))))), (uvec4(196925u, (1u | 0u), 1u, 0u)) | (uvec4(196925u, (1u | 0u), 1u, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(196925u, uint(_GLF_IDENTITY(uvec4(196925u, (_GLF_IDENTITY(1u | 0u, (1u | 0u) ^ _GLF_IDENTITY(0u, ~ (~ (0u))))), 1u, 0u), (uvec4(_GLF_IDENTITY(196925u, 1u * (196925u)), (1u | 0u), 1u, 0u)) | (uvec4(196925u, (1u | 0u), 1u, 0u))))), (_GLF_IDENTITY(196925u, uint(_GLF_IDENTITY(uvec4(196925u, (1u | 0u), 1u, 0u), (uvec4(196925u, (1u | 0u), 1u, 0u)) | (uvec4(196925u, (1u | 0u), 1u, 0u)))))) >> 0u)) | (_GLF_IDENTITY(196925u, uint(_GLF_IDENTITY(uvec4(196925u, (1u | 0u), 1u, 0u), (uvec4(196925u, (1u | 0u), 1u, 0u)) | (uvec4(196925u, (1u | 0u), 1u, 0u)))))))))
                {
                 do
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
                    {
                     ;
                    }
                   ;
                  }
                 while(false);
                 do
                  {
                   vec3(_GLF_IDENTITY(-2.6, mix(float(_GLF_IDENTITY(-2.6, max(-2.6, -2.6))), float(_GLF_FUZZED(389.351)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -566.926, -942.664);
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), true)))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       ;
                      }
                     else
                      {
                      }
                    }
                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))
                    {
                    }
                   else
                    {
                     ivec2(ivec3(27097, 89506, _GLF_IDENTITY(_GLF_IDENTITY(-18809, _GLF_IDENTITY((_GLF_IDENTITY(-18809, clamp(-18809, -18809, -18809))), 0 ^ _GLF_IDENTITY(((-18809)), clamp(((-18809)), _GLF_IDENTITY(((-18809)), (_GLF_IDENTITY(((-18809)), (false ? _GLF_FUZZED(-68037) : ((-18809))))) ^ 0), ((-18809))))) | _GLF_IDENTITY((-18809), clamp((-18809), _GLF_IDENTITY((-18809), ((-18809)) | ((-18809))), (-18809)))), 1 * (-18809))));
                    }
                   (uvec2(_GLF_IDENTITY(111137u, (true ? 111137u : _GLF_FUZZED(workgroup_size))), 61580u) / (_GLF_IDENTITY(uvec2(138361u, 162446u), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec2(138361u, 162446u))) | subgroup_id));
                   transpose(mat4x2(62.33, -5.2, -9.0, -5.9, _GLF_IDENTITY(7.5, max(7.5, _GLF_IDENTITY(7.5, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))) ? _GLF_FUZZED(-2.7) : _GLF_IDENTITY(7.5, mix(float(_GLF_FUZZED(-7.5)), float(_GLF_IDENTITY(7.5, float(_GLF_IDENTITY(vec4(7.5, 0.0, 1.0, 1.0), vec4(mat4(vec4(7.5, 0.0, 1.0, 1.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 0.0, 0.0, 0.0, abs(abs(0.0)), 1.0)), float(mat2x3(float(mat2x3(0.0, 0.0, 0.0, 0.0, abs(abs(0.0)), 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0)))), 0.0, 1.0)))))), bool(true))))))), -9.8, -312.853, 4.4));
                   ;
                  }
                 while(false);
                 if(true)
                  {
                   mat3 _GLF_SWITCH_0_37v[57], _GLF_SWITCH_0_38v;
                   notEqual(uvec2(161056u, 12937u), (uvec2(_GLF_IDENTITY(116207u, (116207u) | (116207u)), 44125u) >> subgroup_local_id).xx);
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))), (_GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))), bool(bool((_GLF_IDENTITY(true, false || (true))))))) || false))) && true)))
                    {
                     (workgroup_base - _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(read, 0u ^ (read))) : workgroup_base), ((false ? _GLF_FUZZED(_GLF_IDENTITY(read, 0u ^ (read))) : workgroup_base)) | ((false ? _GLF_FUZZED(_GLF_IDENTITY(read, 0u ^ (read))) : workgroup_base)))));
                    }
                   else
                    {
                    }
                   uvec4(workgroup_base, workgroup_id, uvec2(127714u, 139940u));
                   mat2x4 _GLF_SWITCH_0_39v[88];
                  }
                 else
                  {
                   vec3 _GLF_SWITCH_0_40v[84], _GLF_SWITCH_0_41v;
                   true;
                   mat2x3((4328.5284 + -8.3));
                   ;
                   bool _GLF_SWITCH_0_42v, _GLF_SWITCH_0_43v[36], _GLF_SWITCH_0_44v[83];
                  }
                 int _GLF_SWITCH_0_45v, _GLF_SWITCH_0_46v, _GLF_SWITCH_0_47v;
                 {
                  vec4 _GLF_SWITCH_0_48v[38], _GLF_SWITCH_0_49v;
                  _GLF_SWITCH_0_45v;
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                   }
                  else
                   {
                    do
                     {
                      mat2(297.905, 981.458, 7.3, _GLF_IDENTITY(0.4, (false ? _GLF_FUZZED(4932.5726) : _GLF_IDENTITY(0.4, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.4, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-184.522) : 0.0)), min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.8)), bool(false))), 0.0)) : _GLF_FUZZED(9.2))), 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(0.4, 0.0, 0.0, 1.0)))), float(vec2(float(_GLF_IDENTITY(mat2(0.4, 0.0, 0.0, 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(0.4, (false ? _GLF_FUZZED(-6.3) : 0.4)), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.9) : 0.0)), 1.0)))), 0.0))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.4, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-686.001) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(9.2), mix(float(_GLF_FUZZED(251.966)), float(true ? 0.0 : _GLF_FUZZED(9.2)), bool(true))))), 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(0.4, 0.0, 0.0, 1.0)))), float(vec2(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.4, (_GLF_IDENTITY(0.4, min(0.4, 0.4))) + abs(0.0)), 0.0, 0.0, 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(0.4, (false ? _GLF_FUZZED(-6.3) : 0.4)), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.9) : 0.0)), 1.0)))), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.4, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(9.2, mix(float(9.2), float(_GLF_FUZZED(-2.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(0.4, 0.0, 0.0, 1.0)))), float(vec2(float(_GLF_IDENTITY(mat2(0.4, 0.0, 0.0, 1.0), _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(0.0, 0.0, 0.0, 0.0))) + (mat2(_GLF_IDENTITY(0.4, (false ? _GLF_FUZZED(-6.3) : 0.4)), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.9) : 0.0)), 1.0)))), 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.4, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9.2))), 1.0), mat2(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0) + (mat2(0.4, 0.0, 0.0, 1.0)))), float(vec2(float(_GLF_IDENTITY(mat2(0.4, 0.0, 0.0, 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(0.4, (false ? _GLF_FUZZED(-6.3) : 0.4)), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.9) : 0.0)), 1.0)))), 0.0)))) - 0.0, max(_GLF_IDENTITY((_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.4, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9.2))), 1.0), mat2(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0) + (mat2(0.4, 0.0, 0.0, 1.0)))), float(vec2(float(_GLF_IDENTITY(mat2(0.4, 0.0, 0.0, 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(0.4, (false ? _GLF_FUZZED(-6.3) : 0.4)), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.9) : 0.0)), 1.0)))), 0.0)))) - 0.0, (false ? _GLF_FUZZED(726.404) : (_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.4, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9.2))), 1.0), mat2(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0) + (mat2(0.4, 0.0, 0.0, 1.0)))), float(vec2(float(_GLF_IDENTITY(mat2(0.4, 0.0, 0.0, 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(0.4, (false ? _GLF_FUZZED(-6.3) : 0.4)), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.9) : 0.0)), 1.0)))), 0.0)))) - 0.0)), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.4, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9.2))), 1.0), mat2(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0) + (mat2(0.4, 0.0, 0.0, 1.0)))), float(vec2(float(_GLF_IDENTITY(mat2(0.4, 0.0, 0.0, 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(0.4, (false ? _GLF_FUZZED(-6.3) : 0.4)), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.9) : 0.0)), 1.0)))), 0.0)))) - 0.0)))))))));
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                   }
                  for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                   {
                    if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                     {
                      (mat4(-6.1, 520.364, -96.44, -2405.1486, 1.7, 41.18, -9.5, 4.8, -323.597, -38.10, -106.490, 9251.7449, _GLF_IDENTITY(-43.37, min(_GLF_IDENTITY(-43.37, _GLF_IDENTITY(min(-43.37, _GLF_IDENTITY(_GLF_IDENTITY(-43.37, clamp(-43.37, _GLF_IDENTITY(-43.37, (-43.37) / 1.0), -43.37)), min(_GLF_IDENTITY(_GLF_IDENTITY(-43.37, clamp(-43.37, _GLF_IDENTITY(-43.37, (-43.37) / 1.0), -43.37)), _GLF_IDENTITY((_GLF_IDENTITY(-43.37, clamp(-43.37, _GLF_IDENTITY(-43.37, (-43.37) / 1.0), -43.37))), (false ? _GLF_FUZZED(1.9) : (_GLF_IDENTITY(-43.37, clamp(-43.37, _GLF_IDENTITY(-43.37, (-43.37) / 1.0), -43.37))))) / 1.0), _GLF_IDENTITY(-43.37, clamp(-43.37, _GLF_IDENTITY(-43.37, (-43.37) / 1.0), -43.37))))), min(min(-43.37, _GLF_IDENTITY(_GLF_IDENTITY(-43.37, clamp(-43.37, _GLF_IDENTITY(-43.37, (-43.37) / 1.0), -43.37)), min(_GLF_IDENTITY(_GLF_IDENTITY(-43.37, clamp(-43.37, _GLF_IDENTITY(-43.37, (-43.37) / 1.0), _GLF_IDENTITY(-43.37, (true ? -43.37 : _GLF_FUZZED(-8.5))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(-43.37, clamp(-43.37, _GLF_IDENTITY(-43.37, (-43.37) / 1.0), -43.37))), (false ? _GLF_FUZZED(1.9) : (_GLF_IDENTITY(-43.37, clamp(-43.37, _GLF_IDENTITY(-43.37, (-43.37) / 1.0), -43.37))))), mix(float(_GLF_FUZZED(-9333.5271)), float(_GLF_IDENTITY((_GLF_IDENTITY(-43.37, clamp(-43.37, _GLF_IDENTITY(-43.37, (-43.37) / 1.0), -43.37))), (false ? _GLF_FUZZED(1.9) : (_GLF_IDENTITY(-43.37, clamp(-43.37, _GLF_IDENTITY(-43.37, (-43.37) / 1.0), -43.37)))))), bool(true))) / 1.0), _GLF_IDENTITY(-43.37, clamp(-43.37, _GLF_IDENTITY(-43.37, (-43.37) / 1.0), -43.37))))), min(-43.37, _GLF_IDENTITY(_GLF_IDENTITY(-43.37, clamp(-43.37, _GLF_IDENTITY(-43.37, (-43.37) / 1.0), -43.37)), min(_GLF_IDENTITY(_GLF_IDENTITY(-43.37, clamp(-43.37, _GLF_IDENTITY(-43.37, (-43.37) / 1.0), -43.37)), _GLF_IDENTITY((_GLF_IDENTITY(-43.37, clamp(-43.37, _GLF_IDENTITY(-43.37, (-43.37) / 1.0), -43.37))), (false ? _GLF_FUZZED(1.9) : (_GLF_IDENTITY(-43.37, clamp(-43.37, _GLF_IDENTITY(-43.37, (-43.37) / 1.0), _GLF_IDENTITY(-43.37, clamp(_GLF_IDENTITY(-43.37, clamp(_GLF_IDENTITY(-43.37, (-43.37) - 0.0), -43.37, -43.37)), _GLF_IDENTITY(-43.37, mix(float(_GLF_FUZZED(9862.5956)), float(-43.37), bool(true))), _GLF_IDENTITY(-43.37, (true ? -43.37 : _GLF_FUZZED(-7.1)))))))))) / 1.0), _GLF_IDENTITY(-43.37, clamp(-43.37, _GLF_IDENTITY(-43.37, (_GLF_IDENTITY(-43.37, (-43.37) * 1.0)) / 1.0), -43.37)))))))), -43.37)), 331.561, _GLF_IDENTITY(86.59, mix(float(86.59), float(_GLF_FUZZED(-8.9)), bool(false))), _GLF_IDENTITY(2.8, mix(float(2.8), _GLF_IDENTITY(float(_GLF_FUZZED((_GLF_IDENTITY(+ 1.8, (false ? _GLF_FUZZED(distance(vec3(992.057, -96.06, -9.3), vec3(-1677.2876, -99.25, -891.273))) : + 1.8))))), mix(float(_GLF_FUZZED(6.3)), float(float(_GLF_FUZZED((_GLF_IDENTITY(+ 1.8, (false ? _GLF_FUZZED(distance(vec3(992.057, -96.06, -9.3), vec3(-1677.2876, -99.25, -891.273))) : + 1.8)))))), bool(true))), bool(false)))) - mat4(-94.01, -4.6, _GLF_IDENTITY(0.7, min(0.7, _GLF_IDENTITY(0.7, float(mat3x2(_GLF_IDENTITY(0.7, min(0.7, 0.7)), abs(0.0), 0.0, 1.0, 1.0, 1.0))))), -8.2, 6.0, 58.37, 389.690, 8121.9622, 6899.7284, _GLF_IDENTITY(_GLF_IDENTITY(0.9, (0.9) - 0.0), min(0.9, 0.9)), _GLF_IDENTITY(-69.88, _GLF_IDENTITY(min(-69.88, _GLF_IDENTITY(-69.88, min(-69.88, -69.88))), (_GLF_IDENTITY(min(-69.88, _GLF_IDENTITY(-69.88, min(-69.88, -69.88))), clamp(min(-69.88, _GLF_IDENTITY(-69.88, min(-69.88, -69.88))), min(-69.88, _GLF_IDENTITY(-69.88, min(-69.88, -69.88))), min(-69.88, _GLF_IDENTITY(-69.88, min(-69.88, -69.88)))))) / 1.0)), 48.46, -5114.6520, -3756.1347, 929.394, 569.096));
                     }
                    else
                     {
                     }
                   }
                  if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                   }
                  else
                   {
                    do
                     {
                      for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, (_GLF_IDENTITY(_injected_loop_counter != 0, bool(bvec3(_injected_loop_counter != 0, true, true)))) && true)); _injected_loop_counter --)
                       {
                        injectionSwitch;
                       }
                     }
                    while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   }
                  mat4(604.385, -2563.9470, 3.0, -9.0, 93.44, -7.4, -7.0, -3.4, 8.8, -858.227, 2.0, 6.2, 0.8, 4123.9864, _GLF_IDENTITY(-5427.8170, (true ? -5427.8170 : _GLF_FUZZED(95.17))), _GLF_IDENTITY(4.0, 1.0 * (4.0)));
                  do
                   {
                    if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) || false), true, true, true))))))
                     {
                     }
                    else
                     {
                      if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, false)), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false), true))))))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)))), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false), true))))))), false)))))), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])))), injectionSwitch[1])).y))), true, false, true)), true && (bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), true, false, true))))))
                       {
                       }
                      else
                       {
                        ;
                       }
                     }
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                 }
                 {
                 }
                 normalize(vec3(_GLF_IDENTITY(_GLF_IDENTITY(-91.26, clamp(-91.26, -91.26, _GLF_IDENTITY(-91.26, (true ? -91.26 : _GLF_FUZZED(-7.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(-91.26, clamp(-91.26, -91.26, _GLF_IDENTITY(-91.26, (true ? -91.26 : _GLF_FUZZED(-7.0))))), mix(float(_GLF_FUZZED(-76.81)), float(_GLF_IDENTITY(-91.26, clamp(-91.26, -91.26, _GLF_IDENTITY(-91.26, (true ? -91.26 : _GLF_FUZZED(-7.0)))))), bool(true)))) - 0.0), vec2(-58.85, -9037.6989)));
                 if(true)
                  {
                   int _GLF_SWITCH_0_50v, _GLF_SWITCH_0_51v;
                   bool _GLF_SWITCH_0_52v, _GLF_SWITCH_0_53v;
                  }
                 mat3x2(-976.515, -4.6, -935.100, 4.0, -2.0, 3.1);
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           while(_GLF_WRAPPED_LOOP(false));
           ;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             bvec4(true, false, true, true);
            }
           else
            {
            }
          }
         case 0:
         case 67:
         case 10:
         case 3:
         case 44:
         case 50:
         case 6:
         case 35:
         case 48:
         atomicStore(checker[virtual_gid], read, 4, 64, 4);
         case 33:
         subgroupAll(false);
         break;
         case 80:
         while(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, true, true))))
          {
           {
            -22367;
            mat2x4 _GLF_SWITCH_0_54v, _GLF_SWITCH_0_55v;
           }
           vec4 _GLF_SWITCH_0_56v;
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 bvec4(true, true, false, _GLF_IDENTITY(false, (false) || false));
                }
               else
                {
                }
              }
             else
              {
              }
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), true)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).x, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x, injectionSwitch.x)), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(atomicOr(_injected_loop_counter, _injected_loop_counter)) : 0))], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).x, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x, injectionSwitch.x)), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), abs(0.0), 0.0, 1.0, 1.0))) > injectionSwitch.y)))), true && ((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(1.0))))))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true))))))));
           {
            while(_GLF_IDENTITY((subgroup_local_id != workgroup_base), bool(bvec2((subgroup_local_id != workgroup_base), true))))
             {
              if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0))).x < injectionSwitch.y))))
               {
                if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))) && true)))))
                 {
                 }
                else
                 {
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), true, true))) ? mat3x4(_GLF_IDENTITY(577.026, 1.0 * (_GLF_IDENTITY(577.026, (true ? 577.026 : _GLF_FUZZED(1.4))))), -49.00, 2.9, -4.0, 93.14, 2003.6429, -71.79, -1.1, _GLF_IDENTITY(878.015, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(878.015, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - 0.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0), (mat4x2(878.015, abs(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec2(0.0, 0.0))), 0.0, 0.0)) * mat4(1.0))), mix(float(float(_GLF_IDENTITY(mat4x2(878.015, abs(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), 0.0, 0.0), (mat4x2(878.015, abs(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0)) * mat4(1.0)))), float(_GLF_FUZZED(_GLF_IDENTITY(-5.8, (true ? -5.8 : _GLF_FUZZED(-6.1))))), bool(false)))), -86.82, _GLF_IDENTITY(5.3, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(dot(injectionSwitch, vec2(vec3(-4.1, -41.89, 6827.2859))), clamp(dot(injectionSwitch, vec2(vec3(-4.1, -41.89, 6827.2859))), dot(injectionSwitch, vec2(vec3(-4.1, -41.89, 6827.2859))), _GLF_IDENTITY(dot(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(501.737), ((injectionSwitch) * mat2(1.0))[1]), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(4.7)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), vec2(vec3(-4.1, -41.89, 6827.2859))), (dot(injectionSwitch, vec2(vec3(-4.1, -41.89, 6827.2859)))) / 1.0)))) : 5.3, (true ? false ? _GLF_FUZZED(_GLF_IDENTITY(dot(injectionSwitch, vec2(vec3(-4.1, -41.89, 6827.2859))), clamp(dot(injectionSwitch, vec2(vec3(-4.1, -41.89, 6827.2859))), dot(injectionSwitch, vec2(vec3(-4.1, -41.89, 6827.2859))), _GLF_IDENTITY(dot(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(501.737), ((injectionSwitch) * mat2(1.0))[1]), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(4.7)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), vec2(vec3(-4.1, -41.89, 6827.2859))), (dot(injectionSwitch, vec2(vec3(-4.1, -41.89, 6827.2859)))) / 1.0)))) : 5.3 : _GLF_FUZZED(normalize(5.4)))))), -953.054) : mat3x4(-2494.5644, -18.15, -7.1, -1163.3993, 0.0, _GLF_IDENTITY(4.5, (_GLF_IDENTITY(4.5, max(4.5, _GLF_IDENTITY(4.5, clamp(4.5, 4.5, 4.5))))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), -1.5, -23.83, 7.5, -3.6, 1.3, 8.7));
                   }
                  else
                   {
                   }
                 }
               }
              else
               {
               }
              for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, 0 | (1))); _injected_loop_counter ++)
               {
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  mat3x4(-4.9);
                 }
               }
              mat3x4 _GLF_SWITCH_0_57v, _GLF_SWITCH_0_58v;
              _GLF_SWITCH_0_58v;
              uvec2 _GLF_SWITCH_0_59v[95], _GLF_SWITCH_0_60v, _GLF_SWITCH_0_61v;
             }
            if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
             }
            else
             {
              (matrixCompMult(mat3x2(25.36, _GLF_IDENTITY(-21.30, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7539.7181) : -21.30)), -3.1, 93.76, 1676.0931, _GLF_IDENTITY(1.5, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.5, 1.0 * (1.5)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.5, _GLF_IDENTITY(1.0, max(1.0, 1.0)) * (1.5)), min(_GLF_IDENTITY(1.5, _GLF_IDENTITY(1.0, max(1.0, 1.0)) * (1.5)), _GLF_IDENTITY(1.5, _GLF_IDENTITY(1.0, max(1.0, 1.0)) * (1.5)))), 0.0, 0.0, exp(0.0)), transpose(transpose(mat2(_GLF_IDENTITY(1.5, 1.0 * (1.5)), 0.0, 0.0, exp(0.0))))))), 1.5, 1.5))), mat3x2(-154.776, 7.2, 6.3, 331.864, _GLF_IDENTITY(_GLF_IDENTITY(5.6, (5.6) + _GLF_ZERO(0.0, injectionSwitch.x)), (5.6) + 0.0), -69.64)) + -77.70);
             }
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
             }
            else
             {
              do
               {
                while(true)
                 {
                  do
                   {
                    notEqual(_GLF_SWITCH_0_56v, _GLF_SWITCH_0_56v);
                   }
                  while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))));
                  (mat2x4(-3.1, 8.1, -64.74, 9011.3680, -5.1, _GLF_IDENTITY(-5.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -5.0 : _GLF_FUZZED(5.1))), -35.80, 0.5) - 263.544);
                  mat4x2 _GLF_SWITCH_0_62v, _GLF_SWITCH_0_63v, _GLF_SWITCH_0_64v[52];
                  uint _GLF_SWITCH_0_65v, _GLF_SWITCH_0_66v, _GLF_SWITCH_0_67v;
                  mat2x3(-2.3, 1.5, 17.90, -55.53, 6069.7992, -2420.2455);
                  ivec3 _GLF_SWITCH_0_68v, _GLF_SWITCH_0_69v, _GLF_SWITCH_0_70v;
                 }
               }
              while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             }
            for(            (mat2x4(_GLF_IDENTITY(6336.4699, (6336.4699) / 1.0), 8.7, -9081.5766, 5.1, 1.9, -2.7, 856.087, -4.6));
 true; (ivec2(20865, _GLF_IDENTITY(47363, (true ? _GLF_IDENTITY(47363, (47363) / 1) : _GLF_FUZZED((findMSB(59695) - _injected_loop_counter))))) << -77875))
             {
              for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((1 & (1 | _GLF_IDENTITY(1, min(1, 1)))), max((1 & (1 | 1)), (1 & (1 | 1))))); _injected_loop_counter ++)
               {
                (mat3x4(99.73, 78.15, 90.48, _GLF_IDENTITY(-6.5, min(-6.5, _GLF_IDENTITY(-6.5, min(-6.5, _GLF_IDENTITY(-6.5, 0.0 + (-6.5)))))), _GLF_IDENTITY(5054.4934, mix(_GLF_IDENTITY(float(5054.4934), min(float(5054.4934), _GLF_IDENTITY(float(5054.4934), float(_GLF_IDENTITY(mat2x3(float(5054.4934), 1.0, 1.0, 0.0, 1.0, 0.0), mat3(1.0) * (mat2x3(float(5054.4934), 1.0, 1.0, 0.0, 1.0, 0.0))))))), float(_GLF_FUZZED(59.74)), bool(_GLF_IDENTITY(false, ! (! (false)))))), -3.3, 9.4, _GLF_IDENTITY(1.1, (_GLF_IDENTITY(false ? _GLF_FUZZED(2.0) : 1.1, max(false ? _GLF_FUZZED(2.0) : 1.1, false ? _GLF_FUZZED(2.0) : 1.1)))), 6.8, 30.14, 4646.8379, 3145.2948) - radians(_GLF_IDENTITY(3113.7015, (_GLF_IDENTITY(3113.7015, (true ? 3113.7015 : _GLF_FUZZED(-30.17)))) + 0.0)));
               }
             }
            if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_FUZZED(2.4)), vec2(_GLF_FUZZED(-65.43), (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))).y))), ((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_FUZZED(2.4)), vec2(_GLF_FUZZED(-65.43), (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))).y)))) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, bool(bvec2(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (bool((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))))) || false)), bool(bvec2(bool(_GLF_IDENTITY(bool((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)))), (bool((_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) && true))))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
             {
              vec3(8768.9120, -2761.7461, _GLF_IDENTITY(8.7, (8.7) - _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5003.3640) : 0.0))));
             }
            else
             {
             }
           }
           int _GLF_SWITCH_0_71v, _GLF_SWITCH_0_72v;
           {
            do
             {
              for(mat2x4 _GLF_SWITCH_0_73v[38]; _GLF_IDENTITY((subgroup_local_id >= workgroup_id), ((subgroup_local_id >= workgroup_id)) || false); bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false)))) || (true)), false))
               {
               }
             }
            while(_GLF_WRAPPED_LOOP(false));
            mat2x3(-61.06, -7776.6008, 445.110, -507.252, _GLF_IDENTITY(6.3, _GLF_IDENTITY(_GLF_IDENTITY(clamp(6.3, _GLF_IDENTITY(6.3, (6.3) / exp(0.0)), 6.3), (true ? clamp(6.3, 6.3, 6.3) : _GLF_FUZZED(4.2))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(clamp(6.3, 6.3, 6.3), (true ? clamp(_GLF_IDENTITY(6.3, max(6.3, 6.3)), 6.3, 6.3) : _GLF_FUZZED(4.2))), float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(clamp(6.3, 6.3, 6.3), mix(float(_GLF_FUZZED(2448.0637)), float(clamp(6.3, 6.3, 6.3)), bool(true))), (true ? clamp(6.3, 6.3, 6.3) : _GLF_IDENTITY(_GLF_FUZZED(4.2), clamp(_GLF_FUZZED(4.2), _GLF_IDENTITY(_GLF_FUZZED(4.2), mix(float(_GLF_FUZZED(-9.3)), float(_GLF_FUZZED(4.2)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_FUZZED(4.2), clamp(_GLF_FUZZED(4.2), _GLF_FUZZED(4.2), _GLF_FUZZED(4.2))))))), 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 0.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))))), float(mat2x3(float(mat4(1.0, 0.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))))), 1.0, 0.0, 1.0, 1.0, 0.0)))), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))), _GLF_IDENTITY(clamp(6.3, 6.3, 6.3), (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false))) ? clamp(_GLF_IDENTITY(6.3, min(6.3, 6.3)), 6.3, 6.3) : _GLF_FUZZED(4.2))), _GLF_IDENTITY(clamp(6.3, 6.3, 6.3), (true ? clamp(6.3, 6.3, 6.3) : _GLF_FUZZED(4.2)))))), -4093.8214);
            ivec3 _GLF_SWITCH_0_74v, _GLF_SWITCH_0_75v;
            mat2x4(-44.53, _GLF_IDENTITY(_GLF_IDENTITY(-5.4, (-5.4) * 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-443.842) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-5.4, clamp(-5.4, -5.4, -5.4)), (-5.4) * 1.0), 0.0 + (_GLF_IDENTITY(-5.4, (-5.4) * 1.0))))), -22.59, 916.406, -24.14, _GLF_IDENTITY(911.529, max(911.529, 911.529)), -500.309, -6.7);
           }
           bvec2 _GLF_SWITCH_0_76v;
           for(           (subgroup_local_id >> 188136u);
 true; mat4x2(-5089.0557, 1.6, 5907.1121, 2574.0190, -0.0, 59.79, -476.968, -0.6))
            {
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               for(ivec4 _GLF_SWITCH_0_77v; false; vec4(vec2(11.08, 966.356), vec2(_GLF_IDENTITY(-7.2, (-7.2) / 1.0), 1164.0804)))
                {
                 ;
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       ;
                      }
                    }
                  }
                 else
                  {
                  }
                 for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0)), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, true)))) && true))))
                    {
                     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(_injected_loop_counter)))) >> (0 | 0)))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       min(uvec3(8756u, 41478u, 99099u), uvec3(154944u, 12326u, 113135u));
                      }
                    }
                   else
                    {
                    }
                  }
                 mat4x2 _GLF_SWITCH_0_78v;
                }
              }
             mat4x2 _GLF_SWITCH_0_79v;
             for(             virtual_gid;
 _GLF_IDENTITY(true, ! (! (true))); _GLF_IDENTITY(bvec3(((mat2x3(391.383, 0.1, 4522.8399, -530.117, 2.2, -447.760) - -8.9) != mat2x3(47.92, -2.1, _GLF_IDENTITY(-6.6, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(9036.9218, mix(float(9036.9218), float(_GLF_FUZZED(69.76)), bool(false)))) : -6.6, min(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(9036.9218, mix(float(9036.9218), float(_GLF_FUZZED(69.76)), bool(false)))) : -6.6, (true ? false ? _GLF_FUZZED(_GLF_IDENTITY(9036.9218, mix(float(9036.9218), float(_GLF_FUZZED(69.76)), bool(false)))) : -6.6 : _GLF_FUZZED(refract(262.284, 13.82, 16.72)))), false ? _GLF_FUZZED(_GLF_IDENTITY(9036.9218, mix(float(9036.9218), float(_GLF_FUZZED(69.76)), bool(false)))) : -6.6)))), _GLF_IDENTITY(-6.8, _GLF_IDENTITY(clamp(-6.8, -6.8, -6.8), clamp(clamp(-6.8, -6.8, -6.8), clamp(-6.8, -6.8, -6.8), _GLF_IDENTITY(clamp(_GLF_IDENTITY(-6.8, mix(float(_GLF_FUZZED(346.101)), float(-6.8), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), -6.8, -6.8), clamp(clamp(-6.8, -6.8, -6.8), clamp(-6.8, -6.8, -6.8), clamp(-6.8, -6.8, -6.8)))))), 46.99, -74.47))), bvec3(bvec4(_GLF_IDENTITY(bvec3(((mat2x3(391.383, 0.1, 4522.8399, -530.117, 2.2, -447.760) - -8.9) != mat2x3(47.92, -2.1, _GLF_IDENTITY(-6.6, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(9036.9218, mix(float(9036.9218), float(_GLF_FUZZED(69.76)), bool(false)))) : -6.6, min(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(9036.9218, mix(float(9036.9218), float(_GLF_FUZZED(69.76)), bool(false)))) : -6.6, (true ? false ? _GLF_FUZZED(_GLF_IDENTITY(9036.9218, mix(float(9036.9218), float(_GLF_FUZZED(69.76)), bool(false)))) : -6.6 : _GLF_FUZZED(refract(262.284, 13.82, 16.72)))), false ? _GLF_FUZZED(_GLF_IDENTITY(9036.9218, mix(float(9036.9218), float(_GLF_FUZZED(69.76)), bool(false)))) : -6.6)))), _GLF_IDENTITY(-6.8, _GLF_IDENTITY(clamp(-6.8, -6.8, -6.8), clamp(clamp(-6.8, -6.8, -6.8), clamp(-6.8, -6.8, -6.8), _GLF_IDENTITY(clamp(_GLF_IDENTITY(-6.8, mix(float(_GLF_FUZZED(346.101)), float(-6.8), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), -6.8, -6.8), clamp(clamp(-6.8, -6.8, -6.8), clamp(-6.8, -6.8, -6.8), clamp(-6.8, -6.8, -6.8)))))), 46.99, -74.47))), bvec3(bvec3(bvec3(((mat2x3(391.383, 0.1, 4522.8399, -530.117, 2.2, -447.760) - -8.9) != mat2x3(47.92, -2.1, _GLF_IDENTITY(-6.6, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(9036.9218, mix(float(9036.9218), float(_GLF_FUZZED(69.76)), bool(false)))) : -6.6, min(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(9036.9218, mix(float(9036.9218), float(_GLF_FUZZED(69.76)), bool(false)))) : -6.6, (true ? false ? _GLF_FUZZED(_GLF_IDENTITY(9036.9218, mix(float(9036.9218), float(_GLF_FUZZED(69.76)), bool(false)))) : -6.6 : _GLF_FUZZED(refract(262.284, 13.82, 16.72)))), false ? _GLF_FUZZED(_GLF_IDENTITY(9036.9218, mix(float(9036.9218), float(_GLF_FUZZED(69.76)), bool(false)))) : -6.6)))), _GLF_IDENTITY(-6.8, _GLF_IDENTITY(clamp(-6.8, -6.8, -6.8), clamp(clamp(-6.8, -6.8, -6.8), clamp(-6.8, -6.8, -6.8), _GLF_IDENTITY(clamp(_GLF_IDENTITY(-6.8, mix(float(_GLF_FUZZED(346.101)), float(-6.8), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), -6.8, -6.8), clamp(clamp(-6.8, -6.8, -6.8), clamp(-6.8, -6.8, -6.8), clamp(-6.8, -6.8, -6.8)))))), 46.99, -74.47)))))), _GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   (_GLF_IDENTITY(ivec2(69039, 52437), ivec2(ivec2(_GLF_IDENTITY(ivec2(69039, 52437), (ivec2(69039, 52437)) ^ ivec2(0, 0))))));
                  }
                 else
                  {
                  }
                }
               ;
               _GLF_SWITCH_0_72v;
               vec3 _GLF_SWITCH_0_80v, _GLF_SWITCH_0_81v;
              }
             injectionSwitch;
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             while(false)
              {
              }
            }
          }
         case 97:
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(3.8, -96.64, -975.199, 1.3).y), _GLF_FUZZED(2455.1831)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, (true) || false), true))).x) * 1.0) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), ! (! (bool(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))))))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(vec4 _GLF_SWITCH_0_82v; _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, uint(uvec4(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), 1u, 0u, 1u))) == uvec4(workgroup_size, uvec2(198024u, 68367u), read)[2]), bool(bvec3((workgroup_size == uvec4(workgroup_size, uvec2(198024u, _GLF_IDENTITY(68367u, 0u ^ (68367u))), read)[2]), false, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(! (! (_GLF_IDENTITY((! (true)), false || ((! (true)))))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY((! (true)), false || ((! (_GLF_IDENTITY(true, false || (true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(true, (true) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(true, (true) && true))), ((! (_GLF_IDENTITY(true, (true) && true)))) && true))), false || ((! (true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))); bvec2(false, false).xxxx)
              {
              }
            }
           else
            {
            }
          }
         default:
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             1;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
     else
      {
       atomicStore(checker[virtual_gid], read, 4, 64, 4);
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))) && true)))
        {
         do
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 subgroupAll(true);
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) || false))));
        }
       else
        {
        }
      }
    }
  }
 else
  {
  }
}
