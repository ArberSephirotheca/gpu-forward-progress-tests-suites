#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)).x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), 0u ^ (gl_WorkGroupID.x)), 0u ^ _GLF_IDENTITY((gl_WorkGroupID.x), ((_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u))) ^ 0u));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), true)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))) && true)), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))) && true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))) && true)), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))) && true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))) && true)), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))) || false)) && true)))))))) && true)) && true)))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        continue;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & (((1 ^ 0) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))); _injected_loop_counter ++)
      {
       return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u) * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), 1u * _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) - 0u))) ^ (subgroup_size), _GLF_IDENTITY((0u ^ (subgroup_size)), (_GLF_IDENTITY((0u ^ (subgroup_size)), ((0u ^ (subgroup_size))) | ((0u ^ (subgroup_size))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) * 1u)), _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) | 0u))) >> 0u, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), uint(uint(_GLF_IDENTITY(~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), max((~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)))), ~ (_GLF_IDENTITY(~ (~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | 0u))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | 0u))), clamp(~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | 0u))), ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | 0u))), ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | 0u)))))) | (~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | 0u))))))) >> 0u))), (~ _GLF_IDENTITY((~ (~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u, ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u) | ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u))) + 0u)), ~ (~ (((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)))))), max(_GLF_IDENTITY((~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u), ~ (~ (((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)))))), ((~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u), ~ (~ (((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u))))))) | 0u), (~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u), ~ (~ _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), ((((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u))) + 0u)))))))) >> 0u)))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), (~ (~ ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), 0u ^ (_GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(47392u) : (subgroup_size))))) | 0u)) >> 0u))) | 0u)), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), ~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))) >> 0u)), (~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), subgroup_size)), (subgroup_size) | 0u)) >> 0u))) | 0u)), ((_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), (~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u))) | 0u))) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), (~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u))) | 0u), (~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u))) | 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), (~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u))) | 0u), (_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), (~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> _GLF_IDENTITY(0u, (0u) | 0u)))) | 0u)) | (_GLF_IDENTITY(~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), ((~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u))) - 0u), (~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u))) | 0u))))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u) | 0u)) >> 0u)), (~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), min(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))) >> 0u))) | 0u)), uint(uvec4((_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), (~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u))) | 0u)), 1u, 1u, 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), (~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> _GLF_IDENTITY(0u, (0u) + 0u)))) | 0u)), uint(uvec4((_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), (~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u))) | 0u)), 1u, 1u, 0u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), (~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u))) | 0u)), uint(uvec4((_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), (~ (~ ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u) | 0u)) >> 0u))) | 0u)), 1u, 1u, 0u)))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u) | 0u)) >> 0u)), (~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), min(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))) >> 0u))) | 0u)), uint(uvec4((_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), (~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u))) | 0u)), 1u, 1u, 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), (~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> _GLF_IDENTITY(0u, (0u) + 0u)))) | 0u)), uint(uvec4((_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), (~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u))) | 0u)), 1u, 1u, 0u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), (~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u))) | 0u)), uint(uvec4((_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), (~ (~ ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u) | 0u)) >> 0u))) | 0u)), 1u, 1u, 0u)))))) : _GLF_FUZZED(subgroup_size)))))))))))) + _GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) + 0u)))), ((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) - 0u))) ^ (subgroup_size), _GLF_IDENTITY((0u ^ (subgroup_size)), (_GLF_IDENTITY((0u ^ (subgroup_size)), ((0u ^ (subgroup_size))) | ((0u ^ (subgroup_size))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) * 1u)), _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) | 0u))) >> 0u, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), uint(uint(_GLF_IDENTITY(~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), max((~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)))), ~ (_GLF_IDENTITY(~ (~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | 0u))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | 0u))), clamp(~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | 0u))), ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | 0u))), ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | 0u)))))) | (~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | 0u))))))) >> 0u))), (~ _GLF_IDENTITY((~ (~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u, ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u) | ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u))) + 0u)), ~ (~ (((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)))))), max(_GLF_IDENTITY((~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u), ~ (~ (((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)))))), ((~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u), ~ (~ (((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u))))))) | 0u), (~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u), ~ (~ _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), ((((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u))) + 0u)))))))) >> 0u)))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), (~ (~ ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), 0u ^ (_GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(47392u) : (subgroup_size))))) | 0u)) >> 0u))) | 0u)), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), ~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))) >> 0u)), (~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), subgroup_size)), (subgroup_size) | 0u)) >> 0u))) | 0u)), ((_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), (~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u))) | 0u))) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), (~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u))) | 0u), (~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u))) | 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), (~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u))) | 0u), (_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), (~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> _GLF_IDENTITY(0u, (0u) | 0u)))) | 0u)) | (_GLF_IDENTITY(~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), ((~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u))) - 0u), (~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u))) | 0u))))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u) | 0u)) >> 0u)), (~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), min(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))) >> 0u))) | 0u)), uint(uvec4((_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), (~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u))) | 0u)), 1u, 1u, 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), (~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> _GLF_IDENTITY(0u, (0u) + 0u)))) | 0u)), uint(uvec4((_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), (~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u))) | 0u)), 1u, 1u, 0u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), (~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u))) | 0u)), uint(uvec4((_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), (~ (~ ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u) | 0u)) >> 0u))) | 0u)), 1u, 1u, 0u)))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u) | 0u)) >> 0u)), (~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), min(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))) >> 0u))) | 0u)), uint(uvec4((_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), (~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u))) | 0u)), 1u, 1u, 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), (~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> _GLF_IDENTITY(0u, (0u) + 0u)))) | 0u)), uint(uvec4((_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), (~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u))) | 0u)), 1u, 1u, 0u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), (~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u))) | 0u)), uint(uvec4((_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), (~ (~ ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u) | 0u)) >> 0u))) | 0u)), 1u, 1u, 0u)))))) : _GLF_FUZZED(subgroup_size)))))))))))) + _GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) + 0u))))) >> 0u));
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), true, false, true))))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), false || _GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bvec2(((false)), false)), bool(bvec3(bool(bvec2(((false)), false)), false, false))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), _GLF_IDENTITY(bool(bool(bool(bvec3(true, true, false)))), ! (! (bool(bool(bool(bvec3(true, true, false))))))))) && (bool(bool(_GLF_IDENTITY((false), false || ((false)))))))), bool(bool(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), false || _GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bvec2(((false)), false)), bool(bvec3(bool(bvec2(((false)), false)), false, false))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), _GLF_IDENTITY(bool(bool(bool(bvec3(true, true, false)))), ! (! (bool(bool(bool(bvec3(true, true, false))))))))) && (bool(bool(_GLF_IDENTITY((false), false || ((false)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true))))))) && (false)), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true))))))) && (false)), true, false, false)))), ((_GLF_IDENTITY(false, true && (false)))) || false))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 for(int _injected_loop_counter = _GLF_IDENTITY(1, max(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   return;
                  }
                }
               if(_GLF_DEAD(false))
                return;
               return;
               if(_GLF_DEAD(false))
                continue;
              }
            }
          }
         else
          {
          }
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-126.180) : injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-126.180) : injectionSwitch.y))))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-126.180) : injectionSwitch.y)))))))), true, true, false))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
  }
 else
  {
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))), _GLF_IDENTITY((uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u), clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))))), (false ? _GLF_FUZZED(virtual_gid) : (uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u), clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))))))) / 1u)) ^ 0u)), min(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))), (clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))) + 0u)))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + _GLF_IDENTITY(1, (1) + (0 >> _GLF_IDENTITY(int(4), int(4)))), subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))))) / 1u)) ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))), max(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))), uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))))) / 1u)) ^ 0u)), (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)) + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))))) / 1u)) ^ 0u))) ^ _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), ((0u << _GLF_IDENTITY(uint(0u), uint(0u)))) - 0u)) | ((0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) << 0u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))), _GLF_IDENTITY((uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u), clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))))), (false ? _GLF_FUZZED(virtual_gid) : (uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u), clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))))))) / 1u)) ^ 0u)), min(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))), (clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))) + 0u)))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + _GLF_IDENTITY(1, (1) + (0 >> _GLF_IDENTITY(int(4), int(4)))), subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))))) / 1u)) ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))), max(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))), uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))))) / 1u)) ^ 0u)), (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)) + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))))) / 1u)) ^ 0u))) ^ _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), ((0u << _GLF_IDENTITY(uint(0u), uint(0u)))) - 0u)) | ((0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) << 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))), _GLF_IDENTITY((uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u), clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))))), (false ? _GLF_FUZZED(virtual_gid) : (uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u), clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))))))) / 1u)) ^ 0u)), min(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))), (clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))) + 0u)))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + _GLF_IDENTITY(1, (1) + (0 >> _GLF_IDENTITY(int(4), int(4)))), subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))))) / 1u)) ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))), max(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))), uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))))) / 1u)) ^ 0u)), (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)) + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))))) / 1u)) ^ 0u))) ^ _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), ((0u << _GLF_IDENTITY(uint(0u), uint(0u)))) - 0u)) | ((0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) << 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))), _GLF_IDENTITY((uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u), clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))))), (false ? _GLF_FUZZED(virtual_gid) : (uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u), clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))))))) / 1u)) ^ 0u)), min(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))), (clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))) + 0u)))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + _GLF_IDENTITY(1, (1) + (0 >> _GLF_IDENTITY(int(4), int(4)))), subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))))) / 1u)) ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))), max(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))), uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))))) / 1u)) ^ 0u)), (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)) + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))))) / 1u)) ^ 0u))) ^ _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), ((0u << _GLF_IDENTITY(uint(0u), uint(0u)))) - 0u)) | ((0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) << 0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))), _GLF_IDENTITY((uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u), clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))))), (false ? _GLF_FUZZED(virtual_gid) : (uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u), clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))))))) / 1u)) ^ 0u)), min(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))), (clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))) + 0u)))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + _GLF_IDENTITY(1, (1) + (0 >> _GLF_IDENTITY(int(4), int(4)))), subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))))) / 1u)) ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))), max(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))), uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))))) / 1u)) ^ 0u)), (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)) + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))))) / 1u)) ^ 0u))) ^ _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), ((0u << _GLF_IDENTITY(uint(0u), uint(0u)))) - 0u)) | ((0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) << 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))), _GLF_IDENTITY((uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u), clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))))), (false ? _GLF_FUZZED(virtual_gid) : (uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u), clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))))))) / 1u)) ^ 0u)), min(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))), (clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))) + 0u)))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + _GLF_IDENTITY(1, (1) + (0 >> _GLF_IDENTITY(int(4), int(4)))), subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))))) / 1u)) ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))), max(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))), uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))))) / 1u)) ^ 0u)), (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)) + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))))))) / 1u)) ^ 0u))) ^ _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), ((0u << _GLF_IDENTITY(uint(0u), uint(0u)))) - 0u)) | ((0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) << 0u)))))))), (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))), clamp(clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))), clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))), clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) : _GLF_FUZZED(virtual_gid))) + 1)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (subgroup_local_id)), 0u ^ ((~ (subgroup_local_id)))))) << (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))) + _GLF_IDENTITY(1, clamp(1, 1, 1)), (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u), subgroup_local_id + 1, subgroup_local_id + 1)), clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 0, 0)), clamp(_GLF_IDENTITY(int(ivec3(1, 0, 0)), int(ivec2(int(ivec3(1, 0, 0)), 0))), int(ivec3(1, 0, 0)), int(ivec3(1, 0, 0))))), (subgroup_local_id + 1) | (subgroup_local_id + 1))))))))) / 1u)) ^ 0u))) | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + _GLF_IDENTITY(1, min(1, 1)), subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), clamp(uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) | uvec4(0u, 0u, 0u, 0u)), uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))) + 1, min(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), clamp(uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) | uvec4(0u, 0u, 0u, 0u)), uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))) + 1, _GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), clamp(uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) | uvec4(0u, 0u, 0u, 0u)), uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))) + 1)), (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-464.992), _GLF_FUZZED(9224.9375)), bvec2(false, false))).y)) ? 1 : _GLF_FUZZED(21291))))))))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) >> 0u), _GLF_IDENTITY((subgroup_local_id + 1) | (subgroup_local_id + 1), ((subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1)) - (0u ^ 0u)))))), (0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) * (1))))) >> 0u), (subgroup_local_id + 1) | (subgroup_local_id + 1)))))) >> 0u))))) / 1u)) ^ 0u))))) % subgroup_size);
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1)))) - (0u & 105705u)), 4, 64, 4);
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])), _GLF_IDENTITY(4, (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false))))) ? _GLF_IDENTITY(_GLF_FUZZED(44186), max(_GLF_FUZZED(44186), _GLF_FUZZED(44186))) : 4)), 64, _GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((0) | (0), (_GLF_IDENTITY((0) | (0), ~ (~ ((0) | (0))))) | ((0) | (0))))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY((0) | (0), _GLF_IDENTITY(((0) | (0)), (((0) | (0))) << (0 & 62489)) - 0))), 0 ^ ((~ ((0) | (0))))), _GLF_IDENTITY((~ (_GLF_IDENTITY((0), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))) ? (0) : _GLF_FUZZED(77591))) | (0))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY((0), (true ? (0) : _GLF_FUZZED(77591))) | (0)), 0 | (~ (_GLF_IDENTITY((0), (true ? (0) : _GLF_FUZZED(77591))) | (0)))))) >> 0), (~ ((0) | (0))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), max(~ (0), _GLF_IDENTITY(~ (0), (~ (0)) >> 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
        }
      }
    }
   for(int _injected_loop_counter = (1 & int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, bool(bool(_GLF_IDENTITY(_injected_loop_counter > 0, true && (_injected_loop_counter > 0)))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)), _GLF_IDENTITY(false, (false) && true) || (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
          }
         else
          {
           for(int _injected_loop_counter = (_GLF_IDENTITY((1 | (0 << _GLF_IDENTITY(int(5), int(5)))) & 1, ~ (~ ((1 | (0 << _GLF_IDENTITY(int(5), int(5)))) & 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = _GLF_IDENTITY((0 | 1), min((0 | 1), (0 | 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)); _injected_loop_counter --)
              {
               if(subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (1), (_GLF_IDENTITY(0 + (1), ~ (~ (_GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1))))))) >> 0)), (_GLF_IDENTITY(_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-7866), max(_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-7866), min(true ? _GLF_IDENTITY(1, ~ (~ (1))) : _GLF_FUZZED(-7866), true ? 1 : _GLF_FUZZED(-7866))), true ? 1 : _GLF_FUZZED(-7866))), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-7866), max(_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-7866), min(true ? 1 : _GLF_FUZZED(-7866), true ? 1 : _GLF_FUZZED(-7866))), true ? 1 : _GLF_FUZZED(-7866)))) | 0))))) < _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))
                {
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, 0 + (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) ^ 0)))) << 0))
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                      {
                       atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(_injected_loop_counter)))), clamp(~ (64), ~ (64), _GLF_IDENTITY(_GLF_IDENTITY(~ (64), (false ? _GLF_FUZZED(22844) : ~ (64))), ~ (_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) ^ 0))))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (64), (~ (64)) - 0)), ((_GLF_IDENTITY(~ (64), (~ (64)) - 0))) - 0)), 4);
                       if(_GLF_DEAD(false))
                        continue;
                      }
                    }
                  }
                 do
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                      continue;
                     return;
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))))
                    return;
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
                  {
                  }
                 else
                  {
                   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(bvec2(bool(bool(_GLF_WRAPPED_IF_TRUE(true))), false)), ! (! _GLF_IDENTITY((bool(bvec2(bool(bool(_GLF_WRAPPED_IF_TRUE(true))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(bvec2(bool(bool(_GLF_WRAPPED_IF_TRUE(true))), false))))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(bvec2(bool(bool(_GLF_WRAPPED_IF_TRUE(true))), false)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_TRUE(true)), ! (! (bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, false)))))))), _GLF_IDENTITY(false, (false) || false)))))))))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))), bool(bool(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))), bool(bool(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true)))))))))))), (! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))), bool(bool(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))))))))))) || false))))), false)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_TRUE(true)), _GLF_IDENTITY(! (! (bool(_GLF_WRAPPED_IF_TRUE(true)))), _GLF_IDENTITY(bool(bvec3(! (! _GLF_IDENTITY((bool(_GLF_WRAPPED_IF_TRUE(true))), bool(bvec2((bool(_GLF_WRAPPED_IF_TRUE(true))), true)))), false, true)), false || (bool(bvec3(! (! (bool(_GLF_WRAPPED_IF_TRUE(true)))), false, true))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false))) && true), (false) || false))))))))))) && true)))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, true && ((true) || false))))) && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)))))))
                      {
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                        {
                         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true)))))
                          {
                           do
                            {
                             return;
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true, false)))))));
                          }
                         else
                          {
                          }
                        }
                      }
                    }
                   else
                    {
                    }
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     do
                      {
                       return;
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-88.53), _GLF_FUZZED(-1.5)), vec2(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)), (injectionSwitch)))[0], (injectionSwitch)[1]), bvec2(true, true))).y))));
                     if(_GLF_DEAD(false))
                      continue;
                    }
                   else
                    {
                    }
                  }
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(70693))) < 1); _injected_loop_counter ++)
                  {
                   subgroupAll(false);
                   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                    break;
                  }
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     return;
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      continue;
                    }
                   if(_GLF_DEAD(false))
                    break;
                  }
                }
               else
                {
                 for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
                    return;
                  }
                 atomicStore(checker[virtual_gid], read, 4, 64, 4);
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(true, bool(bvec2(true, true))), false), bvec3(bvec3(bvec3(true, _GLF_IDENTITY(true, bool(bvec2(true, true))), false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(true, bool(bvec2(true, true))), false), bvec3(bvec3(bvec3(true, _GLF_IDENTITY(true, bool(bvec2(true, true))), false))))), false || (bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(true, bool(bvec2(true, true))), false), bvec3(bvec3(bvec3(true, _GLF_IDENTITY(true, bool(bvec2(true, true))), false))))))))), (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(true, bool(bvec2(true, true))), false), bvec3(bvec3(bvec3(true, _GLF_IDENTITY(true, bool(bvec2(true, true))), false))))), false || (bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(true, bool(bvec2(true, true))), false), bvec3(bvec3(bvec3(true, _GLF_IDENTITY(true, bool(bvec2(true, true))), false)))))))))) && true))))))))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) && true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, true && ((true) && true)))) && true)) && true), false, false, _GLF_IDENTITY(true, bool(bvec2(true, false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) && true), false, false, _GLF_IDENTITY(true, bool(bvec2(true, false)))))))))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ((true) && true) && true)), false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(true, false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_IDENTITY(true, bool(bvec2(true, false))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ((true) && true) && true)), false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(true, false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_IDENTITY(true, bool(bvec2(true, false))))))))))), bool(bvec4(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ((true) && true) && true)), false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(true, false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_IDENTITY(true, bool(bvec2(true, false))))))))))), true, false, true)))), (! (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ((true) && true) && true)), false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(true, false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_IDENTITY(true, bool(bvec2(true, false))))))))))), bool(bvec4(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ((true) && true) && true)), false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(true, false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_IDENTITY(true, bool(bvec2(true, false))))))))))), true, false, true))))) || false))))) || false)))
                          {
                           if(_GLF_DEAD(false))
                            return;
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
                            {
                            }
                           else
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 subgroupAll(true);
                                }
                               else
                                {
                                }
                              }
                            }
                           if(_GLF_DEAD(false))
                            break;
                          }
                         else
                          {
                          }
                        }
                       do
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                            {
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_DEAD(false))
                                break;
                               return;
                              }
                             if(_GLF_DEAD(false))
                              continue;
                            }
                          }
                         else
                          {
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           return;
                           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))
                            break;
                          }
                         else
                          {
                          }
                        }
                      }
                    }
                   else
                    {
                    }
                  }
                }
              }
            }
          }
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
}
