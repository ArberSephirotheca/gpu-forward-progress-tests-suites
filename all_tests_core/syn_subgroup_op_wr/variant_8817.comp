#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false)))), true && (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false)))))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) && true)) && true)))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x = subgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), (_GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), float(mat4x2(round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) - _GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0), (true ? _GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(-926.653, 81.49)) : vec2(1.0, 1.0))), vec2(1.0, 1.0)))))), 1.0, 0.0), mat2x4(mat3x4(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), vec2(mat2x3(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), _GLF_IDENTITY(mix(vec2((normalize(vec2(1.0, 1.0)))[0], _GLF_FUZZED(500.811)), vec2(_GLF_FUZZED(15.75), (normalize(vec2(1.0, 1.0)))[1]), bvec2(false, true)), clamp(mix(vec2((normalize(vec2(1.0, 1.0)))[0], _GLF_FUZZED(500.811)), vec2(_GLF_FUZZED(15.75), (normalize(vec2(1.0, 1.0)))[1]), bvec2(false, true)), mix(vec2((normalize(vec2(1.0, 1.0)))[_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, int(ivec2(0, 1))) : _GLF_FUZZED(58607)))], _GLF_FUZZED(500.811)), vec2(_GLF_FUZZED(15.75), (normalize(vec2(1.0, 1.0)))[1]), bvec2(false, true)), mix(vec2((normalize(vec2(1.0, 1.0)))[0], _GLF_FUZZED(500.811)), vec2(_GLF_FUZZED(15.75), (_GLF_IDENTITY(normalize(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.5)), float(1.0), bool(true))), 1.0)), mat2(1.0) * (normalize(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.5)), float(1.0), bool(true))), 1.0)))))[1]), bvec2(false, true))))), 1.0, 0.0, 0.0, 0.0))))), 1.0, 0.0)))) : _GLF_FUZZED(mat2x4(-7.3, 8.4, -0.0, 7.0, -1509.3163, 1840.6146, -2.0, 380.324))))), vec2(mat4(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (normalize(vec2(1.0, 1.0))) * mat2(1.0))) / vec2(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(19.10) : 1.0)), 1.0)))))), 1.0, 0.0), (true ? _GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0), mat2x4(mat3x4(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0)))) : _GLF_FUZZED(mat2x4(-7.3, 8.4, -0.0, 7.0, -1509.3163, 1840.6146, -2.0, 380.324))))), 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), (_GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), float(mat4x2(round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) - _GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0), (true ? _GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(-926.653, 81.49)) : vec2(1.0, 1.0))), vec2(1.0, 1.0)))))), 1.0, 0.0), mat2x4(mat3x4(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), vec2(mat2x3(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), _GLF_IDENTITY(mix(vec2((normalize(vec2(1.0, 1.0)))[0], _GLF_FUZZED(500.811)), vec2(_GLF_FUZZED(15.75), (normalize(vec2(1.0, 1.0)))[1]), bvec2(false, true)), clamp(mix(vec2((normalize(vec2(1.0, 1.0)))[0], _GLF_FUZZED(500.811)), vec2(_GLF_FUZZED(15.75), (normalize(vec2(1.0, 1.0)))[1]), bvec2(false, true)), mix(vec2((normalize(vec2(1.0, 1.0)))[_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, int(ivec2(0, 1))) : _GLF_FUZZED(58607)))], _GLF_FUZZED(500.811)), vec2(_GLF_FUZZED(15.75), (normalize(vec2(1.0, 1.0)))[1]), bvec2(false, true)), mix(vec2((normalize(vec2(1.0, 1.0)))[0], _GLF_FUZZED(500.811)), vec2(_GLF_FUZZED(15.75), (_GLF_IDENTITY(normalize(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.5)), float(1.0), bool(true))), 1.0)), mat2(1.0) * (normalize(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.5)), float(1.0), bool(true))), 1.0)))))[1]), bvec2(false, true))))), 1.0, 0.0, 0.0, 0.0))))), 1.0, 0.0)))) : _GLF_FUZZED(mat2x4(-7.3, 8.4, -0.0, 7.0, -1509.3163, 1840.6146, -2.0, 380.324))))), vec2(mat4(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (normalize(vec2(1.0, 1.0))) * mat2(1.0))) / vec2(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(19.10) : 1.0)), 1.0)))))), 1.0, 0.0), (true ? _GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0), mat2x4(mat3x4(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0)))) : _GLF_FUZZED(mat2x4(-7.3, 8.4, -0.0, 7.0, -1509.3163, 1840.6146, -2.0, 380.324))))), 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), (_GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), float(mat4x2(round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) - _GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0), (true ? _GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(-926.653, 81.49)) : vec2(1.0, 1.0))), vec2(1.0, 1.0)))))), 1.0, 0.0), mat2x4(mat3x4(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), vec2(mat2x3(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), _GLF_IDENTITY(mix(vec2((normalize(vec2(1.0, 1.0)))[0], _GLF_FUZZED(500.811)), vec2(_GLF_FUZZED(15.75), (normalize(vec2(1.0, 1.0)))[1]), bvec2(false, true)), clamp(mix(vec2((normalize(vec2(1.0, 1.0)))[0], _GLF_FUZZED(500.811)), vec2(_GLF_FUZZED(15.75), (normalize(vec2(1.0, 1.0)))[1]), bvec2(false, true)), mix(vec2((normalize(vec2(1.0, 1.0)))[_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, int(ivec2(0, 1))) : _GLF_FUZZED(58607)))], _GLF_FUZZED(500.811)), vec2(_GLF_FUZZED(15.75), (normalize(vec2(1.0, 1.0)))[1]), bvec2(false, true)), mix(vec2((normalize(vec2(1.0, 1.0)))[0], _GLF_FUZZED(500.811)), vec2(_GLF_FUZZED(15.75), (_GLF_IDENTITY(normalize(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.5)), float(1.0), bool(true))), 1.0)), mat2(1.0) * (normalize(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.5)), float(1.0), bool(true))), 1.0)))))[1]), bvec2(false, true))))), 1.0, 0.0, 0.0, 0.0))))), 1.0, 0.0)))) : _GLF_FUZZED(mat2x4(-7.3, 8.4, -0.0, 7.0, -1509.3163, 1840.6146, -2.0, 380.324))))), vec2(mat4(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (normalize(vec2(1.0, 1.0))) * mat2(1.0))) / vec2(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(19.10) : 1.0)), 1.0)))))), 1.0, 0.0), (true ? _GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0), mat2x4(mat3x4(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0)))) : _GLF_FUZZED(mat2x4(-7.3, 8.4, -0.0, 7.0, -1509.3163, 1840.6146, -2.0, 380.324))))), 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (normalize(vec2(1.0, 1.0))) / vec2(1.0, 1.0)))), 1.0, 0.0), (true ? _GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (false ? _GLF_FUZZED(round(injectionSwitch)) : _GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (normalize(vec2(1.0, 1.0))) - vec2(0.0, 0.0)))))), 1.0, 0.0), mat2x4(mat3x4(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), vec2(mat2x3(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), mix(vec2((normalize(vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))))))[0], _GLF_FUZZED(500.811)), vec2(_GLF_FUZZED(15.75), (normalize(vec2(1.0, 1.0)))[1]), bvec2(false, true))), 1.0, 0.0, 0.0, 0.0))))), 1.0, 0.0)))) : _GLF_FUZZED(mat2x4(-7.3, 8.4, -0.0, 7.0, -1509.3163, 1840.6146, -2.0, 380.324))))), vec2(mat4(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0), (true ? _GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0), mat2x4(mat3x4(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0)))) : _GLF_FUZZED(mat2x4(-7.3, 8.4, _GLF_IDENTITY(-0.0, clamp(-0.0, -0.0, -0.0)), 7.0, -1509.3163, 1840.6146, -2.0, 380.324))))), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))), mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(6.5))), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))) ? _GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0), mat2x4(mat3x4(mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-82.09) : 1.0)), round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), max(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), mat2(1.0) * (normalize(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)))), _GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (normalize(vec2(1.0, 1.0))) * vec2(1.0, 1.0)))), mix(vec2((normalize(vec2(1.0, 1.0)))[0], _GLF_FUZZED(500.811)), vec2(_GLF_FUZZED(15.75), (normalize(vec2(1.0, 1.0)))[1]), bvec2(false, true))), 1.0, 0.0, 0.0, 0.0))))), 1.0, 0.0)))) : _GLF_FUZZED(mat2x4(-7.3, 8.4, -0.0, 7.0, -1509.3163, 1840.6146, -2.0, 380.324))))), vec2(mat4(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0), (true ? _GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * 1.0))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0), mat2x4(mat3x4(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0)))) : _GLF_FUZZED(mat2x4(-7.3, 8.4, -0.0, 7.0, -1509.3163, 1840.6146, -2.0, 380.324))))), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-0.8)), min(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-0.8), clamp(_GLF_FUZZED(-0.8), _GLF_FUZZED(-0.8), _GLF_FUZZED(-0.8)))), (float(_GLF_FUZZED(-0.8))) * 1.0), float(_GLF_FUZZED(-0.8)))), float(1.0), bool(_GLF_IDENTITY(true, false || (true))))), 1.0)), abs(1.0), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(min(741.308, 35.93)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), clamp(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), min(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), min(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0))))), 0.0)), (float(mat3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.8)), float(1.0), bool(true))), 1.0)), abs(1.0), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0)))) - _GLF_ZERO(0.0, injectionSwitch.x)))).y)), vec3(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0))), 0.0)), clamp(dot(vec3(0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(float(60612)) : _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(575.148)), bool(false)))))), 0.0)), dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0))))), min(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, sqrt(0.0), 0.0))), 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), clamp(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(546.900) : 0.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6317.0007)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 0.0))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (vec4(0.0, 1.0, 0.0, 0.0)) - sqrt(vec4(0.0, 0.0, 0.0, 0.0)))), dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), clamp(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0))), 0.0))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), clamp(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED(89.40)), bool(_GLF_IDENTITY(false, (false) && true)))), 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0))))))), 0.0))) + 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(6.5))), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))) ? _GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0), mat2x4(mat3x4(mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-82.09) : 1.0)), round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), max(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), mat2(1.0) * (normalize(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)))), _GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (normalize(vec2(1.0, 1.0))) * vec2(1.0, 1.0)))), mix(vec2((normalize(vec2(1.0, 1.0)))[0], _GLF_FUZZED(500.811)), vec2(_GLF_FUZZED(15.75), (normalize(vec2(1.0, 1.0)))[1]), bvec2(false, true))), 1.0, 0.0, 0.0, 0.0))))), 1.0, 0.0)))) : _GLF_FUZZED(mat2x4(-7.3, 8.4, -0.0, 7.0, -1509.3163, 1840.6146, -2.0, 380.324))))), vec2(mat4(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0), (true ? _GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * 1.0))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0), mat2x4(mat3x4(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0)))) : _GLF_FUZZED(mat2x4(-7.3, 8.4, -0.0, 7.0, -1509.3163, 1840.6146, -2.0, 380.324))))), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-0.8)), min(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-0.8), clamp(_GLF_FUZZED(-0.8), _GLF_FUZZED(-0.8), _GLF_FUZZED(-0.8)))), (float(_GLF_FUZZED(-0.8))) * 1.0), float(_GLF_FUZZED(-0.8)))), float(1.0), bool(_GLF_IDENTITY(true, false || (true))))), 1.0)), abs(1.0), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(min(741.308, 35.93)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), clamp(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), min(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), min(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0))))), 0.0)), (float(mat3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.8)), float(1.0), bool(true))), 1.0)), abs(1.0), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0)))) - _GLF_ZERO(0.0, injectionSwitch.x)))).y)), vec3(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0))), 0.0)), clamp(dot(vec3(0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(float(60612)) : _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(575.148)), bool(false)))))), 0.0)), dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0))))), min(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, sqrt(0.0), 0.0))), 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), clamp(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(546.900) : 0.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6317.0007)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 0.0))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (vec4(0.0, 1.0, 0.0, 0.0)) - sqrt(vec4(0.0, 0.0, 0.0, 0.0)))), dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), clamp(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0))), 0.0))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), clamp(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED(89.40)), bool(_GLF_IDENTITY(false, (false) && true)))), 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0))))))), 0.0))) + 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0))))), (false ? _GLF_FUZZED(injectionSwitch) : (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(6.5))), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))) ? _GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0), mat2x4(mat3x4(mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-82.09) : 1.0)), round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), max(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), mat2(1.0) * (normalize(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)))), _GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (normalize(vec2(1.0, 1.0))) * vec2(1.0, 1.0)))), mix(vec2((normalize(vec2(1.0, 1.0)))[0], _GLF_FUZZED(500.811)), vec2(_GLF_FUZZED(15.75), (normalize(vec2(1.0, 1.0)))[1]), bvec2(false, true))), 1.0, 0.0, 0.0, 0.0))))), 1.0, 0.0)))) : _GLF_FUZZED(mat2x4(-7.3, 8.4, -0.0, 7.0, -1509.3163, 1840.6146, -2.0, 380.324))))), vec2(mat4(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0), (true ? _GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * 1.0))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0), mat2x4(mat3x4(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0)))) : _GLF_FUZZED(mat2x4(-7.3, 8.4, -0.0, 7.0, -1509.3163, 1840.6146, -2.0, 380.324))))), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-0.8)), min(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-0.8), clamp(_GLF_FUZZED(-0.8), _GLF_FUZZED(-0.8), _GLF_FUZZED(-0.8)))), (float(_GLF_FUZZED(-0.8))) * 1.0), float(_GLF_FUZZED(-0.8)))), float(1.0), bool(_GLF_IDENTITY(true, false || (true))))), 1.0)), abs(1.0), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(min(741.308, 35.93)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), clamp(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), min(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), min(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0))))), 0.0)), (float(mat3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.8)), float(1.0), bool(true))), 1.0)), abs(1.0), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0)))) - _GLF_ZERO(0.0, injectionSwitch.x)))).y)), vec3(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0))), 0.0)), clamp(dot(vec3(0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(float(60612)) : _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(575.148)), bool(false)))))), 0.0)), dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0))))), min(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, sqrt(0.0), 0.0))), 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), clamp(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(546.900) : 0.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6317.0007)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 0.0))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (vec4(0.0, 1.0, 0.0, 0.0)) - sqrt(vec4(0.0, 0.0, 0.0, 0.0)))), dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), clamp(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0))), 0.0))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), clamp(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED(89.40)), bool(_GLF_IDENTITY(false, (false) && true)))), 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0))))))), 0.0))) + 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0))))))) : _GLF_FUZZED(sin(vec2(-32.21, -5.9)))))).x), float(_GLF_FUZZED(-1999.9229)), bool(false))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), max(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y)))), float(_GLF_FUZZED(-8.1)), bool(false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))))).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid, uvec2(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid[0], GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid[1])).x * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(82723u) : 0u)), 0u)) >> _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 1u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 1u)))) >> 0u)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 1u)))))), (~ (_GLF_IDENTITY(subgroup_base, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 1u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 1u)))) / 1u)) | (_GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 1u))))))))) - (0u | 0u)))))) + subgroup_local_id;
 GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.y = virtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (1)), (_GLF_IDENTITY(~ (~ (1)), clamp(~ (~ (1)), ~ (~ (1)), ~ (~ (1))))) | (~ (~ (1)))), (_GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) ^ 0)) >> 0)) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-504.708))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-504.708))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-504.708)))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-504.708))))) > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.1), _GLF_FUZZED(-2.3)), bvec2(false, false))).y)), injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-499.751)), float(injectionSwitch.y), bool(true))), bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y)), false))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(false, bool(bvec3(false, true, false))), true)), false || (bool(bvec4(false, true, _GLF_IDENTITY(false, bool(bvec3(false, true, false))), true)))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(bvec3(bvec3(! (false), false, false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(bvec3(bvec3(! (false), false, false)))))), (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(bvec3(bvec3(! (false), false, false))))))) || false), false))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 uint read = 0;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), min(4, 4)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec3(false || (false), true, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(false || (false), true, true)), ! (! (bool(bvec3(false || (false), true, true)))))), ! (! (! (_GLF_IDENTITY(bool(bvec3(false || (false), true, true)), ! (! (bool(bvec3(false || (false), true, true)))))))))))), (false || (false)) || false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false))), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, true))), true))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(true, true && (true))))), true))))), false), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, true))), true)))))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, true))), true)))))), false)))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, true))), true))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, true))), true)))))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, true))), true)))))), false)))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, true))), true)))))))), false), false)))))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   read = atomicLoad(buf[GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.y], 4, 64, 2);
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)) || false)), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)), false, true, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))), ! (! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)), false, true, true))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))), true)))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))), true)))), false, false)), bool(bvec3(bool(bvec3(! (_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))), true)))), false, false)), false, true)))))))), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, exp(sqrt(0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, log(1.0), abs(1.0), 1.0, 1.0))).y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(51.27), max(_GLF_FUZZED(51.27), _GLF_FUZZED(51.27))))), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(51.27)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true)))), ! (! (! (false))))))))))))))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (true ? _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x : _GLF_FUZZED(3.4))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 0.0, length(0.0), abs(1.0), 1.0, 0.0, 1.0, sin(abs(0.0)))), 0.0 + (float(mat4x2(injectionSwitch.y, 0.0, length(0.0), abs(1.0), 1.0, 0.0, 1.0, sin(abs(0.0)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   read = atomicLoad(buf[GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.y], 4, 64, 2);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))), bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false || (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)))) && true), false || (_GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), true && (! (bool(bool(false)))))))))))))))), _GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))), false || (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))), true && (bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))))))))))))), ! (! (_GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))), false || (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))), true && (bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))))))))))))), bool(_GLF_IDENTITY(bvec2(! (! (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))), false || (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))), true && (bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))))))))))))), true), bvec2(bvec2(bvec2(! (! (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))), false || (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))), true && (bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))))))))))))), true))))))))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
            barrier();
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4.5, 800.840)) : injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0), vec4(1.0, 1.0, exp(0.0), 1.0)), dot(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0), vec4(1.0, 1.0, exp(0.0), 1.0)))))), vec2(0.0, 0.0) + (injectionSwitch))) / _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0)))) * (vec2(1.0, 1.0)), vec2(0.0, 0.0) + (mat2(1.0) * (vec2(1.0, 1.0)))))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(checker[GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.y], read, _GLF_IDENTITY(4, (4) | (4)), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
