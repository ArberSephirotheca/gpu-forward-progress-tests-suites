#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), true && (! (false)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (false), true && (! (false)))))), false || (bool(bool((_GLF_IDENTITY(! (false), true && (! (false))))))))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(0.9, -7.9)) : injectionSwitch)).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), false, true, false)))) || false)))))), true)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9927.9574), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5390.6324)), bvec2(true, false))) : _GLF_FUZZED(vec2(-1593.8670, -11.28)))), injectionSwitch)).x, (true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9927.9574), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5390.6324)), bvec2(true, false))) : _GLF_FUZZED(vec2(-1593.8670, -11.28)))), injectionSwitch)).x : _GLF_FUZZED(pow(-105.294, 9.1)))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), true, true)), bool(_GLF_IDENTITY(bvec3(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), true, true)), _GLF_IDENTITY(false, (false) && true), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), true, true)), _GLF_IDENTITY(false, (false) && true), false), bvec3(bvec3(bvec3(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), true, true)), _GLF_IDENTITY(false, (false) && true), false)))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.7))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(false, (false) && true), true))), false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), true && (bool(injectionSwitch.x < injectionSwitch.y))))))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x), max((gl_NumWorkGroups.x), _GLF_IDENTITY((gl_NumWorkGroups.x), min((gl_NumWorkGroups.x), (gl_NumWorkGroups.x))))) | 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), true && (! (false))))), false || (bool(bool(_GLF_IDENTITY(! (false), true && (! (false)))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)) || (false))))), false || (_GLF_IDENTITY(false, ! (! (false))))), false, false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), ((injectionSwitch) * vec2(1.0, 1.0)) / exp(vec2(0.0, 0.0)))) : _GLF_FUZZED(vec2(69.69, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(6.7, mix(float(_GLF_IDENTITY(6.7, max(6.7, 6.7))), float(_GLF_FUZZED(-0.6)), bool(false))), mix(float(_GLF_FUZZED(-308.687)), float(_GLF_IDENTITY(6.7, (false ? _GLF_FUZZED(832.067) : _GLF_IDENTITY(6.7, (6.7) + 0.0)))), bool(_GLF_IDENTITY(true, (true) || false)))), (false ? _GLF_FUZZED(6.2) : _GLF_IDENTITY(_GLF_IDENTITY(6.7, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(6.7, max(6.7, _GLF_IDENTITY(6.7, mix(float(_GLF_FUZZED(-9624.2162)), float(6.7), bool(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), (injectionSwitch.x < injectionSwitch.y)))))))), (float(_GLF_IDENTITY(6.7, max(6.7, _GLF_IDENTITY(6.7, mix(float(_GLF_FUZZED(-9624.2162)), float(6.7), bool(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), (injectionSwitch.x < injectionSwitch.y))))))))) / 1.0), float(_GLF_IDENTITY(_GLF_FUZZED(-0.6), (_GLF_FUZZED(-0.6)) / 1.0)), bool(false))), mix(float(_GLF_FUZZED(-308.687)), float(_GLF_IDENTITY(6.7, (false ? _GLF_FUZZED(832.067) : 6.7))), bool(true))))))))).y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (false || ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (! (false || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), false))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - sin(vec2(0.0, 0.0))) * vec2(1.0, 1.0)) / exp(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (((injectionSwitch) * vec2(1.0, 1.0)) / exp(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0)))))) : _GLF_FUZZED(vec2(69.69, _GLF_IDENTITY(6.7, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-308.687)), float(_GLF_IDENTITY(6.7, (false ? _GLF_FUZZED(_GLF_IDENTITY(832.067, min(832.067, _GLF_IDENTITY(832.067, (832.067) + 0.0)))) : _GLF_IDENTITY(6.7, mix(float(6.7), float(_GLF_FUZZED(756.742)), bool(false)))))), bool(true)), _GLF_IDENTITY((mix(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-308.687, max(-308.687, -308.687))), clamp(_GLF_FUZZED(_GLF_IDENTITY(-308.687, max(-308.687, -308.687))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-308.687, max(-308.687, -308.687))), float(mat4(_GLF_FUZZED(_GLF_IDENTITY(-308.687, max(-308.687, -308.687))), 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) - vec2(0.0, 0.0))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), (_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) - 0.0), determinant(mat2(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4(1.0, exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, sin(0.0))), dot(vec2(1.0, 1.0), vec2(0.0, sin(0.0)))), sqrt(_GLF_IDENTITY(1.0, 1.0 * (1.0))), 0.0, log(1.0)))), 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-308.687, mix(float(_GLF_FUZZED((vec2(-121.317, -6963.2416) - vec2(12.68, 3.2)).s)), float(-308.687), bool(true))), max(-308.687, -308.687)))))), float(_GLF_IDENTITY(_GLF_IDENTITY(6.7, clamp(6.7, 6.7, _GLF_IDENTITY(6.7, (true ? 6.7 : _GLF_FUZZED(-93.90))))), (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(832.067) : 6.7))), bool(true))) + _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5.7)), bool(false))), (true ? _GLF_IDENTITY((mix(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-308.687, max(-308.687, -308.687))), clamp(_GLF_FUZZED(_GLF_IDENTITY(-308.687, max(-308.687, -308.687))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-308.687, max(-308.687, -308.687))), float(mat4(_GLF_FUZZED(_GLF_IDENTITY(-308.687, max(-308.687, -308.687))), 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) - vec2(0.0, 0.0))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), (_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) - 0.0), determinant(mat2(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4(1.0, exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, sin(0.0))), dot(vec2(1.0, 1.0), vec2(0.0, sin(0.0)))), sqrt(_GLF_IDENTITY(1.0, 1.0 * (1.0))), 0.0, log(1.0)))), 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-308.687, mix(float(_GLF_FUZZED((vec2(-121.317, -6963.2416) - vec2(12.68, 3.2)).s)), float(-308.687), bool(true))), max(-308.687, -308.687)))))), float(_GLF_IDENTITY(_GLF_IDENTITY(6.7, clamp(6.7, 6.7, _GLF_IDENTITY(6.7, (true ? 6.7 : _GLF_FUZZED(-93.90))))), (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(832.067) : 6.7))), bool(true))) + _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5.7)), bool(false))), float(mat2x3(_GLF_IDENTITY((mix(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-308.687, max(-308.687, -308.687))), clamp(_GLF_FUZZED(_GLF_IDENTITY(-308.687, max(-308.687, -308.687))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-308.687, max(-308.687, -308.687))), float(mat4(_GLF_FUZZED(_GLF_IDENTITY(-308.687, max(-308.687, -308.687))), 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) - vec2(0.0, 0.0))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), (_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) - 0.0), determinant(mat2(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4(1.0, exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, sin(0.0))), dot(vec2(1.0, 1.0), vec2(0.0, sin(0.0)))), sqrt(_GLF_IDENTITY(1.0, 1.0 * (1.0))), 0.0, log(1.0)))), 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-308.687, mix(float(_GLF_FUZZED((vec2(-121.317, -6963.2416) - vec2(12.68, 3.2)).s)), float(-308.687), bool(true))), max(-308.687, -308.687)))))), float(_GLF_IDENTITY(_GLF_IDENTITY(6.7, clamp(6.7, 6.7, _GLF_IDENTITY(6.7, (true ? 6.7 : _GLF_FUZZED(-93.90))))), (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(832.067) : 6.7))), bool(true))) + _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5.7)), bool(false))), mix(float((mix(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-308.687, max(-308.687, -308.687))), clamp(_GLF_FUZZED(_GLF_IDENTITY(-308.687, max(-308.687, -308.687))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-308.687, max(-308.687, -308.687))), float(mat4(_GLF_FUZZED(_GLF_IDENTITY(-308.687, max(-308.687, -308.687))), 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) - vec2(0.0, 0.0))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), (_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) - 0.0), determinant(mat2(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4(1.0, exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, sin(0.0))), dot(vec2(1.0, 1.0), vec2(0.0, sin(0.0)))), sqrt(_GLF_IDENTITY(1.0, 1.0 * (1.0))), 0.0, log(1.0)))), 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-308.687, mix(float(_GLF_FUZZED((vec2(-121.317, -6963.2416) - vec2(12.68, 3.2)).s)), float(-308.687), bool(true))), max(-308.687, -308.687)))))), float(_GLF_IDENTITY(_GLF_IDENTITY(6.7, clamp(6.7, 6.7, _GLF_IDENTITY(6.7, (true ? 6.7 : _GLF_FUZZED(-93.90))))), (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(832.067) : 6.7))), bool(true))) + _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5.7)), bool(false)))), float(_GLF_FUZZED(-5.0)), bool(false))), 1.0, 1.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(mix(9.6, -5.9, true)))))))))).y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), (true ? (workgroup_size) : _GLF_FUZZED(subgroup_local_id))) >> (1u ^ 1u)), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), (true ? (workgroup_size) : _GLF_FUZZED(subgroup_local_id))) >> (1u ^ 1u)), (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), (true ? (workgroup_size) : _GLF_FUZZED(subgroup_local_id))) >> (1u ^ 1u))) ^ 0u)))) * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, true, true)))) || false) && true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || ((false))))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(91.73)), bool(false))) > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)))))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, float(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 1.0)))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, float(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 1.0))))) && true))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), min(max(subgroup_size, subgroup_size), max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) >> 0u, ((subgroup_size) >> 0u) / 1u)), subgroup_size)))), subgroup_size)));
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (64) << 0), 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, (0u ^ 0u), 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u & 165846u), _GLF_IDENTITY(uint(uvec3((0u & 165846u), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (_GLF_IDENTITY(uint(uvec3((0u & 165846u), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (uint(uvec3(_GLF_IDENTITY((0u & 165846u), (_GLF_IDENTITY((0u & 165846u), 0u + ((0u & 165846u)))) - (0u | 0u)), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) / 1u)) | (uint(uvec3((0u & 165846u), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) ^ 0u)))))))) ^ (0u)))))))], _GLF_IDENTITY(4, max(4, 4)), 64, 0);
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, 0u + (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))))], read, 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) | 0), (64) << 0), 4);
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))))))), _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool((_GLF_DEAD(false)))), true && (bool(bool((_GLF_DEAD(false))))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), ! (! (! (_GLF_IDENTITY(! (false), (! (false)) || false)))))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)).y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(5.4), _GLF_FUZZED(5.0)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (injectionSwitch))), (_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(5.4), _GLF_FUZZED(5.0)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (injectionSwitch)))) * mat2(1.0)) + vec2(0.0, 0.0)).y, true, true))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1.3)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))))))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), true && (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2047.1747), _GLF_FUZZED(-12.34)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y, true, true)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), true && (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2047.1747), _GLF_FUZZED(-12.34)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y, true, true))))))), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), true && (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2047.1747), _GLF_FUZZED(-12.34)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y, true, true)))))))))))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), true && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))), false, false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))))) && true)), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))))))) && true)))))))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))))), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true, true))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true, true)))))))))))))), false)))))))), true && (true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), false))))), true, true))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) + 0.0), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))), ! (! (! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true))))))))))))))), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))), false, true), bvec3(bvec4(bvec3(! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))), false, true), true))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), true && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))))))), false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), false))))), true, true))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) + 0.0), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))), ! (! (! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true))))))))))))))), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))), false, true), bvec3(bvec4(bvec3(! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))), false, true), true))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), true && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))))))), false))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), false))))), true, true))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) + 0.0), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))), ! (! (! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true))))))))))))))), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))), false, true), bvec3(bvec4(bvec3(! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))), false, true), true))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), true && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))))))), false))))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), false))))), true, true))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) + 0.0), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))), ! (! (! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true))))))))))))))), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))), false, true), bvec3(bvec4(bvec3(! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))), false, true), true))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), true && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))))))), false))))))), false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), true, false)), false)))))), ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && (true && _GLF_IDENTITY((false), ((false)) && true)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && (true && (false)))))), true && (_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && (true && _GLF_IDENTITY((false), ! (! ((false))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && (true && (false)))), (! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && (true && (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(bool(_GLF_IDENTITY(true && (false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && (true && (false))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && (true && (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && (true && (false)))), ! (! (! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && (true && (false)))))))) || false))) && true))), true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && (true && (false)))))), true && (_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && (true && _GLF_IDENTITY((false), ! (! ((false))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && (true && (false)))), (! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && (true && (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(bool(_GLF_IDENTITY(true && (false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && (true && (false))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && (true && (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && (true && (false)))), ! (! (! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && (true && (false)))))))) || false))) && true))), true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && (true && (false)))))), true && (_GLF_IDENTITY(true && _GLF_IDENTITY((false), ((false)) || false), ! (! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true)))) && true)) && (true && _GLF_IDENTITY((false), ! (! ((false))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && (true && (false)))), (! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && (true && (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true && (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && (true && (false))), ! (! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && (true && (false))))))), (! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY((bool(bool(true))) && true, ! (! ((bool(bool(true))) && true))))) && (true && (false))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))))))))))), bool(bvec2(bool(_GLF_IDENTITY(true && (false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && (true && (false))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && (true && (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && (true && (false)))), ! (! (! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true))), ! (! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)))))))) && (true && (false)))))))) || false))) && true))), true)))))))))))) || false, bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && _GLF_IDENTITY((true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((true && (false)), ! (! (_GLF_IDENTITY((true && (false)), ! (! ((true && (false)))))))))))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && (true && _GLF_IDENTITY((false), ! (! ((false)))))))))), ! (! (true && (_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && (true && _GLF_IDENTITY((false), ! (! ((false)))))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && (true && (false)), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && _GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && (true && (false))) || false))), (! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && (_GLF_IDENTITY(true && (false), false || (_GLF_IDENTITY(true && (false), (true && (false)) || false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(bool(_GLF_IDENTITY(true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), false, true, true)), ! (! (bool(bvec4((false), false, true, true)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true), bool(bvec2(_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true), true)))) && (true && (false))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && (true && (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && (true && (false)))), ! (! (! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && (true && (false)))))))) || false))) && true))), true)))))) || false, _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(true && (false), true && (true && (false))))), (! _GLF_IDENTITY((! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false))))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))))), bool(bool(bool(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))))))))) && (true && (false))))), bool(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))))), bool(bool(bool(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))))))))), ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))))), bool(bool(bool(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))))), bool(bool(bool(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))))), bool(bool(bool(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))))), bool(bool(bool(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))))))))))) || false), true, false, false)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))))), bool(bool(bool(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))))), bool(bool(bool(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))))), bool(bool(bool(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))))))))))) || false), true, false, false)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))))), bool(bool(bool(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))))), bool(bool(bool(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))))), bool(bool(bool(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))))))))))) || false), true, false, false))))))))))))) && (true && (false))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))))), bool(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))), (! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(false, (false) || false), true))))) || false)))))))))))) && (true && (false))))), ((! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec4(true, true, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))))), bool(bool(bool(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))))))))) && (true && (false)))))) && true))), true)))) && true)))))))
    return;
   subgroupAll(true);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  return;
}
