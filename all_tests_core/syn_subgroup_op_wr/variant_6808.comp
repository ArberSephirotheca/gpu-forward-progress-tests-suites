#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)))), vec2(1.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)))), vec2(1.0, 0.0))), 0.0)), mat2(1.0) * (vec2(mat2(injectionSwitch, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)))), vec2(1.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)))), vec2(1.0, 0.0))), 0.0))))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(25.97), _GLF_FUZZED(float((~ 68238)))), bvec2(false, false))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), uvec3(uvec4((gl_WorkGroupSize) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), 1u))))), _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))) | (uvec3(0u, _GLF_IDENTITY(0u, (0u) - 0u), 0u))) ^ (~ (gl_WorkGroupSize)))), (uvec3(0u, 0u, 0u) & uvec3(uvec4(12437u, 122211u, 13134u, 26395u))) | ((_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupSize)))))), ~ (~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupSize)))), ((_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupSize))))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY((uvec3(0u, 0u, 0u) & uvec3(uvec4(_GLF_IDENTITY(12437u, _GLF_IDENTITY(uint(uvec3(12437u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u)), 0u + (uint(uvec3(12437u, 1u, 1u))))), 122211u, 13134u, 26395u))) | ((_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupSize))))), ~ (~ ((uvec3(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u) & uvec3(uvec4(_GLF_IDENTITY(12437u, _GLF_IDENTITY(uint(uvec3(12437u, 1u, 1u)), 0u + (uint(uvec3(12437u, 1u, 1u))))), 122211u, 13134u, 26395u))) | ((_GLF_IDENTITY(~ (gl_WorkGroupSize), _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(1u, 1u, 1u) * (uvec3(0u, 0u, 0u))) ^ (~ (gl_WorkGroupSize)))))))))))), ~ _GLF_IDENTITY((~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(100459u) : 0u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((false ? _GLF_FUZZED(100459u) : 0u), clamp((false ? _GLF_FUZZED(100459u) : 0u), (false ? _GLF_FUZZED(100459u) : 0u), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(100459u) : _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ (0u), _GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u)))))))), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(100459u) : _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ (0u), _GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u))))))))), ~ (~ (~ ((false ? _GLF_FUZZED(100459u) : _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ (0u), _GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u)))))))))))))), 0u + ((false ? _GLF_FUZZED(100459u) : 0u))))))) | (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(100459u) : 0u)))), 0u) ^ (~ (gl_WorkGroupSize)))), (uvec3(0u, 0u, 0u) & uvec3(uvec4(12437u, 122211u, 13134u, 26395u))) | ((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupSize)), (uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupSize))) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(~ (gl_WorkGroupSize), _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupSize)), (uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupSize))) + uvec3(0u, 0u, 0u)))) ^ uvec3(0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))), 0u))))))), ((~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(100459u) : 0u)), (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(100459u) : 0u))) | (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(100459u) : 0u)))), 0u) ^ (~ (gl_WorkGroupSize)))), (uvec3(0u, 0u, 0u) & uvec3(uvec4(12437u, 122211u, 13134u, 26395u))) | ((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupSize)), (uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupSize))) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(~ (gl_WorkGroupSize), _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupSize)), (uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupSize))) + uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u)))))))) - (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) * cos(0.0))) | (0))], _GLF_IDENTITY(gl_WorkGroupSize[1], 0u | (gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))), uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) | 0u))), (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (0u) | 0u)))) | 0u)), 0u) ^ (~ (gl_WorkGroupSize)))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) * cos(0.0))) | (0))], _GLF_IDENTITY(gl_WorkGroupSize[1], 0u | (gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))), uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) | 0u))), (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (0u) | 0u)))) | 0u)), 0u) ^ (~ (gl_WorkGroupSize))))), uvec3(uvec3(~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) * cos(0.0))) | (0))], _GLF_IDENTITY(gl_WorkGroupSize[1], 0u | (gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))), uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) | 0u))), (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (0u) | 0u)))) | 0u)), 0u) ^ (~ (gl_WorkGroupSize))))))))))).x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize))), (true ? (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize))) : _GLF_FUZZED(uvec3(138265u, 175874u, 159485u)))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))))))).x) / 1u, ((_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize))), (true ? (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize))) : _GLF_FUZZED(uvec3(138265u, 175874u, 159485u)))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))))))).x) / 1u) - 0u))) | (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupSize))))).x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.6)), bool(false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.6)), bool(false)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.6)), bool(false))))), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.6)), bool(false)))))))))))), (bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.6)), bool(false)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.6)), bool(false))))), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.6)), bool(false))))))))))))) || false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) || (false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (true) && true))), (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), max(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), (false ? _GLF_FUZZED(-89.69) : _GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), max(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), max(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) - 0.0))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), true))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (false ? _GLF_FUZZED(subgroup_id) : gl_WorkGroupID.x));
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)))), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, false))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec3(bvec2(bvec2(_GLF_DEAD(false), false)), true))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), ! (! (! (_GLF_IDENTITY(true, true && (true))))))))), bvec2(bvec3(bvec2(false, true), false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) && true))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(215.694), _GLF_FUZZED(-160.501)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(215.694), _GLF_FUZZED(-160.501)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) + (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) | _GLF_IDENTITY(0u, (0u) << (0u << _GLF_IDENTITY(uint(0u), uint(0u))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(60034u) : (subgroup_id * subgroup_size))) ^ 0u)) | _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << (0u << _GLF_IDENTITY(uint(0u), uint(0u))), 1u * ((_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 1u)), (uint(uvec3(0u, 1u, 1u))) / 1u))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))))))))) + ((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) * (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))), (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))), uint(uint((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), (1u << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, (1u) ^ (55172u & 0u))))) / 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), uint(1u))), uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(uvec3(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(uint(uvec3(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(uvec3(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), ~ (_GLF_IDENTITY(~ (uint(1u)), clamp(~ (uint(1u)), ~ (uint(1u)), ~ (uint(1u)))))), uint(1u)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uvec3(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1u), uint(uvec3(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0))).x))))))), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) / 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))), uint(uint((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(1u), uint(1u)))), (1u << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_size) : 1u))))) / 1u))))), max(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))), uint(uint((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) / 1u))))), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))), uint(uint((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), max(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) - 0u), 1u << _GLF_IDENTITY(uint(1u), uint(1u))))) / 1u)))))))) | (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))), uint(uint((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) / 1u)))))))) | 0u)) - 0u) >> _GLF_IDENTITY(uint(1u), uint(1u))), ((subgroup_size) * (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), min(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u))))))))) >> _GLF_IDENTITY(uint(1u), uint(1u)), min(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))), clamp((1u << _GLF_IDENTITY(uint(1u), uint(1u))), (1u << _GLF_IDENTITY(uint(1u), uint(1u))), (1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) + 0u)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uvec3(uint(1), 0u, 1u)), (_GLF_IDENTITY(uint(uvec3(uint(1), 0u, 1u)), ~ (~ (uint(uvec3(uint(1), 0u, 1u)))))) - 0u)), uint(1))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(uint(1), uint(1))), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), min(uint(1), uint(1)))) + 0u, (_GLF_IDENTITY((_GLF_IDENTITY(uint(1), min(uint(1), uint(1)))) + 0u, ~ (~ ((_GLF_IDENTITY(uint(1), min(uint(1), uint(1)))) + 0u)))) | ((_GLF_IDENTITY(uint(1), min(uint(1), uint(1)))) + 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(uint(1), uint(1))), (_GLF_IDENTITY(uint(1), min(uint(1), uint(1)))) >> 0u))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true)))), true, true, true))))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), (true ? ~ (4) : _GLF_FUZZED(83817)))) << 0))), (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))), 1, 0)), 0 ^ (int(ivec3(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))), 1, 0))))), (true ? ~ (4) : _GLF_FUZZED(83817)))) << 0, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), clamp((~ (4)), (~ (4)), (~ (4)))), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))), (true ? ~ (4) : _GLF_FUZZED(83817))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), clamp((~ (4)), (~ (4)), (~ (4)))), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))), (true ? ~ (4) : _GLF_FUZZED(83817))), (false ? _GLF_FUZZED(-30851) : _GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), clamp((~ (4)), (~ (4)), (~ (4)))), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))), (true ? ~ (4) : _GLF_FUZZED(83817))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), clamp((~ (4)), (~ (4)), (~ (4)))), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))), (true ? ~ (4) : _GLF_FUZZED(83817)))))) << 0) - 0)))), min(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))), (true ? ~ (4) : _GLF_FUZZED(83817)))) << 0, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))), (true ? ~ (4) : _GLF_FUZZED(83817)))) << 0, max((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))), (true ? ~ (4) : _GLF_FUZZED(83817)))) << 0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), _GLF_IDENTITY((true ? ~ (~ (4)) : _GLF_FUZZED(-13417)), (_GLF_IDENTITY((true ? ~ (~ (4)) : _GLF_FUZZED(-13417)), (_GLF_IDENTITY((true ? ~ (~ (4)) : _GLF_FUZZED(-13417)), min((true ? ~ (~ (4)) : _GLF_FUZZED(-13417)), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))) | 0)) - 0)))), (true ? ~ (4) : _GLF_FUZZED(83817)))) << 0, ((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), (true ? ~ _GLF_IDENTITY((~ (4)), 0 | ((~ (4)))) : _GLF_FUZZED(-13417))))), (true ? ~ (4) : _GLF_FUZZED(83817)))) << 0) | ((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))), (true ? ~ (4) : _GLF_FUZZED(83817)))) << 0))))) - 0)))), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))), (true ? ~ (4) : _GLF_FUZZED(83817)))) << 0, ((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))), (true ? ~ (4) : _GLF_FUZZED(83817)))) << _GLF_IDENTITY(0, (0) >> 0)) - 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))), (true ? ~ (4) : _GLF_FUZZED(83817)))) << 0, ((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))), (true ? ~ (4) : _GLF_FUZZED(83817)))) << 0) - 0)), min(_GLF_IDENTITY(~ (4), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))), (true ? ~ (4) : _GLF_FUZZED(83817)))) << 0, ((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ _GLF_IDENTITY((4), ((4)) | 0)) : _GLF_FUZZED(-13417))))), (true ? ~ (4) : _GLF_FUZZED(83817)))) << 0) - 0)), _GLF_IDENTITY(~ (4), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))), (true ? ~ (4) : _GLF_FUZZED(83817)))) << 0, ((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))), _GLF_IDENTITY((true ? ~ (4) : _GLF_FUZZED(83817)), (_GLF_IDENTITY((true ? ~ (4) : _GLF_FUZZED(83817)), max((true ? ~ (4) : _GLF_FUZZED(83817)), (true ? ~ (4) : _GLF_FUZZED(83817))))) << (0 & -27585)))) << 0) - 0)))), _GLF_IDENTITY(~ _GLF_IDENTITY((4), 0 | ((4))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))), (_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417)))))) / (1 | 1)), (true ? ~ (4) : _GLF_FUZZED(83817)))) << 0, ((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))), (true ? ~ (4) : _GLF_FUZZED(83817)))) << 0) - 0))))))))) - 0) : _GLF_FUZZED(-45030)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) * ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true)))), true, true, true))))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), (true ? ~ (4) : _GLF_FUZZED(83817)))) << 0))), (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ _GLF_IDENTITY((4), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY((4), ((4)) - 0)))) : _GLF_FUZZED(-13417))))), 1, 0)), 0 ^ (int(ivec3(_GLF_IDENTITY(~ (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (true ? _GLF_IDENTITY(~ (4), ~ (~ (~ (4)))) : _GLF_FUZZED(-75085)))))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), (_GLF_IDENTITY((~ (4)), clamp((~ (4)), (~ (4)), (~ (4))))) / ((0 | 1) | (1 | 1))), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))), 1, 0))))), (true ? ~ (4) : _GLF_FUZZED(83817)))) << 0, ((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), clamp((~ (4)), (~ _GLF_IDENTITY((4), (_GLF_IDENTITY((4), ((4)) + (1 ^ 1))) ^ 0)), (~ (4)))), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))), (true ? ~ (4) : _GLF_FUZZED(83817)))) << 0) - 0)))), min(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))), (true ? ~ (4) : _GLF_FUZZED(83817)))) << 0, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))), (true ? ~ (4) : _GLF_FUZZED(83817)))) << 0, max((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))), (true ? ~ (4) : _GLF_FUZZED(83817)))) << 0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))), (_GLF_IDENTITY(true ? ~ (4) : _GLF_FUZZED(83817), ~ (~ (true ? ~ (4) : _GLF_FUZZED(83817))))))) << 0, ((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(_GLF_IDENTITY(-13417, (false ? _GLF_FUZZED((mat2(4.2, -0.0, -3.0, -3.3) , 36411)) : -13417))))))), (true ? ~ (4) : _GLF_FUZZED(83817)))) << 0) | ((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))), (true ? ~ (4) : _GLF_FUZZED(83817)))) << 0))))) - 0)))), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ _GLF_IDENTITY((4), _GLF_IDENTITY(int(int((4))), 0 | (int(int((4))))))), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417)))), 0 + ((_GLF_IDENTITY(~ (~ _GLF_IDENTITY((4), _GLF_IDENTITY(int(int((4))), 0 | (int(int((4))))))), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))))), (true ? ~ (4) : _GLF_FUZZED(83817)))) << 0, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), ~ (~ (_GLF_IDENTITY(~ (4), 1 * (~ (4))))))) ^ 0), ~ (_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))), (true ? ~ (4) : _GLF_FUZZED(83817)))) << 0) - 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))), (true ? ~ (4) : _GLF_FUZZED(83817)))) << 0, ((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))), (true ? ~ (4) : _GLF_FUZZED(83817)))) << 0) - 0)), min(_GLF_IDENTITY(~ (4), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))), (true ? ~ (4) : _GLF_FUZZED(83817)))) << 0, ((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))), (true ? ~ (4) : _GLF_FUZZED(83817)))) << 0) - 0)), _GLF_IDENTITY(~ (4), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ _GLF_IDENTITY((4), clamp((4), (4), (4)))) : _GLF_FUZZED(-13417))))), (true ? ~ (4) : _GLF_FUZZED(83817)))) << 0, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))), (true ? ~ (4) : _GLF_FUZZED(83817))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))), (true ? ~ (4) : _GLF_FUZZED(83817)))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))), (true ? ~ (4) : _GLF_FUZZED(83817)))))) << 0) - 0)))), _GLF_IDENTITY(~ (4), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417)))), min((_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417)))), (_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))))), (true ? ~ (4) : _GLF_FUZZED(83817)))) << 0, ((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(-13417))))), (true ? ~ (4) : _GLF_FUZZED(83817)))) << 0) - 0))))))))) - 0) : _GLF_FUZZED(-45030))))), _GLF_IDENTITY(64, (false ? _GLF_FUZZED(-68128) : 64)), _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, min(0, 0)), 0, 0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) / 1u, uint(uint(_GLF_IDENTITY((subgroup_local_id) / 1u, (_GLF_IDENTITY((subgroup_local_id) / 1u, max((subgroup_local_id) / 1u, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | (_GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(next_virtual_gid))))) / 1u))) | ((subgroup_local_id) / 1u))))))) * 1u) + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) / 1u, uint(uint(_GLF_IDENTITY((subgroup_local_id) / 1u, (_GLF_IDENTITY((subgroup_local_id) / 1u, max((subgroup_local_id) / 1u, (subgroup_local_id) / 1u))) | ((subgroup_local_id) / 1u))))))) * 1u) + 1 < subgroup_size) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, clamp(_GLF_IDENTITY(read, _GLF_IDENTITY(uint(uvec3(read, 0u, 1u)), max(uint(uvec3(_GLF_IDENTITY(read, (read) / 1u), 0u, 1u)), uint(uvec3(read, 0u, 1u))))), read, _GLF_IDENTITY(read, 0u | (read)))), 4, _GLF_IDENTITY(64, (64) / 1), _GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(int(4)))) | (4)))), (~ (~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(int(4)))) | (4))))) >> 0)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), false, false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), (true && (false)) && true)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6353.5346) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))) / 1.0)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), (bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) && true), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), false, true))))), (! (bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))) || false))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, (injectionSwitch.y) - 0.0)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-693.476, -0.4, 41.20).s), _GLF_FUZZED(75.63)), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat3x4(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(-2.0))), 1.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), (injectionSwitch)[1]), bvec2(true, true))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7.8))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}
