#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false))), bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false)) || false))), false, false)))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), true && (! (! (! (false))))))) || false))), bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false))), false, false)))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(false))), bool(bvec4(! (bool(bool(false))), false, true, false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (bool(bool(false))), bool(bvec4(! (bool(bool(false))), false, true, false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (bool(bool(false))), bool(bvec4(! (bool(bool(false))), false, true, false))), false), false))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(false))), bool(bvec4(! (bool(bool(false))), false, true, false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (bool(bool(false))), bool(bvec4(! (bool(bool(false))), false, true, false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (bool(bool(false))), bool(bvec4(! (bool(bool(false))), false, true, false))), false), false)))))))))) && true)))))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))))))), bool(bvec4(! (_GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, true, true))))))), false, true, false)))))))))))))))))), bool(bool((! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), bool(bvec4(! (bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))))), false, true, false)))))))))))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), bool(bvec4(! (_GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, true, true))))))), false, true, false)))))))))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(false))), ! (! (_GLF_IDENTITY(! (bool(bool(false))), (_GLF_IDENTITY(! (bool(bool(false))), ! (_GLF_IDENTITY(! (! (bool(bool(false)))), true && (! (! (bool(bool(false))))))))) || false)))), bool(bvec4(! (bool(bool(false))), false, true, false)))))))))))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), bool(bvec4(! (bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), false || (bool(false)))), ! (! (! (bool(false))))))))), false, true, false))))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), bool(bvec4(! (bool(bool(false))), false, true, false)))))))))))))), ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), bool(bvec4(! (bool(bool(false))), false, true, false))))))))))))))) && true), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), bool(bvec4(! (bool(bool(false))), false, true, false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), bool(bvec4(! (bool(bool(false))), false, true, false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false)))))), bool(bvec4(! (bool(bool(false))), false, true, false))))))) && true)))))), false || ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), bool(bvec4(! (bool(bool(false))), false, true, false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), bool(bvec4(! (bool(bool(false))), false, true, false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false)))))), bool(bvec4(! (bool(bool(false))), false, true, false))))))) && true)))))))))))))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(false))), (! (bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), false || (bool(false)))))))) || false), bool(bvec4(! (bool(bool(false))), false, true, false)))))))))))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(false))), false || (! (bool(bool(false))))), bool(bvec4(! (bool(bool(false))), false, true, false)))))))))))))))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), bool(bvec4(! (bool(bool(false))), false, true, false)))))))))))))), ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), bool(bvec4(! (bool(bool(false))), false, true, false))))))))))))))) && true), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), bool(bvec4(! (bool(bool(false))), false, true, false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), bool(bvec4(! (bool(bool(false))), false, true, false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false)))))), bool(bvec4(! (bool(bool(false))), false, true, false))))))) && true)))))), false || ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), bool(bvec4(! (bool(bool(false))), false, true, false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), bool(bvec4(! (bool(bool(false))), false, true, false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false)))))), bool(bvec4(! (bool(bool(false))), false, true, false))))))) && true)))))))))))))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(false))), (! (bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), false || (bool(false)))))))) || false), bool(bvec4(! (bool(bool(false))), false, true, false)))))))))))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(false))), false || (! (bool(bool(false))))), bool(bvec4(! (bool(bool(false))), false, true, false)))))))))))))))))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), bool(bvec4(! (bool(bool(false))), false, true, false)))))))))))))), ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), bool(bvec4(! (bool(bool(false))), false, true, false))))))))))))))) && true), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), bool(bvec4(! (bool(bool(false))), false, true, false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), bool(bvec4(! (bool(bool(false))), false, true, false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false)))))), bool(bvec4(! (bool(bool(false))), false, true, false))))))) && true)))))), false || ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), bool(bvec4(! (bool(bool(false))), false, true, false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), bool(bvec4(! (bool(bool(false))), false, true, false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false)))))), bool(bvec4(! (bool(bool(false))), false, true, false))))))) && true)))))))))))))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(false))), (! (bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), false || (bool(false)))))))) || false), bool(bvec4(! (bool(bool(false))), false, true, false)))))))))))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(false))), false || (! (bool(bool(false))))), bool(bvec4(! (bool(bool(false))), false, true, false)))))))))))))))))) && true))))))) || false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : vec2(injectionSwitch))))), mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) / (0 | 1))], float(_GLF_IDENTITY(mat3x2((injectionSwitch)[1], 1.0, 0.0, 1.0, 0.0, 0.0), mat3x2(mat3(mat3x2((injectionSwitch)[1], 1.0, 0.0, 1.0, 0.0, 0.0))))))), vec2(_GLF_FUZZED(-918.262), _GLF_FUZZED(-4.2)), bvec2(false, false))).x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.2) : injectionSwitch.x))) / 1.0, max((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.2) : injectionSwitch.x))) / 1.0, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.2) : injectionSwitch.x))) / 1.0))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.2) : injectionSwitch.x))) / 1.0) > injectionSwitch.y))) && true)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(false)))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), clamp(max(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))), max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0))) + vec2(0.0, 0.0)).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x < injectionSwitch.y)))), true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), true && (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), true && (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0))).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), false, true))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-321.744)), bvec2(true, false))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2.4)), bool(false))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2.4)), bool(false))) > injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0), 1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), min(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch)))), injectionSwitch, injectionSwitch)).x) + 0.0)) + 0.0))), (false ? _GLF_FUZZED(faceforward(761.986, 702.860, 1.2)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0)))))) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x), float(_GLF_FUZZED(8690.9937)), bool(false)))) - 0.0))) : _GLF_FUZZED(_GLF_IDENTITY(-7.8, clamp(-7.8, -7.8, -7.8))))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false))))), (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false || (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         barrier();
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bool(false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((false || (_GLF_IDENTITY(false, bool(bool(false))))), ! (! ((false || (_GLF_IDENTITY(false, bool(bool(false)))))))), false || (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(false, bool(bool(false))))), (! (false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) && true)))))) || false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bool(false)))), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(false, bool(bool(false))))), false || (! (false || (_GLF_IDENTITY(false, bool(bool(false)))))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bool(false)))), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(false, bool(bool(false))))), false || (! (false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ! (! ((_GLF_IDENTITY(false, bool(bool(false))))))))))))), bool(bool(! (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bool(false)))), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(false, bool(bool(false))))), false || (! _GLF_IDENTITY((false || (_GLF_IDENTITY(false, bool(bool(false))))), bool(bvec4((false || (_GLF_IDENTITY(false, bool(bool(false))))), true, false, true)))))))))))))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) ? _GLF_FUZZED(smoothstep(1.7, -6.7, 0.7)) : _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0)), min(float(mat3x2(1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), float(mat3x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0)))))), mix(float((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) ? _GLF_FUZZED(smoothstep(1.7, -6.7, 0.7)) : _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0)), min(float(mat3x2(1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), float(mat3x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0))))))), float(_GLF_FUZZED(70.00)), bool(false)))) * (injectionSwitch.x)) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), _GLF_IDENTITY(true, false || (true)) && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))))))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_IDENTITY(! (! (bool(bvec4(false, true, false, true)))), (! (! (bool(bvec4(false, true, false, true))))) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false)), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) + 0.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(false, (false) || false))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false)))), (bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))) || false))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false)))))), (bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))) || false))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false)))))), (bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))) || false)))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false)))))), (bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))) || false)))))), true)))))))), (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false)))), (bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))) || false))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false)))))), (bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))) || false))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false)))))), (bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))) || false)))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false)))))), (bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))) || false)))))), true)))))))), (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false)))), (bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))) || false))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false || (false), true && (false || (false)))))), (bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))) || false)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false || (false), true && (false || (false)))))), (bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))) || false)))), bvec3(bvec4(bvec3(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false || (false), true && (false || (false)))))), (bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))) || false)))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false || (false), true && (false || (false)))))), (bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))) || false)))), bvec3(bvec4(bvec3(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false || (false), true && (false || (false)))))), (bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))) || false)))), true)))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false)))))), _GLF_IDENTITY((bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))) || false, bool(bvec4((bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false)))))), (bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))) || false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false)))))), (bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))) || false)), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false)))))), (bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true)))))))), (injectionSwitch.x > injectionSwitch.y))))))) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, (true ? (injectionSwitch.y) * 1.0 : _GLF_FUZZED(1888.6648))))), float(float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))), float(_GLF_FUZZED((-927.587 / -1.5))), bool(false))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, (true ? (injectionSwitch.y) * 1.0 : _GLF_FUZZED(1888.6648))))), float(_GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), min(float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), float(_GLF_FUZZED((-927.587 / -1.5))), bool(false)))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (! (bool(bvec4(false, false, true, false))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size) - uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)))) >> 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) >> _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), _GLF_IDENTITY(0u, ~ (~ (0u)))), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), 0u ^ ((_GLF_IDENTITY(0u, min(0u, 0u))))), ((_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) + 0u))), 0u)))) - 0u), _GLF_IDENTITY(0u, (0u) | (0u)))) * uvec2(1u, 1u))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), 0u), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), 0u)) * uvec2(1u, 1u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY(((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u, ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u, ~ (~ (((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u))))))), 0u), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), 0u)) * uvec2(1u, 1u)))))) | 0u, max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), _GLF_IDENTITY(0u, ~ (~ (0u)))), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), 0u ^ ((_GLF_IDENTITY(0u, min(0u, 0u))))), ((_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) + 0u))), 0u)))) - 0u), _GLF_IDENTITY(0u, (0u) | (0u)))) * uvec2(1u, 1u))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), 0u), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), 0u)) * uvec2(1u, 1u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY(((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u, ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u, ~ (~ (((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u))))))), 0u), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), 0u)) * uvec2(1u, 1u)))))) | 0u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), _GLF_IDENTITY(0u, ~ (~ (0u)))), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), 0u ^ ((_GLF_IDENTITY(0u, min(0u, 0u))))), ((_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) + 0u))), 0u)))) - 0u), _GLF_IDENTITY(0u, (0u) | (0u)))) * uvec2(1u, 1u))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), 0u), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), 0u)) * uvec2(1u, 1u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY(((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u, ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u, ~ (~ (((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u))))))), 0u), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), 0u)) * uvec2(1u, 1u)))))) | 0u, 1u, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), _GLF_IDENTITY(0u, ~ (~ (0u)))), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), 0u ^ ((_GLF_IDENTITY(0u, min(0u, 0u))))), ((_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) + 0u))), 0u)))) - 0u), _GLF_IDENTITY(0u, (0u) | (0u)))) * uvec2(1u, 1u))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), 0u), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), 0u)) * uvec2(1u, 1u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY(((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u, ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u, ~ (~ (((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u))))))), 0u), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), 0u)) * uvec2(1u, 1u)))))) | 0u))))), (true ? (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) >> _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), _GLF_IDENTITY(0u, ~ (~ (0u)))), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), 0u ^ ((_GLF_IDENTITY(0u, min(0u, 0u))))), ((_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) + 0u))), 0u)))) - 0u), _GLF_IDENTITY(0u, (0u) | (0u)))) * uvec2(1u, 1u))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), 0u), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), 0u)) * uvec2(1u, 1u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY(((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u, ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u, ~ (~ (((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u))))))), 0u), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), 0u)) * uvec2(1u, 1u)))))) | 0u, max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), _GLF_IDENTITY(0u, ~ (~ (0u)))), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), 0u ^ ((_GLF_IDENTITY(0u, min(0u, 0u))))), ((_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) + 0u))), 0u)))) - 0u), _GLF_IDENTITY(0u, (0u) | (0u)))) * uvec2(1u, 1u))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), 0u), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), 0u)) * uvec2(1u, 1u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY(((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u, ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u, ~ (~ (((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u))))))), 0u), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), 0u)) * uvec2(1u, 1u)))))) | 0u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), _GLF_IDENTITY(0u, ~ (~ (0u)))), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), 0u ^ ((_GLF_IDENTITY(0u, min(0u, 0u))))), ((_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) + 0u))), 0u)))) - 0u), _GLF_IDENTITY(0u, (0u) | (0u)))) * uvec2(1u, 1u))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), 0u), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), 0u)) * uvec2(1u, 1u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY(((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u, ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u, ~ (~ (((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u))))))), 0u), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), 0u)) * uvec2(1u, 1u)))))) | 0u, 1u, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), _GLF_IDENTITY(0u, ~ (~ (0u)))), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), 0u ^ ((_GLF_IDENTITY(0u, min(0u, 0u))))), ((_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) + 0u))), 0u)))) - 0u), _GLF_IDENTITY(0u, (0u) | (0u)))) * uvec2(1u, 1u))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), 0u), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), 0u)) * uvec2(1u, 1u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY(((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u, ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u, ~ (~ (((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u))))))), 0u), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), 0u)) * uvec2(1u, 1u)))))) | 0u))))) : _GLF_FUZZED(workgroup_base))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), _GLF_IDENTITY(0u, ~ (~ (0u)))), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), 0u ^ ((_GLF_IDENTITY(0u, min(0u, 0u))))), ((_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) + 0u))), 0u)))) - 0u), _GLF_IDENTITY(0u, (0u) | (0u)))) * uvec2(1u, 1u))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), 0u), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), 0u)) * uvec2(1u, 1u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY(((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u, ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u, ~ (~ (((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u))))))), 0u), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), 0u)) * uvec2(1u, 1u)))))) | 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), _GLF_IDENTITY(0u, ~ (~ (0u)))), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), 0u ^ ((_GLF_IDENTITY(0u, min(0u, 0u))))), ((_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) + 0u))), 0u)))) - 0u), _GLF_IDENTITY(0u, (0u) | (0u)))) * uvec2(1u, 1u))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), 0u), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), 0u)) * uvec2(1u, 1u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY(((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u, ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u, ~ (~ (((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u))))))), 0u), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), 0u)) * uvec2(1u, 1u)))))) | 0u), (_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), _GLF_IDENTITY(0u, ~ (~ (0u)))), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), 0u ^ ((_GLF_IDENTITY(0u, min(0u, 0u))))), ((_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) + 0u))), 0u)))) - 0u), _GLF_IDENTITY(0u, (0u) | (0u)))) * uvec2(1u, 1u))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), 0u), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), 0u)) * uvec2(1u, 1u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY(((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u, ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u, ~ (~ (((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u))))))), 0u), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), 0u)) * uvec2(1u, 1u)))))) | 0u)) | (_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), _GLF_IDENTITY(0u, ~ (~ (0u)))), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), 0u ^ ((_GLF_IDENTITY(0u, min(0u, 0u))))), ((_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) + 0u))), 0u)))) - 0u), _GLF_IDENTITY(0u, (0u) | (0u)))) * uvec2(1u, 1u))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), 0u), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), 0u)) * uvec2(1u, 1u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY(((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u, ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u, ~ (~ (((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u))))))), 0u), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) - 0u), 0u)) * uvec2(1u, 1u)))))) | 0u))))))))))) >> 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, _GLF_IDENTITY(dot(vec4(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), abs(1.0), length(vec3(0.0, 0.0, 0.0)), 1.0)), dot(vec4(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), abs(1.0), length(vec3(0.0, 0.0, 0.0)), 1.0))), 0.0))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true)) && true)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) >> (0u ^ 0u)) + 1) % subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(subgroup_size))), max((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(ivec4(1, 0, 1, 0))), 1)), (1) >> 0)) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), ~ (~ (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size, max((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))))))))))))), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))) * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), subgroup_id * subgroup_size))) >> 0u)), _GLF_IDENTITY(min(max(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))) * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> 0u)), _GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))) * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> 0u)), (max(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)), (false ? _GLF_FUZZED(28495u) : min(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))))) * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> 0u))) << 0u)), ~ (~ (min(max(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))) * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))))))) * subgroup_size))) >> 0u)), _GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, 0u ^ _GLF_IDENTITY((subgroup_id), min(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) >> 0u), (subgroup_id)))), _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))) * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), subgroup_id * subgroup_size))) >> 0u)), (max(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)), (min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u ^ (subgroup_id), (true ? 0u ^ (subgroup_id) : _GLF_FUZZED(virtual_gid)))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u ^ (subgroup_id), (true ? 0u ^ (subgroup_id) : _GLF_FUZZED(virtual_gid)))), ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u ^ (subgroup_id), (true ? 0u ^ (subgroup_id) : _GLF_FUZZED(virtual_gid))))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)) * 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)) * 1u))))))) / (1u & 1u))) * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> 0u, uint(uvec4((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> 0u, 0u, 0u, 1u)))))) << 0u))))))) + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) % subgroup_size) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1, ~ (~ (subgroup_local_id + 1)))) % subgroup_size)), max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(subgroup_local_id))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : subgroup_size)) : _GLF_FUZZED((workgroup_id)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : subgroup_size)) : _GLF_FUZZED((workgroup_id)))), ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))))) ? _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : subgroup_size)) : _GLF_FUZZED((workgroup_id))))))), 0u + (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : subgroup_size)) : _GLF_FUZZED((workgroup_id)))), ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))))) ? _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : subgroup_size)) : _GLF_FUZZED((workgroup_id))))))), clamp(false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : subgroup_size)) : _GLF_FUZZED((workgroup_id)))), ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))))) ? _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : subgroup_size)) : _GLF_FUZZED((workgroup_id))))))), false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : subgroup_size)) : _GLF_FUZZED((workgroup_id)))), ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))))) ? _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : subgroup_size)) : _GLF_FUZZED((workgroup_id))))))), false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : subgroup_size)) : _GLF_FUZZED((workgroup_id)))), ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))))) ? _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : subgroup_size)) : _GLF_FUZZED((workgroup_id))))))))))))))))) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) | (0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(4, clamp(4, 4, 4)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).x < injectionSwitch.y)) ? buf[virtual_gid] : _GLF_FUZZED(next_virtual_gid))), 4, _GLF_IDENTITY(64, (64) + 0), 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(_GLF_IDENTITY(bool(subgroup_local_id + 1 < subgroup_size), true && (bool(subgroup_local_id + 1 < subgroup_size))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec4((false) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))) || (bool(bvec4((false) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(_GLF_IDENTITY((false) || false, ! (! ((false) || false))), _GLF_IDENTITY(bool(bvec4((false) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), false || (bool(bvec4((false) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     barrier();
    }
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, max(_GLF_IDENTITY(read, uint(uint(read))), _GLF_IDENTITY(_GLF_IDENTITY(read, (read) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) - 0u)), min(read, read)))), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5.9, -9557.7040)) : injectionSwitch)).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(vec2(-5.9, -9557.7040)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y)))) && true))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false), (injectionSwitch.x > injectionSwitch.y)), false, false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1])).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)))), vec2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0)))[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(true, true && (true)) ? injectionSwitch[1] : _GLF_FUZZED(-6.0))))).x, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-622.258)), bool(false))))).x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(1.7)), float(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(9.3) : injectionSwitch[0]))), bool(true))), injectionSwitch[1])).x)) > injectionSwitch.y) && true))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1])).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)))), vec2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0)))[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(true, true && (true)) ? injectionSwitch[1] : _GLF_FUZZED(-6.0))))).x, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-622.258)), bool(false))))).x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(1.7)), float(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(9.3) : injectionSwitch[0]))), bool(true))), injectionSwitch[1])).x)) > injectionSwitch.y) && true))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1])).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)))), vec2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(0.0, 0.0) + (max(injectionSwitch, injectionSwitch))), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))), 1.0)))[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bool(_GLF_IDENTITY(true, true && (true))))) ? injectionSwitch[1] : _GLF_FUZZED(-6.0))))).x, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-622.258)), bool(false))))).x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(1.7)), float(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) / 1), 0))], (false ? _GLF_FUZZED(9.3) : injectionSwitch[0]))), bool(true))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1])).x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) + 0.0)) && true)))) && true)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), (bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), bvec2(bvec2(bvec2(false, true)))))))) || false)), bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))), bool(bvec2((bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))), true))), false, true)), (bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))), bool(bvec2((bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))), true))), false, true))) && true)) || false), (bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))) || false)), true, false))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(13.52, -9.7)) : injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(13.52, -9.7)) : injectionSwitch)).x) / 1.0), mix(float(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(13.52, -9.7)) : injectionSwitch)).x), float(_GLF_FUZZED(-6.8)), bool(false))), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(712.054)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), (_GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(712.054)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))) || false)))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), true)))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), true)))))), true, true))))))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (float(injectionSwitch.y)))), (float(_GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (float(injectionSwitch.y))))) + 0.0))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 1.0, 1.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, exp(0.0), 1.0, 0.0, 1.0, 0.0), (true ? mat4x3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 1.0, 1.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, exp(0.0), 1.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat4x3(-8.9, 6.4, 5.8, 84.23, 216.174, -435.736, 108.479, -1.7, -3748.4011, 5.1, -228.444, -32.42))))), (false ? _GLF_FUZZED(-1127.3124) : float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 1.0, 1.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, exp(0.0), 1.0, 0.0, 1.0, 0.0), (true ? mat4x3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 1.0, 1.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, exp(0.0), 1.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat4x3(-8.9, 6.4, 5.8, 84.23, 216.174, -435.736, 108.479, -1.7, -3748.4011, 5.1, -228.444, -32.42)))))))), sqrt(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0))), 0.0, 1.0), (vec3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0))), 0.0, 1.0)) - _GLF_IDENTITY(cross(vec3(854.429, -29.03, _GLF_IDENTITY(-569.320, (-569.320) * 1.0)), vec3(854.429, -29.03, -569.320)), _GLF_IDENTITY(min(cross(vec3(854.429, -29.03, -569.320), vec3(854.429, -29.03, -569.320)), cross(vec3(854.429, -29.03, -569.320), vec3(854.429, -29.03, -569.320))), max(min(cross(vec3(854.429, -29.03, -569.320), vec3(854.429, -29.03, -569.320)), cross(vec3(854.429, -29.03, -569.320), vec3(854.429, -29.03, -569.320))), min(cross(vec3(854.429, -29.03, -569.320), vec3(854.429, -29.03, -569.320)), cross(vec3(854.429, -29.03, -569.320), vec3(854.429, -29.03, -569.320)))))))), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, (1.0) - 0.0))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(174.429)), float(0.0), bool(true)))), vec3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), clamp(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(919.497)))), vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + _GLF_ZERO(0.0, injectionSwitch.x))), (vec3(0.0, 1.0, 0.0)) - vec3(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(mix(sinh(-586.301), -40.60, false)) : _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))))), 0.0)))) : _GLF_FUZZED(vec3(7830.0384, -17.72, -202.844)))))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0), mat2x3(mat3(mat2x3(0.0, abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, 0.0, 1.0, 1.0)))))), 1.0)), (dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), vec3(1.0, 1.0, 1.0) * (vec3(0.0, 1.0, 0.0))), vec3(mat2x3(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0) * (vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY((vec3(1.0, 1.0, 1.0) * (vec3(0.0, 1.0, 0.0))) * mat3(1.0), vec3(mat2(_GLF_IDENTITY((vec3(1.0, 1.0, 1.0) * (vec3(0.0, 1.0, 0.0))) * mat3(1.0), clamp((vec3(1.0, 1.0, 1.0) * (vec3(0.0, 1.0, 0.0))) * mat3(1.0), (vec3(1.0, 1.0, 1.0) * (vec3(0.0, 1.0, 0.0))) * mat3(1.0), (vec3(1.0, 1.0, 1.0) * (vec3(0.0, 1.0, 0.0))) * mat3(1.0))), 0.0))))), 1.0, 1.0, 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0))) / 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(tan(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0, 0.0, 1.0)), dot(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0), _GLF_IDENTITY(vec4(tan(0.0), 1.0, 0.0, 1.0), vec4(mat3x4(_GLF_IDENTITY(vec4(tan(0.0), 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(vec4(0.5, 3094.4012, -9.7, 5915.8539)) : vec4(tan(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))))), length(0.0), 1.0, _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 1.0)), abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0), mat4(1.0) * (mat3x4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 1.0)), abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0)))))), (_GLF_IDENTITY(min(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 1.0)), abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0), mat4(1.0) * (mat3x4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 1.0)), abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0)))))), mix(float(_GLF_FUZZED(vec4(818.235, 35.31, -0.5, 6.3).z)), float(_GLF_IDENTITY(min(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 1.0)), abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0), mat4(1.0) * (mat3x4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 1.0)), abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0)))))), float(mat4x2(min(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 1.0)), abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0), mat4(1.0) * (mat3x4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 1.0)), abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), bool(true)))) + 0.0))), float(mat3(sin(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.4) : 1.0)), 0.0, log(1.0), 1.0, 0.0, 1.0, 1.0))), length(0.0), 1.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}
