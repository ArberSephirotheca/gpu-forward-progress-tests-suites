#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 bvec4 _f0;
 mat4x2 _f1;
 float _f2;
 vec4 _f3;
 bool _f4;
 mat2x3 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
} ;

struct _GLF_struct_2 {
 mat4x3 _f0;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
 bvec2 _f1;
 mat4x2 _f2;
 bool _f3;
 mat3x4 _f4;
 mat4 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_0 {
 mat2x3 _f0;
 ivec4 _f1;
 uvec4 _f2;
 ivec3 _f3;
 vec4 _f4;
 mat4x2 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 mat3 _f2;
 vec4 _f3;
 mat2x3 _f4;
 _GLF_struct_2 _f5;
} ;

struct _GLF_struct_6 {
 uint workgroup_id;
 mat4x2 _f0;
 bool _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_5 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, max(0, 0))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          break;
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) || false)))))) || false)))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false) || (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false)))), true && (! (_GLF_IDENTITY((false), true && ((false))))))))))), false || _GLF_IDENTITY((false), ((false)) && true))))
            barrier();
           if(_GLF_DEAD(false))
            continue;
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y, injectionSwitch.y))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x) | (gl_WorkGroupID.x), ~ (~ (_GLF_IDENTITY((gl_WorkGroupID.x) | (gl_WorkGroupID.x), clamp((gl_WorkGroupID.x) | (gl_WorkGroupID.x), (gl_WorkGroupID.x) | (gl_WorkGroupID.x), (gl_WorkGroupID.x) | (gl_WorkGroupID.x))))))), gl_WorkGroupID.x)), mat4x2(1.0), true, _GLF_struct_3(_GLF_struct_0(mat2x3(1.0), ivec4(1), uvec4(1u), ivec3(1), vec4(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, length(vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, sin(0.0)))), 0.0, 0.0)), determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-175.439)))) * 1.0), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), mat3(1.0) * (vec3(0.0, 0.0, 1.0))), vec3(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), float(mat2(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0, tan(0.0), 1.0)))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), 1.0, 1.0, 1.0, sin(0.0), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), max(float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-175.439)))) * _GLF_IDENTITY(1.0, _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(1.0, min(1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) * mat3(1.0)), vec3(1.0, 1.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), min((0.0), _GLF_IDENTITY((0.0), clamp((0.0), (0.0), (0.0))))) / 1.0), 0.0)), 1.0), vec3(1.0, 1.0, 0.0)))) / 1.0, mix(float(_GLF_FUZZED(853.190)), float((_GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)) + (1.0))), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 1.0), vec3(1.0, 1.0, 0.0)))) / 1.0), bool(true)))), (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) * mat3(1.0)), vec3(1.0, 1.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), min((0.0), _GLF_IDENTITY((0.0), clamp((0.0), (0.0), (0.0))))) / 1.0), 0.0)), 1.0), vec3(1.0, 1.0, 0.0)))) / 1.0, mix(float(_GLF_FUZZED(853.190)), float((_GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, length(vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1525.7802)), float(0.0), bool(true))))))), 0.0, 0.0, 0.0)) + (1.0))), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 1.0), vec3(1.0, 1.0, 0.0)))) / 1.0), bool(true))))) * determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY((-1861.7679 - -9118.0316), float(_GLF_IDENTITY(mat4x2((-1861.7679 - -9118.0316), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2((-1861.7679 - -9118.0316), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))), float(1.0), bool(_GLF_IDENTITY(true, ! (! (true)))))), 1.0, 1.0, sin(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-257.546)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), mix(float(_GLF_FUZZED(-8.7)), float(0.0), bool(true))), float(_GLF_IDENTITY(mat3(0.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0), mat3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(0.0, tan(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 0.0), transpose(transpose(mat2(0.0, 1.0, 1.0, 0.0)))))), 0.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-676.546) : 1.0)), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8838.6368)), bool(false))))), float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-175.439)))) * _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 0.0)), mix(float(float(mat3(1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 0.0))), float(_GLF_FUZZED(7.0)), bool(false))))), mix(float(_GLF_FUZZED(6.1)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(-175.439), (true ? _GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(-175.439), clamp(true ? 0.0 : _GLF_FUZZED(-175.439), _GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(-175.439), min(_GLF_IDENTITY(true, false || (true)) ? 0.0 : _GLF_FUZZED(-175.439), true ? 0.0 : _GLF_FUZZED(-175.439))), _GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(-175.439), mix(_GLF_IDENTITY(float(true ? 0.0 : _GLF_FUZZED(-175.439)), max(float(true ? 0.0 : _GLF_FUZZED(-175.439)), float(true ? 0.0 : _GLF_FUZZED(-175.439)))), _GLF_IDENTITY(float(_GLF_FUZZED(-283.146)), mix(float(_GLF_FUZZED((true ? 6.1 : -7.6))), float(float(_GLF_FUZZED(-283.146))), bool(true))), bool(false))))) : _GLF_FUZZED(distance(vec2(-36.33, 20.48), injectionSwitch))))))), (true ? (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(-175.439), (true ? _GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(-175.439), clamp(true ? 0.0 : _GLF_FUZZED(-175.439), _GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(-175.439), min(_GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(-175.439), min(true ? 0.0 : _GLF_FUZZED(-175.439), true ? 0.0 : _GLF_FUZZED(-175.439))), true ? 0.0 : _GLF_FUZZED(-175.439))), _GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(-175.439), mix(float(true ? 0.0 : _GLF_FUZZED(-175.439)), float(_GLF_FUZZED(-283.146)), bool(false))))) : _GLF_FUZZED(distance(_GLF_IDENTITY(vec2(-36.33, 20.48), max(vec2(-36.33, 20.48), vec2(-36.33, 20.48))), injectionSwitch))))))) : _GLF_FUZZED(9.9))) * 1.0), (false ? _GLF_FUZZED(-9627.8034) : _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(-175.439, (true ? -175.439 : _GLF_FUZZED(-312.212)))), clamp(_GLF_IDENTITY(true, bool(bvec3(true, false, true))) ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(-175.439, (true ? -175.439 : _GLF_FUZZED(-312.212)))), true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(-175.439, (true ? -175.439 : _GLF_FUZZED(-312.212)))), true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(-175.439, (true ? -175.439 : _GLF_FUZZED(-312.212)))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(-175.439, (true ? -175.439 : _GLF_FUZZED(-312.212)))), clamp(true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(-175.439, (true ? -175.439 : _GLF_FUZZED(-312.212)))), true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(-175.439, (true ? -175.439 : _GLF_FUZZED(-312.212)))), true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(-175.439, (true ? -175.439 : _GLF_FUZZED(-312.212)))))))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(-175.439, (true ? -175.439 : _GLF_FUZZED(-312.212)))), clamp(true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(-175.439, (true ? -175.439 : _GLF_FUZZED(-312.212)))), true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(-175.439, (true ? -175.439 : _GLF_FUZZED(-312.212)))), true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(-175.439, (true ? -175.439 : _GLF_FUZZED(-312.212)))))))), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(-175.439, (true ? -175.439 : _GLF_FUZZED(-312.212)))), clamp(true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(-175.439, (true ? -175.439 : _GLF_FUZZED(-312.212)))), true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(-175.439, (true ? -175.439 : _GLF_FUZZED(-312.212)))), true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(-175.439, (true ? -175.439 : _GLF_FUZZED(-312.212)))))))), 0.0), vec2(mat2x3(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(-175.439, (true ? -175.439 : _GLF_FUZZED(-312.212)))), clamp(true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(-175.439, (true ? -175.439 : _GLF_FUZZED(-312.212)))), true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(-175.439, (true ? -175.439 : _GLF_FUZZED(-312.212)))), true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(-175.439, (true ? -175.439 : _GLF_FUZZED(-312.212)))))))), 0.0), 1.0, 0.0, 0.0, 1.0))))))) : _GLF_FUZZED(564.254)))) * 1.0)))), bool(_GLF_IDENTITY(true, _GLF_IDENTITY((true), (_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), ((true)) && true)))) || false) && true)))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), min(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-91.45)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0))), 0.0, 1.0))), injectionSwitch.x), 1.0, 1.0, 1.0, sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0))))), 0.0, tan(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(sin(0.0), float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), mix(float(sin(0.0)), float(_GLF_FUZZED(-64.58)), bool(false))), (_GLF_IDENTITY(sin(0.0), mix(float(sin(0.0)), float(_GLF_FUZZED(-64.58)), bool(false)))) / determinant(mat2(1.0, 0.0, 1.0, 1.0))), exp(_GLF_IDENTITY(0.0, (0.0) - length(vec4(0.0, 0.0, 0.0, 0.0)))), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0), vec3(1.0, tan(0.0), 0.0)), dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0), vec3(1.0, tan(0.0), 0.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, round(length(normalize(1.0))), 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0, sin(0.0), 0.0)), sin(0.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), mat4x2(1.0), uvec4(_GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), max(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(21.21)))) * 1.0), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))))))), _GLF_struct_1(mat3x2(1.0), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(true), true, true)), false, true)))), false, false)))))), true, true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), false, false)))))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), false, false))), bvec2(bvec4(bvec2(true), false, false)))))), true, true))))), true)))), mat4x2(1.0), true, mat3x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2428.6179)), float(1.0), bool(true))), 0.0, 1.0), clamp(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2428.6179)), float(1.0), bool(true))), 0.0, 1.0), vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2428.6179)), float(1.0), bool(true))), 0.0, 1.0), vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2428.6179)), float(1.0), bool(true))), 0.0, 1.0)))))), max(_GLF_IDENTITY((_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2428.6179)), float(1.0), bool(true))), 0.0, 1.0), clamp(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2428.6179)), float(1.0), bool(true))), 0.0, 1.0), vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2428.6179)), float(1.0), bool(true))), 0.0, 1.0), vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2428.6179)), float(1.0), bool(true))), 0.0, 1.0)))))), mix(float((_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2428.6179)), float(1.0), bool(true))), 0.0, 1.0), clamp(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2428.6179)), float(1.0), bool(true))), 0.0, 1.0), vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2428.6179)), float(1.0), bool(true))), 0.0, 1.0), vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2428.6179)), float(1.0), bool(true))), 0.0, 1.0))))))), float(_GLF_FUZZED(-0.8)), bool(false))), (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2428.6179)), float(1.0), bool(true))), 0.0, 1.0), clamp(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2428.6179)), float(1.0), bool(true))), 0.0, 1.0), vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2428.6179)), float(1.0), bool(true))), 0.0, 1.0), vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2428.6179)), float(1.0), bool(true))), 0.0, 1.0)))))))) / 1.0)), (true ? _GLF_IDENTITY(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), (true ? clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) : _GLF_FUZZED(5233.3837))) : _GLF_FUZZED(-4761.3258))))), mat4(1.0), mat2(1.0)), mat3(1.0), vec4(1.0), mat2x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(1.0, length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(mat2(vec4(0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(mat2(vec4(0.0, 0.0, 0.0, 0.0)), transpose(transpose(mat2(vec4(0.0, 0.0, 0.0, 0.0)))))) * mat2(1.0)), (mat2(vec4(0.0, 0.0, 0.0, 0.0))) / mat2(1.0, 1.0, 1.0, 1.0))), vec4(mat2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(mat2(vec4(0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(mat2(vec4(0.0, 0.0, 0.0, 0.0)), transpose(transpose(mat2(vec4(0.0, 0.0, 0.0, 0.0)))))) * mat2(1.0)), (mat2(vec4(0.0, 0.0, 0.0, 0.0))) / mat2(1.0, 1.0, 1.0, 1.0))), (true ? vec4(_GLF_IDENTITY(_GLF_IDENTITY(mat2(vec4(0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(mat2(vec4(0.0, 0.0, 0.0, 0.0)), transpose(transpose(mat2(vec4(0.0, 0.0, 0.0, 0.0)))))) * mat2(1.0)), (mat2(vec4(0.0, 0.0, 0.0, 0.0))) / mat2(1.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED((vec4(381.901, -130.158, 9964.6458, 9.2)))))))))), cos(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3.3)), bool(false))), (1.0) + 0.0), 1.0, 0.0))))), (_GLF_IDENTITY(float(vec3(1.0, _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(9.1)), float(length(vec4(0.0, 0.0, 0.0, 0.0))), bool(true)))), float(_GLF_FUZZED(-46.50)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), cos(determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, log(1.0), sin(0.0), 1.0)), (float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, log(1.0), sin(0.0), 1.0))) + 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(2.5))), 0.0))))), clamp(_GLF_IDENTITY(float(vec3(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), cos(determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, log(1.0), sin(0.0), 1.0)), (float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, log(1.0), sin(0.0), 1.0))) + 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0))))), clamp(float(vec3(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), cos(determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, log(1.0), sin(0.0), 1.0)), (float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, log(1.0), sin(0.0), 1.0))) + 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0))))), _GLF_IDENTITY(float(vec3(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), cos(determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, log(1.0), sin(0.0), 1.0)), (float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, log(1.0), sin(0.0), 1.0))) + 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0))))), mix(float(_GLF_IDENTITY(float(vec3(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), cos(determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, log(1.0), sin(0.0), 1.0)), (float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, log(1.0), sin(0.0), 1.0))) + 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0))))), clamp(float(vec3(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), cos(determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, log(1.0), sin(0.0), 1.0)), (float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, log(1.0), sin(0.0), 1.0))) + 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0))))), float(vec3(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), cos(determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, log(1.0), sin(0.0), 1.0)), (float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, log(1.0), sin(0.0), 1.0))) + 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0))))), float(vec3(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), cos(determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, log(1.0), sin(0.0), 1.0)), (float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, log(1.0), sin(0.0), 1.0))) + 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0)))))))), float(_GLF_FUZZED(706.494)), bool(false))), float(vec3(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), cos(determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, log(1.0), sin(0.0), 1.0)), (float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, log(1.0), sin(0.0), 1.0))) + 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0))))))), _GLF_IDENTITY(float(vec3(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), cos(determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, cos(0.0), 0.0, log(1.0), sin(0.0), 1.0)), (float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, log(1.0), sin(0.0), 1.0))) + 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (_GLF_IDENTITY(max(1.0, 1.0), clamp(max(1.0, 1.0), max(1.0, 1.0), _GLF_IDENTITY(max(1.0, 1.0), mix(float(max(1.0, 1.0)), float(_GLF_FUZZED(5559.4755)), bool(false)))))) - 0.0)), 1.0, 0.0))))), clamp(float(vec3(1.0, length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)))), cos(determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, log(1.0), sin(0.0), 1.0)), (float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, log(1.0), sin(0.0), 1.0))) + 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0))))), float(vec3(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), cos(determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-74.80))), 0.0, 0.0, cos(0.0), 0.0, log(1.0), sin(0.0), 1.0)), (float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, log(1.0), sin(0.0), 1.0))) + 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0))))), float(vec3(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(cos(determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, log(1.0), sin(0.0), 1.0)), (float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, log(1.0), sin(0.0), 1.0))) + 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0))), 0.0 + (_GLF_IDENTITY(cos(determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, log(1.0), sin(0.0), 1.0)), (float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, log(1.0), sin(0.0), 1.0))) + 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0))), clamp(cos(determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, log(1.0), sin(0.0), 1.0)), (float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, log(1.0), sin(0.0), 1.0))) + 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0))), _GLF_IDENTITY(cos(determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, log(1.0), sin(0.0), 1.0)), (float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, log(1.0), sin(0.0), 1.0))) + 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0))), (true ? cos(determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, log(1.0), sin(0.0), 1.0)), (float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, log(1.0), sin(0.0), 1.0))) + 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0))) : _GLF_FUZZED(-14.52))), cos(determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, log(1.0), sin(0.0), 1.0)), (float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, log(1.0), sin(0.0), 1.0))) + 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0))))))))))), float(vec3(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), cos(determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, log(1.0), sin(0.0), 1.0)), (float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, log(1.0), sin(0.0), 1.0))) + 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0)))))))) / 1.0), (_GLF_IDENTITY(float(vec3(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), cos(determinant(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), (mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat3(1.0)))))), _GLF_IDENTITY((float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)), float(mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)), 1.0, 1.0, 1.0))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)))), length(vec4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0))), 0.0, 0.0)), cos(determinant(mat3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, tan(0.0), 0.0, 1.0, 0.0, 0.0)), max(float(mat3x2(0.0, tan(0.0), 0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(0.0, _GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(float(-89015))), bool(false))), 0.0, 1.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-67.36)), float(float(mat3x2(0.0, tan(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0, 0.0, 0.0))), bool(true))), max(_GLF_IDENTITY(float(mat3x2(0.0, _GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(float(-89015))), bool(false))), 0.0, 1.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-67.36)), float(float(mat3x2(0.0, tan(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0, 0.0, 0.0))), bool(true))), _GLF_IDENTITY(float(mat3x2(0.0, _GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(float(-89015))), bool(false))), 0.0, 1.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-67.36)), float(float(mat3x2(0.0, tan(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0, 0.0, 0.0))), bool(true)))))))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))), (false ? _GLF_FUZZED(-87.30) : (float(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), length(vec4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, 0.0)), cos(determinant(mat3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, _GLF_IDENTITY(tan(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), clamp(float(mat2x4(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat2x4(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), float(float(float(mat2x4(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), _GLF_IDENTITY(float(mat2x4(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), float(mat2x3(float(mat2x4(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))))))), max(_GLF_IDENTITY(tan(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), clamp(float(mat2x4(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat2x4(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), float(float(float(mat2x4(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), _GLF_IDENTITY(float(mat2x4(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), float(mat2x3(float(mat2x4(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))))))), (tan(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), clamp(float(mat2x4(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat2x4(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), float(float(float(mat2x4(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), _GLF_IDENTITY(float(mat2x4(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), float(mat2x3(float(mat2x4(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0)))))))) + length(vec3(0.0, 0.0, 0.0))), tan(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), clamp(float(mat2x4(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat2x4(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), float(float(float(mat2x4(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), _GLF_IDENTITY(float(mat2x4(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), float(mat2x3(float(mat2x4(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))))))))), 0.0, 1.0, 0.0, 0.0)), max(float(mat3x2(0.0, tan(_GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8.8)), float(0.0), bool(true))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, exp(0.0))))), _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), float(mat3x2(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 1.0)))), 1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, tan(0.0), sqrt(1.0), 0.0))), 1.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(0.0, tan(0.0), 0.0, 1.0, 0.0, 0.0)), 0.0 + (float(mat3x2(0.0, tan(0.0), 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED(-67.36)), float(float(mat3x2(0.0, tan(_GLF_IDENTITY(0.0, (0.0) / 1.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0)), min(_GLF_IDENTITY(max(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0)), float(mat2(max(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0)), 0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), max(_GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, (1.0) - 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0))))), 1.0, 0.0, 0.0))), bool(true)))))), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, sin(0.0), 0.0, cos(0.0))), sqrt(0.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), 1.0, 0.0)))))))) / _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 1.0)))) / 1.0))), _GLF_struct_2(mat4x3(1.0))), _GLF_struct_5(_GLF_struct_4(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true))))))), mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(499.718)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))), mix(float(_GLF_FUZZED(7.7)), _GLF_IDENTITY(float(1.0), clamp(_GLF_IDENTITY(float(1.0), (float(1.0)) * 1.0), float(1.0), float(1.0))), bool(true))), vec4(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, 0.0 + (1.0))))), _GLF_IDENTITY(true, (true) || false), mat2x3(1.0), bvec2(true))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            return;
          }
         else
          {
          }
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7449.6075) : injectionSwitch.x)) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bool(false))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bool(false))), false), _GLF_IDENTITY(false, ! (! (false))))), bvec3(bvec3(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bool(false))), false), _GLF_IDENTITY(false, ! (! (false)))))))))))) || false))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) || (injectionSwitch.x > injectionSwitch.y)) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bool(false))), false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bool(false))), false)))) || false)) || false))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bool(false))), false)))) || false))), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bool(false))), false)))) || false))), false, false))), false))))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), bool(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x < injectionSwitch.y) && true))), true, false))))))
            {
             if(_GLF_DEAD(false))
              break;
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              break;
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              barrier();
             return;
            }
           else
            {
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < (1 | 1), false || (_injected_loop_counter < (1 | 1)))); _injected_loop_counter ++)
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
          }
        }
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x3(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0)))))) - abs(vec2(0.0, 0.0))).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x3(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0)))))) - abs(vec2(0.0, 0.0))).y))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x3(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0)))))) - abs(vec2(0.0, 0.0))).y)))), ! (! (! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - sin(0.0)), 0.0)), clamp(0.0, 0.0, 0.0)), 1.0, 1.0), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0)))))) - abs(vec2(0.0, 0.0))).y))))))))))), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - abs(vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(vec4((injectionSwitch) - abs(vec2(0.0, 0.0)), 1.0, 0.0)), (vec2(vec4((injectionSwitch) - abs(vec2(0.0, 0.0)), 1.0, 0.0))) * vec2(1.0, 1.0)))).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - abs(vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(vec4((injectionSwitch) - abs(vec2(0.0, 0.0)), 1.0, 0.0)), (vec2(vec4((injectionSwitch) - abs(vec2(0.0, 0.0)), 1.0, 0.0))) * vec2(1.0, 1.0)))).y)))), _GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y)))))), (bool(bool(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y))))) || false)))), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(_GLF_IDENTITY(vec2(0.0, 0.0), (true ? _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) + vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))).y))) && true)))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + abs(0.0))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))), bvec2(bvec3(bvec2(false, true), true)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))) * _GLF_struct_replacement_6.workgroup_id;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), false || (_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bool(bvec3(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), true, false))))))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec3(7072.9278, 1400.0033, 9502.0977).t * _GLF_IDENTITY(vec2(-235.531, 1.2), clamp(vec2(-235.531, 1.2), _GLF_IDENTITY(vec2(-235.531, 1.2), mat2(1.0) * (vec2(-235.531, 1.2))), vec2(-235.531, 1.2))))))).x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.7)), float(injectionSwitch.y), bool(true)))), false, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) || (injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) || (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(false, true && (false)) || (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))))))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5.9)), bool(false)))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))), (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-6.1, _GLF_IDENTITY(36.82, 1.0 * (36.82)))), min(_GLF_FUZZED(vec2(-6.1, _GLF_IDENTITY(36.82, 1.0 * (36.82)))), _GLF_FUZZED(vec2(-6.1, _GLF_IDENTITY(36.82, 1.0 * (36.82)))))) : injectionSwitch)).x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-6.1, 36.82)) : injectionSwitch, min(false ? _GLF_FUZZED(vec2(-6.1, 36.82)) : injectionSwitch, false ? _GLF_FUZZED(vec2(-6.1, 36.82)) : injectionSwitch)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, exp(0.0)))) : _GLF_FUZZED(9415.5460))), (injectionSwitch.y) / 1.0)), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, (false) || false))), false || (_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), false, _GLF_IDENTITY(false, (false) || false))), bool(bvec2(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && true)))), true))))))) || false))) && true))))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(bvec4((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), false, false, true)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), false || (_GLF_IDENTITY((false), ((false)) || false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), (_GLF_IDENTITY((false), ((false)) || false)) && true), false, true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), (_GLF_IDENTITY((false), ((false)) || false)) && true), false, true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), (_GLF_IDENTITY((false), ((false)) || false)) && true), false, true))))) && true)))))) || false)))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), false))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(985.569) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) | 0u);
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u)), (uint(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u))) << 0u))) % subgroup_size), ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u)), (uint(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u))) << 0u))) % subgroup_size)), 0u ^ (~ (workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u)), (uint(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u))) << 0u))) % subgroup_size))))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.6) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6052.0367) : injectionSwitch.y))), float(_GLF_FUZZED(-41.89)), bool(false))))), true, true)), bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, true && (true)))), true && (bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8058.8963, 351.705)) : injectionSwitch)).x > injectionSwitch.y)), true, true))))))))))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), bool(bvec3(_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), bool(bool((true))))))), true, false))))))) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       barrier();
      }
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat3(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), vec2(vec4(vec2(mat3(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 1.0, 0.0)))) * vec2(1.0, 1.0))).x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   else
    {
    }
   return;
  }
 uint read = _GLF_IDENTITY(0, (false ? _GLF_FUZZED(55726) : _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, ~ (~ (0)))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))
  return;
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) % 2), uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2)))), 0u, 0u), max(uvec3(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2)))), 0u, 0u), uvec3(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2)))), 0u, 0u))))), (_GLF_IDENTITY(subgroup_local_id % 2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) % 2, min(subgroup_local_id % 2, subgroup_local_id % 2)))), 0u, 0u), max(uvec3(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2)))), 0u, 0u), uvec3(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2)))), 0u, 0u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u, (0u | 0u), 0u))), (subgroup_local_id % _GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(2, _GLF_IDENTITY((2) >> 0, ~ (_GLF_IDENTITY(~ ((2) >> 0), int(_GLF_IDENTITY(int(~ ((2) >> 0)), (int(~ ((2) >> 0))) >> 0))))))))))) == 0, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), ~ (~ (_GLF_IDENTITY((subgroup_local_id % 2), max((subgroup_local_id % 2), (subgroup_local_id % 2)))))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec4(0u, 0u, 0u, 0u))))) ^ ((subgroup_local_id % 2))), uint(uvec4((subgroup_local_id % 2), 0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(36977u) : 0u)) | 0u), 0u))), (subgroup_local_id % 2)), (max(_GLF_IDENTITY((subgroup_local_id % 2), uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, 0u ^ (subgroup_local_id % 2)), (true ? _GLF_IDENTITY(subgroup_local_id % 2, 0u ^ (subgroup_local_id % 2)) : _GLF_FUZZED(workgroup_size)))), 0u, (0u | 0u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) + (uvec3(0u, 0u, 0u)))))) << 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, clamp(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), subgroup_local_id % 2, subgroup_local_id % 2)), max(_GLF_IDENTITY(subgroup_local_id % 2, clamp(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), subgroup_local_id % 2, subgroup_local_id % 2)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, clamp(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), subgroup_local_id % 2, subgroup_local_id % 2)), (_GLF_IDENTITY(subgroup_local_id % 2, clamp(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), subgroup_local_id % 2, subgroup_local_id % 2))) / 1u)))))) | (max(_GLF_IDENTITY((subgroup_local_id % 2), uint(uvec4((subgroup_local_id % 2), 0u, (0u | 0u), 0u))), (subgroup_local_id % 2))))) == 0) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))))))
        return;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))
        {
         subgroupAll(false);
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       _GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, 2), ~ (~ (_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, 2), (true ? read = atomicLoad(buf[virtual_gid], 4, 64, 2) : _GLF_FUZZED(read))))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
          barrier();
         continue;
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5.7)), float(injectionSwitch.x), bool(true))))), (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              return;
             barrier();
             if(_GLF_DEAD(false))
              continue;
            }
           return;
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0) < injectionSwitch.y)), true)))))))
            {
             for(int _injected_loop_counter = (_GLF_IDENTITY(0 ^ 1, (0 ^ 1) + 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, int(_GLF_IDENTITY(int(3), 0 | (int(3)))))), int(3))))); _injected_loop_counter --)
              {
               barrier();
              }
            }
          }
         else
          {
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       subgroupAll(false);
       read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, (virtual_gid) * _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, 0u ^ (1u))))), _GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))) : _GLF_FUZZED(read)))))], 4, 64, 2);
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          break;
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   return;
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.5), _GLF_FUZZED(-5537.4748)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.5), _GLF_FUZZED(-5537.4748)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY((-53644 & 0) | int(_GLF_ZERO(0.0, injectionSwitch.x)), min((-53644 & 0) | int(_GLF_ZERO(0.0, injectionSwitch.x)), (-53644 & 0) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY((-53644 & 0) | int(_GLF_ZERO(0.0, injectionSwitch.x)), min((-53644 & 0) | int(_GLF_ZERO(0.0, injectionSwitch.x)), (-53644 & 0) | int(_GLF_ZERO(0.0, injectionSwitch.x))))) >> (0 >> _GLF_IDENTITY(int(1), int(1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(dot(vec4(1.0, sqrt(0.0), sin(0.0), 0.0), vec4(1.0, 0.0, sqrt(0.0), 0.0)), dot(vec4(1.0, sqrt(0.0), sin(0.0), 0.0), vec4(1.0, 0.0, sqrt(0.0), 0.0))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(dot(vec4(1.0, sqrt(0.0), sin(0.0), 0.0), vec4(1.0, 0.0, sqrt(0.0), 0.0)), dot(vec4(1.0, sqrt(0.0), sin(0.0), 0.0), vec4(1.0, 0.0, sqrt(0.0), 0.0))))), false, false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) / _GLF_IDENTITY(dot(vec4(1.0, sqrt(0.0), sin(0.0), 0.0), vec4(1.0, 0.0, sqrt(0.0), 0.0)), dot(vec4(1.0, sqrt(0.0), sin(0.0), 0.0), vec4(1.0, 0.0, sqrt(0.0), 0.0))))), false, false, false)), true), bvec2(bvec3(bvec2(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(dot(vec4(1.0, sqrt(0.0), sin(0.0), 0.0), vec4(1.0, 0.0, sqrt(0.0), 0.0)), dot(vec4(1.0, sqrt(0.0), sin(0.0), 0.0), vec4(1.0, 0.0, sqrt(0.0), 0.0))))), false, false, false)), true), false)))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-233.340), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(0.0)), bvec2(true, false))).x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-233.340), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(0.0)), bvec2(true, false))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-233.340), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(0.0)), bvec2(true, false))).x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-233.340), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(0.0)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-233.340), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(0.0)), bvec2(true, false))).x)))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(mat2(1.0), mat2(mat4(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))))) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))))))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))));
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), bool(bool((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)), ! (! _GLF_IDENTITY((bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false))), bool(bvec4(_GLF_IDENTITY((bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false))), true && ((bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false))))), false, false, false))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), ! (! (bool(_GLF_IDENTITY(false, (false) && true))))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u), uint(uvec3(virtual_gid, (_GLF_IDENTITY(126243u & _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) >> 0u))) | (0u)) << _GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) >> 0u))) | (0u)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) << 0u)), uint(6u))) - 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) >> 0u))) | (0u)) << _GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) >> 0u))) | (0u)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) << 0u)), uint(6u))) - 0u)), (0u & 134292u) | ((_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) >> 0u))) | (0u)) << _GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) >> 0u))) | (0u)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) << 0u)), uint(6u))) - 0u))))))), ~ (_GLF_IDENTITY(~ (126243u & _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) >> 0u))) | (0u)) << _GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) >> 0u))) | (0u)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) << 0u)), uint(6u))) - 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) >> 0u))) | (0u)) << _GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) >> 0u))) | (0u)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) << 0u)), uint(6u))) - 0u)), (0u & 134292u) | ((_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) >> 0u))) | (0u)) << _GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) >> 0u))) | (0u)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) << 0u)), uint(6u))) - 0u)))))))), (~ (126243u & _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) >> 0u))) | (0u)) << _GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) >> 0u))) | (0u)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) << 0u)), uint(6u))) - 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) >> 0u))) | (0u)) << _GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) >> 0u))) | (0u)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) << 0u)), uint(6u))) - 0u)), (0u & 134292u) | ((_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) >> 0u))) | (0u)) << _GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) >> 0u))) | (0u)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) << 0u)), uint(6u))) - 0u))))))))) << 0u)))), (_GLF_IDENTITY(1u ^ 0u, min(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)) ^ 0u, min(_GLF_IDENTITY(1u, (1u) | (1u)) ^ 0u, _GLF_IDENTITY(1u, (1u) | (1u)) ^ 0u)), _GLF_IDENTITY(1u ^ 0u, ~ (~ (1u ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 0u, (190591u & 0u))), (_GLF_IDENTITY(uint(uvec3(0u, 0u, (190591u & 0u))), max(uint(uvec3(0u, 0u, (190591u & 0u))), uint(uvec3(0u, 0u, (190591u & 0u)))))) >> 0u)), _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ ((0u)), uint(_GLF_IDENTITY(uint(~ ((0u))), clamp(uint(~ ((0u))), uint(~ ((0u))), uint(~ ((0u))))))))) | (0u)))))))))))], _GLF_IDENTITY(read, (read) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u ^ (uint(5u)))) * 1u), uint(5u)))), 4, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(sign(-7376)) : _GLF_IDENTITY(64, (true ? _GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(76340))) : _GLF_FUZZED(-94354))))), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
