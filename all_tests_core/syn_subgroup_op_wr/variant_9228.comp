#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bvec3(bool(bvec2(_GLF_DEAD(false), false)), false, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, determinant(mat4(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), sqrt(abs(0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0))).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || _GLF_IDENTITY(false, (false) && true))))))) && true))))))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((+ (-9.1 - -8.4)))), float(1.0), bool(true))), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, abs(1.0), sqrt(exp(0.0)))), max(float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), sqrt(exp(0.0)))), float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), _GLF_IDENTITY(sqrt(exp(0.0)), min(sqrt(exp(0.0)), _GLF_IDENTITY(sqrt(exp(0.0)), mix(float(_GLF_FUZZED(61.90)), float(sqrt(exp(0.0))), bool(true))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5644.4550) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.2))))), abs(1.0), sqrt(exp(0.0)))), max(float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), sqrt(exp(0.0)))), float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))))), _GLF_IDENTITY(sqrt(exp(0.0)), min(sqrt(exp(0.0)), _GLF_IDENTITY(sqrt(exp(0.0)), mix(float(_GLF_FUZZED(61.90)), float(sqrt(exp(0.0))), bool(true))))))))), mix(float(_GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), sqrt(exp(0.0)))), max(float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), sqrt(exp(0.0)))), float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), _GLF_IDENTITY(sqrt(exp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-182.228)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), min(sqrt(exp(0.0)), _GLF_IDENTITY(sqrt(exp(0.0)), mix(float(_GLF_FUZZED(61.90)), float(sqrt(exp(0.0))), bool(true)))))))))), float(_GLF_FUZZED(3.7)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), sqrt(exp(0.0)))), max(float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), sqrt(exp(0.0)))), float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), _GLF_IDENTITY(sqrt(exp(0.0)), min(sqrt(exp(0.0)), _GLF_IDENTITY(sqrt(exp(0.0)), mix(float(_GLF_FUZZED(61.90)), float(sqrt(exp(0.0))), bool(true))))))))), (_GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), sqrt(exp(0.0)))), max(float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), sqrt(exp(0.0)))), float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), _GLF_IDENTITY(sqrt(exp(0.0)), min(sqrt(_GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0)), _GLF_IDENTITY(sqrt(exp(0.0)), mix(float(_GLF_FUZZED(61.90)), float(sqrt(exp(0.0))), bool(true)))))))))) + abs(0.0))))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) + vec2(0.0, 0.0)))).y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, true, true)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), false))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0)) > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), ((injectionSwitch.x > injectionSwitch.y)) || false))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && _GLF_IDENTITY((true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true && (false))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0))).y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), false || _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true))))))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), false || _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true))))))))))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1.8)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true)))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, true)), ! (! (bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true))))))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), false || (bool(_GLF_IDENTITY(false, true && (false))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), max(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(min(gl_WorkGroupID, gl_WorkGroupID), _GLF_IDENTITY(uvec3(uvec3(min(gl_WorkGroupID, gl_WorkGroupID))), uvec3(0u, 0u, 0u) ^ (uvec3(uvec3(min(gl_WorkGroupID, gl_WorkGroupID))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), ! (! (bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))), (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, true, false)), (bool(bvec4(false, false, true, false))) || false), ! (! (bool(bvec4(false, false, true, false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uvec4(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 1u, (1u & 1u), 1u))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_size, uint(uvec4(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 1u, (1u & 1u), 1u))), 1u, 0u, 0u), max(uvec4(_GLF_IDENTITY(workgroup_size, uint(uvec4(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 1u, (1u & 1u), 1u))), 1u, 0u, 0u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_size, uint(uvec4(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 1u, (1u & 1u), 1u))), 1u, 0u, 0u), (uvec4(_GLF_IDENTITY(workgroup_size, uint(uvec4(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 1u, (1u & 1u), 1u))), 1u, 0u, 0u)) >> uvec4(0u, 0u, 0u, 0u)))))), workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.6) : 0.0)), length(_GLF_IDENTITY(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), min(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(3067.6713)), float(_GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), min(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), bool(true))))), max(min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), min(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), min(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), clamp(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), min(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))))), _GLF_IDENTITY(vec3(mat4(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), min(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(3067.6713)), float(_GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), min(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), bool(true))))), max(min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), min(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), min(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), clamp(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), min(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)), mix(vec3((vec3(mat4(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), min(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(3067.6713)), float(_GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), min(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), bool(true))))), max(min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), min(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), min(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), clamp(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), min(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))[0], (vec3(mat4(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), min(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(3067.6713)), float(_GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), min(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), bool(true))))), max(min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), min(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), min(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), clamp(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), min(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))[1], (vec3(mat4(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), min(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(3067.6713)), float(_GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), min(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), bool(true))))), max(min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), min(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), min(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), clamp(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), min(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))[2]), vec3(_GLF_FUZZED(1.2), _GLF_FUZZED(-3500.5514), _GLF_FUZZED(516.922)), bvec3(false, false, false))))), exp(0.0), _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), float(mat2x4(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, abs(0.0)))), determinant(mat2(0.0, 0.0, 0.0, 0.0))))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.6) : 0.0)), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), min(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), max(min(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-55.17)), float(0.0), bool(true))), 0.0)), 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), min(float(mat3x2(0.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 1.0)), float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), min(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))))))), exp(0.0), determinant(mat2(0.0, 0.0, 0.0, 0.0))))))) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(_GLF_IDENTITY(0.0, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.7)), bool(false)))), (false ? _GLF_FUZZED(20.56) : _GLF_IDENTITY((_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.7)), bool(false)))), ((_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.7)), bool(false))))) - 0.0))))), bool(true))))), exp(0.0), determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0))), (mat3(injectionSwitch.x, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), float(vec3(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0))), _GLF_IDENTITY(exp(0.0), clamp(_GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), exp(0.0))), exp(0.0), exp(0.0))), _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(determinant(mat2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.5))), 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? determinant(mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(1.8)))), float(_GLF_FUZZED(-606.416)), bool(false))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)), 1.0, 1.0, 1.0))), min(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0, length(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.7), max(_GLF_FUZZED(-1.7), _GLF_FUZZED(-1.7)))), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.7)), bool(false)))), mix(float(_GLF_FUZZED(-2.1)), float(0.0 + (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.7)), bool(false))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(true))))), exp(0.0), determinant(mat2(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0, 0.0))), (mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(exp(0.0), clamp(_GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), exp(0.0))), exp(0.0), exp(0.0))), _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? determinant(mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(1.8)))), float(_GLF_FUZZED(-606.416)), bool(false))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)), 1.0, 1.0, 1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(41.52))), mix(float(0.0), float(_GLF_FUZZED(-0.7)), bool(false)))))), bool(true))))), exp(0.0), determinant(mat2(0.0, 0.0, 0.0, 0.0))), (mat3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-0.2) : injectionSwitch.x)), 0.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(exp(0.0), clamp(_GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), exp(0.0))), exp(0.0), exp(0.0))), _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), (_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) ? determinant(mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(1.8)))), float(_GLF_FUZZED(-606.416)), bool(false))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) * sqrt(1.0)), 1.0, 1.0, 1.0))), min(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.7)), bool(false)))))), bool(true))))), exp(0.0), determinant(mat2(0.0, 0.0, 0.0, 0.0))), (mat3(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(exp(0.0), clamp(_GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), exp(0.0))), exp(0.0), exp(0.0))), _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? determinant(mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(1.8)))), float(_GLF_FUZZED(-606.416)), bool(false))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)), 1.0, 1.0, 1.0))), float(_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-526.559))), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.7)), bool(false)))))), bool(true))))), exp(0.0), determinant(mat2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, 1.0, abs(0.0), 0.0)), float(vec2(_GLF_IDENTITY(float(mat2(0.0, 1.0, abs(0.0), 0.0)), (false ? _GLF_FUZZED(-2.0) : float(mat2(0.0, 1.0, abs(0.0), 0.0)))), 0.0)))), 0.0, 0.0))), (mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), (float(float(0.0))) - tan(0.0))))), _GLF_IDENTITY(exp(0.0), clamp(_GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), exp(0.0))), exp(0.0), exp(0.0))), _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? determinant(mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(1.8)))), float(_GLF_FUZZED(-606.416)), bool(false))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)), 1.0, 1.0, 1.0)))))))) > injectionSwitch.y))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), exp(0.0), determinant(mat2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0))))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, _GLF_IDENTITY(0.0, float(mat3x2(0.0, round(length(normalize(1.0))), tan(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)))), 1.0, 0.0))), 1.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), max(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, sin(0.0), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9425.2919)), bool(false))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((2.3 - 4.4))), float(0.0), bool(true))), 1.0)), 0.0, 1.0)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-92.78) : float(mat3x4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), max(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, sin(0.0), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9425.2919)), bool(false))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((2.3 - 4.4))), float(0.0), bool(true))), 1.0)), 0.0, 1.0)))))), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), exp(0.0), determinant(mat2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0))))) > injectionSwitch.y))) || false))), false || (false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), exp(0.0), determinant(mat2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), exp(0.0), determinant(mat2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0))))))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, _GLF_IDENTITY(0.0, float(mat3x2(0.0, round(length(normalize(1.0))), tan(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)))), 1.0, 0.0))), 1.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), max(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, sin(0.0), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9425.2919)), bool(false))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((2.3 - 4.4))), float(0.0), bool(true))), 1.0)), 0.0, 1.0)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-92.78) : float(mat3x4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), max(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, sin(0.0), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9425.2919)), bool(false))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((2.3 - 4.4))), float(0.0), bool(true))), 1.0)), 0.0, 1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), max(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, sin(0.0), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9425.2919)), bool(false))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((2.3 - 4.4))), float(0.0), bool(true))), 1.0)), 0.0, 1.0)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-92.78) : float(mat3x4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), max(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, sin(0.0), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9425.2919)), bool(false))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((2.3 - 4.4))), float(0.0), bool(true))), 1.0)), 0.0, 1.0)))), 0.0 + (_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), max(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, sin(0.0), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9425.2919)), bool(false))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((2.3 - 4.4))), float(0.0), bool(true))), 1.0)), 0.0, 1.0)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-92.78) : float(mat3x4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), max(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, sin(0.0), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9425.2919)), bool(false))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((2.3 - 4.4))), float(0.0), bool(true))), 1.0)), 0.0, 1.0)))))), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), max(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, sin(0.0), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9425.2919)), bool(false))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((2.3 - 4.4))), float(0.0), bool(true))), 1.0)), 0.0, 1.0)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-92.78) : float(mat3x4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), max(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, sin(0.0), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9425.2919)), bool(false))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((2.3 - 4.4))), float(0.0), bool(true))), 1.0)), 0.0, 1.0)))))))), 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), length(vec3(0.0, 0.0, 0.0)), exp(0.0), determinant(mat2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0))))) > injectionSwitch.y))) || false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, sqrt(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), false || (bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(false, true), true, false)))))), bvec2(bvec2(bvec2(false, true)))))))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), false || (bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), false))))))))), true, false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), false || (bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(false, true), true, false)))))), bvec2(bvec2(bvec2(false, true)))))))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), false || (bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), false))))))))), true, false)))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), false || (bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(false, true), true, false)))))), bvec2(bvec2(bvec2(false, true)))))))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), false || (bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), false))))))))), true, false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec3((false), true, true)))), bool(bool(! (_GLF_IDENTITY((false), bool(bvec3((false), true, true))))))))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, _GLF_IDENTITY(dot(vec4(sin(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), length(vec3(0.0, 0.0, 0.0))), vec4(round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0)), dot(vec4(sin(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), length(vec3(0.0, 0.0, 0.0))), vec4(round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0))), 1.0, 0.0))).y)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(false, false, false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, max(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u) + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) << 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), max(_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)) + subgroup_base + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id), max((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id), _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)) + subgroup_local_id), min((workgroup_base + subgroup_base + subgroup_local_id), (workgroup_base + subgroup_base + subgroup_local_id))))) << 0u))), 0u | (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, max(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_local_id))) + subgroup_base + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) << 0u)))))) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, max(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 1u))), subgroup_base)) + subgroup_local_id, max(workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) << 0u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = 0;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (false ? _GLF_FUZZED(-71505) : _GLF_IDENTITY(64, min(64, 64))))) >> ((-2057 ^ 20946) & 0)), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0), (mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED(mix(sinh(586.301), -40.60, true))))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0), (mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED(mix(sinh(586.301), -40.60, true))))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)) && true))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 0.0))).x > injectionSwitch.y)) && true))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(false, true, true), true))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(false, true, true), true))), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(false, true, true), true))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(false, true, true), true))), false)))))))))), (bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(false, true, true), true))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(false, true, true), true))), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(false, true, true), true))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(false, true, true), true))), false))))))))))) && true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   barrier();
  }
 if(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) + 0u) % _GLF_IDENTITY(2, (_GLF_IDENTITY(true ? _GLF_IDENTITY(2, (false ? _GLF_FUZZED(60049) : 2)) : _GLF_FUZZED(mix(68523, 63785, true)), max(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(60049) : _GLF_IDENTITY(2, (2) | 0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(_GLF_IDENTITY(60049, (false ? _GLF_FUZZED(floatBitsToInt(3460.1588)) : 60049))) : 2)), (_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(_GLF_IDENTITY(60049, (false ? _GLF_FUZZED(floatBitsToInt(3460.1588)) : 60049))) : 2)), clamp(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(_GLF_IDENTITY(60049, (false ? _GLF_FUZZED(floatBitsToInt(3460.1588)) : 60049))) : 2)), _GLF_IDENTITY(2, (false ? _GLF_FUZZED(_GLF_IDENTITY(60049, (false ? _GLF_FUZZED(floatBitsToInt(3460.1588)) : 60049))) : 2)), _GLF_IDENTITY(2, (false ? _GLF_FUZZED(_GLF_IDENTITY(60049, (false ? _GLF_FUZZED(floatBitsToInt(3460.1588)) : 60049))) : 2))))) + 0), _GLF_IDENTITY(2, (false ? _GLF_FUZZED(60049) : 2)), _GLF_IDENTITY(2, (false ? _GLF_FUZZED(60049) : 2)))) : _GLF_FUZZED(mix(68523, 63785, true)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(60049) : 2)), clamp(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(_GLF_IDENTITY(60049, (false ? _GLF_FUZZED(floatBitsToInt(3460.1588)) : 60049))) : 2)), _GLF_IDENTITY(2, (false ? _GLF_FUZZED(60049) : 2)), _GLF_IDENTITY(2, (false ? _GLF_FUZZED(60049) : 2)))) : _GLF_FUZZED(mix(68523, 63785, true))) | (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(60049) : 2)), clamp(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(_GLF_IDENTITY(60049, (false ? _GLF_FUZZED(floatBitsToInt(3460.1588)) : 60049))) : 2)), _GLF_IDENTITY(2, (false ? _GLF_FUZZED(60049) : 2)), _GLF_IDENTITY(2, (false ? _GLF_FUZZED(60049) : 2)))) : _GLF_FUZZED(mix(68523, 63785, true)), (false ? _GLF_FUZZED(-69244) : true ? _GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(60049) : 2)), clamp(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(_GLF_IDENTITY(60049, (false ? _GLF_FUZZED(floatBitsToInt(3460.1588)) : 60049))) : 2)), _GLF_IDENTITY(2, (false ? _GLF_FUZZED(60049) : 2)), _GLF_IDENTITY(2, (false ? _GLF_FUZZED(60049) : 2)))) : _GLF_FUZZED(mix(68523, 63785, true)))))), _GLF_IDENTITY(true ? _GLF_IDENTITY(2, (false ? _GLF_FUZZED(60049) : _GLF_IDENTITY(2, 0 | (2)))) : _GLF_FUZZED(mix(68523, 63785, true)), int(ivec2(_GLF_IDENTITY(true ? _GLF_IDENTITY(2, (false ? _GLF_FUZZED(60049) : 2)) : _GLF_FUZZED(mix(68523, 63785, true)), min(true ? _GLF_IDENTITY(2, (false ? _GLF_FUZZED(60049) : 2)) : _GLF_FUZZED(mix(68523, 63785, true)), true ? _GLF_IDENTITY(2, (false ? _GLF_FUZZED(60049) : 2)) : _GLF_FUZZED(mix(68523, 63785, true)))), 0)))))))) == _GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, _GLF_IDENTITY(0, (0) + 0)), (clamp(0, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), min(_GLF_IDENTITY(0, (0) + 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), (_GLF_IDENTITY(0, (0) + 0)) << 0))))) | 0)), bool(_GLF_IDENTITY(bvec3((subgroup_local_id % 2) == _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), clamp(_GLF_IDENTITY(0, (0) + 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) + 0)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) + 0)), 0 | ((_GLF_IDENTITY(0, (0) + 0)))), (_GLF_IDENTITY(0, (0) + 0)), (_GLF_IDENTITY(0, (0) + 0))))), (true ? _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) + 0)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) + 0)), 0 | ((_GLF_IDENTITY(0, (0) + 0)))), (_GLF_IDENTITY(0, (0) + 0)), (_GLF_IDENTITY(0, (0) + 0))))), _GLF_IDENTITY(int(ivec2((~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) + 0)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) + 0)), 0 | ((_GLF_IDENTITY(0, (0) + 0)))), (_GLF_IDENTITY(0, (0) + 0)), (_GLF_IDENTITY(0, (0) + 0))))), 0)), (int(ivec2((~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) + 0)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) + 0)), 0 | ((_GLF_IDENTITY(0, (0) + 0)))), (_GLF_IDENTITY(0, (0) + 0)), (_GLF_IDENTITY(0, (0) + 0))))), 0))) << 0)) : _GLF_FUZZED(13626)))), _GLF_IDENTITY(0, (0) + 0))), _GLF_IDENTITY(0, (0) + 0))), min(_GLF_IDENTITY(0, (0) + 0), _GLF_IDENTITY(0, (0) + 0)))) - 0)), _GLF_IDENTITY((clamp(_GLF_IDENTITY(0, (0) | (0)), 0, _GLF_IDENTITY(0, (0) + 0))) | 0, clamp((clamp(_GLF_IDENTITY(0, (0) | (0)), 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-78483) : 0))) + 0))) | 0, (clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) + 0))))), (0) | (_GLF_IDENTITY(0, (0) << 0))), 0, _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((0), max((0), (0))) + 0, (_GLF_IDENTITY(_GLF_IDENTITY((0), max((0), (0))) + 0, 1 * (_GLF_IDENTITY(_GLF_IDENTITY((0), max((0), (0))) + 0, (_GLF_IDENTITY((0), max((0), (0))) + 0) | 0)))) / 1)))) | 0, (clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (0) | (0)), 0, _GLF_IDENTITY(0, (0) + 0))) | 0)))), min(_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), clamp(_GLF_IDENTITY(0, (0) + 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) + 0)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) + 0)), 0 | ((_GLF_IDENTITY(0, (0) + 0)))), (_GLF_IDENTITY(0, (0) + 0)), (_GLF_IDENTITY(0, (0) + 0))))), (true ? _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) + 0)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) + 0)), 0 | ((_GLF_IDENTITY(0, (0) + 0)))), (_GLF_IDENTITY(0, (0) + 0)), (_GLF_IDENTITY(0, (0) + 0))))), _GLF_IDENTITY(int(ivec2((~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) + 0)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) + 0)), 0 | ((_GLF_IDENTITY(0, (0) + 0)))), (_GLF_IDENTITY(0, (0) + 0)), (_GLF_IDENTITY(0, (0) + 0))))), 0)), (int(ivec2((~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) + 0)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) + 0)), 0 | ((_GLF_IDENTITY(0, (0) + 0)))), (_GLF_IDENTITY(0, (0) + 0)), (_GLF_IDENTITY(0, (0) + 0))))), 0))) << 0)) : _GLF_FUZZED(13626)))), _GLF_IDENTITY(0, (0) + 0))), _GLF_IDENTITY(0, (0) + 0))), min(_GLF_IDENTITY(0, (0) + 0), _GLF_IDENTITY(0, (0) + 0)))) - 0)), _GLF_IDENTITY((clamp(_GLF_IDENTITY(0, (0) | (0)), 0, _GLF_IDENTITY(0, (0) + 0))) | 0, clamp((clamp(_GLF_IDENTITY(0, (0) | (0)), 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-78483) : 0))) + 0))) | 0, (clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) + 0))))), (0) | (_GLF_IDENTITY(0, (0) << 0))), 0, _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((0), max((0), (0))) + 0, (_GLF_IDENTITY(_GLF_IDENTITY((0), max((0), (0))) + 0, 1 * (_GLF_IDENTITY(_GLF_IDENTITY((0), max((0), (0))) + 0, (_GLF_IDENTITY((0), max((0), (0))) + 0) | 0)))) / 1)))) | 0, (clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (0) | (0)), 0, _GLF_IDENTITY(0, (0) + 0))) | 0)))), _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), clamp(_GLF_IDENTITY(0, (0) + 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) + 0)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) + 0)), 0 | ((_GLF_IDENTITY(0, (0) + 0)))), (_GLF_IDENTITY(0, (0) + 0)), (_GLF_IDENTITY(0, (0) + 0))))), (true ? _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) + 0)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) + 0)), 0 | ((_GLF_IDENTITY(0, (0) + 0)))), (_GLF_IDENTITY(0, (0) + 0)), (_GLF_IDENTITY(0, (0) + 0))))), _GLF_IDENTITY(int(ivec2((~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) + 0)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) + 0)), 0 | ((_GLF_IDENTITY(0, (0) + 0)))), (_GLF_IDENTITY(0, (0) + 0)), (_GLF_IDENTITY(0, (0) + 0))))), 0)), (int(ivec2((~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) + 0)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) + 0)), 0 | ((_GLF_IDENTITY(0, (0) + 0)))), (_GLF_IDENTITY(0, (0) + 0)), (_GLF_IDENTITY(0, (0) + 0))))), 0))) << 0)) : _GLF_FUZZED(13626)))), _GLF_IDENTITY(0, (0) + 0))), _GLF_IDENTITY(0, (0) + 0))), min(_GLF_IDENTITY(0, (0) + 0), _GLF_IDENTITY(0, (0) + 0)))) - 0)), _GLF_IDENTITY((clamp(_GLF_IDENTITY(0, (0) | (0)), 0, _GLF_IDENTITY(0, (0) + 0))) | 0, clamp((clamp(_GLF_IDENTITY(0, (0) | (0)), 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-78483) : 0))) + 0))) | 0, (clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) + 0))))), (0) | (_GLF_IDENTITY(0, (0) << 0))), 0, _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((0), max((0), (0))) + 0, (_GLF_IDENTITY(_GLF_IDENTITY((0), max((0), (0))) + 0, 1 * (_GLF_IDENTITY(_GLF_IDENTITY((0), max((0), (0))) + 0, (_GLF_IDENTITY((0), max((0), (0))) + 0) | 0)))) / 1)))) | 0, (clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (0) | (0)), 0, _GLF_IDENTITY(0, (0) + 0))) | 0)))), (true ? _GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), clamp(_GLF_IDENTITY(0, (0) + 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) + 0)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) + 0)), 0 | ((_GLF_IDENTITY(0, (0) + 0)))), (_GLF_IDENTITY(0, (0) + 0)), (_GLF_IDENTITY(0, (0) + 0))))), (true ? _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) + 0)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) + 0)), 0 | ((_GLF_IDENTITY(0, (0) + 0)))), (_GLF_IDENTITY(0, (0) + 0)), (_GLF_IDENTITY(0, (0) + 0))))), _GLF_IDENTITY(int(ivec2((~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) + 0)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) + 0)), 0 | ((_GLF_IDENTITY(0, (0) + 0)))), (_GLF_IDENTITY(0, (0) + 0)), (_GLF_IDENTITY(0, (0) + 0))))), 0)), (int(ivec2((~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) + 0)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) + 0)), 0 | ((_GLF_IDENTITY(0, (0) + 0)))), (_GLF_IDENTITY(0, (0) + 0)), (_GLF_IDENTITY(0, (0) + 0))))), 0))) << 0)) : _GLF_FUZZED(13626)))), _GLF_IDENTITY(0, (0) + 0))), _GLF_IDENTITY(0, (0) + 0))), min(_GLF_IDENTITY(0, (0) + 0), _GLF_IDENTITY(0, (0) + 0)))) - 0)), _GLF_IDENTITY((clamp(_GLF_IDENTITY(0, (0) | (0)), 0, _GLF_IDENTITY(0, (0) + 0))) | 0, clamp((clamp(_GLF_IDENTITY(0, (0) | (0)), 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-78483) : 0))) + 0))) | 0, (clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) + 0))))), (0) | (_GLF_IDENTITY(0, (0) << 0))), 0, _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((0), max((0), (0))) + 0, (_GLF_IDENTITY(_GLF_IDENTITY((0), max((0), (0))) + 0, 1 * (_GLF_IDENTITY(_GLF_IDENTITY((0), max((0), (0))) + 0, (_GLF_IDENTITY((0), max((0), (0))) + 0) | 0)))) / 1)))) | 0, (clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (0) | (0)), 0, _GLF_IDENTITY(0, (0) + 0))) | 0)))) : _GLF_FUZZED(-78420))))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((subgroup_local_id % 2) == _GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, _GLF_IDENTITY(0, (0) + _GLF_IDENTITY(0, (0) | (0)))), (clamp(0, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), (_GLF_IDENTITY(0, (0) + 0)) * 1), _GLF_IDENTITY(0, (0) + 0))))) | 0)), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((subgroup_local_id % 2) == _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(clamp(0, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-25299) : 0)), (0) + _GLF_IDENTITY(0, (0) | (0)))), _GLF_IDENTITY((clamp(0, 0, _GLF_IDENTITY(0, (0) + 0))) | 0, min((clamp(0, 0, _GLF_IDENTITY(0, (0) + 0))) | 0, (clamp(0, 0, _GLF_IDENTITY(0, (0) + 0))) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(0, 0, _GLF_IDENTITY(0, (0) + _GLF_IDENTITY(0, (0) | (0)))), (clamp(0, 0, _GLF_IDENTITY(0, (0) + 0))) | 0), (_GLF_IDENTITY(clamp(0, 0, _GLF_IDENTITY(0, (0) + _GLF_IDENTITY(0, (0) | (0)))), (clamp(0, 0, _GLF_IDENTITY(0, (0) + 0))) | 0)) >> 0)) - (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(ivec4(0, 0, 1, 1))), 0)) << _GLF_IDENTITY(int(6), int(6))))), false, true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3((subgroup_local_id % 2) == _GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, _GLF_IDENTITY(0, (0) + _GLF_IDENTITY(0, (0) | (0)))), (clamp(0, 0, _GLF_IDENTITY(0, _GLF_IDENTITY((0), int(_GLF_IDENTITY(int((0)), (int((0))) | (int((0)))))) + 0))) | 0)), false, true))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3((subgroup_local_id % 2) == _GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, _GLF_IDENTITY(0, (0) + _GLF_IDENTITY(0, (0) | (0)))), (clamp(0, 0, _GLF_IDENTITY(0, (0) + 0))) | 0)), false, true))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3((subgroup_local_id % 2) == _GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, _GLF_IDENTITY(0, (0) + _GLF_IDENTITY(0, (0) | (0)))), (clamp(0, 0, _GLF_IDENTITY(0, (0) + 0))) | 0)), false, true))))), false)))), false))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) / 1.0), 0.0, 0.0, 1.0, 0.0, 1.0)), mix(float(float(mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) + 0.0)))) / 1.0), 0.0, 0.0, 1.0, 0.0, 1.0))), float(_GLF_FUZZED(19.93)), bool(false)))), (1.0) + 0.0)))))))) > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / round(length(normalize(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) / 1.0), 0.0, 0.0, 1.0, 0.0, 1.0)), mix(float(float(mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) + 0.0)))) / 1.0), 0.0, 0.0, 1.0, 0.0, 1.0))), float(_GLF_FUZZED(19.93)), bool(false)))), (1.0) + 0.0))))))), mix(float(_GLF_FUZZED(-784.139)), float((injectionSwitch.x) / round(length(normalize(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) / 1.0), 0.0, 0.0, 1.0, 0.0, 1.0)), mix(float(float(mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) + 0.0)))) / 1.0), 0.0, 0.0, 1.0, 0.0, 1.0))), float(_GLF_FUZZED(19.93)), bool(false)))), (1.0) + 0.0)))))))), bool(true)))) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) / 1.0), 0.0, 0.0, 1.0, 0.0, 1.0)), mix(float(float(mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) + 0.0)))) / 1.0), 0.0, 0.0, 1.0, 0.0, 1.0))), float(_GLF_FUZZED(19.93)), bool(false)))), (1.0) + 0.0)))))))) > injectionSwitch.y), false)))), bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))).x, (injectionSwitch.x) / round(length(normalize(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) / 1.0), 0.0, 0.0, 1.0, 0.0, 1.0)), mix(float(float(mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (1.0) - 0.0))))), 0.0 + (1.0))) + 0.0)))) / 1.0), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(float(1.0), 1.0 * (float(1.0)))), (float(_GLF_IDENTITY(float(1.0), 1.0 * (float(1.0))))) + 0.0))))), float(_GLF_FUZZED(19.93)), bool(false)))), (1.0) + 0.0)))))))) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) / 1.0), 0.0, 0.0, 1.0, 0.0, 1.0)), mix(float(float(mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) + 0.0)))) / 1.0), 0.0, 0.0, 1.0, 0.0, 1.0))), float(_GLF_FUZZED(19.93)), bool(false)))), (1.0) + 0.0)))))))) > injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / round(length(normalize(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) / 1.0), 0.0, 0.0, 1.0, 0.0, 1.0)), mix(float(float(mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) + 0.0)))) / 1.0), 0.0, 0.0, 1.0, 0.0, 1.0))), float(_GLF_FUZZED(19.93)), bool(false)))), (1.0) + 0.0))))))), mix(float(_GLF_FUZZED(-784.139)), float((injectionSwitch.x) / round(length(normalize(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) / 1.0), 0.0, 0.0, 1.0, 0.0, 1.0)), mix(float(float(mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) + 0.0)))) / 1.0), 0.0, 0.0, 1.0, 0.0, 1.0))), float(_GLF_FUZZED(19.93)), bool(false)))), (1.0) + 0.0)))))))), bool(true)))) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) / 1.0), 0.0, 0.0, 1.0, 0.0, 1.0)), mix(float(float(mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) + 0.0)))) / 1.0), 0.0, 0.0, 1.0, 0.0, 1.0))), float(_GLF_FUZZED(19.93)), bool(false)))), (1.0) + 0.0)))))))) > injectionSwitch.y), false)))), bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))).x, (injectionSwitch.x) / round(length(normalize(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) / 1.0), 0.0, 0.0, 1.0, 0.0, 1.0)), mix(float(float(mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (1.0) - 0.0))))), 0.0 + (1.0))) + 0.0)))) / 1.0), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(float(1.0), 1.0 * (float(1.0)))), (float(_GLF_IDENTITY(float(1.0), 1.0 * (float(1.0))))) + 0.0))))), float(_GLF_FUZZED(19.93)), bool(false)))), (1.0) + 0.0)))))))) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) / 1.0), 0.0, 0.0, 1.0, 0.0, 1.0)), mix(float(float(mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) + 0.0)))) / 1.0), 0.0, 0.0, 1.0, 0.0, 1.0))), float(_GLF_FUZZED(19.93)), bool(false)))), (1.0) + 0.0)))))))) > injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false)))))), bool(bvec3(bool(bool((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / round(length(normalize(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) / 1.0), 0.0, 0.0, 1.0, 0.0, 1.0)), mix(float(float(mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) + 0.0)))) / 1.0), 0.0, 0.0, 1.0, 0.0, 1.0))), float(_GLF_FUZZED(19.93)), bool(false)))), (1.0) + 0.0))))))), mix(float(_GLF_FUZZED(-784.139)), float((injectionSwitch.x) / round(length(normalize(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) / 1.0), 0.0, 0.0, 1.0, 0.0, 1.0)), mix(float(float(mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) + 0.0)))) / 1.0), 0.0, 0.0, 1.0, 0.0, 1.0))), float(_GLF_FUZZED(19.93)), bool(false)))), (1.0) + 0.0)))))))), bool(true)))) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) / 1.0), 0.0, 0.0, 1.0, 0.0, 1.0)), mix(float(float(mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) + 0.0)))) / 1.0), 0.0, 0.0, 1.0, 0.0, 1.0))), float(_GLF_FUZZED(19.93)), bool(false)))), (1.0) + 0.0)))))))) > injectionSwitch.y), false)))), bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))).x, (injectionSwitch.x) / round(length(normalize(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) / 1.0), 0.0, 0.0, 1.0, 0.0, 1.0)), mix(float(float(mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (1.0) - 0.0))))), 0.0 + (1.0))) + 0.0)))) / 1.0), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(float(1.0), 1.0 * (float(1.0)))), (float(_GLF_IDENTITY(float(1.0), 1.0 * (float(1.0))))) + 0.0))))), float(_GLF_FUZZED(19.93)), bool(false)))), (1.0) + 0.0)))))))) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) / 1.0), 0.0, 0.0, 1.0, 0.0, 1.0)), mix(float(float(mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) + 0.0)))) / 1.0), 0.0, 0.0, 1.0, 0.0, 1.0))), float(_GLF_FUZZED(19.93)), bool(false)))), (1.0) + 0.0)))))))) > injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false)))))), true, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4842.3721)), float(injectionSwitch.y), bool(true)))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4842.3721)), float(injectionSwitch.y), bool(true)))))))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(6.8) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
      barrier();
    }
   read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(2, (2) | 0), clamp(2, 2, 2))), min(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u ^ (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, 0 + (64)), 2))), _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) ^ 0u)) ^ 0u), (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(-19440) : _GLF_IDENTITY(64, ~ (~ (64))))), 2)) << 0u)));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool((false))))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), ! (! (bool(bvec4(false, true, true, false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))), false, false)))))), ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4((true), false, false, false))))), false))), false, false))))))))) && (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) || false))), ! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) || false)))), true && (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) || false)))))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), false, false, false))))) || false))
      return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), true, true)))))
    barrier();
   read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (false ? _GLF_FUZZED(-6159) : 4)), 64, 2);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))) && (_GLF_DEAD(false))))
  return;
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (read) | 0u), 4, _GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), int(1)), int(ivec2(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), int(1)), max(0 >> _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), int(1)), (0 >> _GLF_IDENTITY(int(1), int(1))) ^ 0))), 1))))), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
}
