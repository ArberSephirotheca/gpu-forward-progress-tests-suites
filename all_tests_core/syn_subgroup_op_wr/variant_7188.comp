#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 uint workgroup_id;
 bvec4 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(gl_WorkGroupID.x, bvec4(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))));
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u) * _GLF_struct_replacement_0.workgroup_id;
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) / 1u), _GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(1u, 0u | (1u))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) / 1u)) | (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), subgroup_size)), ~ (~ (subgroup_size)))) / 1u))) : _GLF_FUZZED((30610u ^ workgroup_base))), max((true ? _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(1u, 0u | (1u))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) / 1u)) | (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), subgroup_size)), ~ (~ (subgroup_size)))) / 1u))) : _GLF_FUZZED((30610u ^ workgroup_base))), (true ? _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(1u, 0u | (1u))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) / 1u)) | (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), subgroup_size)), ~ (~ (subgroup_size)))) / 1u))) : _GLF_FUZZED((30610u ^ workgroup_base)))))), (true ? _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(0u + (subgroup_id * subgroup_size), min(_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) ^ 0u)) * 1u), 0u + (subgroup_id * subgroup_size)))) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY((num_workgroup) | (num_workgroup), ((num_workgroup) | (num_workgroup)) * 1u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY((num_workgroup) | (num_workgroup), ((num_workgroup) | (num_workgroup)) * 1u)), 1u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY((num_workgroup) | (num_workgroup), ((num_workgroup) | (num_workgroup)) * 1u)), 1u, 0u), (false ? _GLF_FUZZED(uvec3(29080u, 91259u, 18191u)) : uvec3(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY((num_workgroup) | (num_workgroup), ((num_workgroup) | (num_workgroup)) * 1u)), 1u, 0u)))) ^ uvec3(0u, 0u, 0u))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, 1u * (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) >> 0u, ((subgroup_id) >> 0u) | 0u)))), _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))) * subgroup_size, 0u + (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))) : _GLF_FUZZED(num_workgroup)), max((_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, 1u * (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) >> 0u, ((subgroup_id) >> 0u) | 0u)))), _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))) * subgroup_size, 0u + (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))) : _GLF_FUZZED(num_workgroup)), (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, 1u * (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) >> 0u, ((subgroup_id) >> 0u) | 0u)))), _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))) * subgroup_size, 0u + (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))) : _GLF_FUZZED(num_workgroup))))))));
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) | 0u, clamp((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) | 0u, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) | 0u, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) | 0u)), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) | 0u, clamp((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) | 0u, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) | 0u, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_id)))) - 0u)) | 0u))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) << 0u)), uint(uvec2(uint(uint(_GLF_IDENTITY(workgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (workgroup_base)))), 1u)))) << 0u)), ~ (~ (workgroup_base))) + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) * 1u))), uint(uint(subgroup_local_id))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(uint(uint(subgroup_local_id)), uint(uvec4(uint(uint(subgroup_local_id)), 0u, 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))))))) + 1) >> 0u)) % subgroup_size, _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))) + 1, (_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))) + 1) >> 0u)) % subgroup_size) ^ 0u, 0u | (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))) + 1, (_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))) + 1) >> 0u)) % subgroup_size) ^ 0u))) : _GLF_IDENTITY(_GLF_FUZZED(128736u), (_GLF_FUZZED(128736u)) >> 0u), min(true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))) + 1) % subgroup_size, min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id)))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id)))), (true ? uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id)))) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id)))), clamp(uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id)))), 0u | (uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id)))))), uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id))))))))) + 1), ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id)))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id)))), (true ? uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id)))) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id)))), clamp(uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id)))), 0u | (uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id)))))), uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id))))))))) + 1)) ^ 0u) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))) + 1) % subgroup_size)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(128736u, clamp(_GLF_IDENTITY(128736u, max(128736u, 128736u)), 128736u, 128736u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_FUZZED(128736u), 0u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) | (6u))), (uint(_GLF_IDENTITY(6u, (6u) | (6u)))) >> 0u)))), uint(6u)))), (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)) ^ (uvec3(_GLF_FUZZED(128736u), 0u, (0u << _GLF_IDENTITY(uint(6u), uint(6u))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_IDENTITY(uvec3(_GLF_FUZZED(128736u), 0u, (0u << _GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_IDENTITY((uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), ~ (~ ((uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))))) ^ (uvec3(_GLF_FUZZED(128736u), 0u, (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_IDENTITY(uvec3(_GLF_FUZZED(128736u), 0u, (0u << _GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_IDENTITY((uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), ~ (~ ((uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))))) ^ (uvec3(_GLF_FUZZED(128736u), 0u, (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_IDENTITY(uvec3(_GLF_FUZZED(128736u), 0u, (0u << _GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_IDENTITY((uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), ~ (~ ((uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))))) ^ (uvec3(_GLF_FUZZED(128736u), 0u, (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))))))))), (true ? _GLF_IDENTITY(_GLF_FUZZED(128736u), max(_GLF_IDENTITY(_GLF_FUZZED(128736u), (_GLF_FUZZED(128736u)) >> 0u), _GLF_IDENTITY(_GLF_FUZZED(128736u), (_GLF_FUZZED(128736u)) | 0u))) : _GLF_FUZZED(subgroup_id))), true ? (_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))) + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) % subgroup_size : _GLF_FUZZED(128736u))))));
 uint read = 0;
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(uint(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), min(clamp(1, 1, 1), _GLF_IDENTITY(clamp(1, 1, 1), (false ? _GLF_FUZZED(-96762) : _GLF_IDENTITY(clamp(1, 1, 1), min(clamp(1, 1, 1), clamp(1, 1, 1))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, 0 | (1))))), max(uint(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, 0 | (1))))), uint(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, _GLF_IDENTITY(1, 0 | (1))), (clamp(1, 1, _GLF_IDENTITY(1, 0 | (1)))) << 0))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(1, max(1, 1))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : uint(1)))), ~ (~ ((_GLF_IDENTITY(uint(1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : uint(1))))))) | 0u, (false ? _GLF_FUZZED(clamp(62855u, subgroup_id, subgroup_base)) : _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(1, max(1, 1))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : uint(1)))), ~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(uint(1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(subgroup_id) : uint(1))))), 0u | (_GLF_IDENTITY(((_GLF_IDENTITY(uint(1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(subgroup_id) : uint(1))))), 0u + (((_GLF_IDENTITY(uint(1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(subgroup_id) : uint(1))))))))))) | 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 0.0)), max(float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 0.0)), float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 0.0)))))), float(_GLF_FUZZED(vec3(-57.50, -39.81, 25.23).b)), bool(false))), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 0.0)), max(float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 0.0)), float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 0.0)))))), float(_GLF_FUZZED(vec3(-57.50, -39.81, 25.23).b)), bool(false))), 1.0, 0.0, tan(0.0))), min(float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 0.0)), max(float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 0.0)), float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 0.0)))))), float(_GLF_FUZZED(vec3(-57.50, -39.81, 25.23).b)), bool(false))), 1.0, 0.0, tan(0.0))), float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 0.0)), max(float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 0.0)), float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 0.0)))))), float(_GLF_FUZZED(vec3(-57.50, -39.81, 25.23).b)), bool(false))), 1.0, 0.0, tan(0.0)))))))) ? _GLF_FUZZED(subgroup_id) : uint(1)))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) ? _GLF_FUZZED(subgroup_id) : uint(1)))) | 0u), clamp(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : uint(1)))) | 0u), _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) ? _GLF_FUZZED(subgroup_id) : uint(1)))) | 0u), _GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.5)), bool(false))))) ? _GLF_FUZZED(subgroup_id) : uint(1)))), ~ (~ ((_GLF_IDENTITY(uint(1), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.5)), bool(false))))) ? _GLF_FUZZED(subgroup_id) : uint(1))))))) | 0u)))) | 0u))), clamp(_GLF_IDENTITY(uint(1), min(uint(1), _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), false, false))))))), bool(bvec4((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), false, false))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), true, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), true, false), false))))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true))))) ? _GLF_FUZZED(subgroup_id) : uint(1)))) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(min(uint(1), _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)))) ? _GLF_FUZZED(subgroup_id) : uint(1)))) | 0u)), uint(uvec2(min(uint(1), _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(uint(1), 0u ^ (uint(1)))))) | 0u)), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(min(uint(1), _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)))) ? _GLF_FUZZED(subgroup_id) : uint(1)))) | 0u)), uint(uvec2(min(uint(1), _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(uint(1), 0u ^ (uint(1)))))) | 0u)), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))))), max(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(min(uint(1), _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)))) ? _GLF_FUZZED(subgroup_id) : uint(1)))) | 0u)), uint(uvec2(min(uint(1), _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(uint(1), 0u ^ (uint(1)))))) | 0u)), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(min(uint(1), _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)))) ? _GLF_FUZZED(subgroup_id) : uint(1)))) | 0u)), uint(uvec2(min(uint(1), _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(uint(1), 0u ^ (uint(1)))))) | 0u)), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))))), uint(uvec4(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(min(uint(1), _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)))) ? _GLF_FUZZED(subgroup_id) : uint(1)))) | 0u)), uint(uvec2(min(uint(1), _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(uint(1), 0u ^ (uint(1)))))) | 0u)), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))))), 0u, 1u, 1u)))))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), min(uint(1), _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))) ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), int(int(1)))) >> 0))))), ((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)), false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)), false, true)))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)), false, true)))), true, true), bvec3(bvec3(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)), false, true)))), true, true))))))))) ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) >> 0)))))) | ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)), false, true)))) ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))))), _GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), (_GLF_IDENTITY(1, int(int(1)))) >> 0), _GLF_IDENTITY(1, int(int(1)))))) >> 0))))))))) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), min(uint(1), _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_IDENTITY(! (! (bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (! (! (bool(bvec3(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x < injectionSwitch.y)), true))))) && true))))))) ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), int(int(1)))) >> 0)))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_IDENTITY(! (! (bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (! (! (bool(bvec3(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x < injectionSwitch.y)), true))))) && true))))))) ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), int(int(1)))) >> 0)))), ~ (~ (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_IDENTITY(! (! (bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (! (! (bool(bvec3(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x < injectionSwitch.y)), true))))) && true))))))) ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), int(int(1)))) >> 0)))), min(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_IDENTITY(! (! (bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (! (! (bool(bvec3(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x < injectionSwitch.y)), true))))) && true))))))) ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), int(int(1)))) >> 0)))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_IDENTITY(! (! (bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (! (! (bool(bvec3(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x < injectionSwitch.y)), true))))) && true))))))) ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), int(int(1)))) >> 0)))))))))) | (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_IDENTITY(! (! (bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (! (! (bool(bvec3(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x < injectionSwitch.y)), true))))) && true))))))) ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), int(int(1)))) >> 0))))))), ((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)), false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)), false, true)))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)), false, true)))), true, true), bvec3(bvec3(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(true, false || (true)), false, true)))), true, true))))))))) ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) >> 0)))))) | ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)), false, true)))) ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 0, (1 ^ 0)), clamp(ivec4(1, 1, 0, (1 ^ 0)), ivec4(1, 1, 0, (1 ^ 0)), ivec4(1, 1, 0, (1 ^ 0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))))), _GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), (_GLF_IDENTITY(1, int(int(1)))) >> 0), _GLF_IDENTITY(1, int(int(1)))))) >> 0))))))))) | 0u)))) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 0.0)), max(float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 0.0)), float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 0.0)))))), float(_GLF_FUZZED(vec3(-57.50, -39.81, 25.23).b)), bool(false))), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 0.0)), max(float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 0.0)), float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 0.0)))))), float(_GLF_FUZZED(vec3(-57.50, -39.81, 25.23).b)), bool(false))), 1.0, 0.0, tan(0.0))), min(float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 0.0)), max(float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 0.0)), float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 0.0)))))), float(_GLF_FUZZED(vec3(-57.50, -39.81, 25.23).b)), bool(false))), 1.0, 0.0, tan(0.0))), float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 0.0)), max(float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 0.0)), float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 0.0)))))), float(_GLF_FUZZED(vec3(-57.50, -39.81, 25.23).b)), bool(false))), 1.0, 0.0, tan(0.0)))))))) ? _GLF_FUZZED(subgroup_id) : uint(1)))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) ? _GLF_FUZZED(subgroup_id) : uint(1)))) | 0u), clamp(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : uint(1)))) | 0u), _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) ? _GLF_FUZZED(subgroup_id) : uint(1)))) | 0u), _GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.5)), bool(false))))) ? _GLF_FUZZED(subgroup_id) : uint(1)))), ~ (~ ((_GLF_IDENTITY(uint(1), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.5)), bool(false))))) ? _GLF_FUZZED(subgroup_id) : uint(1))))))) | 0u)))) | 0u))), clamp(_GLF_IDENTITY(uint(1), min(uint(1), _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), false, false))))))), bool(bvec4((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), false, false))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), true, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), true, false), false))))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true))))) ? _GLF_FUZZED(subgroup_id) : uint(1)))) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(min(uint(1), _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)))) ? _GLF_FUZZED(subgroup_id) : uint(1)))) | 0u)), uint(uvec2(min(uint(1), _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(uint(1), 0u ^ (uint(1)))))) | 0u)), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(min(uint(1), _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)))) ? _GLF_FUZZED(subgroup_id) : uint(1)))) | 0u)), uint(uvec2(min(uint(1), _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(uint(1), 0u ^ (uint(1)))))) | 0u)), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))))), max(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(min(uint(1), _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)))) ? _GLF_FUZZED(subgroup_id) : uint(1)))) | 0u)), uint(uvec2(min(uint(1), _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(uint(1), 0u ^ (uint(1)))))) | 0u)), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(min(uint(1), _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)))) ? _GLF_FUZZED(subgroup_id) : uint(1)))) | 0u)), uint(uvec2(min(uint(1), _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(uint(1), 0u ^ (uint(1)))))) | 0u)), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))))), uint(uvec4(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(min(uint(1), _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)))) ? _GLF_FUZZED(subgroup_id) : uint(1)))) | 0u)), uint(uvec2(min(uint(1), _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(uint(1), 0u ^ (uint(1)))))) | 0u)), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))))), 0u, 1u, 1u)))))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), min(uint(1), _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))) ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), int(int(1)))) >> 0))))), ((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)), false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)), false, true)))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)), false, true)))), true, true), bvec3(bvec3(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)), false, true)))), true, true))))))))) ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) >> 0)))))) | ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)), false, true)))) ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))))), _GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), (_GLF_IDENTITY(1, int(int(1)))) >> 0), _GLF_IDENTITY(1, int(int(1)))))) >> 0))))))))) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), min(uint(1), _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_IDENTITY(! (! (bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (! (! (bool(bvec3(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x < injectionSwitch.y)), true))))) && true))))))) ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), int(int(1)))) >> 0)))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_IDENTITY(! (! (bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (! (! (bool(bvec3(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x < injectionSwitch.y)), true))))) && true))))))) ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), int(int(1)))) >> 0)))), ~ (~ (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_IDENTITY(! (! (bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (! (! (bool(bvec3(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x < injectionSwitch.y)), true))))) && true))))))) ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), int(int(1)))) >> 0)))), min(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_IDENTITY(! (! (bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (! (! (bool(bvec3(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x < injectionSwitch.y)), true))))) && true))))))) ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), int(int(1)))) >> 0)))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_IDENTITY(! (! (bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (! (! (bool(bvec3(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x < injectionSwitch.y)), true))))) && true))))))) ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), int(int(1)))) >> 0)))))))))) | (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_IDENTITY(! (! (bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (! (! (bool(bvec3(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x < injectionSwitch.y)), true))))) && true))))))) ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), int(int(1)))) >> 0))))))), ((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)), false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)), false, true)))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)), false, true)))), true, true), bvec3(bvec3(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(true, false || (true)), false, true)))), true, true))))))))) ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) >> 0)))))) | ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)), false, true)))) ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 0, (1 ^ 0)), clamp(ivec4(1, 1, 0, (1 ^ 0)), ivec4(1, 1, 0, (1 ^ 0)), ivec4(1, 1, 0, (1 ^ 0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))))), _GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), (_GLF_IDENTITY(1, int(int(1)))) >> 0), _GLF_IDENTITY(1, int(int(1)))))) >> 0))))))))) | 0u)))) / 1u)))) >> (0u | 0u))) + (0u | 0u)), 4, 64, 4);
 if((subgroup_local_id % 2) == _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, _GLF_IDENTITY(0, (0) | (0)), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, sqrt(exp(0.0)), 1.0, determinant(mat3(determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, sqrt(1.0), 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, sqrt(1.0), 0.0))), tan(0.0), 0.0))).y)))), max(int(ivec3(0, _GLF_IDENTITY(0, (0) | (0)), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, sqrt(exp(0.0)), 1.0, determinant(mat3(determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, sqrt(1.0), 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, sqrt(1.0), 0.0))), tan(0.0), 0.0))).y)))), int(ivec3(0, _GLF_IDENTITY(0, (0) | (0)), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, sqrt(exp(0.0)), 1.0, determinant(mat3(determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, sqrt(1.0), 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, sqrt(1.0), 0.0))), tan(0.0), 0.0))).y))))))))
  {
   subgroupAll(false);
   read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 1u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 1u, 0u))), clamp(_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 1u, 0u))), _GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 1u, 0u))), _GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 1u, 0u)))))) ^ 0u), (_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 1u, 0u)))) << 0u), ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) | 0u)) / 1u)) ^ 0u)), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), min(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | (_GLF_IDENTITY(uint(6u), min(_GLF_IDENTITY(uint(6u), min(uint(6u), _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(uint(uint(6u)), (uint(uint(6u))) << 0u))))), uint(6u)))))))), max(_GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, 0u ^ (6u)))), _GLF_IDENTITY(uint(6u), uint(6u))))) * (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(num_workgroup)))], _GLF_IDENTITY((_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(num_workgroup)))], (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(num_workgroup)))], (buf[_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(num_workgroup)))]) + 0u)) | 0u)), ((_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(num_workgroup)))], (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(num_workgroup)))], (buf[_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(num_workgroup)))]) + 0u)) | 0u))) | ((_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(num_workgroup)))], (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(num_workgroup)))], (buf[_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(num_workgroup)))]) + 0u)) | 0u)))) >> 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 1u, 0u))), ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) | _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))) / 1u)) ^ 0u)), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), min(uint(6u), uint(6u)))), max(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(uint(uint(6u)), min(uint(uint(6u)), uint(uint(6u))))))), _GLF_IDENTITY(uint(6u), uint(6u))))) * (buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(true, (true) || false) ? virtual_gid : _GLF_FUZZED(num_workgroup)))]))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / 1u)))), uint(uvec3(_GLF_IDENTITY(buf[virtual_gid], 0u ^ (_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(read) : buf[virtual_gid])))), _GLF_IDENTITY(1u, (1u) >> 0u), 0u))), ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, _GLF_IDENTITY((_GLF_IDENTITY(6u, (6u) | 0u)) / 1u, 1u * ((_GLF_IDENTITY(6u, (6u) | 0u)) / 1u)))) ^ 0u)), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), min(uint(6u), uint(6u)))), max(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u))))), uint(6u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), min(uint(6u), uint(6u)))), max(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u))))), uint(6u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), min(uint(6u), uint(6u)))), max(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u))))), uint(6u))))))) * (buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, true)))))), ! (! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, true))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), true), bvec2(bvec4(bvec2(true, true), false, true)))))), ! (! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, true)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? virtual_gid : _GLF_FUZZED(num_workgroup)))])))), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, min(2, 2)), 2)), (2) / 1));
  }
 else
  {
   subgroupAll(false);
   read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), virtual_gid, virtual_gid)), (virtual_gid) / 1u)], (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), (virtual_gid) / 1u)], uint(uvec4(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), (virtual_gid) / 1u)], 0u, 0u, _GLF_IDENTITY(1u, (1u) | (1u))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | 0u)) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], buf[virtual_gid]))) | 0u)) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | 0u)) - 0u), (_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), (buf[virtual_gid]) | 0u)) - 0u)) ^ 0u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | 0u)) - 0u))), buf[virtual_gid])), 4, 64, 2);
  }
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}
