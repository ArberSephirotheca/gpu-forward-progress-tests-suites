#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(1.0))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(1.0))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(1.0)))))) || false)) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), _GLF_IDENTITY((~ (gl_WorkGroupID)), clamp((~ (gl_WorkGroupID)), (~ (gl_WorkGroupID)), _GLF_IDENTITY((~ (gl_WorkGroupID)), ((~ (gl_WorkGroupID))) >> uvec3(0u, 0u, 0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), max(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u))))), max(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), max(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), max(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u))))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), max(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u))))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), max(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u))))), max(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), max(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), max(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u))))))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), max(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), max(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u)))))), ~ (~ (clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, (0u) - 0u))) + 0u), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) - 0u))))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), max(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u))))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u | ((0u))) - 0u)) + 0u), 0u, 0u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), max(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, 1u * ((0u) - 0u)))) + 0u), 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), _GLF_IDENTITY(0u, (0u) / (1u & 1u)), 0u))))), max(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), 0u ^ (_GLF_IDENTITY(0u, (0u) - 0u)))) * 1u)) + 0u), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), (_GLF_IDENTITY(0u, (0u) - 0u)) >> 0u), _GLF_IDENTITY(0u, (0u) - 0u)))) + 0u), 0u, 0u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) - 0u)) + 0u, ((_GLF_IDENTITY(0u, (0u) - 0u)) + 0u) | 0u)), 0u, 0u), max(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) << 0u))), (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), max(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) - 0u)) + 0u), 0u, 0u))))))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY((0u), ((0u)) - 0u) - 0u)) + 0u), 0u, 0u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), _GLF_IDENTITY(max(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u)), max(max(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u)), max(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), max(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u))))), (false ? _GLF_FUZZED((uvec3(31260u, 23843u, 94350u) << uvec3(33834u, 50733u, 43986u))) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(workgroup_size) : 0u))), 0u, 0u), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), max(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(13752u, 79286u, 129156u)) : (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) - 0u)) + 0u, min((_GLF_IDENTITY(0u, (0u) - 0u)) + 0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u))), 0u, 0u), max(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) - 0u)) + 0u), 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u))))))))))))))))), (_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), _GLF_IDENTITY((~ (gl_WorkGroupID)), clamp((~ (gl_WorkGroupID)), (~ (gl_WorkGroupID)), _GLF_IDENTITY((~ (gl_WorkGroupID)), ((~ (gl_WorkGroupID))) >> uvec3(0u, 0u, 0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), max(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u))))), max(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), max(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), max(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u))))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), max(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u))))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), max(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u))))), max(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), max(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), max(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u))))))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), max(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), max(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u)))))), ~ (~ (clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, (0u) - 0u))) + 0u), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) - 0u))))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), max(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u))))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u | ((0u))) - 0u)) + 0u), 0u, 0u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), max(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, 1u * ((0u) - 0u)))) + 0u), 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), _GLF_IDENTITY(0u, (0u) / (1u & 1u)), 0u))))), max(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), 0u ^ (_GLF_IDENTITY(0u, (0u) - 0u)))) * 1u)) + 0u), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), (_GLF_IDENTITY(0u, (0u) - 0u)) >> 0u), _GLF_IDENTITY(0u, (0u) - 0u)))) + 0u), 0u, 0u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) - 0u)) + 0u, ((_GLF_IDENTITY(0u, (0u) - 0u)) + 0u) | 0u)), 0u, 0u), max(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) << 0u))), (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), max(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) - 0u)) + 0u), 0u, 0u))))))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY((0u), ((0u)) - 0u) - 0u)) + 0u), 0u, 0u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), _GLF_IDENTITY(max(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u)), max(max(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u)), max(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), max(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u))))), (false ? _GLF_FUZZED((uvec3(31260u, 23843u, 94350u) << uvec3(33834u, 50733u, 43986u))) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(workgroup_size) : 0u))), 0u, 0u), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), max(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(13752u, 79286u, 129156u)) : (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) - 0u)) + 0u, min((_GLF_IDENTITY(0u, (0u) - 0u)) + 0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u))), 0u, 0u), max(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) - 0u)) + 0u), 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u), 0u, 0u)))))))))))))))))) >> uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec3(_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), bool(bool((_GLF_DEAD(false))))) || false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, false || (false))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, false || (false))), false, true)))))), (_GLF_DEAD(false)) || false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false)))))))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size)) + 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size)) + 0u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size)) + 0u)))));
 uint read = 0;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.2)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))))) && _GLF_IDENTITY(true, (true) || false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED((-330.461 - 66.89)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4764.4223), _GLF_FUZZED(3.8)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))[0], injectionSwitch[1])).x)) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))) ? _GLF_FUZZED(-5.0) : injectionSwitch.y)))), ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0)), (vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0))) * mat2(1.0))).y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(879.389)), bool(false))), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), false, true)))), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_IDENTITY(true, (true) || false) && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED((-330.461 - 66.89)) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5.0) : injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-148.345, 48.09, 2629.5818, -4.1)) : mat2(1.0)))).y), false, _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), true && ((true)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), false, true)), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), false, true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), false, true)), bvec3(bvec3(bvec3(bvec3(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), false, true)))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), false, true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), false, true)), bvec3(bvec3(bvec3(bvec3(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), false, true)))))))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec4(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, true), false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y)))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, true, false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, true, false))))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, true, false)))))) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))))), (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 0.0, length(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 0.0, tan(0.0), 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(injectionSwitch.x, 1.0, 0.0, length(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 0.0, tan(0.0), 0.0))))) < injectionSwitch.y)), false)), ! (! (bool(bvec2(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 0.0, length(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 0.0, tan(0.0), 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(injectionSwitch.x, 1.0, 0.0, length(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 0.0, tan(0.0), 0.0))))) < injectionSwitch.y)), false)))))))))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (injectionSwitch.x < injectionSwitch.y)))) && true))
  {
   if(_GLF_IDENTITY((subgroup_local_id % 2) == 0, ! (! ((subgroup_local_id % 2) == 0))))
    {
     subgroupAll(false);
     read = atomicLoad(buf[virtual_gid], 4, 64, 2);
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, true))), false, false, true)))))));
     read = atomicLoad(buf[virtual_gid], 4, 64, 2);
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
}
